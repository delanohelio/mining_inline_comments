{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NzQzNjcz", "number": 1173, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwOToyMToxNlrODbJhJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzo1MDo1M1rODocMfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Nzk0MDg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingExerciseResource.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwOToyMToxNlrOFid38A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzo0OTo1NFrOF2_Z1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4NTM2MA==", "bodyText": "Why is the entity id a path variable here? As far as I can see it's normally not included explicitly in the path for our PUT endpoints. Is there a specific reason why it's needed here?", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r371685360", "createdAt": "2020-01-28T09:21:16Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingExerciseResource.java", "diffHunk": "@@ -116,17 +116,18 @@ public ModelingExerciseResource(ModelingExerciseRepository modelingExerciseRepos\n      * PUT /modeling-exercises : Updates an existing modelingExercise.\n      *\n      * @param modelingExercise the modelingExercise to update\n+     * @param exerciseId the id of the exercise\n      * @param notificationText the text shown to students\n      * @return the ResponseEntity with status 200 (OK) and with body the updated modelingExercise, or with status 400 (Bad Request) if the modelingExercise is not valid, or with\n      *         status 500 (Internal Server Error) if the modelingExercise couldn't be updated\n      * @throws URISyntaxException if the Location URI syntax is incorrect\n      */\n-    @PutMapping(\"/modeling-exercises\")\n+    @PutMapping(\"/modeling-exercises/{exerciseId}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebabbe1986b7ed5780d0984e92ff352d0ee9e1ef"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcwNDY2NA==", "bodyText": "The main reason is to conform to the standards defined for REST endpoints. PUT endpoints should always include the entity id. I did couple of changes to make it clear that we need it in the code. Now we also check if the modeling exercise exists in the database prior to storing update modeling exercise", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r371704664", "createdAt": "2020-01-28T09:58:35Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingExerciseResource.java", "diffHunk": "@@ -116,17 +116,18 @@ public ModelingExerciseResource(ModelingExerciseRepository modelingExerciseRepos\n      * PUT /modeling-exercises : Updates an existing modelingExercise.\n      *\n      * @param modelingExercise the modelingExercise to update\n+     * @param exerciseId the id of the exercise\n      * @param notificationText the text shown to students\n      * @return the ResponseEntity with status 200 (OK) and with body the updated modelingExercise, or with status 400 (Bad Request) if the modelingExercise is not valid, or with\n      *         status 500 (Internal Server Error) if the modelingExercise couldn't be updated\n      * @throws URISyntaxException if the Location URI syntax is incorrect\n      */\n-    @PutMapping(\"/modeling-exercises\")\n+    @PutMapping(\"/modeling-exercises/{exerciseId}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4NTM2MA=="}, "originalCommit": {"oid": "ebabbe1986b7ed5780d0984e92ff352d0ee9e1ef"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxMzUzMA==", "bodyText": "Oh but then the behavior of the endpoint has been changed by the refactoring since it could be used before for both creating and updating whereas now it can only be used for updating. Did you check if all current usages are still valid with the new behavior?", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r371713530", "createdAt": "2020-01-28T10:15:27Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingExerciseResource.java", "diffHunk": "@@ -116,17 +116,18 @@ public ModelingExerciseResource(ModelingExerciseRepository modelingExerciseRepos\n      * PUT /modeling-exercises : Updates an existing modelingExercise.\n      *\n      * @param modelingExercise the modelingExercise to update\n+     * @param exerciseId the id of the exercise\n      * @param notificationText the text shown to students\n      * @return the ResponseEntity with status 200 (OK) and with body the updated modelingExercise, or with status 400 (Bad Request) if the modelingExercise is not valid, or with\n      *         status 500 (Internal Server Error) if the modelingExercise couldn't be updated\n      * @throws URISyntaxException if the Location URI syntax is incorrect\n      */\n-    @PutMapping(\"/modeling-exercises\")\n+    @PutMapping(\"/modeling-exercises/{exerciseId}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4NTM2MA=="}, "originalCommit": {"oid": "ebabbe1986b7ed5780d0984e92ff352d0ee9e1ef"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg3NjY2NQ==", "bodyText": "Yes, I checked that the creation and updating of the modeling exercise works properly. I also decided to change the update for the modeling submission. This endpoint is a bit more dangerous so I will still have to test it.", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r371876665", "createdAt": "2020-01-28T15:34:15Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingExerciseResource.java", "diffHunk": "@@ -116,17 +116,18 @@ public ModelingExerciseResource(ModelingExerciseRepository modelingExerciseRepos\n      * PUT /modeling-exercises : Updates an existing modelingExercise.\n      *\n      * @param modelingExercise the modelingExercise to update\n+     * @param exerciseId the id of the exercise\n      * @param notificationText the text shown to students\n      * @return the ResponseEntity with status 200 (OK) and with body the updated modelingExercise, or with status 400 (Bad Request) if the modelingExercise is not valid, or with\n      *         status 500 (Internal Server Error) if the modelingExercise couldn't be updated\n      * @throws URISyntaxException if the Location URI syntax is incorrect\n      */\n-    @PutMapping(\"/modeling-exercises\")\n+    @PutMapping(\"/modeling-exercises/{exerciseId}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4NTM2MA=="}, "originalCommit": {"oid": "ebabbe1986b7ed5780d0984e92ff352d0ee9e1ef"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg1NzY4OQ==", "bodyText": "UPDATE\nFinished with the testing. Can you check it now?", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r373857689", "createdAt": "2020-02-02T16:21:04Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingExerciseResource.java", "diffHunk": "@@ -116,17 +116,18 @@ public ModelingExerciseResource(ModelingExerciseRepository modelingExerciseRepos\n      * PUT /modeling-exercises : Updates an existing modelingExercise.\n      *\n      * @param modelingExercise the modelingExercise to update\n+     * @param exerciseId the id of the exercise\n      * @param notificationText the text shown to students\n      * @return the ResponseEntity with status 200 (OK) and with body the updated modelingExercise, or with status 400 (Bad Request) if the modelingExercise is not valid, or with\n      *         status 500 (Internal Server Error) if the modelingExercise couldn't be updated\n      * @throws URISyntaxException if the Location URI syntax is incorrect\n      */\n-    @PutMapping(\"/modeling-exercises\")\n+    @PutMapping(\"/modeling-exercises/{exerciseId}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4NTM2MA=="}, "originalCommit": {"oid": "ebabbe1986b7ed5780d0984e92ff352d0ee9e1ef"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNjIyOA==", "bodyText": "This makes our whole REST API inconsistent. I think we should revert this change!", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r393206228", "createdAt": "2020-03-16T17:49:54Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingExerciseResource.java", "diffHunk": "@@ -116,17 +116,18 @@ public ModelingExerciseResource(ModelingExerciseRepository modelingExerciseRepos\n      * PUT /modeling-exercises : Updates an existing modelingExercise.\n      *\n      * @param modelingExercise the modelingExercise to update\n+     * @param exerciseId the id of the exercise\n      * @param notificationText the text shown to students\n      * @return the ResponseEntity with status 200 (OK) and with body the updated modelingExercise, or with status 400 (Bad Request) if the modelingExercise is not valid, or with\n      *         status 500 (Internal Server Error) if the modelingExercise couldn't be updated\n      * @throws URISyntaxException if the Location URI syntax is incorrect\n      */\n-    @PutMapping(\"/modeling-exercises\")\n+    @PutMapping(\"/modeling-exercises/{exerciseId}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4NTM2MA=="}, "originalCommit": {"oid": "ebabbe1986b7ed5780d0984e92ff352d0ee9e1ef"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Nzk1MDczOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwOToyNDozM1rOFid-GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwOTo0MDozMVrOFiedfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4NjkzNg==", "bodyText": "The naming seems very generic. Shouldn't modeling be in it somewhere since it only supports modeling exercises?", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r371686936", "createdAt": "2020-01-28T09:24:33Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java", "diffHunk": "@@ -323,9 +323,9 @@ else if (!authCheckService.isAtLeastInstructorForExercise(exercise)) {\n      * @param participationId the participationId for which to find the submission and data for the modeling editor\n      * @return the ResponseEntity with the submission as body\n      */\n-    @GetMapping(\"/modeling-editor/{participationId}\")\n+    @GetMapping(\"/participations/{participationId}/latest-submission\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebabbe1986b7ed5780d0984e92ff352d0ee9e1ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY5NDk3NA==", "bodyText": "True. Missed it somehow. I renamed it to latest-modeling-submission", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r371694974", "createdAt": "2020-01-28T09:40:31Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java", "diffHunk": "@@ -323,9 +323,9 @@ else if (!authCheckService.isAtLeastInstructorForExercise(exercise)) {\n      * @param participationId the participationId for which to find the submission and data for the modeling editor\n      * @return the ResponseEntity with the submission as body\n      */\n-    @GetMapping(\"/modeling-editor/{participationId}\")\n+    @GetMapping(\"/participations/{participationId}/latest-submission\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4NjkzNg=="}, "originalCommit": {"oid": "ebabbe1986b7ed5780d0984e92ff352d0ee9e1ef"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Nzk1ODM3OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/ModelingExerciseIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwOToyNzowNVrOFieC0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxMDozODo1OFrOFkhHGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4ODE0Nw==", "bodyText": "The comment is no longer relevant.", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r371688147", "createdAt": "2020-01-28T09:27:05Z", "author": {"login": "madwau"}, "path": "src/test/java/de/tum/in/www1/artemis/ModelingExerciseIntegrationTest.java", "diffHunk": "@@ -117,15 +117,16 @@ public void testCreateModelingExercise_asInstructor() throws Exception {\n     public void testUpdateModelingExercise_asInstructor() throws Exception {\n         ModelingExercise modelingExercise = modelingExerciseUtilService.createModelingExercise(classExercise.getCourse().getId());\n         // The PUT request basically forwards to POST in case the modeling exercise id is not yet set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebabbe1986b7ed5780d0984e92ff352d0ee9e1ef"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgzNTU0NQ==", "bodyText": "Good catch!", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r373835545", "createdAt": "2020-02-02T10:38:58Z", "author": {"login": "maxr96"}, "path": "src/test/java/de/tum/in/www1/artemis/ModelingExerciseIntegrationTest.java", "diffHunk": "@@ -117,15 +117,16 @@ public void testCreateModelingExercise_asInstructor() throws Exception {\n     public void testUpdateModelingExercise_asInstructor() throws Exception {\n         ModelingExercise modelingExercise = modelingExerciseUtilService.createModelingExercise(classExercise.getCourse().getId());\n         // The PUT request basically forwards to POST in case the modeling exercise id is not yet set.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY4ODE0Nw=="}, "originalCommit": {"oid": "ebabbe1986b7ed5780d0984e92ff352d0ee9e1ef"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODEyMzg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingExerciseResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMDoxNjo1N1rOFifpSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTozMjo0OFrOFipfvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxNDM3OQ==", "bodyText": "I think the second condition should have a different error message since that could be pretty confusing otherwise if the exercise actually exists but there is just an id mismatch.", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r371714379", "createdAt": "2020-01-28T10:16:57Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingExerciseResource.java", "diffHunk": "@@ -116,25 +111,28 @@ public ModelingExerciseResource(ModelingExerciseRepository modelingExerciseRepos\n      * PUT /modeling-exercises : Updates an existing modelingExercise.\n      *\n      * @param modelingExercise the modelingExercise to update\n+     * @param exerciseId the id of the exercise\n      * @param notificationText the text shown to students\n      * @return the ResponseEntity with status 200 (OK) and with body the updated modelingExercise, or with status 400 (Bad Request) if the modelingExercise is not valid, or with\n      *         status 500 (Internal Server Error) if the modelingExercise couldn't be updated\n      * @throws URISyntaxException if the Location URI syntax is incorrect\n      */\n-    @PutMapping(\"/modeling-exercises\")\n+    @PutMapping(\"/modeling-exercises/{exerciseId}\")\n     @PreAuthorize(\"hasAnyRole('INSTRUCTOR', 'ADMIN')\")\n-    public ResponseEntity<ModelingExercise> updateModelingExercise(@RequestBody ModelingExercise modelingExercise,\n+    public ResponseEntity<ModelingExercise> updateModelingExercise(@PathVariable Long exerciseId, @RequestBody ModelingExercise modelingExercise,\n             @RequestParam(value = \"notificationText\", required = false) String notificationText) throws URISyntaxException {\n         log.debug(\"REST request to update ModelingExercise : {}\", modelingExercise);\n-        if (modelingExercise.getId() == null) {\n-            return createModelingExercise(modelingExercise);\n-        }\n \n         ResponseEntity<ModelingExercise> responseFailure = checkModelingExercise(modelingExercise);\n         if (responseFailure != null) {\n             return responseFailure;\n         }\n \n+        // Check that the modeling exercise id is correct\n+        if (!modelingExerciseRepository.existsById(exerciseId) || !exerciseId.equals(modelingExercise.getId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f3a0dfd62221462c264641f7a1d1f2c3086a90"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg3NTc3NA==", "bodyText": "You are right I split it into two checks. First is done on the ModelingExerciseService and second one here. The second one now says The updated modeling exercise doesn't match the given id if failed.", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r371875774", "createdAt": "2020-01-28T15:32:48Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingExerciseResource.java", "diffHunk": "@@ -116,25 +111,28 @@ public ModelingExerciseResource(ModelingExerciseRepository modelingExerciseRepos\n      * PUT /modeling-exercises : Updates an existing modelingExercise.\n      *\n      * @param modelingExercise the modelingExercise to update\n+     * @param exerciseId the id of the exercise\n      * @param notificationText the text shown to students\n      * @return the ResponseEntity with status 200 (OK) and with body the updated modelingExercise, or with status 400 (Bad Request) if the modelingExercise is not valid, or with\n      *         status 500 (Internal Server Error) if the modelingExercise couldn't be updated\n      * @throws URISyntaxException if the Location URI syntax is incorrect\n      */\n-    @PutMapping(\"/modeling-exercises\")\n+    @PutMapping(\"/modeling-exercises/{exerciseId}\")\n     @PreAuthorize(\"hasAnyRole('INSTRUCTOR', 'ADMIN')\")\n-    public ResponseEntity<ModelingExercise> updateModelingExercise(@RequestBody ModelingExercise modelingExercise,\n+    public ResponseEntity<ModelingExercise> updateModelingExercise(@PathVariable Long exerciseId, @RequestBody ModelingExercise modelingExercise,\n             @RequestParam(value = \"notificationText\", required = false) String notificationText) throws URISyntaxException {\n         log.debug(\"REST request to update ModelingExercise : {}\", modelingExercise);\n-        if (modelingExercise.getId() == null) {\n-            return createModelingExercise(modelingExercise);\n-        }\n \n         ResponseEntity<ModelingExercise> responseFailure = checkModelingExercise(modelingExercise);\n         if (responseFailure != null) {\n             return responseFailure;\n         }\n \n+        // Check that the modeling exercise id is correct\n+        if (!modelingExerciseRepository.existsById(exerciseId) || !exerciseId.equals(modelingExercise.getId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcxNDM3OQ=="}, "originalCommit": {"oid": "97f3a0dfd62221462c264641f7a1d1f2c3086a90"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTkzNDM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingExerciseService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxOTowODoyMFrOFkjE4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMzo0ODoxNlrOFwQ8sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2Nzc0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void existsById(long exerciseId) {\n          \n          \n            \n                public void validateExerciseIdExists(long exerciseId) {", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r373867747", "createdAt": "2020-02-02T19:08:20Z", "author": {"login": "ungaralex"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingExerciseService.java", "diffHunk": "@@ -29,4 +29,10 @@ public ModelingExercise findOne(Long exerciseId) {\n         log.debug(\"Request to get Modeling Exercise : {}\", exerciseId);\n         return modelingExerciseRepository.findById(exerciseId).orElseThrow(() -> new EntityNotFoundException(\"Exercise with id: \\\"\" + exerciseId + \"\\\" does not exist\"));\n     }\n+\n+    public void existsById(long exerciseId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc812591a5d744e9a471232ad1bbf03c25b1915b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE1MzY1MA==", "bodyText": "Applied", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r386153650", "createdAt": "2020-03-01T23:48:16Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingExerciseService.java", "diffHunk": "@@ -29,4 +29,10 @@ public ModelingExercise findOne(Long exerciseId) {\n         log.debug(\"Request to get Modeling Exercise : {}\", exerciseId);\n         return modelingExerciseRepository.findById(exerciseId).orElseThrow(() -> new EntityNotFoundException(\"Exercise with id: \\\"\" + exerciseId + \"\\\" does not exist\"));\n     }\n+\n+    public void existsById(long exerciseId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2Nzc0Nw=="}, "originalCommit": {"oid": "cc812591a5d744e9a471232ad1bbf03c25b1915b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTkzNTAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingSubmissionService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxOToxMDowMlrOFkjFQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQyMzo0ODo1N1rOFwQ88A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2Nzg0MA==", "bodyText": "Same suggestions as my other comment. Since we throw an exception in these cases and don't return any booleans, I think the other name is more expressive.", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r373867840", "createdAt": "2020-02-02T19:10:02Z", "author": {"login": "ungaralex"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingSubmissionService.java", "diffHunk": "@@ -386,4 +386,10 @@ public long countSubmissionsToAssessByCourseId(Long courseId) {\n     public long countSubmissionsToAssessByExerciseId(Long exerciseId) {\n         return modelingSubmissionRepository.countByExerciseIdSubmittedBeforeDueDate(exerciseId);\n     }\n+\n+    public void existsById(long submissionId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc812591a5d744e9a471232ad1bbf03c25b1915b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjE1MzcxMg==", "bodyText": "Thank you for the suggestion. This definitely makes more sense", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r386153712", "createdAt": "2020-03-01T23:48:57Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingSubmissionService.java", "diffHunk": "@@ -386,4 +386,10 @@ public long countSubmissionsToAssessByCourseId(Long courseId) {\n     public long countSubmissionsToAssessByExerciseId(Long exerciseId) {\n         return modelingSubmissionRepository.countByExerciseIdSubmittedBeforeDueDate(exerciseId);\n     }\n+\n+    public void existsById(long submissionId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2Nzg0MA=="}, "originalCommit": {"oid": "cc812591a5d744e9a471232ad1bbf03c25b1915b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjY1NTY5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise.service.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNToxMzo0MFrOF243fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMzo0ODo1OVrOF3Jhng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5OTEzMw==", "bodyText": "Isn't the exerciseId argument redundant here since it can be retrieved from modelingExercise?", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r393099133", "createdAt": "2020-03-16T15:13:40Z", "author": {"login": "madwau"}, "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise.service.ts", "diffHunk": "@@ -27,11 +27,11 @@ export class ModelingExerciseService {\n             .pipe(map((res: EntityResponseType) => this.exerciseService.convertDateFromServer(res)));\n     }\n \n-    update(modelingExercise: ModelingExercise, req?: any): Observable<EntityResponseType> {\n+    update(modelingExercise: ModelingExercise, exerciseId: number, req?: any): Observable<EntityResponseType> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0dfff2aaa7fd219a372e06f3ac7718350ac858"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNTc5MQ==", "bodyText": "I agree! Let's revert this change!", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r393205791", "createdAt": "2020-03-16T17:49:08Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise.service.ts", "diffHunk": "@@ -27,11 +27,11 @@ export class ModelingExerciseService {\n             .pipe(map((res: EntityResponseType) => this.exerciseService.convertDateFromServer(res)));\n     }\n \n-    update(modelingExercise: ModelingExercise, req?: any): Observable<EntityResponseType> {\n+    update(modelingExercise: ModelingExercise, exerciseId: number, req?: any): Observable<EntityResponseType> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5OTEzMw=="}, "originalCommit": {"oid": "eb0dfff2aaa7fd219a372e06f3ac7718350ac858"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3MjA2Mg==", "bodyText": "Ok, I reverted this change", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r393372062", "createdAt": "2020-03-16T23:48:59Z", "author": {"login": "maxr96"}, "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise.service.ts", "diffHunk": "@@ -27,11 +27,11 @@ export class ModelingExerciseService {\n             .pipe(map((res: EntityResponseType) => this.exerciseService.convertDateFromServer(res)));\n     }\n \n-    update(modelingExercise: ModelingExercise, req?: any): Observable<EntityResponseType> {\n+    update(modelingExercise: ModelingExercise, exerciseId: number, req?: any): Observable<EntityResponseType> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5OTEzMw=="}, "originalCommit": {"oid": "eb0dfff2aaa7fd219a372e06f3ac7718350ac858"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjY2MjcyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/modeling/participate/modeling-submission.service.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNToxNToyNVrOF248FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMzo0OTowM1rOF3JhqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwMDMwOQ==", "bodyText": "Same here. Isn't the submissionId argument redundant here since it can be retrieved from modelingSubmission?", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r393100309", "createdAt": "2020-03-16T15:15:25Z", "author": {"login": "madwau"}, "path": "src/main/webapp/app/exercises/modeling/participate/modeling-submission.service.ts", "diffHunk": "@@ -24,10 +24,10 @@ export class ModelingSubmissionService {\n             .map((res: EntityResponseType) => this.convertResponse(res));\n     }\n \n-    update(modelingSubmission: ModelingSubmission, exerciseId: number): Observable<EntityResponseType> {\n+    update(modelingSubmission: ModelingSubmission, exerciseId: number, submissionId: number): Observable<EntityResponseType> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0dfff2aaa7fd219a372e06f3ac7718350ac858"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNjQwOA==", "bodyText": "I agree, let's revert this change!", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r393206408", "createdAt": "2020-03-16T17:50:14Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/modeling/participate/modeling-submission.service.ts", "diffHunk": "@@ -24,10 +24,10 @@ export class ModelingSubmissionService {\n             .map((res: EntityResponseType) => this.convertResponse(res));\n     }\n \n-    update(modelingSubmission: ModelingSubmission, exerciseId: number): Observable<EntityResponseType> {\n+    update(modelingSubmission: ModelingSubmission, exerciseId: number, submissionId: number): Observable<EntityResponseType> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwMDMwOQ=="}, "originalCommit": {"oid": "eb0dfff2aaa7fd219a372e06f3ac7718350ac858"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3MjA3Mg==", "bodyText": "Ok, I reverted this change", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r393372072", "createdAt": "2020-03-16T23:49:03Z", "author": {"login": "maxr96"}, "path": "src/main/webapp/app/exercises/modeling/participate/modeling-submission.service.ts", "diffHunk": "@@ -24,10 +24,10 @@ export class ModelingSubmissionService {\n             .map((res: EntityResponseType) => this.convertResponse(res));\n     }\n \n-    update(modelingSubmission: ModelingSubmission, exerciseId: number): Observable<EntityResponseType> {\n+    update(modelingSubmission: ModelingSubmission, exerciseId: number, submissionId: number): Observable<EntityResponseType> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwMDMwOQ=="}, "originalCommit": {"oid": "eb0dfff2aaa7fd219a372e06f3ac7718350ac858"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNzMxNTgyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzo1MDo1M1rOF2_cIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMzo0OToxNlrOF3Jh3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNjgxNw==", "bodyText": "This makes our whole REST API inconsistent. I think we should revert this change!", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r393206817", "createdAt": "2020-03-16T17:50:53Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java", "diffHunk": "@@ -105,24 +105,29 @@ public ModelingSubmissionResource(ModelingSubmissionService modelingSubmissionSe\n      * submitting modeling submissions. The submit specific handling occurs in the ModelingSubmissionService.save() function.\n      *\n      * @param exerciseId         the id of the exercise for which to init a participation\n+     * @param submissionId       the id of the submission which needs to be updated\n      * @param principal          the current user principal\n      * @param modelingSubmission the modelingSubmission to update\n      * @return the ResponseEntity with status 200 (OK) and with body the updated modelingSubmission, or with status 400 (Bad Request) if the modelingSubmission is not valid, or\n      *         with status 500 (Internal Server Error) if the modelingSubmission couldn't be updated\n      */\n-    @PutMapping(\"/exercises/{exerciseId}/modeling-submissions\")\n+    @PutMapping(\"/exercises/{exerciseId}/modeling-submissions/{submissionId}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0dfff2aaa7fd219a372e06f3ac7718350ac858"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3MjEyNw==", "bodyText": "Reverted", "url": "https://github.com/ls1intum/Artemis/pull/1173#discussion_r393372127", "createdAt": "2020-03-16T23:49:16Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java", "diffHunk": "@@ -105,24 +105,29 @@ public ModelingSubmissionResource(ModelingSubmissionService modelingSubmissionSe\n      * submitting modeling submissions. The submit specific handling occurs in the ModelingSubmissionService.save() function.\n      *\n      * @param exerciseId         the id of the exercise for which to init a participation\n+     * @param submissionId       the id of the submission which needs to be updated\n      * @param principal          the current user principal\n      * @param modelingSubmission the modelingSubmission to update\n      * @return the ResponseEntity with status 200 (OK) and with body the updated modelingSubmission, or with status 400 (Bad Request) if the modelingSubmission is not valid, or\n      *         with status 500 (Internal Server Error) if the modelingSubmission couldn't be updated\n      */\n-    @PutMapping(\"/exercises/{exerciseId}/modeling-submissions\")\n+    @PutMapping(\"/exercises/{exerciseId}/modeling-submissions/{submissionId}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNjgxNw=="}, "originalCommit": {"oid": "eb0dfff2aaa7fd219a372e06f3ac7718350ac858"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 176, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}