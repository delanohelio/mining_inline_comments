{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTc0NDY5", "number": 2004, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODoxMToyNFrOEV8EhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjozNzo0NFrOElv_Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDM5NzQ5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exam/participate/exercises/modeling/modeling-exam-submission.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODoxMToyNFrOG8-zZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToyNzoyMFrOG9TDvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5NjcwOQ==", "bodyText": "please use a proper name and not cdr", "url": "https://github.com/ls1intum/Artemis/pull/2004#discussion_r466596709", "createdAt": "2020-08-06T18:11:24Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exam/participate/exercises/modeling/modeling-exam-submission.component.ts", "diffHunk": "@@ -26,6 +26,10 @@ export class ModelingExamSubmissionComponent extends ExamSubmissionComponent imp\n     exercise: ModelingExercise;\n     umlModel: UMLModel; // input model for Apollon\n \n+    constructor(private cdr: ChangeDetectorRef) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec91d604f3db0607a5d531b0abc10d6b3f6f682c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkyODU3NQ==", "bodyText": "See 5e32a09", "url": "https://github.com/ls1intum/Artemis/pull/2004#discussion_r466928575", "createdAt": "2020-08-07T09:27:20Z", "author": {"login": "anditurdiu"}, "path": "src/main/webapp/app/exam/participate/exercises/modeling/modeling-exam-submission.component.ts", "diffHunk": "@@ -26,6 +26,10 @@ export class ModelingExamSubmissionComponent extends ExamSubmissionComponent imp\n     exercise: ModelingExercise;\n     umlModel: UMLModel; // input model for Apollon\n \n+    constructor(private cdr: ChangeDetectorRef) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5NjcwOQ=="}, "originalCommit": {"oid": "ec91d604f3db0607a5d531b0abc10d6b3f6f682c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDQwNzk0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exam/participate/exercises/modeling/modeling-exam-submission.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODoxNDozOFrOG8-57Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToyODo0NVrOG9TGUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5ODM4MQ==", "bodyText": "should this not be detach() according to https://angular.io/api/core/ChangeDetectorRef", "url": "https://github.com/ls1intum/Artemis/pull/2004#discussion_r466598381", "createdAt": "2020-08-06T18:14:38Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exam/participate/exercises/modeling/modeling-exam-submission.component.ts", "diffHunk": "@@ -39,7 +43,13 @@ export class ModelingExamSubmissionComponent extends ExamSubmissionComponent imp\n         return this.exercise;\n     }\n \n-    onActivate(): void {}\n+    onActivate(): void {\n+        this.cdr.reattach();\n+    }\n+\n+    onDeactivate(): void {\n+        this.cdr.reattach();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec91d604f3db0607a5d531b0abc10d6b3f6f682c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkyOTIzMw==", "bodyText": "See 25ab3af", "url": "https://github.com/ls1intum/Artemis/pull/2004#discussion_r466929233", "createdAt": "2020-08-07T09:28:45Z", "author": {"login": "anditurdiu"}, "path": "src/main/webapp/app/exam/participate/exercises/modeling/modeling-exam-submission.component.ts", "diffHunk": "@@ -39,7 +43,13 @@ export class ModelingExamSubmissionComponent extends ExamSubmissionComponent imp\n         return this.exercise;\n     }\n \n-    onActivate(): void {}\n+    onActivate(): void {\n+        this.cdr.reattach();\n+    }\n+\n+    onDeactivate(): void {\n+        this.cdr.reattach();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5ODM4MQ=="}, "originalCommit": {"oid": "ec91d604f3db0607a5d531b0abc10d6b3f6f682c"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2Mjc2MDI1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exam/participate/exercises/exam-submission.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNDowNjoyNlrOHEDSgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNjoxMzo1MFrOHEJCOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAxMDI0MA==", "bodyText": "Why is this needed as an abstract method? I see it just used inside the inherited components for modeling, quiz and text exercises and not at all for programming exercises.", "url": "https://github.com/ls1intum/Artemis/pull/2004#discussion_r474010240", "createdAt": "2020-08-20T14:06:26Z", "author": {"login": "schultek"}, "path": "src/main/webapp/app/exam/participate/exercises/exam-submission.component.ts", "diffHunk": "@@ -1,14 +1,29 @@\n import { Submission } from 'app/entities/submission.model';\n import { Exercise } from 'app/entities/exercise.model';\n+import { ChangeDetectorRef } from '@angular/core';\n \n export abstract class ExamSubmissionComponent {\n     abstract hasUnsavedChanges(): boolean;\n     abstract updateSubmissionFromView(): void;\n+    abstract updateViewFromSubmission(): void;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4cacf22cd11f4936862e4960ac2c8aaf32848ad"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAyODQ1Nw==", "bodyText": "I think @anditurdiu added it, because it makes sense from the interface design perspective, because every ExamSubmissionComponent needs to be able to update it's content from the given submission. The code-editor is an exception, because it handles updating of the view from the submission on it's own. I see your point, that it is not needed in this case. I think it is a question on how the responsibilities of the components are in the concept. As I understood, we have the exam-participation-component, which manages all the participations and the submission components for each exercise type are just handling the submissions. Therefore the programming editor is the exception here, by handling the participation and the submission, but it is okay to add it to the interface, because future submission components very likely need to implement this method as well.", "url": "https://github.com/ls1intum/Artemis/pull/2004#discussion_r474028457", "createdAt": "2020-08-20T14:31:13Z", "author": {"login": "TobiasPr"}, "path": "src/main/webapp/app/exam/participate/exercises/exam-submission.component.ts", "diffHunk": "@@ -1,14 +1,29 @@\n import { Submission } from 'app/entities/submission.model';\n import { Exercise } from 'app/entities/exercise.model';\n+import { ChangeDetectorRef } from '@angular/core';\n \n export abstract class ExamSubmissionComponent {\n     abstract hasUnsavedChanges(): boolean;\n     abstract updateSubmissionFromView(): void;\n+    abstract updateViewFromSubmission(): void;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAxMDI0MA=="}, "originalCommit": {"oid": "a4cacf22cd11f4936862e4960ac2c8aaf32848ad"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEwNDM3Nw==", "bodyText": "Ok", "url": "https://github.com/ls1intum/Artemis/pull/2004#discussion_r474104377", "createdAt": "2020-08-20T16:13:50Z", "author": {"login": "schultek"}, "path": "src/main/webapp/app/exam/participate/exercises/exam-submission.component.ts", "diffHunk": "@@ -1,14 +1,29 @@\n import { Submission } from 'app/entities/submission.model';\n import { Exercise } from 'app/entities/exercise.model';\n+import { ChangeDetectorRef } from '@angular/core';\n \n export abstract class ExamSubmissionComponent {\n     abstract hasUnsavedChanges(): boolean;\n     abstract updateSubmissionFromView(): void;\n+    abstract updateViewFromSubmission(): void;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAxMDI0MA=="}, "originalCommit": {"oid": "a4cacf22cd11f4936862e4960ac2c8aaf32848ad"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MzgwNDY2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exam/participate/exercises/programming/programming-exam-submission.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxODoxMjowNVrOHENkuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxODoxMjowNVrOHENkuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE3ODc0NA==", "bodyText": "I think we could just leave this method empty and write a comment about it. Semantically it does not make sense to call onSave when we want to update the view from the submission (not needed for programming exercises anyways).", "url": "https://github.com/ls1intum/Artemis/pull/2004#discussion_r474178744", "createdAt": "2020-08-20T18:12:05Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exam/participate/exercises/programming/programming-exam-submission.component.ts", "diffHunk": "@@ -103,11 +103,17 @@ export class ProgrammingExamSubmissionComponent extends ExamSubmissionComponent\n     }\n \n     onActivate(): void {\n+        super.onActivate();\n         this.reload();\n     }\n \n     updateSubmissionFromView(): void {\n         // Note: we just save here and do not commit, because this can lead to problems!\n         this.codeEditorContainer.actions.onSave();\n     }\n+\n+    updateViewFromSubmission(): void {\n+        // Note: we just save here and do not commit, because this can lead to problems!\n+        this.codeEditorContainer.actions.onSave();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4cacf22cd11f4936862e4960ac2c8aaf32848ad"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDE5MDAyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exam/participate/exercises/modeling/modeling-exam-submission.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjozNzo0NFrOHVZahQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjozNzo0NFrOHVZahQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE5ODUzMw==", "bodyText": "You mean change detection must be triggered manually right? I am a Angular noob :D, so just a question, why is the default behaviour changed here only for the modeling-exam-submission component and not for the other ones like text and so on?", "url": "https://github.com/ls1intum/Artemis/pull/2004#discussion_r492198533", "createdAt": "2020-09-21T16:37:44Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exam/participate/exercises/modeling/modeling-exam-submission.component.ts", "diffHunk": "@@ -13,6 +13,8 @@ import { Exercise } from 'app/entities/exercise.model';\n     templateUrl: './modeling-exam-submission.component.html',\n     providers: [{ provide: ExamSubmissionComponent, useExisting: ModelingExamSubmissionComponent }],\n     styleUrls: ['./modeling-exam-submission.component.scss'],\n+    // change deactivation must be triggered manually", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc109934ed9071c5210ac33893326c1e032f051"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4604, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}