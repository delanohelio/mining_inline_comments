{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0Nzc4MzY2", "number": 2216, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMDoyMjo0MVrOEutwcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0MDoyOFrOEvdFWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NDE5NjMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QwMDoyMjo0MlrOHjS0sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODoyNToxN1rOHkDHlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MDYwOQ==", "bodyText": "does this mean the solution repo is checked out twice in the SOLUTION build plan?", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r506770609", "createdAt": "2020-10-17T00:22:42Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseService.java", "diffHunk": "@@ -174,9 +174,9 @@ private void setupBuildPlansForNewExercise(ProgrammingExercise programmingExerci\n         String projectKey = programmingExercise.getProjectKey();\n         continuousIntegrationService.get().createProjectForExercise(programmingExercise);\n         // template build plan\n-        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, TEMPLATE.getName(), exerciseRepoUrl, testsRepoUrl);\n+        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, TEMPLATE.getName(), exerciseRepoUrl, testsRepoUrl, solutionRepoUrl);\n         // solution build plan\n-        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, SOLUTION.getName(), solutionRepoUrl, testsRepoUrl);\n+        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, SOLUTION.getName(), solutionRepoUrl, testsRepoUrl, solutionRepoUrl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946925846cce0d606517a730871b1b9f540cb52c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk2NzkzOQ==", "bodyText": "@krusche Yes: Once as assignment and once as solution. I believe this is useful as otherwise the solution would require special tests.", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r506967939", "createdAt": "2020-10-17T18:00:01Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseService.java", "diffHunk": "@@ -174,9 +174,9 @@ private void setupBuildPlansForNewExercise(ProgrammingExercise programmingExerci\n         String projectKey = programmingExercise.getProjectKey();\n         continuousIntegrationService.get().createProjectForExercise(programmingExercise);\n         // template build plan\n-        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, TEMPLATE.getName(), exerciseRepoUrl, testsRepoUrl);\n+        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, TEMPLATE.getName(), exerciseRepoUrl, testsRepoUrl, solutionRepoUrl);\n         // solution build plan\n-        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, SOLUTION.getName(), solutionRepoUrl, testsRepoUrl);\n+        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, SOLUTION.getName(), solutionRepoUrl, testsRepoUrl, solutionRepoUrl);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MDYwOQ=="}, "originalCommit": {"oid": "946925846cce0d606517a730871b1b9f540cb52c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2MTg3OQ==", "bodyText": "ok", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507561879", "createdAt": "2020-10-19T08:25:17Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseService.java", "diffHunk": "@@ -174,9 +174,9 @@ private void setupBuildPlansForNewExercise(ProgrammingExercise programmingExerci\n         String projectKey = programmingExercise.getProjectKey();\n         continuousIntegrationService.get().createProjectForExercise(programmingExercise);\n         // template build plan\n-        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, TEMPLATE.getName(), exerciseRepoUrl, testsRepoUrl);\n+        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, TEMPLATE.getName(), exerciseRepoUrl, testsRepoUrl, solutionRepoUrl);\n         // solution build plan\n-        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, SOLUTION.getName(), solutionRepoUrl, testsRepoUrl);\n+        continuousIntegrationService.get().createBuildPlanForExercise(programmingExercise, SOLUTION.getName(), solutionRepoUrl, testsRepoUrl, solutionRepoUrl);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc3MDYwOQ=="}, "originalCommit": {"oid": "946925846cce0d606517a730871b1b9f540cb52c"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTI5OTAyOnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODoyODowOVrOHkDOow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODozMTo1MFrOHkcXpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2MzY4Mw==", "bodyText": "can we improve this test using the programming language as enum parameter so that all programming languages except Haskell are tested to produce a bad request? (this would then also include future programming languages", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507563683", "createdAt": "2020-10-19T08:28:09Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseIntegrationTest.java", "diffHunk": "@@ -742,6 +742,16 @@ public void createProgrammingExercise_bambooProjectWithSameTitleAlreadyExists_ba\n         request.post(ROOT + SETUP, programmingExercise, HttpStatus.BAD_REQUEST);\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createProgrammingExercise_checkoutSolutionRepositoryProgrammingLanguageNotSupported_badRequest() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946925846cce0d606517a730871b1b9f540cb52c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk3NTU5MA==", "bodyText": "I've changed it to a @ParameterizedTest that uses all ProgrammingLanguages except HASKELL. This is also safe for the future as the test excludes HASKELL (as opposed to including all other programming languages).", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507975590", "createdAt": "2020-10-19T18:31:50Z", "author": {"login": "sleiss"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseIntegrationTest.java", "diffHunk": "@@ -742,6 +742,16 @@ public void createProgrammingExercise_bambooProjectWithSameTitleAlreadyExists_ba\n         request.post(ROOT + SETUP, programmingExercise, HttpStatus.BAD_REQUEST);\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createProgrammingExercise_checkoutSolutionRepositoryProgrammingLanguageNotSupported_badRequest() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2MzY4Mw=="}, "originalCommit": {"oid": "946925846cce0d606517a730871b1b9f540cb52c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTMwNDI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/ProgrammingExercise.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODoyOToyNFrOHkDR9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODozNjo1OVrOHkckkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NDUzNQ==", "bodyText": "Can you please document the property and its default value here? thanks!", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507564535", "createdAt": "2020-10-19T08:29:24Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/ProgrammingExercise.java", "diffHunk": "@@ -99,6 +99,10 @@\n     @Transient\n     private boolean isLocalSimulationTransient;\n \n+    @Transient\n+    @JsonProperty\n+    private boolean checkoutSolutionRepository = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946925846cce0d606517a730871b1b9f540cb52c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk3ODg5Nw==", "bodyText": "I've added documentation.", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507978897", "createdAt": "2020-10-19T18:36:59Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/ProgrammingExercise.java", "diffHunk": "@@ -99,6 +99,10 @@\n     @Transient\n     private boolean isLocalSimulationTransient;\n \n+    @Transient\n+    @JsonProperty\n+    private boolean checkoutSolutionRepository = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NDUzNQ=="}, "originalCommit": {"oid": "946925846cce0d606517a730871b1b9f540cb52c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTMwNjgyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODoyOTo1OVrOHkDThQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODozNjo1NVrOHkckWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NDkzMw==", "bodyText": "please add a hint that this is only used for special cases", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507564933", "createdAt": "2020-10-19T08:29:59Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "diffHunk": "@@ -28,12 +28,13 @@\n     /**\n      * Creates the base build plan for the given programming exercise\n      *\n-     * @param exercise          a programming exercise with the required information to create the base build plan\n-     * @param planKey           the key of the plan\n-     * @param repositoryURL     the URL of the assignment repository (used to separate between exercise and solution)\n-     * @param testRepositoryURL the URL of the test repository\n+     * @param exercise              a programming exercise with the required information to create the base build plan\n+     * @param planKey               the key of the plan\n+     * @param repositoryURL         the URL of the assignment repository (used to separate between exercise and solution)\n+     * @param testRepositoryURL     the URL of the test repository\n+     * @param solutionRepositoryURL the URL of the solution repository", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946925846cce0d606517a730871b1b9f540cb52c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk3ODg0MQ==", "bodyText": "I've added documentation.", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507978841", "createdAt": "2020-10-19T18:36:55Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "diffHunk": "@@ -28,12 +28,13 @@\n     /**\n      * Creates the base build plan for the given programming exercise\n      *\n-     * @param exercise          a programming exercise with the required information to create the base build plan\n-     * @param planKey           the key of the plan\n-     * @param repositoryURL     the URL of the assignment repository (used to separate between exercise and solution)\n-     * @param testRepositoryURL the URL of the test repository\n+     * @param exercise              a programming exercise with the required information to create the base build plan\n+     * @param planKey               the key of the plan\n+     * @param repositoryURL         the URL of the assignment repository (used to separate between exercise and solution)\n+     * @param testRepositoryURL     the URL of the test repository\n+     * @param solutionRepositoryURL the URL of the solution repository", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU2NDkzMw=="}, "originalCommit": {"oid": "946925846cce0d606517a730871b1b9f540cb52c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTk1MDMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0MDoyOFrOHkcsYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0MDoyOFrOHkcsYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MDg5OA==", "bodyText": "Codacy found an issue: These nested if statements could be combined", "url": "https://github.com/ls1intum/Artemis/pull/2216#discussion_r507980898", "createdAt": "2020-10-19T18:40:28Z", "author": {"login": "artemis-bot"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -321,6 +321,15 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n             }\n         }\n \n+        // Check if checkout solution repository is enabled\n+        if (programmingExercise.getCheckoutSolutionRepository()) {\n+            if (programmingExercise.getProgrammingLanguage() != ProgrammingLanguage.HASKELL) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59e377126d5b3f2afc3bf7493f748ee0d070c4c8"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4531, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}