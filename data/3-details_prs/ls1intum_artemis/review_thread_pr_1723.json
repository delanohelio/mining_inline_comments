{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwODY4MTA3", "number": 1723, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMDowOToyN1rOEJmriw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMDowOTozNFrOEJmrpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTA2Mzc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/repository/StudentParticipationRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMDowOToyN1rOGqLj3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMDoxMDozNlrOGqLltA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg4Mjc4MQ==", "bodyText": "for future PR I would use Optional as return type", "url": "https://github.com/ls1intum/Artemis/pull/1723#discussion_r446882781", "createdAt": "2020-06-29T10:09:27Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StudentParticipationRepository.java", "diffHunk": "@@ -65,9 +65,15 @@\n     @Query(\"select distinct participation from StudentParticipation participation left join fetch participation.results result where participation.exercise.id = :#{#exerciseId} and (result.id = (select max(id) from participation.results) or result is null)\")\n     List<StudentParticipation> findByExerciseIdWithLatestResult(@Param(\"exerciseId\") Long exerciseId);\n \n+    @Query(\"select distinct participation from StudentParticipation participation left join fetch participation.submissions where participation.exercise.id = :#{#exerciseId} and participation.student.id = :#{#studentId}\")\n+    List<StudentParticipation> findByExerciseIdAndStudentIdWithEagerSubmissions(@Param(\"exerciseId\") Long exerciseId, @Param(\"studentId\") Long studentId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9bf7bf320afce834fbf4e01f07cb01d8a6f5d43"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg4MzI1Mg==", "bodyText": "maybe reuse the following one\n@EntityGraph(type = LOAD, attributePaths = \"submissions\")\nOptional findWithEagerSubmissionsByExerciseIdAndStudentLogin(Long exerciseId, String username);\n@EntityGraph(type = LOAD, attributePaths = \"submissions\")\nOptional<StudentParticipation> findWithEagerSubmissionsByExerciseIdAndTeamId(Long exerciseId, Long teamId);", "url": "https://github.com/ls1intum/Artemis/pull/1723#discussion_r446883252", "createdAt": "2020-06-29T10:10:36Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StudentParticipationRepository.java", "diffHunk": "@@ -65,9 +65,15 @@\n     @Query(\"select distinct participation from StudentParticipation participation left join fetch participation.results result where participation.exercise.id = :#{#exerciseId} and (result.id = (select max(id) from participation.results) or result is null)\")\n     List<StudentParticipation> findByExerciseIdWithLatestResult(@Param(\"exerciseId\") Long exerciseId);\n \n+    @Query(\"select distinct participation from StudentParticipation participation left join fetch participation.submissions where participation.exercise.id = :#{#exerciseId} and participation.student.id = :#{#studentId}\")\n+    List<StudentParticipation> findByExerciseIdAndStudentIdWithEagerSubmissions(@Param(\"exerciseId\") Long exerciseId, @Param(\"studentId\") Long studentId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg4Mjc4MQ=="}, "originalCommit": {"oid": "b9bf7bf320afce834fbf4e01f07cb01d8a6f5d43"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTA2NDA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/repository/StudentParticipationRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMDowOTozNFrOGqLkDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMDoxMDozOVrOGqLlyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg4MjgyOQ==", "bodyText": "for future PR I would use Optional as return type", "url": "https://github.com/ls1intum/Artemis/pull/1723#discussion_r446882829", "createdAt": "2020-06-29T10:09:34Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StudentParticipationRepository.java", "diffHunk": "@@ -65,9 +65,15 @@\n     @Query(\"select distinct participation from StudentParticipation participation left join fetch participation.results result where participation.exercise.id = :#{#exerciseId} and (result.id = (select max(id) from participation.results) or result is null)\")\n     List<StudentParticipation> findByExerciseIdWithLatestResult(@Param(\"exerciseId\") Long exerciseId);\n \n+    @Query(\"select distinct participation from StudentParticipation participation left join fetch participation.submissions where participation.exercise.id = :#{#exerciseId} and participation.student.id = :#{#studentId}\")\n+    List<StudentParticipation> findByExerciseIdAndStudentIdWithEagerSubmissions(@Param(\"exerciseId\") Long exerciseId, @Param(\"studentId\") Long studentId);\n+\n     @Query(\"select distinct participation from StudentParticipation participation left join fetch participation.results left join fetch participation.submissions where participation.exercise.id = :#{#exerciseId} and participation.student.id = :#{#studentId}\")\n     List<StudentParticipation> findByExerciseIdAndStudentIdWithEagerResultsAndSubmissions(@Param(\"exerciseId\") Long exerciseId, @Param(\"studentId\") Long studentId);\n \n+    @Query(\"select distinct participation from StudentParticipation participation left join fetch participation.submissions where participation.exercise.id = :#{#exerciseId} and participation.team.id = :#{#teamId}\")\n+    List<StudentParticipation> findByExerciseIdAndTeamIdWithEagerSubmissions(@Param(\"exerciseId\") Long exerciseId, @Param(\"teamId\") Long teamId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9bf7bf320afce834fbf4e01f07cb01d8a6f5d43"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg4MzI3Mg==", "bodyText": "@EntityGraph(type = LOAD, attributePaths = \"submissions\")\nOptional<StudentParticipation> findWithEagerSubmissionsByExerciseIdAndStudentLogin(Long exerciseId, String username);\n\n@EntityGraph(type = LOAD, attributePaths = \"submissions\")\nOptional<StudentParticipation> findWithEagerSubmissionsByExerciseIdAndTeamId(Long exerciseId, Long teamId);", "url": "https://github.com/ls1intum/Artemis/pull/1723#discussion_r446883272", "createdAt": "2020-06-29T10:10:39Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StudentParticipationRepository.java", "diffHunk": "@@ -65,9 +65,15 @@\n     @Query(\"select distinct participation from StudentParticipation participation left join fetch participation.results result where participation.exercise.id = :#{#exerciseId} and (result.id = (select max(id) from participation.results) or result is null)\")\n     List<StudentParticipation> findByExerciseIdWithLatestResult(@Param(\"exerciseId\") Long exerciseId);\n \n+    @Query(\"select distinct participation from StudentParticipation participation left join fetch participation.submissions where participation.exercise.id = :#{#exerciseId} and participation.student.id = :#{#studentId}\")\n+    List<StudentParticipation> findByExerciseIdAndStudentIdWithEagerSubmissions(@Param(\"exerciseId\") Long exerciseId, @Param(\"studentId\") Long studentId);\n+\n     @Query(\"select distinct participation from StudentParticipation participation left join fetch participation.results left join fetch participation.submissions where participation.exercise.id = :#{#exerciseId} and participation.student.id = :#{#studentId}\")\n     List<StudentParticipation> findByExerciseIdAndStudentIdWithEagerResultsAndSubmissions(@Param(\"exerciseId\") Long exerciseId, @Param(\"studentId\") Long studentId);\n \n+    @Query(\"select distinct participation from StudentParticipation participation left join fetch participation.submissions where participation.exercise.id = :#{#exerciseId} and participation.team.id = :#{#teamId}\")\n+    List<StudentParticipation> findByExerciseIdAndTeamIdWithEagerSubmissions(@Param(\"exerciseId\") Long exerciseId, @Param(\"teamId\") Long teamId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg4MjgyOQ=="}, "originalCommit": {"oid": "b9bf7bf320afce834fbf4e01f07cb01d8a6f5d43"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4923, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}