{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MjU3MTA1", "number": 2150, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToyOTo1M1rOEvOfug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjo0MToyMlrOEw2pNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTU2MDI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToyOTo1M1rOHkFrrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToyOTo1M1rOHkFrrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwMzg4Nw==", "bodyText": "now we have some duplicated code. Can we create a new method: getDockerImage(String programmingLanuage), then the duplication would not be necessary", "url": "https://github.com/ls1intum/Artemis/pull/2150#discussion_r507603887", "createdAt": "2020-10-19T09:29:53Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanService.java", "diffHunk": "@@ -173,6 +173,16 @@ private Stage createBuildStage(ProgrammingLanguage programmingLanguage, final bo\n                 tasks.add(0, checkoutTask);\n                 return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n             }\n+            case C -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d0a1e932304ee64ef5507517fb3603dd5cff262"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTU3MjUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTozMjo0OVrOHkFzNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTozMjo0OVrOHkFzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwNTgxMw==", "bodyText": "ls1tum/artemis-c-docker:latest", "url": "https://github.com/ls1intum/Artemis/pull/2150#discussion_r507605813", "createdAt": "2020-10-19T09:32:49Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanService.java", "diffHunk": "@@ -173,6 +173,16 @@ private Stage createBuildStage(ProgrammingLanguage programmingLanguage, final bo\n                 tasks.add(0, checkoutTask);\n                 return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n             }\n+            case C -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n+                    defaultJob.dockerConfiguration(new DockerConfiguration().image(\"com8/artemis-gbs:latest\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d0a1e932304ee64ef5507517fb3603dd5cff262"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTU3NjExOnYy", "diffSide": "LEFT", "path": "src/main/resources/templates/bamboo/c/sequentialRuns/3_build_and_run_structural_tests.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTozMzo0NFrOHkF1cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTozMzo0NFrOHkF1cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYwNjM4NA==", "bodyText": "if we do not support sequential tests any more, we should make sure that instructors cannot choose this option when they choose C as programming language", "url": "https://github.com/ls1intum/Artemis/pull/2150#discussion_r507606384", "createdAt": "2020-10-19T09:33:44Z", "author": {"login": "krusche"}, "path": "src/main/resources/templates/bamboo/c/sequentialRuns/3_build_and_run_structural_tests.sh", "diffHunk": "@@ -1,20 +0,0 @@\n-#!/usr/bin/env bash\n-\n-# Actual build process:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d0a1e932304ee64ef5507517fb3603dd5cff262"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjYyMzkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/programming/ProgrammingLanguageFeatureService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjo0MToyMlrOHmqqLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMDoyMDoyM1rOHmyWmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMwNjg2MA==", "bodyText": "Sometimes a feature is available using Bamboo but not Jenkins. I don't think this is properly represented in this data structure. E.g. sequential test runs are only available using Bamboo if I'm not mistaken. You could create different Maps for different VCS+CI configurations.", "url": "https://github.com/ls1intum/Artemis/pull/2150#discussion_r510306860", "createdAt": "2020-10-22T16:41:22Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/programming/ProgrammingLanguageFeatureService.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package de.tum.in.www1.artemis.service.programming;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.enumeration.ProgrammingLanguage;\n+\n+/**\n+ * This service provides information about features the different ProgrammingLanguages support.\n+ * The configuration is also available in the client as the {@link ProgrammingLanguageFeatureContributor} exposes them.\n+ */\n+@Service\n+public class ProgrammingLanguageFeatureService {\n+\n+    private final Logger log = LoggerFactory.getLogger(ProgrammingLanguageFeatureService.class);\n+\n+    private final Map<ProgrammingLanguage, ProgrammingLanguageFeature> programmingLanguageFeatures = new HashMap<>();\n+\n+    public ProgrammingLanguageFeatureService() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ce5094601762d3a244a048857d0a18f66e86911"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQzMjkyMg==", "bodyText": "Good point! I changed the ProgrammingLanguageFeatureService to an interfaceabstract class and added two implementations (one for Bamboo, one for Jenkins).", "url": "https://github.com/ls1intum/Artemis/pull/2150#discussion_r510432922", "createdAt": "2020-10-22T20:20:23Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/programming/ProgrammingLanguageFeatureService.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package de.tum.in.www1.artemis.service.programming;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.enumeration.ProgrammingLanguage;\n+\n+/**\n+ * This service provides information about features the different ProgrammingLanguages support.\n+ * The configuration is also available in the client as the {@link ProgrammingLanguageFeatureContributor} exposes them.\n+ */\n+@Service\n+public class ProgrammingLanguageFeatureService {\n+\n+    private final Logger log = LoggerFactory.getLogger(ProgrammingLanguageFeatureService.class);\n+\n+    private final Map<ProgrammingLanguage, ProgrammingLanguageFeature> programmingLanguageFeatures = new HashMap<>();\n+\n+    public ProgrammingLanguageFeatureService() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMwNjg2MA=="}, "originalCommit": {"oid": "6ce5094601762d3a244a048857d0a18f66e86911"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4738, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}