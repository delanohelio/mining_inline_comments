{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MTYzMzcy", "number": 2524, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo0MzoxMVrOFG6u7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo0MzoxMVrOFG6u7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNzk4MDYzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo0MzoxMVrOIIJ79w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMTo0MzoxMVrOIIJ79w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQyMjMyNw==", "bodyText": "This could hurt a bit if the repositories are known to contain larger files (e.g. some example data), but it is not dramatic. We could in future however use the already implemented file change detection to reduce this only to files that were changed.", "url": "https://github.com/ls1intum/Artemis/pull/2524#discussion_r545422327", "createdAt": "2020-12-17T21:43:11Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts", "diffHunk": "@@ -133,37 +145,55 @@ export class CodeEditorTutorAssessmentContainerComponent implements OnInit, OnDe\n                 participationId = Number(params['participationId']);\n             }\n \n-            this.programmingExerciseParticipationService.getStudentParticipationWithLatestManualResult(participationId).subscribe(\n-                (participationWithResult: ProgrammingExerciseStudentParticipation) => {\n-                    // Set domain to make file editor work properly\n-                    this.domainService.setDomain([DomainType.PARTICIPATION, participationWithResult]);\n-                    this.participation = participationWithResult;\n-                    this.manualResult = this.participation.results![0];\n-\n-                    // Either submission from latest manual or automatic result\n-                    this.submission = this.manualResult.submission as ProgrammingSubmission;\n-                    this.submission.participation = this.participation;\n-                    this.exercise = this.participation.exercise as ProgrammingExercise;\n-                    this.hasAssessmentDueDatePassed = !!this.exercise!.assessmentDueDate && moment(this.exercise!.assessmentDueDate).isBefore(now());\n-\n-                    this.checkPermissions();\n-                    this.handleFeedback();\n-\n-                    if (this.manualResult && this.manualResult.hasComplaint) {\n-                        this.getComplaint();\n-                    }\n-                    this.createAdjustedRepositoryUrl();\n-                },\n-                (error: HttpErrorResponse) => {\n-                    this.participationCouldNotBeFetched = true;\n-                    if (error.error && error.error.errorKey === 'lockedSubmissionsLimitReached') {\n-                        this.lockLimitReached = true;\n-                    }\n-                },\n-                () => {\n-                    this.loadingParticipation = false;\n-                },\n-            );\n+            this.programmingExerciseParticipationService\n+                .getStudentParticipationWithLatestManualResult(participationId)\n+                .pipe(\n+                    tap(\n+                        (participationWithResult: ProgrammingExerciseStudentParticipation) => {\n+                            // Set domain to make file editor work properly\n+                            this.domainService.setDomain([DomainType.PARTICIPATION, participationWithResult]);\n+                            this.participation = participationWithResult;\n+                            this.manualResult = this.participation.results![0];\n+\n+                            // Either submission from latest manual or automatic result\n+                            this.submission = this.manualResult.submission as ProgrammingSubmission;\n+                            this.submission.participation = this.participation;\n+                            this.exercise = this.participation.exercise as ProgrammingExercise;\n+                            this.hasAssessmentDueDatePassed = !!this.exercise!.assessmentDueDate && moment(this.exercise!.assessmentDueDate).isBefore(now());\n+\n+                            this.checkPermissions();\n+                            this.handleFeedback();\n+\n+                            if (this.manualResult && this.manualResult.hasComplaint) {\n+                                this.getComplaint();\n+                            }\n+                            this.createAdjustedRepositoryUrl();\n+                        },\n+                        (error: HttpErrorResponse) => {\n+                            this.participationCouldNotBeFetched = true;\n+                            if (error.error && error.error.errorKey === 'lockedSubmissionsLimitReached') {\n+                                this.lockLimitReached = true;\n+                            }\n+                        },\n+                        () => (this.loadingParticipation = false),\n+                    ),\n+                    switchMap(() => this.programmingExerciseService.findWithTemplateAndSolutionParticipation(this.exercise.id!)),\n+                    tap((programmingExercise) => (this.templateParticipation = programmingExercise.body!.templateParticipation!)),\n+                    switchMap(() => {\n+                        // Get all files with content from template repository\n+                        this.domainService.setDomain([DomainType.PARTICIPATION, this.templateParticipation]);\n+                        const observable = this.repositoryFileService.getFilesWithContent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27c5987fd3f4f0143ffd6bd0cf732a8fb011cbed"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4323, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}