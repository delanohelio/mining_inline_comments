{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5Mjk1NzY3", "number": 1253, "reviewThreads": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzo0MzoxMFrODo0sZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDoyNjo0OFrODr0hCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTMyOTY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ComplaintService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzo0MzoxMFrOF3nM5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDo0MzowOFrOF4WKSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1ODI3Nw==", "bodyText": "Should this be handled in this PR?", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393858277", "createdAt": "2020-03-17T17:43:10Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ComplaintService.java", "diffHunk": "@@ -53,7 +53,7 @@ public Complaint createComplaint(Complaint complaint, Principal principal) {\n         Result originalResult = resultRepository.findByIdWithEagerFeedbacksAndAssessor(complaint.getResult().getId())\n                 .orElseThrow(() -> new BadRequestAlertException(\"The result you are referring to does not exist\", ENTITY_NAME, \"resultnotfound\"));\n         StudentParticipation studentParticipation = (StudentParticipation) originalResult.getParticipation();\n-        User student = studentParticipation.getStudent();\n+        User student = studentParticipation.getStudent().get(); // TODO: adapt for teams", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NDM2MQ==", "bodyText": "Good question. I think adapting the complaints to teams is probably better suited to a follow-up PR since it might require some non-trivial decisions on how we want to handle complaints for team-based exercises. Also this PR is already on the larger side and since the creation of team-based exercises is still hidden for non-admin users, it is not like regular users will run into this under-construction part of the epic. I should still see about though that I deliver this within some days.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r394584361", "createdAt": "2020-03-18T19:19:37Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ComplaintService.java", "diffHunk": "@@ -53,7 +53,7 @@ public Complaint createComplaint(Complaint complaint, Principal principal) {\n         Result originalResult = resultRepository.findByIdWithEagerFeedbacksAndAssessor(complaint.getResult().getId())\n                 .orElseThrow(() -> new BadRequestAlertException(\"The result you are referring to does not exist\", ENTITY_NAME, \"resultnotfound\"));\n         StudentParticipation studentParticipation = (StudentParticipation) originalResult.getParticipation();\n-        User student = studentParticipation.getStudent();\n+        User student = studentParticipation.getStudent().get(); // TODO: adapt for teams", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1ODI3Nw=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYyNzY1OQ==", "bodyText": "Alright, then let's handle this in a different PR.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r394627659", "createdAt": "2020-03-18T20:43:08Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ComplaintService.java", "diffHunk": "@@ -53,7 +53,7 @@ public Complaint createComplaint(Complaint complaint, Principal principal) {\n         Result originalResult = resultRepository.findByIdWithEagerFeedbacksAndAssessor(complaint.getResult().getId())\n                 .orElseThrow(() -> new BadRequestAlertException(\"The result you are referring to does not exist\", ENTITY_NAME, \"resultnotfound\"));\n         StudentParticipation studentParticipation = (StudentParticipation) originalResult.getParticipation();\n-        User student = studentParticipation.getStudent();\n+        User student = studentParticipation.getStudent().get(); // TODO: adapt for teams", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg1ODI3Nw=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTU4NjI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODo1NDo0MVrOF3p0NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMToxMjozN1rOF3uQCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwMTEwOQ==", "bodyText": "I find this method name now misleading: It pretends to use a exercise id (as it did before), but uses an Exercise object now.\nPlease rename it e.g. to findOneByExerciseAndStudentLoginWithEagerSubmissionsAnyState", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393901109", "createdAt": "2020-03-17T18:54:41Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "diffHunk": "@@ -648,37 +652,80 @@ public StudentParticipation findOneWithEagerSubmissionsAndResults(Long participa\n     /**\n      * Get one participation (in any state) by its student and exercise.\n      *\n-     * @param exerciseId the project key of the exercise\n-     * @param username   the username of the student\n+     * @param exercise the exercise for which to find a participation\n+     * @param username the username of the student\n      * @return the participation of the given student and exercise in any state\n      */\n-    public Optional<StudentParticipation> findOneByExerciseIdAndStudentLoginAnyState(Long exerciseId, String username) {\n-        log.debug(\"Request to get Participation for User {} for Exercise with id: {}\", username, exerciseId);\n-        return studentParticipationRepository.findByExerciseIdAndStudentLogin(exerciseId, username);\n+    public Optional<StudentParticipation> findOneByExerciseIdAndStudentLoginAnyState(Exercise exercise, String username) {\n+        log.debug(\"Request to get Participation for User {} for Exercise with id: {}\", username, exercise.getId());\n+        if (exercise.isTeamMode()) {\n+            Optional<Team> optionalTeam = teamRepository.findOneByExerciseIdAndUserLogin(exercise.getId(), username);\n+            return optionalTeam.flatMap(team -> studentParticipationRepository.findByExerciseIdAndTeamId(exercise.getId(), team.getId()));\n+        }\n+        return studentParticipationRepository.findByExerciseIdAndStudentLogin(exercise.getId(), username);\n+    }\n+\n+    /**\n+     * Get one participation (in any state) by its team and exercise.\n+     *\n+     * @param exercise the exercise for which to find a participation\n+     * @param teamId the id of the team\n+     * @return the participation of the given team and exercise in any state\n+     */\n+    public Optional<StudentParticipation> findOneByExerciseIdAndTeamIdAnyState(Exercise exercise, Long teamId) {\n+        log.debug(\"Request to get Participation for Team with id {} for Exercise with id: {}\", teamId, exercise.getId());\n+        return studentParticipationRepository.findByExerciseIdAndTeamId(exercise.getId(), teamId);\n+    }\n+\n+    /**\n+     * Get one participation (in any state) by its participant and exercise.\n+     *\n+     * @param exercise the exercise for which to find a participation\n+     * @param participant the short name of the team\n+     * @return the participation of the given team and exercise in any state\n+     */\n+    public Optional<StudentParticipation> findOneByExerciseIdAndParticipantAnyState(Exercise exercise, Participant participant) {\n+        if (participant instanceof User) {\n+            return findOneByExerciseIdAndStudentLoginAnyState(exercise, ((User) participant).getLogin());\n+        }\n+        else if (participant instanceof Team) {\n+            return findOneByExerciseIdAndTeamIdAnyState(exercise, ((Team) participant).getId());\n+        }\n+        else {\n+            throw new Error(\"Unknown Participant type\");\n+        }\n     }\n \n     /**\n      * Get one participation (in any state) by its student and exercise with all its results.\n      *\n-     * @param exerciseId the project key of the exercise\n+     * @param exercise the exercise for which to find a participation\n      * @param username   the username of the student\n      * @return the participation of the given student and exercise in any state\n      */\n-    public Optional<StudentParticipation> findOneByExerciseIdAndStudentLoginAnyStateWithEagerResults(Long exerciseId, String username) {\n-        log.debug(\"Request to get Participation for User {} for Exercise with id: {}\", username, exerciseId);\n-        return studentParticipationRepository.findWithEagerResultsByExerciseIdAndStudentLogin(exerciseId, username);\n+    public Optional<StudentParticipation> findOneByExerciseIdAndStudentLoginAnyStateWithEagerResults(Exercise exercise, String username) {\n+        log.debug(\"Request to get Participation for User {} for Exercise with id: {}\", username, exercise.getId());\n+        if (exercise.isTeamMode()) {\n+            Optional<Team> optionalTeam = teamRepository.findOneByExerciseIdAndUserLogin(exercise.getId(), username);\n+            return optionalTeam.flatMap(team -> studentParticipationRepository.findWithEagerResultsByExerciseIdAndTeamId(exercise.getId(), team.getId()));\n+        }\n+        return studentParticipationRepository.findWithEagerResultsByExerciseIdAndStudentLogin(exercise.getId(), username);\n     }\n \n     /**\n      * Get one participation (in any state) by its student and exercise with eager submissions.\n      *\n-     * @param exerciseId the project key of the exercise\n+     * @param exercise the exercise for which to find a participation\n      * @param username   the username of the student\n      * @return the participation of the given student and exercise with eager submissions in any state\n      */\n-    public Optional<StudentParticipation> findOneByExerciseIdAndStudentLoginWithEagerSubmissionsAnyState(Long exerciseId, String username) {\n-        log.debug(\"Request to get Participation for User {} for Exercise with id: {}\", username, exerciseId);\n-        return studentParticipationRepository.findWithEagerSubmissionsByExerciseIdAndStudentLogin(exerciseId, username);\n+    public Optional<StudentParticipation> findOneByExerciseIdAndStudentLoginWithEagerSubmissionsAnyState(Exercise exercise, String username) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 209}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk3Mzc2OQ==", "bodyText": "Good catch, oversight on my part. I fixed it.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393973769", "createdAt": "2020-03-17T21:12:37Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "diffHunk": "@@ -648,37 +652,80 @@ public StudentParticipation findOneWithEagerSubmissionsAndResults(Long participa\n     /**\n      * Get one participation (in any state) by its student and exercise.\n      *\n-     * @param exerciseId the project key of the exercise\n-     * @param username   the username of the student\n+     * @param exercise the exercise for which to find a participation\n+     * @param username the username of the student\n      * @return the participation of the given student and exercise in any state\n      */\n-    public Optional<StudentParticipation> findOneByExerciseIdAndStudentLoginAnyState(Long exerciseId, String username) {\n-        log.debug(\"Request to get Participation for User {} for Exercise with id: {}\", username, exerciseId);\n-        return studentParticipationRepository.findByExerciseIdAndStudentLogin(exerciseId, username);\n+    public Optional<StudentParticipation> findOneByExerciseIdAndStudentLoginAnyState(Exercise exercise, String username) {\n+        log.debug(\"Request to get Participation for User {} for Exercise with id: {}\", username, exercise.getId());\n+        if (exercise.isTeamMode()) {\n+            Optional<Team> optionalTeam = teamRepository.findOneByExerciseIdAndUserLogin(exercise.getId(), username);\n+            return optionalTeam.flatMap(team -> studentParticipationRepository.findByExerciseIdAndTeamId(exercise.getId(), team.getId()));\n+        }\n+        return studentParticipationRepository.findByExerciseIdAndStudentLogin(exercise.getId(), username);\n+    }\n+\n+    /**\n+     * Get one participation (in any state) by its team and exercise.\n+     *\n+     * @param exercise the exercise for which to find a participation\n+     * @param teamId the id of the team\n+     * @return the participation of the given team and exercise in any state\n+     */\n+    public Optional<StudentParticipation> findOneByExerciseIdAndTeamIdAnyState(Exercise exercise, Long teamId) {\n+        log.debug(\"Request to get Participation for Team with id {} for Exercise with id: {}\", teamId, exercise.getId());\n+        return studentParticipationRepository.findByExerciseIdAndTeamId(exercise.getId(), teamId);\n+    }\n+\n+    /**\n+     * Get one participation (in any state) by its participant and exercise.\n+     *\n+     * @param exercise the exercise for which to find a participation\n+     * @param participant the short name of the team\n+     * @return the participation of the given team and exercise in any state\n+     */\n+    public Optional<StudentParticipation> findOneByExerciseIdAndParticipantAnyState(Exercise exercise, Participant participant) {\n+        if (participant instanceof User) {\n+            return findOneByExerciseIdAndStudentLoginAnyState(exercise, ((User) participant).getLogin());\n+        }\n+        else if (participant instanceof Team) {\n+            return findOneByExerciseIdAndTeamIdAnyState(exercise, ((Team) participant).getId());\n+        }\n+        else {\n+            throw new Error(\"Unknown Participant type\");\n+        }\n     }\n \n     /**\n      * Get one participation (in any state) by its student and exercise with all its results.\n      *\n-     * @param exerciseId the project key of the exercise\n+     * @param exercise the exercise for which to find a participation\n      * @param username   the username of the student\n      * @return the participation of the given student and exercise in any state\n      */\n-    public Optional<StudentParticipation> findOneByExerciseIdAndStudentLoginAnyStateWithEagerResults(Long exerciseId, String username) {\n-        log.debug(\"Request to get Participation for User {} for Exercise with id: {}\", username, exerciseId);\n-        return studentParticipationRepository.findWithEagerResultsByExerciseIdAndStudentLogin(exerciseId, username);\n+    public Optional<StudentParticipation> findOneByExerciseIdAndStudentLoginAnyStateWithEagerResults(Exercise exercise, String username) {\n+        log.debug(\"Request to get Participation for User {} for Exercise with id: {}\", username, exercise.getId());\n+        if (exercise.isTeamMode()) {\n+            Optional<Team> optionalTeam = teamRepository.findOneByExerciseIdAndUserLogin(exercise.getId(), username);\n+            return optionalTeam.flatMap(team -> studentParticipationRepository.findWithEagerResultsByExerciseIdAndTeamId(exercise.getId(), team.getId()));\n+        }\n+        return studentParticipationRepository.findWithEagerResultsByExerciseIdAndStudentLogin(exercise.getId(), username);\n     }\n \n     /**\n      * Get one participation (in any state) by its student and exercise with eager submissions.\n      *\n-     * @param exerciseId the project key of the exercise\n+     * @param exercise the exercise for which to find a participation\n      * @param username   the username of the student\n      * @return the participation of the given student and exercise with eager submissions in any state\n      */\n-    public Optional<StudentParticipation> findOneByExerciseIdAndStudentLoginWithEagerSubmissionsAnyState(Long exerciseId, String username) {\n-        log.debug(\"Request to get Participation for User {} for Exercise with id: {}\", username, exerciseId);\n-        return studentParticipationRepository.findWithEagerSubmissionsByExerciseIdAndStudentLogin(exerciseId, username);\n+    public Optional<StudentParticipation> findOneByExerciseIdAndStudentLoginWithEagerSubmissionsAnyState(Exercise exercise, String username) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwMTEwOQ=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 209}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTU5NjY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODo1Nzo1MFrOF3p7KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMToxMzoyNVrOF3uRbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwMjg4OA==", "bodyText": "I find this method name now misleading: It pretends to use a exercise id (as it did before), but uses an Exercise object now.\nSame as above.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393902888", "createdAt": "2020-03-17T18:57:50Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "diffHunk": "@@ -735,12 +792,17 @@ public StudentParticipation findOneWithEagerSubmissionsAndResults(Long participa\n     /**\n      * Get all programming exercise participations belonging to exercise and student with eager results and submissions.\n      *\n-     * @param exerciseId the id of exercise\n+     * @param exercise  the exercise\n      * @param studentId the id of student\n      * @return the list of programming exercise participations belonging to exercise and student\n      */\n-    public List<StudentParticipation> findByExerciseIdAndStudentIdWithEagerResultsAndSubmissions(Long exerciseId, Long studentId) {\n-        return studentParticipationRepository.findByExerciseIdAndStudentIdWithEagerResultsAndSubmissions(exerciseId, studentId);\n+    public List<StudentParticipation> findByExerciseIdAndStudentIdWithEagerResultsAndSubmissions(Exercise exercise, Long studentId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 247}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk3NDEyNw==", "bodyText": "Fixed.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393974127", "createdAt": "2020-03-17T21:13:25Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "diffHunk": "@@ -735,12 +792,17 @@ public StudentParticipation findOneWithEagerSubmissionsAndResults(Long participa\n     /**\n      * Get all programming exercise participations belonging to exercise and student with eager results and submissions.\n      *\n-     * @param exerciseId the id of exercise\n+     * @param exercise  the exercise\n      * @param studentId the id of student\n      * @return the list of programming exercise participations belonging to exercise and student\n      */\n-    public List<StudentParticipation> findByExerciseIdAndStudentIdWithEagerResultsAndSubmissions(Long exerciseId, Long studentId) {\n-        return studentParticipationRepository.findByExerciseIdAndStudentIdWithEagerResultsAndSubmissions(exerciseId, studentId);\n+    public List<StudentParticipation> findByExerciseIdAndStudentIdWithEagerResultsAndSubmissions(Exercise exercise, Long studentId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwMjg4OA=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 247}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTYwMTY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingSubmissionService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODo1OToyNFrOF3p-ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMToxMzo1MlrOF3uSLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwMzcyMg==", "bodyText": "Usage of misleading method, see ParticipationService.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393903722", "createdAt": "2020-03-17T18:59:24Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingSubmissionService.java", "diffHunk": "@@ -187,8 +187,7 @@ public ModelingSubmission lockModelingSubmissionWithoutResult(ModelingExercise m\n      * @return the saved modelingSubmission entity\n      */\n     public ModelingSubmission save(ModelingSubmission modelingSubmission, ModelingExercise modelingExercise, String username) {\n-        Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginWithEagerSubmissionsAnyState(modelingExercise.getId(),\n-                username);\n+        Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginWithEagerSubmissionsAnyState(modelingExercise, username);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk3NDMxOQ==", "bodyText": "See above (fixed).", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393974319", "createdAt": "2020-03-17T21:13:52Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingSubmissionService.java", "diffHunk": "@@ -187,8 +187,7 @@ public ModelingSubmission lockModelingSubmissionWithoutResult(ModelingExercise m\n      * @return the saved modelingSubmission entity\n      */\n     public ModelingSubmission save(ModelingSubmission modelingSubmission, ModelingExercise modelingExercise, String username) {\n-        Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginWithEagerSubmissionsAnyState(modelingExercise.getId(),\n-                username);\n+        Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginWithEagerSubmissionsAnyState(modelingExercise, username);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwMzcyMg=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTYwMjE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/FileUploadSubmissionService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODo1OTozMVrOF3p-sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMToxNDowMlrOF3uSiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwMzc5NQ==", "bodyText": "Usage of misleading method, see ParticipationService.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393903795", "createdAt": "2020-03-17T18:59:31Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/FileUploadSubmissionService.java", "diffHunk": "@@ -70,7 +70,7 @@ public FileUploadSubmissionService(FileUploadSubmissionRepository fileUploadSubm\n     @Transactional\n     public FileUploadSubmission handleFileUploadSubmission(FileUploadSubmission fileUploadSubmission, MultipartFile file, FileUploadExercise fileUploadExercise,\n             Principal principal) throws IOException, EmptyFileException {\n-        Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginAnyState(fileUploadExercise.getId(), principal.getName());\n+        Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginAnyState(fileUploadExercise, principal.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk3NDQxMQ==", "bodyText": "See above (fixed).", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393974411", "createdAt": "2020-03-17T21:14:02Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/FileUploadSubmissionService.java", "diffHunk": "@@ -70,7 +70,7 @@ public FileUploadSubmissionService(FileUploadSubmissionRepository fileUploadSubm\n     @Transactional\n     public FileUploadSubmission handleFileUploadSubmission(FileUploadSubmission fileUploadSubmission, MultipartFile file, FileUploadExercise fileUploadExercise,\n             Principal principal) throws IOException, EmptyFileException {\n-        Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginAnyState(fileUploadExercise.getId(), principal.getName());\n+        Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginAnyState(fileUploadExercise, principal.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwMzc5NQ=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTYyMDUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ResultResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTowNTozMlrOF3qK7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTowNTozMlrOF3qK7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwNjkyNA==", "bodyText": "Usage of misleading method, see ParticipationService.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393906924", "createdAt": "2020-03-17T19:05:32Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ResultResource.java", "diffHunk": "@@ -553,7 +553,7 @@ else if (participation instanceof ProgrammingExerciseParticipation) {\n         }\n \n         // Check if a result exists already for this exercise and student. If so, do nothing and just inform the instructor.\n-        Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginAnyStateWithEagerResults(exerciseId, studentLogin);\n+        Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginAnyStateWithEagerResults(exercise, studentLogin);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTYyNjcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ExerciseResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTowNzo0MFrOF3qPKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTowNzo0MFrOF3qPKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwODAwOA==", "bodyText": "Usage of misleading method, see ParticipationService.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393908008", "createdAt": "2020-03-17T19:07:40Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ExerciseResource.java", "diffHunk": "@@ -306,7 +306,7 @@ private StatsForInstructorDashboardDTO populateCommonStatistics(Exercise exercis\n         }\n \n         if (exercise != null) {\n-            List<StudentParticipation> participations = participationService.findByExerciseIdAndStudentIdWithEagerResultsAndSubmissions(exercise.getId(), user.getId());\n+            List<StudentParticipation> participations = participationService.findByExerciseIdAndStudentIdWithEagerResultsAndSubmissions(exercise, user.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTY0NDE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/GitService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToxMzozNVrOF3qa5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjoxNToyNlrOF6CwGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMTAxNQ==", "bodyText": "Is it possible that a team has no members when this is called (e.g. all team members are removed for some reason?)?\nThis would cause an error here, but I don't know if that's a problem or if this is not possible.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393911015", "createdAt": "2020-03-17T19:13:35Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/GitService.java", "diffHunk": "@@ -469,7 +469,7 @@ public void combineAllStudentCommits(Repository repository, ProgrammingExercise\n \n             studentGit.reset().setMode(ResetCommand.ResetType.SOFT).setRef(latestHash.getName()).call();\n             studentGit.add().addFilepattern(\".\").call();\n-            var student = ((StudentParticipation) repository.getParticipation()).getStudent();\n+            var student = ((StudentParticipation) repository.getParticipation()).getStudents().iterator().next();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQwNjgxMA==", "bodyText": "Great catch. In theory it would indeed be possible that someone removed all students from a team that already has programming exercise participations before this method is called. Then this would have thrown a NoSuchElementException. I fixed it so that it uses the existing fallback correctly for empty teams.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r396406810", "createdAt": "2020-03-23T12:15:26Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/GitService.java", "diffHunk": "@@ -469,7 +469,7 @@ public void combineAllStudentCommits(Repository repository, ProgrammingExercise\n \n             studentGit.reset().setMode(ResetCommand.ResetType.SOFT).setRef(latestHash.getName()).call();\n             studentGit.add().addFilepattern(\".\").call();\n-            var student = ((StudentParticipation) repository.getParticipation()).getStudent();\n+            var student = ((StudentParticipation) repository.getParticipation()).getStudents().iterator().next();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxMTAxNQ=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTY3MTU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseExportService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToyMjo1OFrOF3qtUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzo1NjowNFrOF8TZaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNTcyOQ==", "bodyText": "I would assume this is fine for the log, but maybe @krusche should decide that.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393915729", "createdAt": "2020-03-17T19:22:58Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseExportService.java", "diffHunk": "@@ -87,8 +87,9 @@ public File exportStudentRepositories(long programmingExerciseId, @NotNull List<\n             log.info(\"Request to export all student repositories of programming exercise \" + programmingExerciseId + \" with title '\" + programmingExercise.getTitle() + \"'\");\n         }\n         else {\n+            // TODO: Is this the expected behavior for teams? Or should all team members be listed instead?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxMDkyOA==", "bodyText": "The TODO placement might have been a little misleading; it refers to the whole method and not just the log statement. But I think you are right that only @krusche has enough insight here to know how exportStudentRepositories should behave for teams. The behavior right now is that it treats teams as it would treat students (and uses the team shortName for the student login).", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r396410928", "createdAt": "2020-03-23T12:23:04Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseExportService.java", "diffHunk": "@@ -87,8 +87,9 @@ public File exportStudentRepositories(long programmingExerciseId, @NotNull List<\n             log.info(\"Request to export all student repositories of programming exercise \" + programmingExerciseId + \" with title '\" + programmingExercise.getTitle() + \"'\");\n         }\n         else {\n+            // TODO: Is this the expected behavior for teams? Or should all team members be listed instead?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNTcyOQ=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc3NjY4MA==", "bodyText": "should be ok", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r398776680", "createdAt": "2020-03-26T17:56:04Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseExportService.java", "diffHunk": "@@ -87,8 +87,9 @@ public File exportStudentRepositories(long programmingExerciseId, @NotNull List<\n             log.info(\"Request to export all student repositories of programming exercise \" + programmingExerciseId + \" with title '\" + programmingExercise.getTitle() + \"'\");\n         }\n         else {\n+            // TODO: Is this the expected behavior for teams? Or should all team members be listed instead?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNTcyOQ=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTY3NDc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseParticipationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToyMzo1MVrOF3qvSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjoyNTozNlrOF6DFhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNjIzNA==", "bodyText": "I find this method name now misleading: It pretends to use a exercise id (as it did before), but uses an Exercise object now.\nSame as in ParticipationService.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393916234", "createdAt": "2020-03-17T19:23:51Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseParticipationService.java", "diffHunk": "@@ -104,17 +106,24 @@ public TemplateProgrammingExerciseParticipation findTemplateParticipationByProgr\n     /**\n      * Tries to retrieve a student participation for the given exercise id and username.\n      *\n-     * @param exerciseId id of the exercise.\n+     * @param exercise the exercise for which to find a participation\n      * @param username of the user to which the participation belongs.\n      * @return the participation for the given exercise and user.\n      * @throws EntityNotFoundException if there is no participation for the given exercise and user.\n      */\n     @Transactional(readOnly = true)\n     @NotNull\n-    public ProgrammingExerciseStudentParticipation findStudentParticipationByExerciseIdAndStudentId(Long exerciseId, String username) throws EntityNotFoundException {\n-        Optional<ProgrammingExerciseStudentParticipation> participation = studentParticipationRepository.findByExerciseIdAndStudentLogin(exerciseId, username);\n+    public ProgrammingExerciseStudentParticipation findStudentParticipationByExerciseIdAndStudentId(Exercise exercise, String username) throws EntityNotFoundException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxMjI5Mg==", "bodyText": "Fixed", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r396412292", "createdAt": "2020-03-23T12:25:36Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseParticipationService.java", "diffHunk": "@@ -104,17 +106,24 @@ public TemplateProgrammingExerciseParticipation findTemplateParticipationByProgr\n     /**\n      * Tries to retrieve a student participation for the given exercise id and username.\n      *\n-     * @param exerciseId id of the exercise.\n+     * @param exercise the exercise for which to find a participation\n      * @param username of the user to which the participation belongs.\n      * @return the participation for the given exercise and user.\n      * @throws EntityNotFoundException if there is no participation for the given exercise and user.\n      */\n     @Transactional(readOnly = true)\n     @NotNull\n-    public ProgrammingExerciseStudentParticipation findStudentParticipationByExerciseIdAndStudentId(Long exerciseId, String username) throws EntityNotFoundException {\n-        Optional<ProgrammingExerciseStudentParticipation> participation = studentParticipationRepository.findByExerciseIdAndStudentLogin(exerciseId, username);\n+    public ProgrammingExerciseStudentParticipation findStudentParticipationByExerciseIdAndStudentId(Exercise exercise, String username) throws EntityNotFoundException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNjIzNA=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTY4NTI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/TextSubmissionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToyNzoxM1rOF3q2KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOToyNzoxM1rOF3q2KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkxNzk5Mw==", "bodyText": "Usage of misleading method.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393917993", "createdAt": "2020-03-17T19:27:13Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/TextSubmissionService.java", "diffHunk": "@@ -72,7 +72,7 @@ public TextSubmissionService(TextSubmissionRepository textSubmissionRepository,\n     public TextSubmission handleTextSubmission(TextSubmission textSubmission, TextExercise textExercise, Principal principal) {\n         // Don't allow submissions after the due date (except if the exercise was started after the due date)\n         final var dueDate = textExercise.getDueDate();\n-        final var optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginAnyState(textExercise.getId(), principal.getName());\n+        final var optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginAnyState(textExercise, principal.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTcxOTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/Exercise.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTozODoyNFrOF3rMtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMTo1MzowN1rOF6CDOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyMzc2Ng==", "bodyText": "I don't know if I understand this correctly:\nThis field can have several values for the same Exercise depending on what user is interacting with the Exercise, correct?", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393923766", "createdAt": "2020-03-17T19:38:24Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Exercise.java", "diffHunk": "@@ -172,6 +172,9 @@\n     @Transient\n     private Long numberOfOpenMoreFeedbackRequestsTransient;\n \n+    @Transient\n+    private Long studentAssignedTeamIdTransient; // id of the team that the logged-in user is assigned to (only relevant if team mode is enabled)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM5NTMyMg==", "bodyText": "Yes, that is correct. It is a dynamically set transient property and the value depends on the logged-in user. There is some precedent for this already on the Exercise model, namely studentParticipations depend on the user as well.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r396395322", "createdAt": "2020-03-23T11:53:07Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Exercise.java", "diffHunk": "@@ -172,6 +172,9 @@\n     @Transient\n     private Long numberOfOpenMoreFeedbackRequestsTransient;\n \n+    @Transient\n+    private Long studentAssignedTeamIdTransient; // id of the team that the logged-in user is assigned to (only relevant if team mode is enabled)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyMzc2Ng=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTcyMjc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ExerciseService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTozOToyNVrOF3rOpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjoyODowMVrOF6DKlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyNDI2Mg==", "bodyText": "See comment of the field in the class Exercise.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393924262", "createdAt": "2020-03-17T19:39:25Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ExerciseService.java", "diffHunk": "@@ -123,9 +126,15 @@ else if (authCheckService.isStudentInCourse(course, user)) {\n             exercises = exercises.stream().filter(Exercise::isVisibleToStudents).collect(Collectors.toList());\n         }\n \n-        // filter out questions and all statistical information about the quizPointStatistic from quizExercises (so users can't see which answer options are correct)\n         if (exercises != null) {\n             for (Exercise exercise : exercises) {\n+                // for team-based exercises: add the team that the user has been assigned to onto the exercise\n+                if (exercise.isTeamMode()) {\n+                    teamService.findOneByExerciseAndUser(exercise, user).ifPresent(team -> {\n+                        exercise.setStudentAssignedTeamId(team.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxMzU4OQ==", "bodyText": "I responded to that comment.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r396413589", "createdAt": "2020-03-23T12:28:01Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ExerciseService.java", "diffHunk": "@@ -123,9 +126,15 @@ else if (authCheckService.isStudentInCourse(course, user)) {\n             exercises = exercises.stream().filter(Exercise::isVisibleToStudents).collect(Collectors.toList());\n         }\n \n-        // filter out questions and all statistical information about the quizPointStatistic from quizExercises (so users can't see which answer options are correct)\n         if (exercises != null) {\n             for (Exercise exercise : exercises) {\n+                // for team-based exercises: add the team that the user has been assigned to onto the exercise\n+                if (exercise.isTeamMode()) {\n+                    teamService.findOneByExerciseAndUser(exercise, user).ifPresent(team -> {\n+                        exercise.setStudentAssignedTeamId(team.getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyNDI2Mg=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTcyNzQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/BitbucketService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo0MDo1NlrOF3rRxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMTo1NDo1MFrOF6CG3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyNTA2Mw==", "bodyText": "This behaviour will be changed in a future PR, right?", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393925063", "createdAt": "2020-03-17T19:40:56Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/BitbucketService.java", "diffHunk": "@@ -79,36 +79,50 @@ public BitbucketService(UserService userService, @Qualifier(\"bitbucketRestTempla\n     }\n \n     @Override\n-    public void configureRepository(URL repositoryUrl, String username) {\n-        if (username.startsWith(USER_PREFIX_EDX) || username.startsWith((USER_PREFIX_U4I))) {\n-            // It is an automatically created user\n+    public void configureRepository(URL repositoryUrl, Set<User> users) {\n+        for (User user : users) {\n+            String username = user.getLogin();\n \n-            User user = userService.getUserWithGroupsByLogin(username).get();\n+            if (username.startsWith(USER_PREFIX_EDX) || username.startsWith((USER_PREFIX_U4I))) {\n+                // It is an automatically created user\n \n-            if (!userExists(username)) {\n-                log.debug(\"Bitbucket user {} does not exist yet\", username);\n-                String displayName = (user.getFirstName() + \" \" + user.getLastName()).trim();\n-                createUser(username, userService.decryptPasswordByLogin(username).get(), user.getEmail(), displayName);\n+                if (!userExists(username)) {\n+                    log.debug(\"Bitbucket user {} does not exist yet\", username);\n+                    String displayName = (user.getFirstName() + \" \" + user.getLastName()).trim();\n+                    createUser(username, userService.decryptPasswordByLogin(username).get(), user.getEmail(), displayName);\n \n-                try {\n-                    addUserToGroups(username, user.getGroups());\n+                    try {\n+                        addUserToGroups(username, user.getGroups());\n+                    }\n+                    catch (BitbucketException e) {\n+                        /*\n+                         * This might throw exceptions, for example if the group does not exist on Bitbucket. We can safely ignore them.\n+                         */\n+                    }\n                 }\n-                catch (BitbucketException e) {\n-                    /*\n-                     * This might throw exceptions, for example if the group does not exist on Bitbucket. We can safely ignore them.\n-                     */\n+                else {\n+                    log.debug(\"Bitbucket user {} already exists\", username);\n                 }\n-            }\n-            else {\n-                log.debug(\"Bitbucket user {} already exists\", username);\n+\n             }\n \n+            addMemberToRepository(repositoryUrl, user);\n         }\n \n-        giveWritePermission(getProjectKeyFromUrl(repositoryUrl), getRepositorySlugFromUrl(repositoryUrl), username);\n         protectBranches(getProjectKeyFromUrl(repositoryUrl), getRepositorySlugFromUrl(repositoryUrl));\n     }\n \n+    @Override\n+    public void addMemberToRepository(URL repositoryUrl, User user) {\n+        giveWritePermission(getProjectKeyFromUrl(repositoryUrl), getRepositorySlugFromUrl(repositoryUrl), user.getLogin());\n+    }\n+\n+    @Override\n+    public void removeMemberFromRepository(URL repositoryUrl, User user) {\n+        // TODO: Instead of reducing the permissions to readOnly, the user should be removed from the repo entirely", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM5NjI1NA==", "bodyText": "Yes, I think it's better to do this in a separate PR. I put it on my todo list, so it won't be forgotten.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r396396254", "createdAt": "2020-03-23T11:54:50Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/BitbucketService.java", "diffHunk": "@@ -79,36 +79,50 @@ public BitbucketService(UserService userService, @Qualifier(\"bitbucketRestTempla\n     }\n \n     @Override\n-    public void configureRepository(URL repositoryUrl, String username) {\n-        if (username.startsWith(USER_PREFIX_EDX) || username.startsWith((USER_PREFIX_U4I))) {\n-            // It is an automatically created user\n+    public void configureRepository(URL repositoryUrl, Set<User> users) {\n+        for (User user : users) {\n+            String username = user.getLogin();\n \n-            User user = userService.getUserWithGroupsByLogin(username).get();\n+            if (username.startsWith(USER_PREFIX_EDX) || username.startsWith((USER_PREFIX_U4I))) {\n+                // It is an automatically created user\n \n-            if (!userExists(username)) {\n-                log.debug(\"Bitbucket user {} does not exist yet\", username);\n-                String displayName = (user.getFirstName() + \" \" + user.getLastName()).trim();\n-                createUser(username, userService.decryptPasswordByLogin(username).get(), user.getEmail(), displayName);\n+                if (!userExists(username)) {\n+                    log.debug(\"Bitbucket user {} does not exist yet\", username);\n+                    String displayName = (user.getFirstName() + \" \" + user.getLastName()).trim();\n+                    createUser(username, userService.decryptPasswordByLogin(username).get(), user.getEmail(), displayName);\n \n-                try {\n-                    addUserToGroups(username, user.getGroups());\n+                    try {\n+                        addUserToGroups(username, user.getGroups());\n+                    }\n+                    catch (BitbucketException e) {\n+                        /*\n+                         * This might throw exceptions, for example if the group does not exist on Bitbucket. We can safely ignore them.\n+                         */\n+                    }\n                 }\n-                catch (BitbucketException e) {\n-                    /*\n-                     * This might throw exceptions, for example if the group does not exist on Bitbucket. We can safely ignore them.\n-                     */\n+                else {\n+                    log.debug(\"Bitbucket user {} already exists\", username);\n                 }\n-            }\n-            else {\n-                log.debug(\"Bitbucket user {} already exists\", username);\n+\n             }\n \n+            addMemberToRepository(repositoryUrl, user);\n         }\n \n-        giveWritePermission(getProjectKeyFromUrl(repositoryUrl), getRepositorySlugFromUrl(repositoryUrl), username);\n         protectBranches(getProjectKeyFromUrl(repositoryUrl), getRepositorySlugFromUrl(repositoryUrl));\n     }\n \n+    @Override\n+    public void addMemberToRepository(URL repositoryUrl, User user) {\n+        giveWritePermission(getProjectKeyFromUrl(repositoryUrl), getRepositorySlugFromUrl(repositoryUrl), user.getLogin());\n+    }\n+\n+    @Override\n+    public void removeMemberFromRepository(URL repositoryUrl, User user) {\n+        // TODO: Instead of reducing the permissions to readOnly, the user should be removed from the repo entirely", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyNTA2Mw=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTc0MzExOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo0NjowNVrOF3rcBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMToxNjo1OVrOF3uYZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyNzY4NA==", "bodyText": "Usage of misleading method.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393927684", "createdAt": "2020-03-17T19:46:05Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -430,7 +438,7 @@ public ResponseEntity getParticipationBuildArtifact(@PathVariable Long participa\n             response = participationForQuizExercise((QuizExercise) exercise, principal.getName());\n         }\n         else {\n-            Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginAnyStateWithEagerResults(exerciseId, principal.getName());\n+            Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginAnyStateWithEagerResults(exercise, principal.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk3NTkwOQ==", "bodyText": "Fixed.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393975909", "createdAt": "2020-03-17T21:16:59Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -430,7 +438,7 @@ public ResponseEntity getParticipationBuildArtifact(@PathVariable Long participa\n             response = participationForQuizExercise((QuizExercise) exercise, principal.getName());\n         }\n         else {\n-            Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginAnyStateWithEagerResults(exerciseId, principal.getName());\n+            Optional<StudentParticipation> optionalParticipation = participationService.findOneByExerciseIdAndStudentLoginAnyStateWithEagerResults(exercise, principal.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyNzY4NA=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTgxMTY2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/i18n/de/exercise.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDowNjo1NlrOF3sHQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMTo1NjowN1rOF3vd_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzODc1NA==", "bodyText": "Maybe we find a different translation here (maybe without two oder), but this is really minor.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393938754", "createdAt": "2020-03-17T20:06:56Z", "author": {"login": "sleiss"}, "path": "src/main/webapp/i18n/de/exercise.json", "diffHunk": "@@ -10,12 +10,12 @@\n             \"resultsPerPage\": \"{{number}} Ergebnisse pro Seite\",\n             \"showAllResults\": \"Zeige alle Ergebnisse\",\n             \"searchForStudents\": \"Suche nach Studenten Logins oder Namen (Komma getrennt)\",\n-            \"searchForTeams\": \"Suche nach Team Namen (Komma getrennt)\",\n+            \"searchForTeams\": \"Suche nach Team (Kurz-)Namen oder nach Studenten Logins oder Namen (Komma getrennt)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk5MzcyNw==", "bodyText": "Yeah, the two oder do make it sound a little more complicated than it probably has to be. I'll change it to Suche nach Team (Kurz-)Namen oder nach Studenten Logins/Namen (Komma getrennt).", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393993727", "createdAt": "2020-03-17T21:56:07Z", "author": {"login": "madwau"}, "path": "src/main/webapp/i18n/de/exercise.json", "diffHunk": "@@ -10,12 +10,12 @@\n             \"resultsPerPage\": \"{{number}} Ergebnisse pro Seite\",\n             \"showAllResults\": \"Zeige alle Ergebnisse\",\n             \"searchForStudents\": \"Suche nach Studenten Logins oder Namen (Komma getrennt)\",\n-            \"searchForTeams\": \"Suche nach Team Namen (Komma getrennt)\",\n+            \"searchForTeams\": \"Suche nach Team (Kurz-)Namen oder nach Studenten Logins oder Namen (Komma getrennt)\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzODc1NA=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTgxMzEyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/i18n/de/exercise.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDowNzoyNVrOF3sIKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMTo1NDowN1rOF3vadw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzODk4NA==", "bodyText": "Is it important to state that it's the short name of the team?", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393938984", "createdAt": "2020-03-17T20:07:25Z", "author": {"login": "sleiss"}, "path": "src/main/webapp/i18n/de/exercise.json", "diffHunk": "@@ -69,6 +69,8 @@\n             \"startError\": \"<strong>Uh oh! Etwas ist schief gelaufen... Bitte versuch es in wenigen Minuten noch einmal die Aufgabe zu starten.</strong>\",\n             \"studentName\": \"Name\",\n             \"studentId\": \"Login\",\n+            \"teamName\": \"Team Name\",\n+            \"teamShortName\": \"Kurzname\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk4MjM3MA==", "bodyText": "You are right that this is a little inconsistent when looking at the translation of teamName vs teamShortName. The reason why I left out the Team in the translation of teamShortName is that it gets used right in the column header next to Team Name, so that it is obvious from context that the short name refers to the team and I wanted to save horizontal space since the column otherwise doesn't necessarily need that much width.\nBut it does feel like a bad practice to \"cheat\" with the translation for a specific use case. What I'll do: I'll rename this translation to Team Kurzname and add another translation pair just for shortName (if it doesn't already exist elsewhere). I think that's a good solution.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393982370", "createdAt": "2020-03-17T21:30:44Z", "author": {"login": "madwau"}, "path": "src/main/webapp/i18n/de/exercise.json", "diffHunk": "@@ -69,6 +69,8 @@\n             \"startError\": \"<strong>Uh oh! Etwas ist schief gelaufen... Bitte versuch es in wenigen Minuten noch einmal die Aufgabe zu starten.</strong>\",\n             \"studentName\": \"Name\",\n             \"studentId\": \"Login\",\n+            \"teamName\": \"Team Name\",\n+            \"teamShortName\": \"Kurzname\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzODk4NA=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk5MjgyMw==", "bodyText": "Hm, on second thought that doesn't make too much sense either since the two student-related translations above also don't follow that kind of schema. I'd now probably tend to keep it as is where teamName is kind of the exception in that it contains the entity name in the translation value but I think that makes sense to differentiate it from the value of studentName (although in context it will probablt be obvious that those names are not student names but team names; the exception is when the table does not contain any rows).", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393992823", "createdAt": "2020-03-17T21:54:07Z", "author": {"login": "madwau"}, "path": "src/main/webapp/i18n/de/exercise.json", "diffHunk": "@@ -69,6 +69,8 @@\n             \"startError\": \"<strong>Uh oh! Etwas ist schief gelaufen... Bitte versuch es in wenigen Minuten noch einmal die Aufgabe zu starten.</strong>\",\n             \"studentName\": \"Name\",\n             \"studentId\": \"Login\",\n+            \"teamName\": \"Team Name\",\n+            \"teamShortName\": \"Kurzname\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzODk4NA=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTgxNDUyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/i18n/en/exercise.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDowNzo1NlrOF3sJFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMTo1NjoxNlrOF3veRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzOTIyMQ==", "bodyText": "Same as in German.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393939221", "createdAt": "2020-03-17T20:07:56Z", "author": {"login": "sleiss"}, "path": "src/main/webapp/i18n/en/exercise.json", "diffHunk": "@@ -10,7 +10,7 @@\n             \"resultsPerPage\": \"{{number}} results per page\",\n             \"showAllResults\": \"Show all results\",\n             \"searchForStudents\": \"Search for students by login or name (comma separated)\",\n-            \"searchForTeams\": \"Search for teams by name (comma separated)\",\n+            \"searchForTeams\": \"Search for teams by (short) name or for students by login or name (comma separated)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk5Mzc5OQ==", "bodyText": "See comment above.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393993799", "createdAt": "2020-03-17T21:56:16Z", "author": {"login": "madwau"}, "path": "src/main/webapp/i18n/en/exercise.json", "diffHunk": "@@ -10,7 +10,7 @@\n             \"resultsPerPage\": \"{{number}} results per page\",\n             \"showAllResults\": \"Show all results\",\n             \"searchForStudents\": \"Search for students by login or name (comma separated)\",\n-            \"searchForTeams\": \"Search for teams by name (comma separated)\",\n+            \"searchForTeams\": \"Search for teams by (short) name or for students by login or name (comma separated)\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzOTIyMQ=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTgxNDg4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/i18n/en/exercise.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDowODowMlrOF3sJSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMTo1NDoxN1rOF3vaww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzOTI3NA==", "bodyText": "Same as in German.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393939274", "createdAt": "2020-03-17T20:08:02Z", "author": {"login": "sleiss"}, "path": "src/main/webapp/i18n/en/exercise.json", "diffHunk": "@@ -69,6 +69,8 @@\n             \"startError\": \"<strong>Uh oh! Something went wrong... Please try again to start the exercise in a few minutes.</strong>\",\n             \"studentName\": \"Name\",\n             \"studentId\": \"Login\",\n+            \"teamName\": \"Team Name\",\n+            \"teamShortName\": \"Short Name\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk5Mjg5OQ==", "bodyText": "See comment above.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r393992899", "createdAt": "2020-03-17T21:54:17Z", "author": {"login": "madwau"}, "path": "src/main/webapp/i18n/en/exercise.json", "diffHunk": "@@ -69,6 +69,8 @@\n             \"startError\": \"<strong>Uh oh! Something went wrong... Please try again to start the exercise in a few minutes.</strong>\",\n             \"studentName\": \"Name\",\n             \"studentId\": \"Login\",\n+            \"teamName\": \"Team Name\",\n+            \"teamShortName\": \"Short Name\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzOTI3NA=="}, "originalCommit": {"oid": "4a012038c34eb91afd0fa757114c1084ee7dc89d"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjkwOTI0OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseBitbucketBambooIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToxOTozMVrOF7gQDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTo1NDo1NlrOF7iA1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzODcwMA==", "bodyText": "Is there a typo in studentTeamOriginaRepo?", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r397938700", "createdAt": "2020-03-25T15:19:31Z", "author": {"login": "sleiss"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseBitbucketBambooIntegrationTest.java", "diffHunk": "@@ -113,37 +132,44 @@ public void setup() throws Exception {\n         testRepo.configureRepos(\"testLocalRepo\", \"testOriginRepo\");\n         solutionRepo.configureRepos(\"solutionLocalRepo\", \"solutionOriginRepo\");\n         studentRepo.configureRepos(\"studentRepo\", \"studentOriginaRepo\");\n+        studentTeamRepo.configureRepos(\"studentTeamRepo\", \"studentTeamOriginaRepo\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6cc8f5f51bde2e6498f7329c0099796d3f76c2f"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk1MDgxMQ==", "bodyText": "Definitely looks like a typo to me in the original studentOriginaRepo in the line above. I fixed both occurences.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r397950811", "createdAt": "2020-03-25T15:34:24Z", "author": {"login": "madwau"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseBitbucketBambooIntegrationTest.java", "diffHunk": "@@ -113,37 +132,44 @@ public void setup() throws Exception {\n         testRepo.configureRepos(\"testLocalRepo\", \"testOriginRepo\");\n         solutionRepo.configureRepos(\"solutionLocalRepo\", \"solutionOriginRepo\");\n         studentRepo.configureRepos(\"studentRepo\", \"studentOriginaRepo\");\n+        studentTeamRepo.configureRepos(\"studentTeamRepo\", \"studentTeamOriginaRepo\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzODcwMA=="}, "originalCommit": {"oid": "d6cc8f5f51bde2e6498f7329c0099796d3f76c2f"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2NzU3Mw==", "bodyText": "Perfect!", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r397967573", "createdAt": "2020-03-25T15:54:56Z", "author": {"login": "sleiss"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseBitbucketBambooIntegrationTest.java", "diffHunk": "@@ -113,37 +132,44 @@ public void setup() throws Exception {\n         testRepo.configureRepos(\"testLocalRepo\", \"testOriginRepo\");\n         solutionRepo.configureRepos(\"solutionLocalRepo\", \"solutionOriginRepo\");\n         studentRepo.configureRepos(\"studentRepo\", \"studentOriginaRepo\");\n+        studentTeamRepo.configureRepos(\"studentTeamRepo\", \"studentTeamOriginaRepo\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzODcwMA=="}, "originalCommit": {"oid": "d6cc8f5f51bde2e6498f7329c0099796d3f76c2f"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjE4NjAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseExportService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzo1Njo0NlrOF8TbWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwOTo1NDoxMlrOF9QPGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc3NzE3OA==", "bodyText": "I guess the variable studentId should then be renamed to participantId", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r398777178", "createdAt": "2020-03-26T17:56:46Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseExportService.java", "diffHunk": "@@ -277,15 +278,15 @@ private void createZipFile(Path zipFilePath, List<Path> paths) throws IOExceptio\n     }\n \n     /**\n-     * Adds the student id of the given student participation to the project name in all .project (Eclipse)\n+     * Adds the student/team identifier of the given student participation to the project name in all .project (Eclipse)\n      * and pom.xml (Maven) files found in the given repository.\n      *\n      * @param repo The repository for which the student id should get added\n      * @param programmingExercise The checked out exercise in the repository\n-     * @param participation The student participation for the student id, which should be added.\n+     * @param participation The student participation for the student/team identifier, which should be added.\n      */\n     public void addStudentIdToProjectName(Repository repo, ProgrammingExercise programmingExercise, StudentParticipation participation) {\n-        String studentId = participation.getStudent().getLogin();\n+        String studentId = participation.getParticipantIdentifier();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc3MzQ2NQ==", "bodyText": "Renamed it to participantIdentifier.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r399773465", "createdAt": "2020-03-29T09:54:12Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseExportService.java", "diffHunk": "@@ -277,15 +278,15 @@ private void createZipFile(Path zipFilePath, List<Path> paths) throws IOExceptio\n     }\n \n     /**\n-     * Adds the student id of the given student participation to the project name in all .project (Eclipse)\n+     * Adds the student/team identifier of the given student participation to the project name in all .project (Eclipse)\n      * and pom.xml (Maven) files found in the given repository.\n      *\n      * @param repo The repository for which the student id should get added\n      * @param programmingExercise The checked out exercise in the repository\n-     * @param participation The student participation for the student id, which should be added.\n+     * @param participation The student participation for the student/team identifier, which should be added.\n      */\n     public void addStudentIdToProjectName(Repository repo, ProgrammingExercise programmingExercise, StudentParticipation participation) {\n-        String studentId = participation.getStudent().getLogin();\n+        String studentId = participation.getParticipantIdentifier();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc3NzE3OA=="}, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjYwODM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/scheduled/AutomaticBuildPlanCleanupService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTo0NDoyNVrOF8Xl_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMDowMDowMlrOF9QRfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0NTQzNw==", "bodyText": "I guess we should update this comment", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r398845437", "createdAt": "2020-03-26T19:44:25Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/scheduled/AutomaticBuildPlanCleanupService.java", "diffHunk": "@@ -67,7 +67,7 @@ public void cleanupBuildPlans() {\n                 // already cleaned up\n                 continue;\n             }\n-            if (participation.getStudent() == null) {\n+            if (participation.getParticipant() == null) {\n                 // we only want to clean up build plans of students", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0NTY3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // we only want to clean up build plans of students\n          \n          \n            \n                            // we only want to clean up build plans of students or teams (NOT template or solution build plans)", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r398845672", "createdAt": "2020-03-26T19:44:50Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/scheduled/AutomaticBuildPlanCleanupService.java", "diffHunk": "@@ -67,7 +67,7 @@ public void cleanupBuildPlans() {\n                 // already cleaned up\n                 continue;\n             }\n-            if (participation.getStudent() == null) {\n+            if (participation.getParticipant() == null) {\n                 // we only want to clean up build plans of students", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0NTQzNw=="}, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc3NDA3OA==", "bodyText": "Updated", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r399774078", "createdAt": "2020-03-29T10:00:02Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/scheduled/AutomaticBuildPlanCleanupService.java", "diffHunk": "@@ -67,7 +67,7 @@ public void cleanupBuildPlans() {\n                 // already cleaned up\n                 continue;\n             }\n-            if (participation.getStudent() == null) {\n+            if (participation.getParticipant() == null) {\n                 // we only want to clean up build plans of students", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0NTQzNw=="}, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjYzODQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTo1MjoxNlrOF8X43w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMzo0NDoyN1rOF9R2Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1MDI3MQ==", "bodyText": "I think there is a small logic error here. In case of a team exercise, we would like to export the repository only, if the team was mentioned in the \"studentList\", otherwise we would export the same repository multiple times, if the students of the same team are mentioned here.\nSo I would suggest we rename studentList to participantList and instructors need to refer to team short names for a team exercise and to student logins for individual exercises.\nIf you don't want to change this here, please add a TODO and fix it in a subsequent PR", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r398850271", "createdAt": "2020-03-26T19:52:16Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -567,8 +567,8 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n         List<ProgrammingExerciseStudentParticipation> exportedStudentParticipations = new ArrayList<>();\n         for (StudentParticipation studentParticipation : programmingExercise.getStudentParticipations()) {\n             ProgrammingExerciseStudentParticipation programmingStudentParticipation = (ProgrammingExerciseStudentParticipation) studentParticipation;\n-            if (repositoryExportOptions.isExportAllStudents() || (programmingStudentParticipation.getRepositoryUrl() != null && studentParticipation.getStudent() != null\n-                    && studentList.contains(studentParticipation.getStudent().getLogin()))) {\n+            if (repositoryExportOptions.isExportAllStudents() || (programmingStudentParticipation.getRepositoryUrl() != null && studentParticipation.getParticipant() != null\n+                    && studentParticipation.getStudents().stream().map(User::getLogin).anyMatch(studentList::contains))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc4NzIyNA==", "bodyText": "You are correct. Right now the same repository would get exported multiple times if more than one student from the same team is entered.\nYour suggestion for how to handle this makes total sense. I'll include it here since it should be quick to adapt.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r399787224", "createdAt": "2020-03-29T11:57:39Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -567,8 +567,8 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n         List<ProgrammingExerciseStudentParticipation> exportedStudentParticipations = new ArrayList<>();\n         for (StudentParticipation studentParticipation : programmingExercise.getStudentParticipations()) {\n             ProgrammingExerciseStudentParticipation programmingStudentParticipation = (ProgrammingExerciseStudentParticipation) studentParticipation;\n-            if (repositoryExportOptions.isExportAllStudents() || (programmingStudentParticipation.getRepositoryUrl() != null && studentParticipation.getStudent() != null\n-                    && studentList.contains(studentParticipation.getStudent().getLogin()))) {\n+            if (repositoryExportOptions.isExportAllStudents() || (programmingStudentParticipation.getRepositoryUrl() != null && studentParticipation.getParticipant() != null\n+                    && studentParticipation.getStudents().stream().map(User::getLogin).anyMatch(studentList::contains))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1MDI3MQ=="}, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5OTg5NQ==", "bodyText": "Export for individual-mode exercises:\n\nExport for team-mode exercises:\n\nI tested the export for individual and team exercises with a specified list of participants and without (i.e. download all).", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r399799895", "createdAt": "2020-03-29T13:44:27Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -567,8 +567,8 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n         List<ProgrammingExerciseStudentParticipation> exportedStudentParticipations = new ArrayList<>();\n         for (StudentParticipation studentParticipation : programmingExercise.getStudentParticipations()) {\n             ProgrammingExerciseStudentParticipation programmingStudentParticipation = (ProgrammingExerciseStudentParticipation) studentParticipation;\n-            if (repositoryExportOptions.isExportAllStudents() || (programmingStudentParticipation.getRepositoryUrl() != null && studentParticipation.getStudent() != null\n-                    && studentList.contains(studentParticipation.getStudent().getLogin()))) {\n+            if (repositoryExportOptions.isExportAllStudents() || (programmingStudentParticipation.getRepositoryUrl() != null && studentParticipation.getParticipant() != null\n+                    && studentParticipation.getStudents().stream().map(User::getLogin).anyMatch(studentList::contains))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1MDI3MQ=="}, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjY5MjYwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/course/course-scores/course-scores.component.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDowNzo1MlrOF8YamQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMTo0NTo0MVrOF9Q_eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1ODkwNQ==", "bodyText": "can we use a for each loop like here, something like the following?\n(const student of students)\nBy the way, we should always prefer for each loops if they can be used", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r398858905", "createdAt": "2020-03-26T20:07:52Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/course/course-scores/course-scores.component.ts", "diffHunk": "@@ -144,14 +144,17 @@ export class CourseScoresComponent implements OnInit, OnDestroy {\n             }\n \n             // find all students by iterating through the participations\n-            let student = studentsMap.get(participation.student.id!);\n-            if (student == null) {\n-                student = new Student(participation.student);\n-                studentsMap.set(participation.student.id!, student);\n-            }\n-            student.participations.push(participation);\n-            if (participation.presentationScore) {\n-                student.presentationScore += participation.presentationScore;\n+            const students = participation.student ? [participation.student] : participation.team.students;\n+            for (let i = 0; i < students.length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1OTkzNQ==", "bodyText": "One more question: are you sure this is enough code so that really all students in the team get the points for their final score? Also in a mixed scenario with some individual and some team participations?", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r398859935", "createdAt": "2020-03-26T20:09:44Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/course/course-scores/course-scores.component.ts", "diffHunk": "@@ -144,14 +144,17 @@ export class CourseScoresComponent implements OnInit, OnDestroy {\n             }\n \n             // find all students by iterating through the participations\n-            let student = studentsMap.get(participation.student.id!);\n-            if (student == null) {\n-                student = new Student(participation.student);\n-                studentsMap.set(participation.student.id!, student);\n-            }\n-            student.participations.push(participation);\n-            if (participation.presentationScore) {\n-                student.presentationScore += participation.presentationScore;\n+            const students = participation.student ? [participation.student] : participation.team.students;\n+            for (let i = 0; i < students.length; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1ODkwNQ=="}, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc4NTg1MA==", "bodyText": "I switched the loop to a for (const x of xs) construct.\nYes, I just verified that this works as expected. In this scenario, the three marked students belong to the same team for a team-based text exercise. They received a result of 30/100 points for their submission. It was correctly credited to all of them and all of them were considered to have participated in this exercise.\n\nLeft: before participation, Right: after participation and assessment", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r399785850", "createdAt": "2020-03-29T11:45:41Z", "author": {"login": "madwau"}, "path": "src/main/webapp/app/course/course-scores/course-scores.component.ts", "diffHunk": "@@ -144,14 +144,17 @@ export class CourseScoresComponent implements OnInit, OnDestroy {\n             }\n \n             // find all students by iterating through the participations\n-            let student = studentsMap.get(participation.student.id!);\n-            if (student == null) {\n-                student = new Student(participation.student);\n-                studentsMap.set(participation.student.id!, student);\n-            }\n-            student.participations.push(participation);\n-            if (participation.presentationScore) {\n-                student.presentationScore += participation.presentationScore;\n+            const students = participation.student ? [participation.student] : participation.team.students;\n+            for (let i = 0; i < students.length; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1ODkwNQ=="}, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjczMjY2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/overview/exercise-details/exercise-details-student-actions.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDoxOToyMlrOF8Yzng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMDoxMTo0MlrOF9QWcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2NTMxMA==", "bodyText": "Normal users should not be able to navigate to course-management URLs.\nCan we offer the same page also on a different based on courses/:courseId/exercises/...", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r398865310", "createdAt": "2020-03-26T20:19:22Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/overview/exercise-details/exercise-details-student-actions.component.html", "diffHunk": "@@ -87,6 +87,15 @@\n <div *ngIf=\"exercise.type === ExerciseType.MODELING\">\n     <!-- ACTION START -->\n     <div class=\"btn-group mr-2\">\n+        <button\n+            jhi-exercise-action-button\n+            buttonIcon=\"users\"\n+            [buttonLabel]=\"'artemisApp.exerciseActions.viewTeam' | translate\"\n+            *ngIf=\"exercise.teamMode && participationStatusWrapper() !== ParticipationStatus.NO_TEAM_ASSIGNED\"\n+            [smallButton]=\"smallButtons\"\n+            [hideLabelMobile]=\"true\"\n+            [routerLink]=\"['/course-management', courseId, 'exercises', exercise.id, 'teams', assignedTeamId]\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc3NTM0NA==", "bodyText": "Good point. I added a student-specific route at courses/:courseId/exercises/:exerciseId/teams/:teamId and restricted the other one to TAs and above.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r399775344", "createdAt": "2020-03-29T10:11:42Z", "author": {"login": "madwau"}, "path": "src/main/webapp/app/overview/exercise-details/exercise-details-student-actions.component.html", "diffHunk": "@@ -87,6 +87,15 @@\n <div *ngIf=\"exercise.type === ExerciseType.MODELING\">\n     <!-- ACTION START -->\n     <div class=\"btn-group mr-2\">\n+        <button\n+            jhi-exercise-action-button\n+            buttonIcon=\"users\"\n+            [buttonLabel]=\"'artemisApp.exerciseActions.viewTeam' | translate\"\n+            *ngIf=\"exercise.teamMode && participationStatusWrapper() !== ParticipationStatus.NO_TEAM_ASSIGNED\"\n+            [smallButton]=\"smallButtons\"\n+            [hideLabelMobile]=\"true\"\n+            [routerLink]=\"['/course-management', courseId, 'exercises', exercise.id, 'teams', assignedTeamId]\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2NTMxMA=="}, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjczMjk3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/overview/exercise-details/exercise-details-student-actions.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDoxOToyOFrOF8Yz1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMDoxMTo1NVrOF9QWfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2NTM2NA==", "bodyText": "Normal users should not be able to navigate to course-management URLs.\nCan we offer the same page also on a different based on courses/:courseId/exercises/...", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r398865364", "createdAt": "2020-03-26T20:19:28Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/overview/exercise-details/exercise-details-student-actions.component.html", "diffHunk": "@@ -155,6 +164,16 @@\n <div *ngIf=\"exercise.type === ExerciseType.PROGRAMMING\">\n     <!-- ACTION START -->\n     <div class=\"btn-group\">\n+        <button\n+            class=\"view-team\"\n+            jhi-exercise-action-button\n+            buttonIcon=\"users\"\n+            [buttonLabel]=\"'artemisApp.exerciseActions.viewTeam' | translate\"\n+            *ngIf=\"exercise.teamMode && participationStatusWrapper() !== ParticipationStatus.NO_TEAM_ASSIGNED\"\n+            [smallButton]=\"smallButtons\"\n+            [hideLabelMobile]=\"true\"\n+            [routerLink]=\"['/course-management', courseId, 'exercises', exercise.id, 'teams', assignedTeamId]\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc3NTM1OQ==", "bodyText": "See comment above.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r399775359", "createdAt": "2020-03-29T10:11:55Z", "author": {"login": "madwau"}, "path": "src/main/webapp/app/overview/exercise-details/exercise-details-student-actions.component.html", "diffHunk": "@@ -155,6 +164,16 @@\n <div *ngIf=\"exercise.type === ExerciseType.PROGRAMMING\">\n     <!-- ACTION START -->\n     <div class=\"btn-group\">\n+        <button\n+            class=\"view-team\"\n+            jhi-exercise-action-button\n+            buttonIcon=\"users\"\n+            [buttonLabel]=\"'artemisApp.exerciseActions.viewTeam' | translate\"\n+            *ngIf=\"exercise.teamMode && participationStatusWrapper() !== ParticipationStatus.NO_TEAM_ASSIGNED\"\n+            [smallButton]=\"smallButtons\"\n+            [hideLabelMobile]=\"true\"\n+            [routerLink]=\"['/course-management', courseId, 'exercises', exercise.id, 'teams', assignedTeamId]\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2NTM2NA=="}, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjczMzMwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/overview/exercise-details/exercise-details-student-actions.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDoxOTozM1rOF8Y0Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMDoxMTo1OVrOF9QWhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2NTQxOA==", "bodyText": "Normal users should not be able to navigate to course-management URLs.\nCan we offer the same page also on a different based on courses/:courseId/exercises/...", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r398865418", "createdAt": "2020-03-26T20:19:33Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/overview/exercise-details/exercise-details-student-actions.component.html", "diffHunk": "@@ -250,6 +269,15 @@\n <div *ngIf=\"exercise.type === ExerciseType.TEXT\">\n     <!-- ACTIONS START -->\n     <div class=\"btn-group mr-2\">\n+        <button\n+            jhi-exercise-action-button\n+            buttonIcon=\"users\"\n+            [buttonLabel]=\"'artemisApp.exerciseActions.viewTeam' | translate\"\n+            *ngIf=\"exercise.teamMode && participationStatusWrapper() !== ParticipationStatus.NO_TEAM_ASSIGNED\"\n+            [smallButton]=\"smallButtons\"\n+            [hideLabelMobile]=\"true\"\n+            [routerLink]=\"['/course-management', courseId, 'exercises', exercise.id, 'teams', assignedTeamId]\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc3NTM2NQ==", "bodyText": "See comment above.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r399775365", "createdAt": "2020-03-29T10:11:59Z", "author": {"login": "madwau"}, "path": "src/main/webapp/app/overview/exercise-details/exercise-details-student-actions.component.html", "diffHunk": "@@ -250,6 +269,15 @@\n <div *ngIf=\"exercise.type === ExerciseType.TEXT\">\n     <!-- ACTIONS START -->\n     <div class=\"btn-group mr-2\">\n+        <button\n+            jhi-exercise-action-button\n+            buttonIcon=\"users\"\n+            [buttonLabel]=\"'artemisApp.exerciseActions.viewTeam' | translate\"\n+            *ngIf=\"exercise.teamMode && participationStatusWrapper() !== ParticipationStatus.NO_TEAM_ASSIGNED\"\n+            [smallButton]=\"smallButtons\"\n+            [hideLabelMobile]=\"true\"\n+            [routerLink]=\"['/course-management', courseId, 'exercises', exercise.id, 'teams', assignedTeamId]\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2NTQxOA=="}, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjczMzc0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/overview/exercise-details/exercise-details-student-actions.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDoxOTo0MFrOF8Y0Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMDoxMjowNFrOF9QWiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2NTQ5MA==", "bodyText": "Normal users should not be able to navigate to course-management URLs.\nCan we offer the same page also on a different based on courses/:courseId/exercises/...", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r398865490", "createdAt": "2020-03-26T20:19:40Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/overview/exercise-details/exercise-details-student-actions.component.html", "diffHunk": "@@ -318,6 +346,15 @@\n <div *ngIf=\"exercise.type === ExerciseType.FILE_UPLOAD\">\n     <!-- ACTIONS START -->\n     <div class=\"btn-group\">\n+        <button\n+            jhi-exercise-action-button\n+            buttonIcon=\"users\"\n+            [buttonLabel]=\"'artemisApp.exerciseActions.viewTeam' | translate\"\n+            *ngIf=\"exercise.teamMode && participationStatusWrapper() !== ParticipationStatus.NO_TEAM_ASSIGNED\"\n+            [smallButton]=\"smallButtons\"\n+            [hideLabelMobile]=\"true\"\n+            [routerLink]=\"['/course-management', courseId, 'exercises', exercise.id, 'teams', assignedTeamId]\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc3NTM3MQ==", "bodyText": "See comment above.", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r399775371", "createdAt": "2020-03-29T10:12:04Z", "author": {"login": "madwau"}, "path": "src/main/webapp/app/overview/exercise-details/exercise-details-student-actions.component.html", "diffHunk": "@@ -318,6 +346,15 @@\n <div *ngIf=\"exercise.type === ExerciseType.FILE_UPLOAD\">\n     <!-- ACTIONS START -->\n     <div class=\"btn-group\">\n+        <button\n+            jhi-exercise-action-button\n+            buttonIcon=\"users\"\n+            [buttonLabel]=\"'artemisApp.exerciseActions.viewTeam' | translate\"\n+            *ngIf=\"exercise.teamMode && participationStatusWrapper() !== ParticipationStatus.NO_TEAM_ASSIGNED\"\n+            [smallButton]=\"smallButtons\"\n+            [hideLabelMobile]=\"true\"\n+            [routerLink]=\"['/course-management', courseId, 'exercises', exercise.id, 'teams', assignedTeamId]\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2NTQ5MA=="}, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Mjc0ODkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDoyNDowOFrOF8Y-EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMDowMjoyMVrOF9QSaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2Nzk4NA==", "bodyText": "rename username to participantIdentifier", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r398867984", "createdAt": "2020-03-26T20:24:08Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "diffHunk": "@@ -497,7 +505,7 @@ private ProgrammingExerciseStudentParticipation copyBuildPlan(ProgrammingExercis\n         if (!participation.getInitializationState().hasCompletedState(InitializationState.BUILD_PLAN_COPIED) || participation.getBuildPlanId() == null) {\n             final var projectKey = participation.getProgrammingExercise().getProjectKey();\n             final var planName = BuildPlanType.TEMPLATE.getName();\n-            final var username = participation.getStudent().getLogin();\n+            final var username = participation.getParticipantIdentifier();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc3NDMxMw==", "bodyText": "Renamed", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r399774313", "createdAt": "2020-03-29T10:02:21Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "diffHunk": "@@ -497,7 +505,7 @@ private ProgrammingExerciseStudentParticipation copyBuildPlan(ProgrammingExercis\n         if (!participation.getInitializationState().hasCompletedState(InitializationState.BUILD_PLAN_COPIED) || participation.getBuildPlanId() == null) {\n             final var projectKey = participation.getProgrammingExercise().getProjectKey();\n             final var planName = BuildPlanType.TEMPLATE.getName();\n-            final var username = participation.getStudent().getLogin();\n+            final var username = participation.getParticipantIdentifier();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2Nzk4NA=="}, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Mjc1Nzg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDoyNjo0OFrOF8ZDuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMDowNDoxMFrOF9QTXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2OTQzMg==", "bodyText": "please add a log.info(..) statement here so that we could potentially track this in the log", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r398869432", "createdAt": "2020-03-26T20:26:48Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "diffHunk": "@@ -935,6 +1001,22 @@ public void deleteAllByExerciseId(Long exerciseId, boolean deleteBuildPlan, bool\n         }\n     }\n \n+    /**\n+     * Delete all participations belonging to the given team\n+     *\n+     * @param teamId the id of the team\n+     * @param deleteBuildPlan specify if build plan should be deleted\n+     * @param deleteRepository specify if repository should be deleted\n+     */\n+    @Transactional\n+    public void deleteAllByTeamId(Long teamId, boolean deleteBuildPlan, boolean deleteRepository) {\n+        List<StudentParticipation> participationsToDelete = findByTeamId(teamId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 288}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc3NDU1OQ==", "bodyText": "Added", "url": "https://github.com/ls1intum/Artemis/pull/1253#discussion_r399774559", "createdAt": "2020-03-29T10:04:10Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ParticipationService.java", "diffHunk": "@@ -935,6 +1001,22 @@ public void deleteAllByExerciseId(Long exerciseId, boolean deleteBuildPlan, bool\n         }\n     }\n \n+    /**\n+     * Delete all participations belonging to the given team\n+     *\n+     * @param teamId the id of the team\n+     * @param deleteBuildPlan specify if build plan should be deleted\n+     * @param deleteRepository specify if repository should be deleted\n+     */\n+    @Transactional\n+    public void deleteAllByTeamId(Long teamId, boolean deleteBuildPlan, boolean deleteRepository) {\n+        List<StudentParticipation> participationsToDelete = findByTeamId(teamId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2OTQzMg=="}, "originalCommit": {"oid": "43aa91d92b2fe35deea78934e59017861ef868d1"}, "originalPosition": 288}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 238, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}