{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NjI4MjM5", "number": 2461, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzoyOTozNlrOE82HJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMDo0MTozMlrOE86fbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjM2NTgyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzoyOTozNlrOH5Nl4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzoyOTozNlrOH5Nl4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc1MzU3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param submissionId       the id of the programming submission\n          \n          \n            \n                 * @param submissionId the id of the programming submission", "url": "https://github.com/ls1intum/Artemis/pull/2461#discussion_r529753570", "createdAt": "2020-11-24T17:29:36Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "diffHunk": "@@ -636,6 +636,21 @@ public ProgrammingSubmission findByIdWithEagerResultAndFeedback(long submissionI\n                 .orElseThrow(() -> new EntityNotFoundException(\"Programming submission with id \\\"\" + submissionId + \"\\\" does not exist\"));\n     }\n \n+    /**\n+     * Get the programming submission with the given ID from the database and lock the submission to prevent other tutors from receiving and assessing it.\n+     *\n+     * @param submissionId       the id of the programming submission", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4c496169a9e0c7f780aec2fbaaf4a6952ac3f29"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjM4MjMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzozMzozN1rOH5NwFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzozMzozN1rOH5NwFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc1NjE4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * GET /programming-submissions/:id : get the programmingSubmissions participation by it's id and locks the corresponding submission for assessment\n          \n          \n            \n                 * GET /programming-submissions/:participationId/lock : get the programmingSubmissions participation by it's id and locks the corresponding submission for assessment", "url": "https://github.com/ls1intum/Artemis/pull/2461#discussion_r529756183", "createdAt": "2020-11-24T17:33:37Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingSubmissionResource.java", "diffHunk": "@@ -347,6 +348,43 @@ public ProgrammingSubmissionResource(ProgrammingSubmissionService programmingSub\n         return ResponseEntity.ok().body(programmingSubmissions);\n     }\n \n+    // TODO: Make this call use submissionId instead of participationId (after implementation of one to many relation ship of submission and results)\n+    /**\n+     * GET /programming-submissions/:id : get the programmingSubmissions participation by it's id and locks the corresponding submission for assessment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4c496169a9e0c7f780aec2fbaaf4a6952ac3f29"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjM5ODkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzozNzo0NlrOH5N6Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzozNzo0NlrOH5N6Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc1ODgxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Result latestAutomaticResult = participation.getResults().stream().filter(result -> result.getAssessmentType() == AssessmentType.AUTOMATIC)\n          \n          \n            \n                                .sorted(Comparator.comparing(Result::getId).reversed()).iterator().next();\n          \n          \n            \n                        Result latestAutomaticResult = participation.findLatestResult();", "url": "https://github.com/ls1intum/Artemis/pull/2461#discussion_r529758818", "createdAt": "2020-11-24T17:37:46Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingSubmissionResource.java", "diffHunk": "@@ -347,6 +348,43 @@ public ProgrammingSubmissionResource(ProgrammingSubmissionService programmingSub\n         return ResponseEntity.ok().body(programmingSubmissions);\n     }\n \n+    // TODO: Make this call use submissionId instead of participationId (after implementation of one to many relation ship of submission and results)\n+    /**\n+     * GET /programming-submissions/:id : get the programmingSubmissions participation by it's id and locks the corresponding submission for assessment\n+     *\n+     * @param participationId the id of the participation to retrieve\n+     * @return the ResponseEntity with status 200 (OK) and with body the programmingSubmissions participation\n+     */\n+    @GetMapping(\"/programming-submissions/{participationId}/lock\")\n+    @PreAuthorize(\"hasAnyRole('TA','INSTRUCTOR','ADMIN')\")\n+    public ResponseEntity<Participation> lockAndGetProgrammingSubmissionParticipation(@PathVariable Long participationId) {\n+        log.debug(\"REST request to get ProgrammingSubmission of Participation with id: {}\", participationId);\n+        final var participation = participationService.findOneWithEagerResultsAndCourse(participationId);\n+        final var exercise = participation.getExercise();\n+        final User user = userService.getUserWithGroupsAndAuthorities();\n+\n+        if (!authCheckService.isAtLeastTeachingAssistantForExercise(exercise, user)) {\n+            return forbidden();\n+        }\n+\n+        Optional<Result> manualResult = participation.getResults().stream().filter(Result::isManualResult).findFirst();\n+\n+        if (manualResult.isPresent()) {\n+            return ResponseEntity.ok(participation);\n+        }\n+        else {\n+            // Check lock limit\n+            programmingSubmissionService.checkSubmissionLockLimit(exercise.getCourseViaExerciseGroupOrCourseMember().getId());\n+\n+            // As no manual result is present we need to lock the submission for assessment\n+            Result latestAutomaticResult = participation.getResults().stream().filter(result -> result.getAssessmentType() == AssessmentType.AUTOMATIC)\n+                    .sorted(Comparator.comparing(Result::getId).reversed()).iterator().next();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4c496169a9e0c7f780aec2fbaaf4a6952ac3f29"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzA4MzM0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/shared/exercise-scores/exercise-scores.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMDo0MTozMlrOH5UYcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMTowMDo0NVrOH5U-9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2NDgxOA==", "bodyText": "We also need to disable that for purely automatic programming exercise.", "url": "https://github.com/ls1intum/Artemis/pull/2461#discussion_r529864818", "createdAt": "2020-11-24T20:41:32Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/webapp/app/exercises/shared/exercise-scores/exercise-scores.component.html", "diffHunk": "@@ -235,15 +241,15 @@ <h2>\n                             Online editor\n                         </button>\n                         <button\n-                            *ngIf=\"exercise.course && isManualResult(value)\"\n+                            *ngIf=\"exercise.course\"\n                             [routerLink]=\"['/course-management', exercise.course?.id, 'programming-exercises', exercise.id, 'code-editor', value.participation.id, 'assessment']\"\n                             class=\"btn btn-primary btn-sm mr-1\"\n                         >\n                             <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>\n                             {{ 'artemisApp.programmingSubmission.view' | translate }}\n                         </button>\n                         <button\n-                            *ngIf=\"exercise.exerciseGroup && isManualResult(value)\"\n+                            *ngIf=\"exercise.exerciseGroup\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4704c200d8c236975be62367615704612ceead29"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg3NDY3Nw==", "bodyText": "Fixed in 70289fe", "url": "https://github.com/ls1intum/Artemis/pull/2461#discussion_r529874677", "createdAt": "2020-11-24T21:00:45Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/shared/exercise-scores/exercise-scores.component.html", "diffHunk": "@@ -235,15 +241,15 @@ <h2>\n                             Online editor\n                         </button>\n                         <button\n-                            *ngIf=\"exercise.course && isManualResult(value)\"\n+                            *ngIf=\"exercise.course\"\n                             [routerLink]=\"['/course-management', exercise.course?.id, 'programming-exercises', exercise.id, 'code-editor', value.participation.id, 'assessment']\"\n                             class=\"btn btn-primary btn-sm mr-1\"\n                         >\n                             <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>\n                             {{ 'artemisApp.programmingSubmission.view' | translate }}\n                         </button>\n                         <button\n-                            *ngIf=\"exercise.exerciseGroup && isManualResult(value)\"\n+                            *ngIf=\"exercise.exerciseGroup\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2NDgxOA=="}, "originalCommit": {"oid": "4704c200d8c236975be62367615704612ceead29"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4274, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}