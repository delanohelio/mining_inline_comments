{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NDgyNjA2", "number": 1246, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjozNjoyMlrODgxGlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMDowMTo1MlrODiozOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Njg1NTI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseParticipationService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjozNjoyMlrOFrJrrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzowMjozMlrOFu_lrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5MTcyNQ==", "bodyText": "I check before to ensure that we don't have uncaught NullPointerException", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r380791725", "createdAt": "2020-02-18T16:36:22Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseParticipationService.java", "diffHunk": "@@ -111,13 +111,18 @@ public TemplateProgrammingExerciseParticipation findTemplateParticipationByProgr\n      */\n     @Transactional(readOnly = true)\n     public ProgrammingExerciseStudentParticipation findStudentParticipationByExerciseIdAndStudentId(Long exerciseId, String username) throws EntityNotFoundException {\n-        Optional<ProgrammingExerciseStudentParticipation> participation = studentParticipationRepository.findByExerciseIdAndStudentLogin(exerciseId, username);\n-        if (participation.isEmpty()) {\n+        Optional<ProgrammingExerciseStudentParticipation> optionalParticipation = studentParticipationRepository.findByExerciseIdAndStudentLogin(exerciseId, username);\n+        if (optionalParticipation.isEmpty()) {\n             throw new EntityNotFoundException(\"participation could not be found by exerciseId \" + exerciseId + \" and user \" + username);\n         }\n+        var participation = optionalParticipation.get();\n+        // If the exercise associated with participation is not programming exercise return null\n+        if (participation.getProgrammingExercise() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e4cfda5a3c9b859f8af3f9d1c81ea2392f72005"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3MDg1MQ==", "bodyText": "please revert, your test case is wrong if you experience a null pointer exception. Also returning null would lead to other problems here", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r383770851", "createdAt": "2020-02-25T09:54:09Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseParticipationService.java", "diffHunk": "@@ -111,13 +111,18 @@ public TemplateProgrammingExerciseParticipation findTemplateParticipationByProgr\n      */\n     @Transactional(readOnly = true)\n     public ProgrammingExerciseStudentParticipation findStudentParticipationByExerciseIdAndStudentId(Long exerciseId, String username) throws EntityNotFoundException {\n-        Optional<ProgrammingExerciseStudentParticipation> participation = studentParticipationRepository.findByExerciseIdAndStudentLogin(exerciseId, username);\n-        if (participation.isEmpty()) {\n+        Optional<ProgrammingExerciseStudentParticipation> optionalParticipation = studentParticipationRepository.findByExerciseIdAndStudentLogin(exerciseId, username);\n+        if (optionalParticipation.isEmpty()) {\n             throw new EntityNotFoundException(\"participation could not be found by exerciseId \" + exerciseId + \" and user \" + username);\n         }\n+        var participation = optionalParticipation.get();\n+        // If the exercise associated with participation is not programming exercise return null\n+        if (participation.getProgrammingExercise() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5MTcyNQ=="}, "originalCommit": {"oid": "4e4cfda5a3c9b859f8af3f9d1c81ea2392f72005"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyMDY1Mg==", "bodyText": "Reverted", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r384820652", "createdAt": "2020-02-26T23:02:32Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseParticipationService.java", "diffHunk": "@@ -111,13 +111,18 @@ public TemplateProgrammingExerciseParticipation findTemplateParticipationByProgr\n      */\n     @Transactional(readOnly = true)\n     public ProgrammingExerciseStudentParticipation findStudentParticipationByExerciseIdAndStudentId(Long exerciseId, String username) throws EntityNotFoundException {\n-        Optional<ProgrammingExerciseStudentParticipation> participation = studentParticipationRepository.findByExerciseIdAndStudentLogin(exerciseId, username);\n-        if (participation.isEmpty()) {\n+        Optional<ProgrammingExerciseStudentParticipation> optionalParticipation = studentParticipationRepository.findByExerciseIdAndStudentLogin(exerciseId, username);\n+        if (optionalParticipation.isEmpty()) {\n             throw new EntityNotFoundException(\"participation could not be found by exerciseId \" + exerciseId + \" and user \" + username);\n         }\n+        var participation = optionalParticipation.get();\n+        // If the exercise associated with participation is not programming exercise return null\n+        if (participation.getProgrammingExercise() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5MTcyNQ=="}, "originalCommit": {"oid": "4e4cfda5a3c9b859f8af3f9d1c81ea2392f72005"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Njg1OTU1OnYy", "diffSide": "LEFT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjozNzozMVrOFrJuXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzowMjoyMlrOFu_lYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5MjQxNA==", "bodyText": "This part was never reachable before since we checked in the method above is optional is empty and throw an exception.", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r380792414", "createdAt": "2020-02-18T16:37:31Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -196,15 +196,10 @@ public ParticipationResource(ParticipationService participationService, Programm\n \n         ProgrammingExerciseStudentParticipation participation = programmingExerciseParticipationService.findStudentParticipationByExerciseIdAndStudentId(exerciseId,\n                 principal.getName());\n-        if (participation == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e4cfda5a3c9b859f8af3f9d1c81ea2392f72005"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3Mjk3Mg==", "bodyText": "please revert and use the new version of develop", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r383772972", "createdAt": "2020-02-25T09:57:43Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -196,15 +196,10 @@ public ParticipationResource(ParticipationService participationService, Programm\n \n         ProgrammingExerciseStudentParticipation participation = programmingExerciseParticipationService.findStudentParticipationByExerciseIdAndStudentId(exerciseId,\n                 principal.getName());\n-        if (participation == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5MjQxNA=="}, "originalCommit": {"oid": "4e4cfda5a3c9b859f8af3f9d1c81ea2392f72005"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyMDU3OA==", "bodyText": "Done", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r384820578", "createdAt": "2020-02-26T23:02:22Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -196,15 +196,10 @@ public ParticipationResource(ParticipationService participationService, Programm\n \n         ProgrammingExerciseStudentParticipation participation = programmingExerciseParticipationService.findStudentParticipationByExerciseIdAndStudentId(exerciseId,\n                 principal.getName());\n-        if (participation == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5MjQxNA=="}, "originalCommit": {"oid": "4e4cfda5a3c9b859f8af3f9d1c81ea2392f72005"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Njg2Mjc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjozODoyMFrOFrJwZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzowMjoxNVrOFu_lQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5MjkzNA==", "bodyText": "Only in the case if participation is null, which means that exercise attached to the participation is not of Programming Exercise type we reach this part", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r380792934", "createdAt": "2020-02-18T16:38:20Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -215,21 +210,20 @@ public ParticipationResource(ParticipationService participationService, Programm\n             participation = participationService.resumeExercise(participation);\n             // Note: in this case we might need an empty commit to make sure the build plan works correctly for subsequent student commits\n             participation = participationService.performEmptyCommit(participation);\n-            if (participation != null) {\n-                addLatestResultToParticipation(participation);\n+            addLatestResultToParticipation(participation);\n+            participation.getExercise().filterSensitiveInformation();\n+            return ResponseEntity.ok().headers(HeaderUtil.createEntityUpdateAlert(applicationName, true, ENTITY_NAME, participation.getStudent().getName())).body(participation);\n+        }\n+        else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e4cfda5a3c9b859f8af3f9d1c81ea2392f72005"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3MzE3NQ==", "bodyText": "revert", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r383773175", "createdAt": "2020-02-25T09:58:01Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -215,21 +210,20 @@ public ParticipationResource(ParticipationService participationService, Programm\n             participation = participationService.resumeExercise(participation);\n             // Note: in this case we might need an empty commit to make sure the build plan works correctly for subsequent student commits\n             participation = participationService.performEmptyCommit(participation);\n-            if (participation != null) {\n-                addLatestResultToParticipation(participation);\n+            addLatestResultToParticipation(participation);\n+            participation.getExercise().filterSensitiveInformation();\n+            return ResponseEntity.ok().headers(HeaderUtil.createEntityUpdateAlert(applicationName, true, ENTITY_NAME, participation.getStudent().getName())).body(participation);\n+        }\n+        else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5MjkzNA=="}, "originalCommit": {"oid": "4e4cfda5a3c9b859f8af3f9d1c81ea2392f72005"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyMDU0Nw==", "bodyText": "Done", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r384820547", "createdAt": "2020-02-26T23:02:15Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -215,21 +210,20 @@ public ParticipationResource(ParticipationService participationService, Programm\n             participation = participationService.resumeExercise(participation);\n             // Note: in this case we might need an empty commit to make sure the build plan works correctly for subsequent student commits\n             participation = participationService.performEmptyCommit(participation);\n-            if (participation != null) {\n-                addLatestResultToParticipation(participation);\n+            addLatestResultToParticipation(participation);\n+            participation.getExercise().filterSensitiveInformation();\n+            return ResponseEntity.ok().headers(HeaderUtil.createEntityUpdateAlert(applicationName, true, ENTITY_NAME, participation.getStudent().getName())).body(participation);\n+        }\n+        else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5MjkzNA=="}, "originalCommit": {"oid": "4e4cfda5a3c9b859f8af3f9d1c81ea2392f72005"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjAyODk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNzo0OToyNVrOFt7kIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzowMjowNlrOFu_lDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcwNjE0NQ==", "bodyText": "The endpoint was not reachable as it could not map the value from the path, so I changed it", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r383706145", "createdAt": "2020-02-25T07:49:25Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -561,12 +550,12 @@ else if (quizExercise.isSubmissionAllowed()) {\n     /**\n      * GET /participations/:participationId/status: get build status of the user's participation for the \"participationId\" participation.\n      *\n-     * @param id the participation participationId\n+     * @param participationId the participation participationId\n      * @return the ResponseEntity with status 200 (OK) and with body the participation, or with status 404 (Not Found)\n      */\n-    @GetMapping(value = \"/participations/{participationId}/status\")\n-    public ResponseEntity<?> getParticipationStatus(@PathVariable Long id) {\n-        StudentParticipation participation = participationService.findOneStudentParticipation(id);\n+    @GetMapping(\"/participations/{participationId}/status\")\n+    public ResponseEntity<?> getParticipationStatus(@PathVariable Long participationId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68ff6ee1a667978bc7b6bb0bad1ca48c464885e3"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3NDg4NQ==", "bodyText": "please delete the whole end point", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r383774885", "createdAt": "2020-02-25T10:00:52Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -561,12 +550,12 @@ else if (quizExercise.isSubmissionAllowed()) {\n     /**\n      * GET /participations/:participationId/status: get build status of the user's participation for the \"participationId\" participation.\n      *\n-     * @param id the participation participationId\n+     * @param participationId the participation participationId\n      * @return the ResponseEntity with status 200 (OK) and with body the participation, or with status 404 (Not Found)\n      */\n-    @GetMapping(value = \"/participations/{participationId}/status\")\n-    public ResponseEntity<?> getParticipationStatus(@PathVariable Long id) {\n-        StudentParticipation participation = participationService.findOneStudentParticipation(id);\n+    @GetMapping(\"/participations/{participationId}/status\")\n+    public ResponseEntity<?> getParticipationStatus(@PathVariable Long participationId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcwNjE0NQ=="}, "originalCommit": {"oid": "68ff6ee1a667978bc7b6bb0bad1ca48c464885e3"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyMDQ5Mw==", "bodyText": "I merged this changed from the develop", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r384820493", "createdAt": "2020-02-26T23:02:06Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -561,12 +550,12 @@ else if (quizExercise.isSubmissionAllowed()) {\n     /**\n      * GET /participations/:participationId/status: get build status of the user's participation for the \"participationId\" participation.\n      *\n-     * @param id the participation participationId\n+     * @param participationId the participation participationId\n      * @return the ResponseEntity with status 200 (OK) and with body the participation, or with status 404 (Not Found)\n      */\n-    @GetMapping(value = \"/participations/{participationId}/status\")\n-    public ResponseEntity<?> getParticipationStatus(@PathVariable Long id) {\n-        StudentParticipation participation = participationService.findOneStudentParticipation(id);\n+    @GetMapping(\"/participations/{participationId}/status\")\n+    public ResponseEntity<?> getParticipationStatus(@PathVariable Long participationId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcwNjE0NQ=="}, "originalCommit": {"oid": "68ff6ee1a667978bc7b6bb0bad1ca48c464885e3"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjAzMDA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNzo0OTo1MVrOFt7kvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTo1ODozOVrOFt_rYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcwNjMwMg==", "bodyText": "This should occur first to catch nulls", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r383706302", "createdAt": "2020-02-25T07:49:51Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -267,13 +257,12 @@ private void addLatestResultToParticipation(Participation participation) {\n         if (participation.getId() == null) {\n             return createParticipation(participation);\n         }\n+        if (participation.getPresentationScore() == null || participation.getPresentationScore() < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68ff6ee1a667978bc7b6bb0bad1ca48c464885e3"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3MzUzOQ==", "bodyText": "ok", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r383773539", "createdAt": "2020-02-25T09:58:39Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -267,13 +257,12 @@ private void addLatestResultToParticipation(Participation participation) {\n         if (participation.getId() == null) {\n             return createParticipation(participation);\n         }\n+        if (participation.getPresentationScore() == null || participation.getPresentationScore() < 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcwNjMwMg=="}, "originalCommit": {"oid": "68ff6ee1a667978bc7b6bb0bad1ca48c464885e3"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjQ2NjQ5OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/ParticipationIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMDowMTo1MlrOFt_zIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjo1MDo1MVrOFu_TSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3NTUyMA==", "bodyText": "good! this change is also needed in the other PR", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r383775520", "createdAt": "2020-02-25T10:01:52Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/ParticipationIntegrationTest.java", "diffHunk": "@@ -67,11 +87,21 @@ public void initTestCase() {\n         }\n         modelingExercise.setTitle(\"UML Class Diagram\");\n         exerciseRepo.save(modelingExercise);\n+\n+        programmingExercise = ModelFactory.generateProgrammingExercise(ZonedDateTime.now().minusDays(1), ZonedDateTime.now().plusDays(1), course);\n+        programmingExercise = exerciseRepo.save(programmingExercise);\n+        course.addExercises(programmingExercise);\n+        course = courseRepo.save(course);\n+\n+        doReturn(\"Success\").when(continuousIntegrationService).copyBuildPlan(any(), any(), any(), any(), any());\n+        doNothing().when(continuousIntegrationService).configureBuildPlan(any());\n+        doNothing().when(continuousIntegrationService).performEmptySetupCommit(any());\n     }\n \n     @AfterEach\n     public void tearDown() {\n         database.resetDatabase();\n+        Feature.PROGRAMMING_EXERCISES.enable();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68ff6ee1a667978bc7b6bb0bad1ca48c464885e3"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxNTk0Nw==", "bodyText": "Added this to the other PR as well", "url": "https://github.com/ls1intum/Artemis/pull/1246#discussion_r384815947", "createdAt": "2020-02-26T22:50:51Z", "author": {"login": "maxr96"}, "path": "src/test/java/de/tum/in/www1/artemis/ParticipationIntegrationTest.java", "diffHunk": "@@ -67,11 +87,21 @@ public void initTestCase() {\n         }\n         modelingExercise.setTitle(\"UML Class Diagram\");\n         exerciseRepo.save(modelingExercise);\n+\n+        programmingExercise = ModelFactory.generateProgrammingExercise(ZonedDateTime.now().minusDays(1), ZonedDateTime.now().plusDays(1), course);\n+        programmingExercise = exerciseRepo.save(programmingExercise);\n+        course.addExercises(programmingExercise);\n+        course = courseRepo.save(course);\n+\n+        doReturn(\"Success\").when(continuousIntegrationService).copyBuildPlan(any(), any(), any(), any(), any());\n+        doNothing().when(continuousIntegrationService).configureBuildPlan(any());\n+        doNothing().when(continuousIntegrationService).performEmptySetupCommit(any());\n     }\n \n     @AfterEach\n     public void tearDown() {\n         database.resetDatabase();\n+        Feature.PROGRAMMING_EXERCISES.enable();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3NTUyMA=="}, "originalCommit": {"oid": "68ff6ee1a667978bc7b6bb0bad1ca48c464885e3"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 232, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}