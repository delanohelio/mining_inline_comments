{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NDYzNzIw", "number": 2076, "title": "Fix an issue with the Jenkins config when importing programming exercises", "bodyText": "Checklist\n\n I tested all changes and all related features with different users (student, tutor, instructor, admin) on the test server https://artemistest.ase.in.tum.de.\n[x] Server: I added multiple integration tests (Spring) related to the features (with a high test coverage)\n Server: I added @PreAuthorize and check the course groups for all new REST Calls (security)\n Server: I implemented the changes with a good performance and prevented too many database calls\n Server: I documented the Java code using JavaDoc style.\n\nMotivation and Context\nFix a bug with the Jenkins configuration when important programming exercises\nDescription\nThe code for exchanging the urls in Jenkins build plans during the import of programming exercises was wrong.\nI fixed the issue. Unfortunately, XML parsing is no fun!\nSteps for Testing\n\nLog in to Artemis (Test Server 2)\nCreate a programming exercise (PE1)\nImport PE1 into a new programming exercise PE2\nOpen the Jenkins configuration and check that the repo urls in the section Source Code Management are correct", "createdAt": "2020-08-31T18:35:49Z", "url": "https://github.com/ls1intum/Artemis/pull/2076", "merged": true, "mergeCommit": {"oid": "199c6804fe9477892615fc2e8391fe754bb21eb5"}, "closed": true, "closedAt": "2020-09-01T08:02:46Z", "author": {"login": "krusche"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEXFtTgH2gAyNDc2NDYzNzIwOjJjZWNjODAzZDRiYThjZDM2M2EzMjE4MGYyYzY2ZGQzZjMyN2I2NmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEiPFjgFqTQ3OTQ2NzM4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2cecc803d4ba8cd363a32180f2c66dd3f327b66e", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/2cecc803d4ba8cd363a32180f2c66dd3f327b66e", "committedDate": "2020-08-31T18:26:59Z", "message": "fix an issue with the Jenkins config when importing programming exercises"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4ODUyNDAy", "url": "https://github.com/ls1intum/Artemis/pull/2076#pullrequestreview-478852402", "createdAt": "2020-08-31T18:40:50Z", "commit": {"oid": "2cecc803d4ba8cd363a32180f2c66dd3f327b66e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxODo0MDo1MFrOHKENOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxODo0MDo1MFrOHKENOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMxNjcyOQ==", "bodyText": "@krusche Is it on purpose that this operation (and also the corresponding one for TAs) is no longer within a try-catch?", "url": "https://github.com/ls1intum/Artemis/pull/2076#discussion_r480316729", "createdAt": "2020-08-31T18:40:50Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabService.java", "diffHunk": "@@ -276,20 +276,25 @@ public void createProjectForExercise(ProgrammingExercise programmingExercise) th\n         final var group = new Group().withPath(exercisePath).withName(exerciseName).withVisibility(Visibility.PRIVATE);\n         try {\n             gitlab.getGroupApi().addGroup(group);\n-\n-            final var instructors = userService.getInstructors(programmingExercise.getCourseViaExerciseGroupOrCourseMember());\n-            final var teachingAssistants = userService.getTutors(programmingExercise.getCourseViaExerciseGroupOrCourseMember());\n-            for (final var instructor : instructors) {\n-                final var userId = gitLabUserManagementService.getUserId(instructor.getLogin());\n-                gitLabUserManagementService.addUserToGroups(userId, List.of(programmingExercise), MAINTAINER);\n+        }\n+        catch (GitLabApiException e) {\n+            if (e.getMessage().contains(\"has already been taken\")) {\n+                // ignore this error, because it is not really a problem\n+                log.warn(\"Failed to add group \" + exerciseName + \" due to error: \" + e.getMessage());\n             }\n-            for (final var ta : teachingAssistants) {\n-                final var userId = gitLabUserManagementService.getUserId(ta.getLogin());\n-                gitLabUserManagementService.addUserToGroups(userId, List.of(programmingExercise), GUEST);\n+            else {\n+                throw new GitLabException(\"Unable to create new group for course \" + exerciseName, e);\n             }\n         }\n-        catch (GitLabApiException e) {\n-            throw new GitLabException(\"Unable to create new group for course \" + exerciseName, e);\n+        final var instructors = userService.getInstructors(programmingExercise.getCourseViaExerciseGroupOrCourseMember());\n+        final var teachingAssistants = userService.getTutors(programmingExercise.getCourseViaExerciseGroupOrCourseMember());\n+        for (final var instructor : instructors) {\n+            final var userId = gitLabUserManagementService.getUserId(instructor.getLogin());\n+            gitLabUserManagementService.addUserToGroups(userId, List.of(programmingExercise), MAINTAINER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cecc803d4ba8cd363a32180f2c66dd3f327b66e"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4ODg0NTQ0", "url": "https://github.com/ls1intum/Artemis/pull/2076#pullrequestreview-478884544", "createdAt": "2020-08-31T19:14:42Z", "commit": {"oid": "2cecc803d4ba8cd363a32180f2c66dd3f327b66e"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c04b1cbb052b9ed7f067867ff1013eb5a736d22a", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/c04b1cbb052b9ed7f067867ff1013eb5a736d22a", "committedDate": "2020-09-01T07:11:59Z", "message": "fix codacy issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDYxMzIz", "url": "https://github.com/ls1intum/Artemis/pull/2076#pullrequestreview-479461323", "createdAt": "2020-09-01T07:16:47Z", "commit": {"oid": "c04b1cbb052b9ed7f067867ff1013eb5a736d22a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzoxNjo0N1rOHKoTpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzoxNjo0N1rOHKoTpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkwODE5Nw==", "bodyText": "Codacy found an issue: Useless parentheses.", "url": "https://github.com/ls1intum/Artemis/pull/2076#discussion_r480908197", "createdAt": "2020-09-01T07:16:47Z", "author": {"login": "artemis-bot"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/JenkinsService.java", "diffHunk": "@@ -139,22 +140,67 @@ public void updatePlanRepository(String projectKey, String planName, String repo\n \n         // remove potential username from repo URL. Jenkins uses the Artemis Admin user and will fail if other usernames are in the URL\n         final var repoUrl = vcsRepositoryUrl.replaceAll(\"(https?://)(.*@)(.*)\", \"$1$3\");\n-        final var config = jobXml(projectKey, planName);\n-        final var urlElements = config.getElementsByTagName(\"url\");\n-        if (urlElements.getLength() != 2) {\n+        final var jobXmlDocument = getJobXmlForBuildPlanWith(projectKey, planName);\n+        final var remoteUrlNode = findUserRemoteConfigFor(jobXmlDocument, repoNameInCI);\n+        if (remoteUrlNode == null || remoteUrlNode.getFirstChild() == null) {\n+            throw new IllegalArgumentException(\"Url to replace not found in job xml document\");\n+        }\n+        remoteUrlNode.getFirstChild().setNodeValue(repoUrl);\n+        final var errorMessage = \"Error trying to configure build plan in Jenkins \" + planName;\n+        postXml(jobXmlDocument, String.class, HttpStatus.OK, errorMessage, Endpoint.PLAN_CONFIG, projectKey, planName);\n+    }\n+\n+    private org.w3c.dom.Node findUserRemoteConfigFor(Document jobXmlDocument, String repoNameInCI) {\n+        final var userRemoteConfigs = jobXmlDocument.getElementsByTagName(\"hudson.plugins.git.UserRemoteConfig\");\n+        if (userRemoteConfigs.getLength() != 2) {\n             throw new IllegalArgumentException(\"Configuration of build plans currently only supports a model with two repositories, ASSIGNMENT and TESTS\");\n         }\n+        var firstUserRemoteConfig = userRemoteConfigs.item(0).getChildNodes();\n+        var urlElement = findUrlElement(firstUserRemoteConfig, repoNameInCI);\n+        if (urlElement != null) {\n+            return urlElement;\n+        }\n+        var secondUserRemoteConfig = userRemoteConfigs.item(1).getChildNodes();\n+        urlElement = findUrlElement(secondUserRemoteConfig, repoNameInCI);\n+        if (urlElement != null) {\n+            return urlElement;\n+        }\n+        return null;\n+    }\n+\n+    private org.w3c.dom.Node findUrlElement(NodeList nodeList, String repoNameInCI) {\n+        boolean found = false;\n+        org.w3c.dom.Node urlNode = null;\n+        for (int i = 0; i < nodeList.getLength(); i++) {\n+            var childElement = nodeList.item(i);\n+            if (\"name\".equalsIgnoreCase(childElement.getNodeName())) {\n+                var nameValue = childElement.hasChildNodes() ? childElement.getFirstChild().getNodeValue() : null;\n+                // this name was added recently, so we cannot assume that all job xml files include this name\n+                if (repoNameInCI.equalsIgnoreCase(nameValue)) {\n+                    found = true;\n+                }\n+            }\n+            else if (\"url\".equalsIgnoreCase(childElement.getNodeName())) {\n+                urlNode = childElement;\n+                if (!found) {\n+                    // fallback for old xmls\n+                    var urlValue = childElement.hasChildNodes() ? childElement.getFirstChild().getNodeValue() : null;\n+                    if (urlValue != null && repoNameInCI.equals(ASSIGNMENT_REPO_NAME) && ((urlValue.contains(\"-exercise.git\") || (urlValue.contains(\"-solution.git\"))))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04b1cbb052b9ed7f067867ff1013eb5a736d22a"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDY3Mzg0", "url": "https://github.com/ls1intum/Artemis/pull/2076#pullrequestreview-479467384", "createdAt": "2020-09-01T07:26:11Z", "commit": {"oid": "c04b1cbb052b9ed7f067867ff1013eb5a736d22a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4114, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}