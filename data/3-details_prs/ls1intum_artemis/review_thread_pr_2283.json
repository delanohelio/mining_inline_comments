{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNzI3ODM4", "number": 2283, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOTowMjoyMlrOEzcO7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMToyMjoyNVrOE12fWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzc1NDA1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOTowMjoyMlrOHqqesw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOTowMjoyMlrOHqqesw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5ODIyNw==", "bodyText": "can we use a modern for loop here?", "url": "https://github.com/ls1intum/Artemis/pull/2283#discussion_r514498227", "createdAt": "2020-10-29T19:02:22Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -95,6 +99,19 @@ export class NavbarComponent implements OnInit, OnDestroy {\n         }\n     }\n \n+    buildBreadcrumbs(fullURI: string) {\n+        this.breadcrumbs = [];\n+        let path = '';\n+        const parts = fullURI.split('/');\n+        for (let i = 0; i < parts.length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34276da6f2820a9f25a109fd7f8e1be1c0aa6b72"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0OTAyNzQ2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMToyMjoyNVrOHuXK-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMToyMjoyNVrOHuXK-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM3NjE4Nw==", "bodyText": "I think you can change it to something like this:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    const parts = fullURI.split('/');\n          \n          \n            \n                    for (const part of parts) {\n          \n          \n            \n                        const crumb = new Breadcrumb();\n          \n          \n            \n                        crumb.label = part;\n          \n          \n            \n                        path += part + '/';\n          \n          \n            \n                        crumb.uri = path;\n          \n          \n            \n                        this.breadcrumbs[index++] = crumb;\n          \n          \n            \n                    }\n          \n          \n            \n                    this.breadcrumbs = parts.map(part => {\n          \n          \n            \n                path += part + '/';\n          \n          \n            \n                return {label: part, uri: path}\n          \n          \n            \n            })", "url": "https://github.com/ls1intum/Artemis/pull/2283#discussion_r518376187", "createdAt": "2020-11-05T21:22:25Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -95,6 +99,24 @@ export class NavbarComponent implements OnInit, OnDestroy {\n         }\n     }\n \n+    buildBreadcrumbs(fullURI: string) {\n+        this.breadcrumbs = [];\n+        // Temporarily restrict routes\n+        if (!fullURI.startsWith('/admin') && !fullURI.startsWith('/course-management')) {\n+            return;\n+        }\n+        let path = '';\n+        let index = 0;\n+        const parts = fullURI.split('/');\n+        for (const part of parts) {\n+            const crumb = new Breadcrumb();\n+            crumb.label = part;\n+            path += part + '/';\n+            crumb.uri = path;\n+            this.breadcrumbs[index++] = crumb;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f60b0d05acafc9eaa68079e174dcd2eef2e2ae8"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4600, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}