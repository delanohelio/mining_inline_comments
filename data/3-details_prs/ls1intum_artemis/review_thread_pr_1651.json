{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MTg5MTky", "number": 1651, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1ODozNFrOEF2Ndw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1ODozNFrOEF2Ndw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTY2NTE5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exam/participate/exam-cover/exam-participation-cover.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1ODozNFrOGkR9SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1ODozNFrOGkR9SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5NjEzNw==", "bodyText": "I guess these two if's can be combined:\nenableStartButton() {\n        if (this.confirmed && this.exam && this.exam.startDate && moment(this.exam.startDate).isBefore(moment())) {\n            return true;\n        } else {\n            return false;\n        }\n    }", "url": "https://github.com/ls1intum/Artemis/pull/1651#discussion_r440696137", "createdAt": "2020-06-16T08:58:34Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/exam/participate/exam-cover/exam-participation-cover.component.ts", "diffHunk": "@@ -0,0 +1,94 @@\n+import { Component, Input, OnInit, OnDestroy } from '@angular/core';\n+import * as moment from 'moment';\n+import { SafeHtml } from '@angular/platform-browser';\n+\n+import { ArtemisMarkdownService } from 'app/shared/markdown.service';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+\n+import { Exam } from 'app/entities/exam.model';\n+import { Course } from 'app/entities/course.model';\n+\n+@Component({\n+    selector: 'jhi-exam-participation-cover',\n+    templateUrl: './exam-participation-cover.component.html',\n+    styles: [],\n+})\n+export class ExamParticipationCoverComponent implements OnInit, OnDestroy {\n+    /**\n+     * if startView is set to true: startText and confirmationStartText will be displayed\n+     * if startView is set to false: endText and confirmationEndText will be displayed\n+     */\n+    @Input() startView: boolean;\n+    @Input() exam: Exam;\n+    course: Course | null;\n+    courseId = 0;\n+    title: string;\n+    startEnabled: boolean;\n+    confirmed: boolean;\n+    examId: number;\n+\n+    formattedGeneralInformation: SafeHtml | null;\n+    formattedConfirmationText: SafeHtml | null;\n+\n+    interval: any;\n+\n+    constructor(private courseService: CourseManagementService, private artemisMarkdown: ArtemisMarkdownService) {}\n+\n+    /**\n+     * on init use the correct information to display in either start or final view\n+     * changes in the exam and subscription is handled in the exam-participation.component\n+     */\n+    ngOnInit(): void {\n+        this.confirmed = false;\n+        this.startEnabled = false;\n+        if (this.startView) {\n+            this.formattedGeneralInformation = this.artemisMarkdown.safeHtmlForMarkdown(this.exam.startText);\n+            this.formattedConfirmationText = this.artemisMarkdown.safeHtmlForMarkdown(this.exam.confirmationStartText);\n+        } else {\n+            this.formattedGeneralInformation = this.artemisMarkdown.safeHtmlForMarkdown(this.exam.endText);\n+            this.formattedConfirmationText = this.artemisMarkdown.safeHtmlForMarkdown(this.exam.confirmationEndText);\n+        }\n+    }\n+\n+    ngOnDestroy() {\n+        clearInterval(this.interval);\n+    }\n+\n+    /**\n+     * checks whether confirmation checkbox has been checked\n+     * if startView true:\n+     * if confirmed, we further check whether exam has started yet regularly\n+     */\n+    updateConfirmation() {\n+        this.confirmed = !this.confirmed;\n+        if (this.startView) {\n+            if (this.confirmed) {\n+                this.interval = setInterval(() => {\n+                    this.startEnabled = this.enableStartButton();\n+                }, 100);\n+            } else {\n+                this.startEnabled = false;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * check, whether exam has started yet and we therefore can enable the Start Exam Button\n+     */\n+    enableStartButton() {\n+        if (this.confirmed) {\n+            if (this.exam && this.exam.startDate && moment(this.exam.startDate).isBefore(moment())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b28ccbddd15c7fb7241ccb7dd8935f272249ac7"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4867, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}