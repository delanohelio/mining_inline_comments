{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MzY3NjEx", "number": 2211, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QyMDo0MDowNlrOEu2Y5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxNzo1N1rOEvjMzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTYxMDYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanService.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QyMDo0MDowNlrOHjfttg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMzo1Mzo0NFrOHklqRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTgxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        default -> throw new IllegalArgumentException(\"No build stage setup for programming language \" + programmingLanguage);\n          \n      \n    \n    \n  \n\nWe should delete this to let the compiler check the correctness, I think this would be better.", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r506981814", "createdAt": "2020-10-17T20:40:06Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanService.java", "diffHunk": "@@ -183,6 +183,26 @@ private Stage createBuildStage(ProgrammingLanguage programmingLanguage, final bo\n                 tasks.add(0, checkoutTask);\n                 return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n             }\n+            case VHDL -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n+                    defaultJob.dockerConfiguration(new DockerConfiguration().image(\"tizianleonhardt/era-artemis-vhdl:latest\"));\n+                }\n+                final var testParserTask = new TestParserTask(TestParserTaskProperties.TestType.JUNIT).resultDirectories(\"**/result.xml\");\n+                var tasks = readScriptTasksFromTemplate(programmingLanguage, sequentialBuildRuns);\n+                tasks.add(0, checkoutTask);\n+                return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n+            }\n+            case ASSEMBLER -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n+                    defaultJob.dockerConfiguration(new DockerConfiguration().image(\"tizianleonhardt/era-artemis-assembler:latest\"));\n+                }\n+                final var testParserTask = new TestParserTask(TestParserTaskProperties.TestType.JUNIT).resultDirectories(\"**/result.xml\");\n+                var tasks = readScriptTasksFromTemplate(programmingLanguage, sequentialBuildRuns);\n+                tasks.add(0, checkoutTask);\n+                return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n+            }\n             default -> throw new IllegalArgumentException(\"No build stage setup for programming language \" + programmingLanguage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU3NDY0Ng==", "bodyText": "when we cover all cases before, then yes, we should delete the default statement", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r507574646", "createdAt": "2020-10-19T08:44:50Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanService.java", "diffHunk": "@@ -183,6 +183,26 @@ private Stage createBuildStage(ProgrammingLanguage programmingLanguage, final bo\n                 tasks.add(0, checkoutTask);\n                 return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n             }\n+            case VHDL -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n+                    defaultJob.dockerConfiguration(new DockerConfiguration().image(\"tizianleonhardt/era-artemis-vhdl:latest\"));\n+                }\n+                final var testParserTask = new TestParserTask(TestParserTaskProperties.TestType.JUNIT).resultDirectories(\"**/result.xml\");\n+                var tasks = readScriptTasksFromTemplate(programmingLanguage, sequentialBuildRuns);\n+                tasks.add(0, checkoutTask);\n+                return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n+            }\n+            case ASSEMBLER -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n+                    defaultJob.dockerConfiguration(new DockerConfiguration().image(\"tizianleonhardt/era-artemis-assembler:latest\"));\n+                }\n+                final var testParserTask = new TestParserTask(TestParserTaskProperties.TestType.JUNIT).resultDirectories(\"**/result.xml\");\n+                var tasks = readScriptTasksFromTemplate(programmingLanguage, sequentialBuildRuns);\n+                tasks.add(0, checkoutTask);\n+                return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n+            }\n             default -> throw new IllegalArgumentException(\"No build stage setup for programming language \" + programmingLanguage);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTgxNA=="}, "originalCommit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MjAwMg==", "bodyText": "I've removed the default branch.", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r507982002", "createdAt": "2020-10-19T18:42:29Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanService.java", "diffHunk": "@@ -183,6 +183,26 @@ private Stage createBuildStage(ProgrammingLanguage programmingLanguage, final bo\n                 tasks.add(0, checkoutTask);\n                 return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n             }\n+            case VHDL -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n+                    defaultJob.dockerConfiguration(new DockerConfiguration().image(\"tizianleonhardt/era-artemis-vhdl:latest\"));\n+                }\n+                final var testParserTask = new TestParserTask(TestParserTaskProperties.TestType.JUNIT).resultDirectories(\"**/result.xml\");\n+                var tasks = readScriptTasksFromTemplate(programmingLanguage, sequentialBuildRuns);\n+                tasks.add(0, checkoutTask);\n+                return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n+            }\n+            case ASSEMBLER -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n+                    defaultJob.dockerConfiguration(new DockerConfiguration().image(\"tizianleonhardt/era-artemis-assembler:latest\"));\n+                }\n+                final var testParserTask = new TestParserTask(TestParserTaskProperties.TestType.JUNIT).resultDirectories(\"**/result.xml\");\n+                var tasks = readScriptTasksFromTemplate(programmingLanguage, sequentialBuildRuns);\n+                tasks.add(0, checkoutTask);\n+                return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n+            }\n             default -> throw new IllegalArgumentException(\"No build stage setup for programming language \" + programmingLanguage);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTgxNA=="}, "originalCommit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyNzgxMg==", "bodyText": "@krusche @MaisiKoleni The removal of the default branch caused an error (I believe something with switch expressions vs statements). As I will refactor the code in a follow-up, I've reverted it for now (see #2150).", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r508127812", "createdAt": "2020-10-19T23:53:44Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanService.java", "diffHunk": "@@ -183,6 +183,26 @@ private Stage createBuildStage(ProgrammingLanguage programmingLanguage, final bo\n                 tasks.add(0, checkoutTask);\n                 return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n             }\n+            case VHDL -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n+                    defaultJob.dockerConfiguration(new DockerConfiguration().image(\"tizianleonhardt/era-artemis-vhdl:latest\"));\n+                }\n+                final var testParserTask = new TestParserTask(TestParserTaskProperties.TestType.JUNIT).resultDirectories(\"**/result.xml\");\n+                var tasks = readScriptTasksFromTemplate(programmingLanguage, sequentialBuildRuns);\n+                tasks.add(0, checkoutTask);\n+                return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n+            }\n+            case ASSEMBLER -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n+                    defaultJob.dockerConfiguration(new DockerConfiguration().image(\"tizianleonhardt/era-artemis-assembler:latest\"));\n+                }\n+                final var testParserTask = new TestParserTask(TestParserTaskProperties.TestType.JUNIT).resultDirectories(\"**/result.xml\");\n+                var tasks = readScriptTasksFromTemplate(programmingLanguage, sequentialBuildRuns);\n+                tasks.add(0, checkoutTask);\n+                return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n+            }\n             default -> throw new IllegalArgumentException(\"No build stage setup for programming language \" + programmingLanguage);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTgxNA=="}, "originalCommit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTYxMTA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QyMDo0MDozNFrOHjft6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0MjowOFrOHkcv_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                default -> throw new IllegalArgumentException(\"Repository checkout path for assignment repo has not yet been defined for \" + language);", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r506981864", "createdAt": "2020-10-17T20:40:34Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "diffHunk": "@@ -237,7 +237,7 @@\n             @Override\n             public String forProgrammingLanguage(ProgrammingLanguage language) {\n                 return switch (language) {\n-                    case JAVA, PYTHON, C, HASKELL -> Constants.ASSIGNMENT_CHECKOUT_PATH;\n+                    case JAVA, PYTHON, C, HASKELL, KOTLIN, VHDL, ASSEMBLER -> Constants.ASSIGNMENT_CHECKOUT_PATH;\n                     default -> throw new IllegalArgumentException(\"Repository checkout path for assignment repo has not yet been defined for \" + language);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTkxNQ==", "bodyText": "@krusche Should we change this?", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r506981915", "createdAt": "2020-10-17T20:41:15Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "diffHunk": "@@ -237,7 +237,7 @@\n             @Override\n             public String forProgrammingLanguage(ProgrammingLanguage language) {\n                 return switch (language) {\n-                    case JAVA, PYTHON, C, HASKELL -> Constants.ASSIGNMENT_CHECKOUT_PATH;\n+                    case JAVA, PYTHON, C, HASKELL, KOTLIN, VHDL, ASSEMBLER -> Constants.ASSIGNMENT_CHECKOUT_PATH;\n                     default -> throw new IllegalArgumentException(\"Repository checkout path for assignment repo has not yet been defined for \" + language);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg2NA=="}, "originalCommit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU3NDM3NQ==", "bodyText": "Yes, in case we cover all cases, the compiler should check the completeness and we should delete the default statement.", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r507574375", "createdAt": "2020-10-19T08:44:24Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "diffHunk": "@@ -237,7 +237,7 @@\n             @Override\n             public String forProgrammingLanguage(ProgrammingLanguage language) {\n                 return switch (language) {\n-                    case JAVA, PYTHON, C, HASKELL -> Constants.ASSIGNMENT_CHECKOUT_PATH;\n+                    case JAVA, PYTHON, C, HASKELL, KOTLIN, VHDL, ASSEMBLER -> Constants.ASSIGNMENT_CHECKOUT_PATH;\n                     default -> throw new IllegalArgumentException(\"Repository checkout path for assignment repo has not yet been defined for \" + language);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg2NA=="}, "originalCommit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MTgyMQ==", "bodyText": "I've removed the default branch.", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r507981821", "createdAt": "2020-10-19T18:42:08Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "diffHunk": "@@ -237,7 +237,7 @@\n             @Override\n             public String forProgrammingLanguage(ProgrammingLanguage language) {\n                 return switch (language) {\n-                    case JAVA, PYTHON, C, HASKELL -> Constants.ASSIGNMENT_CHECKOUT_PATH;\n+                    case JAVA, PYTHON, C, HASKELL, KOTLIN, VHDL, ASSEMBLER -> Constants.ASSIGNMENT_CHECKOUT_PATH;\n                     default -> throw new IllegalArgumentException(\"Repository checkout path for assignment repo has not yet been defined for \" + language);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg2NA=="}, "originalCommit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTYxMTEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QyMDo0MDo0MVrOHjft8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0MjoyMVrOHkcwfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                default -> throw new IllegalArgumentException(\"Repository checkout path for test repo has not yet been defined for \" + language);", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r506981873", "createdAt": "2020-10-17T20:40:41Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "diffHunk": "@@ -247,8 +247,8 @@ public String forProgrammingLanguage(ProgrammingLanguage language) {\n             @Override\n             public String forProgrammingLanguage(ProgrammingLanguage language) {\n                 return switch (language) {\n-                    case JAVA, PYTHON, HASKELL -> \"\";\n-                    case C -> Constants.TESTS_CHECKOUT_PATH;\n+                    case JAVA, PYTHON, HASKELL, KOTLIN -> \"\";\n+                    case C, VHDL, ASSEMBLER -> Constants.TESTS_CHECKOUT_PATH;\n                     default -> throw new IllegalArgumentException(\"Repository checkout path for test repo has not yet been defined for \" + language);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MTk1MA==", "bodyText": "I've removed the default branch.", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r507981950", "createdAt": "2020-10-19T18:42:21Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "diffHunk": "@@ -247,8 +247,8 @@ public String forProgrammingLanguage(ProgrammingLanguage language) {\n             @Override\n             public String forProgrammingLanguage(ProgrammingLanguage language) {\n                 return switch (language) {\n-                    case JAVA, PYTHON, HASKELL -> \"\";\n-                    case C -> Constants.TESTS_CHECKOUT_PATH;\n+                    case JAVA, PYTHON, HASKELL, KOTLIN -> \"\";\n+                    case C, VHDL, ASSEMBLER -> Constants.TESTS_CHECKOUT_PATH;\n                     default -> throw new IllegalArgumentException(\"Repository checkout path for test repo has not yet been defined for \" + language);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg3Mw=="}, "originalCommit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjkzMDY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDowNjozNVrOHkl5Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDowNjozNVrOHkl5Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzMTYyNw==", "bodyText": "Just as a small note: I believe Kotlin handles Identifiers differently to Java and is way more permissive. I don't know if this applies to package names, but it is quite likely that different rules apply (different character groups, whitespace, and keywords). However, I don't think that the package names are that different in practice, so we should be fine here for now (we should keep that in mind though).", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r508131627", "createdAt": "2020-10-20T00:06:35Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -308,8 +308,8 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n         }\n \n         // Check if package name is set\n-        if (programmingExercise.getProgrammingLanguage() == ProgrammingLanguage.JAVA) {\n-            // only Java needs a valid package name at the moment\n+        if (programmingExercise.getProgrammingLanguage() == ProgrammingLanguage.JAVA || programmingExercise.getProgrammingLanguage() == ProgrammingLanguage.KOTLIN) {\n+            // only Java and Kotlin need a valid package name at the moment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mjk0MDA2OnYy", "diffSide": "RIGHT", "path": "src/main/resources/templates/assembler/test/compileTest.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxMToxOFrOHkl-pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxMToxOFrOHkl-pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzMzAzMQ==", "bodyText": "Maybe we could just add a new line here so git is not complaining.", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r508133031", "createdAt": "2020-10-20T00:11:18Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/resources/templates/assembler/test/compileTest.py", "diffHunk": "@@ -0,0 +1,43 @@\n+from junit_xml import TestSuite, TestCase\n+import subprocess\n+import argparse\n+\n+#Export JUnit result\n+def export_junit(retCode: int, msg: str, testName: str = 'Compile'):\n+    tc = TestCase(testName)\n+\n+    if retCode != 0:\n+        tc.add_failure_info(message=msg)\n+    ts = TestSuite(\"ERA Tester\", [tc])\n+    with open('result.xml', 'w') as f:\n+        TestSuite.to_file(f, [ts], prettyprint=False)\n+\n+\n+makefilePath: str\n+makeTarget: str\n+\n+#Set up argument parsing\n+parser = argparse.ArgumentParser(description='Calls make in the given directory, captures the output, and produces a JUnit report.')\n+\n+parser.add_argument('path', metavar='path', type=str, help=\"Path to makefile\")\n+parser.add_argument('--target', metavar='x', type=str, help = \"Target for make\", default=\"all\")\n+parser.add_argument('--timeout', metavar='y', type=int, help = \"Timeout for running make in seconds\", default=10)\n+\n+args = parser.parse_args()\n+\n+#Run make with subprocess\n+makeArgs = [\"make\", \"-C\", args.path, args.target]\n+print(f\"Running make with arguments: {makeArgs}\\nTimeout is {args.timeout} seconds\")\n+\n+#Check for timeouts\n+try:\n+    res = subprocess.run(makeArgs, capture_output=True, timeout=args.timeout)\n+except subprocess.TimeoutExpired:\n+    print(\"Time for make exceeded!\")\n+    export_junit(1, f\"Time for make exceeded, timeout was set at {args.timeout} seconds.\")\n+except OSError:\n+    print(\"OSError ecountered!\")\n+    export_junit(1, \"OSError ecountered - please contact us.\")\n+else:\n+    stderr = res.stderr.decode(\"utf-8\")\n+    export_junit(res.returncode, f\"Make exited with return code {res.returncode}.\\n---stderr---\\n{stderr}-----------\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mjk1MjQyOnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseTemplateIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxNzo1NlrOHkmF6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxNzo1NlrOHkmF6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNDg4OA==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'runTemplateTests_kotlin_exercise' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r508134888", "createdAt": "2020-10-20T00:17:56Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseTemplateIntegrationTest.java", "diffHunk": "@@ -142,6 +143,38 @@ public void runTemplateTests_java_solution() throws Exception {\n         assertThat(testResults).containsExactlyInAnyOrderEntriesOf(Map.of(TestResult.SUCCESSFUL, 13));\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void runTemplateTests_kotlin_exercise() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mjk1MjQ3OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseTemplateIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxNzo1N1rOHkmF8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxNzo1N1rOHkmF8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNDg5Ng==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'runTemplateTests_kotlin_solution' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r508134896", "createdAt": "2020-10-20T00:17:57Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseTemplateIntegrationTest.java", "diffHunk": "@@ -142,6 +143,38 @@ public void runTemplateTests_java_solution() throws Exception {\n         assertThat(testResults).containsExactlyInAnyOrderEntriesOf(Map.of(TestResult.SUCCESSFUL, 13));\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void runTemplateTests_kotlin_exercise() throws Exception {\n+        exercise.setProgrammingLanguage(ProgrammingLanguage.KOTLIN);\n+\n+        mockConnectorRequestsForSetup(exercise);\n+        request.postWithResponseBody(ROOT + SETUP, exercise, ProgrammingExercise.class, HttpStatus.CREATED);\n+\n+        moveAssignmentSourcesOf(exerciseRepo);\n+        int exitCode = invokeMaven();\n+        assertThat(exitCode).isNotEqualTo(0);\n+\n+        var testResults = readTestReports();\n+        assertThat(testResults).containsExactlyInAnyOrderEntriesOf(Map.of(TestResult.FAILED, 12));\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void runTemplateTests_kotlin_solution() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4526, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}