{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMDgzMDA3", "number": 2414, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMDozNjoxN1rOE75FVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMDo0OTowMVrOE75JXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMjM2NjkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/programming/JavaTemplateUpgradeService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMDozNjoxN1rOH3xNhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMDo0NTowMlrOH3xQqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MDAwNQ==", "bodyText": "This should remove the dependencies also from the TEST repo right?", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528240005", "createdAt": "2020-11-21T20:36:17Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/programming/JavaTemplateUpgradeService.java", "diffHunk": "@@ -0,0 +1,217 @@\n+package de.tum.in.www1.artemis.service.programming;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+\n+import org.apache.maven.model.Dependency;\n+import org.apache.maven.model.Model;\n+import org.apache.maven.model.Plugin;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Reader;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Writer;\n+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n+import org.eclipse.jgit.api.errors.GitAPIException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.core.io.Resource;\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.ResourceLoaderService;\n+import de.tum.in.www1.artemis.domain.ProgrammingExercise;\n+import de.tum.in.www1.artemis.domain.Repository;\n+import de.tum.in.www1.artemis.domain.enumeration.RepositoryType;\n+import de.tum.in.www1.artemis.service.ProgrammingExerciseService;\n+import de.tum.in.www1.artemis.service.UserService;\n+import de.tum.in.www1.artemis.service.connectors.GitService;\n+\n+/**\n+ * Service for upgrading of Java template files\n+ */\n+@Service\n+public class JavaTemplateUpgradeService implements TemplateUpgradeService {\n+\n+    private final Logger log = LoggerFactory.getLogger(JavaTemplateUpgradeService.class);\n+\n+    private final ProgrammingExerciseService programmingExerciseService;\n+\n+    private final GitService gitService;\n+\n+    private final UserService userService;\n+\n+    private final ResourceLoaderService resourceLoaderService;\n+\n+    public JavaTemplateUpgradeService(ProgrammingExerciseService programmingExerciseService, GitService gitService, ResourceLoaderService resourceLoaderService,\n+            UserService userService) {\n+        this.programmingExerciseService = programmingExerciseService;\n+        this.gitService = gitService;\n+        this.userService = userService;\n+        this.resourceLoaderService = resourceLoaderService;\n+    }\n+\n+    @Override\n+    public void upgradeTemplate(ProgrammingExercise exercise) {\n+        // TODO: Support sequential test runs\n+        if (exercise.hasSequentialTestRuns()) {\n+            return;\n+        }\n+        // Template and solution repository can also contain a project object model for some project types\n+        updateRepository(exercise, RepositoryType.TEMPLATE.getName(), RepositoryType.TEMPLATE);\n+        updateRepository(exercise, RepositoryType.SOLUTION.getName(), RepositoryType.SOLUTION);\n+        updateRepository(exercise, \"test/projectTemplate\", RepositoryType.TESTS);\n+    }\n+\n+    /**\n+     * Upgrades the template files of a specific Java or Kotlin repository. Prefers project type specific templates as the\n+     * reference. The method updates the project object models (pom) in the target repository with the pom of the latest\n+     * Artemis template.\n+     *\n+     * @param exercise The exercise for the the template files should be updated\n+     * @param templateFolder The folder containing the latest reference template\n+     * @param repositoryType The type of repository to be updated\n+     */\n+    private void updateRepository(ProgrammingExercise exercise, String templateFolder, RepositoryType repositoryType) {\n+        try {\n+            // Get general template poms\n+            String programmingLanguageTemplate = programmingExerciseService.getProgrammingLanguageTemplatePath(exercise.getProgrammingLanguage());\n+            String templatePomPath = programmingLanguageTemplate + \"/\" + templateFolder + \"/**/pom.xml\";\n+\n+            Resource[] templatePoms = resourceLoaderService.getResources(templatePomPath);\n+\n+            // Get project type specific template poms\n+            if (exercise.getProjectType() != null) {\n+                String projectTypeTemplate = programmingExerciseService.getProgrammingLanguageProjectTypePath(exercise.getProgrammingLanguage(), exercise.getProjectType());\n+                String projectTypePomPath = projectTypeTemplate + \"/\" + templateFolder + \"/**/pom.xml\";\n+\n+                Resource[] projectTypePoms = resourceLoaderService.getResources(projectTypePomPath);\n+\n+                // Prefer project type specific poms\n+                templatePoms = projectTypePoms.length > 0 ? projectTypePoms : templatePoms;\n+            }\n+\n+            Repository repository = gitService.getOrCheckoutRepository(exercise.getRepositoryURL(repositoryType), true);\n+            List<File> repositoryPoms = gitService.listFiles(repository).stream().filter(file -> \"pom.xml\".equals(file.getName())).collect(Collectors.toList());\n+\n+            // Validate that template and repository have the same number of pom.xml files, otherwise no upgrade will take place\n+            // TODO: Improve matching of repository and template poms, support sequential test runs\n+            if (templatePoms.length == 1 && repositoryPoms.size() == 1) {\n+                Model updatedRepoModel = upgradeProjectObjectModel(templatePoms[0], repositoryPoms.get(0));\n+                writeProjectObjectModel(updatedRepoModel, repositoryPoms.get(0));\n+                programmingExerciseService.commitAndPushRepository(repository, \"Template upgraded by Artemis\", userService.getUser());\n+            }\n+        }\n+        catch (IOException | GitAPIException | InterruptedException | XmlPullParserException exception) {\n+            log.error(\"Updating of template files of repository \" + repositoryType.name() + \" for exercise \" + exercise.getId() + \" failed with error\" + exception.getMessage());\n+            // Rollback local changes in case of errors\n+            gitService.deleteLocalRepository(exercise.getRepositoryURL(repositoryType));\n+        }\n+    }\n+\n+    private void writeProjectObjectModel(Model repositoryModel, File repositoryPom) throws IOException {\n+        try (OutputStream outputStream = new FileOutputStream(repositoryPom)) {\n+            var pomWriter = new MavenXpp3Writer();\n+            pomWriter.write(outputStream, repositoryModel);\n+        }\n+    }\n+\n+    private Model upgradeProjectObjectModel(Resource templatePom, File repositoryPom) throws IOException, XmlPullParserException {\n+        try (InputStream templateInput = templatePom.getInputStream(); InputStream repoInput = new FileInputStream(repositoryPom)) {\n+\n+            var pomReader = new MavenXpp3Reader();\n+            Model templateModel = pomReader.read(templateInput);\n+            Model repoModel = pomReader.read(repoInput);\n+\n+            // Update all dependencies found in the repository pom with version found in the template\n+            updateDependencies(repoModel, templateModel);\n+\n+            // Update Maven Compiler Plugin with JDK version, Maven Surefire Plugin and Maven Failsafe Plugin by replacing them with template plugins\n+            upgradePlugin(repoModel, templateModel, \"org.apache.maven.plugins\", \"maven-compiler-plugin\");\n+            upgradePlugin(repoModel, templateModel, \"org.apache.maven.plugins\", \"maven-surefire-plugin\");\n+            upgradePlugin(repoModel, templateModel, \"org.apache.maven.plugins\", \"maven-failsafe-plugin\");\n+\n+            // Replace JUnit4 with AJTS\n+            removeDependency(repoModel, \"junit\", \"junit\");\n+            addDependency(repoModel, templateModel, \"de.tum.in.ase\", \"artemis-java-test-sandbox\");\n+\n+            // Remove legacy dependencies which are no longer needed or were moved to AJTS\n+            removeDependency(repoModel, \"org.json\", \"json\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MDgxMQ==", "bodyText": "org.json:json should be always deleted for all repository types.", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528240811", "createdAt": "2020-11-21T20:45:02Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/programming/JavaTemplateUpgradeService.java", "diffHunk": "@@ -0,0 +1,217 @@\n+package de.tum.in.www1.artemis.service.programming;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+\n+import org.apache.maven.model.Dependency;\n+import org.apache.maven.model.Model;\n+import org.apache.maven.model.Plugin;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Reader;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Writer;\n+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n+import org.eclipse.jgit.api.errors.GitAPIException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.core.io.Resource;\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.ResourceLoaderService;\n+import de.tum.in.www1.artemis.domain.ProgrammingExercise;\n+import de.tum.in.www1.artemis.domain.Repository;\n+import de.tum.in.www1.artemis.domain.enumeration.RepositoryType;\n+import de.tum.in.www1.artemis.service.ProgrammingExerciseService;\n+import de.tum.in.www1.artemis.service.UserService;\n+import de.tum.in.www1.artemis.service.connectors.GitService;\n+\n+/**\n+ * Service for upgrading of Java template files\n+ */\n+@Service\n+public class JavaTemplateUpgradeService implements TemplateUpgradeService {\n+\n+    private final Logger log = LoggerFactory.getLogger(JavaTemplateUpgradeService.class);\n+\n+    private final ProgrammingExerciseService programmingExerciseService;\n+\n+    private final GitService gitService;\n+\n+    private final UserService userService;\n+\n+    private final ResourceLoaderService resourceLoaderService;\n+\n+    public JavaTemplateUpgradeService(ProgrammingExerciseService programmingExerciseService, GitService gitService, ResourceLoaderService resourceLoaderService,\n+            UserService userService) {\n+        this.programmingExerciseService = programmingExerciseService;\n+        this.gitService = gitService;\n+        this.userService = userService;\n+        this.resourceLoaderService = resourceLoaderService;\n+    }\n+\n+    @Override\n+    public void upgradeTemplate(ProgrammingExercise exercise) {\n+        // TODO: Support sequential test runs\n+        if (exercise.hasSequentialTestRuns()) {\n+            return;\n+        }\n+        // Template and solution repository can also contain a project object model for some project types\n+        updateRepository(exercise, RepositoryType.TEMPLATE.getName(), RepositoryType.TEMPLATE);\n+        updateRepository(exercise, RepositoryType.SOLUTION.getName(), RepositoryType.SOLUTION);\n+        updateRepository(exercise, \"test/projectTemplate\", RepositoryType.TESTS);\n+    }\n+\n+    /**\n+     * Upgrades the template files of a specific Java or Kotlin repository. Prefers project type specific templates as the\n+     * reference. The method updates the project object models (pom) in the target repository with the pom of the latest\n+     * Artemis template.\n+     *\n+     * @param exercise The exercise for the the template files should be updated\n+     * @param templateFolder The folder containing the latest reference template\n+     * @param repositoryType The type of repository to be updated\n+     */\n+    private void updateRepository(ProgrammingExercise exercise, String templateFolder, RepositoryType repositoryType) {\n+        try {\n+            // Get general template poms\n+            String programmingLanguageTemplate = programmingExerciseService.getProgrammingLanguageTemplatePath(exercise.getProgrammingLanguage());\n+            String templatePomPath = programmingLanguageTemplate + \"/\" + templateFolder + \"/**/pom.xml\";\n+\n+            Resource[] templatePoms = resourceLoaderService.getResources(templatePomPath);\n+\n+            // Get project type specific template poms\n+            if (exercise.getProjectType() != null) {\n+                String projectTypeTemplate = programmingExerciseService.getProgrammingLanguageProjectTypePath(exercise.getProgrammingLanguage(), exercise.getProjectType());\n+                String projectTypePomPath = projectTypeTemplate + \"/\" + templateFolder + \"/**/pom.xml\";\n+\n+                Resource[] projectTypePoms = resourceLoaderService.getResources(projectTypePomPath);\n+\n+                // Prefer project type specific poms\n+                templatePoms = projectTypePoms.length > 0 ? projectTypePoms : templatePoms;\n+            }\n+\n+            Repository repository = gitService.getOrCheckoutRepository(exercise.getRepositoryURL(repositoryType), true);\n+            List<File> repositoryPoms = gitService.listFiles(repository).stream().filter(file -> \"pom.xml\".equals(file.getName())).collect(Collectors.toList());\n+\n+            // Validate that template and repository have the same number of pom.xml files, otherwise no upgrade will take place\n+            // TODO: Improve matching of repository and template poms, support sequential test runs\n+            if (templatePoms.length == 1 && repositoryPoms.size() == 1) {\n+                Model updatedRepoModel = upgradeProjectObjectModel(templatePoms[0], repositoryPoms.get(0));\n+                writeProjectObjectModel(updatedRepoModel, repositoryPoms.get(0));\n+                programmingExerciseService.commitAndPushRepository(repository, \"Template upgraded by Artemis\", userService.getUser());\n+            }\n+        }\n+        catch (IOException | GitAPIException | InterruptedException | XmlPullParserException exception) {\n+            log.error(\"Updating of template files of repository \" + repositoryType.name() + \" for exercise \" + exercise.getId() + \" failed with error\" + exception.getMessage());\n+            // Rollback local changes in case of errors\n+            gitService.deleteLocalRepository(exercise.getRepositoryURL(repositoryType));\n+        }\n+    }\n+\n+    private void writeProjectObjectModel(Model repositoryModel, File repositoryPom) throws IOException {\n+        try (OutputStream outputStream = new FileOutputStream(repositoryPom)) {\n+            var pomWriter = new MavenXpp3Writer();\n+            pomWriter.write(outputStream, repositoryModel);\n+        }\n+    }\n+\n+    private Model upgradeProjectObjectModel(Resource templatePom, File repositoryPom) throws IOException, XmlPullParserException {\n+        try (InputStream templateInput = templatePom.getInputStream(); InputStream repoInput = new FileInputStream(repositoryPom)) {\n+\n+            var pomReader = new MavenXpp3Reader();\n+            Model templateModel = pomReader.read(templateInput);\n+            Model repoModel = pomReader.read(repoInput);\n+\n+            // Update all dependencies found in the repository pom with version found in the template\n+            updateDependencies(repoModel, templateModel);\n+\n+            // Update Maven Compiler Plugin with JDK version, Maven Surefire Plugin and Maven Failsafe Plugin by replacing them with template plugins\n+            upgradePlugin(repoModel, templateModel, \"org.apache.maven.plugins\", \"maven-compiler-plugin\");\n+            upgradePlugin(repoModel, templateModel, \"org.apache.maven.plugins\", \"maven-surefire-plugin\");\n+            upgradePlugin(repoModel, templateModel, \"org.apache.maven.plugins\", \"maven-failsafe-plugin\");\n+\n+            // Replace JUnit4 with AJTS\n+            removeDependency(repoModel, \"junit\", \"junit\");\n+            addDependency(repoModel, templateModel, \"de.tum.in.ase\", \"artemis-java-test-sandbox\");\n+\n+            // Remove legacy dependencies which are no longer needed or were moved to AJTS\n+            removeDependency(repoModel, \"org.json\", \"json\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MDAwNQ=="}, "originalCommit": {"oid": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMjM3MDcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/programming/JavaTemplateUpgradeService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMDo0MDoyN1rOH3xPKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMDo0OTozMVrOH3xSZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MDQyNA==", "bodyText": "why are we not using here RepositoryType.TEST.getName()? Could you add a comment?", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528240424", "createdAt": "2020-11-21T20:40:27Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/programming/JavaTemplateUpgradeService.java", "diffHunk": "@@ -0,0 +1,217 @@\n+package de.tum.in.www1.artemis.service.programming;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+\n+import org.apache.maven.model.Dependency;\n+import org.apache.maven.model.Model;\n+import org.apache.maven.model.Plugin;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Reader;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Writer;\n+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n+import org.eclipse.jgit.api.errors.GitAPIException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.core.io.Resource;\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.ResourceLoaderService;\n+import de.tum.in.www1.artemis.domain.ProgrammingExercise;\n+import de.tum.in.www1.artemis.domain.Repository;\n+import de.tum.in.www1.artemis.domain.enumeration.RepositoryType;\n+import de.tum.in.www1.artemis.service.ProgrammingExerciseService;\n+import de.tum.in.www1.artemis.service.UserService;\n+import de.tum.in.www1.artemis.service.connectors.GitService;\n+\n+/**\n+ * Service for upgrading of Java template files\n+ */\n+@Service\n+public class JavaTemplateUpgradeService implements TemplateUpgradeService {\n+\n+    private final Logger log = LoggerFactory.getLogger(JavaTemplateUpgradeService.class);\n+\n+    private final ProgrammingExerciseService programmingExerciseService;\n+\n+    private final GitService gitService;\n+\n+    private final UserService userService;\n+\n+    private final ResourceLoaderService resourceLoaderService;\n+\n+    public JavaTemplateUpgradeService(ProgrammingExerciseService programmingExerciseService, GitService gitService, ResourceLoaderService resourceLoaderService,\n+            UserService userService) {\n+        this.programmingExerciseService = programmingExerciseService;\n+        this.gitService = gitService;\n+        this.userService = userService;\n+        this.resourceLoaderService = resourceLoaderService;\n+    }\n+\n+    @Override\n+    public void upgradeTemplate(ProgrammingExercise exercise) {\n+        // TODO: Support sequential test runs\n+        if (exercise.hasSequentialTestRuns()) {\n+            return;\n+        }\n+        // Template and solution repository can also contain a project object model for some project types\n+        updateRepository(exercise, RepositoryType.TEMPLATE.getName(), RepositoryType.TEMPLATE);\n+        updateRepository(exercise, RepositoryType.SOLUTION.getName(), RepositoryType.SOLUTION);\n+        updateRepository(exercise, \"test/projectTemplate\", RepositoryType.TESTS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MTI1NA==", "bodyText": "RepositoryType.Test.getName() -> \"tests\". So it doesn't correspond to the folder structure of the templates. The other reason is that tests/ contains two pom.xml. One is used for sequential tests only. As this isn't supported now I use the more specific path to the right pom. I'm already working on a follow up which restructures the code slightly, so I don't want to add a comment for this.", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528241254", "createdAt": "2020-11-21T20:49:31Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/programming/JavaTemplateUpgradeService.java", "diffHunk": "@@ -0,0 +1,217 @@\n+package de.tum.in.www1.artemis.service.programming;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+\n+import org.apache.maven.model.Dependency;\n+import org.apache.maven.model.Model;\n+import org.apache.maven.model.Plugin;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Reader;\n+import org.apache.maven.model.io.xpp3.MavenXpp3Writer;\n+import org.codehaus.plexus.util.xml.pull.XmlPullParserException;\n+import org.eclipse.jgit.api.errors.GitAPIException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.core.io.Resource;\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.ResourceLoaderService;\n+import de.tum.in.www1.artemis.domain.ProgrammingExercise;\n+import de.tum.in.www1.artemis.domain.Repository;\n+import de.tum.in.www1.artemis.domain.enumeration.RepositoryType;\n+import de.tum.in.www1.artemis.service.ProgrammingExerciseService;\n+import de.tum.in.www1.artemis.service.UserService;\n+import de.tum.in.www1.artemis.service.connectors.GitService;\n+\n+/**\n+ * Service for upgrading of Java template files\n+ */\n+@Service\n+public class JavaTemplateUpgradeService implements TemplateUpgradeService {\n+\n+    private final Logger log = LoggerFactory.getLogger(JavaTemplateUpgradeService.class);\n+\n+    private final ProgrammingExerciseService programmingExerciseService;\n+\n+    private final GitService gitService;\n+\n+    private final UserService userService;\n+\n+    private final ResourceLoaderService resourceLoaderService;\n+\n+    public JavaTemplateUpgradeService(ProgrammingExerciseService programmingExerciseService, GitService gitService, ResourceLoaderService resourceLoaderService,\n+            UserService userService) {\n+        this.programmingExerciseService = programmingExerciseService;\n+        this.gitService = gitService;\n+        this.userService = userService;\n+        this.resourceLoaderService = resourceLoaderService;\n+    }\n+\n+    @Override\n+    public void upgradeTemplate(ProgrammingExercise exercise) {\n+        // TODO: Support sequential test runs\n+        if (exercise.hasSequentialTestRuns()) {\n+            return;\n+        }\n+        // Template and solution repository can also contain a project object model for some project types\n+        updateRepository(exercise, RepositoryType.TEMPLATE.getName(), RepositoryType.TEMPLATE);\n+        updateRepository(exercise, RepositoryType.SOLUTION.getName(), RepositoryType.SOLUTION);\n+        updateRepository(exercise, \"test/projectTemplate\", RepositoryType.TESTS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MDQyNA=="}, "originalCommit": {"oid": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMjM3NjU1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/i18n/de/programmingExercise.json", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMDo0ODowOFrOH3xR1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQwOTo0NzowM1rOH31emg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MTEwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"description\": \"Durch Aktivierung dieser Option werden die Template Dateien in den Repositories aktualisiert. Dies ist sinnvoll, wenn die importierte Aufgabe veraltete Abh\u00e4ngigkeiten enth\u00e4lt. F\u00fcr Java ersetzt Artemis JUnit4 durch Ares (enth\u00e4lt JUnit5) und aktualisiert die Abh\u00e4ngigkeiten und Plugins mit den Versionen aus dem neusten Template. Danach musst du wahrscheinlich die Testcases anpassen.\"\n          \n          \n            \n                            \"description\": \"Durch Aktivierung dieser Option werden die Template Dateien in den Repositories aktualisiert. Dies ist sinnvoll, wenn die importierte Aufgabe veraltete Abh\u00e4ngigkeiten enth\u00e4lt. F\u00fcr Java ersetzt Artemis JUnit4 durch Ares (enth\u00e4lt JUnit5) und aktualisiert die Abh\u00e4ngigkeiten und Plugins mit den Versionen aus dem neusten Template. Danach m\u00fcssen die Testcases wahrscheinlich angepasst werden.\"", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528241108", "createdAt": "2020-11-21T20:48:08Z", "author": {"login": "fde312"}, "path": "src/main/webapp/i18n/de/programmingExercise.json", "diffHunk": "@@ -68,6 +68,10 @@\n                 \"title\": \"Build Pl\u00e4ne neu erstellen\",\n                 \"description\": \"Durch Aktivierung dieser Option werden die Build Pl\u00e4ne neu erstellt und nicht von der importierten Aufgabe kopiert. Neu erstellte Build Pl\u00e4ne unterst\u00fctzen standardm\u00e4\u00dfig die neuesten Features der Artemis Aufgabenvorlagen.\"\n             },\n+            \"updateTemplate\": {\n+                \"title\": \"Aktualisiere Template\",\n+                \"description\": \"Durch Aktivierung dieser Option werden die Template Dateien in den Repositories aktualisiert. Dies ist sinnvoll, wenn die importierte Aufgabe veraltete Abh\u00e4ngigkeiten enth\u00e4lt. F\u00fcr Java ersetzt Artemis JUnit4 durch Ares (enth\u00e4lt JUnit5) und aktualisiert die Abh\u00e4ngigkeiten und Plugins mit den Versionen aus dem neusten Template. Danach musst du wahrscheinlich die Testcases anpassen.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MTUzMw==", "bodyText": "Preferring the active sentence here. But I'm not sure if we usually reference the instructor with you/du.", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528241533", "createdAt": "2020-11-21T20:52:04Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/i18n/de/programmingExercise.json", "diffHunk": "@@ -68,6 +68,10 @@\n                 \"title\": \"Build Pl\u00e4ne neu erstellen\",\n                 \"description\": \"Durch Aktivierung dieser Option werden die Build Pl\u00e4ne neu erstellt und nicht von der importierten Aufgabe kopiert. Neu erstellte Build Pl\u00e4ne unterst\u00fctzen standardm\u00e4\u00dfig die neuesten Features der Artemis Aufgabenvorlagen.\"\n             },\n+            \"updateTemplate\": {\n+                \"title\": \"Aktualisiere Template\",\n+                \"description\": \"Durch Aktivierung dieser Option werden die Template Dateien in den Repositories aktualisiert. Dies ist sinnvoll, wenn die importierte Aufgabe veraltete Abh\u00e4ngigkeiten enth\u00e4lt. F\u00fcr Java ersetzt Artemis JUnit4 durch Ares (enth\u00e4lt JUnit5) und aktualisiert die Abh\u00e4ngigkeiten und Plugins mit den Versionen aus dem neusten Template. Danach musst du wahrscheinlich die Testcases anpassen.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MTEwOA=="}, "originalCommit": {"oid": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MzEzNw==", "bodyText": "Yeah, that why I suggested it to rephrase :)", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528243137", "createdAt": "2020-11-21T21:09:20Z", "author": {"login": "fde312"}, "path": "src/main/webapp/i18n/de/programmingExercise.json", "diffHunk": "@@ -68,6 +68,10 @@\n                 \"title\": \"Build Pl\u00e4ne neu erstellen\",\n                 \"description\": \"Durch Aktivierung dieser Option werden die Build Pl\u00e4ne neu erstellt und nicht von der importierten Aufgabe kopiert. Neu erstellte Build Pl\u00e4ne unterst\u00fctzen standardm\u00e4\u00dfig die neuesten Features der Artemis Aufgabenvorlagen.\"\n             },\n+            \"updateTemplate\": {\n+                \"title\": \"Aktualisiere Template\",\n+                \"description\": \"Durch Aktivierung dieser Option werden die Template Dateien in den Repositories aktualisiert. Dies ist sinnvoll, wenn die importierte Aufgabe veraltete Abh\u00e4ngigkeiten enth\u00e4lt. F\u00fcr Java ersetzt Artemis JUnit4 durch Ares (enth\u00e4lt JUnit5) und aktualisiert die Abh\u00e4ngigkeiten und Plugins mit den Versionen aus dem neusten Template. Danach musst du wahrscheinlich die Testcases anpassen.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MTEwOA=="}, "originalCommit": {"oid": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMwOTg2OQ==", "bodyText": "\"du\" is ok", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528309869", "createdAt": "2020-11-22T09:46:40Z", "author": {"login": "krusche"}, "path": "src/main/webapp/i18n/de/programmingExercise.json", "diffHunk": "@@ -68,6 +68,10 @@\n                 \"title\": \"Build Pl\u00e4ne neu erstellen\",\n                 \"description\": \"Durch Aktivierung dieser Option werden die Build Pl\u00e4ne neu erstellt und nicht von der importierten Aufgabe kopiert. Neu erstellte Build Pl\u00e4ne unterst\u00fctzen standardm\u00e4\u00dfig die neuesten Features der Artemis Aufgabenvorlagen.\"\n             },\n+            \"updateTemplate\": {\n+                \"title\": \"Aktualisiere Template\",\n+                \"description\": \"Durch Aktivierung dieser Option werden die Template Dateien in den Repositories aktualisiert. Dies ist sinnvoll, wenn die importierte Aufgabe veraltete Abh\u00e4ngigkeiten enth\u00e4lt. F\u00fcr Java ersetzt Artemis JUnit4 durch Ares (enth\u00e4lt JUnit5) und aktualisiert die Abh\u00e4ngigkeiten und Plugins mit den Versionen aus dem neusten Template. Danach musst du wahrscheinlich die Testcases anpassen.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MTEwOA=="}, "originalCommit": {"oid": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMwOTkxNA==", "bodyText": "please prefer active", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528309914", "createdAt": "2020-11-22T09:47:03Z", "author": {"login": "krusche"}, "path": "src/main/webapp/i18n/de/programmingExercise.json", "diffHunk": "@@ -68,6 +68,10 @@\n                 \"title\": \"Build Pl\u00e4ne neu erstellen\",\n                 \"description\": \"Durch Aktivierung dieser Option werden die Build Pl\u00e4ne neu erstellt und nicht von der importierten Aufgabe kopiert. Neu erstellte Build Pl\u00e4ne unterst\u00fctzen standardm\u00e4\u00dfig die neuesten Features der Artemis Aufgabenvorlagen.\"\n             },\n+            \"updateTemplate\": {\n+                \"title\": \"Aktualisiere Template\",\n+                \"description\": \"Durch Aktivierung dieser Option werden die Template Dateien in den Repositories aktualisiert. Dies ist sinnvoll, wenn die importierte Aufgabe veraltete Abh\u00e4ngigkeiten enth\u00e4lt. F\u00fcr Java ersetzt Artemis JUnit4 durch Ares (enth\u00e4lt JUnit5) und aktualisiert die Abh\u00e4ngigkeiten und Plugins mit den Versionen aus dem neusten Template. Danach musst du wahrscheinlich die Testcases anpassen.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MTEwOA=="}, "originalCommit": {"oid": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMjM3NzI2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/i18n/en/programmingExercise.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMDo0OTowMVrOH3xSKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQwOTo0Njo1NlrOH31eig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MTE5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"description\": \"Activate this option to update the template files in the repositories. This can be useful if the imported exercise is old and contains outdated dependencies. For Java, Artemis replaces JUnit4 by Ares (which includes JUnit5) and updates the dependencies and plugins with the versions found in the latest template. Afterwards you might need to adapt the test cases.\"\n          \n          \n            \n                            \"description\": \"Activate this option to update the template files in the repositories. This can be useful if the imported exercise is old and contains outdated dependencies. For Java, Artemis replaces JUnit4 by Ares (which includes JUnit5) and updates the dependencies and plugins with the versions found in the latest template. Afterwards test cases might need to be adapted.\"", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528241195", "createdAt": "2020-11-21T20:49:01Z", "author": {"login": "fde312"}, "path": "src/main/webapp/i18n/en/programmingExercise.json", "diffHunk": "@@ -68,6 +68,10 @@\n                 \"title\": \"Recreate Build Plans\",\n                 \"description\": \"Activate this option to create new build plans instead of copying them from the imported exercise. Newly created build plans support the latest features of the Artemis exercise templates by default.\"\n             },\n+            \"updateTemplate\": {\n+                \"title\": \"Update Template\",\n+                \"description\": \"Activate this option to update the template files in the repositories. This can be useful if the imported exercise is old and contains outdated dependencies. For Java, Artemis replaces JUnit4 by Ares (which includes JUnit5) and updates the dependencies and plugins with the versions found in the latest template. Afterwards you might need to adapt the test cases.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MTU1MA==", "bodyText": "Preferring the active sentence here. But I'm not sure if we usually reference the instructor with you/du.", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528241550", "createdAt": "2020-11-21T20:52:12Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/i18n/en/programmingExercise.json", "diffHunk": "@@ -68,6 +68,10 @@\n                 \"title\": \"Recreate Build Plans\",\n                 \"description\": \"Activate this option to create new build plans instead of copying them from the imported exercise. Newly created build plans support the latest features of the Artemis exercise templates by default.\"\n             },\n+            \"updateTemplate\": {\n+                \"title\": \"Update Template\",\n+                \"description\": \"Activate this option to update the template files in the repositories. This can be useful if the imported exercise is old and contains outdated dependencies. For Java, Artemis replaces JUnit4 by Ares (which includes JUnit5) and updates the dependencies and plugins with the versions found in the latest template. Afterwards you might need to adapt the test cases.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MTE5NQ=="}, "originalCommit": {"oid": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMwOTg5OA==", "bodyText": "you is fine, please prefer active", "url": "https://github.com/ls1intum/Artemis/pull/2414#discussion_r528309898", "createdAt": "2020-11-22T09:46:56Z", "author": {"login": "krusche"}, "path": "src/main/webapp/i18n/en/programmingExercise.json", "diffHunk": "@@ -68,6 +68,10 @@\n                 \"title\": \"Recreate Build Plans\",\n                 \"description\": \"Activate this option to create new build plans instead of copying them from the imported exercise. Newly created build plans support the latest features of the Artemis exercise templates by default.\"\n             },\n+            \"updateTemplate\": {\n+                \"title\": \"Update Template\",\n+                \"description\": \"Activate this option to update the template files in the repositories. This can be useful if the imported exercise is old and contains outdated dependencies. For Java, Artemis replaces JUnit4 by Ares (which includes JUnit5) and updates the dependencies and plugins with the versions found in the latest template. Afterwards you might need to adapt the test cases.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI0MTE5NQ=="}, "originalCommit": {"oid": "e14d2981f9d7b2a2edb1349f313bb8edfe177a39"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4450, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}