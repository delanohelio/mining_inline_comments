{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NzUyODMx", "number": 2099, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNToxMToyN1rOEnF66A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTo0NToyMlrOEonq1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDI2OTIwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/i18n/de/error.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNToxMToyN1rOHXftnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNToxMToyN1rOHXftnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM5ODg3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"feedbackCreditsNull\": \"Fehler! Wenn Feedback vorhanden ist, m\u00fcssen die Feedback eine Punktzahl haben.\"\n          \n          \n            \n                    \"feedbackCreditsNull\": \"Fehler! Wenn Feedback vorhanden ist, muss das Feedback eine Punktzahl haben.\"", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r494398876", "createdAt": "2020-09-24T15:11:27Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/i18n/de/error.json", "diffHunk": "@@ -28,6 +28,7 @@\n         \"emptyFile\": \"Die hochgeladene Datei {{ fileName }} ist leer. Bitte \u00fcberpr\u00fcfe die Datei und versuche es erneut.\",\n         \"externalSubmissionBeforeDueDate\": \"Externe Einreichungen k\u00f6nnen nur nach der Abgabefrist erstellt werden.\",\n         \"externalSubmissionForQuizExercise\": \"Externe Einreichungen k\u00f6nnen nicht f\u00fcr Quiz \u00dcbungen erstellt werden.\",\n-        \"nosubmissions\": \"Es wurde kein existierender Nutzer angegeben oder es existieren keine Abgaben.\"\n+        \"nosubmissions\": \"Es wurde kein existierender Nutzer angegeben oder es existieren keine Abgaben.\",\n+        \"feedbackCreditsNull\": \"Fehler! Wenn Feedback vorhanden ist, m\u00fcssen die Feedback eine Punktzahl haben.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79683f2ae35c5775069b05111462d1a7eb466cfe"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDMyNDgwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNToyMzoyN1rOHXgQHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNToyMzoyN1rOHXgQHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQwNzcxMQ==", "bodyText": "These multiple assignments in one line are highly confusing. I would chang ethis", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r494407711", "createdAt": "2020-09-24T15:23:27Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts", "diffHunk": "@@ -279,21 +277,48 @@ export class CodeEditorTutorAssessmentContainerComponent implements OnInit, OnDe\n      * The error must already be provided translated by the emitting component.\n      */\n     onError(error: string) {\n-        this.jhiAlertService.error(`artemisApp.editor.errors.${error}`);\n+        this.jhiAlertService.error(error);\n+        this.saveBusy = this.cancelBusy = this.submitBusy = this.nextSubmissionBusy = false;\n+    }\n+\n+    /**\n+     * Validate the feedback of the assessment\n+     */\n+    validateFeedback(): void {\n+        this.calculateTotalScore();\n+        const hasReferencedFeedback = this.referencedFeedback.filter(Feedback.isPresent).length > 0;\n+        const hasUnreferencedFeedback = this.unreferencedFeedback.filter(Feedback.isPresent).length > 0;\n+        const hasGeneralFeedback = Feedback.hasDetailText(this.generalFeedback);\n+        this.assessmentsAreValid = hasReferencedFeedback || hasGeneralFeedback || hasUnreferencedFeedback;\n     }\n \n-    private getLatestResult(results: Result[]): Result | null {\n-        return _orderBy(results, 'id', 'desc')[0] ?? null;\n+    /**\n+     * Defines whether the inline feedback should be read only or not\n+     */\n+    readOnly() {\n+        return !this.isAtLeastInstructor && !!this.complaint && this.isAssessor;\n     }\n \n-    private getLatestAutomaticResult(results: Result[]): Result | null {\n+    private handleSaveOrSubmitSuccessWithAlert(response: HttpResponse<Result>, translationKey: string): void {\n+        this.participation!.results[0] = this.manualResult = response.body!;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79683f2ae35c5775069b05111462d1a7eb466cfe"}, "originalPosition": 182}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDM0NTYwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNToyNzo0M1rOHXgc_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODowNTowNlrOHX5Tmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxMTAwNQ==", "bodyText": "I don't think that we use the _ notation so far", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r494411005", "createdAt": "2020-09-24T15:27:43Z", "author": {"login": "JonasPetry"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts", "diffHunk": "@@ -0,0 +1,83 @@\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+import { Feedback, FeedbackType, MANUAL_ASSESSMENT_IDENTIFIER } from 'app/entities/feedback.model';\n+import { cloneDeep } from 'lodash';\n+import { TranslateService } from '@ngx-translate/core';\n+\n+@Component({\n+    selector: 'jhi-code-editor-tutor-assessment-inline-feedback',\n+    templateUrl: './code-editor-tutor-assessment-inline-feedback.component.html',\n+})\n+export class CodeEditorTutorAssessmentInlineFeedbackComponent {\n+    MANUAL = FeedbackType.MANUAL;\n+    @Input()\n+    get feedback(): Feedback {\n+        return this._feedback;\n+    }\n+    set feedback(feedback: Feedback) {\n+        this._feedback = feedback || new Feedback();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79683f2ae35c5775069b05111462d1a7eb466cfe"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgxODIwMg==", "bodyText": "see comment above :) I just checked and we have it the same way e.g. for drag and drop and short answer questions", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r494818202", "createdAt": "2020-09-25T08:05:06Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts", "diffHunk": "@@ -0,0 +1,83 @@\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+import { Feedback, FeedbackType, MANUAL_ASSESSMENT_IDENTIFIER } from 'app/entities/feedback.model';\n+import { cloneDeep } from 'lodash';\n+import { TranslateService } from '@ngx-translate/core';\n+\n+@Component({\n+    selector: 'jhi-code-editor-tutor-assessment-inline-feedback',\n+    templateUrl: './code-editor-tutor-assessment-inline-feedback.component.html',\n+})\n+export class CodeEditorTutorAssessmentInlineFeedbackComponent {\n+    MANUAL = FeedbackType.MANUAL;\n+    @Input()\n+    get feedback(): Feedback {\n+        return this._feedback;\n+    }\n+    set feedback(feedback: Feedback) {\n+        this._feedback = feedback || new Feedback();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxMTAwNQ=="}, "originalCommit": {"oid": "79683f2ae35c5775069b05111462d1a7eb466cfe"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDM0OTE0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNToyODoyN1rOHXgfMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNzo1ODoxOFrOHX5FaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxMTU3MA==", "bodyText": "Does this need to be a getter? I think this can be a standard input \ud83e\udd14", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r494411570", "createdAt": "2020-09-24T15:28:27Z", "author": {"login": "JonasPetry"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts", "diffHunk": "@@ -0,0 +1,83 @@\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+import { Feedback, FeedbackType, MANUAL_ASSESSMENT_IDENTIFIER } from 'app/entities/feedback.model';\n+import { cloneDeep } from 'lodash';\n+import { TranslateService } from '@ngx-translate/core';\n+\n+@Component({\n+    selector: 'jhi-code-editor-tutor-assessment-inline-feedback',\n+    templateUrl: './code-editor-tutor-assessment-inline-feedback.component.html',\n+})\n+export class CodeEditorTutorAssessmentInlineFeedbackComponent {\n+    MANUAL = FeedbackType.MANUAL;\n+    @Input()\n+    get feedback(): Feedback {\n+        return this._feedback;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79683f2ae35c5775069b05111462d1a7eb466cfe"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgxNDU2OQ==", "bodyText": "I wanted to intercept the input with a setter and this is how it is written down in the angular docu:\nhttps://angular.io/guide/component-interaction#intercept-input-property-changes-with-a-setter\nJust used it that way.", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r494814569", "createdAt": "2020-09-25T07:58:18Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts", "diffHunk": "@@ -0,0 +1,83 @@\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+import { Feedback, FeedbackType, MANUAL_ASSESSMENT_IDENTIFIER } from 'app/entities/feedback.model';\n+import { cloneDeep } from 'lodash';\n+import { TranslateService } from '@ngx-translate/core';\n+\n+@Component({\n+    selector: 'jhi-code-editor-tutor-assessment-inline-feedback',\n+    templateUrl: './code-editor-tutor-assessment-inline-feedback.component.html',\n+})\n+export class CodeEditorTutorAssessmentInlineFeedbackComponent {\n+    MANUAL = FeedbackType.MANUAL;\n+    @Input()\n+    get feedback(): Feedback {\n+        return this._feedback;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQxMTU3MA=="}, "originalCommit": {"oid": "79683f2ae35c5775069b05111462d1a7eb466cfe"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzExNjE0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/shared/code-editor/ace/code-editor-ace.scss", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjoxNTozMVrOHYvtoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzo0MzozNVrOHYx_0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcwOTYwMA==", "bodyText": "I think the animation for the icon getting larger could be a bit faster so I would suggest 200ms here, but this is really just personal preference \ud83d\ude04", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r495709600", "createdAt": "2020-09-28T06:15:31Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/exercises/programming/shared/code-editor/ace/code-editor-ace.scss", "diffHunk": "@@ -12,6 +12,38 @@ Ace Editor\n         &__editor {\n             flex: 1 1 auto;\n         }\n+\n+        .inline-feedback-d-none {\n+            display: none;\n+        }\n+\n+        .inline-feedback {\n+            display: block;\n+        }\n+\n+        .btn-inline-comment {\n+            display: none;\n+            color: #3e8acc; // btn-primary color\n+            height: 16px;\n+        }\n+\n+        .ace_gutter-cell {\n+            position: relative;\n+        }\n+\n+        .ace_gutter-cell:hover .btn-inline-comment {\n+            display: inline-flex;\n+            position: absolute;\n+            top: 8px; // standard gutter height is 16px\n+            left: 25%;\n+            transform: translate(-50%, -50%);\n+\n+            fa-icon:hover {\n+                font-size: 15px;\n+                transition: font-size 0.35s ease;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0NzAyNw==", "bodyText": "If anyone else is feeling the same, we can change it :)", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r495747027", "createdAt": "2020-09-28T07:43:35Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/programming/shared/code-editor/ace/code-editor-ace.scss", "diffHunk": "@@ -12,6 +12,38 @@ Ace Editor\n         &__editor {\n             flex: 1 1 auto;\n         }\n+\n+        .inline-feedback-d-none {\n+            display: none;\n+        }\n+\n+        .inline-feedback {\n+            display: block;\n+        }\n+\n+        .btn-inline-comment {\n+            display: none;\n+            color: #3e8acc; // btn-primary color\n+            height: 16px;\n+        }\n+\n+        .ace_gutter-cell {\n+            position: relative;\n+        }\n+\n+        .ace_gutter-cell:hover .btn-inline-comment {\n+            display: inline-flex;\n+            position: absolute;\n+            top: 8px; // standard gutter height is 16px\n+            left: 25%;\n+            transform: translate(-50%, -50%);\n+\n+            fa-icon:hover {\n+                font-size: 15px;\n+                transition: font-size 0.35s ease;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcwOTYwMA=="}, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzEyOTk0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.html", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjoyMToyMFrOHYv1KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzo0ODoxNVrOHYyJBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcxMTUyOA==", "bodyText": "Do we really need that here? If there is no special reason I would omit that so that instead of getting this:\n\nwe could have that div simply adjust its width to the parent like this:", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r495711528", "createdAt": "2020-09-28T06:21:20Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.html", "diffHunk": "@@ -0,0 +1,53 @@\n+<div\n+    class=\"border rounded\"\n+    [style.max-width]=\"'780px'\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0NTM1Ng==", "bodyText": "@balazs-czopf I oriented this how it is done for GitHub. There the comment does not have the full width either and is around 780px width :)", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r495745356", "createdAt": "2020-09-28T07:40:16Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.html", "diffHunk": "@@ -0,0 +1,53 @@\n+<div\n+    class=\"border rounded\"\n+    [style.max-width]=\"'780px'\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcxMTUyOA=="}, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0OTM4Mw==", "bodyText": "oh okay I see :)", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r495749383", "createdAt": "2020-09-28T07:48:15Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.html", "diffHunk": "@@ -0,0 +1,53 @@\n+<div\n+    class=\"border rounded\"\n+    [style.max-width]=\"'780px'\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcxMTUyOA=="}, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODY5MTI0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/entities/feedback.model.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOTozOTo0OVrOHZk6Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjoyODozMFrOHZqqSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU4MTEzMQ==", "bodyText": "do we really need this? We have FeedbackType.MANUAL for this", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r496581131", "createdAt": "2020-09-29T09:39:49Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/entities/feedback.model.ts", "diffHunk": "@@ -19,6 +19,7 @@ export enum FeedbackType {\n }\n \n export const STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER = 'SCAFeedbackIdentifier:';\n+export const MANUAL_ASSESSMENT_IDENTIFIER = 'MAFeedbackIdentifier:';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3NTQwMA==", "bodyText": "I removed it :)", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r496675400", "createdAt": "2020-09-29T12:28:30Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/entities/feedback.model.ts", "diffHunk": "@@ -19,6 +19,7 @@ export enum FeedbackType {\n }\n \n export const STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER = 'SCAFeedbackIdentifier:';\n+export const MANUAL_ASSESSMENT_IDENTIFIER = 'MAFeedbackIdentifier:';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU4MTEzMQ=="}, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODkzNDc1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NjozN1rOHZnRyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjoyNjo0NFrOHZqmFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTk3Nw==", "bodyText": "For the future, it would be nice, if tutors can also select certain characters of a line. I think this could be extended using file:${this.fileName}_line:${this.codeLine}_characters:{start}:{end}", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r496619977", "createdAt": "2020-09-29T10:46:37Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts", "diffHunk": "@@ -0,0 +1,83 @@\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+import { Feedback, FeedbackType, MANUAL_ASSESSMENT_IDENTIFIER } from 'app/entities/feedback.model';\n+import { cloneDeep } from 'lodash';\n+import { TranslateService } from '@ngx-translate/core';\n+\n+@Component({\n+    selector: 'jhi-code-editor-tutor-assessment-inline-feedback',\n+    templateUrl: './code-editor-tutor-assessment-inline-feedback.component.html',\n+})\n+export class CodeEditorTutorAssessmentInlineFeedbackComponent {\n+    MANUAL = FeedbackType.MANUAL;\n+    @Input()\n+    get feedback(): Feedback {\n+        return this._feedback;\n+    }\n+    set feedback(feedback: Feedback) {\n+        this._feedback = feedback || new Feedback();\n+        this.oldFeedback = cloneDeep(this.feedback);\n+        this.editOnly = feedback ? true : false;\n+    }\n+    private _feedback: Feedback;\n+    @Input()\n+    fileName: string;\n+    @Input()\n+    codeLine: number;\n+    @Input()\n+    readOnly: boolean;\n+    @Output()\n+    onUpdateFeedback = new EventEmitter<Feedback>();\n+    @Output()\n+    onCancelFeedback = new EventEmitter<number>();\n+    @Output()\n+    onDeleteFeedback = new EventEmitter<Feedback>();\n+    @Output()\n+    onEditFeedback = new EventEmitter<number>();\n+\n+    editOnly: boolean;\n+    oldFeedback: Feedback;\n+    constructor(private translateService: TranslateService) {}\n+\n+    /**\n+     * Updates the current feedback and sets props and emits the feedback to parent component\n+     */\n+    updateFeedback() {\n+        this.feedback.type = this.MANUAL;\n+        this.feedback.reference = `${MANUAL_ASSESSMENT_IDENTIFIER}_file:${this.fileName}_line:${this.codeLine}`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzNjgyMQ==", "bodyText": "It would be more important that fileName includes the path, in the (unlikely) case that there are two files with the same name", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r496636821", "createdAt": "2020-09-29T11:18:00Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts", "diffHunk": "@@ -0,0 +1,83 @@\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+import { Feedback, FeedbackType, MANUAL_ASSESSMENT_IDENTIFIER } from 'app/entities/feedback.model';\n+import { cloneDeep } from 'lodash';\n+import { TranslateService } from '@ngx-translate/core';\n+\n+@Component({\n+    selector: 'jhi-code-editor-tutor-assessment-inline-feedback',\n+    templateUrl: './code-editor-tutor-assessment-inline-feedback.component.html',\n+})\n+export class CodeEditorTutorAssessmentInlineFeedbackComponent {\n+    MANUAL = FeedbackType.MANUAL;\n+    @Input()\n+    get feedback(): Feedback {\n+        return this._feedback;\n+    }\n+    set feedback(feedback: Feedback) {\n+        this._feedback = feedback || new Feedback();\n+        this.oldFeedback = cloneDeep(this.feedback);\n+        this.editOnly = feedback ? true : false;\n+    }\n+    private _feedback: Feedback;\n+    @Input()\n+    fileName: string;\n+    @Input()\n+    codeLine: number;\n+    @Input()\n+    readOnly: boolean;\n+    @Output()\n+    onUpdateFeedback = new EventEmitter<Feedback>();\n+    @Output()\n+    onCancelFeedback = new EventEmitter<number>();\n+    @Output()\n+    onDeleteFeedback = new EventEmitter<Feedback>();\n+    @Output()\n+    onEditFeedback = new EventEmitter<number>();\n+\n+    editOnly: boolean;\n+    oldFeedback: Feedback;\n+    constructor(private translateService: TranslateService) {}\n+\n+    /**\n+     * Updates the current feedback and sets props and emits the feedback to parent component\n+     */\n+    updateFeedback() {\n+        this.feedback.type = this.MANUAL;\n+        this.feedback.reference = `${MANUAL_ASSESSMENT_IDENTIFIER}_file:${this.fileName}_line:${this.codeLine}`;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTk3Nw=="}, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3NDMyNA==", "bodyText": "The reference contains the whole path of the file. I renamed the variable to have a consistent name throughout the components. :)", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r496674324", "createdAt": "2020-09-29T12:26:44Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts", "diffHunk": "@@ -0,0 +1,83 @@\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+import { Feedback, FeedbackType, MANUAL_ASSESSMENT_IDENTIFIER } from 'app/entities/feedback.model';\n+import { cloneDeep } from 'lodash';\n+import { TranslateService } from '@ngx-translate/core';\n+\n+@Component({\n+    selector: 'jhi-code-editor-tutor-assessment-inline-feedback',\n+    templateUrl: './code-editor-tutor-assessment-inline-feedback.component.html',\n+})\n+export class CodeEditorTutorAssessmentInlineFeedbackComponent {\n+    MANUAL = FeedbackType.MANUAL;\n+    @Input()\n+    get feedback(): Feedback {\n+        return this._feedback;\n+    }\n+    set feedback(feedback: Feedback) {\n+        this._feedback = feedback || new Feedback();\n+        this.oldFeedback = cloneDeep(this.feedback);\n+        this.editOnly = feedback ? true : false;\n+    }\n+    private _feedback: Feedback;\n+    @Input()\n+    fileName: string;\n+    @Input()\n+    codeLine: number;\n+    @Input()\n+    readOnly: boolean;\n+    @Output()\n+    onUpdateFeedback = new EventEmitter<Feedback>();\n+    @Output()\n+    onCancelFeedback = new EventEmitter<number>();\n+    @Output()\n+    onDeleteFeedback = new EventEmitter<Feedback>();\n+    @Output()\n+    onEditFeedback = new EventEmitter<number>();\n+\n+    editOnly: boolean;\n+    oldFeedback: Feedback;\n+    constructor(private translateService: TranslateService) {}\n+\n+    /**\n+     * Updates the current feedback and sets props and emits the feedback to parent component\n+     */\n+    updateFeedback() {\n+        this.feedback.type = this.MANUAL;\n+        this.feedback.reference = `${MANUAL_ASSESSMENT_IDENTIFIER}_file:${this.fileName}_line:${this.codeLine}`;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTk3Nw=="}, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTI1NjE5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/shared/code-editor/ace/code-editor-ace.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjoxOTo0MFrOHZqVcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjozMDo0OVrOHZqwBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3MDA2Ng==", "bodyText": "is the + in +feedback.reference!.split('line:')[1]; a typo?", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r496670066", "createdAt": "2020-09-29T12:19:40Z", "author": {"login": "derLalla"}, "path": "src/main/webapp/app/exercises/programming/shared/code-editor/ace/code-editor-ace.component.ts", "diffHunk": "@@ -129,6 +161,22 @@ export class CodeEditorAceComponent implements AfterViewInit, OnChanges, OnDestr\n             // Reset the undo stack after file change, otherwise the user can undo back to the old file\n             this.editor.getEditor().getSession().setUndoManager(new ace.UndoManager());\n             this.displayAnnotations();\n+\n+            // Setup inline feedbacks\n+            // Get amount of lines of code in order to render for each line a corresponding inline feedback component\n+            if (this.isTutorAssessment) {\n+                const lines = this.editor.getEditor().getSession().getLength();\n+                this.lineCounter = new Array(lines);\n+                if (!this.feedbacks) {\n+                    this.feedbacks = [];\n+                }\n+                this.fileFeedbacks = this.feedbacks.filter((feedback) => feedback.reference && feedback.reference.includes(this.selectedFile));\n+                this.fileFeedbackPerLine = {};\n+                this.fileFeedbacks.forEach((feedback) => {\n+                    const line: number = +feedback.reference!.split('line:')[1];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3Njg2OQ==", "bodyText": "Nope it is not, with that you transform a string to a number :)", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r496676869", "createdAt": "2020-09-29T12:30:49Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/programming/shared/code-editor/ace/code-editor-ace.component.ts", "diffHunk": "@@ -129,6 +161,22 @@ export class CodeEditorAceComponent implements AfterViewInit, OnChanges, OnDestr\n             // Reset the undo stack after file change, otherwise the user can undo back to the old file\n             this.editor.getEditor().getSession().setUndoManager(new ace.UndoManager());\n             this.displayAnnotations();\n+\n+            // Setup inline feedbacks\n+            // Get amount of lines of code in order to render for each line a corresponding inline feedback component\n+            if (this.isTutorAssessment) {\n+                const lines = this.editor.getEditor().getSession().getLength();\n+                this.lineCounter = new Array(lines);\n+                if (!this.feedbacks) {\n+                    this.feedbacks = [];\n+                }\n+                this.fileFeedbacks = this.feedbacks.filter((feedback) => feedback.reference && feedback.reference.includes(this.selectedFile));\n+                this.fileFeedbackPerLine = {};\n+                this.fileFeedbacks.forEach((feedback) => {\n+                    const line: number = +feedback.reference!.split('line:')[1];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3MDA2Ng=="}, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTI3Njk0OnYy", "diffSide": "RIGHT", "path": "src/test/javascript/spec/component/programming-assessment/programming-assessment-inline-feedback.component.spec.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjoyNDo1OFrOHZqh9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjozMzoyOVrOHZq2aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3MzI3MQ==", "bodyText": "debugElement should be removed as stated from GitHub Actions", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r496673271", "createdAt": "2020-09-29T12:24:58Z", "author": {"login": "derLalla"}, "path": "src/test/javascript/spec/component/programming-assessment/programming-assessment-inline-feedback.component.spec.ts", "diffHunk": "@@ -0,0 +1,75 @@\n+import { ComponentFixture, TestBed } from '@angular/core/testing';\n+import { TranslateModule } from '@ngx-translate/core';\n+import { DebugElement } from '@angular/core';\n+import * as chai from 'chai';\n+import * as sinonChai from 'sinon-chai';\n+import { ArtemisTestModule } from '../../test.module';\n+import { spy } from 'sinon';\n+\n+import { CodeEditorTutorAssessmentInlineFeedbackComponent } from 'app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component';\n+import { ArtemisProgrammingManualAssessmentModule } from 'app/exercises/programming/assess/programming-manual-assessment.module';\n+import { MANUAL_ASSESSMENT_IDENTIFIER } from 'app/entities/feedback.model';\n+\n+chai.use(sinonChai);\n+const expect = chai.expect;\n+\n+describe('CodeEditorTutorAssessmentInlineFeedbackComponent', () => {\n+    let comp: CodeEditorTutorAssessmentInlineFeedbackComponent;\n+    let fixture: ComponentFixture<CodeEditorTutorAssessmentInlineFeedbackComponent>;\n+    let debugElement: DebugElement;\n+    const fileName = 'testFile';\n+    const codeLine = 1;\n+\n+    beforeEach(async () => {\n+        return TestBed.configureTestingModule({\n+            imports: [TranslateModule.forRoot(), ArtemisProgrammingManualAssessmentModule],\n+        })\n+            .overrideModule(ArtemisTestModule, { set: { declarations: [], exports: [] } })\n+            .compileComponents()\n+            .then(() => {\n+                // Ignore console errors\n+                console.error = () => {\n+                    return false;\n+                };\n+                fixture = TestBed.createComponent(CodeEditorTutorAssessmentInlineFeedbackComponent);\n+                comp = fixture.componentInstance;\n+                debugElement = fixture.debugElement;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3ODUwNA==", "bodyText": "done :)", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r496678504", "createdAt": "2020-09-29T12:33:29Z", "author": {"login": "fde312"}, "path": "src/test/javascript/spec/component/programming-assessment/programming-assessment-inline-feedback.component.spec.ts", "diffHunk": "@@ -0,0 +1,75 @@\n+import { ComponentFixture, TestBed } from '@angular/core/testing';\n+import { TranslateModule } from '@ngx-translate/core';\n+import { DebugElement } from '@angular/core';\n+import * as chai from 'chai';\n+import * as sinonChai from 'sinon-chai';\n+import { ArtemisTestModule } from '../../test.module';\n+import { spy } from 'sinon';\n+\n+import { CodeEditorTutorAssessmentInlineFeedbackComponent } from 'app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component';\n+import { ArtemisProgrammingManualAssessmentModule } from 'app/exercises/programming/assess/programming-manual-assessment.module';\n+import { MANUAL_ASSESSMENT_IDENTIFIER } from 'app/entities/feedback.model';\n+\n+chai.use(sinonChai);\n+const expect = chai.expect;\n+\n+describe('CodeEditorTutorAssessmentInlineFeedbackComponent', () => {\n+    let comp: CodeEditorTutorAssessmentInlineFeedbackComponent;\n+    let fixture: ComponentFixture<CodeEditorTutorAssessmentInlineFeedbackComponent>;\n+    let debugElement: DebugElement;\n+    const fileName = 'testFile';\n+    const codeLine = 1;\n+\n+    beforeEach(async () => {\n+        return TestBed.configureTestingModule({\n+            imports: [TranslateModule.forRoot(), ArtemisProgrammingManualAssessmentModule],\n+        })\n+            .overrideModule(ArtemisTestModule, { set: { declarations: [], exports: [] } })\n+            .compileComponents()\n+            .then(() => {\n+                // Ignore console errors\n+                console.error = () => {\n+                    return false;\n+                };\n+                fixture = TestBed.createComponent(CodeEditorTutorAssessmentInlineFeedbackComponent);\n+                comp = fixture.componentInstance;\n+                debugElement = fixture.debugElement;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3MzI3MQ=="}, "originalCommit": {"oid": "1314ad66e97c2c4ccf48f893e38bf84c0f6feb93"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTM0OTA1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/shared/code-editor/ace/code-editor-ace.scss", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjo0MjozNlrOHZrOMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjo0MjozNlrOHZrOMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY4NDU5NQ==", "bodyText": "Codacy found an issue: Unexpected unknown type selector \"fa-icon\" (selector-type-no-unknown)", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r496684595", "createdAt": "2020-09-29T12:42:36Z", "author": {"login": "artemis-bot"}, "path": "src/main/webapp/app/exercises/programming/shared/code-editor/ace/code-editor-ace.scss", "diffHunk": "@@ -12,6 +12,38 @@ Ace Editor\n         &__editor {\n             flex: 1 1 auto;\n         }\n+\n+        .inline-feedback-d-none {\n+            display: none;\n+        }\n+\n+        .inline-feedback {\n+            display: block;\n+        }\n+\n+        .btn-inline-comment {\n+            display: none;\n+            color: #3e8acc; // btn-primary color\n+            height: 16px;\n+        }\n+\n+        .ace_gutter-cell {\n+            position: relative;\n+        }\n+\n+        .ace_gutter-cell:hover .btn-inline-comment {\n+            display: inline-flex;\n+            position: absolute;\n+            top: 8px; // standard gutter height is 16px\n+            left: 25%;\n+            transform: translate(-50%, -50%);\n+\n+            fa-icon:hover {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "410dffc3c88c96f1eee1733c48c114af55cf01a9"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMDI4NDM3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTo0NToyMlrOHZ0Qpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTo0NToyMlrOHZ0Qpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgzMjY3OQ==", "bodyText": "So apparently this does work, but @Input on the setter might make more sense?", "url": "https://github.com/ls1intum/Artemis/pull/2099#discussion_r496832679", "createdAt": "2020-09-29T15:45:22Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts", "diffHunk": "@@ -0,0 +1,83 @@\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+import { Feedback, FeedbackType } from 'app/entities/feedback.model';\n+import { cloneDeep } from 'lodash';\n+import { TranslateService } from '@ngx-translate/core';\n+\n+@Component({\n+    selector: 'jhi-code-editor-tutor-assessment-inline-feedback',\n+    templateUrl: './code-editor-tutor-assessment-inline-feedback.component.html',\n+})\n+export class CodeEditorTutorAssessmentInlineFeedbackComponent {\n+    MANUAL = FeedbackType.MANUAL;\n+    @Input()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "410dffc3c88c96f1eee1733c48c114af55cf01a9"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4684, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}