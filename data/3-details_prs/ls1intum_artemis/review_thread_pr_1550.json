{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NDUzOTA4", "number": 1550, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTo0MjoyOFrOEBzXUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTo0MjoyOFrOEBzXUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzI1NTg3OnYy", "diffSide": "RIGHT", "path": "src/test/javascript/spec/pipe/artemis-date.pipe.spec.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTo0MjoyOFrOGd3uqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTo0MjoyOFrOGd3uqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk3NDk1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        it('Should return format equal to \"Apr 14, 2020 09:27 AM\" with format parameter set to \"long\"', () => {\n          \n          \n            \n                        it('Should return format equal to \"Apr 14, 2020 09:27\" with format parameter set to \"long\"', () => {\n          \n      \n    \n    \n  \n\nshould fit the actual value", "url": "https://github.com/ls1intum/Artemis/pull/1550#discussion_r433974952", "createdAt": "2020-06-02T15:42:28Z", "author": {"login": "filip-gregurevic"}, "path": "src/test/javascript/spec/pipe/artemis-date.pipe.spec.ts", "diffHunk": "@@ -30,35 +30,47 @@ describe('ArtemisDatePipe', () => {\n         pipe = new ArtemisDatePipe(translateService);\n     });\n \n+    it('Return empty string if given date time is null', () => {\n+        let localizedDateTime = pipe.transform(null);\n+        expect(localizedDateTime).to.be.equal('');\n+        localizedDateTime = pipe.transform(moment(null));\n+        expect(localizedDateTime).to.be.equal('');\n+    });\n+\n+    it('Return empty string if given date time is invalid moment object', () => {\n+        const localizedDateTime = pipe.transform(moment('2019-02-333'));\n+        expect(localizedDateTime).to.be.equal('');\n+    });\n+\n     describe('en locale', () => {\n         beforeEach(() => {\n             dateTime.locale('en');\n             translateService.currentLang = 'en';\n         });\n \n         describe('without seconds', () => {\n-            it('Should return format equal to \"14/4/20 9:27\" with format parameter set to \"short\"', () => {\n+            it('Should return format equal to \"2020-04-14 09:27\" with format parameter set to \"short\"', () => {\n                 const localizedDateTime = pipe.transform(dateTime, 'short');\n-                const format = 'D/M/YY H:m';\n+                const format = 'YYYY-MM-DD HH:mm';\n                 expect(ArtemisDatePipe.format('en', 'short')).to.be.equal(format);\n                 expect(localizedDateTime).to.be.equal(dateTime.format(format));\n-                expect(localizedDateTime).to.be.equal('14/4/20 9:27');\n+                expect(localizedDateTime).to.be.equal('2020-04-14 09:27');\n             });\n \n-            it('Should return format equal to \"Apr 14, 2020 9:27 AM\" with format parameter set to \"long\"', () => {\n+            it('Should return format equal to \"Apr 14, 2020 09:27 AM\" with format parameter set to \"long\"', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fee00b5130186e908edeb336843db38dd5fe017"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 11, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}