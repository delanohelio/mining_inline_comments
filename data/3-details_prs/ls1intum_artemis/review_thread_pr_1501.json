{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMDUzODE1", "number": 1501, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNzowNzo1NVrOD-fz5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNzo0MjoxNVrOD_LcGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODU5NDkzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/shared/pipes/sort-by.pipe.ts", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNzowNzo1NVrOGYoiEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxOTo0MjowMFrOGZATOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4MzA4OQ==", "bodyText": "I think this will break some other sorting. Can we make this method generic and passt object: any here? Then, we could distinguish between different types. I am pretty sure that duration is also displayed somewhere else.", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r428483089", "createdAt": "2020-05-21T07:07:55Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/shared/pipes/sort-by.pipe.ts", "diffHunk": "@@ -65,11 +66,10 @@ export class SortByPipe implements PipeTransform {\n     }\n \n     /**\n-     * Gets the duration of the exercise in minutes.\n+     * Gets the duration of the submission in minutes.\n      * @param exercise The exercise object.\n      */\n-    durationForExercise(exercise: any) {\n-        // TODO: How does this work? An exercise does not have a completion date.\n-        return this.momentDiff.transform(exercise.completionDate, exercise.participations[0].initializationDate, 'minutes');\n+    durationForSubmission(submission: Submission) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57eca1e2637801c84c686c4e7c23c2ca43c8c483"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2MjE2OQ==", "bodyText": "https://angular.io/guide/pipes#appendix-no-filterpipe-or-orderbypipe\nI think we should think about removing this sortBy pipe anyway. Angular strictly says that it is a huge performance cost. It is also overused in the code everywhere with multiple types of objects where it was originally only for quiz exercises", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r428862169", "createdAt": "2020-05-21T19:21:25Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/shared/pipes/sort-by.pipe.ts", "diffHunk": "@@ -65,11 +66,10 @@ export class SortByPipe implements PipeTransform {\n     }\n \n     /**\n-     * Gets the duration of the exercise in minutes.\n+     * Gets the duration of the submission in minutes.\n      * @param exercise The exercise object.\n      */\n-    durationForExercise(exercise: any) {\n-        // TODO: How does this work? An exercise does not have a completion date.\n-        return this.momentDiff.transform(exercise.completionDate, exercise.participations[0].initializationDate, 'minutes');\n+    durationForSubmission(submission: Submission) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4MzA4OQ=="}, "originalCommit": {"oid": "57eca1e2637801c84c686c4e7c23c2ca43c8c483"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2MzQ0OQ==", "bodyText": "The Angular team and many experienced Angular developers strongly recommend moving filtering and sorting logic into the component itself. The component can expose a filteredHeroes or sortedHeroes property and take control over when and how often to execute the supporting logic. Any capabilities that you would have put in a pipe and shared across the app can be written in a filtering/sorting service and injected into the component.", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r428863449", "createdAt": "2020-05-21T19:24:05Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/shared/pipes/sort-by.pipe.ts", "diffHunk": "@@ -65,11 +66,10 @@ export class SortByPipe implements PipeTransform {\n     }\n \n     /**\n-     * Gets the duration of the exercise in minutes.\n+     * Gets the duration of the submission in minutes.\n      * @param exercise The exercise object.\n      */\n-    durationForExercise(exercise: any) {\n-        // TODO: How does this work? An exercise does not have a completion date.\n-        return this.momentDiff.transform(exercise.completionDate, exercise.participations[0].initializationDate, 'minutes');\n+    durationForSubmission(submission: Submission) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4MzA4OQ=="}, "originalCommit": {"oid": "57eca1e2637801c84c686c4e7c23c2ca43c8c483"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg3MjUwNA==", "bodyText": "But maybe this should be done in a seperate ticket", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r428872504", "createdAt": "2020-05-21T19:42:00Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/shared/pipes/sort-by.pipe.ts", "diffHunk": "@@ -65,11 +66,10 @@ export class SortByPipe implements PipeTransform {\n     }\n \n     /**\n-     * Gets the duration of the exercise in minutes.\n+     * Gets the duration of the submission in minutes.\n      * @param exercise The exercise object.\n      */\n-    durationForExercise(exercise: any) {\n-        // TODO: How does this work? An exercise does not have a completion date.\n-        return this.momentDiff.transform(exercise.completionDate, exercise.participations[0].initializationDate, 'minutes');\n+    durationForSubmission(submission: Submission) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4MzA4OQ=="}, "originalCommit": {"oid": "57eca1e2637801c84c686c4e7c23c2ca43c8c483"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTczOTk3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/entities/quiz/quiz-exercise.model.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNzozNjo0NlrOGZtOog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMDowMDo0MVrOGZw-ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODYxMA==", "bodyText": "please don't add arbitrary elements here. At least document the meaning!", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429608610", "createdAt": "2020-05-24T07:36:46Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/entities/quiz/quiz-exercise.model.ts", "diffHunk": "@@ -23,6 +23,7 @@ export class QuizExercise extends Exercise {\n     public adjustedReleaseDate: Moment;\n     public ended: boolean;\n     public started: boolean;\n+    public statusAsNumber: number;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1MDcyOA==", "bodyText": "I changed quizStatus to an Enum. The ordering can now simply be determined via the associated number for each number field.", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429650728", "createdAt": "2020-05-24T15:59:54Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/entities/quiz/quiz-exercise.model.ts", "diffHunk": "@@ -23,6 +23,7 @@ export class QuizExercise extends Exercise {\n     public adjustedReleaseDate: Moment;\n     public ended: boolean;\n     public started: boolean;\n+    public statusAsNumber: number;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODYxMA=="}, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3MDA1MQ==", "bodyText": "addressed via ea8ea78", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429670051", "createdAt": "2020-05-24T20:00:41Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/entities/quiz/quiz-exercise.model.ts", "diffHunk": "@@ -23,6 +23,7 @@ export class QuizExercise extends Exercise {\n     public adjustedReleaseDate: Moment;\n     public ended: boolean;\n     public started: boolean;\n+    public statusAsNumber: number;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODYxMA=="}, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTc0MDc0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment-dashboard.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNzozNzo1NlrOGZtPAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMDowMDoyMFrOGZw-gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODcwNQ==", "bodyText": "Does it make sense to compute this each time someone clicks on sort? I would rather suggest to compute this after the data was loaded from the server", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429608705", "createdAt": "2020-05-24T07:37:56Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment-dashboard.component.ts", "diffHunk": "@@ -150,4 +152,19 @@ export class FileUploadAssessmentDashboardComponent implements OnInit {\n     public durationString(completionDate: Date, initializationDate: Date) {\n         return this.momentDiff.transform(completionDate, initializationDate, 'minutes');\n     }\n+\n+    public sortRows() {\n+        if (this.predicate === 'durationInMinutes') {\n+            this.submissions.forEach((submission) => (submission.durationInMinutes = this.durationForSubmission(submission)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NDYxMg==", "bodyText": "I moved the calculations in the associated service", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429654612", "createdAt": "2020-05-24T16:47:36Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment-dashboard.component.ts", "diffHunk": "@@ -150,4 +152,19 @@ export class FileUploadAssessmentDashboardComponent implements OnInit {\n     public durationString(completionDate: Date, initializationDate: Date) {\n         return this.momentDiff.transform(completionDate, initializationDate, 'minutes');\n     }\n+\n+    public sortRows() {\n+        if (this.predicate === 'durationInMinutes') {\n+            this.submissions.forEach((submission) => (submission.durationInMinutes = this.durationForSubmission(submission)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODcwNQ=="}, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3MDAxOA==", "bodyText": "Addressed via: 55d5b75", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429670018", "createdAt": "2020-05-24T20:00:20Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment-dashboard.component.ts", "diffHunk": "@@ -150,4 +152,19 @@ export class FileUploadAssessmentDashboardComponent implements OnInit {\n     public durationString(completionDate: Date, initializationDate: Date) {\n         return this.momentDiff.transform(completionDate, initializationDate, 'minutes');\n     }\n+\n+    public sortRows() {\n+        if (this.predicate === 'durationInMinutes') {\n+            this.submissions.forEach((submission) => (submission.durationInMinutes = this.durationForSubmission(submission)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODcwNQ=="}, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTc0MTEyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-dashboard.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNzozODo1MlrOGZtPPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMDowMTowOFrOGZw-6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODc2Nw==", "bodyText": "Same comment as for file upload exercises", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429608767", "createdAt": "2020-05-24T07:38:52Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-dashboard.component.ts", "diffHunk": "@@ -261,5 +263,18 @@ export class ModelingAssessmentDashboardComponent implements OnInit, OnDestroy {\n         this.eventManager.destroy(this.eventSubscriber);\n     }\n \n-    callback() {}\n+    public sortRows() {\n+        if (this.predicate === 'durationInMinutes') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3MDEyMw==", "bodyText": "Addressed via: 55d5b75", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429670123", "createdAt": "2020-05-24T20:01:08Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-dashboard.component.ts", "diffHunk": "@@ -261,5 +263,18 @@ export class ModelingAssessmentDashboardComponent implements OnInit, OnDestroy {\n         this.eventManager.destroy(this.eventSubscriber);\n     }\n \n-    callback() {}\n+    public sortRows() {\n+        if (this.predicate === 'durationInMinutes') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODc2Nw=="}, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTc0MTQyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/quiz/manage/quiz-exercise.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNzozOToyOFrOGZtPbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMDowMzowM1rOGZw_bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODgxMw==", "bodyText": "what is 'a' here?", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429608813", "createdAt": "2020-05-24T07:39:28Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/quiz/manage/quiz-exercise.component.ts", "diffHunk": "@@ -225,8 +227,29 @@ export class QuizExerciseComponent extends ExerciseComponent {\n         );\n     }\n \n+    public sortRows() {\n+        if (this.predicate === 'statusAsNumber') {\n+            this.quizExercises.forEach((a) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3MDI1Mw==", "bodyText": "addressed via addressed via ea8ea78", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429670253", "createdAt": "2020-05-24T20:03:03Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/quiz/manage/quiz-exercise.component.ts", "diffHunk": "@@ -225,8 +227,29 @@ export class QuizExerciseComponent extends ExerciseComponent {\n         );\n     }\n \n+    public sortRows() {\n+        if (this.predicate === 'statusAsNumber') {\n+            this.quizExercises.forEach((a) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODgxMw=="}, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTc0MTU3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/quiz/manage/quiz-exercise.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNzozOTo0MFrOGZtPgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMDowMzoxN1rOGZw_fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODgzMg==", "bodyText": "why do you use type 'any'?", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429608832", "createdAt": "2020-05-24T07:39:40Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/quiz/manage/quiz-exercise.component.ts", "diffHunk": "@@ -225,8 +227,29 @@ export class QuizExerciseComponent extends ExerciseComponent {\n         );\n     }\n \n+    public sortRows() {\n+        if (this.predicate === 'statusAsNumber') {\n+            this.quizExercises.forEach((a) => {\n+                a.statusAsNumber = this.statusForQuiz(a);\n+            });\n+        }\n+\n+        this.sortService.sortByProperty(this.quizExercises, this.predicate, this.reverse);\n+    }\n+\n     /**\n-     * Do nothing\n+     * Returns the status of the quiz represented as numbers, whether the quiz is\n+     * open for practice or is it visible before it starts.\n+     * @param quizExercise The quizExercise object.\n      */\n-    callback() {}\n+    private statusForQuiz(quizExercise: any) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3MDI2OQ==", "bodyText": "addressed via ea8ea78", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429670269", "createdAt": "2020-05-24T20:03:17Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/quiz/manage/quiz-exercise.component.ts", "diffHunk": "@@ -225,8 +227,29 @@ export class QuizExerciseComponent extends ExerciseComponent {\n         );\n     }\n \n+    public sortRows() {\n+        if (this.predicate === 'statusAsNumber') {\n+            this.quizExercises.forEach((a) => {\n+                a.statusAsNumber = this.statusForQuiz(a);\n+            });\n+        }\n+\n+        this.sortService.sortByProperty(this.quizExercises, this.predicate, this.reverse);\n+    }\n+\n     /**\n-     * Do nothing\n+     * Returns the status of the quiz represented as numbers, whether the quiz is\n+     * open for practice or is it visible before it starts.\n+     * @param quizExercise The quizExercise object.\n      */\n-    callback() {}\n+    private statusForQuiz(quizExercise: any) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODgzMg=="}, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTc0MjY5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/quiz/manage/quiz-exercise.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNzo0MTozNlrOGZtQGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMDowMzozMlrOGZw_jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODk4Nw==", "bodyText": "The numbers seem a bit arbitrary here. Not sure if storing them in the quiz exercise object really makes sense.\nWould it make sense to define a custom sort method instead?", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429608987", "createdAt": "2020-05-24T07:41:36Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/quiz/manage/quiz-exercise.component.ts", "diffHunk": "@@ -225,8 +227,29 @@ export class QuizExerciseComponent extends ExerciseComponent {\n         );\n     }\n \n+    public sortRows() {\n+        if (this.predicate === 'statusAsNumber') {\n+            this.quizExercises.forEach((a) => {\n+                a.statusAsNumber = this.statusForQuiz(a);\n+            });\n+        }\n+\n+        this.sortService.sortByProperty(this.quizExercises, this.predicate, this.reverse);\n+    }\n+\n     /**\n-     * Do nothing\n+     * Returns the status of the quiz represented as numbers, whether the quiz is\n+     * open for practice or is it visible before it starts.\n+     * @param quizExercise The quizExercise object.\n      */\n-    callback() {}\n+    private statusForQuiz(quizExercise: any) {\n+        if (quizExercise.isPlannedToStart && quizExercise.remainingTime != null) {\n+            if (quizExercise.remainingTime <= 0) {\n+                return quizExercise.isOpenForPractice ? 1 : 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3MDI4NQ==", "bodyText": "addressed via ea8ea78", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429670285", "createdAt": "2020-05-24T20:03:32Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/quiz/manage/quiz-exercise.component.ts", "diffHunk": "@@ -225,8 +227,29 @@ export class QuizExerciseComponent extends ExerciseComponent {\n         );\n     }\n \n+    public sortRows() {\n+        if (this.predicate === 'statusAsNumber') {\n+            this.quizExercises.forEach((a) => {\n+                a.statusAsNumber = this.statusForQuiz(a);\n+            });\n+        }\n+\n+        this.sortService.sortByProperty(this.quizExercises, this.predicate, this.reverse);\n+    }\n+\n     /**\n-     * Do nothing\n+     * Returns the status of the quiz represented as numbers, whether the quiz is\n+     * open for practice or is it visible before it starts.\n+     * @param quizExercise The quizExercise object.\n      */\n-    callback() {}\n+    private statusForQuiz(quizExercise: any) {\n+        if (quizExercise.isPlannedToStart && quizExercise.remainingTime != null) {\n+            if (quizExercise.remainingTime <= 0) {\n+                return quizExercise.isOpenForPractice ? 1 : 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwODk4Nw=="}, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTc0Mjc4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess/text-assessment-dashboard/text-assessment-dashboard.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNzo0MTo1MlrOGZtQLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMDowNDoxNFrOGZw_tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwOTAwNA==", "bodyText": "same comment as for file upload exercises", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429609004", "createdAt": "2020-05-24T07:41:52Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/text/assess/text-assessment-dashboard/text-assessment-dashboard.component.ts", "diffHunk": "@@ -58,6 +60,13 @@ export class TextAssessmentDashboardComponent implements OnInit {\n             });\n     }\n \n+    public sortRows() {\n+        if (this.predicate === 'durationInMinutes') {\n+            this.submissions.forEach((submission) => (submission.durationInMinutes = this.durationForSubmission(submission)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3MDMyNw==", "bodyText": "Addressed via: 55d5b75", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429670327", "createdAt": "2020-05-24T20:04:14Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/text/assess/text-assessment-dashboard/text-assessment-dashboard.component.ts", "diffHunk": "@@ -58,6 +60,13 @@ export class TextAssessmentDashboardComponent implements OnInit {\n             });\n     }\n \n+    public sortRows() {\n+        if (this.predicate === 'durationInMinutes') {\n+            this.submissions.forEach((submission) => (submission.durationInMinutes = this.durationForSubmission(submission)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwOTAwNA=="}, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTc0Mjk4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess/text-assessment-dashboard/text-assessment-dashboard.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNzo0MjoxNVrOGZtQRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQyMDowNDoyOFrOGZw_xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwOTAyOA==", "bodyText": "what happens if the submission date is null/undefined?", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429609028", "createdAt": "2020-05-24T07:42:15Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/text/assess/text-assessment-dashboard/text-assessment-dashboard.component.ts", "diffHunk": "@@ -119,4 +128,12 @@ export class TextAssessmentDashboardComponent implements OnInit {\n             });\n         }\n     }\n+\n+    /**\n+     * Gets the duration of the submission in minutes.\n+     * @param exercise The exercise object.\n+     */\n+    durationForSubmission(submission: Submission) {\n+        return this.momentDiff.transform(submission.submissionDate!, submission.participation.initializationDate!, 'minutes');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3MDM0MQ==", "bodyText": "Addressed via: 55d5b75", "url": "https://github.com/ls1intum/Artemis/pull/1501#discussion_r429670341", "createdAt": "2020-05-24T20:04:28Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/text/assess/text-assessment-dashboard/text-assessment-dashboard.component.ts", "diffHunk": "@@ -119,4 +128,12 @@ export class TextAssessmentDashboardComponent implements OnInit {\n             });\n         }\n     }\n+\n+    /**\n+     * Gets the duration of the submission in minutes.\n+     * @param exercise The exercise object.\n+     */\n+    durationForSubmission(submission: Submission) {\n+        return this.momentDiff.transform(submission.submissionDate!, submission.participation.initializationDate!, 'minutes');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYwOTAyOA=="}, "originalCommit": {"oid": "fd82c08bd307edc289a278f86f12722323fc632f"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4996, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}