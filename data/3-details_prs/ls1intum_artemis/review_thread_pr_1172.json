{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NzM2OTIx", "number": 1172, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjowODo0NVrODXSHPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTozNDoxMlrODbMAyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzQwNjA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjowODo0NVrOFchS1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjoyNDoxOFrOFchkuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ0OTk0MQ==", "bodyText": "can we add an additional check for now, that this can only happen in tutorial exercises for normal users and TAs?\nI think we store them in the yml file anyway, so we should be able to write a util function that checks this.\nI imagine some logic like:\n\nIf isAtLeastInstructor(...) { //do normal delete }\nelse if isTA or isStudent(...) { // check if the partcipation belongs to a tutorial exercise }\n\nAnother (maybe cleaner) alternative would be to introduce a new API endpoint for the case of deleting participations for tutorial exercises.", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r365449941", "createdAt": "2020-01-10T22:08:45Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -586,7 +586,15 @@ else if (participation.getExercise() instanceof ProgrammingExercise) {\n         }\n \n         User user = userService.getUserWithGroupsAndAuthorities();\n-        checkAccessPermissionAtInstructor(participation, user);\n+\n+        // Allow USER's and TA's to delete their own StudentParticipations\n+        if (user.getId().equals(participation.getStudent().getId())) {\n+            checkAccessPermissionAtLeastStudent(participation, user);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4d83bbe5987f47e35256744d3482e75b41a8c1f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NDUyMw==", "bodyText": "At first I have implemented a new API endpoint for deleting participations for tutorial exercises, but then I remembered that you once mentioned that it should be possible for tutors and student to delete their own participation in the future. As suggested by you, I will add another check logic here :)", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r365454523", "createdAt": "2020-01-10T22:24:18Z", "author": {"login": "lovaiible"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -586,7 +586,15 @@ else if (participation.getExercise() instanceof ProgrammingExercise) {\n         }\n \n         User user = userService.getUserWithGroupsAndAuthorities();\n-        checkAccessPermissionAtInstructor(participation, user);\n+\n+        // Allow USER's and TA's to delete their own StudentParticipations\n+        if (user.getId().equals(participation.getStudent().getId())) {\n+            checkAccessPermissionAtLeastStudent(participation, user);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ0OTk0MQ=="}, "originalCommit": {"oid": "b4d83bbe5987f47e35256744d3482e75b41a8c1f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzQwOTA4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/modeling-editor/modeling-editor.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjoxMDoyMVrOFchUtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjoyNDozOVrOFchlFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1MDQyMA==", "bodyText": "do we need this comment or can we get rid of it?", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r365450420", "createdAt": "2020-01-10T22:10:21Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/modeling-editor/modeling-editor.component.ts", "diffHunk": "@@ -165,6 +140,7 @@ export class ModelingEditorComponent implements AfterViewInit, OnDestroy, OnChan\n             // Check if the Person class is correct\n             case personUML.name: {\n                 const nameAttribute = this.elementWithAttribute(personUML.attribute, umlModel);\n+                // const emptyMethod = this.elementWithMethod('', umlModel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4d83bbe5987f47e35256744d3482e75b41a8c1f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NDYxMg==", "bodyText": "Yes, I will delete it.", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r365454612", "createdAt": "2020-01-10T22:24:39Z", "author": {"login": "lovaiible"}, "path": "src/main/webapp/app/modeling-editor/modeling-editor.component.ts", "diffHunk": "@@ -165,6 +140,7 @@ export class ModelingEditorComponent implements AfterViewInit, OnDestroy, OnChan\n             // Check if the Person class is correct\n             case personUML.name: {\n                 const nameAttribute = this.elementWithAttribute(personUML.attribute, umlModel);\n+                // const emptyMethod = this.elementWithMethod('', umlModel);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1MDQyMA=="}, "originalCommit": {"oid": "b4d83bbe5987f47e35256744d3482e75b41a8c1f"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzQxMDgyOnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/GuidedTourSettingResourceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjoxMToxN1rOFchV1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMjoyNDo1NVrOFchlVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1MDcxMA==", "bodyText": "why do you call this mock settings? isn't this just simple test data?", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r365450710", "createdAt": "2020-01-10T22:11:17Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/GuidedTourSettingResourceTest.java", "diffHunk": "@@ -39,17 +39,7 @@ public void tearDown() {\n         database.resetDatabase();\n     }\n \n-    @Test\n-    @WithMockUser(value = \"student1\")\n-    public void guidedTourSettingsIsInitiallyNull() throws Exception {\n-        User user = request.get(\"/api/account\", HttpStatus.OK, User.class);\n-        assertThat(user.getGuidedTourSettings().isEmpty()).isTrue();\n-    }\n-\n-    @Test\n-    @WithMockUser(value = \"student1\")\n-    @SuppressWarnings(\"unchecked\")\n-    public void updateGuidedTourSettings() throws Exception {\n+    public Set<GuidedTourSetting> createMockSettings() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4d83bbe5987f47e35256744d3482e75b41a8c1f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1NDY3Ng==", "bodyText": "Agreed, I will change the naming of the method :)", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r365454676", "createdAt": "2020-01-10T22:24:55Z", "author": {"login": "lovaiible"}, "path": "src/test/java/de/tum/in/www1/artemis/GuidedTourSettingResourceTest.java", "diffHunk": "@@ -39,17 +39,7 @@ public void tearDown() {\n         database.resetDatabase();\n     }\n \n-    @Test\n-    @WithMockUser(value = \"student1\")\n-    public void guidedTourSettingsIsInitiallyNull() throws Exception {\n-        User user = request.get(\"/api/account\", HttpStatus.OK, User.class);\n-        assertThat(user.getGuidedTourSettings().isEmpty()).isTrue();\n-    }\n-\n-    @Test\n-    @WithMockUser(value = \"student1\")\n-    @SuppressWarnings(\"unchecked\")\n-    public void updateGuidedTourSettings() throws Exception {\n+    public Set<GuidedTourSetting> createMockSettings() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ1MDcxMA=="}, "originalCommit": {"oid": "b4d83bbe5987f47e35256744d3482e75b41a8c1f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NzgyMDM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/config/GuidedTourConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNDozNjoxNVrOFfgS6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNDozNjoxNVrOFfgS6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU3OTMwNw==", "bodyText": "Please add some short JavaDoc", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r368579307", "createdAt": "2020-01-20T14:36:15Z", "author": {"login": "ungaralex"}, "path": "src/main/java/de/tum/in/www1/artemis/config/GuidedTourConfiguration.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package de.tum.in.www1.artemis.config;\n+\n+import java.util.*;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import de.tum.in.www1.artemis.domain.Exercise;\n+import de.tum.in.www1.artemis.domain.ProgrammingExercise;\n+\n+@Component\n+@EnableConfigurationProperties\n+@ConfigurationProperties(prefix = \"info.guided-tour\")\n+public class GuidedTourConfiguration {\n+\n+    private final Logger log = LoggerFactory.getLogger(GuidedTourConfiguration.class);\n+\n+    private String courseShortName = \"\";\n+\n+    private List<HashMap<String, String>> tours = new ArrayList<>();\n+\n+    public GuidedTourConfiguration() {\n+\n+    }\n+\n+    public List<HashMap<String, String>> getTours() {\n+        return this.tours;\n+    }\n+\n+    public void setTours(List<HashMap<String, String>> tours) {\n+        this.tours = tours;\n+    }\n+\n+    public String getCourseShortName() {\n+        return courseShortName;\n+    }\n+\n+    public void setCourseShortName(String courseShortName) {\n+        this.courseShortName = courseShortName;\n+    }\n+\n+    public boolean isExerciseForTutorial(Exercise exercise) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0a233519ac76210653221806d4621f32e0ab2b8"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3Nzg2MzgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/config/GuidedTourConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNDo0OToyNFrOFfgtQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNDo0OToyNFrOFfgtQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU4NjA1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * Mapping of tourKey -> tourIdentifier \n          \n          \n            \n                 */", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r368586050", "createdAt": "2020-01-20T14:49:24Z", "author": {"login": "ungaralex"}, "path": "src/main/java/de/tum/in/www1/artemis/config/GuidedTourConfiguration.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package de.tum.in.www1.artemis.config;\n+\n+import java.util.*;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import de.tum.in.www1.artemis.domain.Exercise;\n+import de.tum.in.www1.artemis.domain.ProgrammingExercise;\n+\n+@Component\n+@EnableConfigurationProperties\n+@ConfigurationProperties(prefix = \"info.guided-tour\")\n+public class GuidedTourConfiguration {\n+\n+    private final Logger log = LoggerFactory.getLogger(GuidedTourConfiguration.class);\n+\n+    private String courseShortName = \"\";\n+\n+    private List<HashMap<String, String>> tours = new ArrayList<>();\n+\n+    public GuidedTourConfiguration() {\n+\n+    }\n+\n+    public List<HashMap<String, String>> getTours() {\n+        return this.tours;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0a233519ac76210653221806d4621f32e0ab2b8"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3Nzg3MjU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/config/GuidedTourConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNDo1MTo1N1rOFfgyag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNDo1MTo1N1rOFfgyag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU4NzM3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (HashMap<String, String> guidedTourMapping : this.getTours()) {\n          \n          \n            \n                    return tours.stream()\n          \n          \n            \n                            .flatMap(tour -> tour.values().stream())\n          \n          \n            \n                            .anyMatch(tourIdentifier -> tourIdentifier.equals(exerciseIdentifier));", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r368587370", "createdAt": "2020-01-20T14:51:57Z", "author": {"login": "ungaralex"}, "path": "src/main/java/de/tum/in/www1/artemis/config/GuidedTourConfiguration.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package de.tum.in.www1.artemis.config;\n+\n+import java.util.*;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import de.tum.in.www1.artemis.domain.Exercise;\n+import de.tum.in.www1.artemis.domain.ProgrammingExercise;\n+\n+@Component\n+@EnableConfigurationProperties\n+@ConfigurationProperties(prefix = \"info.guided-tour\")\n+public class GuidedTourConfiguration {\n+\n+    private final Logger log = LoggerFactory.getLogger(GuidedTourConfiguration.class);\n+\n+    private String courseShortName = \"\";\n+\n+    private List<HashMap<String, String>> tours = new ArrayList<>();\n+\n+    public GuidedTourConfiguration() {\n+\n+    }\n+\n+    public List<HashMap<String, String>> getTours() {\n+        return this.tours;\n+    }\n+\n+    public void setTours(List<HashMap<String, String>> tours) {\n+        this.tours = tours;\n+    }\n+\n+    public String getCourseShortName() {\n+        return courseShortName;\n+    }\n+\n+    public void setCourseShortName(String courseShortName) {\n+        this.courseShortName = courseShortName;\n+    }\n+\n+    public boolean isExerciseForTutorial(Exercise exercise) {\n+        String exerciseIdentifier = exercise instanceof ProgrammingExercise ? exercise.getShortName() : exercise.getTitle();\n+\n+        for (HashMap<String, String> guidedTourMapping : this.getTours()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0a233519ac76210653221806d4621f32e0ab2b8"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NzkzMTAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/UserService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNToxMDozNVrOFfhVpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMDowNzoxOFrOFf0d5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5NjM5MA==", "bodyText": "You should implement equals and hashCode in GuidedTourSetting and then delete the setting from the set in the user entity using this.guidedTourSettings.remove(setting). Looping over the set is not best practice.\nOne additional question: Shouldn't we move the guided tour related methods to a GuidedTourService? Not really in the scope of this PR, but if I were to work on guided tours, my initial intuition would be to look for such a service, and not in the UserService. Additionally, this service already has almost 600 LoC.", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r368596390", "createdAt": "2020-01-20T15:10:35Z", "author": {"login": "ungaralex"}, "path": "src/main/java/de/tum/in/www1/artemis/service/UserService.java", "diffHunk": "@@ -551,4 +550,22 @@ public User updateGuidedTourSettings(Set<GuidedTourSetting> guidedTourSettings)\n         }\n         return userRepository.save(loggedInUser);\n     }\n+\n+    /**\n+     * Delete a given guided tour setting of the currently logged in user\n+     * @param guidedTourSettingsKey the key of the guided tour setting that should be deleted\n+     * @return the updated user object without the deleted guided tour setting\n+     */\n+    public User deleteGuidedTourSetting(String guidedTourSettingsKey) {\n+        User loggedInUser = getUserWithGroupsAuthoritiesAndGuidedTourSettings();\n+        Set<GuidedTourSetting> guidedTourSettings = loggedInUser.getGuidedTourSettings();\n+        for (GuidedTourSetting setting : guidedTourSettings) {\n+            if (setting.getGuidedTourKey().equals(guidedTourSettingsKey)) {\n+                loggedInUser.removeGuidedTourSetting(setting);\n+                guidedTourSettingsRepository.save(setting);\n+                break;\n+            }\n+        }\n+        return userRepository.save(loggedInUser);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0a233519ac76210653221806d4621f32e0ab2b8"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwOTc5Ng==", "bodyText": "As discussed, this is not possible because I don't have the guidedTourSetting object but only the key as string :(", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r368909796", "createdAt": "2020-01-21T10:07:18Z", "author": {"login": "lovaiible"}, "path": "src/main/java/de/tum/in/www1/artemis/service/UserService.java", "diffHunk": "@@ -551,4 +550,22 @@ public User updateGuidedTourSettings(Set<GuidedTourSetting> guidedTourSettings)\n         }\n         return userRepository.save(loggedInUser);\n     }\n+\n+    /**\n+     * Delete a given guided tour setting of the currently logged in user\n+     * @param guidedTourSettingsKey the key of the guided tour setting that should be deleted\n+     * @return the updated user object without the deleted guided tour setting\n+     */\n+    public User deleteGuidedTourSetting(String guidedTourSettingsKey) {\n+        User loggedInUser = getUserWithGroupsAuthoritiesAndGuidedTourSettings();\n+        Set<GuidedTourSetting> guidedTourSettings = loggedInUser.getGuidedTourSettings();\n+        for (GuidedTourSetting setting : guidedTourSettings) {\n+            if (setting.getGuidedTourKey().equals(guidedTourSettingsKey)) {\n+                loggedInUser.removeGuidedTourSetting(setting);\n+                guidedTourSettingsRepository.save(setting);\n+                break;\n+            }\n+        }\n+        return userRepository.save(loggedInUser);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5NjM5MA=="}, "originalCommit": {"oid": "a0a233519ac76210653221806d4621f32e0ab2b8"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3Nzk1MjcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/UserService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNToxNzowOVrOFfhinw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMDowNzo0NlrOFf0e0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5OTcxMQ==", "bodyText": "You don't need this since the save operation on the user repository will already update the bidirectional relation and the orphanRemoval=true setting will remove the GuidedTourSetting on flush.", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r368599711", "createdAt": "2020-01-20T15:17:09Z", "author": {"login": "ungaralex"}, "path": "src/main/java/de/tum/in/www1/artemis/service/UserService.java", "diffHunk": "@@ -551,4 +550,22 @@ public User updateGuidedTourSettings(Set<GuidedTourSetting> guidedTourSettings)\n         }\n         return userRepository.save(loggedInUser);\n     }\n+\n+    /**\n+     * Delete a given guided tour setting of the currently logged in user\n+     * @param guidedTourSettingsKey the key of the guided tour setting that should be deleted\n+     * @return the updated user object without the deleted guided tour setting\n+     */\n+    public User deleteGuidedTourSetting(String guidedTourSettingsKey) {\n+        User loggedInUser = getUserWithGroupsAuthoritiesAndGuidedTourSettings();\n+        Set<GuidedTourSetting> guidedTourSettings = loggedInUser.getGuidedTourSettings();\n+        for (GuidedTourSetting setting : guidedTourSettings) {\n+            if (setting.getGuidedTourKey().equals(guidedTourSettingsKey)) {\n+                loggedInUser.removeGuidedTourSetting(setting);\n+                guidedTourSettingsRepository.save(setting);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0a233519ac76210653221806d4621f32e0ab2b8"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkxMDAzNQ==", "bodyText": "It works without the save operation. Thank you for the suggestion :)", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r368910035", "createdAt": "2020-01-21T10:07:46Z", "author": {"login": "lovaiible"}, "path": "src/main/java/de/tum/in/www1/artemis/service/UserService.java", "diffHunk": "@@ -551,4 +550,22 @@ public User updateGuidedTourSettings(Set<GuidedTourSetting> guidedTourSettings)\n         }\n         return userRepository.save(loggedInUser);\n     }\n+\n+    /**\n+     * Delete a given guided tour setting of the currently logged in user\n+     * @param guidedTourSettingsKey the key of the guided tour setting that should be deleted\n+     * @return the updated user object without the deleted guided tour setting\n+     */\n+    public User deleteGuidedTourSetting(String guidedTourSettingsKey) {\n+        User loggedInUser = getUserWithGroupsAuthoritiesAndGuidedTourSettings();\n+        Set<GuidedTourSetting> guidedTourSettings = loggedInUser.getGuidedTourSettings();\n+        for (GuidedTourSetting setting : guidedTourSettings) {\n+            if (setting.getGuidedTourKey().equals(guidedTourSettingsKey)) {\n+                loggedInUser.removeGuidedTourSetting(setting);\n+                guidedTourSettingsRepository.save(setting);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU5OTcxMQ=="}, "originalCommit": {"oid": "a0a233519ac76210653221806d4621f32e0ab2b8"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3Nzk3NDM5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/guided-tour/guided-tour.service.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNToyMzoxNFrOFfhu7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNToyMzoxNFrOFfhu7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYwMjg2MA==", "bodyText": "You can move this to switchMap operations in the pipe", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r368602860", "createdAt": "2020-01-20T15:23:14Z", "author": {"login": "ungaralex"}, "path": "src/main/webapp/app/guided-tour/guided-tour.service.ts", "diffHunk": "@@ -581,9 +586,33 @@ export class GuidedTourService {\n             }\n             this.setPreparedTourStep();\n             this.calculateTranslateValue(currentStep);\n-            if (this.currentTourStepIndex === 0 && this.currentTour.resetUMLModel) {\n-                this.resetUMLModelSubject.next(true);\n-            }\n+        }\n+    }\n+\n+    /** Resets participation and enables the restart of the current tour */\n+    public restartTour() {\n+        if (!this.availableTourForComponent) {\n+            return;\n+        }\n+        if (this.currentCourse && this.currentExercise) {\n+            const isProgrammingExercise = this.currentExercise.type === ExerciseType.PROGRAMMING;\n+            this.participationService\n+                .findParticipation(this.currentExercise.id)\n+                .pipe(\n+                    map((response: HttpResponse<StudentParticipation>) => response.body!),\n+                    flatMap(participation =>\n+                        this.participationService.delete(participation.id, { deleteBuildPlan: isProgrammingExercise, deleteRepository: isProgrammingExercise }),\n+                    ),\n+                )\n+                .subscribe(() => {\n+                    this.deleteGuidedTourSetting(this.availableTourForComponent!.settingsKey).subscribe(() => {\n+                        this.router.navigateByUrl(`/overview/${this.currentCourse!.id}/exercises`).then(() => {\n+                            location.reload();\n+                        });\n+                    });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0a233519ac76210653221806d4621f32e0ab2b8"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODM0MDkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/GuidedTourSettingsResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTozMDo1N1rOFihuyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTozMDo1N1rOFihuyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc0ODU1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    User currentUser = userService.deleteGuidedTourSetting(settingsKey);\n          \n          \n            \n                    // Note: there is no explicit permission check here, because every user can delete the guided tour settings, e.g. by restarting a tutorial\n          \n          \n            \n                    User currentUser = userService.deleteGuidedTourSetting(settingsKey);", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r371748553", "createdAt": "2020-01-28T11:30:57Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/GuidedTourSettingsResource.java", "diffHunk": "@@ -46,4 +46,17 @@ public GuidedTourSettingsResource(UserService userService) {\n         User currentUser = userService.updateGuidedTourSettings(guidedTourSettings);\n         return new ResponseEntity<>(currentUser.getGuidedTourSettings(), null, HttpStatus.OK);\n     }\n+\n+    /**\n+     * DELETE /guided-tour-settings/:settingsKey : delete guided tour setting of the current user\n+     * @param settingsKey the guided tour settings key that of the setting that should be deleted\n+     * @return the guided tour settings\n+     */\n+    @DeleteMapping(\"/guided-tour-settings/{settingsKey}\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Set<GuidedTourSetting>> deleteGuidedTourSetting(@PathVariable String settingsKey) {\n+        log.debug(\"REST request to delete GuidedTourSetting : {}\", settingsKey);\n+        User currentUser = userService.deleteGuidedTourSetting(settingsKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f9483cfadbd99c8c51884d46e3ec91206cb1274"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODM0Mjg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/UserService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTozMTo0MVrOFihv8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTozMTo0MVrOFihv8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc0ODg0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Delete a given guided tour setting of the currently logged in user\n          \n          \n            \n                 * Delete a given guided tour setting of the currently logged in user (e.g. when the user restarts a guided tutorial)", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r371748848", "createdAt": "2020-01-28T11:31:41Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/UserService.java", "diffHunk": "@@ -641,6 +640,23 @@ public User updateGuidedTourSettings(Set<GuidedTourSetting> guidedTourSettings)\n         return userRepository.save(loggedInUser);\n     }\n \n+    /**\n+     * Delete a given guided tour setting of the currently logged in user", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f9483cfadbd99c8c51884d46e3ec91206cb1274"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODM0NTQyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/config/GuidedTourConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTozMjozNlrOFihxXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTozMjozNlrOFihxXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc0OTIxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private List<HashMap<String, String>> tours = new ArrayList<>();\n          \n          \n            \n                private List<Map<String, String>> tours = new ArrayList<>();", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r371749215", "createdAt": "2020-01-28T11:32:36Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/config/GuidedTourConfiguration.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package de.tum.in.www1.artemis.config;\n+\n+import java.util.*;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import de.tum.in.www1.artemis.domain.Exercise;\n+import de.tum.in.www1.artemis.domain.ProgrammingExercise;\n+\n+@Component\n+@EnableConfigurationProperties\n+@ConfigurationProperties(prefix = \"info.guided-tour\")\n+public class GuidedTourConfiguration {\n+\n+    private String courseShortName = \"\";\n+\n+    private List<HashMap<String, String>> tours = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f9483cfadbd99c8c51884d46e3ec91206cb1274"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODM0NTg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/config/GuidedTourConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTozMjo0NVrOFihxpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTozMjo0NVrOFihxpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc0OTI4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public List<HashMap<String, String>> getTours() {\n          \n          \n            \n                public List<Map<String, String>> getTours() {", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r371749287", "createdAt": "2020-01-28T11:32:45Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/config/GuidedTourConfiguration.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package de.tum.in.www1.artemis.config;\n+\n+import java.util.*;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import de.tum.in.www1.artemis.domain.Exercise;\n+import de.tum.in.www1.artemis.domain.ProgrammingExercise;\n+\n+@Component\n+@EnableConfigurationProperties\n+@ConfigurationProperties(prefix = \"info.guided-tour\")\n+public class GuidedTourConfiguration {\n+\n+    private String courseShortName = \"\";\n+\n+    private List<HashMap<String, String>> tours = new ArrayList<>();\n+\n+    public GuidedTourConfiguration() {\n+\n+    }\n+\n+    /**\n+     * Get the list of of the mapping tourKey -> exerciseIdentifier from the info.guided-tour configuration in the application.yml file\n+     * @return List of mappings of tourKey -> exerciseIdentifier\n+     */\n+    public List<HashMap<String, String>> getTours() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f9483cfadbd99c8c51884d46e3ec91206cb1274"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5ODM0OTUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTozNDoxMlrOFihz1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxMTozNDoxMlrOFihz1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTc0OTg0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * DELETE guided-tour/participations/:participationId : delete the \"participationId\" participation of student participations for guided tours.\n          \n          \n            \n                 * DELETE guided-tour/participations/:participationId : delete the \"participationId\" participation of student participations for guided tutorials (e.g. when restarting a tutorial)\n          \n          \n            \n                 * Please note: all users can delete their own participation when it belongs to a guided tutorial", "url": "https://github.com/ls1intum/Artemis/pull/1172#discussion_r371749846", "createdAt": "2020-01-28T11:34:12Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ParticipationResource.java", "diffHunk": "@@ -586,7 +587,50 @@ else if (participation.getExercise() instanceof ProgrammingExercise) {\n         }\n \n         User user = userService.getUserWithGroupsAndAuthorities();\n-        checkAccessPermissionAtInstructor(participation, user);\n+\n+        checkAccessPermissionAtLeastInstructor(participation, user);\n+\n+        String username = participation.getStudent().getFirstName();\n+        var auditEvent = new AuditEvent(user.getLogin(), Constants.DELETE_PARTICIPATION, \"participation=\" + participation.getId());\n+        auditEventRepository.add(auditEvent);\n+        log.info(\"Delete Participation {} of exercise {} for {}, deleteBuildPlan: {}, deleteRepository: {} by {}\", participationId, participation.getExercise().getTitle(),\n+                username, deleteBuildPlan, deleteRepository, principal.getName());\n+        participationService.delete(participationId, deleteBuildPlan, deleteRepository);\n+        return ResponseEntity.ok().headers(HeaderUtil.createEntityDeletionAlert(applicationName, true, \"participation\", username)).build();\n+    }\n+\n+    /**\n+     * DELETE guided-tour/participations/:participationId : delete the \"participationId\" participation of student participations for guided tours.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f9483cfadbd99c8c51884d46e3ec91206cb1274"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 174, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}