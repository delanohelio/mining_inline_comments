{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NzAwMjEw", "number": 2482, "title": "[Enhancement] Handle manual results on trigger-all", "bodyText": "Checklist\n\n I tested all changes and all related features with different users (student, tutor, instructor, admin) on the test server https://artemistest.ase.in.tum.de.\n Server: I followed the coding and design guidelines.\n Server: I added multiple integration tests (Spring) related to the features (with a high test coverage)\n Server: I implemented the changes with a good performance and prevented too many database calls\n Server: I documented the Java code using JavaDoc style.\n\nMotivation and Context\n\n\nTrigger-All currently does not handle manual results.\nResolves #2213\nDescription\n\nWhenever a new automatic result is generated and a manual or semi-automatic result exists, these two results are combined into a new semi-automatic result with:\n\nThe automatic feedback from the automatic result\nThe manual feedback from the manual result\nThe assessor and state (draft / completed) from the manual result\nA new calculated score and scoreString\n\nSteps for Testing\n\n\nLog in to Artemis\nCreate or use a programming exercise with manual review enabled.\nAdd one or two participations and manual assessments.\nChange the grading config (test case weights, sca penalties) and press 'Trigger All'.\nWait for the build completion and check the results.\n\nThey should consist of the unchanged manual feedback\ncombined with the updated automatic feedback\nand have the correct score and score-string assigned.\n\n\nCheck the results in all places they are shown: Course Details, Exercise Details, Code Editor, Scores Page (as Instructor)\n\nTest Coverage\n\n\n\n\nProgrammingExerciseGradingService: 95%\n\nScreenshots\n\n\nNo UI changes", "createdAt": "2020-11-30T17:30:50Z", "url": "https://github.com/ls1intum/Artemis/pull/2482", "merged": true, "mergeCommit": {"oid": "9a3454e2b7e1a12f9ddd6b46ea64ae373d438857"}, "closed": true, "closedAt": "2020-12-23T19:34:58Z", "author": {"login": "schultek"}, "timelineItems": {"totalCount": 53, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhozS5AH2gAyNTI5NzAwMjEwOmEzZjA4MWYwMzY1ZDFhNzE3OGE5YmQ4MTkyYmI2MTE0NWRkMDQ1MmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdpEYnLAFqTU1ODE5MjcxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a3f081f0365d1a7178a9bd8192bb61145dd0452b", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/a3f081f0365d1a7178a9bd8192bb61145dd0452b", "committedDate": "2020-11-30T17:28:58Z", "message": "create new manual result after re-trigger"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNDcwNDkw", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-541470490", "createdAt": "2020-12-01T03:53:16Z", "commit": {"oid": "a3f081f0365d1a7178a9bd8192bb61145dd0452b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMzo1MzoxNlrOH8XLWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNDowMTo1MFrOH8XUbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA1NjM0NQ==", "bodyText": "There is only one manual result for programming exercises. therefore a sorting for id is not needed.", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r533056345", "createdAt": "2020-12-01T03:53:16Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/ProgrammingExerciseStudentParticipationRepository.java", "diffHunk": "@@ -27,7 +27,8 @@\n     Optional<ProgrammingExerciseStudentParticipation> findByIdWithLatestResultAndFeedbacksAndRelatedSubmissions(@Param(\"participationId\") Long participationId,\n             @Param(\"dateTime\") ZonedDateTime dateTime);\n \n-    @Query(\"select p from ProgrammingExerciseStudentParticipation p left join fetch p.results pr left join fetch pr.feedbacks left join fetch pr.submission left join fetch pr.assessor where p.id = :participationId and (pr.assessmentType = 'MANUAL' or pr.assessmentType = 'SEMI_AUTOMATIC')\")\n+    @Query(\"select p from ProgrammingExerciseStudentParticipation p left join fetch p.results pr left join fetch pr.feedbacks left join fetch pr.submission left join fetch pr.assessor\"\n+            + \" where p.id = :participationId and pr.id = (select max(prr.id) from p.results prr where prr.assessmentType = 'MANUAL' or prr.assessmentType = 'SEMI_AUTOMATIC')\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3f081f0365d1a7178a9bd8192bb61145dd0452b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA1NjUxMA==", "bodyText": "we should not set the completionDate if the result should still be in draft mode", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r533056510", "createdAt": "2020-12-01T03:53:53Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -106,6 +110,60 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();\n+\n+                    ProgrammingSubmission newSubmission = programmingSubmissionService.createSubmissionWithLastCommitHashForParticipation(participation, SubmissionType.MANUAL);\n+                    Result newResult = programmingSubmissionService.setNewResult(newSubmission);\n+                    newResult.setAssessor(manualResult.getAssessor());\n+                    newResult.setAssessmentType(AssessmentType.SEMI_AUTOMATIC);\n+                    newResult.setCompletionDate(manualResult.getCompletionDate());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3f081f0365d1a7178a9bd8192bb61145dd0452b"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA1ODY2OQ==", "bodyText": "Maybe we can do it like we did it on ProgrammingExerciseGradingService:462", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r533058669", "createdAt": "2020-12-01T04:01:50Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -106,6 +110,60 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();\n+\n+                    ProgrammingSubmission newSubmission = programmingSubmissionService.createSubmissionWithLastCommitHashForParticipation(participation, SubmissionType.MANUAL);\n+                    Result newResult = programmingSubmissionService.setNewResult(newSubmission);\n+                    newResult.setAssessor(manualResult.getAssessor());\n+                    newResult.setAssessmentType(AssessmentType.SEMI_AUTOMATIC);\n+                    newResult.setCompletionDate(manualResult.getCompletionDate());\n+                    newResult.setHasFeedback(manualResult.getHasFeedback());\n+                    newResult.setRated(manualResult.isRated());\n+\n+                    for (Feedback feedback : result.getFeedbacks()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3f081f0365d1a7178a9bd8192bb61145dd0452b"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6859e3c811cfbd736ad3494e9580d65b635b0986", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/6859e3c811cfbd736ad3494e9580d65b635b0986", "committedDate": "2020-12-03T10:53:42Z", "message": "reuse code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67784d45bac07ca8e2dd3a9003256f6299a60fc1", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/67784d45bac07ca8e2dd3a9003256f6299a60fc1", "committedDate": "2020-12-03T10:58:21Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "651c65f27f9f42585b2f34127571bad27bf23842", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/651c65f27f9f42585b2f34127571bad27bf23842", "committedDate": "2020-12-03T21:18:03Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fae4746e6c0bd3b70b1bf6bba135d4047f5ae3dd", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/fae4746e6c0bd3b70b1bf6bba135d4047f5ae3dd", "committedDate": "2020-12-10T12:15:15Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b99955f4c687e8249e1f8abf93debc5e34673e0a", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/b99955f4c687e8249e1f8abf93debc5e34673e0a", "committedDate": "2020-12-11T17:55:48Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d985a321c677e659b0031de4a2b1b9dba7a8e357", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/d985a321c677e659b0031de4a2b1b9dba7a8e357", "committedDate": "2020-12-11T20:02:59Z", "message": "change to new submission mode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc6debc4528c968947ef79718997ba54e15bc87a", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/fc6debc4528c968947ef79718997ba54e15bc87a", "committedDate": "2020-12-12T13:53:50Z", "message": "fix latest manual result saving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f35234739aac601f8f2b3f66e64bfd4e932e489", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/5f35234739aac601f8f2b3f66e64bfd4e932e489", "committedDate": "2020-12-12T14:05:04Z", "message": "cleaner sorting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9bb26e6c378b7123660bc0e66198dd8b111b0e7", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/d9bb26e6c378b7123660bc0e66198dd8b111b0e7", "committedDate": "2020-12-12T14:15:08Z", "message": "renaming"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwODEwOTIz", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-550810923", "createdAt": "2020-12-12T14:15:32Z", "commit": {"oid": "5f35234739aac601f8f2b3f66e64bfd4e932e489"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxNDoxNTozMlrOIEfqiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxNDoxNTozMlrOIEfqiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU4NDAwOA==", "bodyText": "rename the copyProgrammingAutomaticFeedbackForManualResult() -> copyFeedback()", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r541584008", "createdAt": "2020-12-12T14:15:32Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -115,6 +119,47 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();\n+\n+                    Result newResult = programmingSubmissionService.setNewResult(result.getSubmission());\n+                    newResult.setAssessor(manualResult.getAssessor());\n+                    newResult.setAssessmentType(AssessmentType.SEMI_AUTOMATIC);\n+                    newResult.setCompletionDate(manualResult.getCompletionDate());\n+                    newResult.setHasFeedback(manualResult.getHasFeedback());\n+                    newResult.setRated(manualResult.isRated());\n+\n+                    for (Feedback feedback : result.getFeedbacks()) {\n+                        Feedback newFeedback = feedback.copyProgrammingAutomaticFeedbackForManualResult();\n+                        newResult.addFeedback(newFeedback);\n+                    }\n+\n+                    for (Feedback feedback : manualResult.getFeedbacks()) {\n+                        if (feedback != null && feedback.getType() != FeedbackType.AUTOMATIC) {\n+                            Feedback newFeedback = feedback.copyProgrammingAutomaticFeedbackForManualResult();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f35234739aac601f8f2b3f66e64bfd4e932e489"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f1e8a23492ae418c4a886a803062bed835be73f", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/9f1e8a23492ae418c4a886a803062bed835be73f", "committedDate": "2020-12-12T14:22:56Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b02a3e8bd6316b09604a69142d905e938831b85", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/6b02a3e8bd6316b09604a69142d905e938831b85", "committedDate": "2020-12-14T10:00:30Z", "message": "Revert \"change to new submission mode\"\n\nThis reverts commit d985a321c677e659b0031de4a2b1b9dba7a8e357."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce359aa161638623328a9062bbb1f45a4268c609", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/ce359aa161638623328a9062bbb1f45a4268c609", "committedDate": "2020-12-14T10:01:31Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fd2891c57494f2d8d2205a4df1e4a2e7a77a938", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/1fd2891c57494f2d8d2205a4df1e4a2e7a77a938", "committedDate": "2020-12-14T16:27:02Z", "message": "add server tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7224f4c301c12d02a4e11d35d19fdb378937a947", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/7224f4c301c12d02a4e11d35d19fdb378937a947", "committedDate": "2020-12-14T18:53:32Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68686f8747040169c1dabec8de1de211b2827e44", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/68686f8747040169c1dabec8de1de211b2827e44", "committedDate": "2020-12-18T22:24:37Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f0b99d0f3b935fa1512745e3ce61dbff3718b77", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/4f0b99d0f3b935fa1512745e3ce61dbff3718b77", "committedDate": "2020-12-18T22:25:36Z", "message": "Revert \"Revert \"change to new submission mode\"\"\n\nThis reverts commit 6b02a3e8bd6316b09604a69142d905e938831b85."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "805e682ef7cf7b01ab485ce044c2b1a783cf82a1", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/805e682ef7cf7b01ab485ce044c2b1a783cf82a1", "committedDate": "2020-12-18T23:28:20Z", "message": "fix renamed method call"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f190730dcf78556b1daa3b75c2ddc0280ad4633", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/6f190730dcf78556b1daa3b75c2ddc0280ad4633", "committedDate": "2020-12-19T10:48:15Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fc47a4d6666848120b7cb403e03bdd233d05763", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/5fc47a4d6666848120b7cb403e03bdd233d05763", "committedDate": "2020-12-19T12:22:35Z", "message": "fix issues and add documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dce991bf2962cafcf4d4d12419cec7f34c8828b3", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/dce991bf2962cafcf4d4d12419cec7f34c8828b3", "committedDate": "2020-12-19T12:23:22Z", "message": "Merge branch 'enhancement/programming-exercise/trigger-all-manual-assessment' of github.com:ls1intum/Artemis into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c29ec99672c5ed19e1f02afe20889625c331320", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/7c29ec99672c5ed19e1f02afe20889625c331320", "committedDate": "2020-12-19T12:33:06Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTQ4OTEx", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-555948911", "createdAt": "2020-12-19T15:29:33Z", "commit": {"oid": "7c29ec99672c5ed19e1f02afe20889625c331320"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTQ4OTEz", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-555948913", "createdAt": "2020-12-19T15:29:38Z", "commit": {"oid": "7c29ec99672c5ed19e1f02afe20889625c331320"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTQ4OTYw", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-555948960", "createdAt": "2020-12-19T15:30:31Z", "commit": {"oid": "7c29ec99672c5ed19e1f02afe20889625c331320"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTQ5MTcw", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-555949170", "createdAt": "2020-12-19T15:34:05Z", "commit": {"oid": "7c29ec99672c5ed19e1f02afe20889625c331320"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTQ5Mjk3", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-555949297", "createdAt": "2020-12-19T15:36:22Z", "commit": {"oid": "7c29ec99672c5ed19e1f02afe20889625c331320"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e83a39c818bdc4acb59a2b63b0ba26da31c69417", "author": {"user": {"login": "krusche", "name": "Stephan Krusche"}}, "url": "https://github.com/ls1intum/Artemis/commit/e83a39c818bdc4acb59a2b63b0ba26da31c69417", "committedDate": "2020-12-20T19:00:13Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDYwOTgx", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-556060981", "createdAt": "2020-12-20T20:55:13Z", "commit": {"oid": "e83a39c818bdc4acb59a2b63b0ba26da31c69417"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MDY5OTQ5", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-556069949", "createdAt": "2020-12-20T23:02:05Z", "commit": {"oid": "e83a39c818bdc4acb59a2b63b0ba26da31c69417"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjYwOTA1", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-556260905", "createdAt": "2020-12-21T09:59:43Z", "commit": {"oid": "e83a39c818bdc4acb59a2b63b0ba26da31c69417"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NjgyNjk2", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-556682696", "createdAt": "2020-12-21T21:42:47Z", "commit": {"oid": "e83a39c818bdc4acb59a2b63b0ba26da31c69417"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3929b386265b6f8bab77dd3129ff3229d1c75978", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/3929b386265b6f8bab77dd3129ff3229d1c75978", "committedDate": "2020-12-21T23:46:10Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6ddaf7fe442faf894c5956e84a1514a25763a54", "author": {"user": {"login": "krusche", "name": "Stephan Krusche"}}, "url": "https://github.com/ls1intum/Artemis/commit/d6ddaf7fe442faf894c5956e84a1514a25763a54", "committedDate": "2020-12-22T13:42:28Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MTU0NzIy", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-557154722", "createdAt": "2020-12-22T15:17:27Z", "commit": {"oid": "d6ddaf7fe442faf894c5956e84a1514a25763a54"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNToxNzoyN1rOIJ-sIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNTozNzoyOVrOIJ_Ybg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzMzNTIwMA==", "bodyText": "Can it actually happen, that feedback == null here?", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547335200", "createdAt": "2020-12-22T15:17:27Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -115,6 +119,58 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                // check if a manual result exists, if so we want to clone and update this with the new updated test-case and sca feedback\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();\n+\n+                    // create a new manual result for the same submission as the automatic result\n+                    Result newResult = programmingSubmissionService.saveNewEmptyResult(result.getSubmission());\n+\n+                    newResult.setAssessor(manualResult.getAssessor());\n+                    newResult.setAssessmentType(AssessmentType.SEMI_AUTOMATIC);\n+                    // this makes it the most recent result, but optionally keeps the draft state of an unfinished manual result\n+                    newResult.setCompletionDate(manualResult.getCompletionDate() != null ? result.getCompletionDate().plusSeconds(1) : null);\n+                    newResult.setHasFeedback(manualResult.getHasFeedback());\n+                    newResult.setRated(manualResult.isRated());\n+\n+                    // copy all feedback from the automatic result\n+                    for (Feedback feedback : result.getFeedbacks()) {\n+                        Feedback newFeedback = feedback.copyFeedback();\n+                        newResult.addFeedback(newFeedback);\n+                    }\n+\n+                    // copy only the non-automatic feedback from the manual result\n+                    for (Feedback feedback : manualResult.getFeedbacks()) {\n+                        if (feedback != null && feedback.getType() != FeedbackType.AUTOMATIC) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6ddaf7fe442faf894c5956e84a1514a25763a54"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM0NTU1MA==", "bodyText": "We have similar statements in updateResultString(). We could factor this out into a new method to avoid code duplication.", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547345550", "createdAt": "2020-12-22T15:35:48Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -115,6 +119,58 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                // check if a manual result exists, if so we want to clone and update this with the new updated test-case and sca feedback\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();\n+\n+                    // create a new manual result for the same submission as the automatic result\n+                    Result newResult = programmingSubmissionService.saveNewEmptyResult(result.getSubmission());\n+\n+                    newResult.setAssessor(manualResult.getAssessor());\n+                    newResult.setAssessmentType(AssessmentType.SEMI_AUTOMATIC);\n+                    // this makes it the most recent result, but optionally keeps the draft state of an unfinished manual result\n+                    newResult.setCompletionDate(manualResult.getCompletionDate() != null ? result.getCompletionDate().plusSeconds(1) : null);\n+                    newResult.setHasFeedback(manualResult.getHasFeedback());\n+                    newResult.setRated(manualResult.isRated());\n+\n+                    // copy all feedback from the automatic result\n+                    for (Feedback feedback : result.getFeedbacks()) {\n+                        Feedback newFeedback = feedback.copyFeedback();\n+                        newResult.addFeedback(newFeedback);\n+                    }\n+\n+                    // copy only the non-automatic feedback from the manual result\n+                    for (Feedback feedback : manualResult.getFeedbacks()) {\n+                        if (feedback != null && feedback.getType() != FeedbackType.AUTOMATIC) {\n+                            Feedback newFeedback = feedback.copyFeedback();\n+                            newResult.addFeedback(newFeedback);\n+                        }\n+                    }\n+\n+                    // recalculate the score and set the result string\n+                    double maxScore = getMaxScoreRespectingZeroPointExercises(programmingExercise);\n+                    double points = programmingAssessmentService.calculateTotalScore(newResult);\n+                    newResult.setScore(points, maxScore);\n+\n+                    String resultString = result.getResultString() + \", \" + newResult.createResultString(points, maxScore);\n+                    newResult.setResultString(resultString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6ddaf7fe442faf894c5956e84a1514a25763a54"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM0NjU0Mg==", "bodyText": "We could factor this block out into an own method to keep the top level grading method short and simpler.", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547346542", "createdAt": "2020-12-22T15:37:29Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -115,6 +119,58 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6ddaf7fe442faf894c5956e84a1514a25763a54"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d437b18a4e0778952d35778cdc0ca98f67733212", "author": {"user": {"login": "kloessst", "name": "Stefan Kl\u00f6ss-Schuster"}}, "url": "https://github.com/ls1intum/Artemis/commit/d437b18a4e0778952d35778cdc0ca98f67733212", "committedDate": "2020-12-22T15:40:32Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MTk4NTY1", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-557198565", "createdAt": "2020-12-22T16:18:12Z", "commit": {"oid": "d437b18a4e0778952d35778cdc0ca98f67733212"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNjoxODoxMlrOIKAwxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNjozNzozOVrOIKBY_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM2OTE1Nw==", "bodyText": "I think we should use the latest result, not the first when iterating through a set. It is not impossible that a participation has two manual results (be it later because of the second correction). Could we use findLatestResult() here?", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547369157", "createdAt": "2020-12-22T16:18:12Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -115,6 +119,58 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                // check if a manual result exists, if so we want to clone and update this with the new updated test-case and sca feedback\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d437b18a4e0778952d35778cdc0ca98f67733212"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM3MTcxNA==", "bodyText": "Just a thought: I hope it is safe/tested here that the tutors will not see two unfinished results (and only the latest one is used and submitted).", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547371714", "createdAt": "2020-12-22T16:23:06Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -115,6 +119,58 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                // check if a manual result exists, if so we want to clone and update this with the new updated test-case and sca feedback\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();\n+\n+                    // create a new manual result for the same submission as the automatic result\n+                    Result newResult = programmingSubmissionService.saveNewEmptyResult(result.getSubmission());\n+\n+                    newResult.setAssessor(manualResult.getAssessor());\n+                    newResult.setAssessmentType(AssessmentType.SEMI_AUTOMATIC);\n+                    // this makes it the most recent result, but optionally keeps the draft state of an unfinished manual result\n+                    newResult.setCompletionDate(manualResult.getCompletionDate() != null ? result.getCompletionDate().plusSeconds(1) : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d437b18a4e0778952d35778cdc0ca98f67733212"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM3Njk3MQ==", "bodyText": "Could we use better names instead of pr and prr? At least the last one does express what it is in my eyes, or is this to indicate that we have multiple results at this point? Would prs be better or worse?", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547376971", "createdAt": "2020-12-22T16:33:02Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/ProgrammingExerciseStudentParticipationRepository.java", "diffHunk": "@@ -27,7 +27,8 @@\n     Optional<ProgrammingExerciseStudentParticipation> findByIdWithLatestResultAndFeedbacksAndRelatedSubmissions(@Param(\"participationId\") Long participationId,\n             @Param(\"dateTime\") ZonedDateTime dateTime);\n \n-    @Query(\"select p from ProgrammingExerciseStudentParticipation p left join fetch p.results pr left join fetch pr.feedbacks left join fetch pr.submission left join fetch pr.assessor where p.id = :participationId and (pr.assessmentType = 'MANUAL' or pr.assessmentType = 'SEMI_AUTOMATIC')\")\n+    @Query(\"select p from ProgrammingExerciseStudentParticipation p left join fetch p.results pr left join fetch pr.feedbacks left join fetch pr.submission left join fetch pr.assessor\"\n+            + \" where p.id = :participationId and pr.id = (select max(prr.id) from p.results prr where prr.assessmentType = 'MANUAL' or prr.assessmentType = 'SEMI_AUTOMATIC')\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d437b18a4e0778952d35778cdc0ca98f67733212"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM3OTQ1Mg==", "bodyText": "The repository method here is\nfindStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor\n\nbut the one in the changes above is\nfindByIdWithLatestManualResultAndFeedbacksAndRelatedSubmissionsAndAssessor\n\nIn particular, the first one mentions \"Results\" and the latter only \"Result\". Is this something we need to worry about?", "url": "https://github.com/ls1intum/Artemis/pull/2482#discussion_r547379452", "createdAt": "2020-12-22T16:37:39Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -115,6 +119,58 @@ public ProgrammingExerciseGradingService(ProgrammingExerciseTestCaseService test\n                 // This method will return without triggering the build if the submission is not of type TEST.\n                 triggerTemplateBuildIfTestCasesChanged(programmingExercise.getId(), result.getId());\n             }\n+\n+            if (!isSolutionParticipation && !isTemplateParticipation) {\n+\n+                // check if a manual result exists, if so we want to clone and update this with the new updated test-case and sca feedback\n+                Optional<ProgrammingExerciseStudentParticipation> studentParticipation = programmingExerciseParticipationService\n+                        .findStudentParticipationWithLatestManualResultsAndFeedbacksAndRelatedSubmissionsAndAssessor(participation.getId());\n+\n+                if (studentParticipation.isPresent() && studentParticipation.get().getResults().stream().findFirst().isPresent()) {\n+\n+                    Result manualResult = studentParticipation.get().getResults().stream().findFirst().get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM2OTE1Nw=="}, "originalCommit": {"oid": "d437b18a4e0778952d35778cdc0ca98f67733212"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9153d8d327be880ae15d839ddd9bc7b73b4f3a5", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/f9153d8d327be880ae15d839ddd9bc7b73b4f3a5", "committedDate": "2020-12-23T12:48:28Z", "message": "code suggestions and refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODU0MTU3", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-557854157", "createdAt": "2020-12-23T13:01:46Z", "commit": {"oid": "f9153d8d327be880ae15d839ddd9bc7b73b4f3a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODY2OTQz", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-557866943", "createdAt": "2020-12-23T13:27:23Z", "commit": {"oid": "f9153d8d327be880ae15d839ddd9bc7b73b4f3a5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODY3MDgw", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-557867080", "createdAt": "2020-12-23T13:27:41Z", "commit": {"oid": "f9153d8d327be880ae15d839ddd9bc7b73b4f3a5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODY3MzIz", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-557867323", "createdAt": "2020-12-23T13:28:10Z", "commit": {"oid": "f9153d8d327be880ae15d839ddd9bc7b73b4f3a5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3ODY3Mzgz", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-557867383", "createdAt": "2020-12-23T13:28:16Z", "commit": {"oid": "f9153d8d327be880ae15d839ddd9bc7b73b4f3a5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3OTE1Mjg1", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-557915285", "createdAt": "2020-12-23T14:52:03Z", "commit": {"oid": "f9153d8d327be880ae15d839ddd9bc7b73b4f3a5"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MDMzODgy", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-558033882", "createdAt": "2020-12-23T16:12:29Z", "commit": {"oid": "f9153d8d327be880ae15d839ddd9bc7b73b4f3a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fd05bb0e3e9643badeba8e6b342dda29a2b7bd1", "author": {"user": {"login": "schultek", "name": "Kilian Schulte"}}, "url": "https://github.com/ls1intum/Artemis/commit/0fd05bb0e3e9643badeba8e6b342dda29a2b7bd1", "committedDate": "2020-12-23T16:13:39Z", "message": "Merge branch 'develop' into enhancement/programming-exercise/trigger-all-manual-assessment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MDM3MDIx", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-558037021", "createdAt": "2020-12-23T16:14:24Z", "commit": {"oid": "0fd05bb0e3e9643badeba8e6b342dda29a2b7bd1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MDUwMzcy", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-558050372", "createdAt": "2020-12-23T16:23:32Z", "commit": {"oid": "0fd05bb0e3e9643badeba8e6b342dda29a2b7bd1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MDUxMzgw", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-558051380", "createdAt": "2020-12-23T16:24:26Z", "commit": {"oid": "f9153d8d327be880ae15d839ddd9bc7b73b4f3a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MDUyODY5", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-558052869", "createdAt": "2020-12-23T16:25:33Z", "commit": {"oid": "0fd05bb0e3e9643badeba8e6b342dda29a2b7bd1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MTkyNzEy", "url": "https://github.com/ls1intum/Artemis/pull/2482#pullrequestreview-558192712", "createdAt": "2020-12-23T19:34:38Z", "commit": {"oid": "0fd05bb0e3e9643badeba8e6b342dda29a2b7bd1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3367, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}