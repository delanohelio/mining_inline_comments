{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5ODA4NzQy", "number": 1360, "title": "Refactorings notifications", "bodyText": "Checklist\n\n I tested all changes and all related features with different users (student, tutor, instructor, admin) on the test server https://artemistest.ase.in.tum.de.\n Server: I added multiple integration tests (Spring) related to the features\n Server: I documented the Java code using JavaDoc style.\n Client: I documented the TypeScript code using JSDoc style.\n\nMotivation and Context\nDuring the development of some new features for the notification system, multiple refactorings have become necessary. In order to keep the the feature branches compact, I separated the refactorings to this branch.\nDescription\n\nAdded SingleUserNotificationFactory and GroupNotificationFactory to clean up SingleUserNotificationService and GroupNotificationService.\nCleaned up all domain classes related to notifications\nAll components related to notification-management are solely used for managing system notifications. So I renamed all files accordingly.\nUsed notification.class in NotificationRepository to distinguish the notification types more consistently.\nCleaned up the placement of translation strings related to notifications\nAdded attributes/columns priority and oudated to the notification model (Liquibase changelog)\n\nThe changes to the data model go along with further planned changes which I have documented in my proposal with the following Analysis Object Model:\n\nSteps for Testing\nTrigger notification\n\nLog in to Artemis (at least as tutor)\nGo to any exercise where the Q&A feature is activated\nCreate a new question\nMake sure you get a notification for the created question\n\nSystem Notifications\n\nLog in to Artemis\nClick Server Administration in the top navigation and click on System notifications in the submenu\nCreate, update, delete system notifications and check that everything works as expected\n\nTranslation strings\nGo to the following views and check that translation strings are correct:\n\nNotification sidebar: Click notification bell in top navigation\nNotification overview: Click notification bell in top navigation -> click on Show all notifications\nSystem notifications: Click Server administration in top navigation -> click on System notifications in the sub-menu (edit, detail, delete)\n\nCheck with english and with german language setting.\nScreenshots\nNo UI changes.", "createdAt": "2020-04-28T00:01:23Z", "url": "https://github.com/ls1intum/Artemis/pull/1360", "merged": true, "mergeCommit": {"oid": "87bf6ff762d6caa9d32682a8925aa903482c9fab"}, "closed": true, "closedAt": "2020-05-09T18:58:01Z", "author": {"login": "sascha11110"}, "timelineItems": {"totalCount": 61, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbMZCpgH2gAyNDA5ODA4NzQyOmIzMTk0YmQzY2FjODEyMjE4YmEwNDdkMjY4NzE1ODIyZmY3NzQ3ZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfrM1KAFqTQwODY3NjAzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b3194bd3cac812218ba047d268715822ff7747d3", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/b3194bd3cac812218ba047d268715822ff7747d3", "committedDate": "2020-04-25T20:48:15Z", "message": "Move all notification domain classes to own sub-package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa58edd32ed938fe9a614f411b529a0c9dd6f018", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/fa58edd32ed938fe9a614f411b529a0c9dd6f018", "committedDate": "2020-04-25T21:34:42Z", "message": "Smaller formatting improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8c355cacb64258d25252d5ede371df8ee229123", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/d8c355cacb64258d25252d5ede371df8ee229123", "committedDate": "2020-04-26T10:37:13Z", "message": "Add priority and outdated field to Notification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f956828165d6020a26c1bb9b1808d2707b94a49e", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/f956828165d6020a26c1bb9b1808d2707b94a49e", "committedDate": "2020-04-27T08:49:22Z", "message": "Add SingleUserNotificationFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af39920360c7da3f480b09e72c7d5c1c603830fc", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/af39920360c7da3f480b09e72c7d5c1c603830fc", "committedDate": "2020-04-27T10:44:46Z", "message": "Add GroupNotificationRepository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bcf7258b6aeb8f8948ea03f9952c4ebe403b8c5", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/7bcf7258b6aeb8f8948ea03f9952c4ebe403b8c5", "committedDate": "2020-05-02T20:13:01Z", "message": "Merge branch 'develop' into enhancement/notifications/refactorings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "864894352082faf0a46b4b381764a888202bd00e", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/864894352082faf0a46b4b381764a888202bd00e", "committedDate": "2020-05-03T14:31:33Z", "message": "Merge branch 'develop' into enhancement/notifications/refactorings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db9f541b9a63aeb9782430368a05133f0ee8878d", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/db9f541b9a63aeb9782430368a05133f0ee8878d", "committedDate": "2020-05-03T14:39:01Z", "message": "Rename notification-management to system-notification-management: Folder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19ca152b681c770a8429c31018d14497218bcd17", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/19ca152b681c770a8429c31018d14497218bcd17", "committedDate": "2020-05-03T16:04:58Z", "message": "Rename notification-management to system-notification-management: Files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "298ae83f91ed52660d93b0f58bd82587bdaa9af3", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/298ae83f91ed52660d93b0f58bd82587bdaa9af3", "committedDate": "2020-05-03T16:26:41Z", "message": "Rename notification-management to system-notification-management: Routing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ef68110ad85714600a3bdf7141ae1c0ca19a98f", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/6ef68110ad85714600a3bdf7141ae1c0ca19a98f", "committedDate": "2020-05-03T17:07:36Z", "message": "Rename notification-management to system-notification-management: global translation strings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82e155d96ad2f72b8961c2c3e6494aa794020ef8", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/82e155d96ad2f72b8961c2c3e6494aa794020ef8", "committedDate": "2020-05-03T17:41:18Z", "message": "Move notification translation strings to own file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d78eb95c8d554be02eb28af6451511335bed185", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/6d78eb95c8d554be02eb28af6451511335bed185", "committedDate": "2020-05-03T18:09:29Z", "message": "Rename notification-management to system-notification-management: adjust translation strings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfb04683b44c72c0252aee8a8fef527e9e5b49c9", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/bfb04683b44c72c0252aee8a8fef527e9e5b49c9", "committedDate": "2020-05-03T21:08:37Z", "message": "Adjust created, updated and deleted message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d6b5bb967766dfda1a86096927af1e0fa334324", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/8d6b5bb967766dfda1a86096927af1e0fa334324", "committedDate": "2020-05-03T21:17:01Z", "message": "Rename notification-management to system-notification-management: route variables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf3c9fb7542afd5cf471dd79e766cf896764beab", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/bf3c9fb7542afd5cf471dd79e766cf896764beab", "committedDate": "2020-05-03T21:25:10Z", "message": "Rename notification-management to system-notification-management: class identifiers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c36d84a22a3f827eec4634ce6a3e0b32ff7fe202", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/c36d84a22a3f827eec4634ce6a3e0b32ff7fe202", "committedDate": "2020-05-03T21:28:26Z", "message": "Use notification title in delete dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55420d033be2c7901d647af43317ac8b0e379ff3", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/55420d033be2c7901d647af43317ac8b0e379ff3", "committedDate": "2020-05-03T21:29:49Z", "message": "Format expire date on detail page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "847f34298fb2555861a0cffd5166a2a9f24bfcc8", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/847f34298fb2555861a0cffd5166a2a9f24bfcc8", "committedDate": "2020-05-03T23:29:38Z", "message": "Set default value for systemNotificationType select field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06fd9c53e20be89972aeff74ead2e4e7d2bbefcb", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/06fd9c53e20be89972aeff74ead2e4e7d2bbefcb", "committedDate": "2020-05-03T23:55:16Z", "message": "Rename notification-management to system-notification-management: change location of created, update and delete messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e59dcb8955d6607b66b05606fa8e3f23f6f2746", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/3e59dcb8955d6607b66b05606fa8e3f23f6f2746", "committedDate": "2020-05-04T00:02:19Z", "message": "Rename notification-management to system-notification-management: delete translation files for notificationManagement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab55ebdf2803652917677636465e613da662158c", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/ab55ebdf2803652917677636465e613da662158c", "committedDate": "2020-05-04T01:05:40Z", "message": "Remove predefined value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58d705033cb9159588cdba380e56c12e8a15c70b", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/58d705033cb9159588cdba380e56c12e8a15c70b", "committedDate": "2020-05-04T09:39:58Z", "message": "Merge branch 'develop' into enhancement/notifications/refactorings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1060b47765df5e69aef4a79e0da2a661775dc726", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/1060b47765df5e69aef4a79e0da2a661775dc726", "committedDate": "2020-05-04T14:07:27Z", "message": "Merge branch 'develop' into enhancement/notifications/refactorings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0919b25e5807ec13713a3c45488aaf777caea05d", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/0919b25e5807ec13713a3c45488aaf777caea05d", "committedDate": "2020-05-04T15:34:25Z", "message": "Use class identifiers instead of implicit null check to distinguish notification types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "099becb61762883d760094cc38317b683fc3e40f", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/099becb61762883d760094cc38317b683fc3e40f", "committedDate": "2020-05-04T17:09:37Z", "message": "Merge branch 'develop' into enhancement/notifications/refactorings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "424517bb054876de882d7e3a4ec467a0829272ed", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/424517bb054876de882d7e3a4ec467a0829272ed", "committedDate": "2020-05-04T19:29:31Z", "message": "Merge branch 'develop' into enhancement/notifications/refactorings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11f4f67c0f061986bdf48951627da893cca63e92", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/11f4f67c0f061986bdf48951627da893cca63e92", "committedDate": "2020-05-04T21:54:06Z", "message": "Merge branch 'develop' into enhancement/notifications/refactorings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a", "author": {"user": {"login": "madwau", "name": "Martin Wauligmann"}}, "url": "https://github.com/ls1intum/Artemis/commit/38b7bac18b1111525ed7c198c8cdbf61f3dbf57a", "committedDate": "2020-05-05T12:01:21Z", "message": "Merge branch 'develop' into enhancement/notifications/refactorings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NzIzNDA3", "url": "https://github.com/ls1intum/Artemis/pull/1360#pullrequestreview-405723407", "createdAt": "2020-05-05T12:06:18Z", "commit": {"oid": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjowNjoxOFrOGQmTEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjozMDowMFrOGQnFqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1Nzg3Mg==", "bodyText": "Maybe include notificationType in the error message so it's clear which notification type is unsupported and caused the error.", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420057872", "createdAt": "2020-05-05T12:06:18Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package de.tum.in.www1.artemis.domain.notification;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+\n+public class GroupNotificationFactory {\n+\n+    /**\n+     * Creates an instance of GroupNotification based on the passed parameters.\n+     *\n+     * @param attachment for which a notification should be created\n+     * @param author of the notification\n+     * @param groupNotificationType user group type the notification should target\n+     * @param notificationType type of the notification that should be created\n+     * @return an instance of GroupNotification\n+     */\n+    public static GroupNotification createNotification(Attachment attachment, User author, GroupNotificationType groupNotificationType, NotificationType notificationType) {\n+        String title, text;\n+        if (notificationType == NotificationType.ATTACHMENT_CHANGE) {\n+            title = \"Attachment updated\";\n+            text = \"Attachment \\\"\" + attachment.getName() + \"\\\" updated.\";\n+        }\n+        else {\n+            throw new UnsupportedOperationException(\"Unsupported NotificationType.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1ODU4Mw==", "bodyText": "This comment doesn't really add much value since it's just the method name. I'd say leave it out or expand more.", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420058583", "createdAt": "2020-05-05T12:07:41Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package de.tum.in.www1.artemis.domain.notification;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+\n+public class GroupNotificationFactory {\n+\n+    /**\n+     * Creates an instance of GroupNotification based on the passed parameters.\n+     *\n+     * @param attachment for which a notification should be created\n+     * @param author of the notification\n+     * @param groupNotificationType user group type the notification should target\n+     * @param notificationType type of the notification that should be created\n+     * @return an instance of GroupNotification\n+     */\n+    public static GroupNotification createNotification(Attachment attachment, User author, GroupNotificationType groupNotificationType, NotificationType notificationType) {\n+        String title, text;\n+        if (notificationType == NotificationType.ATTACHMENT_CHANGE) {\n+            title = \"Attachment updated\";\n+            text = \"Attachment \\\"\" + attachment.getName() + \"\\\" updated.\";\n+        }\n+        else {\n+            throw new UnsupportedOperationException(\"Unsupported NotificationType.\");\n+        }\n+\n+        Course course = attachment.getLecture().getCourse();\n+        GroupNotification notification = new GroupNotification(course, title, text, author, groupNotificationType);\n+\n+        // Set target", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1OTQxMQ==", "bodyText": "This seems like a good opportunity for a switch statement.", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420059411", "createdAt": "2020-05-05T12:09:20Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package de.tum.in.www1.artemis.domain.notification;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+\n+public class GroupNotificationFactory {\n+\n+    /**\n+     * Creates an instance of GroupNotification based on the passed parameters.\n+     *\n+     * @param attachment for which a notification should be created\n+     * @param author of the notification\n+     * @param groupNotificationType user group type the notification should target\n+     * @param notificationType type of the notification that should be created\n+     * @return an instance of GroupNotification\n+     */\n+    public static GroupNotification createNotification(Attachment attachment, User author, GroupNotificationType groupNotificationType, NotificationType notificationType) {\n+        String title, text;\n+        if (notificationType == NotificationType.ATTACHMENT_CHANGE) {\n+            title = \"Attachment updated\";\n+            text = \"Attachment \\\"\" + attachment.getName() + \"\\\" updated.\";\n+        }\n+        else {\n+            throw new UnsupportedOperationException(\"Unsupported NotificationType.\");\n+        }\n+\n+        Course course = attachment.getLecture().getCourse();\n+        GroupNotification notification = new GroupNotification(course, title, text, author, groupNotificationType);\n+\n+        // Set target\n+        notification.setTarget(notification.getAttachmentUpdated(attachment.getLecture()));\n+\n+        return notification;\n+    }\n+\n+    /**\n+     * Creates an instance of GroupNotification based on the passed parameters.\n+     *\n+     * @param exercise for which a notification should be created\n+     * @param author of the notification\n+     * @param groupNotificationType user group type the notification should target\n+     * @param notificationType type of the notification that should be created\n+     * @return an instance of GroupNotification\n+     */\n+    public static GroupNotification createNotification(Exercise exercise, User author, GroupNotificationType groupNotificationType, NotificationType notificationType) {\n+        String title, text;\n+        if (notificationType == NotificationType.EXERCISE_CREATED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2Mjg2Mg==", "bodyText": "I think this would be easier to parse mentally:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {\n          \n          \n            \n                    if (attachment.getReleaseDate() != null && attachment.getReleaseDate().isAfter(ZonedDateTime.now())) {", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420062862", "createdAt": "2020-05-05T12:15:51Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java", "diffHunk": "@@ -7,220 +7,145 @@\n \n import de.tum.in.www1.artemis.domain.*;\n import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotification;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotificationFactory;\n import de.tum.in.www1.artemis.repository.GroupNotificationRepository;\n \n-// TODO: There is a lot of code duplication in this class. This could be solved by e.g. using a builder or factory pattern.\n @Service\n public class GroupNotificationService {\n \n-    private GroupNotificationRepository groupNotificationRepository;\n+    private final GroupNotificationRepository groupNotificationRepository;\n \n     private final SimpMessageSendingOperations messagingTemplate;\n \n-    private UserService userService;\n+    private final UserService userService;\n \n     public GroupNotificationService(GroupNotificationRepository groupNotificationRepository, SimpMessageSendingOperations messagingTemplate, UserService userService) {\n         this.groupNotificationRepository = groupNotificationRepository;\n         this.messagingTemplate = messagingTemplate;\n         this.userService = userService;\n     }\n \n-    private GroupNotification createExerciseCreatedGroupNotificationForTutors(Exercise exercise) {\n-        String title = \"Exercise created\";\n-        String notificationText = \"A new exercise \\\"\" + exercise.getTitle() + \"\\\" got created.\";\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.TA;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseCreatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForStudents(Exercise exercise, String title, String notificationText) {\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.STUDENT;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForInstructors(Exercise exercise, String title, String notificationText) {\n-        GroupNotificationType type = GroupNotificationType.INSTRUCTOR;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, null, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Exercise exercise = studentQuestion.getExercise();\n-        String title = \"New Question\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseQuestionTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Lecture lecture = studentQuestion.getLecture();\n-        String title = \"New Question\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureQuestionTarget(lecture));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Exercise exercise = studentQuestionAnswer.getQuestion().getExercise();\n-        String title = \"New Answer\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseAnswerTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Lecture lecture = studentQuestionAnswer.getQuestion().getLecture();\n-        String title = \"New Answer\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureAnswerTarget(lecture));\n-        return groupNotification;\n+    /**\n+     * Notify student groups about an attachment change.\n+     *\n+     * @param attachment that has been changed\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client\n+     */\n+    public void notifyStudentGroupAboutAttachmentChange(Attachment attachment, String notificationText) {\n+        // Do not send a notification before the release date of the attachment.\n+        if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2Mzg0Mw==", "bodyText": "Could this be removed now or are there difficulties associated with removing it?", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420063843", "createdAt": "2020-05-05T12:17:43Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java", "diffHunk": "@@ -7,220 +7,145 @@\n \n import de.tum.in.www1.artemis.domain.*;\n import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotification;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotificationFactory;\n import de.tum.in.www1.artemis.repository.GroupNotificationRepository;\n \n-// TODO: There is a lot of code duplication in this class. This could be solved by e.g. using a builder or factory pattern.\n @Service\n public class GroupNotificationService {\n \n-    private GroupNotificationRepository groupNotificationRepository;\n+    private final GroupNotificationRepository groupNotificationRepository;\n \n     private final SimpMessageSendingOperations messagingTemplate;\n \n-    private UserService userService;\n+    private final UserService userService;\n \n     public GroupNotificationService(GroupNotificationRepository groupNotificationRepository, SimpMessageSendingOperations messagingTemplate, UserService userService) {\n         this.groupNotificationRepository = groupNotificationRepository;\n         this.messagingTemplate = messagingTemplate;\n         this.userService = userService;\n     }\n \n-    private GroupNotification createExerciseCreatedGroupNotificationForTutors(Exercise exercise) {\n-        String title = \"Exercise created\";\n-        String notificationText = \"A new exercise \\\"\" + exercise.getTitle() + \"\\\" got created.\";\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.TA;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseCreatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForStudents(Exercise exercise, String title, String notificationText) {\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.STUDENT;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForInstructors(Exercise exercise, String title, String notificationText) {\n-        GroupNotificationType type = GroupNotificationType.INSTRUCTOR;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, null, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Exercise exercise = studentQuestion.getExercise();\n-        String title = \"New Question\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseQuestionTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Lecture lecture = studentQuestion.getLecture();\n-        String title = \"New Question\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureQuestionTarget(lecture));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Exercise exercise = studentQuestionAnswer.getQuestion().getExercise();\n-        String title = \"New Answer\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseAnswerTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Lecture lecture = studentQuestionAnswer.getQuestion().getLecture();\n-        String title = \"New Answer\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureAnswerTarget(lecture));\n-        return groupNotification;\n+    /**\n+     * Notify student groups about an attachment change.\n+     *\n+     * @param attachment that has been changed\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client\n+     */\n+    public void notifyStudentGroupAboutAttachmentChange(Attachment attachment, String notificationText) {\n+        // Do not send a notification before the release date of the attachment.\n+        if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {\n+            return;\n+        }\n+        // Create and send the notification.\n+        saveAndSend(GroupNotificationFactory.createNotification(attachment, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.ATTACHMENT_CHANGE));\n     }\n \n-    private GroupNotification createAttachmentUpdatedGroupNotification(Attachment attachment, String notificationText) {\n-        Course course = attachment.getLecture().getCourse();\n-        String title = \"Attachment \" + attachment.getName() + \" updated\";\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.STUDENT;\n-        GroupNotification groupNotification = new GroupNotification(course, title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getAttachmentUpdated(attachment.getLecture()));\n-        return groupNotification;\n+    /**\n+     * Notify students groups about an exercise opened for practice.\n+     *\n+     * @param exercise that has been opened for practice\n+     */\n+    public void notifyStudentGroupAboutExercisePractice(Exercise exercise) {\n+        saveAndSend(GroupNotificationFactory.createNotification(exercise, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.EXERCISE_PRACTICE));\n     }\n \n+    /**\n+     * Notify student groups about an exercise started.\n+     *\n+     * @param exercise that has been started\n+     */\n     public void notifyStudentGroupAboutExerciseStart(Exercise exercise) {\n-        String title = \"Exercise started\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" just started.\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n-    }\n-\n-    public void notifyStudentGroupAboutExerciseVisibility(Exercise exercise) {\n-        String title = \"New exercise available\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" is now available.\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n-    }\n-\n-    public void notifyStudentGroupAboutExercisePractice(Exercise exercise) {\n-        String title = \"Exercise open for practice\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" is now open for practice.\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n+        saveAndSend(GroupNotificationFactory.createNotification(exercise, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.EXERCISE_STARTED));\n     }\n \n     /**\n-     * Notify student group about an exercise update\n+     * Notify student groups about an exercise update.\n      *\n      * @param exercise that has been updated\n-     * @param notificationText that should be displayed\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2NTY3NA==", "bodyText": "Who is this question directed at? Maybe it'd be better to clarify the question since the TODO adds more confusion than it alleviates, I feel.", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420065674", "createdAt": "2020-05-05T12:20:50Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java", "diffHunk": "@@ -7,220 +7,145 @@\n \n import de.tum.in.www1.artemis.domain.*;\n import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotification;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotificationFactory;\n import de.tum.in.www1.artemis.repository.GroupNotificationRepository;\n \n-// TODO: There is a lot of code duplication in this class. This could be solved by e.g. using a builder or factory pattern.\n @Service\n public class GroupNotificationService {\n \n-    private GroupNotificationRepository groupNotificationRepository;\n+    private final GroupNotificationRepository groupNotificationRepository;\n \n     private final SimpMessageSendingOperations messagingTemplate;\n \n-    private UserService userService;\n+    private final UserService userService;\n \n     public GroupNotificationService(GroupNotificationRepository groupNotificationRepository, SimpMessageSendingOperations messagingTemplate, UserService userService) {\n         this.groupNotificationRepository = groupNotificationRepository;\n         this.messagingTemplate = messagingTemplate;\n         this.userService = userService;\n     }\n \n-    private GroupNotification createExerciseCreatedGroupNotificationForTutors(Exercise exercise) {\n-        String title = \"Exercise created\";\n-        String notificationText = \"A new exercise \\\"\" + exercise.getTitle() + \"\\\" got created.\";\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.TA;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseCreatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForStudents(Exercise exercise, String title, String notificationText) {\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.STUDENT;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForInstructors(Exercise exercise, String title, String notificationText) {\n-        GroupNotificationType type = GroupNotificationType.INSTRUCTOR;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, null, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Exercise exercise = studentQuestion.getExercise();\n-        String title = \"New Question\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseQuestionTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Lecture lecture = studentQuestion.getLecture();\n-        String title = \"New Question\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureQuestionTarget(lecture));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Exercise exercise = studentQuestionAnswer.getQuestion().getExercise();\n-        String title = \"New Answer\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseAnswerTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Lecture lecture = studentQuestionAnswer.getQuestion().getLecture();\n-        String title = \"New Answer\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureAnswerTarget(lecture));\n-        return groupNotification;\n+    /**\n+     * Notify student groups about an attachment change.\n+     *\n+     * @param attachment that has been changed\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client\n+     */\n+    public void notifyStudentGroupAboutAttachmentChange(Attachment attachment, String notificationText) {\n+        // Do not send a notification before the release date of the attachment.\n+        if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {\n+            return;\n+        }\n+        // Create and send the notification.\n+        saveAndSend(GroupNotificationFactory.createNotification(attachment, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.ATTACHMENT_CHANGE));\n     }\n \n-    private GroupNotification createAttachmentUpdatedGroupNotification(Attachment attachment, String notificationText) {\n-        Course course = attachment.getLecture().getCourse();\n-        String title = \"Attachment \" + attachment.getName() + \" updated\";\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.STUDENT;\n-        GroupNotification groupNotification = new GroupNotification(course, title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getAttachmentUpdated(attachment.getLecture()));\n-        return groupNotification;\n+    /**\n+     * Notify students groups about an exercise opened for practice.\n+     *\n+     * @param exercise that has been opened for practice\n+     */\n+    public void notifyStudentGroupAboutExercisePractice(Exercise exercise) {\n+        saveAndSend(GroupNotificationFactory.createNotification(exercise, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.EXERCISE_PRACTICE));\n     }\n \n+    /**\n+     * Notify student groups about an exercise started.\n+     *\n+     * @param exercise that has been started\n+     */\n     public void notifyStudentGroupAboutExerciseStart(Exercise exercise) {\n-        String title = \"Exercise started\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" just started.\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n-    }\n-\n-    public void notifyStudentGroupAboutExerciseVisibility(Exercise exercise) {\n-        String title = \"New exercise available\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" is now available.\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n-    }\n-\n-    public void notifyStudentGroupAboutExercisePractice(Exercise exercise) {\n-        String title = \"Exercise open for practice\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" is now open for practice.\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n+        saveAndSend(GroupNotificationFactory.createNotification(exercise, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.EXERCISE_STARTED));\n     }\n \n     /**\n-     * Notify student group about an exercise update\n+     * Notify student groups about an exercise update.\n      *\n      * @param exercise that has been updated\n-     * @param notificationText that should be displayed\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client\n      */\n     public void notifyStudentGroupAboutExerciseUpdate(Exercise exercise, String notificationText) {\n+        // Do not send a notification before the release date of the exercise.\n         if (exercise.getReleaseDate() != null && exercise.getReleaseDate().isAfter(ZonedDateTime.now())) {\n             return;\n         }\n-        String title = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" updated\";\n-        notifyStudentGroupAboutExerciseChange(exercise, title, notificationText);\n-    }\n-\n-    public void notifyInstructorGroupAboutExerciseUpdate(Exercise exercise, String notificationText) {\n-        String title = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" updated\";\n-        notifyInstructorGroupAboutExerciseChange(exercise, title, notificationText);\n-    }\n-\n-    private void notifyInstructorGroupAboutExerciseChange(Exercise exercise, String title, String notificationText) {\n-        GroupNotification groupNotification = createExerciseUpdatedGroupNotificationForInstructors(exercise, title, notificationText);\n-        saveAndSendGroupNotification(groupNotification);\n-    }\n-\n-    private void notifyStudentGroupAboutExerciseChange(Exercise exercise, String title, String notificationText) {\n-        GroupNotification groupNotification = createExerciseUpdatedGroupNotificationForStudents(exercise, title, notificationText);\n-        saveAndSendGroupNotification(groupNotification);\n+        // Create and send the notification.\n+        saveAndSend(GroupNotificationFactory.createNotification(exercise, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.EXERCISE_UPDATED));\n     }\n \n     /**\n-     * Notify tutor group about the creation of an exercise\n+     * Notify tutor groups about the creation of an exercise.\n      *\n      * @param exercise that has been created\n      */\n     public void notifyTutorGroupAboutExerciseCreated(Exercise exercise) {\n-        GroupNotification groupNotification = createExerciseCreatedGroupNotificationForTutors(exercise);\n-        saveAndSendGroupNotification(groupNotification);\n+        saveAndSend(GroupNotificationFactory.createNotification(exercise, userService.getUser(), GroupNotificationType.TA, NotificationType.EXERCISE_CREATED));\n+    }\n+\n+    /**\n+     * Notify instructor groups about an exercise update.\n+     *\n+     * @param exercise that has been updated\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client\n+     */\n+    public void notifyInstructorGroupAboutExerciseUpdate(Exercise exercise, String notificationText) {\n+        // TODO: why null for author?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a"}, "originalPosition": 199}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2Njk5Mg==", "bodyText": "Is this date format wanted here? Maybe it makes sense in this scenario but I think in general we wanted to go with dd-MM-yyyy HH:mm everywhere on the platform.", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420066992", "createdAt": "2020-05-05T12:23:20Z", "author": {"login": "madwau"}, "path": "src/main/webapp/app/admin/system-notification-management/system-notification-management-detail.component.html", "diffHunk": "@@ -0,0 +1,23 @@\n+<div *ngIf=\"notification\">\n+    <h2>\n+        <span jhiTranslate=\"artemisApp.systemNotification.systemNotification\">System notification</span> [<b>{{ notification.id }}</b\n+        >]\n+    </h2>\n+    <dl class=\"row-md jh-entity-details\">\n+        <dt><span jhiTranslate=\"global.field.id\">Id</span></dt>\n+        <dd>\n+            <span>{{ notification.id }}</span>\n+        </dd>\n+        <dt><span jhiTranslate=\"artemisApp.systemNotification.title\">Title</span></dt>\n+        <dd>{{ notification.title }}</dd>\n+        <dt><span jhiTranslate=\"artemisApp.systemNotification.text\">Text</span></dt>\n+        <dd>{{ notification.text }}</dd>\n+        <dt><span jhiTranslate=\"artemisApp.systemNotification.type\">Type</span></dt>\n+        <dd>{{ notification.type }}</dd>\n+        <dt><span jhiTranslate=\"artemisApp.systemNotification.expireDate\">Expire Date</span></dt>\n+        <dd>{{ notification.expireDate | date: 'yyyy-MM-dd HH:mm' }}</dd>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2NzY4OA==", "bodyText": "The line break looks a bit odd.", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420067688", "createdAt": "2020-05-05T12:24:34Z", "author": {"login": "madwau"}, "path": "src/main/webapp/app/admin/system-notification-management/system-notification-management-detail.component.html", "diffHunk": "@@ -0,0 +1,23 @@\n+<div *ngIf=\"notification\">\n+    <h2>\n+        <span jhiTranslate=\"artemisApp.systemNotification.systemNotification\">System notification</span> [<b>{{ notification.id }}</b\n+        >]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2OTA5MQ==", "bodyText": "Should we switch Mgmt to Management? I think the overall codebase tends to favor verbosity over abbreviations.", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420069091", "createdAt": "2020-05-05T12:26:54Z", "author": {"login": "madwau"}, "path": "src/main/webapp/app/admin/system-notification-management/system-notification-management-detail.component.ts", "diffHunk": "@@ -6,9 +6,9 @@ import { SystemNotificationService } from 'app/core/system-notification/system-n\n \n @Component({\n     selector: 'jhi-notification-mgmt-detail',\n-    templateUrl: './notification-management-detail.component.html',\n+    templateUrl: './system-notification-management-detail.component.html',\n })\n-export class NotificationMgmtDetailComponent implements OnInit, OnDestroy {\n+export class SystemNotificationMgmtDetailComponent implements OnInit, OnDestroy {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3MDgyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"expireDate\": \"Expire Date\",\n          \n          \n            \n                        \"expireDate\": \"Expiration Date\",", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420070824", "createdAt": "2020-05-05T12:30:00Z", "author": {"login": "madwau"}, "path": "src/main/webapp/i18n/en/notification.json", "diffHunk": "@@ -0,0 +1,38 @@\n+{\n+    \"artemisApp\": {\n+        \"notification\": {\n+            \"notifications\": \"Notifications\",\n+            \"noNotifications\": \"No notifications available\",\n+            \"showAllNotifications\": \"Show all notifications\",\n+            \"title\": \"Title\",\n+            \"text\": \"Text\",\n+            \"notificationDate\": \"Notification Date\",\n+            \"target\": {\n+                \"newAnswer\": \"View answer\",\n+                \"newQuestion\": \"View question\",\n+                \"exerciseCreated\": \"View exercise\",\n+                \"exerciseUpdated\": \"View exercise\",\n+                \"attachmentUpdated\": \"View lecture\"\n+            }\n+        },\n+        \"systemNotification\": {\n+            \"systemNotification\": \"System notification\",\n+            \"systemNotifications\": \"System notifications\",\n+            \"title\": \"Title\",\n+            \"text\": \"Text\",\n+            \"type\": \"Type\",\n+            \"expireDate\": \"Expire Date\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b7bac18b1111525ed7c198c8cdbf61f3dbf57a"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19cb53c263d8735e7a9cb43527d872ae53987367", "author": {"user": {"login": "madwau", "name": "Martin Wauligmann"}}, "url": "https://github.com/ls1intum/Artemis/commit/19cb53c263d8735e7a9cb43527d872ae53987367", "committedDate": "2020-05-05T12:31:38Z", "message": "Merge branch 'develop' into enhancement/notifications/refactorings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1OTYyMTA2", "url": "https://github.com/ls1intum/Artemis/pull/1360#pullrequestreview-405962106", "createdAt": "2020-05-05T16:35:50Z", "commit": {"oid": "19cb53c263d8735e7a9cb43527d872ae53987367"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjo0MDoyMFrOGQyDLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjo1Mjo1N1rOGQyobg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1MDQxMw==", "bodyText": "I am wondering whether this could be prevented entirely if instead of having the NotificationType Enum, you would add subclasses for each Type and use their constructors?\nMaybe a bit over the top. What does everyone think?", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420250413", "createdAt": "2020-05-05T16:40:20Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/notification/GroupNotificationFactory.java", "diffHunk": "@@ -0,0 +1,162 @@\n+package de.tum.in.www1.artemis.domain.notification;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+\n+public class GroupNotificationFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19cb53c263d8735e7a9cb43527d872ae53987367"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1MTI0NQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420251245", "createdAt": "2020-05-05T16:41:38Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/notification/Notification.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package de.tum.in.www1.artemis.domain;\n+package de.tum.in.www1.artemis.domain.notification;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19cb53c263d8735e7a9cb43527d872ae53987367"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1MzY2Ng==", "bodyText": "Maybe add a static import for GroupNotificationFactory.createNotification?", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420253666", "createdAt": "2020-05-05T16:45:28Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/service/GroupNotificationService.java", "diffHunk": "@@ -7,220 +7,145 @@\n \n import de.tum.in.www1.artemis.domain.*;\n import de.tum.in.www1.artemis.domain.enumeration.GroupNotificationType;\n+import de.tum.in.www1.artemis.domain.enumeration.NotificationType;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotification;\n+import de.tum.in.www1.artemis.domain.notification.GroupNotificationFactory;\n import de.tum.in.www1.artemis.repository.GroupNotificationRepository;\n \n-// TODO: There is a lot of code duplication in this class. This could be solved by e.g. using a builder or factory pattern.\n @Service\n public class GroupNotificationService {\n \n-    private GroupNotificationRepository groupNotificationRepository;\n+    private final GroupNotificationRepository groupNotificationRepository;\n \n     private final SimpMessageSendingOperations messagingTemplate;\n \n-    private UserService userService;\n+    private final UserService userService;\n \n     public GroupNotificationService(GroupNotificationRepository groupNotificationRepository, SimpMessageSendingOperations messagingTemplate, UserService userService) {\n         this.groupNotificationRepository = groupNotificationRepository;\n         this.messagingTemplate = messagingTemplate;\n         this.userService = userService;\n     }\n \n-    private GroupNotification createExerciseCreatedGroupNotificationForTutors(Exercise exercise) {\n-        String title = \"Exercise created\";\n-        String notificationText = \"A new exercise \\\"\" + exercise.getTitle() + \"\\\" got created.\";\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.TA;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseCreatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForStudents(Exercise exercise, String title, String notificationText) {\n-        User user = userService.getUser();\n-        GroupNotificationType type = GroupNotificationType.STUDENT;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseUpdatedGroupNotificationForInstructors(Exercise exercise, String title, String notificationText) {\n-        GroupNotificationType type = GroupNotificationType.INSTRUCTOR;\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, null, type);\n-        groupNotification.setTarget(groupNotification.getExerciseUpdatedTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Exercise exercise = studentQuestion.getExercise();\n-        String title = \"New Question\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseQuestionTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureQuestionCreatedGroupNotification(StudentQuestion studentQuestion, GroupNotificationType type) {\n-        Lecture lecture = studentQuestion.getLecture();\n-        String title = \"New Question\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new question.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureQuestionTarget(lecture));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createExerciseAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Exercise exercise = studentQuestionAnswer.getQuestion().getExercise();\n-        String title = \"New Answer\";\n-        String notificationText = \"Exercise \\\"\" + exercise.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(exercise.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getExerciseAnswerTarget(exercise));\n-        return groupNotification;\n-    }\n-\n-    private GroupNotification createLectureAnswerCreatedGroupNotification(StudentQuestionAnswer studentQuestionAnswer, GroupNotificationType type) {\n-        Lecture lecture = studentQuestionAnswer.getQuestion().getLecture();\n-        String title = \"New Answer\";\n-        String notificationText = \"Lecture \\\"\" + lecture.getTitle() + \"\\\" got a new answer.\";\n-        User user = userService.getUser();\n-        GroupNotification groupNotification = new GroupNotification(lecture.getCourse(), title, notificationText, user, type);\n-        groupNotification.setTarget(groupNotification.getLectureAnswerTarget(lecture));\n-        return groupNotification;\n+    /**\n+     * Notify student groups about an attachment change.\n+     *\n+     * @param attachment that has been changed\n+     * @param notificationText that should be displayed  TODO: can be removed in the future as notification's text attribute is not used in the client\n+     */\n+    public void notifyStudentGroupAboutAttachmentChange(Attachment attachment, String notificationText) {\n+        // Do not send a notification before the release date of the attachment.\n+        if (attachment.getReleaseDate() != null && !attachment.getReleaseDate().isBefore(ZonedDateTime.now())) {\n+            return;\n+        }\n+        // Create and send the notification.\n+        saveAndSend(GroupNotificationFactory.createNotification(attachment, userService.getUser(), GroupNotificationType.STUDENT, NotificationType.ATTACHMENT_CHANGE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19cb53c263d8735e7a9cb43527d872ae53987367"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI1OTk1MA==", "bodyText": "Is there a particular reason why every route is it's own object here? I think usually we export an array.", "url": "https://github.com/ls1intum/Artemis/pull/1360#discussion_r420259950", "createdAt": "2020-05-05T16:52:57Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/admin/system-notification-management/system-notification-management.route.ts", "diffHunk": "@@ -0,0 +1,70 @@\n+import { Injectable } from '@angular/core';\n+import { ActivatedRouteSnapshot, Resolve, Route } from '@angular/router';\n+import { JhiResolvePagingParams } from 'ng-jhipster';\n+import { SystemNotificationMgmtUpdateComponent } from 'app/admin/system-notification-management/system-notification-management-update.component';\n+import { SystemNotification } from 'app/entities/system-notification.model';\n+import { SystemNotificationService } from 'app/core/system-notification/system-notification.service';\n+import { SystemNotificationMgmtComponent } from 'app/admin/system-notification-management/system-notification-management.component';\n+import { SystemNotificationMgmtDetailComponent } from 'app/admin/system-notification-management/system-notification-management-detail.component';\n+\n+@Injectable({ providedIn: 'root' })\n+export class SystemNotificationMgmtResolve implements Resolve<any> {\n+    constructor(private service: SystemNotificationService) {}\n+\n+    /**\n+     * Resolves the route and initializes system notification from id route param\n+     * @param route\n+     */\n+    resolve(route: ActivatedRouteSnapshot) {\n+        const id = route.params['id'] ? route.params['id'] : null;\n+        if (id) {\n+            return this.service.find(parseInt(id, 10));\n+        }\n+        return new SystemNotification();\n+    }\n+}\n+\n+export const systemNotificationMgmtRoutes1: Route = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19cb53c263d8735e7a9cb43527d872ae53987367"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ca72bb596101f7b2e546047dbd87e5252a1c4ec", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/7ca72bb596101f7b2e546047dbd87e5252a1c4ec", "committedDate": "2020-05-06T11:11:42Z", "message": "Merge branch 'develop' into enhancement/notifications/refactorings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a389268e5f20ba89ade933cc0f60b88e38b2580", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/0a389268e5f20ba89ade933cc0f60b88e38b2580", "committedDate": "2020-05-06T11:56:07Z", "message": "Add notificationType to unsupported notification type exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d51510f71c695268a74f479e781a94705f5c286a", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/d51510f71c695268a74f479e781a94705f5c286a", "committedDate": "2020-05-06T11:57:31Z", "message": "Remove set target comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21405c6a751ade0285a23c554e2ba20cb97536fc", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/21405c6a751ade0285a23c554e2ba20cb97536fc", "committedDate": "2020-05-06T12:16:09Z", "message": "Fix odd line break"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba24a22be07ce8dc8973a814f4eb3c9d3aabcfd6", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/ba24a22be07ce8dc8973a814f4eb3c9d3aabcfd6", "committedDate": "2020-05-06T12:17:07Z", "message": "Translation string \"Expire date\" -> \"Expiration date\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5edeae133869a33ecabfb13cd915bfdea9a69d21", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/5edeae133869a33ecabfb13cd915bfdea9a69d21", "committedDate": "2020-05-06T12:22:12Z", "message": "Change system-notification-management component selectors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28c5c6552da3c56363e1c4679275473f47115bc5", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/28c5c6552da3c56363e1c4679275473f47115bc5", "committedDate": "2020-05-06T12:31:10Z", "message": "Component naming: Mgmt to Management"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b50bd816798d9372bf3ad7bfd18993d284d8bdeb", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/b50bd816798d9372bf3ad7bfd18993d284d8bdeb", "committedDate": "2020-05-06T12:36:11Z", "message": "Change date format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85d2cc655659b2be93b3c57d5f7f3f19607f3151", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/85d2cc655659b2be93b3c57d5f7f3f19607f3151", "committedDate": "2020-05-06T12:39:59Z", "message": "Adjust release date evaluation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf20e9a5d4ec6d05916d7c5545409186b95dbf2d", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/bf20e9a5d4ec6d05916d7c5545409186b95dbf2d", "committedDate": "2020-05-06T12:43:20Z", "message": "Also pass author to notifyTutorAndInstructorGroupAboutNewQuestionForExercise notification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bb4732108f33f939747e619ce46cf403eed775e", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/6bb4732108f33f939747e619ce46cf403eed775e", "committedDate": "2020-05-06T13:02:52Z", "message": "Add static import for createNotification method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5afa6134e3314be5486716bfccad673264a2dc6", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/f5afa6134e3314be5486716bfccad673264a2dc6", "committedDate": "2020-05-06T13:18:58Z", "message": "Move system notification management routes into a single array"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6e4d482970521f0a07db116820c7d0fcae6071d", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/b6e4d482970521f0a07db116820c7d0fcae6071d", "committedDate": "2020-05-06T13:30:50Z", "message": "Remove unnecessary Route import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "889df619a05d79609d57c27b50b1a089461e43ac", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/889df619a05d79609d57c27b50b1a089461e43ac", "committedDate": "2020-05-06T13:42:09Z", "message": "Add custom notificationText to GroupNotificationFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f5b7f3c281e5acdce18485d6eabbce6c23d478d", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/8f5b7f3c281e5acdce18485d6eabbce6c23d478d", "committedDate": "2020-05-06T14:34:51Z", "message": "Add colon to system notification only when notification.text exists"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5def38bb9c1da2c54a8bffc517adc49da29d4ea4", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/5def38bb9c1da2c54a8bffc517adc49da29d4ea4", "committedDate": "2020-05-06T18:22:06Z", "message": "Merge branch 'develop' into enhancement/notifications/refactorings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d986e1aa82335f80c5d5d29943e405ce8c66f6a", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/1d986e1aa82335f80c5d5d29943e405ce8c66f6a", "committedDate": "2020-05-06T18:39:48Z", "message": "Use switch statements instead of if-else"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "247dd3228a015942b9406f5f822710a339cc033a", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/247dd3228a015942b9406f5f822710a339cc033a", "committedDate": "2020-05-06T19:01:23Z", "message": "Switch to older switch statement syntax as spotless' removeUnusedImports does not support enhanced switch statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "544c8be67c4f8dc59f289ee86d7bd918e82a15b9", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/544c8be67c4f8dc59f289ee86d7bd918e82a15b9", "committedDate": "2020-05-06T20:21:44Z", "message": "Fix failing test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a61639f0a480b169c1bce2cc0ef2a68b7441ae66", "author": {"user": {"login": "F4lka", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/a61639f0a480b169c1bce2cc0ef2a68b7441ae66", "committedDate": "2020-05-07T12:42:14Z", "message": "Merge branch 'develop' into enhancement/notifications/refactorings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MTg0MTky", "url": "https://github.com/ls1intum/Artemis/pull/1360#pullrequestreview-408184192", "createdAt": "2020-05-08T11:50:03Z", "commit": {"oid": "a61639f0a480b169c1bce2cc0ef2a68b7441ae66"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NTQwMjg0", "url": "https://github.com/ls1intum/Artemis/pull/1360#pullrequestreview-408540284", "createdAt": "2020-05-08T21:32:13Z", "commit": {"oid": "a61639f0a480b169c1bce2cc0ef2a68b7441ae66"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3be2ea02423f023ccb638bb5ca687e0e735e9fc7", "author": {"user": {"login": "madwau", "name": "Martin Wauligmann"}}, "url": "https://github.com/ls1intum/Artemis/commit/3be2ea02423f023ccb638bb5ca687e0e735e9fc7", "committedDate": "2020-05-09T11:36:19Z", "message": "Merge branch 'develop' into enhancement/notifications/refactorings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjQzMjkz", "url": "https://github.com/ls1intum/Artemis/pull/1360#pullrequestreview-408643293", "createdAt": "2020-05-09T11:45:32Z", "commit": {"oid": "3be2ea02423f023ccb638bb5ca687e0e735e9fc7"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02c9daa595e5d782d458a7dda5d2c5450a92715f", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/02c9daa595e5d782d458a7dda5d2c5450a92715f", "committedDate": "2020-05-09T11:58:17Z", "message": "Apply Java code style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjQ2MTAz", "url": "https://github.com/ls1intum/Artemis/pull/1360#pullrequestreview-408646103", "createdAt": "2020-05-09T12:28:39Z", "commit": {"oid": "02c9daa595e5d782d458a7dda5d2c5450a92715f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjQ2MjQy", "url": "https://github.com/ls1intum/Artemis/pull/1360#pullrequestreview-408646242", "createdAt": "2020-05-09T12:30:42Z", "commit": {"oid": "02c9daa595e5d782d458a7dda5d2c5450a92715f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjQ2Mzk5", "url": "https://github.com/ls1intum/Artemis/pull/1360#pullrequestreview-408646399", "createdAt": "2020-05-09T12:32:45Z", "commit": {"oid": "02c9daa595e5d782d458a7dda5d2c5450a92715f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4Njc2MDM4", "url": "https://github.com/ls1intum/Artemis/pull/1360#pullrequestreview-408676038", "createdAt": "2020-05-09T18:57:40Z", "commit": {"oid": "02c9daa595e5d782d458a7dda5d2c5450a92715f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2960, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}