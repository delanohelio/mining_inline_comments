{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMDIzNDcy", "number": 1614, "title": "[Exam] Basic client setup for exam management", "bodyText": "Checklist\n\n I tested all changes and all related features with different users (student, tutor, instructor, admin) on the test server https://artemistest.ase.in.tum.de.\n Client: I added authorities to all new routes and check the course groups for displaying navigation elements (links, buttons)\n Client: I documented the TypeScript code using JSDoc style.\n Client: I translated all the newly inserted strings into German and English\n\nMotivation and Context\nThe exam mode requires some new client functionality for exam management. This is the basic setup of the required module, routes, services and components.\nDescription\n\n I've added a lazy loaded module\n I've added the necessary routes and components (see table below)\n I've added resolvers for exam, exerciseGroup and studentExam to unify the data access of the base entities\n I've added the necessary services (some of the routes need to be created on the server)\n\nBase route: course-management/:courseId/exams\u2028\nBase folder: src/main/webapp/app/exam/manage/\n\n\n\nRoute\nComponent\nComponent's Location\n\n\n\n\n/\nExamManagementComponent\n/exam-management.component.ts\n\n\n/new\nExamUpdateComponent\n/exams/exam-update.component.ts\n\n\n/:examId/edit\nExamUpdateComponent\n/exams/exam-update.component.ts\n\n\n/:examId/view\nExamDetailComponent\n/exams/exam-detail.component.ts\n\n\n/:examId/exerciseGroups\nExerciseGroupsComponent\n/exercise-groups/exercise-groups.component.ts\n\n\n/:examId/exerciseGroups/new\nExerciseGroupUpdateComponent\n/exercise-groups/exercise-group-update.component.ts\n\n\n/:examId/exerciseGroups/:exerciseGroupId/edit\nExerciseGroupUpdateComponent\n/exercise-groups/exercise-group-update.component.ts\n\n\n/:examId/exerciseGroups/:exerciseGroupId/view\nExerciseGroupDetailComponent\n/exercise-groups/exercise-group-detail.component.ts\n\n\n/:examId/students\nExamStudentsComponent\n/students/exam-students.component.ts\n\n\n/:examId/studentExams\nStudentExamsComponent\n/students-exams/student-exams.component.ts\n\n\n/:examId/studentExams/:studentExamId/view\nStudentExamDetailComponent\n/students-exams/student-exam-detail.component.ts\n\n\n\nSteps for Testing\nReviewing the code is most important here :-) Please also run the branch locally or on the test server and test the different routes manually. They should be resolved and you should see TODO.", "createdAt": "2020-06-09T19:39:29Z", "url": "https://github.com/ls1intum/Artemis/pull/1614", "merged": true, "mergeCommit": {"oid": "f051d4cb01fec210efb718fe55642567766ce716"}, "closed": true, "closedAt": "2020-06-10T21:31:13Z", "author": {"login": "sascha11110"}, "timelineItems": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpn1BFgH2gAyNDMyMDIzNDcyOjY2OTU4N2RjY2RiZDMyNzI1NTkxZTg4ZTFmNTcxNDIwYWI4NzVhYjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqAkluAFqTQyODQ0Mjg3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "669587dccdbd32725591e88e1f571420ab875ab3", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/669587dccdbd32725591e88e1f571420ab875ab3", "committedDate": "2020-06-09T16:41:11Z", "message": "Add exam management route with lazy loaded module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9974d0316468e7be9be2928c8a8560aaf6bdff28", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/9974d0316468e7be9be2928c8a8560aaf6bdff28", "committedDate": "2020-06-09T16:52:23Z", "message": "Shorten import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f6a74404af1837c4d433d04ab1186fd361e3be9", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/5f6a74404af1837c4d433d04ab1186fd361e3be9", "committedDate": "2020-06-09T17:27:23Z", "message": "Move basic exam route to exam-management.route"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8f7e7f60232fa7ba48c33206d337a03c6f3a4ec", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/d8f7e7f60232fa7ba48c33206d337a03c6f3a4ec", "committedDate": "2020-06-09T17:56:53Z", "message": "Add all necessary routes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b65d893f7492fcb4e5066d4ae58ff2de52c552cb", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/b65d893f7492fcb4e5066d4ae58ff2de52c552cb", "committedDate": "2020-06-09T18:38:58Z", "message": "Add exam components"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3afc378ce214e88af4dfc8d7886ca0bfee04441", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/b3afc378ce214e88af4dfc8d7886ca0bfee04441", "committedDate": "2020-06-09T19:06:30Z", "message": "Add exercise groups components"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5de9fdc88053a103cc367a36978d4b0779350772", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/5de9fdc88053a103cc367a36978d4b0779350772", "committedDate": "2020-06-09T19:09:28Z", "message": "Add ExamStudentsComponent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc4909aff8baddab65fdf23e7bc090bdb2a96469", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/fc4909aff8baddab65fdf23e7bc090bdb2a96469", "committedDate": "2020-06-09T19:14:50Z", "message": "Add student exam components"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7a68950f2442dcc502a73e2a0d5c2807e5e0948", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/f7a68950f2442dcc502a73e2a0d5c2807e5e0948", "committedDate": "2020-06-09T19:46:10Z", "message": "Initialize exam ids"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3057563048b8b05db954de767518adde5b2fd706", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/3057563048b8b05db954de767518adde5b2fd706", "committedDate": "2020-06-09T20:24:24Z", "message": "Basic implementation of exam management service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f2cb739f80a5aa84738f7eb0d664b653fd2152c", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/0f2cb739f80a5aa84738f7eb0d664b653fd2152c", "committedDate": "2020-06-09T20:32:03Z", "message": "Inject user service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fe3e75a04bc7737058cc4c5604b54cd50e8fdb2", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/1fe3e75a04bc7737058cc4c5604b54cd50e8fdb2", "committedDate": "2020-06-09T20:42:56Z", "message": "Add student exam service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46d7b173650e1890b217b1a22a87495134e98633", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/46d7b173650e1890b217b1a22a87495134e98633", "committedDate": "2020-06-09T20:51:52Z", "message": "Add exercise group service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dd6be76ddf609300aeafddb3a11b31cd89bd577", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/6dd6be76ddf609300aeafddb3a11b31cd89bd577", "committedDate": "2020-06-09T20:57:13Z", "message": "Inject new services"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b57d93fad38a5ec53ddd64f79da9844a7c4bd03", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/0b57d93fad38a5ec53ddd64f79da9844a7c4bd03", "committedDate": "2020-06-09T21:51:21Z", "message": "Merge branch 'develop' into exam/management/basic-setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "449a7d65c84040a4515330b53b9535d8bd12140a", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/449a7d65c84040a4515330b53b9535d8bd12140a", "committedDate": "2020-06-09T22:15:46Z", "message": "Add resolvers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "520ad798cc5e4dd66d18d7eb22adffd1bb2c8576", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/520ad798cc5e4dd66d18d7eb22adffd1bb2c8576", "committedDate": "2020-06-09T22:24:46Z", "message": "Use resolvers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3OTUzMzEx", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-427953311", "createdAt": "2020-06-10T11:17:10Z", "commit": {"oid": "520ad798cc5e4dd66d18d7eb22adffd1bb2c8576"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToxNzoxMFrOGhwPKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToxNzoxMFrOGhwPKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0NjUwNA==", "bodyText": "we should always use 'api/courses' as base URL. This simplifies authorization checks on the server! Only instructors and admins should be able to call requests related to exams", "url": "https://github.com/ls1intum/Artemis/pull/1614#discussion_r438046504", "createdAt": "2020-06-10T11:17:10Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exam/manage/exam-management.service.ts", "diffHunk": "@@ -1,8 +1,111 @@\n import { Injectable } from '@angular/core';\n-\n+import { Router } from '@angular/router';\n+import { HttpClient, HttpResponse } from '@angular/common/http';\n+import { Observable } from 'rxjs';\n+import { map } from 'rxjs/operators';\n+import * as moment from 'moment';\n import { SERVER_API_URL } from 'app/app.constants';\n+import { Exam } from 'app/entities/exam.model';\n+import { createRequestOption } from 'app/shared/util/request-util';\n+\n+type EntityResponseType = HttpResponse<Exam>;\n+type EntityArrayResponseType = HttpResponse<Exam[]>;\n \n @Injectable({ providedIn: 'root' })\n export class ExamManagementService {\n-    public resourceUrl = SERVER_API_URL + 'api/exams';\n+    public resourceUrlCourses = SERVER_API_URL + 'api/courses';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "520ad798cc5e4dd66d18d7eb22adffd1bb2c8576"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3OTUzNTE5", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-427953519", "createdAt": "2020-06-10T11:17:28Z", "commit": {"oid": "520ad798cc5e4dd66d18d7eb22adffd1bb2c8576"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToxNzoyOFrOGhwPwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToxNzoyOFrOGhwPwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0NjY1Ng==", "bodyText": "please remove resourceUrlExams and use  resourceUrlCourses", "url": "https://github.com/ls1intum/Artemis/pull/1614#discussion_r438046656", "createdAt": "2020-06-10T11:17:28Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exam/manage/exam-management.service.ts", "diffHunk": "@@ -1,8 +1,111 @@\n import { Injectable } from '@angular/core';\n-\n+import { Router } from '@angular/router';\n+import { HttpClient, HttpResponse } from '@angular/common/http';\n+import { Observable } from 'rxjs';\n+import { map } from 'rxjs/operators';\n+import * as moment from 'moment';\n import { SERVER_API_URL } from 'app/app.constants';\n+import { Exam } from 'app/entities/exam.model';\n+import { createRequestOption } from 'app/shared/util/request-util';\n+\n+type EntityResponseType = HttpResponse<Exam>;\n+type EntityArrayResponseType = HttpResponse<Exam[]>;\n \n @Injectable({ providedIn: 'root' })\n export class ExamManagementService {\n-    public resourceUrl = SERVER_API_URL + 'api/exams';\n+    public resourceUrlCourses = SERVER_API_URL + 'api/courses';\n+    public resourceUrlExams = SERVER_API_URL + 'api/exams';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "520ad798cc5e4dd66d18d7eb22adffd1bb2c8576"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3OTU0NDU4", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-427954458", "createdAt": "2020-06-10T11:18:57Z", "commit": {"oid": "520ad798cc5e4dd66d18d7eb22adffd1bb2c8576"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToxODo1N1rOGhwSew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToxODo1N1rOGhwSew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0NzM1NQ==", "bodyText": "I would also like to have 'courses' and '{courseId}' in all paths here", "url": "https://github.com/ls1intum/Artemis/pull/1614#discussion_r438047355", "createdAt": "2020-06-10T11:18:57Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exam/manage/exercise-groups/exercise-group.service.ts", "diffHunk": "@@ -0,0 +1,59 @@\n+import { Injectable } from '@angular/core';\n+import { Router } from '@angular/router';\n+import { HttpClient, HttpResponse } from '@angular/common/http';\n+import { Observable } from 'rxjs';\n+import { SERVER_API_URL } from 'app/app.constants';\n+import { ExerciseGroup } from 'app/entities/exercise-group.model';\n+\n+type EntityResponseType = HttpResponse<ExerciseGroup>;\n+type EntityArrayResponseType = HttpResponse<ExerciseGroup[]>;\n+\n+@Injectable({ providedIn: 'root' })\n+export class ExerciseGroupService {\n+    public resourceUrlExerciseGroups = SERVER_API_URL + 'api/exerciseGroups';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "520ad798cc5e4dd66d18d7eb22adffd1bb2c8576"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3OTU1MDIy", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-427955022", "createdAt": "2020-06-10T11:19:56Z", "commit": {"oid": "520ad798cc5e4dd66d18d7eb22adffd1bb2c8576"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToxOTo1NlrOGhwUIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToxOTo1NlrOGhwUIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0Nzc3Nw==", "bodyText": "Please also include 'api/courses' and '{courseId}' here", "url": "https://github.com/ls1intum/Artemis/pull/1614#discussion_r438047777", "createdAt": "2020-06-10T11:19:56Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exam/manage/student-exams/student-exam.service.ts", "diffHunk": "@@ -0,0 +1,33 @@\n+import { Injectable } from '@angular/core';\n+import { Router } from '@angular/router';\n+import { HttpClient, HttpResponse } from '@angular/common/http';\n+import { Observable } from 'rxjs';\n+import { SERVER_API_URL } from 'app/app.constants';\n+import { StudentExam } from 'app/entities/student-exam.model';\n+\n+type EntityResponseType = HttpResponse<StudentExam>;\n+type EntityArrayResponseType = HttpResponse<StudentExam[]>;\n+\n+@Injectable({ providedIn: 'root' })\n+export class StudentExamService {\n+    public resourceUrlStudentExam = SERVER_API_URL + 'api/studentExams';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "520ad798cc5e4dd66d18d7eb22adffd1bb2c8576"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30fe0f69d94fb28fa8bcab319422e24b11420f43", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/30fe0f69d94fb28fa8bcab319422e24b11420f43", "committedDate": "2020-06-10T12:10:17Z", "message": "Always add courseId to service routes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4090486d5dddad65982b4c831535e350b894378b", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/4090486d5dddad65982b4c831535e350b894378b", "committedDate": "2020-06-10T12:13:10Z", "message": "Adjust resolvers to new route structure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5f86bd1a3f431a9f63cc098947a7dab154b56f7", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/d5f86bd1a3f431a9f63cc098947a7dab154b56f7", "committedDate": "2020-06-10T12:20:48Z", "message": "Initialize components with course id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "867e9d9e5e9623cdaed3e405fff6159980f610eb", "author": {"user": {"login": "sascha11110", "name": "Sascha Beele"}}, "url": "https://github.com/ls1intum/Artemis/commit/867e9d9e5e9623cdaed3e405fff6159980f610eb", "committedDate": "2020-06-10T12:21:22Z", "message": "Merge branch 'develop' into exam/management/basic-setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369", "author": {"user": {"login": "krusche", "name": "Stephan Krusche"}}, "url": "https://github.com/ls1intum/Artemis/commit/91b9cc15b92ed927632c448789d2bd634d757369", "committedDate": "2020-06-10T15:35:56Z", "message": "Merge branch 'develop' into exam/management/basic-setup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjQwMTUz", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-428240153", "createdAt": "2020-06-10T16:39:40Z", "commit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjozOTo0MFrOGh9eGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjozOTo0MFrOGh9eGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2MzMyMQ==", "bodyText": "Shouldn't the exerciseGroups be accessible using the examId instead of the courseId? See UML", "url": "https://github.com/ls1intum/Artemis/pull/1614#discussion_r438263321", "createdAt": "2020-06-10T16:39:40Z", "author": {"login": "anditurdiu"}, "path": "src/main/webapp/app/exam/manage/exercise-groups/exercise-group-detail.component.ts", "diffHunk": "@@ -0,0 +1,23 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { ExerciseGroup } from 'app/entities/exercise-group.model';\n+import { ExerciseGroupService } from 'app/exam/manage/exercise-groups/exercise-group.service';\n+\n+@Component({\n+    selector: 'jhi-exercise-group-detail',\n+    templateUrl: './exercise-group-detail.component.html',\n+})\n+export class ExerciseGroupDetailComponent implements OnInit {\n+    courseId: number;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjQzNTA1", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-428243505", "createdAt": "2020-06-10T16:43:59Z", "commit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjQ3NTUz", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-428247553", "createdAt": "2020-06-10T16:49:14Z", "commit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjU5MTcz", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-428259173", "createdAt": "2020-06-10T17:03:56Z", "commit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzowMzo1NlrOGh-Wtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzowMzo1NlrOGh-Wtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3NzgxNQ==", "bodyText": "Do we actually need courseId, examId and exerciseGroupId to retrieve an exerciseGroup? My understanding is that exerciseGroupId is already unique and should suffice for the retrieval.", "url": "https://github.com/ls1intum/Artemis/pull/1614#discussion_r438277815", "createdAt": "2020-06-10T17:03:56Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exam/manage/exam-management.route.ts", "diffHunk": "@@ -1,14 +1,211 @@\n-import { Routes } from '@angular/router';\n+import { Injectable } from '@angular/core';\n+import { HttpResponse } from '@angular/common/http';\n+import { ActivatedRouteSnapshot, Resolve, Routes } from '@angular/router';\n+import { Observable, of } from 'rxjs';\n+import { filter, map } from 'rxjs/operators';\n import { UserRouteAccessService } from 'app/core/auth/user-route-access-service';\n import { ExamManagementComponent } from 'app/exam/manage/exam-management.component';\n+import { ExamUpdateComponent } from 'app/exam/manage/exams/exam-update.component';\n+import { ExamDetailComponent } from 'app/exam/manage/exams/exam-detail.component';\n+import { ExerciseGroupsComponent } from 'app/exam/manage/exercise-groups/exercise-groups.component';\n+import { ExerciseGroupUpdateComponent } from 'app/exam/manage/exercise-groups/exercise-group-update.component';\n+import { ExerciseGroupDetailComponent } from 'app/exam/manage/exercise-groups/exercise-group-detail.component';\n+import { ExamStudentsComponent } from 'app/exam/manage/students/exam-students.component';\n+import { StudentExamsComponent } from 'app/exam/manage/student-exams/student-exams.component';\n+import { StudentExamDetailComponent } from 'app/exam/manage/student-exams/student-exam-detail.component';\n+import { Exam } from 'app/entities/exam.model';\n+import { ExerciseGroup } from 'app/entities/exercise-group.model';\n+import { StudentExam } from 'app/entities/student-exam.model';\n+import { ExamManagementService } from 'app/exam/manage/exam-management.service';\n+import { ExerciseGroupService } from 'app/exam/manage/exercise-groups/exercise-group.service';\n+import { StudentExamService } from 'app/exam/manage/student-exams/student-exam.service';\n+\n+@Injectable({ providedIn: 'root' })\n+export class ExamResolve implements Resolve<Exam> {\n+    constructor(private examManagementService: ExamManagementService) {}\n+\n+    /**\n+     * Resolves the route by extracting the examId and returns the exam with that Id if it exists\n+     * or creates a new exam otherwise.\n+     * @param route Contains the information about the route to be resolved\n+     */\n+    resolve(route: ActivatedRouteSnapshot): Observable<Exam> {\n+        const courseId = route.params['courseId'] ? route.params['courseId'] : null;\n+        const examId = route.params['examId'] ? route.params['examId'] : null;\n+        if (courseId && examId) {\n+            return this.examManagementService.find(courseId, examId).pipe(\n+                filter((response: HttpResponse<Exam>) => response.ok),\n+                map((course: HttpResponse<Exam>) => course.body!),\n+            );\n+        }\n+        return of(new Exam());\n+    }\n+}\n+\n+@Injectable({ providedIn: 'root' })\n+export class ExerciseGroupResolve implements Resolve<ExerciseGroup> {\n+    constructor(private exerciseGroupService: ExerciseGroupService) {}\n+\n+    /**\n+     * Resolves the route by extracting the exerciseGroupId and returns the exercise group with that id if it exists\n+     * or creates a new exercise group otherwise.\n+     * @param route Contains the information about the route to be resolved\n+     */\n+    resolve(route: ActivatedRouteSnapshot): Observable<ExerciseGroup> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Mjg1MzY4", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-428285368", "createdAt": "2020-06-10T17:38:33Z", "commit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzMxMDY4", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-428331068", "createdAt": "2020-06-10T18:41:04Z", "commit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODo0MTowNVrOGiByKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODo0NjoxNVrOGiB9FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMzMzk5Mw==", "bodyText": "The full path here is course-management/:courseId/exams/new. We don't have an examId here, so ExamResolve won't work.", "url": "https://github.com/ls1intum/Artemis/pull/1614#discussion_r438333993", "createdAt": "2020-06-10T18:41:05Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exam/manage/exam-management.route.ts", "diffHunk": "@@ -1,14 +1,211 @@\n-import { Routes } from '@angular/router';\n+import { Injectable } from '@angular/core';\n+import { HttpResponse } from '@angular/common/http';\n+import { ActivatedRouteSnapshot, Resolve, Routes } from '@angular/router';\n+import { Observable, of } from 'rxjs';\n+import { filter, map } from 'rxjs/operators';\n import { UserRouteAccessService } from 'app/core/auth/user-route-access-service';\n import { ExamManagementComponent } from 'app/exam/manage/exam-management.component';\n+import { ExamUpdateComponent } from 'app/exam/manage/exams/exam-update.component';\n+import { ExamDetailComponent } from 'app/exam/manage/exams/exam-detail.component';\n+import { ExerciseGroupsComponent } from 'app/exam/manage/exercise-groups/exercise-groups.component';\n+import { ExerciseGroupUpdateComponent } from 'app/exam/manage/exercise-groups/exercise-group-update.component';\n+import { ExerciseGroupDetailComponent } from 'app/exam/manage/exercise-groups/exercise-group-detail.component';\n+import { ExamStudentsComponent } from 'app/exam/manage/students/exam-students.component';\n+import { StudentExamsComponent } from 'app/exam/manage/student-exams/student-exams.component';\n+import { StudentExamDetailComponent } from 'app/exam/manage/student-exams/student-exam-detail.component';\n+import { Exam } from 'app/entities/exam.model';\n+import { ExerciseGroup } from 'app/entities/exercise-group.model';\n+import { StudentExam } from 'app/entities/student-exam.model';\n+import { ExamManagementService } from 'app/exam/manage/exam-management.service';\n+import { ExerciseGroupService } from 'app/exam/manage/exercise-groups/exercise-group.service';\n+import { StudentExamService } from 'app/exam/manage/student-exams/student-exam.service';\n+\n+@Injectable({ providedIn: 'root' })\n+export class ExamResolve implements Resolve<Exam> {\n+    constructor(private examManagementService: ExamManagementService) {}\n+\n+    /**\n+     * Resolves the route by extracting the examId and returns the exam with that Id if it exists\n+     * or creates a new exam otherwise.\n+     * @param route Contains the information about the route to be resolved\n+     */\n+    resolve(route: ActivatedRouteSnapshot): Observable<Exam> {\n+        const courseId = route.params['courseId'] ? route.params['courseId'] : null;\n+        const examId = route.params['examId'] ? route.params['examId'] : null;\n+        if (courseId && examId) {\n+            return this.examManagementService.find(courseId, examId).pipe(\n+                filter((response: HttpResponse<Exam>) => response.ok),\n+                map((course: HttpResponse<Exam>) => course.body!),\n+            );\n+        }\n+        return of(new Exam());\n+    }\n+}\n+\n+@Injectable({ providedIn: 'root' })\n+export class ExerciseGroupResolve implements Resolve<ExerciseGroup> {\n+    constructor(private exerciseGroupService: ExerciseGroupService) {}\n+\n+    /**\n+     * Resolves the route by extracting the exerciseGroupId and returns the exercise group with that id if it exists\n+     * or creates a new exercise group otherwise.\n+     * @param route Contains the information about the route to be resolved\n+     */\n+    resolve(route: ActivatedRouteSnapshot): Observable<ExerciseGroup> {\n+        const courseId = route.params['courseId'] ? route.params['courseId'] : null;\n+        const examId = route.params['examId'] ? route.params['examId'] : null;\n+        const exerciseGroupId = route.params['exerciseGroupId'] ? route.params['exerciseGroupId'] : null;\n+        if (courseId && examId && exerciseGroupId) {\n+            return this.exerciseGroupService.find(courseId, examId, exerciseGroupId).pipe(\n+                filter((response: HttpResponse<ExerciseGroup>) => response.ok),\n+                map((course: HttpResponse<ExerciseGroup>) => course.body!),\n+            );\n+        }\n+        return of(new ExerciseGroup());\n+    }\n+}\n+\n+@Injectable({ providedIn: 'root' })\n+export class StudentExamResolve implements Resolve<StudentExam> {\n+    constructor(private studentExamService: StudentExamService) {}\n+\n+    /**\n+     * Resolves the route by extracting the studentExamId and returns the student exam with that id if it exists\n+     * or creates a new student exam otherwise.\n+     * @param route Contains the information about the route to be resolved\n+     */\n+    resolve(route: ActivatedRouteSnapshot): Observable<StudentExam> {\n+        const courseId = route.params['courseId'] ? route.params['courseId'] : null;\n+        const examId = route.params['examId'] ? route.params['examId'] : null;\n+        const studentExamId = route.params['studentExamId'] ? route.params['studentExamId'] : null;\n+        if (courseId && examId && studentExamId) {\n+            return this.studentExamService.find(courseId, examId, studentExamId).pipe(\n+                filter((response: HttpResponse<StudentExam>) => response.ok),\n+                map((course: HttpResponse<StudentExam>) => course.body!),\n+            );\n+        }\n+        return of(new StudentExam());\n+    }\n+}\n \n export const examManagementRoute: Routes = [\n     {\n         path: '',\n         component: ExamManagementComponent,\n         data: {\n             authorities: ['ROLE_INSTRUCTOR', 'ROLE_ADMIN'],\n-            pageTitle: 'artemisApp.exam.title',\n+            pageTitle: 'artemisApp.examManagement.title',\n+        },\n+        canActivate: [UserRouteAccessService],\n+    },\n+    {\n+        path: 'new',\n+        component: ExamUpdateComponent,\n+        resolve: {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMzNjc4OQ==", "bodyText": "ExerciseGroupResolve uses courseId, examId and exerciseGroupId. ExerciseGroupId is not part of the route", "url": "https://github.com/ls1intum/Artemis/pull/1614#discussion_r438336789", "createdAt": "2020-06-10T18:46:15Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exam/manage/exam-management.route.ts", "diffHunk": "@@ -1,14 +1,211 @@\n-import { Routes } from '@angular/router';\n+import { Injectable } from '@angular/core';\n+import { HttpResponse } from '@angular/common/http';\n+import { ActivatedRouteSnapshot, Resolve, Routes } from '@angular/router';\n+import { Observable, of } from 'rxjs';\n+import { filter, map } from 'rxjs/operators';\n import { UserRouteAccessService } from 'app/core/auth/user-route-access-service';\n import { ExamManagementComponent } from 'app/exam/manage/exam-management.component';\n+import { ExamUpdateComponent } from 'app/exam/manage/exams/exam-update.component';\n+import { ExamDetailComponent } from 'app/exam/manage/exams/exam-detail.component';\n+import { ExerciseGroupsComponent } from 'app/exam/manage/exercise-groups/exercise-groups.component';\n+import { ExerciseGroupUpdateComponent } from 'app/exam/manage/exercise-groups/exercise-group-update.component';\n+import { ExerciseGroupDetailComponent } from 'app/exam/manage/exercise-groups/exercise-group-detail.component';\n+import { ExamStudentsComponent } from 'app/exam/manage/students/exam-students.component';\n+import { StudentExamsComponent } from 'app/exam/manage/student-exams/student-exams.component';\n+import { StudentExamDetailComponent } from 'app/exam/manage/student-exams/student-exam-detail.component';\n+import { Exam } from 'app/entities/exam.model';\n+import { ExerciseGroup } from 'app/entities/exercise-group.model';\n+import { StudentExam } from 'app/entities/student-exam.model';\n+import { ExamManagementService } from 'app/exam/manage/exam-management.service';\n+import { ExerciseGroupService } from 'app/exam/manage/exercise-groups/exercise-group.service';\n+import { StudentExamService } from 'app/exam/manage/student-exams/student-exam.service';\n+\n+@Injectable({ providedIn: 'root' })\n+export class ExamResolve implements Resolve<Exam> {\n+    constructor(private examManagementService: ExamManagementService) {}\n+\n+    /**\n+     * Resolves the route by extracting the examId and returns the exam with that Id if it exists\n+     * or creates a new exam otherwise.\n+     * @param route Contains the information about the route to be resolved\n+     */\n+    resolve(route: ActivatedRouteSnapshot): Observable<Exam> {\n+        const courseId = route.params['courseId'] ? route.params['courseId'] : null;\n+        const examId = route.params['examId'] ? route.params['examId'] : null;\n+        if (courseId && examId) {\n+            return this.examManagementService.find(courseId, examId).pipe(\n+                filter((response: HttpResponse<Exam>) => response.ok),\n+                map((course: HttpResponse<Exam>) => course.body!),\n+            );\n+        }\n+        return of(new Exam());\n+    }\n+}\n+\n+@Injectable({ providedIn: 'root' })\n+export class ExerciseGroupResolve implements Resolve<ExerciseGroup> {\n+    constructor(private exerciseGroupService: ExerciseGroupService) {}\n+\n+    /**\n+     * Resolves the route by extracting the exerciseGroupId and returns the exercise group with that id if it exists\n+     * or creates a new exercise group otherwise.\n+     * @param route Contains the information about the route to be resolved\n+     */\n+    resolve(route: ActivatedRouteSnapshot): Observable<ExerciseGroup> {\n+        const courseId = route.params['courseId'] ? route.params['courseId'] : null;\n+        const examId = route.params['examId'] ? route.params['examId'] : null;\n+        const exerciseGroupId = route.params['exerciseGroupId'] ? route.params['exerciseGroupId'] : null;\n+        if (courseId && examId && exerciseGroupId) {\n+            return this.exerciseGroupService.find(courseId, examId, exerciseGroupId).pipe(\n+                filter((response: HttpResponse<ExerciseGroup>) => response.ok),\n+                map((course: HttpResponse<ExerciseGroup>) => course.body!),\n+            );\n+        }\n+        return of(new ExerciseGroup());\n+    }\n+}\n+\n+@Injectable({ providedIn: 'root' })\n+export class StudentExamResolve implements Resolve<StudentExam> {\n+    constructor(private studentExamService: StudentExamService) {}\n+\n+    /**\n+     * Resolves the route by extracting the studentExamId and returns the student exam with that id if it exists\n+     * or creates a new student exam otherwise.\n+     * @param route Contains the information about the route to be resolved\n+     */\n+    resolve(route: ActivatedRouteSnapshot): Observable<StudentExam> {\n+        const courseId = route.params['courseId'] ? route.params['courseId'] : null;\n+        const examId = route.params['examId'] ? route.params['examId'] : null;\n+        const studentExamId = route.params['studentExamId'] ? route.params['studentExamId'] : null;\n+        if (courseId && examId && studentExamId) {\n+            return this.studentExamService.find(courseId, examId, studentExamId).pipe(\n+                filter((response: HttpResponse<StudentExam>) => response.ok),\n+                map((course: HttpResponse<StudentExam>) => course.body!),\n+            );\n+        }\n+        return of(new StudentExam());\n+    }\n+}\n \n export const examManagementRoute: Routes = [\n     {\n         path: '',\n         component: ExamManagementComponent,\n         data: {\n             authorities: ['ROLE_INSTRUCTOR', 'ROLE_ADMIN'],\n-            pageTitle: 'artemisApp.exam.title',\n+            pageTitle: 'artemisApp.examManagement.title',\n+        },\n+        canActivate: [UserRouteAccessService],\n+    },\n+    {\n+        path: 'new',\n+        component: ExamUpdateComponent,\n+        resolve: {\n+            exam: ExamResolve,\n+        },\n+        data: {\n+            authorities: ['ROLE_INSTRUCTOR', 'ROLE_ADMIN'],\n+            pageTitle: 'artemisApp.examManagement.title',\n+        },\n+        canActivate: [UserRouteAccessService],\n+    },\n+    {\n+        path: ':examId/edit',\n+        component: ExamUpdateComponent,\n+        resolve: {\n+            exam: ExamResolve,\n+        },\n+        data: {\n+            authorities: ['ROLE_INSTRUCTOR', 'ROLE_ADMIN'],\n+            pageTitle: 'artemisApp.examManagement.title',\n+        },\n+        canActivate: [UserRouteAccessService],\n+    },\n+    {\n+        path: ':examId/view',\n+        component: ExamDetailComponent,\n+        resolve: {\n+            exam: ExamResolve,\n+        },\n+        data: {\n+            authorities: ['ROLE_INSTRUCTOR', 'ROLE_ADMIN'],\n+            pageTitle: 'artemisApp.examManagement.title',\n+        },\n+        canActivate: [UserRouteAccessService],\n+    },\n+    {\n+        path: ':examId/exerciseGroups',\n+        component: ExerciseGroupsComponent,\n+        data: {\n+            authorities: ['ROLE_INSTRUCTOR', 'ROLE_ADMIN'],\n+            pageTitle: 'artemisApp.examManagement.title',\n+        },\n+        canActivate: [UserRouteAccessService],\n+    },\n+    {\n+        path: ':examId/exerciseGroups/new',\n+        component: ExerciseGroupUpdateComponent,\n+        resolve: {\n+            exerciseGroup: ExerciseGroupResolve,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "originalPosition": 152}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzQ1NjY4", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-428345668", "createdAt": "2020-06-10T19:01:27Z", "commit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzU2NDcx", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-428356471", "createdAt": "2020-06-10T19:17:25Z", "commit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NDA2MjY0", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-428406264", "createdAt": "2020-06-10T20:32:53Z", "commit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NDQyODc0", "url": "https://github.com/ls1intum/Artemis/pull/1614#pullrequestreview-428442874", "createdAt": "2020-06-10T21:30:52Z", "commit": {"oid": "91b9cc15b92ed927632c448789d2bd634d757369"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2785, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}