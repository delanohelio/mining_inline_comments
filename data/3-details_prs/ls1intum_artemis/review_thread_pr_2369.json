{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NjEwMTU3", "number": 2369, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODoyOTo0N1rOE3HPow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODo0NzoyNVrOE3HrFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjI1ODI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/GitService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODoyOTo0N1rOHwRNDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMjowMDoyN1rOHyQALg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM3NTU2Nw==", "bodyText": "Can you assign repositoryUrlComponents[n] to a variable with a meaningful name?\nWould help if we need to touch this again in a week or so :D", "url": "https://github.com/ls1intum/Artemis/pull/2369#discussion_r520375567", "createdAt": "2020-11-10T08:29:47Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/GitService.java", "diffHunk": "@@ -657,23 +657,30 @@ public void deleteLocalRepository(URL repoUrl, String targetPath) {\n      * @return path to zip file.\n      */\n     public Path zipRepository(Repository repo) throws IOException {\n-        return zipRepository(repo, REPO_CLONE_PATH);\n+        return zipRepository(repo, REPO_CLONE_PATH, false);\n     }\n \n     /**\n      * Zip the content of a git repository.\n      *\n      * @param repo Local Repository Object.\n      * @param targetPath path where the repo is located on disk\n+     * @param hideStudentName option to hide the student name for the zip file\n      * @throws IOException if the zipping process failed.\n      * @return path to zip file.\n      */\n-    public Path zipRepository(Repository repo, String targetPath) throws IOException {\n+    public Path zipRepository(Repository repo, String targetPath, boolean hideStudentName) throws IOException {\n         String[] repositoryUrlComponents = repo.getParticipation().getRepositoryUrl().split(File.separator);\n         ProgrammingExercise exercise = repo.getParticipation().getProgrammingExercise();\n         String courseShortName = exercise.getCourseViaExerciseGroupOrCourseMember().getShortName().replaceAll(\"\\\\s\", \"\");\n-        // take the last component\n-        String zipRepoName = courseShortName + \"-\" + repositoryUrlComponents[repositoryUrlComponents.length - 1] + \".zip\";\n+        String zipRepoName;\n+        if (hideStudentName) {\n+            zipRepoName = courseShortName + \"-\" + repositoryUrlComponents[repositoryUrlComponents.length - 2].toLowerCase() + \"-student-submission\" + \".zip\";\n+        }\n+        else {\n+            // take the last component\n+            zipRepoName = courseShortName + \"-\" + repositoryUrlComponents[repositoryUrlComponents.length - 1] + \".zip\";\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b16bc6ea51dedb9ec0793ee83b87ecad6664a3e0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ1MzAzOA==", "bodyText": "I added detailed comments what we are using in d4a225b", "url": "https://github.com/ls1intum/Artemis/pull/2369#discussion_r522453038", "createdAt": "2020-11-12T22:00:27Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/GitService.java", "diffHunk": "@@ -657,23 +657,30 @@ public void deleteLocalRepository(URL repoUrl, String targetPath) {\n      * @return path to zip file.\n      */\n     public Path zipRepository(Repository repo) throws IOException {\n-        return zipRepository(repo, REPO_CLONE_PATH);\n+        return zipRepository(repo, REPO_CLONE_PATH, false);\n     }\n \n     /**\n      * Zip the content of a git repository.\n      *\n      * @param repo Local Repository Object.\n      * @param targetPath path where the repo is located on disk\n+     * @param hideStudentName option to hide the student name for the zip file\n      * @throws IOException if the zipping process failed.\n      * @return path to zip file.\n      */\n-    public Path zipRepository(Repository repo, String targetPath) throws IOException {\n+    public Path zipRepository(Repository repo, String targetPath, boolean hideStudentName) throws IOException {\n         String[] repositoryUrlComponents = repo.getParticipation().getRepositoryUrl().split(File.separator);\n         ProgrammingExercise exercise = repo.getParticipation().getProgrammingExercise();\n         String courseShortName = exercise.getCourseViaExerciseGroupOrCourseMember().getShortName().replaceAll(\"\\\\s\", \"\");\n-        // take the last component\n-        String zipRepoName = courseShortName + \"-\" + repositoryUrlComponents[repositoryUrlComponents.length - 1] + \".zip\";\n+        String zipRepoName;\n+        if (hideStudentName) {\n+            zipRepoName = courseShortName + \"-\" + repositoryUrlComponents[repositoryUrlComponents.length - 2].toLowerCase() + \"-student-submission\" + \".zip\";\n+        }\n+        else {\n+            // take the last component\n+            zipRepoName = courseShortName + \"-\" + repositoryUrlComponents[repositoryUrlComponents.length - 1] + \".zip\";\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM3NTU2Nw=="}, "originalCommit": {"oid": "b16bc6ea51dedb9ec0793ee83b87ecad6664a3e0"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjI2NjY0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODozMTozNlrOHwRR0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMjowMToyNFrOHyQB_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM3Njc4NA==", "bodyText": "What are the export options? Hiding a student name sounds like an export option.", "url": "https://github.com/ls1intum/Artemis/pull/2369#discussion_r520376784", "createdAt": "2020-11-10T08:31:36Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.ts", "diffHunk": "@@ -75,16 +76,18 @@ export class ProgrammingAssessmentRepoExportDialogComponent implements OnInit {\n         if (this.participationIdList) {\n             // We anonymize the assessment process (\"double-blind\").\n             this.repositoryExportOptions.addParticipantName = false;\n-            this.repoExportService.exportReposByParticipations(exerciseId, this.participationIdList, this.repositoryExportOptions).subscribe(this.handleExportRepoResponse, () => {\n-                this.exportInProgress = false;\n-            });\n+            this.repoExportService\n+                .exportReposByParticipations(exerciseId, this.participationIdList, this.repositoryExportOptions, this.hideStudentName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b16bc6ea51dedb9ec0793ee83b87ecad6664a3e0"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ1MzUwMw==", "bodyText": "good catch! I just refactored it to use the export options", "url": "https://github.com/ls1intum/Artemis/pull/2369#discussion_r522453503", "createdAt": "2020-11-12T22:01:24Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.ts", "diffHunk": "@@ -75,16 +76,18 @@ export class ProgrammingAssessmentRepoExportDialogComponent implements OnInit {\n         if (this.participationIdList) {\n             // We anonymize the assessment process (\"double-blind\").\n             this.repositoryExportOptions.addParticipantName = false;\n-            this.repoExportService.exportReposByParticipations(exerciseId, this.participationIdList, this.repositoryExportOptions).subscribe(this.handleExportRepoResponse, () => {\n-                this.exportInProgress = false;\n-            });\n+            this.repoExportService\n+                .exportReposByParticipations(exerciseId, this.participationIdList, this.repositoryExportOptions, this.hideStudentName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM3Njc4NA=="}, "originalCommit": {"oid": "b16bc6ea51dedb9ec0793ee83b87ecad6664a3e0"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjMyODU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/GitService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwODo0NzoyNVrOHwR3iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMTo1OTo1MlrOHyP_Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM4NjQ0Mw==", "bodyText": "not sure if I understand what's going on here. Can you document this a bit better?", "url": "https://github.com/ls1intum/Artemis/pull/2369#discussion_r520386443", "createdAt": "2020-11-10T08:47:25Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/GitService.java", "diffHunk": "@@ -657,23 +657,30 @@ public void deleteLocalRepository(URL repoUrl, String targetPath) {\n      * @return path to zip file.\n      */\n     public Path zipRepository(Repository repo) throws IOException {\n-        return zipRepository(repo, REPO_CLONE_PATH);\n+        return zipRepository(repo, REPO_CLONE_PATH, false);\n     }\n \n     /**\n      * Zip the content of a git repository.\n      *\n      * @param repo Local Repository Object.\n      * @param targetPath path where the repo is located on disk\n+     * @param hideStudentName option to hide the student name for the zip file\n      * @throws IOException if the zipping process failed.\n      * @return path to zip file.\n      */\n-    public Path zipRepository(Repository repo, String targetPath) throws IOException {\n+    public Path zipRepository(Repository repo, String targetPath, boolean hideStudentName) throws IOException {\n         String[] repositoryUrlComponents = repo.getParticipation().getRepositoryUrl().split(File.separator);\n         ProgrammingExercise exercise = repo.getParticipation().getProgrammingExercise();\n         String courseShortName = exercise.getCourseViaExerciseGroupOrCourseMember().getShortName().replaceAll(\"\\\\s\", \"\");\n-        // take the last component\n-        String zipRepoName = courseShortName + \"-\" + repositoryUrlComponents[repositoryUrlComponents.length - 1] + \".zip\";\n+        String zipRepoName;\n+        if (hideStudentName) {\n+            zipRepoName = courseShortName + \"-\" + repositoryUrlComponents[repositoryUrlComponents.length - 2].toLowerCase() + \"-student-submission\" + \".zip\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b16bc6ea51dedb9ec0793ee83b87ecad6664a3e0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ1Mjc0Ng==", "bodyText": "Done in d4a225b", "url": "https://github.com/ls1intum/Artemis/pull/2369#discussion_r522452746", "createdAt": "2020-11-12T21:59:52Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/GitService.java", "diffHunk": "@@ -657,23 +657,30 @@ public void deleteLocalRepository(URL repoUrl, String targetPath) {\n      * @return path to zip file.\n      */\n     public Path zipRepository(Repository repo) throws IOException {\n-        return zipRepository(repo, REPO_CLONE_PATH);\n+        return zipRepository(repo, REPO_CLONE_PATH, false);\n     }\n \n     /**\n      * Zip the content of a git repository.\n      *\n      * @param repo Local Repository Object.\n      * @param targetPath path where the repo is located on disk\n+     * @param hideStudentName option to hide the student name for the zip file\n      * @throws IOException if the zipping process failed.\n      * @return path to zip file.\n      */\n-    public Path zipRepository(Repository repo, String targetPath) throws IOException {\n+    public Path zipRepository(Repository repo, String targetPath, boolean hideStudentName) throws IOException {\n         String[] repositoryUrlComponents = repo.getParticipation().getRepositoryUrl().split(File.separator);\n         ProgrammingExercise exercise = repo.getParticipation().getProgrammingExercise();\n         String courseShortName = exercise.getCourseViaExerciseGroupOrCourseMember().getShortName().replaceAll(\"\\\\s\", \"\");\n-        // take the last component\n-        String zipRepoName = courseShortName + \"-\" + repositoryUrlComponents[repositoryUrlComponents.length - 1] + \".zip\";\n+        String zipRepoName;\n+        if (hideStudentName) {\n+            zipRepoName = courseShortName + \"-\" + repositoryUrlComponents[repositoryUrlComponents.length - 2].toLowerCase() + \"-student-submission\" + \".zip\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM4NjQ0Mw=="}, "originalCommit": {"oid": "b16bc6ea51dedb9ec0793ee83b87ecad6664a3e0"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4435, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}