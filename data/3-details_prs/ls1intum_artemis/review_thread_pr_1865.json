{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3ODY3OTQ3", "number": 1865, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMDo0OToxOFrOENodfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTo0Mzo1NlrOEOZ7Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzI5ODUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/Exercise.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMDo0OToxOFrOGwXA7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMDo0OToxOFrOGwXA7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MTkwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (this.getExerciseGroup() != null) {\n          \n          \n            \n                    if (this.hasExerciseGroup()) {", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453361902", "createdAt": "2020-07-12T20:49:18Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Exercise.java", "diffHunk": "@@ -868,7 +868,14 @@ public void setNumberOfOpenMoreFeedbackRequests(Long numberOfOpenMoreFeedbackReq\n     }\n \n     public boolean isReleased() {\n-        ZonedDateTime releaseDate = getReleaseDate();\n+        // Exam\n+        ZonedDateTime releaseDate;\n+        if (this.getExerciseGroup() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75b321731c6592a2b56e8201d23b52d371bd66c8"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzMwMDc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/AssessmentService.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMDo1MTozM1rOGwXB7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo0NjowNFrOGx2m2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjE1Ng==", "bodyText": "I'm not sure, but should this really depend on the last individual end date and not on the one belonging to the StudentExam to which the result belongs?", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453362156", "createdAt": "2020-07-12T20:51:33Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AssessmentService.java", "diffHunk": "@@ -33,23 +34,35 @@\n \n     protected final ResultService resultService;\n \n+    private final ExamService examService;\n+\n     private final SubmissionRepository submissionRepository;\n \n     public AssessmentService(ComplaintResponseService complaintResponseService, ComplaintRepository complaintRepository, FeedbackRepository feedbackRepository,\n             ResultRepository resultRepository, StudentParticipationRepository studentParticipationRepository, ResultService resultService,\n-            SubmissionRepository submissionRepository) {\n+            SubmissionRepository submissionRepository, ExamService examService) {\n         this.complaintResponseService = complaintResponseService;\n         this.complaintRepository = complaintRepository;\n         this.feedbackRepository = feedbackRepository;\n         this.resultRepository = resultRepository;\n         this.studentParticipationRepository = studentParticipationRepository;\n         this.resultService = resultService;\n         this.submissionRepository = submissionRepository;\n+        this.examService = examService;\n     }\n \n     Result submitResult(Result result, Exercise exercise, Double calculatedScore) {\n         Double maxScore = exercise.getMaxScore();\n-        result.setRatedIfNotExceeded(exercise.getDueDate(), result.getSubmission().getSubmissionDate());\n+\n+        if (exercise.hasExerciseGroup()) {\n+            Exam exam = exercise.getExerciseGroup().getExam();\n+            ZonedDateTime latestIndividualExamEndDate = examService.getLatestIndiviudalExamEndDate(exam);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75b321731c6592a2b56e8201d23b52d371bd66c8"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjI4NA==", "bodyText": "I was unsure here too, maybe @krusche can help", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453362284", "createdAt": "2020-07-12T20:53:10Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AssessmentService.java", "diffHunk": "@@ -33,23 +34,35 @@\n \n     protected final ResultService resultService;\n \n+    private final ExamService examService;\n+\n     private final SubmissionRepository submissionRepository;\n \n     public AssessmentService(ComplaintResponseService complaintResponseService, ComplaintRepository complaintRepository, FeedbackRepository feedbackRepository,\n             ResultRepository resultRepository, StudentParticipationRepository studentParticipationRepository, ResultService resultService,\n-            SubmissionRepository submissionRepository) {\n+            SubmissionRepository submissionRepository, ExamService examService) {\n         this.complaintResponseService = complaintResponseService;\n         this.complaintRepository = complaintRepository;\n         this.feedbackRepository = feedbackRepository;\n         this.resultRepository = resultRepository;\n         this.studentParticipationRepository = studentParticipationRepository;\n         this.resultService = resultService;\n         this.submissionRepository = submissionRepository;\n+        this.examService = examService;\n     }\n \n     Result submitResult(Result result, Exercise exercise, Double calculatedScore) {\n         Double maxScore = exercise.getMaxScore();\n-        result.setRatedIfNotExceeded(exercise.getDueDate(), result.getSubmission().getSubmissionDate());\n+\n+        if (exercise.hasExerciseGroup()) {\n+            Exam exam = exercise.getExerciseGroup().getExam();\n+            ZonedDateTime latestIndividualExamEndDate = examService.getLatestIndiviudalExamEndDate(exam);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjE1Ng=="}, "originalCommit": {"oid": "75b321731c6592a2b56e8201d23b52d371bd66c8"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MzA5Mg==", "bodyText": "This should use the individual due date. I would consider adding an appropriate method to ExamService that returns the individual due date for a student based on: StudentExamService.java Line 112", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453363092", "createdAt": "2020-07-12T21:02:40Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AssessmentService.java", "diffHunk": "@@ -33,23 +34,35 @@\n \n     protected final ResultService resultService;\n \n+    private final ExamService examService;\n+\n     private final SubmissionRepository submissionRepository;\n \n     public AssessmentService(ComplaintResponseService complaintResponseService, ComplaintRepository complaintRepository, FeedbackRepository feedbackRepository,\n             ResultRepository resultRepository, StudentParticipationRepository studentParticipationRepository, ResultService resultService,\n-            SubmissionRepository submissionRepository) {\n+            SubmissionRepository submissionRepository, ExamService examService) {\n         this.complaintResponseService = complaintResponseService;\n         this.complaintRepository = complaintRepository;\n         this.feedbackRepository = feedbackRepository;\n         this.resultRepository = resultRepository;\n         this.studentParticipationRepository = studentParticipationRepository;\n         this.resultService = resultService;\n         this.submissionRepository = submissionRepository;\n+        this.examService = examService;\n     }\n \n     Result submitResult(Result result, Exercise exercise, Double calculatedScore) {\n         Double maxScore = exercise.getMaxScore();\n-        result.setRatedIfNotExceeded(exercise.getDueDate(), result.getSubmission().getSubmissionDate());\n+\n+        if (exercise.hasExerciseGroup()) {\n+            Exam exam = exercise.getExerciseGroup().getExam();\n+            ZonedDateTime latestIndividualExamEndDate = examService.getLatestIndiviudalExamEndDate(exam);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjE1Ng=="}, "originalCommit": {"oid": "75b321731c6592a2b56e8201d23b52d371bd66c8"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2NDc2Ng==", "bodyText": "Theoretically you are right and this should use the individual date.\nHowever, I think the exam correction should NOT start before the last student exam is over.\nSo tutors should not even be able to navigate into the tutor exam dashboard in this case and then this check is fine as well", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453364766", "createdAt": "2020-07-12T21:20:42Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AssessmentService.java", "diffHunk": "@@ -33,23 +34,35 @@\n \n     protected final ResultService resultService;\n \n+    private final ExamService examService;\n+\n     private final SubmissionRepository submissionRepository;\n \n     public AssessmentService(ComplaintResponseService complaintResponseService, ComplaintRepository complaintRepository, FeedbackRepository feedbackRepository,\n             ResultRepository resultRepository, StudentParticipationRepository studentParticipationRepository, ResultService resultService,\n-            SubmissionRepository submissionRepository) {\n+            SubmissionRepository submissionRepository, ExamService examService) {\n         this.complaintResponseService = complaintResponseService;\n         this.complaintRepository = complaintRepository;\n         this.feedbackRepository = feedbackRepository;\n         this.resultRepository = resultRepository;\n         this.studentParticipationRepository = studentParticipationRepository;\n         this.resultService = resultService;\n         this.submissionRepository = submissionRepository;\n+        this.examService = examService;\n     }\n \n     Result submitResult(Result result, Exercise exercise, Double calculatedScore) {\n         Double maxScore = exercise.getMaxScore();\n-        result.setRatedIfNotExceeded(exercise.getDueDate(), result.getSubmission().getSubmissionDate());\n+\n+        if (exercise.hasExerciseGroup()) {\n+            Exam exam = exercise.getExerciseGroup().getExam();\n+            ZonedDateTime latestIndividualExamEndDate = examService.getLatestIndiviudalExamEndDate(exam);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjE1Ng=="}, "originalCommit": {"oid": "75b321731c6592a2b56e8201d23b52d371bd66c8"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkyODA5MQ==", "bodyText": "We disabled the tutor exam dashboard button until the last individual exam end date is reached. So this should be fine :)", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454928091", "createdAt": "2020-07-15T09:46:04Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AssessmentService.java", "diffHunk": "@@ -33,23 +34,35 @@\n \n     protected final ResultService resultService;\n \n+    private final ExamService examService;\n+\n     private final SubmissionRepository submissionRepository;\n \n     public AssessmentService(ComplaintResponseService complaintResponseService, ComplaintRepository complaintRepository, FeedbackRepository feedbackRepository,\n             ResultRepository resultRepository, StudentParticipationRepository studentParticipationRepository, ResultService resultService,\n-            SubmissionRepository submissionRepository) {\n+            SubmissionRepository submissionRepository, ExamService examService) {\n         this.complaintResponseService = complaintResponseService;\n         this.complaintRepository = complaintRepository;\n         this.feedbackRepository = feedbackRepository;\n         this.resultRepository = resultRepository;\n         this.studentParticipationRepository = studentParticipationRepository;\n         this.resultService = resultService;\n         this.submissionRepository = submissionRepository;\n+        this.examService = examService;\n     }\n \n     Result submitResult(Result result, Exercise exercise, Double calculatedScore) {\n         Double maxScore = exercise.getMaxScore();\n-        result.setRatedIfNotExceeded(exercise.getDueDate(), result.getSubmission().getSubmissionDate());\n+\n+        if (exercise.hasExerciseGroup()) {\n+            Exam exam = exercise.getExerciseGroup().getExam();\n+            ZonedDateTime latestIndividualExamEndDate = examService.getLatestIndiviudalExamEndDate(exam);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjE1Ng=="}, "originalCommit": {"oid": "75b321731c6592a2b56e8201d23b52d371bd66c8"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzMwMjcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ResultResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMDo1NDo0NlrOGwXC3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMDo1NDo0NlrOGwXC3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjM5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (exercise.getExerciseGroup() == null) {\n          \n          \n            \n                    if (!exercise.hasExerciseGroup()) {", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453362398", "createdAt": "2020-07-12T20:54:46Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ResultResource.java", "diffHunk": "@@ -535,10 +539,22 @@ else if (participation instanceof ProgrammingExerciseParticipation) {\n         log.debug(\"REST request to create Result for External Submission for Exercise : {}\", exerciseId);\n \n         Exercise exercise = exerciseService.findOneWithAdditionalElements(exerciseId);\n-        if (exercise.getDueDate() == null || ZonedDateTime.now().isBefore(exercise.getDueDate())) {\n-            return ResponseEntity.badRequest().headers(HeaderUtil.createFailureAlert(applicationName, true, \"result\", \"externalSubmissionBeforeDueDate\",\n-                    \"External submissions are not supported before the exercise due date.\")).build();\n+\n+        if (exercise.getExerciseGroup() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5a67ea7c2b1c18ac381bc56409c7bc3d9e68a7b"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzMwNDA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/TextSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMDo1NTo1OVrOGwXDeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMDo1NTo1OVrOGwXDeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjU1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (exercise.getExerciseGroup() != null) {\n          \n          \n            \n                    if (exercise.hasExerciseGroup()) {", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453362552", "createdAt": "2020-07-12T20:55:59Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/TextSubmissionResource.java", "diffHunk": "@@ -240,6 +244,11 @@ else if (!authorizationCheckService.isAtLeastInstructorForExercise(exercise)) {\n         log.debug(\"REST request to get a text submission without assessment\");\n         Exercise exercise = exerciseService.findOne(exerciseId);\n \n+        Exam exam = null;\n+        if (exercise.getExerciseGroup() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5a67ea7c2b1c18ac381bc56409c7bc3d9e68a7b"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzMwNzA0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/manage/update/programming-exercise-lifecycle.component.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTowMDoyMlrOGwXE5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMToxODo1N1rOGwXLWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjkxOQ==", "bodyText": "I'm not sure if that's a problem, but what would happen if isExamMode is true and exercise.dueDate is null?\nThen this would also be null here.", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453362919", "createdAt": "2020-07-12T21:00:22Z", "author": {"login": "sleiss"}, "path": "src/main/webapp/app/exercises/programming/manage/update/programming-exercise-lifecycle.component.html", "diffHunk": "@@ -20,54 +21,65 @@\n                 </div>\n             </div>\n             <jhi-programming-exercise-test-schedule-date-picker\n+                *ngIf=\"!isExamMode\"\n                 [(ngModel)]=\"exercise.dueDate\"\n                 (onDateReset)=\"exercise.buildAndTestStudentSubmissionsAfterDueDate = null\"\n                 [startAt]=\"exercise.releaseDate\"\n                 [min]=\"exercise.releaseDate\"\n-                class=\"test-schedule-date\"\n+                class=\"test-schedule-date mr-2\"\n                 label=\"artemisApp.exercise.dueDate\"\n                 tooltipText=\"artemisApp.programmingExercise.timeline.dueDateTooltip\"\n             >\n             </jhi-programming-exercise-test-schedule-date-picker>\n-            <jhi-programming-exercise-test-schedule-date-picker\n-                *ngIf=\"exercise.dueDate\"\n-                class=\"test-schedule-date\"\n-                [(ngModel)]=\"exercise.buildAndTestStudentSubmissionsAfterDueDate\"\n-                [startAt]=\"exercise.dueDate\"\n-                [min]=\"exercise.dueDate\"\n-                label=\"artemisApp.programmingExercise.timeline.afterDueDate\"\n-                tooltipText=\"artemisApp.programmingExercise.timeline.afterDueDateTooltip\"\n-            >\n-            </jhi-programming-exercise-test-schedule-date-picker>\n-            <div *ngIf=\"exercise.dueDate\" class=\"test-schedule-date\">\n-                <div class=\"mb-2\">\n-                    <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.programmingExercise.timeline.manualReview\">\n-                        Manual Review\n-                    </span>\n-                    <jhi-help-icon placement=\"top\" text=\"artemisApp.programmingExercise.timeline.manualReviewTooltip\"></jhi-help-icon>\n-                </div>\n-                <div\n-                    *ngIf=\"!exercise.assessmentType || exercise.assessmentType === assessmentType.AUTOMATIC\"\n-                    class=\"btn btn-light scheduled-test scheduled-test--can-toggle btn-lifecycle btn-lifecycle--deactivated\"\n-                    (click)=\"toggleHasManualTests()\"\n-                >\n-                    <fa-icon [icon]=\"'user-plus'\" size=\"lg\"></fa-icon>\n-                </div>\n-                <div\n-                    *ngIf=\"exercise.assessmentType === assessmentType.SEMI_AUTOMATIC\"\n-                    (click)=\"toggleHasManualTests()\"\n-                    class=\"btn btn-light scheduled-test scheduled-test--can-toggle btn-lifecycle calendar-event-toggle\"\n-                >\n-                    <fa-icon class=\"icon-static\" [icon]=\"'user-check'\" size=\"lg\"></fa-icon>\n-                    <fa-icon class=\"icon-remove\" [icon]=\"'user-minus'\" size=\"lg\"></fa-icon>\n-                </div>\n-                <div\n-                    *ngIf=\"!exercise.assessmentType || exercise.assessmentType === assessmentType.AUTOMATIC\"\n-                    class=\"text-danger\"\n-                    jhiTranslate=\"artemisApp.programmingExercise.timeline.notSet\"\n+            <div *ngIf=\"isExamMode || exercise.dueDate\">\n+                <jhi-programming-exercise-test-schedule-date-picker\n+                    class=\"test-schedule-date mr-2\"\n+                    [(ngModel)]=\"exercise.buildAndTestStudentSubmissionsAfterDueDate\"\n+                    [startAt]=\"exercise.dueDate\"\n+                    [min]=\"exercise.dueDate\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5a67ea7c2b1c18ac381bc56409c7bc3d9e68a7b"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2NDU2OQ==", "bodyText": "when I tried it out, it worked. I think startAt and min is ignored when the value is null", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453364569", "createdAt": "2020-07-12T21:18:57Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/programming/manage/update/programming-exercise-lifecycle.component.html", "diffHunk": "@@ -20,54 +21,65 @@\n                 </div>\n             </div>\n             <jhi-programming-exercise-test-schedule-date-picker\n+                *ngIf=\"!isExamMode\"\n                 [(ngModel)]=\"exercise.dueDate\"\n                 (onDateReset)=\"exercise.buildAndTestStudentSubmissionsAfterDueDate = null\"\n                 [startAt]=\"exercise.releaseDate\"\n                 [min]=\"exercise.releaseDate\"\n-                class=\"test-schedule-date\"\n+                class=\"test-schedule-date mr-2\"\n                 label=\"artemisApp.exercise.dueDate\"\n                 tooltipText=\"artemisApp.programmingExercise.timeline.dueDateTooltip\"\n             >\n             </jhi-programming-exercise-test-schedule-date-picker>\n-            <jhi-programming-exercise-test-schedule-date-picker\n-                *ngIf=\"exercise.dueDate\"\n-                class=\"test-schedule-date\"\n-                [(ngModel)]=\"exercise.buildAndTestStudentSubmissionsAfterDueDate\"\n-                [startAt]=\"exercise.dueDate\"\n-                [min]=\"exercise.dueDate\"\n-                label=\"artemisApp.programmingExercise.timeline.afterDueDate\"\n-                tooltipText=\"artemisApp.programmingExercise.timeline.afterDueDateTooltip\"\n-            >\n-            </jhi-programming-exercise-test-schedule-date-picker>\n-            <div *ngIf=\"exercise.dueDate\" class=\"test-schedule-date\">\n-                <div class=\"mb-2\">\n-                    <span class=\"font-weight-bold\" jhiTranslate=\"artemisApp.programmingExercise.timeline.manualReview\">\n-                        Manual Review\n-                    </span>\n-                    <jhi-help-icon placement=\"top\" text=\"artemisApp.programmingExercise.timeline.manualReviewTooltip\"></jhi-help-icon>\n-                </div>\n-                <div\n-                    *ngIf=\"!exercise.assessmentType || exercise.assessmentType === assessmentType.AUTOMATIC\"\n-                    class=\"btn btn-light scheduled-test scheduled-test--can-toggle btn-lifecycle btn-lifecycle--deactivated\"\n-                    (click)=\"toggleHasManualTests()\"\n-                >\n-                    <fa-icon [icon]=\"'user-plus'\" size=\"lg\"></fa-icon>\n-                </div>\n-                <div\n-                    *ngIf=\"exercise.assessmentType === assessmentType.SEMI_AUTOMATIC\"\n-                    (click)=\"toggleHasManualTests()\"\n-                    class=\"btn btn-light scheduled-test scheduled-test--can-toggle btn-lifecycle calendar-event-toggle\"\n-                >\n-                    <fa-icon class=\"icon-static\" [icon]=\"'user-check'\" size=\"lg\"></fa-icon>\n-                    <fa-icon class=\"icon-remove\" [icon]=\"'user-minus'\" size=\"lg\"></fa-icon>\n-                </div>\n-                <div\n-                    *ngIf=\"!exercise.assessmentType || exercise.assessmentType === assessmentType.AUTOMATIC\"\n-                    class=\"text-danger\"\n-                    jhiTranslate=\"artemisApp.programmingExercise.timeline.notSet\"\n+            <div *ngIf=\"isExamMode || exercise.dueDate\">\n+                <jhi-programming-exercise-test-schedule-date-picker\n+                    class=\"test-schedule-date mr-2\"\n+                    [(ngModel)]=\"exercise.buildAndTestStudentSubmissionsAfterDueDate\"\n+                    [startAt]=\"exercise.dueDate\"\n+                    [min]=\"exercise.dueDate\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MjkxOQ=="}, "originalCommit": {"oid": "e5a67ea7c2b1c18ac381bc56409c7bc3d9e68a7b"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzMwOTg0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/shared/dashboards/tutor/tutor-exercise-dashboard.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTowNDozNFrOGwXGQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTowNDozNFrOGwXGQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MzI2NA==", "bodyText": "We are basically already holding this information in the exam variable, I'm not sure if it makes sense to make isExamMode a method that checks if exam is not null.\nBut I believe thats a minor issue as the values are only set once if I see it correctly.", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453363264", "createdAt": "2020-07-12T21:04:34Z", "author": {"login": "sleiss"}, "path": "src/main/webapp/app/exercises/shared/dashboards/tutor/tutor-exercise-dashboard.component.ts", "diffHunk": "@@ -51,6 +52,8 @@ export class TutorExerciseDashboardComponent implements OnInit, AfterViewInit {\n     exercise: Exercise;\n     modelingExercise: ModelingExercise;\n     courseId: number;\n+    exam: Exam | null = null;\n+    isExamMode = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce5e439e02892c8295c31d2976972b57f969cca2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzMyOTg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTozMToxOFrOGwXPxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTozMToxOFrOGwXPxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2NTcwMQ==", "bodyText": "I like forbidden() here more", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453365701", "createdAt": "2020-07-12T21:31:18Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadSubmissionResource.java", "diffHunk": "@@ -251,9 +255,18 @@ else if (!authCheckService.isAtLeastInstructorForExercise(exercise)) {\n             return badRequest();\n         }\n \n+        Exam exam = fileUploadExercise.getExerciseGroup().getExam();\n         // Tutors cannot start assessing submissions if the exercise due date hasn't been reached yet\n-        if (fileUploadExercise.getDueDate() != null && fileUploadExercise.getDueDate().isAfter(ZonedDateTime.now())) {\n-            return notFound();\n+        if (exam != null) {\n+            ZonedDateTime latestIndiviudalExamEndDate = examService.getLatestIndiviudalExamEndDate(exam);\n+            if (latestIndiviudalExamEndDate != null && latestIndiviudalExamEndDate.isAfter(ZonedDateTime.now())) {\n+                return notFound();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4855fc5186c75c5dc0b604e571b446c24573a3e6"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzMyOTk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTozMToyN1rOGwXP1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTozMToyN1rOGwXP1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2NTcxNw==", "bodyText": "I like forbidden() here more", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453365717", "createdAt": "2020-07-12T21:31:27Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadSubmissionResource.java", "diffHunk": "@@ -251,9 +255,18 @@ else if (!authCheckService.isAtLeastInstructorForExercise(exercise)) {\n             return badRequest();\n         }\n \n+        Exam exam = fileUploadExercise.getExerciseGroup().getExam();\n         // Tutors cannot start assessing submissions if the exercise due date hasn't been reached yet\n-        if (fileUploadExercise.getDueDate() != null && fileUploadExercise.getDueDate().isAfter(ZonedDateTime.now())) {\n-            return notFound();\n+        if (exam != null) {\n+            ZonedDateTime latestIndiviudalExamEndDate = examService.getLatestIndiviudalExamEndDate(exam);\n+            if (latestIndiviudalExamEndDate != null && latestIndiviudalExamEndDate.isAfter(ZonedDateTime.now())) {\n+                return notFound();\n+            }\n+        }\n+        else {\n+            if (fileUploadExercise.getDueDate() != null && fileUploadExercise.getDueDate().isAfter(ZonedDateTime.now())) {\n+                return notFound();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4855fc5186c75c5dc0b604e571b446c24573a3e6"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzMzMDUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTozMjowNVrOGwXQEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTozMjowNVrOGwXQEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2NTc3Nw==", "bodyText": "I like forbidden() here more", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453365777", "createdAt": "2020-07-12T21:32:05Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java", "diffHunk": "@@ -256,9 +261,18 @@ else if (!authCheckService.isAtLeastInstructorForExercise(exercise)) {\n             return badRequest();\n         }\n \n+        Exam exam = exercise.getExerciseGroup().getExam();\n         // Tutors cannot start assessing submissions if the exercise due date hasn't been reached yet\n-        if (exercise.getDueDate() != null && exercise.getDueDate().isAfter(ZonedDateTime.now())) {\n-            return notFound();\n+        if (exam != null) {\n+            ZonedDateTime latestIndiviudalExamEndDate = examService.getLatestIndiviudalExamEndDate(exam);\n+            if (latestIndiviudalExamEndDate != null && latestIndiviudalExamEndDate.isAfter(ZonedDateTime.now())) {\n+                return notFound();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4855fc5186c75c5dc0b604e571b446c24573a3e6"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzMzMDY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTozMjoxNFrOGwXQIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTozMjoxNFrOGwXQIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2NTc5NA==", "bodyText": "I like forbidden() here more", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453365794", "createdAt": "2020-07-12T21:32:14Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingSubmissionResource.java", "diffHunk": "@@ -256,9 +261,18 @@ else if (!authCheckService.isAtLeastInstructorForExercise(exercise)) {\n             return badRequest();\n         }\n \n+        Exam exam = exercise.getExerciseGroup().getExam();\n         // Tutors cannot start assessing submissions if the exercise due date hasn't been reached yet\n-        if (exercise.getDueDate() != null && exercise.getDueDate().isAfter(ZonedDateTime.now())) {\n-            return notFound();\n+        if (exam != null) {\n+            ZonedDateTime latestIndiviudalExamEndDate = examService.getLatestIndiviudalExamEndDate(exam);\n+            if (latestIndiviudalExamEndDate != null && latestIndiviudalExamEndDate.isAfter(ZonedDateTime.now())) {\n+                return notFound();\n+            }\n+        }\n+        else {\n+            if (exercise.getDueDate() != null && exercise.getDueDate().isAfter(ZonedDateTime.now())) {\n+                return notFound();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4855fc5186c75c5dc0b604e571b446c24573a3e6"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzM0Mjc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ResultResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTo0ODoxN1rOGwXVtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTo0ODoxN1rOGwXVtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2NzIyMw==", "bodyText": "I'm not sure where exactly external submissions are used and if this makes sense for exam exercises at all.", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453367223", "createdAt": "2020-07-12T21:48:17Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ResultResource.java", "diffHunk": "@@ -535,10 +539,22 @@ else if (participation instanceof ProgrammingExerciseParticipation) {\n         log.debug(\"REST request to create Result for External Submission for Exercise : {}\", exerciseId);\n \n         Exercise exercise = exerciseService.findOneWithAdditionalElements(exerciseId);\n-        if (exercise.getDueDate() == null || ZonedDateTime.now().isBefore(exercise.getDueDate())) {\n-            return ResponseEntity.badRequest().headers(HeaderUtil.createFailureAlert(applicationName, true, \"result\", \"externalSubmissionBeforeDueDate\",\n-                    \"External submissions are not supported before the exercise due date.\")).build();\n+\n+        if (!exercise.hasExerciseGroup()) {\n+            if (exercise.getDueDate() == null || ZonedDateTime.now().isBefore(exercise.getDueDate())) {\n+                return ResponseEntity.badRequest().headers(HeaderUtil.createFailureAlert(applicationName, true, \"result\", \"externalSubmissionBeforeDueDate\",\n+                        \"External submissions are not supported before the exercise due date.\")).build();\n+            }\n         }\n+        else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4855fc5186c75c5dc0b604e571b446c24573a3e6"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzM0NTAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/TextSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTo1MDozMFrOGwXWsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTo1MDozMFrOGwXWsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2NzQ3NQ==", "bodyText": "I like forbidden() here more", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453367475", "createdAt": "2020-07-12T21:50:30Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/TextSubmissionResource.java", "diffHunk": "@@ -248,8 +257,16 @@ else if (!authorizationCheckService.isAtLeastInstructorForExercise(exercise)) {\n         }\n \n         // Tutors cannot start assessing submissions if the exercise due date hasn't been reached yet\n-        if (exercise.getDueDate() != null && exercise.getDueDate().isAfter(ZonedDateTime.now())) {\n-            return notFound();\n+        if (exam != null) {\n+            ZonedDateTime latestIndiviudalExamEndDate = examService.getLatestIndiviudalExamEndDate(exam);\n+            if (latestIndiviudalExamEndDate != null && latestIndiviudalExamEndDate.isAfter(ZonedDateTime.now())) {\n+                return notFound();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4855fc5186c75c5dc0b604e571b446c24573a3e6"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzM0NTEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/TextSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTo1MDozN1rOGwXWwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTo1MDozN1rOGwXWwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2NzQ4OQ==", "bodyText": "I like forbidden() here more", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453367489", "createdAt": "2020-07-12T21:50:37Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/TextSubmissionResource.java", "diffHunk": "@@ -248,8 +257,16 @@ else if (!authorizationCheckService.isAtLeastInstructorForExercise(exercise)) {\n         }\n \n         // Tutors cannot start assessing submissions if the exercise due date hasn't been reached yet\n-        if (exercise.getDueDate() != null && exercise.getDueDate().isAfter(ZonedDateTime.now())) {\n-            return notFound();\n+        if (exam != null) {\n+            ZonedDateTime latestIndiviudalExamEndDate = examService.getLatestIndiviudalExamEndDate(exam);\n+            if (latestIndiviudalExamEndDate != null && latestIndiviudalExamEndDate.isAfter(ZonedDateTime.now())) {\n+                return notFound();\n+            }\n+        }\n+        else {\n+            if (exercise.getDueDate() != null && exercise.getDueDate().isAfter(ZonedDateTime.now())) {\n+                return notFound();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4855fc5186c75c5dc0b604e571b446c24573a3e6"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzM1Mjg2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/course/dashboards/tutor-course-dashboard/tutor-course-dashboard.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMjowMDoyNlrOGwXaWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMjowMDoyNlrOGwXaWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2ODQwOQ==", "bodyText": "I don't see where isExamMode is initialized", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r453368409", "createdAt": "2020-07-12T22:00:26Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/course/dashboards/tutor-course-dashboard/tutor-course-dashboard.component.ts", "diffHunk": "@@ -73,6 +73,9 @@ export class TutorCourseDashboardComponent implements OnInit, AfterViewInit {\n      * On init set the courseID, load all exercises and statistics for tutors and set the identity for the AccountService.\n      */\n     ngOnInit(): void {\n+        if (this.isExamMode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4855fc5186c75c5dc0b604e571b446c24573a3e6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNDYzMzkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ExamSubmissionService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNjoxOTo1MFrOGxbL_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMToyMToxNFrOGxlzJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3ODg0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (latestIndividualExamEndDate != null && latestIndividualExamEndDate.isAfter(ZonedDateTime.now())) {\n          \n          \n            \n                        if (latestIndividualExamEndDate == null || latestIndividualExamEndDate.isAfter(ZonedDateTime.now())) {\n          \n      \n    \n    \n  \n\nI'm not entirely sure, but I think we should not be able to assess exercises if the latestIndividualExamDate is not set.", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454478844", "createdAt": "2020-07-14T16:19:50Z", "author": {"login": "JonasPetry"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ExamSubmissionService.java", "diffHunk": "@@ -125,4 +125,28 @@ private boolean isSubmissionInTime(Exercise exercise, StudentExam studentExam) {\n         }\n         return exam.getStartDate().isBefore(ZonedDateTime.now()) && calculatedEndDate.isAfter(ZonedDateTime.now());\n     }\n+\n+    /**\n+     * Checks if the current time is after the exercise due date (course exercises)\n+     * Checks if the current time is after the latest exam end date (exam exercises)\n+     * We need this check in order to see if the assessment of exercises can be started\n+     * @param exercise\n+     * @return boolean\n+     */\n+    public boolean checkIfExerciseDueDateIsReached(Exercise exercise) {\n+        Exam exam = exercise.getExerciseGroup().getExam();\n+        // Tutors cannot start assessing submissions if the exercise due date hasn't been reached yet\n+        if (exam != null) {\n+            ZonedDateTime latestIndividualExamEndDate = this.examService.getLatestIndiviudalExamEndDate(exam);\n+            if (latestIndividualExamEndDate != null && latestIndividualExamEndDate.isAfter(ZonedDateTime.now())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31bfe9b1056b413ba247705986d20d8d18476514"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU2NTE3NA==", "bodyText": "The current implementation is consistent with the regular assessment on Artemis.", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454565174", "createdAt": "2020-07-14T18:39:40Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ExamSubmissionService.java", "diffHunk": "@@ -125,4 +125,28 @@ private boolean isSubmissionInTime(Exercise exercise, StudentExam studentExam) {\n         }\n         return exam.getStartDate().isBefore(ZonedDateTime.now()) && calculatedEndDate.isAfter(ZonedDateTime.now());\n     }\n+\n+    /**\n+     * Checks if the current time is after the exercise due date (course exercises)\n+     * Checks if the current time is after the latest exam end date (exam exercises)\n+     * We need this check in order to see if the assessment of exercises can be started\n+     * @param exercise\n+     * @return boolean\n+     */\n+    public boolean checkIfExerciseDueDateIsReached(Exercise exercise) {\n+        Exam exam = exercise.getExerciseGroup().getExam();\n+        // Tutors cannot start assessing submissions if the exercise due date hasn't been reached yet\n+        if (exam != null) {\n+            ZonedDateTime latestIndividualExamEndDate = this.examService.getLatestIndiviudalExamEndDate(exam);\n+            if (latestIndividualExamEndDate != null && latestIndividualExamEndDate.isAfter(ZonedDateTime.now())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3ODg0NA=="}, "originalCommit": {"oid": "31bfe9b1056b413ba247705986d20d8d18476514"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYyODc3OA==", "bodyText": "What do you mean @jpbernius ?", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454628778", "createdAt": "2020-07-14T20:36:03Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ExamSubmissionService.java", "diffHunk": "@@ -125,4 +125,28 @@ private boolean isSubmissionInTime(Exercise exercise, StudentExam studentExam) {\n         }\n         return exam.getStartDate().isBefore(ZonedDateTime.now()) && calculatedEndDate.isAfter(ZonedDateTime.now());\n     }\n+\n+    /**\n+     * Checks if the current time is after the exercise due date (course exercises)\n+     * Checks if the current time is after the latest exam end date (exam exercises)\n+     * We need this check in order to see if the assessment of exercises can be started\n+     * @param exercise\n+     * @return boolean\n+     */\n+    public boolean checkIfExerciseDueDateIsReached(Exercise exercise) {\n+        Exam exam = exercise.getExerciseGroup().getExam();\n+        // Tutors cannot start assessing submissions if the exercise due date hasn't been reached yet\n+        if (exam != null) {\n+            ZonedDateTime latestIndividualExamEndDate = this.examService.getLatestIndiviudalExamEndDate(exam);\n+            if (latestIndividualExamEndDate != null && latestIndividualExamEndDate.isAfter(ZonedDateTime.now())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3ODg0NA=="}, "originalCommit": {"oid": "31bfe9b1056b413ba247705986d20d8d18476514"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1MjcxMA==", "bodyText": "For non-exam exercises, you can also assess if no end date is specified.", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454652710", "createdAt": "2020-07-14T21:21:14Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ExamSubmissionService.java", "diffHunk": "@@ -125,4 +125,28 @@ private boolean isSubmissionInTime(Exercise exercise, StudentExam studentExam) {\n         }\n         return exam.getStartDate().isBefore(ZonedDateTime.now()) && calculatedEndDate.isAfter(ZonedDateTime.now());\n     }\n+\n+    /**\n+     * Checks if the current time is after the exercise due date (course exercises)\n+     * Checks if the current time is after the latest exam end date (exam exercises)\n+     * We need this check in order to see if the assessment of exercises can be started\n+     * @param exercise\n+     * @return boolean\n+     */\n+    public boolean checkIfExerciseDueDateIsReached(Exercise exercise) {\n+        Exam exam = exercise.getExerciseGroup().getExam();\n+        // Tutors cannot start assessing submissions if the exercise due date hasn't been reached yet\n+        if (exam != null) {\n+            ZonedDateTime latestIndividualExamEndDate = this.examService.getLatestIndiviudalExamEndDate(exam);\n+            if (latestIndividualExamEndDate != null && latestIndividualExamEndDate.isAfter(ZonedDateTime.now())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ3ODg0NA=="}, "originalCommit": {"oid": "31bfe9b1056b413ba247705986d20d8d18476514"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTE5NjE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ExamSubmissionService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODo0NDo0MlrOGxgoVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMDozNjo1NVrOGxkXeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU2ODAyMQ==", "bodyText": "Any particular reason why we do this?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    else {\n          \n          \n            \n                        if (exercise.getDueDate() != null && exercise.getDueDate().isAfter(ZonedDateTime.now())) {\n          \n          \n            \n                            return false;\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                    else if (exercise.getDueDate() != null && exercise.getDueDate().isAfter(ZonedDateTime.now())) {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454568021", "createdAt": "2020-07-14T18:44:42Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ExamSubmissionService.java", "diffHunk": "@@ -125,4 +125,28 @@ private boolean isSubmissionInTime(Exercise exercise, StudentExam studentExam) {\n         }\n         return exam.getStartDate().isBefore(ZonedDateTime.now()) && calculatedEndDate.isAfter(ZonedDateTime.now());\n     }\n+\n+    /**\n+     * Checks if the current time is after the exercise due date (course exercises)\n+     * Checks if the current time is after the latest exam end date (exam exercises)\n+     * We need this check in order to see if the assessment of exercises can be started\n+     * @param exercise\n+     * @return boolean\n+     */\n+    public boolean checkIfExerciseDueDateIsReached(Exercise exercise) {\n+        Exam exam = exercise.getExerciseGroup().getExam();\n+        // Tutors cannot start assessing submissions if the exercise due date hasn't been reached yet\n+        if (exam != null) {\n+            ZonedDateTime latestIndividualExamEndDate = this.examService.getLatestIndiviudalExamEndDate(exam);\n+            if (latestIndividualExamEndDate != null && latestIndividualExamEndDate.isAfter(ZonedDateTime.now())) {\n+                return false;\n+            }\n+        }\n+        else {\n+            if (exercise.getDueDate() != null && exercise.getDueDate().isAfter(ZonedDateTime.now())) {\n+                return false;\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "640638225e67ee1a292e77dc391e4ce296cb8d89"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYyOTI0MQ==", "bodyText": "@jpbernius  I do not understand your first comment: \"The current implementation is consistent with the regular assessment on Artemis.\"", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454629241", "createdAt": "2020-07-14T20:36:55Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ExamSubmissionService.java", "diffHunk": "@@ -125,4 +125,28 @@ private boolean isSubmissionInTime(Exercise exercise, StudentExam studentExam) {\n         }\n         return exam.getStartDate().isBefore(ZonedDateTime.now()) && calculatedEndDate.isAfter(ZonedDateTime.now());\n     }\n+\n+    /**\n+     * Checks if the current time is after the exercise due date (course exercises)\n+     * Checks if the current time is after the latest exam end date (exam exercises)\n+     * We need this check in order to see if the assessment of exercises can be started\n+     * @param exercise\n+     * @return boolean\n+     */\n+    public boolean checkIfExerciseDueDateIsReached(Exercise exercise) {\n+        Exam exam = exercise.getExerciseGroup().getExam();\n+        // Tutors cannot start assessing submissions if the exercise due date hasn't been reached yet\n+        if (exam != null) {\n+            ZonedDateTime latestIndividualExamEndDate = this.examService.getLatestIndiviudalExamEndDate(exam);\n+            if (latestIndividualExamEndDate != null && latestIndividualExamEndDate.isAfter(ZonedDateTime.now())) {\n+                return false;\n+            }\n+        }\n+        else {\n+            if (exercise.getDueDate() != null && exercise.getDueDate().isAfter(ZonedDateTime.now())) {\n+                return false;\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU2ODAyMQ=="}, "originalCommit": {"oid": "640638225e67ee1a292e77dc391e4ce296cb8d89"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTM2OTc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTozNDowN1rOGxiS0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTozNDowN1rOGxiS0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5NTI4Mw==", "bodyText": "While this seems to be a correct implementation, it is hard to follow that this method does a useful check for non-exam exercises. See further comment in ExamSubmissionService.", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454595283", "createdAt": "2020-07-14T19:34:07Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadSubmissionResource.java", "diffHunk": "@@ -251,9 +250,10 @@ else if (!authCheckService.isAtLeastInstructorForExercise(exercise)) {\n             return badRequest();\n         }\n \n-        // Tutors cannot start assessing submissions if the exercise due date hasn't been reached yet\n-        if (fileUploadExercise.getDueDate() != null && fileUploadExercise.getDueDate().isAfter(ZonedDateTime.now())) {\n-            return notFound();\n+        // Check if tutors can start assessing the students submission\n+        boolean startAssessingSubmissions = this.examSubmissionService.checkIfExerciseDueDateIsReached(fileUploadExercise);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "640638225e67ee1a292e77dc391e4ce296cb8d89"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTM3NjMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ExamSubmissionService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTozNjowM1rOGxiWyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo1MzozMFrOGx239w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5NjI5OQ==", "bodyText": "I am wondering if this is the correct place for this method. I would prefer this to be part of a exam independent service.\nThe way this is currently used makes it hard to understand that this method does have relevance for non-exam exercises if not reading the comment (which I found hard to understand).", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454596299", "createdAt": "2020-07-14T19:36:03Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ExamSubmissionService.java", "diffHunk": "@@ -125,4 +125,28 @@ private boolean isSubmissionInTime(Exercise exercise, StudentExam studentExam) {\n         }\n         return exam.getStartDate().isBefore(ZonedDateTime.now()) && calculatedEndDate.isAfter(ZonedDateTime.now());\n     }\n+\n+    /**\n+     * Checks if the current time is after the exercise due date (course exercises)\n+     * Checks if the current time is after the latest exam end date (exam exercises)\n+     * We need this check in order to see if the assessment of exercises can be started\n+     * @param exercise\n+     * @return boolean\n+     */\n+    public boolean checkIfExerciseDueDateIsReached(Exercise exercise) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "640638225e67ee1a292e77dc391e4ce296cb8d89"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzMjQ3MQ==", "bodyText": "@jpbernius I moved it to the SubmissionService :)", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454932471", "createdAt": "2020-07-15T09:53:30Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ExamSubmissionService.java", "diffHunk": "@@ -125,4 +125,28 @@ private boolean isSubmissionInTime(Exercise exercise, StudentExam studentExam) {\n         }\n         return exam.getStartDate().isBefore(ZonedDateTime.now()) && calculatedEndDate.isAfter(ZonedDateTime.now());\n     }\n+\n+    /**\n+     * Checks if the current time is after the exercise due date (course exercises)\n+     * Checks if the current time is after the latest exam end date (exam exercises)\n+     * We need this check in order to see if the assessment of exercises can be started\n+     * @param exercise\n+     * @return boolean\n+     */\n+    public boolean checkIfExerciseDueDateIsReached(Exercise exercise) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5NjI5OQ=="}, "originalCommit": {"oid": "640638225e67ee1a292e77dc391e4ce296cb8d89"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTM4NzQ4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/course/dashboards/tutor-course-dashboard/tutor-course-dashboard.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTozOTozNVrOGxidkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTozOTozNVrOGxidkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5ODAzNQ==", "bodyText": "Spaces on Purpose?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            <li><span jhiTranslate=\"artemisApp.exam.endDate\"> Exam End Date</span> : {{ exam?.endDate | artemisDate }}</li>\n          \n          \n            \n                            <li><span jhiTranslate=\"artemisApp.exam.publishResultsDate\"> Publish Results Date</span> : {{ exam?.publishResultsDate | artemisDate }}</li>\n          \n          \n            \n                            <li><span jhiTranslate=\"artemisApp.exam.endDate\">Exam End Date</span> : {{ exam?.endDate | artemisDate }}</li>\n          \n          \n            \n                            <li><span jhiTranslate=\"artemisApp.exam.publishResultsDate\">Publish Results Date</span> : {{ exam?.publishResultsDate | artemisDate }}</li>", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454598035", "createdAt": "2020-07-14T19:39:35Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/course/dashboards/tutor-course-dashboard/tutor-course-dashboard.component.html", "diffHunk": "@@ -16,6 +16,14 @@ <h2 *ngIf=\"isExamMode\">{{ 'artemisApp.tutorCourseDashboard.pageHeaderExam' | tra\n             </h2>\n         </div>\n     </div>\n+    <div *ngIf=\"isExamMode\" class=\"row justify-content-between\">\n+        <div class=\"col-8\">\n+            <ul>\n+                <li><span jhiTranslate=\"artemisApp.exam.endDate\"> Exam End Date</span> : {{ exam?.endDate | artemisDate }}</li>\n+                <li><span jhiTranslate=\"artemisApp.exam.publishResultsDate\"> Publish Results Date</span> : {{ exam?.publishResultsDate | artemisDate }}</li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "640638225e67ee1a292e77dc391e4ce296cb8d89"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTQwMjQyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/assess/manual-result/programming-assessment-manual-result-dialog.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTo0Mzo1NlrOGximpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo1OTo1N1rOGx3G2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYwMDM1Nw==", "bodyText": "Not 100% sure, but I think unwrapping exerciseGroup should be implicit by if statement?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    const exam = this.participation.exercise.exerciseGroup!.exam!;\n          \n          \n            \n                                    const exam = this.participation.exercise.exerciseGroup.exam!;", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454600357", "createdAt": "2020-07-14T19:43:56Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/programming/assess/manual-result/programming-assessment-manual-result-dialog.component.ts", "diffHunk": "@@ -137,7 +140,15 @@ export class ProgrammingAssessmentManualResultDialogComponent implements OnInit\n                 tap(({ body: participation }) => {\n                     this.participation = participation! as ProgrammingExerciseStudentParticipation;\n                     this.result.participation = this.participation;\n-                    this.isOpenForSubmission = this.participation.exercise.dueDate === null || this.participation.exercise.dueDate.isAfter(moment());\n+\n+                    if (!!this.exercise.exerciseGroup) {\n+                        const exam = this.participation.exercise.exerciseGroup!.exam!;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "640638225e67ee1a292e77dc391e4ce296cb8d89"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzNTA1Mg==", "bodyText": "I get a warning with \"Object is possibly null\". Therefore, I would leave it :)", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454935052", "createdAt": "2020-07-15T09:58:01Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/programming/assess/manual-result/programming-assessment-manual-result-dialog.component.ts", "diffHunk": "@@ -137,7 +140,15 @@ export class ProgrammingAssessmentManualResultDialogComponent implements OnInit\n                 tap(({ body: participation }) => {\n                     this.participation = participation! as ProgrammingExerciseStudentParticipation;\n                     this.result.participation = this.participation;\n-                    this.isOpenForSubmission = this.participation.exercise.dueDate === null || this.participation.exercise.dueDate.isAfter(moment());\n+\n+                    if (!!this.exercise.exerciseGroup) {\n+                        const exam = this.participation.exercise.exerciseGroup!.exam!;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYwMDM1Nw=="}, "originalCommit": {"oid": "640638225e67ee1a292e77dc391e4ce296cb8d89"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzNjI4MA==", "bodyText": "\ud83c\udd97", "url": "https://github.com/ls1intum/Artemis/pull/1865#discussion_r454936280", "createdAt": "2020-07-15T09:59:57Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/programming/assess/manual-result/programming-assessment-manual-result-dialog.component.ts", "diffHunk": "@@ -137,7 +140,15 @@ export class ProgrammingAssessmentManualResultDialogComponent implements OnInit\n                 tap(({ body: participation }) => {\n                     this.participation = participation! as ProgrammingExerciseStudentParticipation;\n                     this.result.participation = this.participation;\n-                    this.isOpenForSubmission = this.participation.exercise.dueDate === null || this.participation.exercise.dueDate.isAfter(moment());\n+\n+                    if (!!this.exercise.exerciseGroup) {\n+                        const exam = this.participation.exercise.exerciseGroup!.exam!;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYwMDM1Nw=="}, "originalCommit": {"oid": "640638225e67ee1a292e77dc391e4ce296cb8d89"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4759, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}