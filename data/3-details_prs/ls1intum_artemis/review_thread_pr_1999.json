{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNTE5Nzc3", "number": 1999, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMDozNTo1OVrOEZajYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODozMDowOFrOEZmozg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDg0ODk2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exam/participate/exercises/programming/programming-exam-submission.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMDozNTo1OVrOHCNjPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjowMjoyMlrOHCbbmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA4MTIxNA==", "bodyText": "Is there a reason why you keep this method?", "url": "https://github.com/ls1intum/Artemis/pull/1999#discussion_r472081214", "createdAt": "2020-08-18T10:35:59Z", "author": {"login": "HanyaElhashemy"}, "path": "src/main/webapp/app/exam/participate/exercises/programming/programming-exam-submission.component.ts", "diffHunk": "@@ -34,28 +46,64 @@ export class ProgrammingExamSubmissionComponent extends ExamSubmissionComponent\n         return this.exercise;\n     }\n \n-    @ViewChild(ExamCodeEditorStudentContainerComponent, { static: false })\n-    codeEditorComponent: ExamCodeEditorStudentContainerComponent;\n-\n     isSaving: boolean;\n     readonly ButtonType = ButtonType;\n     readonly ButtonSize = ButtonSize;\n \n+    /**\n+     * On init set up the route param subscription.\n+     * Will load the participation according to participation Id with the latest result and result details.\n+     */\n+    ngOnInit(): void {\n+        // We lock the repository when the buildAndTestAfterDueDate is set and the due date has passed.\n+        const dueDateHasPassed = !this.exercise.dueDate || moment(this.exercise.dueDate).isBefore(moment());\n+        this.repositoryIsLocked = !!this.exercise.buildAndTestStudentSubmissionsAfterDueDate && !!this.exercise.dueDate && dueDateHasPassed;\n+\n+        const participation = { ...this.studentParticipation, exercise: this.exercise } as StudentParticipation;\n+        this.domainService.setDomain([DomainType.PARTICIPATION, participation]);\n+    }\n+\n+    reload(): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f58f4503e867e450c354da5c3b4d5c8c82dfd58"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwODYzNA==", "bodyText": "This was related to the issue mentioned by @kloessst . I uncommented these lines now.", "url": "https://github.com/ls1intum/Artemis/pull/1999#discussion_r472308634", "createdAt": "2020-08-18T16:02:22Z", "author": {"login": "schultek"}, "path": "src/main/webapp/app/exam/participate/exercises/programming/programming-exam-submission.component.ts", "diffHunk": "@@ -34,28 +46,64 @@ export class ProgrammingExamSubmissionComponent extends ExamSubmissionComponent\n         return this.exercise;\n     }\n \n-    @ViewChild(ExamCodeEditorStudentContainerComponent, { static: false })\n-    codeEditorComponent: ExamCodeEditorStudentContainerComponent;\n-\n     isSaving: boolean;\n     readonly ButtonType = ButtonType;\n     readonly ButtonSize = ButtonSize;\n \n+    /**\n+     * On init set up the route param subscription.\n+     * Will load the participation according to participation Id with the latest result and result details.\n+     */\n+    ngOnInit(): void {\n+        // We lock the repository when the buildAndTestAfterDueDate is set and the due date has passed.\n+        const dueDateHasPassed = !this.exercise.dueDate || moment(this.exercise.dueDate).isBefore(moment());\n+        this.repositoryIsLocked = !!this.exercise.buildAndTestStudentSubmissionsAfterDueDate && !!this.exercise.dueDate && dueDateHasPassed;\n+\n+        const participation = { ...this.studentParticipation, exercise: this.exercise } as StudentParticipation;\n+        this.domainService.setDomain([DomainType.PARTICIPATION, participation]);\n+    }\n+\n+    reload(): void {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA4MTIxNA=="}, "originalCommit": {"oid": "1f58f4503e867e450c354da5c3b4d5c8c82dfd58"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDg1NTQ5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exam/participate/exercises/programming/programming-exam-submission.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMDozNzo1NlrOHCNnbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjowMjozOFrOHCbcSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA4MjI4NA==", "bodyText": "same comment here", "url": "https://github.com/ls1intum/Artemis/pull/1999#discussion_r472082284", "createdAt": "2020-08-18T10:37:56Z", "author": {"login": "HanyaElhashemy"}, "path": "src/main/webapp/app/exam/participate/exercises/programming/programming-exam-submission.component.ts", "diffHunk": "@@ -34,28 +46,64 @@ export class ProgrammingExamSubmissionComponent extends ExamSubmissionComponent\n         return this.exercise;\n     }\n \n-    @ViewChild(ExamCodeEditorStudentContainerComponent, { static: false })\n-    codeEditorComponent: ExamCodeEditorStudentContainerComponent;\n-\n     isSaving: boolean;\n     readonly ButtonType = ButtonType;\n     readonly ButtonSize = ButtonSize;\n \n+    /**\n+     * On init set up the route param subscription.\n+     * Will load the participation according to participation Id with the latest result and result details.\n+     */\n+    ngOnInit(): void {\n+        // We lock the repository when the buildAndTestAfterDueDate is set and the due date has passed.\n+        const dueDateHasPassed = !this.exercise.dueDate || moment(this.exercise.dueDate).isBefore(moment());\n+        this.repositoryIsLocked = !!this.exercise.buildAndTestStudentSubmissionsAfterDueDate && !!this.exercise.dueDate && dueDateHasPassed;\n+\n+        const participation = { ...this.studentParticipation, exercise: this.exercise } as StudentParticipation;\n+        this.domainService.setDomain([DomainType.PARTICIPATION, participation]);\n+    }\n+\n+    reload(): void {\n+        // this.ngOnInit();\n+        // if (this.instructions) {\n+        //     this.instructions.refreshInstructions();\n+        // }\n+    }\n+\n+    /**\n+     * Update {@link Submission#isSynced} & {@link Submission#submitted} based on the CommitState.\n+     * The submission is only synced, if all changes are committed (CommitState.CLEAN).\n+     *\n+     * @param commitState current CommitState from CodeEditorActionsComponent\n+     */\n+    onCommitStateChange(commitState: CommitState): void {\n+        if (this.studentParticipation.submissions && this.studentParticipation.submissions.length > 0) {\n+            if (commitState === CommitState.CLEAN) {\n+                this.studentParticipation.submissions[0].submitted = true;\n+                this.studentParticipation.submissions[0].isSynced = true;\n+            }\n+        }\n+    }\n+\n+    onFileChanged() {\n+        if (this.studentParticipation.submissions && this.studentParticipation.submissions.length > 0) {\n+            this.studentParticipation.submissions[0].isSynced = false;\n+        }\n+    }\n+\n     hasUnsavedChanges(): boolean {\n         if (this.exercise.allowOfflineIde && !this.exercise.allowOnlineEditor) {\n             return false;\n         }\n-        return this.codeEditorComponent.editorState === EditorState.UNSAVED_CHANGES;\n+        return this.codeEditorContainer.editorState === EditorState.UNSAVED_CHANGES;\n     }\n \n     onActivate(): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f58f4503e867e450c354da5c3b4d5c8c82dfd58"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwODgxMA==", "bodyText": "see my answer above", "url": "https://github.com/ls1intum/Artemis/pull/1999#discussion_r472308810", "createdAt": "2020-08-18T16:02:38Z", "author": {"login": "schultek"}, "path": "src/main/webapp/app/exam/participate/exercises/programming/programming-exam-submission.component.ts", "diffHunk": "@@ -34,28 +46,64 @@ export class ProgrammingExamSubmissionComponent extends ExamSubmissionComponent\n         return this.exercise;\n     }\n \n-    @ViewChild(ExamCodeEditorStudentContainerComponent, { static: false })\n-    codeEditorComponent: ExamCodeEditorStudentContainerComponent;\n-\n     isSaving: boolean;\n     readonly ButtonType = ButtonType;\n     readonly ButtonSize = ButtonSize;\n \n+    /**\n+     * On init set up the route param subscription.\n+     * Will load the participation according to participation Id with the latest result and result details.\n+     */\n+    ngOnInit(): void {\n+        // We lock the repository when the buildAndTestAfterDueDate is set and the due date has passed.\n+        const dueDateHasPassed = !this.exercise.dueDate || moment(this.exercise.dueDate).isBefore(moment());\n+        this.repositoryIsLocked = !!this.exercise.buildAndTestStudentSubmissionsAfterDueDate && !!this.exercise.dueDate && dueDateHasPassed;\n+\n+        const participation = { ...this.studentParticipation, exercise: this.exercise } as StudentParticipation;\n+        this.domainService.setDomain([DomainType.PARTICIPATION, participation]);\n+    }\n+\n+    reload(): void {\n+        // this.ngOnInit();\n+        // if (this.instructions) {\n+        //     this.instructions.refreshInstructions();\n+        // }\n+    }\n+\n+    /**\n+     * Update {@link Submission#isSynced} & {@link Submission#submitted} based on the CommitState.\n+     * The submission is only synced, if all changes are committed (CommitState.CLEAN).\n+     *\n+     * @param commitState current CommitState from CodeEditorActionsComponent\n+     */\n+    onCommitStateChange(commitState: CommitState): void {\n+        if (this.studentParticipation.submissions && this.studentParticipation.submissions.length > 0) {\n+            if (commitState === CommitState.CLEAN) {\n+                this.studentParticipation.submissions[0].submitted = true;\n+                this.studentParticipation.submissions[0].isSynced = true;\n+            }\n+        }\n+    }\n+\n+    onFileChanged() {\n+        if (this.studentParticipation.submissions && this.studentParticipation.submissions.length > 0) {\n+            this.studentParticipation.submissions[0].isSynced = false;\n+        }\n+    }\n+\n     hasUnsavedChanges(): boolean {\n         if (this.exercise.allowOfflineIde && !this.exercise.allowOnlineEditor) {\n             return false;\n         }\n-        return this.codeEditorComponent.editorState === EditorState.UNSAVED_CHANGES;\n+        return this.codeEditorContainer.editorState === EditorState.UNSAVED_CHANGES;\n     }\n \n     onActivate(): void {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA4MjI4NA=="}, "originalCommit": {"oid": "1f58f4503e867e450c354da5c3b4d5c8c82dfd58"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjY4OTE4OnYy", "diffSide": "LEFT", "path": "src/main/webapp/app/exam/participate/exercises/programming/code-editor/exam-code-editor-student-container.component.ts", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo1MDowNFrOHCfjVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTo0MjoyNFrOHD31lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NjE0OA==", "bodyText": "This went missing and caused the problems with multiple programming exercises in an exam. I'd rather have unique instances of these services for each code editor instance but calling ngOnInit on reload also works.", "url": "https://github.com/ls1intum/Artemis/pull/1999#discussion_r472376148", "createdAt": "2020-08-18T17:50:04Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exam/participate/exercises/programming/code-editor/exam-code-editor-student-container.component.ts", "diffHunk": "@@ -1,124 +0,0 @@\n-import { Component, Input, OnInit, ViewChild } from '@angular/core';\n-import * as moment from 'moment';\n-import { TranslateService } from '@ngx-translate/core';\n-import { AlertService } from 'app/core/alert/alert.service';\n-import { CodeEditorBuildOutputComponent } from 'app/exercises/programming/shared/code-editor/build-output/code-editor-build-output.component';\n-import { ButtonSize } from 'app/shared/components/button.component';\n-import { CodeEditorSessionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-session.service';\n-import { CodeEditorFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-file.service';\n-import { CodeEditorActionsComponent } from 'app/exercises/programming/shared/code-editor/actions/code-editor-actions.component';\n-import { CodeEditorAceComponent } from 'app/exercises/programming/shared/code-editor/ace/code-editor-ace.component';\n-import { ExerciseType } from 'app/entities/exercise.model';\n-import { StudentParticipation } from 'app/entities/participation/student-participation.model';\n-import { CodeEditorContainerComponent } from 'app/exercises/programming/shared/code-editor/code-editor-mode-container.component';\n-import { CodeEditorInstructionsComponent } from 'app/exercises/programming/shared/code-editor/instructions/code-editor-instructions.component';\n-import { CodeEditorFileBrowserComponent } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser.component';\n-import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n-import { CommitState, DomainType, FileChange } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\n-import { DomainService } from 'app/exercises/programming/shared/code-editor/service/code-editor-domain.service';\n-import { CodeEditorConflictStateService } from 'app/exercises/programming/shared/code-editor/service/code-editor-conflict-state.service';\n-import { CodeEditorSubmissionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-submission.service';\n-import {\n-    CodeEditorBuildLogService,\n-    CodeEditorRepositoryFileService,\n-    CodeEditorRepositoryService,\n-} from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\n-\n-@Component({\n-    selector: 'jhi-exam-code-editor-student',\n-    templateUrl: './exam-code-editor-student-container.component.html',\n-    providers: [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b14b1d28edfcbce0bc1ed7387e1d33bfba581e05"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQyNTI3NA==", "bodyText": "I'm not sure if this would work with the projected components outside the code-editor-container, like result and instructions, since they would then have other service instances. As it works right now, I'm closing this.", "url": "https://github.com/ls1intum/Artemis/pull/1999#discussion_r472425274", "createdAt": "2020-08-18T19:19:51Z", "author": {"login": "schultek"}, "path": "src/main/webapp/app/exam/participate/exercises/programming/code-editor/exam-code-editor-student-container.component.ts", "diffHunk": "@@ -1,124 +0,0 @@\n-import { Component, Input, OnInit, ViewChild } from '@angular/core';\n-import * as moment from 'moment';\n-import { TranslateService } from '@ngx-translate/core';\n-import { AlertService } from 'app/core/alert/alert.service';\n-import { CodeEditorBuildOutputComponent } from 'app/exercises/programming/shared/code-editor/build-output/code-editor-build-output.component';\n-import { ButtonSize } from 'app/shared/components/button.component';\n-import { CodeEditorSessionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-session.service';\n-import { CodeEditorFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-file.service';\n-import { CodeEditorActionsComponent } from 'app/exercises/programming/shared/code-editor/actions/code-editor-actions.component';\n-import { CodeEditorAceComponent } from 'app/exercises/programming/shared/code-editor/ace/code-editor-ace.component';\n-import { ExerciseType } from 'app/entities/exercise.model';\n-import { StudentParticipation } from 'app/entities/participation/student-participation.model';\n-import { CodeEditorContainerComponent } from 'app/exercises/programming/shared/code-editor/code-editor-mode-container.component';\n-import { CodeEditorInstructionsComponent } from 'app/exercises/programming/shared/code-editor/instructions/code-editor-instructions.component';\n-import { CodeEditorFileBrowserComponent } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser.component';\n-import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n-import { CommitState, DomainType, FileChange } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\n-import { DomainService } from 'app/exercises/programming/shared/code-editor/service/code-editor-domain.service';\n-import { CodeEditorConflictStateService } from 'app/exercises/programming/shared/code-editor/service/code-editor-conflict-state.service';\n-import { CodeEditorSubmissionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-submission.service';\n-import {\n-    CodeEditorBuildLogService,\n-    CodeEditorRepositoryFileService,\n-    CodeEditorRepositoryService,\n-} from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\n-\n-@Component({\n-    selector: 'jhi-exam-code-editor-student',\n-    templateUrl: './exam-code-editor-student-container.component.html',\n-    providers: [", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NjE0OA=="}, "originalCommit": {"oid": "b14b1d28edfcbce0bc1ed7387e1d33bfba581e05"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI4Mjk4Nw==", "bodyText": "I agree to @kloessst that we should have unique instances of the services.\nIt took us a really long time and lots of debugging and testing to get this working correctly.\nWhy do you change this now?", "url": "https://github.com/ls1intum/Artemis/pull/1999#discussion_r473282987", "createdAt": "2020-08-19T19:56:18Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exam/participate/exercises/programming/code-editor/exam-code-editor-student-container.component.ts", "diffHunk": "@@ -1,124 +0,0 @@\n-import { Component, Input, OnInit, ViewChild } from '@angular/core';\n-import * as moment from 'moment';\n-import { TranslateService } from '@ngx-translate/core';\n-import { AlertService } from 'app/core/alert/alert.service';\n-import { CodeEditorBuildOutputComponent } from 'app/exercises/programming/shared/code-editor/build-output/code-editor-build-output.component';\n-import { ButtonSize } from 'app/shared/components/button.component';\n-import { CodeEditorSessionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-session.service';\n-import { CodeEditorFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-file.service';\n-import { CodeEditorActionsComponent } from 'app/exercises/programming/shared/code-editor/actions/code-editor-actions.component';\n-import { CodeEditorAceComponent } from 'app/exercises/programming/shared/code-editor/ace/code-editor-ace.component';\n-import { ExerciseType } from 'app/entities/exercise.model';\n-import { StudentParticipation } from 'app/entities/participation/student-participation.model';\n-import { CodeEditorContainerComponent } from 'app/exercises/programming/shared/code-editor/code-editor-mode-container.component';\n-import { CodeEditorInstructionsComponent } from 'app/exercises/programming/shared/code-editor/instructions/code-editor-instructions.component';\n-import { CodeEditorFileBrowserComponent } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser.component';\n-import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n-import { CommitState, DomainType, FileChange } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\n-import { DomainService } from 'app/exercises/programming/shared/code-editor/service/code-editor-domain.service';\n-import { CodeEditorConflictStateService } from 'app/exercises/programming/shared/code-editor/service/code-editor-conflict-state.service';\n-import { CodeEditorSubmissionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-submission.service';\n-import {\n-    CodeEditorBuildLogService,\n-    CodeEditorRepositoryFileService,\n-    CodeEditorRepositoryService,\n-} from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\n-\n-@Component({\n-    selector: 'jhi-exam-code-editor-student',\n-    templateUrl: './exam-code-editor-student-container.component.html',\n-    providers: [", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NjE0OA=="}, "originalCommit": {"oid": "b14b1d28edfcbce0bc1ed7387e1d33bfba581e05"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc0Njk3Mw==", "bodyText": "I could add the services to the programming-exam-submission component as an extra, see my comment below. But as of functionality, this doesn't seem to be needed.", "url": "https://github.com/ls1intum/Artemis/pull/1999#discussion_r473746973", "createdAt": "2020-08-20T08:14:50Z", "author": {"login": "schultek"}, "path": "src/main/webapp/app/exam/participate/exercises/programming/code-editor/exam-code-editor-student-container.component.ts", "diffHunk": "@@ -1,124 +0,0 @@\n-import { Component, Input, OnInit, ViewChild } from '@angular/core';\n-import * as moment from 'moment';\n-import { TranslateService } from '@ngx-translate/core';\n-import { AlertService } from 'app/core/alert/alert.service';\n-import { CodeEditorBuildOutputComponent } from 'app/exercises/programming/shared/code-editor/build-output/code-editor-build-output.component';\n-import { ButtonSize } from 'app/shared/components/button.component';\n-import { CodeEditorSessionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-session.service';\n-import { CodeEditorFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-file.service';\n-import { CodeEditorActionsComponent } from 'app/exercises/programming/shared/code-editor/actions/code-editor-actions.component';\n-import { CodeEditorAceComponent } from 'app/exercises/programming/shared/code-editor/ace/code-editor-ace.component';\n-import { ExerciseType } from 'app/entities/exercise.model';\n-import { StudentParticipation } from 'app/entities/participation/student-participation.model';\n-import { CodeEditorContainerComponent } from 'app/exercises/programming/shared/code-editor/code-editor-mode-container.component';\n-import { CodeEditorInstructionsComponent } from 'app/exercises/programming/shared/code-editor/instructions/code-editor-instructions.component';\n-import { CodeEditorFileBrowserComponent } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser.component';\n-import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n-import { CommitState, DomainType, FileChange } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\n-import { DomainService } from 'app/exercises/programming/shared/code-editor/service/code-editor-domain.service';\n-import { CodeEditorConflictStateService } from 'app/exercises/programming/shared/code-editor/service/code-editor-conflict-state.service';\n-import { CodeEditorSubmissionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-submission.service';\n-import {\n-    CodeEditorBuildLogService,\n-    CodeEditorRepositoryFileService,\n-    CodeEditorRepositoryService,\n-} from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\n-\n-@Component({\n-    selector: 'jhi-exam-code-editor-student',\n-    templateUrl: './exam-code-editor-student-container.component.html',\n-    providers: [", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NjE0OA=="}, "originalCommit": {"oid": "b14b1d28edfcbce0bc1ed7387e1d33bfba581e05"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgyMjYxMg==", "bodyText": "We don't need it as we call ngOnInit now to set the right domain for the services when switching exercises. This was our first approach to solving our issues with mutliple programming exercises and it worked as far as I can tell.", "url": "https://github.com/ls1intum/Artemis/pull/1999#discussion_r473822612", "createdAt": "2020-08-20T09:42:24Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exam/participate/exercises/programming/code-editor/exam-code-editor-student-container.component.ts", "diffHunk": "@@ -1,124 +0,0 @@\n-import { Component, Input, OnInit, ViewChild } from '@angular/core';\n-import * as moment from 'moment';\n-import { TranslateService } from '@ngx-translate/core';\n-import { AlertService } from 'app/core/alert/alert.service';\n-import { CodeEditorBuildOutputComponent } from 'app/exercises/programming/shared/code-editor/build-output/code-editor-build-output.component';\n-import { ButtonSize } from 'app/shared/components/button.component';\n-import { CodeEditorSessionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-session.service';\n-import { CodeEditorFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-file.service';\n-import { CodeEditorActionsComponent } from 'app/exercises/programming/shared/code-editor/actions/code-editor-actions.component';\n-import { CodeEditorAceComponent } from 'app/exercises/programming/shared/code-editor/ace/code-editor-ace.component';\n-import { ExerciseType } from 'app/entities/exercise.model';\n-import { StudentParticipation } from 'app/entities/participation/student-participation.model';\n-import { CodeEditorContainerComponent } from 'app/exercises/programming/shared/code-editor/code-editor-mode-container.component';\n-import { CodeEditorInstructionsComponent } from 'app/exercises/programming/shared/code-editor/instructions/code-editor-instructions.component';\n-import { CodeEditorFileBrowserComponent } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser.component';\n-import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n-import { CommitState, DomainType, FileChange } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\n-import { DomainService } from 'app/exercises/programming/shared/code-editor/service/code-editor-domain.service';\n-import { CodeEditorConflictStateService } from 'app/exercises/programming/shared/code-editor/service/code-editor-conflict-state.service';\n-import { CodeEditorSubmissionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-submission.service';\n-import {\n-    CodeEditorBuildLogService,\n-    CodeEditorRepositoryFileService,\n-    CodeEditorRepositoryService,\n-} from 'app/exercises/programming/shared/code-editor/service/code-editor-repository.service';\n-\n-@Component({\n-    selector: 'jhi-exam-code-editor-student',\n-    templateUrl: './exam-code-editor-student-container.component.html',\n-    providers: [", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NjE0OA=="}, "originalCommit": {"oid": "b14b1d28edfcbce0bc1ed7387e1d33bfba581e05"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjgyODk0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/participate/code-editor-student-container.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODozMDowOFrOHCg78A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo1ODowNlrOHCh13w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM5ODgzMg==", "bodyText": "Do we need the ViewChild here? I think the instructions variable is never used.", "url": "https://github.com/ls1intum/Artemis/pull/1999#discussion_r472398832", "createdAt": "2020-08-18T18:30:08Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exercises/programming/participate/code-editor-student-container.component.ts", "diffHunk": "@@ -3,44 +3,33 @@ import { Observable, of } from 'rxjs';\n import { Subscription } from 'rxjs/Subscription';\n import { catchError, flatMap, map, switchMap, tap } from 'rxjs/operators';\n import * as moment from 'moment';\n-import { ParticipationService } from 'app/exercises/shared/participation/participation.service';\n-import { TranslateService } from '@ngx-translate/core';\n-import { ActivatedRoute } from '@angular/router';\n-import { AlertService } from 'app/core/alert/alert.service';\n import { ProgrammingExerciseParticipationService } from 'app/exercises/programming/manage/services/programming-exercise-participation.service';\n import { GuidedTourService } from 'app/guided-tour/guided-tour.service';\n import { codeEditorTour } from 'app/guided-tour/tours/code-editor-tour';\n-import { CodeEditorBuildOutputComponent } from 'app/exercises/programming/shared/code-editor/build-output/code-editor-build-output.component';\n import { ButtonSize } from 'app/shared/components/button.component';\n-import { CodeEditorSessionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-session.service';\n import { ResultService } from 'app/exercises/shared/result/result.service';\n import { DomainService } from 'app/exercises/programming/shared/code-editor/service/code-editor-domain.service';\n-import { CodeEditorFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-file.service';\n-import { CodeEditorActionsComponent } from 'app/exercises/programming/shared/code-editor/actions/code-editor-actions.component';\n-import { CodeEditorAceComponent } from 'app/exercises/programming/shared/code-editor/ace/code-editor-ace.component';\n import { ExerciseType } from 'app/entities/exercise.model';\n import { AssessmentType } from 'app/entities/assessment-type.model';\n import { StudentParticipation } from 'app/entities/participation/student-participation.model';\n import { Result } from 'app/entities/result.model';\n-import { CodeEditorContainerComponent } from 'app/exercises/programming/shared/code-editor/code-editor-mode-container.component';\n import { Feedback } from 'app/entities/feedback.model';\n-import { CodeEditorInstructionsComponent } from 'app/exercises/programming/shared/code-editor/instructions/code-editor-instructions.component';\n-import { CodeEditorFileBrowserComponent } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser.component';\n import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n import { DomainType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\n import { ExerciseHint } from 'app/entities/exercise-hint.model';\n import { ExerciseHintService } from 'app/exercises/shared/exercise-hint/manage/exercise-hint.service';\n+import { ActivatedRoute } from '@angular/router';\n+import { CodeEditorContainerComponent } from 'app/exercises/programming/shared/code-editor/container/code-editor-container.component';\n+import { ProgrammingExerciseInstructionComponent } from 'app/exercises/programming/shared/instructions-render/programming-exercise-instruction.component';\n+import { ComponentCanDeactivate } from 'app/shared/guard/can-deactivate.model';\n \n @Component({\n     selector: 'jhi-code-editor-student',\n     templateUrl: './code-editor-student-container.component.html',\n })\n-export class CodeEditorStudentContainerComponent extends CodeEditorContainerComponent implements OnInit, OnDestroy {\n-    @ViewChild(CodeEditorFileBrowserComponent, { static: false }) fileBrowser: CodeEditorFileBrowserComponent;\n-    @ViewChild(CodeEditorActionsComponent, { static: false }) actions: CodeEditorActionsComponent;\n-    @ViewChild(CodeEditorBuildOutputComponent, { static: false }) buildOutput: CodeEditorBuildOutputComponent;\n-    @ViewChild(CodeEditorInstructionsComponent, { static: false }) instructions: CodeEditorInstructionsComponent;\n-    @ViewChild(CodeEditorAceComponent, { static: false }) aceEditor: CodeEditorAceComponent;\n+export class CodeEditorStudentContainerComponent implements OnInit, OnDestroy, ComponentCanDeactivate {\n+    @ViewChild(CodeEditorContainerComponent, { static: false }) codeEditorContainer: CodeEditorContainerComponent;\n+    @ViewChild(ProgrammingExerciseInstructionComponent, { static: false }) instructions: ProgrammingExerciseInstructionComponent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b14b1d28edfcbce0bc1ed7387e1d33bfba581e05"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxMzY2Mw==", "bodyText": "good catch", "url": "https://github.com/ls1intum/Artemis/pull/1999#discussion_r472413663", "createdAt": "2020-08-18T18:58:06Z", "author": {"login": "schultek"}, "path": "src/main/webapp/app/exercises/programming/participate/code-editor-student-container.component.ts", "diffHunk": "@@ -3,44 +3,33 @@ import { Observable, of } from 'rxjs';\n import { Subscription } from 'rxjs/Subscription';\n import { catchError, flatMap, map, switchMap, tap } from 'rxjs/operators';\n import * as moment from 'moment';\n-import { ParticipationService } from 'app/exercises/shared/participation/participation.service';\n-import { TranslateService } from '@ngx-translate/core';\n-import { ActivatedRoute } from '@angular/router';\n-import { AlertService } from 'app/core/alert/alert.service';\n import { ProgrammingExerciseParticipationService } from 'app/exercises/programming/manage/services/programming-exercise-participation.service';\n import { GuidedTourService } from 'app/guided-tour/guided-tour.service';\n import { codeEditorTour } from 'app/guided-tour/tours/code-editor-tour';\n-import { CodeEditorBuildOutputComponent } from 'app/exercises/programming/shared/code-editor/build-output/code-editor-build-output.component';\n import { ButtonSize } from 'app/shared/components/button.component';\n-import { CodeEditorSessionService } from 'app/exercises/programming/shared/code-editor/service/code-editor-session.service';\n import { ResultService } from 'app/exercises/shared/result/result.service';\n import { DomainService } from 'app/exercises/programming/shared/code-editor/service/code-editor-domain.service';\n-import { CodeEditorFileService } from 'app/exercises/programming/shared/code-editor/service/code-editor-file.service';\n-import { CodeEditorActionsComponent } from 'app/exercises/programming/shared/code-editor/actions/code-editor-actions.component';\n-import { CodeEditorAceComponent } from 'app/exercises/programming/shared/code-editor/ace/code-editor-ace.component';\n import { ExerciseType } from 'app/entities/exercise.model';\n import { AssessmentType } from 'app/entities/assessment-type.model';\n import { StudentParticipation } from 'app/entities/participation/student-participation.model';\n import { Result } from 'app/entities/result.model';\n-import { CodeEditorContainerComponent } from 'app/exercises/programming/shared/code-editor/code-editor-mode-container.component';\n import { Feedback } from 'app/entities/feedback.model';\n-import { CodeEditorInstructionsComponent } from 'app/exercises/programming/shared/code-editor/instructions/code-editor-instructions.component';\n-import { CodeEditorFileBrowserComponent } from 'app/exercises/programming/shared/code-editor/file-browser/code-editor-file-browser.component';\n import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n import { DomainType } from 'app/exercises/programming/shared/code-editor/model/code-editor.model';\n import { ExerciseHint } from 'app/entities/exercise-hint.model';\n import { ExerciseHintService } from 'app/exercises/shared/exercise-hint/manage/exercise-hint.service';\n+import { ActivatedRoute } from '@angular/router';\n+import { CodeEditorContainerComponent } from 'app/exercises/programming/shared/code-editor/container/code-editor-container.component';\n+import { ProgrammingExerciseInstructionComponent } from 'app/exercises/programming/shared/instructions-render/programming-exercise-instruction.component';\n+import { ComponentCanDeactivate } from 'app/shared/guard/can-deactivate.model';\n \n @Component({\n     selector: 'jhi-code-editor-student',\n     templateUrl: './code-editor-student-container.component.html',\n })\n-export class CodeEditorStudentContainerComponent extends CodeEditorContainerComponent implements OnInit, OnDestroy {\n-    @ViewChild(CodeEditorFileBrowserComponent, { static: false }) fileBrowser: CodeEditorFileBrowserComponent;\n-    @ViewChild(CodeEditorActionsComponent, { static: false }) actions: CodeEditorActionsComponent;\n-    @ViewChild(CodeEditorBuildOutputComponent, { static: false }) buildOutput: CodeEditorBuildOutputComponent;\n-    @ViewChild(CodeEditorInstructionsComponent, { static: false }) instructions: CodeEditorInstructionsComponent;\n-    @ViewChild(CodeEditorAceComponent, { static: false }) aceEditor: CodeEditorAceComponent;\n+export class CodeEditorStudentContainerComponent implements OnInit, OnDestroy, ComponentCanDeactivate {\n+    @ViewChild(CodeEditorContainerComponent, { static: false }) codeEditorContainer: CodeEditorContainerComponent;\n+    @ViewChild(ProgrammingExerciseInstructionComponent, { static: false }) instructions: ProgrammingExerciseInstructionComponent;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM5ODgzMg=="}, "originalCommit": {"oid": "b14b1d28edfcbce0bc1ed7387e1d33bfba581e05"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4841, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}