{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MzI0NzQ0", "number": 1168, "title": "Feature/programming exercise/mock connector requests for tests", "bodyText": "Checklist\n\n I tested all changes and all related features with different users (student, tutor, instructor, admin) on the test server https://artemistest.ase.in.tum.de.\n Server: I added multiple integration tests (Spring) related to the features\n Server: I documented the Java code using JavaDoc style.\n\nMotivation and Context\n\n\nCurrently, we always mock our connector services (e.g. Bitbucket, Bamboo) when testing programming exercises. We want to only mock the requests to the CI and VCS servers and not the Spring service itself, so we also cover the code in these cases.\nDescription\n\nI added two new tests (setup and start programming exercise), for  which all requests to external services get mocked by Spring's MockRestServiceServer. The added benefit, besides that we actually run the code in our BambooService and BitbucketService is that we also test the actual values that requests to the external services contain. A request gets mocked by matching the contents and headers against some predefined values. Only when these values are equal, the request gets mocked. Otherwise, an exception is thrown. Because of that, the test will only succeed if the connector services process the parameters as expected.\nBecause this PR would be too big, I made a second PR containing only the production code changes: #1169 . After we merge this, I will finalize this PR.\nIn order to be able to mock everything, I also had to make a couple of other adaptions:\n\nI added a BambooServerConfiguration that creates beans for the Bamboo server and client. Before that, these objects got instantiated in the methods themselves, so we couldn't mock anything that got routed through them. Since we send requests through these objects, we also have to be able to inject mock instances, so I had to refactor the configuration into Spring beans.\nThe BitbucketBambooUpdateService is not new! I just refactored the old BambooUpdateService that only encapsulated the BitbucketBambooUpdateService in an inner class. This made no sense and meant only having one additional unused object.\nThe Bitbucket and Bamboo services now have dedicated RestTemplates that are necessary for mocking the REST requests for both of them separately . Those templates still are plain Spring RestTemplates without any modification.\nThe BambooBuildPlanUpdateProvider is unmodified code from the old BitbucketBambooUpdateService that @krusche once extracted from the third party BambooClient. I had to move this code to a separate bean, because it also calls services, that perform REST requests (but not using Spring's RestTemplate). That is why we have to mock this whole service when executing tests, which is only possible if it is an injected bean.\nThere is a couple of new DTOs that we send to the Bitbucket/Bamboo servers. In our old code,  we just manually put those values into Maps and serialized them. Testing this is not ideal, because we would have to copy a lot of code. This way, all models get managed in those DTOs and we can be sure, that both the tests and the productive code use the same data structures (So testing for equality is easier).\n\nIn this PR:\n\nI also started moving String values for our REST API endpoints to constant classes, so we don't have to copy them in our tests, but can just reference the constant, so we can guarantee that the productive and the test code both use the same values.\n\nSteps for Testing\n\n\nRun all Java tests\nCreate, edit and participate in a programming exercise. Everything should work as before.", "createdAt": "2020-01-05T18:26:56Z", "url": "https://github.com/ls1intum/Artemis/pull/1168", "merged": true, "mergeCommit": {"oid": "ed21ab7a05ba50c652452094b208096e6fecff63"}, "closed": true, "closedAt": "2020-01-09T21:59:27Z", "author": {"login": "ungaralex"}, "timelineItems": {"totalCount": 48, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2cPw6AH2gAyMzU5MzI0NzQ0OjYxOTlmNzIwZGVjYWRmOGE2NjI4ZTJmMGM3NWQyZjViZTI3NTA4NWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4xOMCAFqTM0MDgzOTcyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6199f720decadf8a6628e2f0c75d2f5be275085c", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/6199f720decadf8a6628e2f0c75d2f5be275085c", "committedDate": "2020-01-02T16:21:24Z", "message": "Mock setup programming exercise check project requests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0a12ce2aee11bac32da05f5261e6c4ab8ba4b53", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/c0a12ce2aee11bac32da05f5261e6c4ab8ba4b53", "committedDate": "2020-01-02T17:09:23Z", "message": "Mock create project for exercise rest calls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91b74e50b2771872acf2db03b974c7bbeaa551cf", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/91b74e50b2771872acf2db03b974c7bbeaa551cf", "committedDate": "2020-01-02T17:55:15Z", "message": "Mock programming exercise setup file and git services"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ec6829011955b82b7a7a9570498ea7f28c87f45", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/7ec6829011955b82b7a7a9570498ea7f28c87f45", "committedDate": "2020-01-02T18:58:15Z", "message": "Inject BambooServer into BambooBuildPlanService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "716a7b44c316fecd1278cf2b3100ca68926a6c69", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/716a7b44c316fecd1278cf2b3100ca68926a6c69", "committedDate": "2020-01-02T18:59:16Z", "message": "Mock addWebHooks requests in setup programming exercise tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce1066a58e748183f86c617ce45941bfbc78d729", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/ce1066a58e748183f86c617ce45941bfbc78d729", "committedDate": "2020-01-02T19:00:33Z", "message": "Refactor BitbucketSearchDTO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7436abe13f063b61a899e53aa5f0bfddb3f9b96f", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/7436abe13f063b61a899e53aa5f0bfddb3f9b96f", "committedDate": "2020-01-02T19:01:03Z", "message": "Mock Bamboo permission requests for programming exercise setup tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53427ccd4f843f5e1f328c9e5e4c2896d56da72c", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/53427ccd4f843f5e1f328c9e5e4c2896d56da72c", "committedDate": "2020-01-02T23:26:10Z", "message": "Refactor ProgrammingExerciseResource endpoints to constants class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33ee81f5c41c8b881357f558666d9a257159af38", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/33ee81f5c41c8b881357f558666d9a257159af38", "committedDate": "2020-01-02T23:38:32Z", "message": "Reset mocks in ProgrammingExerciseBitbucketBambooIntegrationTest on tearDown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41d47c8daf51f1f1dcde16ffc750d9e84a7869fa", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/41d47c8daf51f1f1dcde16ffc750d9e84a7869fa", "committedDate": "2020-01-03T14:32:33Z", "message": "Reset database after test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de8473fd0e93c9f2db4994e12ff3a4de08e93280", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/de8473fd0e93c9f2db4994e12ff3a4de08e93280", "committedDate": "2020-01-03T16:43:12Z", "message": "Mock Bitbucket calls for start programming exercise"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58d6020af4315872745b0fdf1f9326f5d9864ec9", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/58d6020af4315872745b0fdf1f9326f5d9864ec9", "committedDate": "2020-01-03T18:17:53Z", "message": "Mock Bamboo copy repository\n\nAlso refactor BambooUpdateService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8729db6ba883426a25d2d6b5ef57949d6778434", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/d8729db6ba883426a25d2d6b5ef57949d6778434", "committedDate": "2020-01-03T19:04:47Z", "message": "Mock BitbucketBambooUpdateService for start exercise test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a30e14aa714a5b775399038e1fec7fa053e0a926", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/a30e14aa714a5b775399038e1fec7fa053e0a926", "committedDate": "2020-01-03T19:51:44Z", "message": "Wrap up programming exercise start participation connector integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca84a803d45f0a03493d60ede217f2010a97dbb6", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/ca84a803d45f0a03493d60ede217f2010a97dbb6", "committedDate": "2020-01-03T21:33:13Z", "message": "Fix programming exercise integration tests\n\nRemove hardcoded constants\nProperly mock git service calls and responses where necessary\nCorrectly fill generated test participations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5297caea16ef7c5782d9a5a52cf4b1e8b802f61e", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/5297caea16ef7c5782d9a5a52cf4b1e8b802f61e", "committedDate": "2020-01-03T21:56:12Z", "message": "Increase delay before checking scheduled tasks in ProgrammingExerciseScheduleServiceTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c56d1048070bd9e80f2e3bf578d64bafc0e8275", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/1c56d1048070bd9e80f2e3bf578d64bafc0e8275", "committedDate": "2020-01-03T22:09:20Z", "message": "Remove MockitoVerfication since Verifiable is sufficient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac017588d12dedad4b6c1c690e0302a407989b92", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/ac017588d12dedad4b6c1c690e0302a407989b92", "committedDate": "2020-01-04T17:11:11Z", "message": "Move CI_TOKEN and related code from AbstractVersionControlService to GitLabService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a28ec77f0c56b61c5d0267cad38201d972e2a99", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/8a28ec77f0c56b61c5d0267cad38201d972e2a99", "committedDate": "2020-01-04T17:33:17Z", "message": "Merge branch 'develop' into feature/programming-exercise/mock-connector-requests-for-tests\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/config/RestTemplateConfiguration.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/BambooBuildPlanService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/BambooService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/BambooUpdateService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/BitbucketService.java\n#\tsrc/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingSubmissionAndResultIntegrationTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c1dad5f98410c6b032f6d97c434efb906eba7d4", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/7c1dad5f98410c6b032f6d97c434efb906eba7d4", "committedDate": "2020-01-04T17:56:21Z", "message": "Fix merge errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfd0883041e2453aa7895cb4b7bb9ce6d9f47966", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/cfd0883041e2453aa7895cb4b7bb9ce6d9f47966", "committedDate": "2020-01-05T18:05:29Z", "message": "Merge branch 'develop' into feature/programming-exercise/mock-connector-requests-for-tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39d67b7c789a83da72722d69c7368183a62f42d0", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/39d67b7c789a83da72722d69c7368183a62f42d0", "committedDate": "2020-01-05T18:33:32Z", "message": "Fix @Value in test after yml refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b7ba47a73d0c422cc9cb0c4fbd0d208eadafb70", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/6b7ba47a73d0c422cc9cb0c4fbd0d208eadafb70", "committedDate": "2020-01-07T13:04:52Z", "message": "Merge branch 'develop' into feature/programming-exercise/mock-connector-requests-for-tests\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java\n#\tsrc/test/java/de/tum/in/www1/artemis/util/DatabaseUtilService.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0494fe20b68908a4c2b1e49b8681482187bb482", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/e0494fe20b68908a4c2b1e49b8681482187bb482", "committedDate": "2020-01-07T13:35:40Z", "message": "Fix programming exercise tests after merge of develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7457647dbc9c860578f2c9b440b5bc9d1475885", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/e7457647dbc9c860578f2c9b440b5bc9d1475885", "committedDate": "2020-01-07T13:49:02Z", "message": "Use doReturn instead of when do for spied beans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aebc09b2e0fe43b767823cb8c05cf4948ca3464f", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/aebc09b2e0fe43b767823cb8c05cf4948ca3464f", "committedDate": "2020-01-07T14:43:09Z", "message": "Merge branch 'develop' into feature/programming-exercise/mock-connector-requests-for-tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87ddeb64a4f17cdd919240782dd005749b89e7a4", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/87ddeb64a4f17cdd919240782dd005749b89e7a4", "committedDate": "2020-01-07T14:55:09Z", "message": "Show log output in gradle tests for debugging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16382e8520845f540a33ca3bd0493411f5e079de", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/16382e8520845f540a33ca3bd0493411f5e079de", "committedDate": "2020-01-07T15:12:35Z", "message": "Mock trigger build requests on instructor trigger test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2b7156fa43bd74e81fde5e4a974a0cf73a855bc", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/c2b7156fa43bd74e81fde5e4a974a0cf73a855bc", "committedDate": "2020-01-07T15:40:51Z", "message": "Mock request build for manual trigger build test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93a77f5f11ea63549b90a55b78fb1d3b8dfbf7fa", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/93a77f5f11ea63549b90a55b78fb1d3b8dfbf7fa", "committedDate": "2020-01-07T15:51:37Z", "message": "Mock more trigger build requests in integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db667ff6b1a134c520310b7e4f786354cbaa98f5", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/db667ff6b1a134c520310b7e4f786354cbaa98f5", "committedDate": "2020-01-08T12:31:27Z", "message": "Merge branch 'develop' into feature/programming-exercise/mock-connector-requests-for-tests\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/BitbucketBambooUpdateService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanUpdateProvider.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fcede33ef39eea2d52f92b1672ad8fb80f4c5d4", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/2fcede33ef39eea2d52f92b1672ad8fb80f4c5d4", "committedDate": "2020-01-08T12:47:02Z", "message": "Revert unnecessary changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e83d6d0a77480239488a23d1d2d738dca2c4fc27", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/e83d6d0a77480239488a23d1d2d738dca2c4fc27", "committedDate": "2020-01-08T12:51:09Z", "message": "Revert unnecessary changes to tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be7255065b0b9acdce09ea3dd252ef70bd9adbd2", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/be7255065b0b9acdce09ea3dd252ef70bd9adbd2", "committedDate": "2020-01-08T13:02:05Z", "message": "Add JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9be6c85b6d3045708998d61e849e560eda9d4df2", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/9be6c85b6d3045708998d61e849e560eda9d4df2", "committedDate": "2020-01-08T13:05:20Z", "message": "Remove unnecessary injected bean in tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d92137d0ee7d458540f237926c5e7ea05e099791", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/d92137d0ee7d458540f237926c5e7ea05e099791", "committedDate": "2020-01-08T13:10:16Z", "message": "Move commit hash object ID to constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "155dd5ba7d6f435cdbdc2af82c36ac33920b4b88", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/155dd5ba7d6f435cdbdc2af82c36ac33920b4b88", "committedDate": "2020-01-08T13:14:51Z", "message": "Revert scheduler test delays"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b4578dcb880610cae4576cf7638e0b419391eb5", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/2b4578dcb880610cae4576cf7638e0b419391eb5", "committedDate": "2020-01-08T13:33:55Z", "message": "Fix timing in schedule test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36270db2fc67f81efd091abeb16f7939767c5c9b", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/36270db2fc67f81efd091abeb16f7939767c5c9b", "committedDate": "2020-01-08T13:41:18Z", "message": "Undo schedule test delay changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMTg1MDMz", "url": "https://github.com/ls1intum/Artemis/pull/1168#pullrequestreview-340185033", "createdAt": "2020-01-08T22:25:14Z", "commit": {"oid": "36270db2fc67f81efd091abeb16f7939767c5c9b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMjoyNToxNVrOFbluEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMjoyNToxNVrOFbluEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ3Mzg3NA==", "bodyText": "can we avoid using transactional here? I removed it in a previous commit. I think you can just save the objects into the repositories if needed.", "url": "https://github.com/ls1intum/Artemis/pull/1168#discussion_r364473874", "createdAt": "2020-01-08T22:25:15Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/util/DatabaseUtilService.java", "diffHunk": "@@ -636,6 +662,7 @@ public ModelingSubmission addModelingSubmission(ModelingExercise exercise, Model\n         return submission;\n     }\n \n+    @Transactional  // needed for adding values to persistent hash set (submissions)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36270db2fc67f81efd091abeb16f7939767c5c9b"}, "originalPosition": 124}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMTg1Njcx", "url": "https://github.com/ls1intum/Artemis/pull/1168#pullrequestreview-340185671", "createdAt": "2020-01-08T22:26:41Z", "commit": {"oid": "36270db2fc67f81efd091abeb16f7939767c5c9b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e46c7bdc29d481139edbacd5e16c7256dccf18ac", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/e46c7bdc29d481139edbacd5e16c7256dccf18ac", "committedDate": "2020-01-09T15:45:43Z", "message": "Remove transactional from test DBUtilService"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNzE2MTU4", "url": "https://github.com/ls1intum/Artemis/pull/1168#pullrequestreview-340716158", "createdAt": "2020-01-09T18:12:49Z", "commit": {"oid": "e46c7bdc29d481139edbacd5e16c7256dccf18ac"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxODoxMjo0OVrOFb-7XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxODoxNToxOVrOFb-_dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4Njg3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public static final String PROGRAMMING_EXERCISE = PROGRAMMING_EXERCISES + \"/{id}\";\n          \n          \n            \n                    public static final String PROGRAMMING_EXERCISE = PROGRAMMING_EXERCISES + \"/{exerciseId}\";", "url": "https://github.com/ls1intum/Artemis/pull/1168#discussion_r364886876", "createdAt": "2020-01-09T18:12:49Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -789,10 +791,42 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n      * @param search The pageable search containing the page size, page number and query string\n      * @return The desired page, sorted and matching the given query\n      */\n-    @GetMapping(\"programming-exercises\")\n+    @GetMapping(Endpoints.PROGRAMMING_EXERCISES)\n     @PreAuthorize(\"hasAnyRole('INSTRUCTOR, ADMIN')\")\n     public ResponseEntity<SearchResultPageDTO> getAllExercisesOnPage(PageableSearchDTO<String> search) {\n         final var user = userService.getUserWithGroupsAndAuthorities();\n         return ResponseEntity.ok(programmingExerciseService.getAllOnPageWithSize(search, user));\n     }\n+\n+    public static final class Endpoints {\n+\n+        public static final String ROOT = \"/api\";\n+\n+        public static final String PROGRAMMING_EXERCISES = \"/programming-exercises\";\n+\n+        public static final String SETUP = PROGRAMMING_EXERCISES + \"/setup\";\n+\n+        public static final String GET_FOR_COURSE = \"/courses/{courseId}/programming-exercises\";\n+\n+        public static final String IMPORT = PROGRAMMING_EXERCISES + \"/import/{sourceExerciseId}\";\n+\n+        public static final String PROBLEM = \"/programming-exercises-problem\";\n+\n+        public static final String PROGRAMMING_EXERCISE = PROGRAMMING_EXERCISES + \"/{id}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46c7bdc29d481139edbacd5e16c7256dccf18ac"}, "originalPosition": 212}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NzA0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ResponseEntity<ProgrammingExerciseTestCaseStateDTO> hasAtLeastOneStudentResult(@PathVariable(\"id\") Long exerciseId) {\n          \n          \n            \n                public ResponseEntity<ProgrammingExerciseTestCaseStateDTO> hasAtLeastOneStudentResult(@PathVariable(\"exerciseId\") Long exerciseId) {", "url": "https://github.com/ls1intum/Artemis/pull/1168#discussion_r364887047", "createdAt": "2020-01-09T18:13:13Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -764,9 +766,9 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n      * @param exerciseId the id of a ProgrammingExercise\n      * @return the ResponseEntity with status 200 (OK) and ProgrammingExerciseTestCaseStateDTO. Returns 404 (notFound) if the exercise does not exist.\n      */\n-    @GetMapping(value = \"/programming-exercises/{exerciseId}/test-case-state\")\n+    @GetMapping(Endpoints.TEST_CASE_STATE)\n     @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n-    public ResponseEntity<ProgrammingExerciseTestCaseStateDTO> hasAtLeastOneStudentResult(@PathVariable Long exerciseId) {\n+    public ResponseEntity<ProgrammingExerciseTestCaseStateDTO> hasAtLeastOneStudentResult(@PathVariable(\"id\") Long exerciseId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46c7bdc29d481139edbacd5e16c7256dccf18ac"}, "originalPosition": 182}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NzE1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ResponseEntity<String> generateStructureOracleForExercise(@PathVariable Long id) {\n          \n          \n            \n                public ResponseEntity<String> generateStructureOracleForExercise(@PathVariable Long exerciseId) {", "url": "https://github.com/ls1intum/Artemis/pull/1168#discussion_r364887157", "createdAt": "2020-01-09T18:13:30Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -697,7 +699,7 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n      * @param id The ID of the programming exercise for which the structure oracle should get generated\n      * @return The ResponseEntity with status 201 (Created) or with status 400 (Bad Request) if the parameters are invalid\n      */\n-    @GetMapping(value = \"/programming-exercises/{id}/generate-tests\", produces = MediaType.TEXT_PLAIN_VALUE)\n+    @GetMapping(value = Endpoints.GENERATE_TESTS, produces = MediaType.TEXT_PLAIN_VALUE)\n     @PreAuthorize(\"hasAnyRole('INSTRUCTOR', 'ADMIN')\")\n     @FeatureToggle(Feature.PROGRAMMING_EXERCISES)\n     public ResponseEntity<String> generateStructureOracleForExercise(@PathVariable Long id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46c7bdc29d481139edbacd5e16c7256dccf18ac"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NzI2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ResponseEntity<Resource> exportSubmissionsByStudentLogins(@PathVariable(\"id\") Long exerciseId, @PathVariable String studentIds,\n          \n          \n            \n                public ResponseEntity<Resource> exportSubmissionsByStudentLogins(@PathVariable(\"exerciseId\") Long exerciseId, @PathVariable String studentIds,", "url": "https://github.com/ls1intum/Artemis/pull/1168#discussion_r364887264", "createdAt": "2020-01-09T18:13:44Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -591,10 +593,10 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n      * @return ResponseEntity with status\n      * @throws IOException if submissions can't be zippedRequestBody\n      */\n-    @PostMapping(value = \"/programming-exercises/{exerciseId}/export-repos-by-student-logins/{studentIds}\")\n+    @PostMapping(Endpoints.EXPORT_SUBMISSIONS_BY_STUDENT)\n     @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n     @FeatureToggle(Feature.PROGRAMMING_EXERCISES)\n-    public ResponseEntity<Resource> exportSubmissionsByStudentLogins(@PathVariable Long exerciseId, @PathVariable String studentIds,\n+    public ResponseEntity<Resource> exportSubmissionsByStudentLogins(@PathVariable(\"id\") Long exerciseId, @PathVariable String studentIds,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46c7bdc29d481139edbacd5e16c7256dccf18ac"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NzMxMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ResponseEntity<Resource> exportSubmissionsByParticipationIds(@PathVariable(\"id\") Long exerciseId, @PathVariable String participationIds,\n          \n          \n            \n                public ResponseEntity<Resource> exportSubmissionsByParticipationIds(@PathVariable(\"exerciseId\") Long exerciseId, @PathVariable String participationIds,", "url": "https://github.com/ls1intum/Artemis/pull/1168#discussion_r364887313", "createdAt": "2020-01-09T18:13:52Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -646,10 +648,10 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n      * @return ResponseEntity with status\n      * @throws IOException if submissions can't be zippedRequestBody\n      */\n-    @PostMapping(value = \"/programming-exercises/{exerciseId}/export-repos-by-participation-ids/{participationIds}\")\n+    @PostMapping(Endpoints.EXPORT_SUBMISSIONS_BY_PARTICIPATIONS)\n     @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n     @FeatureToggle(Feature.PROGRAMMING_EXERCISES)\n-    public ResponseEntity<Resource> exportSubmissionsByParticipationIds(@PathVariable Long exerciseId, @PathVariable String participationIds,\n+    public ResponseEntity<Resource> exportSubmissionsByParticipationIds(@PathVariable(\"id\") Long exerciseId, @PathVariable String participationIds,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46c7bdc29d481139edbacd5e16c7256dccf18ac"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NzM3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ResponseEntity<Void> combineTemplateRepositoryCommits(@PathVariable Long id) {\n          \n          \n            \n                public ResponseEntity<Void> combineTemplateRepositoryCommits(@PathVariable Long exerciseId) {", "url": "https://github.com/ls1intum/Artemis/pull/1168#discussion_r364887374", "createdAt": "2020-01-09T18:14:02Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -554,7 +556,7 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n      *              403 (Forbidden) if the user is not admin and course instructor or\n      *              500 (Internal Server Error)\n      */\n-    @PutMapping(value = \"/programming-exercises/{id}/combine-template-commits\", produces = MediaType.TEXT_PLAIN_VALUE)\n+    @PutMapping(value = Endpoints.COMBINE_COMMITS, produces = MediaType.TEXT_PLAIN_VALUE)\n     @PreAuthorize(\"hasAnyRole('INSTRUCTOR', 'ADMIN')\")\n     @FeatureToggle(Feature.PROGRAMMING_EXERCISES)\n     public ResponseEntity<Void> combineTemplateRepositoryCommits(@PathVariable Long id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46c7bdc29d481139edbacd5e16c7256dccf18ac"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NzU0MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ResponseEntity<ProgrammingExercise> getProgrammingExerciseWithAllParticipations(@PathVariable Long id) {\n          \n          \n            \n                public ResponseEntity<ProgrammingExercise> getProgrammingExerciseWithAllParticipations(@PathVariable Long exerciseId) {", "url": "https://github.com/ls1intum/Artemis/pull/1168#discussion_r364887541", "createdAt": "2020-01-09T18:14:28Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -489,7 +491,7 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n      * @param id the id of the programmingExercise to retrieve\n      * @return the ResponseEntity with status 200 (OK) and with body the programmingExercise, or with status 404 (Not Found)\n      */\n-    @GetMapping(\"/programming-exercises/{id}/with-participations\")\n+    @GetMapping(Endpoints.PROGRAMMING_EXERCISE_WITH_PARTICIPATIONS)\n     @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n     public ResponseEntity<ProgrammingExercise> getProgrammingExerciseWithAllParticipations(@PathVariable Long id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46c7bdc29d481139edbacd5e16c7256dccf18ac"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NzYwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public ResponseEntity<ProgrammingExercise> getProgrammingExercise(@PathVariable Long id) {\n          \n          \n            \n                public ResponseEntity<ProgrammingExercise> getProgrammingExercise(@PathVariable Long exerciseId) {", "url": "https://github.com/ls1intum/Artemis/pull/1168#discussion_r364887602", "createdAt": "2020-01-09T18:14:37Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -468,7 +470,7 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n      * @param id the id of the programmingExercise to retrieve\n      * @return the ResponseEntity with status 200 (OK) and with body the programmingExercise, or with status 404 (Not Found)\n      */\n-    @GetMapping(\"/programming-exercises/{id}\")\n+    @GetMapping(Endpoints.PROGRAMMING_EXERCISE)\n     @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n     public ResponseEntity<ProgrammingExercise> getProgrammingExercise(@PathVariable Long id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46c7bdc29d481139edbacd5e16c7256dccf18ac"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg4NzkyNA==", "bodyText": "Ideally we refactor this URL to something like\n/programming-exercises/{exerciseId}/problem-statement", "url": "https://github.com/ls1intum/Artemis/pull/1168#discussion_r364887924", "createdAt": "2020-01-09T18:15:19Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -416,7 +418,7 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n      * @param notificationText to notify the student group about the updated problemStatement on the programming exercise\n      * @return the ResponseEntity with status 200 (OK) and with body the updated problemStatement, with status 404 if the programmingExercise could not be found, or with 403 if the user does not have permissions to access the programming exercise.\n      */\n-    @PatchMapping(\"/programming-exercises-problem\")\n+    @PatchMapping(Endpoints.PROBLEM)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e46c7bdc29d481139edbacd5e16c7256dccf18ac"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffd5fe97ae841ca01395d0947d11e4097f3f7324", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/ffd5fe97ae841ca01395d0947d11e4097f3f7324", "committedDate": "2020-01-09T18:47:41Z", "message": "Rename \"id\" param to \"exerciseId\" in ProgrammingExerciseResource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "044a211f545770ec358e82a4e883ca255967ca44", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/044a211f545770ec358e82a4e883ca255967ca44", "committedDate": "2020-01-09T19:19:08Z", "message": "Refactor programming exercise problem statement update API endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c01a5b3441c68ef3d26e1469af78c283586ee27e", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/c01a5b3441c68ef3d26e1469af78c283586ee27e", "committedDate": "2020-01-09T19:21:26Z", "message": "Add JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a203ec9baa0e200b9a6a5913ec8aae46a8155b79", "author": {"user": {"login": "ungaralex", "name": "Alexander Ungar"}}, "url": "https://github.com/ls1intum/Artemis/commit/a203ec9baa0e200b9a6a5913ec8aae46a8155b79", "committedDate": "2020-01-09T19:30:52Z", "message": "Fix delay for Github?! actions server API schedule test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwODM5NzIz", "url": "https://github.com/ls1intum/Artemis/pull/1168#pullrequestreview-340839723", "createdAt": "2020-01-09T21:55:32Z", "commit": {"oid": "a203ec9baa0e200b9a6a5913ec8aae46a8155b79"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3048, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}