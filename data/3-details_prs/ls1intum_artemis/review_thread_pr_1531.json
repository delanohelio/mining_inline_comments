{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MTA5NzQ1", "number": 1531, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODozNjo1NlrOEEAefg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODo0NTozNVrOEEAqCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjM3NTY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/config/Constants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODozNjo1NlrOGhXWZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo1MzozN1rOGhZ4Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYzODc1Ng==", "bodyText": "Would be nice if singular and plural are consistent for /topic/newSubmission and /topic/newResults.", "url": "https://github.com/ls1intum/Artemis/pull/1531#discussion_r437638756", "createdAt": "2020-06-09T18:36:56Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/config/Constants.java", "diffHunk": "@@ -32,7 +32,11 @@\n \n     public static final String FILEPATH_ID_PLACHEOLDER = \"PLACEHOLDER_FOR_ID\";\n \n-    public static final String PARTICIPATION_TOPIC_ROOT = \"/topic/participation/\";\n+    public static final String EXERCISE_TOPIC_ROOT = \"/topic/exercise/\";\n+\n+    public static final String NEW_SUBMISSION_TOPIC = \"/topic/newSubmission\";\n+\n+    public static final String NEW_RESULT_TOPIC = \"/topic/newResults\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f50b11da4957d8fa3d4d7df9dd0f8f459033d779"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MDIzMA==", "bodyText": "I've changed it to /topic/newSubmissions (and removed some more duplications).", "url": "https://github.com/ls1intum/Artemis/pull/1531#discussion_r437680230", "createdAt": "2020-06-09T19:53:37Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/config/Constants.java", "diffHunk": "@@ -32,7 +32,11 @@\n \n     public static final String FILEPATH_ID_PLACHEOLDER = \"PLACEHOLDER_FOR_ID\";\n \n-    public static final String PARTICIPATION_TOPIC_ROOT = \"/topic/participation/\";\n+    public static final String EXERCISE_TOPIC_ROOT = \"/topic/exercise/\";\n+\n+    public static final String NEW_SUBMISSION_TOPIC = \"/topic/newSubmission\";\n+\n+    public static final String NEW_RESULT_TOPIC = \"/topic/newResults\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYzODc1Ng=="}, "originalCommit": {"oid": "f50b11da4957d8fa3d4d7df9dd0f8f459033d779"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjM4NDYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/config/websocket/WebsocketConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODozOTozOFrOGhXcSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo0NjozNVrOGhZp-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0MDI2NA==", "bodyText": "The method name suggests that it is checked whether the user is a TA or above but the actual check is done for instructor or above.", "url": "https://github.com/ls1intum/Artemis/pull/1531#discussion_r437640264", "createdAt": "2020-06-09T18:39:38Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/config/websocket/WebsocketConfiguration.java", "diffHunk": "@@ -228,4 +249,10 @@ private boolean isParticipationOwnedByUser(Principal principal, Long participati\n         StudentParticipation participation = participationService.findOneStudentParticipation(participationId);\n         return participation.isOwnedBy(principal.getName());\n     }\n+\n+    private boolean isUserTAOrHigherForExercise(Principal principal, Long exerciseId) {\n+        Exercise exercise = exerciseService.findOne(exerciseId);\n+        User user = userService.getUserWithGroupsAndAuthorities(principal.getName());\n+        return authorizationCheckService.isAtLeastInstructorForExercise(exercise, user);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f50b11da4957d8fa3d4d7df9dd0f8f459033d779"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3NjUzOQ==", "bodyText": "Very good catch! I'll fix it.", "url": "https://github.com/ls1intum/Artemis/pull/1531#discussion_r437676539", "createdAt": "2020-06-09T19:46:35Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/config/websocket/WebsocketConfiguration.java", "diffHunk": "@@ -228,4 +249,10 @@ private boolean isParticipationOwnedByUser(Principal principal, Long participati\n         StudentParticipation participation = participationService.findOneStudentParticipation(participationId);\n         return participation.isOwnedBy(principal.getName());\n     }\n+\n+    private boolean isUserTAOrHigherForExercise(Principal principal, Long exerciseId) {\n+        Exercise exercise = exerciseService.findOne(exerciseId);\n+        User user = userService.getUserWithGroupsAndAuthorities(principal.getName());\n+        return authorizationCheckService.isAtLeastInstructorForExercise(exercise, user);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0MDI2NA=="}, "originalCommit": {"oid": "f50b11da4957d8fa3d4d7df9dd0f8f459033d779"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjM5Mjg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODo0MTo1NlrOGhXhkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo1MjoyM1rOGhZ18A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0MTYxNg==", "bodyText": "Maybe there can be a static builder method that constructs this topic? At least /newSubmission should not be hardcoded and appear in multiple places.", "url": "https://github.com/ls1intum/Artemis/pull/1531#discussion_r437641616", "createdAt": "2020-06-09T18:41:56Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "diffHunk": "@@ -529,13 +528,27 @@ private String getProgrammingExerciseAllExerciseBuildsTriggeredTopic(Long progra\n      * @param submission ProgrammingSubmission\n      */\n     public void notifyUserAboutSubmission(ProgrammingSubmission submission) {\n-        String topic = Constants.PARTICIPATION_TOPIC_ROOT + submission.getParticipation().getId() + Constants.PROGRAMMING_SUBMISSION_TOPIC;\n-        messagingTemplate.convertAndSend(topic, submission);\n+        if (submission.getParticipation() instanceof StudentParticipation) {\n+            StudentParticipation studentParticipation = (StudentParticipation) submission.getParticipation();\n+            studentParticipation.getStudents().forEach(user -> messagingTemplate.convertAndSendToUser(user.getLogin(), NEW_SUBMISSION_TOPIC, submission));\n+        }\n+\n+        if (submission.getParticipation() != null && submission.getParticipation().getExercise() != null) {\n+            String exerciseTopic = EXERCISE_TOPIC_ROOT + submission.getParticipation().getExercise().getId() + \"/newSubmission\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f50b11da4957d8fa3d4d7df9dd0f8f459033d779"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3OTYwMA==", "bodyText": "I've created a builder for it.", "url": "https://github.com/ls1intum/Artemis/pull/1531#discussion_r437679600", "createdAt": "2020-06-09T19:52:23Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "diffHunk": "@@ -529,13 +528,27 @@ private String getProgrammingExerciseAllExerciseBuildsTriggeredTopic(Long progra\n      * @param submission ProgrammingSubmission\n      */\n     public void notifyUserAboutSubmission(ProgrammingSubmission submission) {\n-        String topic = Constants.PARTICIPATION_TOPIC_ROOT + submission.getParticipation().getId() + Constants.PROGRAMMING_SUBMISSION_TOPIC;\n-        messagingTemplate.convertAndSend(topic, submission);\n+        if (submission.getParticipation() instanceof StudentParticipation) {\n+            StudentParticipation studentParticipation = (StudentParticipation) submission.getParticipation();\n+            studentParticipation.getStudents().forEach(user -> messagingTemplate.convertAndSendToUser(user.getLogin(), NEW_SUBMISSION_TOPIC, submission));\n+        }\n+\n+        if (submission.getParticipation() != null && submission.getParticipation().getExercise() != null) {\n+            String exerciseTopic = EXERCISE_TOPIC_ROOT + submission.getParticipation().getExercise().getId() + \"/newSubmission\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0MTYxNg=="}, "originalCommit": {"oid": "f50b11da4957d8fa3d4d7df9dd0f8f459033d779"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjM5OTc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/WebsocketMessagingService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODo0NDowMVrOGhXl7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDowMjo1NlrOGhaMAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0MjczMw==", "bodyText": "Does not really explain what the method is actually checking.", "url": "https://github.com/ls1intum/Artemis/pull/1531#discussion_r437642733", "createdAt": "2020-06-09T18:44:01Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/WebsocketMessagingService.java", "diffHunk": "@@ -40,9 +48,46 @@ public void broadcastNewResult(Participation participation, Result result) {\n         var originalParticipation = result.getParticipation();\n         result.setParticipation(originalParticipation.copyParticipationId());\n \n-        messagingTemplate.convertAndSend(\"/topic/participation/\" + participation.getId() + \"/newResults\", result);\n+        // TODO: Are there other cases that must be handled here?\n+        if (participation instanceof StudentParticipation) {\n+            StudentParticipation studentParticipation = (StudentParticipation) participation;\n+            studentParticipation.getStudents().forEach(user -> messagingTemplate.convertAndSendToUser(user.getLogin(), NEW_RESULT_TOPIC, result));\n+        }\n+\n+        // Send to tutors, instructors and admins\n+        messagingTemplate.convertAndSend(getResultDestination(participation.getExercise().getId()), result);\n \n         // recover the participation because we might want to use it again after this method\n         result.setParticipation(originalParticipation);\n     }\n+\n+    /**\n+     * Returns true if the given destination should be handled by this service", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f50b11da4957d8fa3d4d7df9dd0f8f459033d779"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4Mjg3MA==", "bodyText": "You are right, I've adjusted the documentation.", "url": "https://github.com/ls1intum/Artemis/pull/1531#discussion_r437682870", "createdAt": "2020-06-09T19:58:33Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/WebsocketMessagingService.java", "diffHunk": "@@ -40,9 +48,46 @@ public void broadcastNewResult(Participation participation, Result result) {\n         var originalParticipation = result.getParticipation();\n         result.setParticipation(originalParticipation.copyParticipationId());\n \n-        messagingTemplate.convertAndSend(\"/topic/participation/\" + participation.getId() + \"/newResults\", result);\n+        // TODO: Are there other cases that must be handled here?\n+        if (participation instanceof StudentParticipation) {\n+            StudentParticipation studentParticipation = (StudentParticipation) participation;\n+            studentParticipation.getStudents().forEach(user -> messagingTemplate.convertAndSendToUser(user.getLogin(), NEW_RESULT_TOPIC, result));\n+        }\n+\n+        // Send to tutors, instructors and admins\n+        messagingTemplate.convertAndSend(getResultDestination(participation.getExercise().getId()), result);\n \n         // recover the participation because we might want to use it again after this method\n         result.setParticipation(originalParticipation);\n     }\n+\n+    /**\n+     * Returns true if the given destination should be handled by this service", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0MjczMw=="}, "originalCommit": {"oid": "f50b11da4957d8fa3d4d7df9dd0f8f459033d779"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MzQwNg==", "bodyText": "@madwau\n\nLeft some code comments.\n\nThanks for the feedback, I addressed the comments.", "url": "https://github.com/ls1intum/Artemis/pull/1531#discussion_r437683406", "createdAt": "2020-06-09T19:59:32Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/WebsocketMessagingService.java", "diffHunk": "@@ -40,9 +48,46 @@ public void broadcastNewResult(Participation participation, Result result) {\n         var originalParticipation = result.getParticipation();\n         result.setParticipation(originalParticipation.copyParticipationId());\n \n-        messagingTemplate.convertAndSend(\"/topic/participation/\" + participation.getId() + \"/newResults\", result);\n+        // TODO: Are there other cases that must be handled here?\n+        if (participation instanceof StudentParticipation) {\n+            StudentParticipation studentParticipation = (StudentParticipation) participation;\n+            studentParticipation.getStudents().forEach(user -> messagingTemplate.convertAndSendToUser(user.getLogin(), NEW_RESULT_TOPIC, result));\n+        }\n+\n+        // Send to tutors, instructors and admins\n+        messagingTemplate.convertAndSend(getResultDestination(participation.getExercise().getId()), result);\n \n         // recover the participation because we might want to use it again after this method\n         result.setParticipation(originalParticipation);\n     }\n+\n+    /**\n+     * Returns true if the given destination should be handled by this service", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0MjczMw=="}, "originalCommit": {"oid": "f50b11da4957d8fa3d4d7df9dd0f8f459033d779"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4NTI0OQ==", "bodyText": "Great!", "url": "https://github.com/ls1intum/Artemis/pull/1531#discussion_r437685249", "createdAt": "2020-06-09T20:02:56Z", "author": {"login": "madwau"}, "path": "src/main/java/de/tum/in/www1/artemis/service/WebsocketMessagingService.java", "diffHunk": "@@ -40,9 +48,46 @@ public void broadcastNewResult(Participation participation, Result result) {\n         var originalParticipation = result.getParticipation();\n         result.setParticipation(originalParticipation.copyParticipationId());\n \n-        messagingTemplate.convertAndSend(\"/topic/participation/\" + participation.getId() + \"/newResults\", result);\n+        // TODO: Are there other cases that must be handled here?\n+        if (participation instanceof StudentParticipation) {\n+            StudentParticipation studentParticipation = (StudentParticipation) participation;\n+            studentParticipation.getStudents().forEach(user -> messagingTemplate.convertAndSendToUser(user.getLogin(), NEW_RESULT_TOPIC, result));\n+        }\n+\n+        // Send to tutors, instructors and admins\n+        messagingTemplate.convertAndSend(getResultDestination(participation.getExercise().getId()), result);\n \n         // recover the participation because we might want to use it again after this method\n         result.setParticipation(originalParticipation);\n     }\n+\n+    /**\n+     * Returns true if the given destination should be handled by this service", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0MjczMw=="}, "originalCommit": {"oid": "f50b11da4957d8fa3d4d7df9dd0f8f459033d779"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjQwNTIyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/participate/programming-submission.service.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODo0NTozNVrOGhXpeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODo0NTozNVrOGhXpeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0MzY0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private participationToExercise = new Map<number, number>();\n          \n          \n            \n                private participationIdToExerciseId = new Map<number, number>();", "url": "https://github.com/ls1intum/Artemis/pull/1531#discussion_r437643640", "createdAt": "2020-06-09T18:45:35Z", "author": {"login": "madwau"}, "path": "src/main/webapp/app/exercises/programming/participate/programming-submission.service.ts", "diffHunk": "@@ -52,11 +52,15 @@ export class ProgrammingSubmissionService implements IProgrammingSubmissionServi\n     public PROGRAMMING_EXERCISE_RESOURCE_URL = SERVER_API_URL + 'api/programming-exercises/';\n     // Default value: 2 minutes.\n     private DEFAULT_EXPECTED_RESULT_ETA = 2 * 60 * 1000;\n-    private SUBMISSION_TEMPLATE_TOPIC = '/topic/participation/%participationId%/newSubmission';\n+    private SUBMISSION_TEMPLATE_TOPIC = '/topic/exercise/%exerciseId%/newSubmission';\n \n     private resultSubscriptions: { [participationId: number]: Subscription } = {};\n     // participationId -> topic\n     private submissionTopicsSubscribed = new Map<number, string>();\n+\n+    // participationId -> exerciseId\n+    private participationToExercise = new Map<number, number>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f50b11da4957d8fa3d4d7df9dd0f8f459033d779"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 6, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}