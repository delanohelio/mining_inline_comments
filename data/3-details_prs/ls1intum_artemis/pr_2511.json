{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzNjE0ODgy", "number": 2511, "title": "Feature/user statistics periods", "bodyText": "Checklist\n\n I tested all changes and all related features with different users (student, tutor, instructor, admin) on the test server https://artemistest.ase.in.tum.de.\n Server: I followed the coding and design guidelines.\n Server: I added @PreAuthorize and check the course groups for all new REST Calls (security)\n Server: I implemented the changes with a good performance and prevented too many database calls\n Server: I documented the Java code using JavaDoc style.\n Client: I followed the coding and design guidelines.\n Client: I added authorities to all new routes and check the course groups for displaying navigation elements (links, buttons)\n Client: I documented the TypeScript code using JSDoc style.\n Client: I translated all the newly inserted strings into German and English\n\nMotivation and Context\n\n\nNew features for the user statistics page\nDescription\n\n\ndecoupled the graph from the statistics component to prevent duplicated code with multiple graphs\nremoved deprecated code as this was highly confusing in the last PR\nadded the arrow functionality + 2 new graphs (active users, released exercises).\nActive users describe the amount of distinct users (Not including test users), which created a submission. Therefore, after uploading the first submission, the second submission in the same timeslot should not make a difference\n\nSteps for Testing\n\n\nLog in to Artemis\nNavigate to User statistics ( ->Server Administration -> User statistics)\ncreate new Exercises with ReleaseDates and submit solutions\nLook in the charts that the correct bar increased by one\n(You might choose releaseDates near 00:00 which are prone to errors)\nTry out the arrows and check that the values are correct as well as the description below the graph\n\nScreenshots\n\n\nThe initial start-view display the last week:\n\nIt is possible to switch timeslots of graphs independently from each other:\n\nThere are 4 tabs displaying 4 different timespans, for example Year Tab:", "createdAt": "2020-12-07T11:55:12Z", "url": "https://github.com/ls1intum/Artemis/pull/2511", "merged": true, "mergeCommit": {"oid": "5131ab524e2bc253b362fc3087e84bfe7078c407"}, "closed": true, "closedAt": "2020-12-17T07:58:31Z", "author": {"login": "FuchsDominik"}, "timelineItems": {"totalCount": 87, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdduU-dgH2gAyNTMzNjE0ODgyOjA3YmY4MDAwMzFiN2EyOGMyODk0Y2JhOWYyNTdjZjE3OWUxZDk2OTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdm-03ggFqTU1NDM1Mzg0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "07bf800031b7a28c2894cba9f257cf179e1d9690", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/07bf800031b7a28c2894cba9f257cf179e1d9690", "committedDate": "2020-11-18T13:39:35Z", "message": "first statistics changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "237fa4c1b5d62544d8acf45eff322951d46e24ca", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/237fa4c1b5d62544d8acf45eff322951d46e24ca", "committedDate": "2020-11-18T17:13:33Z", "message": "refactoring, not finished"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fd9708b21f3b4e5624f82983c67c35c7cf84339", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/8fd9708b21f3b4e5624f82983c67c35c7cf84339", "committedDate": "2020-11-18T17:14:31Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "add67a6275d793203cef64f2b73f098b618a8281", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/add67a6275d793203cef64f2b73f098b618a8281", "committedDate": "2020-11-20T16:58:03Z", "message": "users, active users and submission + some refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6b68b747ba8a9e4751ee00943a94b188ab09363", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/a6b68b747ba8a9e4751ee00943a94b188ab09363", "committedDate": "2020-11-20T16:59:59Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d806e960ba684c38def630c5ea117d054d9e789", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/1d806e960ba684c38def630c5ea117d054d9e789", "committedDate": "2020-11-20T21:34:26Z", "message": "added 2 new pieces of information and extracted logic into repository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "692040676db1b5d0eeca006847931eebe28d8e5e", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/692040676db1b5d0eeca006847931eebe28d8e5e", "committedDate": "2020-11-21T15:13:05Z", "message": "5 more aspects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dfec269a1b23d123783c5e74dc810f533f6f345", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/7dfec269a1b23d123783c5e74dc810f533f6f345", "committedDate": "2020-11-21T15:13:36Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2ac2cb368051d536a64273a489cb79a9bdb3d8d", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/a2ac2cb368051d536a64273a489cb79a9bdb3d8d", "committedDate": "2020-11-21T15:40:26Z", "message": "test commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc8fa323abc79b4610b93913d206f9020bbb2b97", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/cc8fa323abc79b4610b93913d206f9020bbb2b97", "committedDate": "2020-11-21T16:10:21Z", "message": "feedback implemented"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2677ff3bc025a91c337345786b578578cf238d2f", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/2677ff3bc025a91c337345786b578578cf238d2f", "committedDate": "2020-11-21T16:48:53Z", "message": "smaller fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e060a61a4235cd277b8f201ce165dc9c1ca4b54c", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/e060a61a4235cd277b8f201ce165dc9c1ca4b54c", "committedDate": "2020-11-23T10:00:01Z", "message": "start chart method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6a3f4db5198403c38d67e8b68596a874037fd2d", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/e6a3f4db5198403c38d67e8b68596a874037fd2d", "committedDate": "2020-11-23T10:00:50Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a877159af0d79ce866803ef5c55c54809a50485", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/6a877159af0d79ce866803ef5c55c54809a50485", "committedDate": "2020-11-24T20:37:41Z", "message": "two bar charts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3ee71192436db7adc679b27996695b2e3a88a92", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/a3ee71192436db7adc679b27996695b2e3a88a92", "committedDate": "2020-11-26T08:57:07Z", "message": "push server changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1363a012a75eefd126cbed5fed1342d8c6a7f89", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/a1363a012a75eefd126cbed5fed1342d8c6a7f89", "committedDate": "2020-11-27T11:32:23Z", "message": "added first graph with real values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee8f7c6e07ac1e3cddb5441fa33978b6b23ccd87", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/ee8f7c6e07ac1e3cddb5441fa33978b6b23ccd87", "committedDate": "2020-11-27T11:33:11Z", "message": "removed StatisticsObject"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b224b0adeaa80cf1fd6a0cdac7bb0773154e1497", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/b224b0adeaa80cf1fd6a0cdac7bb0773154e1497", "committedDate": "2020-11-27T11:33:28Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46c81aa6081caa603d5713a1e10b4d0b69151dd0", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/46c81aa6081caa603d5713a1e10b4d0b69151dd0", "committedDate": "2020-11-27T15:00:47Z", "message": "worked on year tab, week working"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "228da8ae7b96b1d35e110dc8a01aebe969812c5a", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/228da8ae7b96b1d35e110dc8a01aebe969812c5a", "committedDate": "2020-11-27T19:07:41Z", "message": "Refactored unused stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb02d3091ecb1d6f67cdf3d53e237668cdeb54e5", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/cb02d3091ecb1d6f67cdf3d53e237668cdeb54e5", "committedDate": "2020-11-27T19:08:23Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/ac7257d174ed321c706cf7f8a28037403a3871ae", "committedDate": "2020-11-27T19:44:24Z", "message": "Codacy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "499bb9fd70d8f4710fe3744189d0493f61a8db7d", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/499bb9fd70d8f4710fe3744189d0493f61a8db7d", "committedDate": "2020-11-28T16:09:13Z", "message": "Integrate Code Reviews"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c261e7ea86df36f0fc1d13f0ac96f1864a3046a", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/0c261e7ea86df36f0fc1d13f0ac96f1864a3046a", "committedDate": "2020-11-28T16:10:34Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26c304b14d682a3ce150db83b5a908274b647375", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/26c304b14d682a3ce150db83b5a908274b647375", "committedDate": "2020-11-30T11:37:49Z", "message": "refactor REST call url"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/93880c069ec7d455857ded7e074f90b4f68e2720", "committedDate": "2020-11-30T11:38:07Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea28fa7ce583b5250cde3499d6659b38eb254195", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/ea28fa7ce583b5250cde3499d6659b38eb254195", "committedDate": "2020-11-30T17:48:59Z", "message": "Address Stefan's comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "366a0ca658674e94cb50c2a87b3660bdc387288e", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/366a0ca658674e94cb50c2a87b3660bdc387288e", "committedDate": "2020-11-30T18:26:49Z", "message": "fix missing Text-block style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "098393562c8ad4db3f03a38571867afd437fe9e8", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/098393562c8ad4db3f03a38571867afd437fe9e8", "committedDate": "2020-11-30T19:14:42Z", "message": "fix missing Text-block style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6e30d7546138808db3176d23669807099621dc0", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/f6e30d7546138808db3176d23669807099621dc0", "committedDate": "2020-12-01T17:19:11Z", "message": "Implemented YEAR, MONTH and DAY and refactoring of client side"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d6534697b753b439a60ab864f3f78ebf93d9d58", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/1d6534697b753b439a60ab864f3f78ebf93d9d58", "committedDate": "2020-12-01T17:19:46Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c556e9eb255b463d67da7525fb68dae1a7eb6723", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/c556e9eb255b463d67da7525fb68dae1a7eb6723", "committedDate": "2020-12-01T18:16:10Z", "message": "active tab adjustments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06bde3aba39bf8a3d41d40b5feb72f06842389cc", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/06bde3aba39bf8a3d41d40b5feb72f06842389cc", "committedDate": "2020-12-02T09:59:22Z", "message": "removed unused Pattern and refactor URL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "892b65635224eff5ea01fe1f44eea001bed827e2", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/892b65635224eff5ea01fe1f44eea001bed827e2", "committedDate": "2020-12-02T09:59:36Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e437e19987e1db86f8be8026923a1d1be3b8099d", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/e437e19987e1db86f8be8026923a1d1be3b8099d", "committedDate": "2020-12-02T10:18:05Z", "message": "remove unused pattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c28777a4b7e9277e90cd36e2c8393421b7fad135", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/c28777a4b7e9277e90cd36e2c8393421b7fad135", "committedDate": "2020-12-02T13:00:27Z", "message": "set graph min, refactor server side"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec2dd757fe90b8b298c49ac20c408b84be5350af", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/ec2dd757fe90b8b298c49ac20c408b84be5350af", "committedDate": "2020-12-07T10:09:57Z", "message": "Arrow functionality"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f77bfa8770730cfa37cffce51b9114eadaefbb9", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/6f77bfa8770730cfa37cffce51b9114eadaefbb9", "committedDate": "2020-12-07T10:40:03Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics-periods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "034a94bf007a598d34c9bb3eb8eac5f75cb80b5d", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/034a94bf007a598d34c9bb3eb8eac5f75cb80b5d", "committedDate": "2020-12-07T11:51:31Z", "message": "improved arrow functionality and removed deprecated code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed0cd4ba68d5c0bf21fe8d4f939030c873cccf78", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/ed0cd4ba68d5c0bf21fe8d4f939030c873cccf78", "committedDate": "2020-12-08T16:57:51Z", "message": "added active users graph, refactored to more efficient db query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5777cfd8322460d0213460a3a805b9b79f1cb7c5", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/5777cfd8322460d0213460a3a805b9b79f1cb7c5", "committedDate": "2020-12-08T18:33:04Z", "message": "bugfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "217d0f121aa536af0fe3e6d50a94863844432af2", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/217d0f121aa536af0fe3e6d50a94863844432af2", "committedDate": "2020-12-08T19:11:54Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics-periods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8294e071e18e2492813fe3a1623603f8e6694ad", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/b8294e071e18e2492813fe3a1623603f8e6694ad", "committedDate": "2020-12-12T11:56:03Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics-periods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49ed7b284f6ed994c4d4b0814af44636d91987ee", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/49ed7b284f6ed994c4d4b0814af44636d91987ee", "committedDate": "2020-12-12T13:34:58Z", "message": "new graphs and server side refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87d229e2b652cf1f2bbb30567dcf522d8a963155", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/87d229e2b652cf1f2bbb30567dcf522d8a963155", "committedDate": "2020-12-12T16:05:30Z", "message": "refactored client side to encapsulate graph"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9491d442350cc34a23ce9b23205ffd0c9c1f07e4", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/9491d442350cc34a23ce9b23205ffd0c9c1f07e4", "committedDate": "2020-12-12T17:51:30Z", "message": "removed unused variables, imports and methods. changed db return value to hour for day"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "717c1e4b2161bf408d2712e0cc5ab644e56accbf", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/717c1e4b2161bf408d2712e0cc5ab644e56accbf", "committedDate": "2020-12-12T20:32:00Z", "message": "docu refactoring and a bugfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "674f426cb9d0355c5a5f3e724dbce2b7a28e7db3", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/674f426cb9d0355c5a5f3e724dbce2b7a28e7db3", "committedDate": "2020-12-13T16:43:39Z", "message": "workaround for distinct issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac936fab8c1728c52344842051a355d6c8296790", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/ac936fab8c1728c52344842051a355d6c8296790", "committedDate": "2020-12-13T16:44:04Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics-periods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc941fba5954550b6a21f4e0a091546fd6a446c3", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/cc941fba5954550b6a21f4e0a091546fd6a446c3", "committedDate": "2020-12-14T16:05:09Z", "message": "working version with workaround"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5113f8ed992a222f8f36bb7410948905ab459c6c", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/5113f8ed992a222f8f36bb7410948905ab459c6c", "committedDate": "2020-12-14T22:07:02Z", "message": "bugfix and minor docu refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b871aba5cd219b2f30b93c6a278df2439e44ec95", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/b871aba5cd219b2f30b93c6a278df2439e44ec95", "committedDate": "2020-12-14T22:07:31Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics-periods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxOTk5MDMw", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-551999030", "createdAt": "2020-12-14T23:59:38Z", "commit": {"oid": "b871aba5cd219b2f30b93c6a278df2439e44ec95"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMDA0MDU5", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-552004059", "createdAt": "2020-12-15T00:04:30Z", "commit": {"oid": "b871aba5cd219b2f30b93c6a278df2439e44ec95"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMTgxNDcz", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-552181473", "createdAt": "2020-12-15T07:50:22Z", "commit": {"oid": "b871aba5cd219b2f30b93c6a278df2439e44ec95"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMjIzMTg3", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-552223187", "createdAt": "2020-12-15T08:48:41Z", "commit": {"oid": "b871aba5cd219b2f30b93c6a278df2439e44ec95"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODo0ODo0MVrOIF_gKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODo1NjoyOVrOIF_0zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE1NDIxOA==", "bodyText": "Why are those ALL CAPS? Maybe group those strings.", "url": "https://github.com/ls1intum/Artemis/pull/2511#discussion_r543154218", "createdAt": "2020-12-15T08:48:41Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/i18n/en/statistics.json", "diffHunk": "@@ -10,20 +10,21 @@\n         \"title\": \"User statistics\",\n         \"days\": \" days\",\n         \"loggedInUsers\": \"Amount of logins of distinct users in the last \",\n-        \"activeUsers\": \"Amount of logins of active users in the last \",\n         \"totalSubmissions\": \"Total amount of submissions in the last \",\n-        \"exercises\": {\n-            \"released\": \"Total amount of released exercises in the last \",\n-            \"due\": \"Total amount of exercise deadlines in the last \"\n-        },\n         \"conductedExams\": \"Total amount of conducted exams in the last \",\n         \"examParticipation\": \" -> amount of student who participated: \",\n         \"examRegistrations\": \" -> with the amount of students being registered in these exam: \",\n         \"activeTutors\": \"Total amount of tutors which have created an assessment in the last \",\n         \"results\": \"Total amount of results created in the last \",\n         \"resultFeedbacks\": \"-> feedback count: \",\n         \"userLogins\": \"User Logins\",\n-        \"submissions\": \"Submissions\"\n+        \"SUBMISSIONS\": \"Submissions\",\n+        \"ACTIVE_USERS\": \"Active users\",\n+        \"RELEASED_EXERCISES\": \"Released exercises\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b871aba5cd219b2f30b93c6a278df2439e44ec95"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE1OTUwMg==", "bodyText": "As this is an admin-only feature, I'd restrict this endpoint to Admins only.", "url": "https://github.com/ls1intum/Artemis/pull/2511#discussion_r543159502", "createdAt": "2020-12-15T08:56:29Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StatisticsResource.java", "diffHunk": "@@ -27,146 +27,18 @@ public StatisticsResource(StatisticsService service) {\n     }\n \n     /**\n-     * GET management/statistics/users : get the amount of logged in user in the last \"span\" days.\n+     * GET management/statistics/data : get the graph data in the last \"span\" days in the given period.\n      *\n-     * @param span the period of which the amount should be calculated\n-     * @return the ResponseEntity with status 200 (OK) and the amount of users in body, or status 404 (Not Found)\n+     * @param span the spantime of which the amount should be calculated\n+     * @param periodIndex an index indicating which time period, 0 is current week, -1 is one week in the past, -2 is two weeks in the past ...\n+     * @param graphType the type of graph the data should be fetched\n+     * @return the ResponseEntity with status 200 (OK) and the data in body, or status 404 (Not Found)\n      */\n-    @GetMapping(\"management/statistics/users\")\n+    @GetMapping(\"management/statistics/data\")\n     @PreAuthorize(\"hasAnyRole('INSTRUCTOR', 'ADMIN')\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b871aba5cd219b2f30b93c6a278df2439e44ec95"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29286d4a70141478ca0c1481b0295e4ef7abc44b", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/29286d4a70141478ca0c1481b0295e4ef7abc44b", "committedDate": "2020-12-15T11:50:41Z", "message": "pr review and codacy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMzg2NTkx", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-552386591", "createdAt": "2020-12-15T12:10:39Z", "commit": {"oid": "29286d4a70141478ca0c1481b0295e4ef7abc44b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMzg4NjEz", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-552388613", "createdAt": "2020-12-15T12:13:22Z", "commit": {"oid": "29286d4a70141478ca0c1481b0295e4ef7abc44b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDE4NDk1", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-552418495", "createdAt": "2020-12-15T12:53:19Z", "commit": {"oid": "29286d4a70141478ca0c1481b0295e4ef7abc44b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDQyNDI4", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-552442428", "createdAt": "2020-12-15T13:22:38Z", "commit": {"oid": "29286d4a70141478ca0c1481b0295e4ef7abc44b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/dc9d434a248d1a05c95d8ed774b028a720e5ff5b", "committedDate": "2020-12-15T15:21:01Z", "message": "remove legend after pr review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNjc2MTEw", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-552676110", "createdAt": "2020-12-15T17:05:04Z", "commit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNjc4OTY4", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-552678968", "createdAt": "2020-12-15T17:08:09Z", "commit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNjgwMzEz", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-552680313", "createdAt": "2020-12-15T17:09:37Z", "commit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNjg3MTAw", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-552687100", "createdAt": "2020-12-15T17:17:01Z", "commit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNzY3NDMw", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-552767430", "createdAt": "2020-12-15T18:51:16Z", "commit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNzgyMzE4", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-552782318", "createdAt": "2020-12-15T19:08:37Z", "commit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMTMwNTky", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-553130592", "createdAt": "2020-12-15T23:58:15Z", "commit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNTAwMTg0", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-553500184", "createdAt": "2020-12-16T09:28:33Z", "commit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNTExMTk0", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-553511194", "createdAt": "2020-12-16T09:41:34Z", "commit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTo0MTozNFrOIG8Z4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTo0MTozNFrOIG8Z4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1MjAzNA==", "bodyText": "You can remove that comment, that's why there's @Input() \ud83d\ude04", "url": "https://github.com/ls1intum/Artemis/pull/2511#discussion_r544152034", "createdAt": "2020-12-16T09:41:34Z", "author": {"login": "ivanchimeno"}, "path": "src/main/webapp/app/admin/statistics/statistics-graph.component.ts", "diffHunk": "@@ -0,0 +1,215 @@\n+import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\n+import { StatisticsService } from 'app/admin/statistics/statistics.service';\n+import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n+import { BaseChartDirective, Label } from 'ng2-charts';\n+import { DataSet } from 'app/exercises/quiz/manage/statistics/quiz-statistic/quiz-statistic.component';\n+import { TranslateService } from '@ngx-translate/core';\n+import * as moment from 'moment';\n+import { Graphs, SpanType } from 'app/entities/statistics.model';\n+\n+@Component({\n+    selector: 'jhi-statistics-graph',\n+    templateUrl: './statistics-graph.component.html',\n+})\n+export class StatisticsGraphComponent implements OnInit, OnChanges {\n+    // Inputs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNTEyMjA5", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-553512209", "createdAt": "2020-12-16T09:42:53Z", "commit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTo0Mjo1M1rOIG8dvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTo0Mjo1M1rOIG8dvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE1MzAyMw==", "bodyText": "Is it intentional that lines 28-38 contain the public accessor (shouldn't they be private since it's implementation details)?", "url": "https://github.com/ls1intum/Artemis/pull/2511#discussion_r544153023", "createdAt": "2020-12-16T09:42:53Z", "author": {"login": "ivanchimeno"}, "path": "src/main/webapp/app/admin/statistics/statistics-graph.component.ts", "diffHunk": "@@ -0,0 +1,215 @@\n+import { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\n+import { StatisticsService } from 'app/admin/statistics/statistics.service';\n+import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n+import { BaseChartDirective, Label } from 'ng2-charts';\n+import { DataSet } from 'app/exercises/quiz/manage/statistics/quiz-statistic/quiz-statistic.component';\n+import { TranslateService } from '@ngx-translate/core';\n+import * as moment from 'moment';\n+import { Graphs, SpanType } from 'app/entities/statistics.model';\n+\n+@Component({\n+    selector: 'jhi-statistics-graph',\n+    templateUrl: './statistics-graph.component.html',\n+})\n+export class StatisticsGraphComponent implements OnInit, OnChanges {\n+    // Inputs\n+    @Input()\n+    graphType: Graphs;\n+    @Input()\n+    currentSpan: SpanType;\n+\n+    // html properties\n+    LEFT = false;\n+    RIGHT = true;\n+    SpanType = SpanType;\n+    Graphs = Graphs;\n+\n+    // Histogram related properties\n+    public barChartOptions: ChartOptions = {};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNTE2Mjk4", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-553516298", "createdAt": "2020-12-16T09:47:48Z", "commit": {"oid": "dc9d434a248d1a05c95d8ed774b028a720e5ff5b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c16f4b7afac2d4b518fcd75ff6d28830a57ce8cf", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/c16f4b7afac2d4b518fcd75ff6d28830a57ce8cf", "committedDate": "2020-12-16T11:18:30Z", "message": "made chart variables package private and remove input comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac368e98fd1c308512f046a95b52609dbdfda208", "author": {"user": {"login": "krusche", "name": "Stephan Krusche"}}, "url": "https://github.com/ls1intum/Artemis/commit/ac368e98fd1c308512f046a95b52609dbdfda208", "committedDate": "2020-12-16T11:36:51Z", "message": "Merge branch 'develop' into feature/user-statistics-periods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjk2MDY3", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-553696067", "createdAt": "2020-12-16T13:42:57Z", "commit": {"oid": "ac368e98fd1c308512f046a95b52609dbdfda208"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMzo0Mjo1N1rOIHF5Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNDowMDowM1rOIHGpTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMwNzUxNQ==", "bodyText": "We already have a username variable, so why not use !usersInSameSlot.contains(username)) here?", "url": "https://github.com/ls1intum/Artemis/pull/2511#discussion_r544307515", "createdAt": "2020-12-16T13:42:57Z", "author": {"login": "FrankeLukas"}, "path": "src/main/java/de/tum/in/www1/artemis/service/StatisticsService.java", "diffHunk": "@@ -139,56 +169,133 @@ public Integer getActiveUsers(Long span) {\n     }\n \n     /**\n-     * Gets a List of Maps, each Map describing an entry in the database. The Map has the two keys \"day\" and \"amount\",\n-     * which map to the date and the amount of submissions. This Method handles the spanType YEAR\n+     * Gets a list of maps, each map describing an entry in the database. The map has the two keys \"day\" and \"amount\",\n+     * which map to the date and the amount of the findings. This method handles the spanType YEAR\n      *\n      * @param outcome A List<Map<String, Object>>, containing the content which should be refactored into an array\n      * @param result the array in which the converted outcome should be inserted\n-     * @param currentDate the current time\n-     * @return a array, containing the values for each bar in the graph\n+     * @param endDate the endDate\n+     * @return an array, containing the values for each bar in the graph\n      */\n-    private Integer[] createSubmissionCountArrayForYear(List<Map<String, Object>> outcome, Integer[] result, ZonedDateTime currentDate) {\n+    private Integer[] createResultArrayForYear(List<Map<String, Object>> outcome, Integer[] result, ZonedDateTime endDate) {\n         for (Map<String, Object> map : outcome) {\n             ZonedDateTime date = (ZonedDateTime) map.get(\"day\");\n             Integer amount = map.get(\"amount\") != null ? ((Long) map.get(\"amount\")).intValue() : null;\n             for (int i = 0; i < 12; i++) {\n-                if (date.getMonth() == currentDate.minusMonths(i).getMonth() && date.getYear() == currentDate.minusMonths(i).getYear()) {\n+                if (date.getMonth() == endDate.minusMonths(i).getMonth()) {\n                     result[11 - i] += amount;\n                 }\n             }\n         }\n         return result;\n     }\n \n-    public Integer getReleasedExercises(Long span) {\n-        return this.statisticsRepository.getReleasedExercises(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getExerciseDeadlines(Long span) {\n-        return this.statisticsRepository.getExerciseDeadlines(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getConductedExams(Long span) {\n-        return this.statisticsRepository.getConductedExams(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getExamParticipations(Long span) {\n-        return this.statisticsRepository.getExamParticipations(ZonedDateTime.now().minusDays(span));\n-    }\n-\n-    public Integer getExamRegistrations(Long span) {\n-        return this.statisticsRepository.getExamRegistrations(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getActiveTutors(Long span) {\n-        return this.statisticsRepository.getActiveTutors(ZonedDateTime.now().minusDays(span));\n-    }\n-\n-    public Integer getCreatedResults(Long span) {\n-        return this.statisticsRepository.getCreatedResults(ZonedDateTime.now().minusDays(span));\n+    /**\n+    * This method handles the duplicity of usernames in the active user call. It gets a List<Map<String, Object>> analogue to previous methods, but instead of numbers in an amount key,\n+    * it contains a username key with the actual username as value. It then handles all the usernames and returns a List<Map<String, Object>>, but now with the the key \"amount\"\n+    * and value the number of users in this interval\n+    *\n+    * @param span DAY,WEEK,MONTH or YEAR\n+    * @param result the result given by the Repository call\n+    * @param startDate the startDate of the period\n+    * @return A List<Map<String, Object>> analogue to other database calls\n+    */\n+    private List<Map<String, Object>> convertMapList(SpanType span, List<Map<String, Object>> result, ZonedDateTime startDate) {\n+        List<Map<String, Object>> returnList = new ArrayList<>();\n+        switch (span) {\n+            case DAY -> {\n+                Map<Integer, List<String>> users = new HashMap<>();\n+                for (Map<String, Object> listElement : result) {\n+                    ZonedDateTime date = (ZonedDateTime) listElement.get(\"day\");\n+                    String username = listElement.get(\"username\").toString();\n+                    List<String> usersInSameSlot = users.get(date.getHour());\n+                    // if this hour is not yet existing in users\n+                    if (usersInSameSlot == null) {\n+                        usersInSameSlot = new ArrayList<>();\n+                        usersInSameSlot.add(username);\n+                        users.put(date.getHour(), usersInSameSlot);\n+                    }   // if the value of the map for this hour does not contain this username\n+                    else if (!usersInSameSlot.contains(\"\" + listElement.get(\"username\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac368e98fd1c308512f046a95b52609dbdfda208"}, "originalPosition": 303}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMwODk3Nw==", "bodyText": "Same here.", "url": "https://github.com/ls1intum/Artemis/pull/2511#discussion_r544308977", "createdAt": "2020-12-16T13:44:59Z", "author": {"login": "FrankeLukas"}, "path": "src/main/java/de/tum/in/www1/artemis/service/StatisticsService.java", "diffHunk": "@@ -139,56 +169,133 @@ public Integer getActiveUsers(Long span) {\n     }\n \n     /**\n-     * Gets a List of Maps, each Map describing an entry in the database. The Map has the two keys \"day\" and \"amount\",\n-     * which map to the date and the amount of submissions. This Method handles the spanType YEAR\n+     * Gets a list of maps, each map describing an entry in the database. The map has the two keys \"day\" and \"amount\",\n+     * which map to the date and the amount of the findings. This method handles the spanType YEAR\n      *\n      * @param outcome A List<Map<String, Object>>, containing the content which should be refactored into an array\n      * @param result the array in which the converted outcome should be inserted\n-     * @param currentDate the current time\n-     * @return a array, containing the values for each bar in the graph\n+     * @param endDate the endDate\n+     * @return an array, containing the values for each bar in the graph\n      */\n-    private Integer[] createSubmissionCountArrayForYear(List<Map<String, Object>> outcome, Integer[] result, ZonedDateTime currentDate) {\n+    private Integer[] createResultArrayForYear(List<Map<String, Object>> outcome, Integer[] result, ZonedDateTime endDate) {\n         for (Map<String, Object> map : outcome) {\n             ZonedDateTime date = (ZonedDateTime) map.get(\"day\");\n             Integer amount = map.get(\"amount\") != null ? ((Long) map.get(\"amount\")).intValue() : null;\n             for (int i = 0; i < 12; i++) {\n-                if (date.getMonth() == currentDate.minusMonths(i).getMonth() && date.getYear() == currentDate.minusMonths(i).getYear()) {\n+                if (date.getMonth() == endDate.minusMonths(i).getMonth()) {\n                     result[11 - i] += amount;\n                 }\n             }\n         }\n         return result;\n     }\n \n-    public Integer getReleasedExercises(Long span) {\n-        return this.statisticsRepository.getReleasedExercises(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getExerciseDeadlines(Long span) {\n-        return this.statisticsRepository.getExerciseDeadlines(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getConductedExams(Long span) {\n-        return this.statisticsRepository.getConductedExams(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getExamParticipations(Long span) {\n-        return this.statisticsRepository.getExamParticipations(ZonedDateTime.now().minusDays(span));\n-    }\n-\n-    public Integer getExamRegistrations(Long span) {\n-        return this.statisticsRepository.getExamRegistrations(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getActiveTutors(Long span) {\n-        return this.statisticsRepository.getActiveTutors(ZonedDateTime.now().minusDays(span));\n-    }\n-\n-    public Integer getCreatedResults(Long span) {\n-        return this.statisticsRepository.getCreatedResults(ZonedDateTime.now().minusDays(span));\n+    /**\n+    * This method handles the duplicity of usernames in the active user call. It gets a List<Map<String, Object>> analogue to previous methods, but instead of numbers in an amount key,\n+    * it contains a username key with the actual username as value. It then handles all the usernames and returns a List<Map<String, Object>>, but now with the the key \"amount\"\n+    * and value the number of users in this interval\n+    *\n+    * @param span DAY,WEEK,MONTH or YEAR\n+    * @param result the result given by the Repository call\n+    * @param startDate the startDate of the period\n+    * @return A List<Map<String, Object>> analogue to other database calls\n+    */\n+    private List<Map<String, Object>> convertMapList(SpanType span, List<Map<String, Object>> result, ZonedDateTime startDate) {\n+        List<Map<String, Object>> returnList = new ArrayList<>();\n+        switch (span) {\n+            case DAY -> {\n+                Map<Integer, List<String>> users = new HashMap<>();\n+                for (Map<String, Object> listElement : result) {\n+                    ZonedDateTime date = (ZonedDateTime) listElement.get(\"day\");\n+                    String username = listElement.get(\"username\").toString();\n+                    List<String> usersInSameSlot = users.get(date.getHour());\n+                    // if this hour is not yet existing in users\n+                    if (usersInSameSlot == null) {\n+                        usersInSameSlot = new ArrayList<>();\n+                        usersInSameSlot.add(username);\n+                        users.put(date.getHour(), usersInSameSlot);\n+                    }   // if the value of the map for this hour does not contain this username\n+                    else if (!usersInSameSlot.contains(\"\" + listElement.get(\"username\"))) {\n+                        usersInSameSlot.add(username);\n+                        users.put(date.getHour(), usersInSameSlot);\n+                    }\n+                }\n+                users.forEach((k, v) -> {\n+                    Map<String, Object> listElement = new HashMap<>();\n+                    listElement.put(\"day\", startDate.withHour(k));\n+                    listElement.put(\"amount\", (long) v.size());\n+                    returnList.add(listElement);\n+                });\n+            }\n+            case WEEK, MONTH -> {\n+                Map<Integer, List<String>> users = new HashMap<>();\n+                for (Map<String, Object> listElement : result) {\n+                    ZonedDateTime date = (ZonedDateTime) listElement.get(\"day\");\n+                    String username = listElement.get(\"username\").toString();\n+                    List<String> usersInSameSlot = users.get(date.getDayOfMonth());\n+                    // if this day is not yet existing in users\n+                    if (usersInSameSlot == null) {\n+                        usersInSameSlot = new ArrayList<>();\n+                        usersInSameSlot.add(username);\n+                        users.put(date.getDayOfMonth(), usersInSameSlot);\n+                    }   // if the value of the map for this day does not contain this username\n+                    else if (!usersInSameSlot.contains(\"\" + listElement.get(\"username\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac368e98fd1c308512f046a95b52609dbdfda208"}, "originalPosition": 327}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMwOTA5Mw==", "bodyText": "And here.", "url": "https://github.com/ls1intum/Artemis/pull/2511#discussion_r544309093", "createdAt": "2020-12-16T13:45:08Z", "author": {"login": "FrankeLukas"}, "path": "src/main/java/de/tum/in/www1/artemis/service/StatisticsService.java", "diffHunk": "@@ -139,56 +169,133 @@ public Integer getActiveUsers(Long span) {\n     }\n \n     /**\n-     * Gets a List of Maps, each Map describing an entry in the database. The Map has the two keys \"day\" and \"amount\",\n-     * which map to the date and the amount of submissions. This Method handles the spanType YEAR\n+     * Gets a list of maps, each map describing an entry in the database. The map has the two keys \"day\" and \"amount\",\n+     * which map to the date and the amount of the findings. This method handles the spanType YEAR\n      *\n      * @param outcome A List<Map<String, Object>>, containing the content which should be refactored into an array\n      * @param result the array in which the converted outcome should be inserted\n-     * @param currentDate the current time\n-     * @return a array, containing the values for each bar in the graph\n+     * @param endDate the endDate\n+     * @return an array, containing the values for each bar in the graph\n      */\n-    private Integer[] createSubmissionCountArrayForYear(List<Map<String, Object>> outcome, Integer[] result, ZonedDateTime currentDate) {\n+    private Integer[] createResultArrayForYear(List<Map<String, Object>> outcome, Integer[] result, ZonedDateTime endDate) {\n         for (Map<String, Object> map : outcome) {\n             ZonedDateTime date = (ZonedDateTime) map.get(\"day\");\n             Integer amount = map.get(\"amount\") != null ? ((Long) map.get(\"amount\")).intValue() : null;\n             for (int i = 0; i < 12; i++) {\n-                if (date.getMonth() == currentDate.minusMonths(i).getMonth() && date.getYear() == currentDate.minusMonths(i).getYear()) {\n+                if (date.getMonth() == endDate.minusMonths(i).getMonth()) {\n                     result[11 - i] += amount;\n                 }\n             }\n         }\n         return result;\n     }\n \n-    public Integer getReleasedExercises(Long span) {\n-        return this.statisticsRepository.getReleasedExercises(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getExerciseDeadlines(Long span) {\n-        return this.statisticsRepository.getExerciseDeadlines(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getConductedExams(Long span) {\n-        return this.statisticsRepository.getConductedExams(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getExamParticipations(Long span) {\n-        return this.statisticsRepository.getExamParticipations(ZonedDateTime.now().minusDays(span));\n-    }\n-\n-    public Integer getExamRegistrations(Long span) {\n-        return this.statisticsRepository.getExamRegistrations(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getActiveTutors(Long span) {\n-        return this.statisticsRepository.getActiveTutors(ZonedDateTime.now().minusDays(span));\n-    }\n-\n-    public Integer getCreatedResults(Long span) {\n-        return this.statisticsRepository.getCreatedResults(ZonedDateTime.now().minusDays(span));\n+    /**\n+    * This method handles the duplicity of usernames in the active user call. It gets a List<Map<String, Object>> analogue to previous methods, but instead of numbers in an amount key,\n+    * it contains a username key with the actual username as value. It then handles all the usernames and returns a List<Map<String, Object>>, but now with the the key \"amount\"\n+    * and value the number of users in this interval\n+    *\n+    * @param span DAY,WEEK,MONTH or YEAR\n+    * @param result the result given by the Repository call\n+    * @param startDate the startDate of the period\n+    * @return A List<Map<String, Object>> analogue to other database calls\n+    */\n+    private List<Map<String, Object>> convertMapList(SpanType span, List<Map<String, Object>> result, ZonedDateTime startDate) {\n+        List<Map<String, Object>> returnList = new ArrayList<>();\n+        switch (span) {\n+            case DAY -> {\n+                Map<Integer, List<String>> users = new HashMap<>();\n+                for (Map<String, Object> listElement : result) {\n+                    ZonedDateTime date = (ZonedDateTime) listElement.get(\"day\");\n+                    String username = listElement.get(\"username\").toString();\n+                    List<String> usersInSameSlot = users.get(date.getHour());\n+                    // if this hour is not yet existing in users\n+                    if (usersInSameSlot == null) {\n+                        usersInSameSlot = new ArrayList<>();\n+                        usersInSameSlot.add(username);\n+                        users.put(date.getHour(), usersInSameSlot);\n+                    }   // if the value of the map for this hour does not contain this username\n+                    else if (!usersInSameSlot.contains(\"\" + listElement.get(\"username\"))) {\n+                        usersInSameSlot.add(username);\n+                        users.put(date.getHour(), usersInSameSlot);\n+                    }\n+                }\n+                users.forEach((k, v) -> {\n+                    Map<String, Object> listElement = new HashMap<>();\n+                    listElement.put(\"day\", startDate.withHour(k));\n+                    listElement.put(\"amount\", (long) v.size());\n+                    returnList.add(listElement);\n+                });\n+            }\n+            case WEEK, MONTH -> {\n+                Map<Integer, List<String>> users = new HashMap<>();\n+                for (Map<String, Object> listElement : result) {\n+                    ZonedDateTime date = (ZonedDateTime) listElement.get(\"day\");\n+                    String username = listElement.get(\"username\").toString();\n+                    List<String> usersInSameSlot = users.get(date.getDayOfMonth());\n+                    // if this day is not yet existing in users\n+                    if (usersInSameSlot == null) {\n+                        usersInSameSlot = new ArrayList<>();\n+                        usersInSameSlot.add(username);\n+                        users.put(date.getDayOfMonth(), usersInSameSlot);\n+                    }   // if the value of the map for this day does not contain this username\n+                    else if (!usersInSameSlot.contains(\"\" + listElement.get(\"username\"))) {\n+                        usersInSameSlot.add(username);\n+                        users.put(date.getDayOfMonth(), usersInSameSlot);\n+                    }\n+                }\n+                users.forEach((k, v) -> {\n+                    Map<String, Object> listElement = new HashMap<>();\n+                    listElement.put(\"day\", startDate.withDayOfMonth(k));\n+                    listElement.put(\"amount\", (long) v.size());\n+                    returnList.add(listElement);\n+                });\n+            }\n+            case YEAR -> {\n+                Map<Month, List<String>> users = new HashMap<>();\n+                for (Map<String, Object> listElement : result) {\n+                    ZonedDateTime date = (ZonedDateTime) listElement.get(\"day\");\n+                    String username = listElement.get(\"username\").toString();\n+                    List<String> usersInSameSlot = users.get(date.getMonth());\n+                    // if this month is not yet existing in users\n+                    if (usersInSameSlot == null) {\n+                        usersInSameSlot = new ArrayList<>();\n+                        usersInSameSlot.add(username);\n+                        users.put(date.getMonth(), usersInSameSlot);\n+                    }   // if the value of the map for this month does not contain this username\n+                    else if (!usersInSameSlot.contains(\"\" + listElement.get(\"username\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac368e98fd1c308512f046a95b52609dbdfda208"}, "originalPosition": 351}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMxOTgyMg==", "bodyText": "This method really looks like it has some duplication. Can we do something like the following?\nprivate List<Map<String, Object>> convertMapList(SpanType span, List<Map<String, Object>> result, ZonedDateTime startDate) {\n\tList<Map<String, Object>> returnList = new ArrayList<>();\n\tMap<Integer, List<String>> users = new HashMap<>();\n\t\n\tfor (Map<String, Object> listElement : result) {\n\t\tObject index;\n\t\tZonedDateTime date = (ZonedDateTime) listElement.get(\"day\");\n\t\tif (span == DAY) {\n\t\t\tindex = date.getHour();\n\t\t} else if (span == WEEK || span == MONTH) {\n\t\t\tindex = date.getDayOfMonth();\n\t\t} else {\n\t\t\tindex = date.getMonth();\n\t\t}\n\n\t\tString username = listElement.get(\"username\").toString();\n\t\tList<String> usersInSameSlot = users.get(index);\n\t\tif (usersInSameSlot == null) {\n\t\t\tusersInSameSlot = new ArrayList<>();\n\t\t\tusersInSameSlot.add(username);\n\t\t\tusers.put(index, usersInSameSlot);\n\t\t} else if (!usersInSameSlot.contains(username))) {\n\t\t\tusersInSameSlot.add(username);\n\t\t\t// btw: I don't think we need to put this again here, since we're modifying the arraylist by reference?\n\t\t\t// users.put(index, usersInSameSlot);\n\t\t}\n\t}\n\tusers.forEach((k, v) -> {\n\t\tObject start;\n\t\tif (span == DAY) {\n\t\t\tstart = startDate.withHour(k);\n\t\t} else if (span == WEEK || span == MONTH) {\n\t\t\tstart = startDate.withDayOfMonth(k);\n\t\t} else {\n\t\t\tstart = startDate.withMonth(getMonthIndex(k));\n\t\t}\n\t\n\t\tMap<String, Object> listElement = new HashMap<>();\n\t\tlistElement.put(\"day\", start);\n\t\tlistElement.put(\"amount\", (long) v.size());\n\t\treturnList.add(listElement);\n\t});\n\t\n\treturn returnList;\n}", "url": "https://github.com/ls1intum/Artemis/pull/2511#discussion_r544319822", "createdAt": "2020-12-16T14:00:03Z", "author": {"login": "FrankeLukas"}, "path": "src/main/java/de/tum/in/www1/artemis/service/StatisticsService.java", "diffHunk": "@@ -139,56 +169,133 @@ public Integer getActiveUsers(Long span) {\n     }\n \n     /**\n-     * Gets a List of Maps, each Map describing an entry in the database. The Map has the two keys \"day\" and \"amount\",\n-     * which map to the date and the amount of submissions. This Method handles the spanType YEAR\n+     * Gets a list of maps, each map describing an entry in the database. The map has the two keys \"day\" and \"amount\",\n+     * which map to the date and the amount of the findings. This method handles the spanType YEAR\n      *\n      * @param outcome A List<Map<String, Object>>, containing the content which should be refactored into an array\n      * @param result the array in which the converted outcome should be inserted\n-     * @param currentDate the current time\n-     * @return a array, containing the values for each bar in the graph\n+     * @param endDate the endDate\n+     * @return an array, containing the values for each bar in the graph\n      */\n-    private Integer[] createSubmissionCountArrayForYear(List<Map<String, Object>> outcome, Integer[] result, ZonedDateTime currentDate) {\n+    private Integer[] createResultArrayForYear(List<Map<String, Object>> outcome, Integer[] result, ZonedDateTime endDate) {\n         for (Map<String, Object> map : outcome) {\n             ZonedDateTime date = (ZonedDateTime) map.get(\"day\");\n             Integer amount = map.get(\"amount\") != null ? ((Long) map.get(\"amount\")).intValue() : null;\n             for (int i = 0; i < 12; i++) {\n-                if (date.getMonth() == currentDate.minusMonths(i).getMonth() && date.getYear() == currentDate.minusMonths(i).getYear()) {\n+                if (date.getMonth() == endDate.minusMonths(i).getMonth()) {\n                     result[11 - i] += amount;\n                 }\n             }\n         }\n         return result;\n     }\n \n-    public Integer getReleasedExercises(Long span) {\n-        return this.statisticsRepository.getReleasedExercises(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getExerciseDeadlines(Long span) {\n-        return this.statisticsRepository.getExerciseDeadlines(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getConductedExams(Long span) {\n-        return this.statisticsRepository.getConductedExams(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getExamParticipations(Long span) {\n-        return this.statisticsRepository.getExamParticipations(ZonedDateTime.now().minusDays(span));\n-    }\n-\n-    public Integer getExamRegistrations(Long span) {\n-        return this.statisticsRepository.getExamRegistrations(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n-    }\n-\n-    public Integer getActiveTutors(Long span) {\n-        return this.statisticsRepository.getActiveTutors(ZonedDateTime.now().minusDays(span));\n-    }\n-\n-    public Integer getCreatedResults(Long span) {\n-        return this.statisticsRepository.getCreatedResults(ZonedDateTime.now().minusDays(span));\n+    /**\n+    * This method handles the duplicity of usernames in the active user call. It gets a List<Map<String, Object>> analogue to previous methods, but instead of numbers in an amount key,\n+    * it contains a username key with the actual username as value. It then handles all the usernames and returns a List<Map<String, Object>>, but now with the the key \"amount\"\n+    * and value the number of users in this interval\n+    *\n+    * @param span DAY,WEEK,MONTH or YEAR\n+    * @param result the result given by the Repository call\n+    * @param startDate the startDate of the period\n+    * @return A List<Map<String, Object>> analogue to other database calls\n+    */\n+    private List<Map<String, Object>> convertMapList(SpanType span, List<Map<String, Object>> result, ZonedDateTime startDate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac368e98fd1c308512f046a95b52609dbdfda208"}, "originalPosition": 288}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e63a45bd195a1e39a220f42840ea55ed66660b0", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/0e63a45bd195a1e39a220f42840ea55ed66660b0", "committedDate": "2020-12-16T14:47:08Z", "message": "code review - remove duplication"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b792e26c5b374fcbdc4c15c242612fa71e4d4734", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/b792e26c5b374fcbdc4c15c242612fa71e4d4734", "committedDate": "2020-12-16T14:48:33Z", "message": "Merge branch 'feature/user-statistics-periods' of https://github.com/ls1intum/Artemis into feature/user-statistics-periods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42d7b487360a2a40e47424323dfbe82227553811", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/42d7b487360a2a40e47424323dfbe82227553811", "committedDate": "2020-12-16T14:48:54Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics-periods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzODQ5NDc4", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-553849478", "createdAt": "2020-12-16T16:14:32Z", "commit": {"oid": "42d7b487360a2a40e47424323dfbe82227553811"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzODUzMjU2", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-553853256", "createdAt": "2020-12-16T16:18:12Z", "commit": {"oid": "42d7b487360a2a40e47424323dfbe82227553811"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzODc2NDIz", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-553876423", "createdAt": "2020-12-16T16:41:30Z", "commit": {"oid": "42d7b487360a2a40e47424323dfbe82227553811"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzODc3NzUz", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-553877753", "createdAt": "2020-12-16T16:42:51Z", "commit": {"oid": "42d7b487360a2a40e47424323dfbe82227553811"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzODc4NjY0", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-553878664", "createdAt": "2020-12-16T16:43:42Z", "commit": {"oid": "42d7b487360a2a40e47424323dfbe82227553811"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzOTA1MzMw", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-553905330", "createdAt": "2020-12-16T17:11:38Z", "commit": {"oid": "42d7b487360a2a40e47424323dfbe82227553811"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MDExOTY2", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-554011966", "createdAt": "2020-12-16T19:24:28Z", "commit": {"oid": "42d7b487360a2a40e47424323dfbe82227553811"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MzUzODQ2", "url": "https://github.com/ls1intum/Artemis/pull/2511#pullrequestreview-554353846", "createdAt": "2020-12-17T07:58:13Z", "commit": {"oid": "42d7b487360a2a40e47424323dfbe82227553811"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3395, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}