{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MDgwNjg2", "number": 2432, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoyMzozNlrOE7idfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoyMzozNlrOE7idfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODY2MDQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ComplaintService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzoyMzozNlrOH3PdoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMzo0NToyNFrOH3QOCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4NzA3Mw==", "bodyText": "If maxDays is 14 this will result in \"14 weeks\" right?", "url": "https://github.com/ls1intum/Artemis/pull/2432#discussion_r527687073", "createdAt": "2020-11-20T13:23:36Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ComplaintService.java", "diffHunk": "@@ -224,22 +226,44 @@ public Integer getMaxComplaintsPerParticipant(Course course, Participant partici\n     }\n \n     /**\n-     * This function checks whether the student is allowed to submit a complaint or not. Submitting a complaint is allowed within one week after the student received the result. If\n-     * the result was submitted after the assessment due date or the assessment due date is not set, the completion date of the result is checked. If the result was submitted\n-     * before the assessment due date, the assessment due date is checked, as the student can only see the result after the assessment due date.\n+     * This function checks whether the student is allowed to submit a complaint / more feedback request or not.\n+     * This is allowed within the corresponding number of days set in the course after the student received the result.\n+     * If the result was submitted after the assessment due date or the assessment due date is not set, the completion date of the result is checked.\n+     * If the result was submitted before the assessment due date, the assessment due date is checked, as the student can only see the result after the assessment due date.\n      */\n-    private boolean isTimeOfComplaintValid(Result result, Exercise exercise, Course course) {\n+    private static void validateTimeOfComplaintOrRequestMoreFeedback(Result result, Exercise exercise, Course course, ComplaintType type) {\n+        int maxDays = switch (type) {\n+            case COMPLAINT -> course.getMaxComplaintTimeDays();\n+            case MORE_FEEDBACK -> course.getMaxRequestMoreFeedbackTimeDays();\n+        };\n+\n+        boolean isTimeValid;\n         if (exercise.getAssessmentDueDate() == null || result.getCompletionDate().isAfter(exercise.getAssessmentDueDate())) {\n-            return result.getCompletionDate().isAfter(ZonedDateTime.now().minusDays(course.getMaxComplaintTimeDays()));\n+            isTimeValid = result.getCompletionDate().isAfter(ZonedDateTime.now().minusDays(maxDays));\n+        }\n+        else {\n+            isTimeValid = exercise.getAssessmentDueDate().isAfter(ZonedDateTime.now().minusDays(maxDays));\n+        }\n+\n+        if (!isTimeValid) {\n+            StringBuilder message = new StringBuilder(\"You cannot \");\n+            message.append(type == ComplaintType.COMPLAINT ? \"submit a complaint\" : \"request more feedback\");\n+            message.append(\" for a result that is older than \");\n+            message.append(switch (maxDays) {\n+                case 1 -> \"one day\";\n+                case 7 -> \"one week\";\n+                default -> maxDays + (maxDays % 7 == 0 ? \" weeks\" : \" days\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e5bcb4fee851e5c294a367a67285dcc0f8d8677"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY5OTQ2NA==", "bodyText": "Yes, you are right, good catch. I will fix this.", "url": "https://github.com/ls1intum/Artemis/pull/2432#discussion_r527699464", "createdAt": "2020-11-20T13:45:24Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ComplaintService.java", "diffHunk": "@@ -224,22 +226,44 @@ public Integer getMaxComplaintsPerParticipant(Course course, Participant partici\n     }\n \n     /**\n-     * This function checks whether the student is allowed to submit a complaint or not. Submitting a complaint is allowed within one week after the student received the result. If\n-     * the result was submitted after the assessment due date or the assessment due date is not set, the completion date of the result is checked. If the result was submitted\n-     * before the assessment due date, the assessment due date is checked, as the student can only see the result after the assessment due date.\n+     * This function checks whether the student is allowed to submit a complaint / more feedback request or not.\n+     * This is allowed within the corresponding number of days set in the course after the student received the result.\n+     * If the result was submitted after the assessment due date or the assessment due date is not set, the completion date of the result is checked.\n+     * If the result was submitted before the assessment due date, the assessment due date is checked, as the student can only see the result after the assessment due date.\n      */\n-    private boolean isTimeOfComplaintValid(Result result, Exercise exercise, Course course) {\n+    private static void validateTimeOfComplaintOrRequestMoreFeedback(Result result, Exercise exercise, Course course, ComplaintType type) {\n+        int maxDays = switch (type) {\n+            case COMPLAINT -> course.getMaxComplaintTimeDays();\n+            case MORE_FEEDBACK -> course.getMaxRequestMoreFeedbackTimeDays();\n+        };\n+\n+        boolean isTimeValid;\n         if (exercise.getAssessmentDueDate() == null || result.getCompletionDate().isAfter(exercise.getAssessmentDueDate())) {\n-            return result.getCompletionDate().isAfter(ZonedDateTime.now().minusDays(course.getMaxComplaintTimeDays()));\n+            isTimeValid = result.getCompletionDate().isAfter(ZonedDateTime.now().minusDays(maxDays));\n+        }\n+        else {\n+            isTimeValid = exercise.getAssessmentDueDate().isAfter(ZonedDateTime.now().minusDays(maxDays));\n+        }\n+\n+        if (!isTimeValid) {\n+            StringBuilder message = new StringBuilder(\"You cannot \");\n+            message.append(type == ComplaintType.COMPLAINT ? \"submit a complaint\" : \"request more feedback\");\n+            message.append(\" for a result that is older than \");\n+            message.append(switch (maxDays) {\n+                case 1 -> \"one day\";\n+                case 7 -> \"one week\";\n+                default -> maxDays + (maxDays % 7 == 0 ? \" weeks\" : \" days\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY4NzA3Mw=="}, "originalCommit": {"oid": "6e5bcb4fee851e5c294a367a67285dcc0f8d8677"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4466, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}