{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyODAzODg1", "number": 1935, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDoxOTo0MFrOEQpUnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDoxOTo0MFrOEQpUnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODg5NjkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/StudentExamService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDoxOTo0MFrOG06ROw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNDoxOTo0MFrOG06ROw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEzMzgxOQ==", "bodyText": "can you please:\n\nextract a method for the whole new code block\nmove the invocation of the new method after the line studentExamRepository.save(studentExam);\nPut another try catch statement around the invocation of the new method? So that really no (even currently unthinkable) exception can lead to problems here?", "url": "https://github.com/ls1intum/Artemis/pull/1935#discussion_r458133819", "createdAt": "2020-07-21T14:19:40Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/StudentExamService.java", "diffHunk": "@@ -202,6 +207,24 @@ else if (exercise instanceof ModelingExercise) {\n             }\n         }\n \n+        // Only lock programming exercises when the student submitted early. Otherwise, the lock operations were already scheduled/executed.\n+        if (ZonedDateTime.now().isBefore(examEndDate)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1802500ac2a7d5af3057cb291fe010df778296c"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4799, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}