{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NzA2MjM2", "number": 2325, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMjo1NTowMVrOE0yz6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMjo1NTowMVrOE0yz6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzkzODk2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/participate/text-result/text-result-block.ts", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMjo1NTowMVrOHstgrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzowNjo1OVrOHtDp7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NTAzNw==", "bodyText": "always issues with \"0\" evaluating to false \ud83d\ude04", "url": "https://github.com/ls1intum/Artemis/pull/2325#discussion_r516645037", "createdAt": "2020-11-03T12:55:01Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/text/participate/text-result/text-result-block.ts", "diffHunk": "@@ -29,7 +29,7 @@ export class TextResultBlock {\n     }\n \n     get feedbackType(): FeedbackType {\n-        if (!this.feedback || !this.feedback.credits) {\n+        if (!this.feedback || this.feedback.credits == null || Feedback.isEmpty(this.feedback)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de2ec71f6670001fee26aab8fc33cbec927899ab"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc5NTczOA==", "bodyText": "\ud83d\ude04", "url": "https://github.com/ls1intum/Artemis/pull/2325#discussion_r516795738", "createdAt": "2020-11-03T16:26:52Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exercises/text/participate/text-result/text-result-block.ts", "diffHunk": "@@ -29,7 +29,7 @@ export class TextResultBlock {\n     }\n \n     get feedbackType(): FeedbackType {\n-        if (!this.feedback || !this.feedback.credits) {\n+        if (!this.feedback || this.feedback.credits == null || Feedback.isEmpty(this.feedback)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NTAzNw=="}, "originalCommit": {"oid": "de2ec71f6670001fee26aab8fc33cbec927899ab"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkxODY0OA==", "bodyText": "should we not check for undefined instead of null?", "url": "https://github.com/ls1intum/Artemis/pull/2325#discussion_r516918648", "createdAt": "2020-11-03T19:52:39Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/text/participate/text-result/text-result-block.ts", "diffHunk": "@@ -29,7 +29,7 @@ export class TextResultBlock {\n     }\n \n     get feedbackType(): FeedbackType {\n-        if (!this.feedback || !this.feedback.credits) {\n+        if (!this.feedback || this.feedback.credits == null || Feedback.isEmpty(this.feedback)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NTAzNw=="}, "originalCommit": {"oid": "de2ec71f6670001fee26aab8fc33cbec927899ab"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkxODg1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!this.feedback || this.feedback.credits == null || Feedback.isEmpty(this.feedback)) {\n          \n          \n            \n                    if (!this.feedback || this.feedback.credits == undefined || Feedback.isEmpty(this.feedback)) {", "url": "https://github.com/ls1intum/Artemis/pull/2325#discussion_r516918857", "createdAt": "2020-11-03T19:53:01Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/text/participate/text-result/text-result-block.ts", "diffHunk": "@@ -29,7 +29,7 @@ export class TextResultBlock {\n     }\n \n     get feedbackType(): FeedbackType {\n-        if (!this.feedback || !this.feedback.credits) {\n+        if (!this.feedback || this.feedback.credits == null || Feedback.isEmpty(this.feedback)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NTAzNw=="}, "originalCommit": {"oid": "de2ec71f6670001fee26aab8fc33cbec927899ab"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkxOTE2Mw==", "bodyText": "I know it does not really make a difference, but we would like to avoid null and focus on undefined so I think it's better to use it", "url": "https://github.com/ls1intum/Artemis/pull/2325#discussion_r516919163", "createdAt": "2020-11-03T19:53:34Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/text/participate/text-result/text-result-block.ts", "diffHunk": "@@ -29,7 +29,7 @@ export class TextResultBlock {\n     }\n \n     get feedbackType(): FeedbackType {\n-        if (!this.feedback || !this.feedback.credits) {\n+        if (!this.feedback || this.feedback.credits == null || Feedback.isEmpty(this.feedback)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NTAzNw=="}, "originalCommit": {"oid": "de2ec71f6670001fee26aab8fc33cbec927899ab"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk5OTA5MA==", "bodyText": "a == null checks for null and undefined. I think the check is better because it fends against more errors.", "url": "https://github.com/ls1intum/Artemis/pull/2325#discussion_r516999090", "createdAt": "2020-11-03T22:44:21Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exercises/text/participate/text-result/text-result-block.ts", "diffHunk": "@@ -29,7 +29,7 @@ export class TextResultBlock {\n     }\n \n     get feedbackType(): FeedbackType {\n-        if (!this.feedback || !this.feedback.credits) {\n+        if (!this.feedback || this.feedback.credits == null || Feedback.isEmpty(this.feedback)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NTAzNw=="}, "originalCommit": {"oid": "de2ec71f6670001fee26aab8fc33cbec927899ab"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwMjA5OA==", "bodyText": "I would also support @kloessst, see here:\nhttps://stackoverflow.com/questions/28975896/is-there-a-way-to-check-for-both-null-and-undefined\nI think checking only for undefined should be then === instead of your suggested == @krusche", "url": "https://github.com/ls1intum/Artemis/pull/2325#discussion_r517002098", "createdAt": "2020-11-03T22:52:05Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/text/participate/text-result/text-result-block.ts", "diffHunk": "@@ -29,7 +29,7 @@ export class TextResultBlock {\n     }\n \n     get feedbackType(): FeedbackType {\n-        if (!this.feedback || !this.feedback.credits) {\n+        if (!this.feedback || this.feedback.credits == null || Feedback.isEmpty(this.feedback)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NTAzNw=="}, "originalCommit": {"oid": "de2ec71f6670001fee26aab8fc33cbec927899ab"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNjEyMA==", "bodyText": "I think == undefined is logically the same as == null. Both check for null and undefined\nLook at my proposal, I do not propose === undefined which would be different.\nWe basically want to consistently use undefined instead of null in the client code (if possible), so I would prefer to not use null at all (if possible)", "url": "https://github.com/ls1intum/Artemis/pull/2325#discussion_r517006120", "createdAt": "2020-11-03T23:02:09Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/text/participate/text-result/text-result-block.ts", "diffHunk": "@@ -29,7 +29,7 @@ export class TextResultBlock {\n     }\n \n     get feedbackType(): FeedbackType {\n-        if (!this.feedback || !this.feedback.credits) {\n+        if (!this.feedback || this.feedback.credits == null || Feedback.isEmpty(this.feedback)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NTAzNw=="}, "originalCommit": {"oid": "de2ec71f6670001fee26aab8fc33cbec927899ab"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzg1NQ==", "bodyText": "@krusche jope, you are right. my bad!\nSee: https://dorey.github.io/JavaScript-Equality-Table/", "url": "https://github.com/ls1intum/Artemis/pull/2325#discussion_r517007855", "createdAt": "2020-11-03T23:06:59Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/text/participate/text-result/text-result-block.ts", "diffHunk": "@@ -29,7 +29,7 @@ export class TextResultBlock {\n     }\n \n     get feedbackType(): FeedbackType {\n-        if (!this.feedback || !this.feedback.credits) {\n+        if (!this.feedback || this.feedback.credits == null || Feedback.isEmpty(this.feedback)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY0NTAzNw=="}, "originalCommit": {"oid": "de2ec71f6670001fee26aab8fc33cbec927899ab"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4406, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}