{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MjAzNTQ5", "number": 2174, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjozNDozNVrOErKClA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzo0MDoyN1rOEuAAtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjg4NzI0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/i18n/en/course.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjozNDozNVrOHdxE0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxODo1MTo0N1rOHeBItQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3NDgwMA==", "bodyText": "Should we add that only users with a matching username (according to the regex) can register to the course to avoid confusion?", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r500974800", "createdAt": "2020-10-07T12:34:35Z", "author": {"login": "sleiss"}, "path": "src/main/webapp/i18n/en/course.json", "diffHunk": "@@ -54,8 +54,15 @@\n             \"startDate\": \"Start\",\n             \"endDate\": \"End\",\n             \"accessGroups\": \"Access Groups\",\n-            \"onlineCourse\": \"Online Course\",\n-            \"registrationEnabled\": \"Student Registration Enabled\",\n+            \"onlineCourse\": {\n+                \"title\": \"Online Course\",\n+                \"description\": \"Activate this checkbox for external online courses (e.g. on edX) so that students can use this Artemis course (via the LTI interface). This also allows automatic account creation if enabled by the Artemis system administrator.\"\n+            },\n+            \"registrationEnabled\": {\n+                \"title\": \"Student Course Registration Enabled\",\n+                \"description\": \"Activate this checkbox to allow students to register independently in the course if it is active (between start and end of the course). You can optionally enter a message that students have to confirm during registration.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "545d34efe31e539f093c751e00c0a039c9c51b15"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIzNTY1NA==", "bodyText": "We could do that. However, the problem is that the instructors do not really know about those mechanisms.\nAlso this regex is really TUM specific. I don't even know if other universities would use this. At the TUM instance, we also have internal users (e.g. from online courses on edx) that should not be able to register and participate in normal university courses. In the TUM scenario, I would specify it like \"Activate this checkbox to allow TUM users to register independently...\"\nSo I am not sure how to formulate this in a more generic but still helpful way, that is not confusing, but that would still apply to other universities?", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r501235654", "createdAt": "2020-10-07T18:47:39Z", "author": {"login": "krusche"}, "path": "src/main/webapp/i18n/en/course.json", "diffHunk": "@@ -54,8 +54,15 @@\n             \"startDate\": \"Start\",\n             \"endDate\": \"End\",\n             \"accessGroups\": \"Access Groups\",\n-            \"onlineCourse\": \"Online Course\",\n-            \"registrationEnabled\": \"Student Registration Enabled\",\n+            \"onlineCourse\": {\n+                \"title\": \"Online Course\",\n+                \"description\": \"Activate this checkbox for external online courses (e.g. on edX) so that students can use this Artemis course (via the LTI interface). This also allows automatic account creation if enabled by the Artemis system administrator.\"\n+            },\n+            \"registrationEnabled\": {\n+                \"title\": \"Student Course Registration Enabled\",\n+                \"description\": \"Activate this checkbox to allow students to register independently in the course if it is active (between start and end of the course). You can optionally enter a message that students have to confirm during registration.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3NDgwMA=="}, "originalCommit": {"oid": "545d34efe31e539f093c751e00c0a039c9c51b15"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIzNzk0MQ==", "bodyText": "Okay, so we would basically omit this declaration as by default, every user can register (as no username pattern is present).\nIf an administrator adds a pattern, he is responsible to inform other persons that might need this information.", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r501237941", "createdAt": "2020-10-07T18:51:47Z", "author": {"login": "sleiss"}, "path": "src/main/webapp/i18n/en/course.json", "diffHunk": "@@ -54,8 +54,15 @@\n             \"startDate\": \"Start\",\n             \"endDate\": \"End\",\n             \"accessGroups\": \"Access Groups\",\n-            \"onlineCourse\": \"Online Course\",\n-            \"registrationEnabled\": \"Student Registration Enabled\",\n+            \"onlineCourse\": {\n+                \"title\": \"Online Course\",\n+                \"description\": \"Activate this checkbox for external online courses (e.g. on edX) so that students can use this Artemis course (via the LTI interface). This also allows automatic account creation if enabled by the Artemis system administrator.\"\n+            },\n+            \"registrationEnabled\": {\n+                \"title\": \"Student Course Registration Enabled\",\n+                \"description\": \"Activate this checkbox to allow students to register independently in the course if it is active (between start and end of the course). You can optionally enter a message that students have to confirm during registration.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk3NDgwMA=="}, "originalCommit": {"oid": "545d34efe31e539f093c751e00c0a039c9c51b15"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjkyNjMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/config/Constants.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjo0Mzo1NVrOHdxcew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxODo0OTo0OFrOHeBEWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4MDg1OQ==", "bodyText": "As this is also TUM specific (at least I guess so): Should we also make this configurable?", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r500980859", "createdAt": "2020-10-07T12:43:55Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/config/Constants.java", "diffHunk": "@@ -51,10 +51,6 @@\n \n     public static final Pattern FILE_ENDING_PATTERN = Pattern.compile(FILE_ENDING_REGEX);\n \n-    public static final String TUM_USERNAME_REGEX = \"^([a-z]{2}\\\\d{2}[a-z]{3})\";\n-\n-    public static final Pattern TUM_USERNAME_PATTERN = Pattern.compile(TUM_USERNAME_REGEX);\n-\n     public static final Pattern TITLE_NAME_PATTERN = Pattern.compile(\"^[a-zA-Z0-9_\\\\-\\\\s]*\");\n \n     public static final String TUM_LDAP_MATRIKEL_NUMBER = \"imMatrikelNr\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "545d34efe31e539f093c751e00c0a039c9c51b15"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIzNjQ5OA==", "bodyText": "I would suggest we do this when someone requests it. The configuration becomes more and more complex, and I would like to avoid too many changes for now.", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r501236498", "createdAt": "2020-10-07T18:49:11Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/config/Constants.java", "diffHunk": "@@ -51,10 +51,6 @@\n \n     public static final Pattern FILE_ENDING_PATTERN = Pattern.compile(FILE_ENDING_REGEX);\n \n-    public static final String TUM_USERNAME_REGEX = \"^([a-z]{2}\\\\d{2}[a-z]{3})\";\n-\n-    public static final Pattern TUM_USERNAME_PATTERN = Pattern.compile(TUM_USERNAME_REGEX);\n-\n     public static final Pattern TITLE_NAME_PATTERN = Pattern.compile(\"^[a-zA-Z0-9_\\\\-\\\\s]*\");\n \n     public static final String TUM_LDAP_MATRIKEL_NUMBER = \"imMatrikelNr\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4MDg1OQ=="}, "originalCommit": {"oid": "545d34efe31e539f093c751e00c0a039c9c51b15"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIzNjgyNQ==", "bodyText": "Sounds reasonable to me.", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r501236825", "createdAt": "2020-10-07T18:49:48Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/config/Constants.java", "diffHunk": "@@ -51,10 +51,6 @@\n \n     public static final Pattern FILE_ENDING_PATTERN = Pattern.compile(FILE_ENDING_REGEX);\n \n-    public static final String TUM_USERNAME_REGEX = \"^([a-z]{2}\\\\d{2}[a-z]{3})\";\n-\n-    public static final Pattern TUM_USERNAME_PATTERN = Pattern.compile(TUM_USERNAME_REGEX);\n-\n     public static final Pattern TITLE_NAME_PATTERN = Pattern.compile(\"^[a-zA-Z0-9_\\\\-\\\\s]*\");\n \n     public static final String TUM_LDAP_MATRIKEL_NUMBER = \"imMatrikelNr\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4MDg1OQ=="}, "originalCommit": {"oid": "545d34efe31e539f093c751e00c0a039c9c51b15"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTkzMzE5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/home/home.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMToyNzo1NFrOHf6ulA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMToyNzo1NFrOHf6ulA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIzMDEwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    <div *ngIf=\"!accountName\" class=\"lead\" [jhiTranslate]=\"signInMessage\">Please sign in with your account.</div>\n          \n          \n            \n                    <div *ngIf=\"accountName\" class=\"lead\" [jhiTranslate]=\"signInMessage\" [translateValues]=\"{ account: accountName }\">Please sign in with your account.</div>\n          \n          \n            \n                    <div *ngIf=\"!accountName\" class=\"lead\" [jhiTranslate]=\"home.pleaseSignIn\">Please sign in with your account.</div>\n          \n          \n            \n                    <div *ngIf=\"accountName\" class=\"lead\" [jhiTranslate]=\"home. pleaseSignInAccount\" [translateValues]=\"{ account: accountName }\">Please sign in with your account.</div>", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r503230100", "createdAt": "2020-10-12T11:27:54Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/home/home.component.html", "diffHunk": "@@ -2,7 +2,8 @@\n     <div class=\"col-md-8 offset-md-2 text-center\">\n         <h1 jhiTranslate=\"home.title\">Welcome to Artemis!</h1>\n         <p class=\"lead\" jhiTranslate=\"home.subtitle\">Interactive Learning with Individual Feedback</p>\n-        <div class=\"lead\" [jhiTranslate]=\"signInMessage\">Please sign in with your account.</div>\n+        <div *ngIf=\"!accountName\" class=\"lead\" [jhiTranslate]=\"signInMessage\">Please sign in with your account.</div>\n+        <div *ngIf=\"accountName\" class=\"lead\" [jhiTranslate]=\"signInMessage\" [translateValues]=\"{ account: accountName }\">Please sign in with your account.</div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "031a09db400c0743bb637bd9382adfebcd9dfdaa"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTkzNDUzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/home/home.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMToyODoyMVrOHf6vbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMToyODoyMVrOHf6vbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIzMDMxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                signInMessage = 'home.pleaseSignIn'; // default, might be overridden based on profile info", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r503230319", "createdAt": "2020-10-12T11:28:21Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/home/home.component.ts", "diffHunk": "@@ -35,9 +32,11 @@ export class HomeComponent implements OnInit, AfterViewInit {\n     credentials: Credentials;\n     isRegistrationEnabled = false;\n \n-    usernameRegexPattern = TUM_USERNAME_REGEX; // default, might be overridden in ngOnInit\n-    signInMessage = 'home.pleaseSignInTUM'; // default, might be overridden in ngOnInit\n-    errorMesssageUsername = 'home.errors.tumWarning'; // default, might be overridden in ngOnInit\n+    // if the server is not connected to an external user management such as JIRA, we accept all valid username patterns\n+    usernameRegexPattern = /^[a-z0-9_-]{3,50}$/; // default, might be overridden in ngOnInit\n+    signInMessage = 'home.pleaseSignIn'; // default, might be overridden based on profile info", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "031a09db400c0743bb637bd9382adfebcd9dfdaa"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MTkzNjY4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/home/home.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMToyOTowOFrOHf6w4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMToyOTowOFrOHf6w4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIzMDY4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (profileInfo.accountName) {\n          \n          \n            \n                                this.signInMessage = 'home.pleaseSignInAccount';\n          \n          \n            \n                            }", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r503230689", "createdAt": "2020-10-12T11:29:08Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/home/home.component.ts", "diffHunk": "@@ -60,26 +59,28 @@ export class HomeComponent implements OnInit, AfterViewInit {\n     ) {}\n \n     ngOnInit() {\n-        this.profileService\n-            .getProfileInfo()\n-            .pipe(\n-                filter(Boolean),\n-                tap((info: ProfileInfo) => {\n-                    if (!info.activeProfiles.includes('jira')) {\n-                        // if the server is not connected to an external user management such as JIRA, we accept all valid username patterns\n-                        this.usernameRegexPattern = /^[a-z0-9_-]{3,100}$/;\n-                        this.signInMessage = 'home.pleaseSignIn';\n-                        this.errorMesssageUsername = 'home.errors.usernameIncorrect';\n-                        this.externalUserManagementActive = false;\n-                    } else {\n-                        this.externalUserManagementUrl = info.externalUserManagementURL;\n-                        this.externalUserManagementName = info.externalUserManagementName;\n+        this.profileService.getProfileInfo().subscribe((profileInfo) => {\n+            if (profileInfo) {\n+                if (profileInfo.activeProfiles.includes('jira')) {\n+                    this.externalUserManagementUrl = profileInfo.externalUserManagementURL;\n+                    this.externalUserManagementName = profileInfo.externalUserManagementName;\n+                    if (profileInfo.allowedLdapUsernamePattern) {\n+                        this.usernameRegexPattern = new RegExp(profileInfo.allowedLdapUsernamePattern);\n                     }\n-\n-                    this.isRegistrationEnabled = info.registrationEnabled || false;\n-                }),\n-            )\n-            .subscribe();\n+                } else {\n+                    // TODO: in the future we might also allow external user management for non jira profiles\n+                    this.externalUserManagementActive = false;\n+                }\n+                if (profileInfo.accountName) {\n+                    this.signInMessage = 'home.pleaseSignInAccount';\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "031a09db400c0743bb637bd9382adfebcd9dfdaa"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODc1OTM1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/config/liquibase/changelog/20201007105032_changelog.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjoxMTozN1rOHg7TWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjo1MDo0OFrOHg8M0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI4ODA4OQ==", "bodyText": "I haven't seen code which truncates those messages to 255 characters on server side. Otherwise course creation could crash. Validation on client-side should also be done.", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r504288089", "createdAt": "2020-10-13T22:11:37Z", "author": {"login": "kloessst"}, "path": "src/main/resources/config/liquibase/changelog/20201007105032_changelog.xml", "diffHunk": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+<changeSet author=\"krusche\" id=\"20201007105032\">\n+    <addColumn tableName=\"course\">\n+        <column name=\"registration_confirmation_message\" type=\"VARCHAR(255)\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4310e7888b52f62b9dfb16d200dd5b982a60b133"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI5MTY2MQ==", "bodyText": "If this is the case, it might also be better to allow more than 255 characters.", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r504291661", "createdAt": "2020-10-13T22:20:27Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/resources/config/liquibase/changelog/20201007105032_changelog.xml", "diffHunk": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+<changeSet author=\"krusche\" id=\"20201007105032\">\n+    <addColumn tableName=\"course\">\n+        <column name=\"registration_confirmation_message\" type=\"VARCHAR(255)\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI4ODA4OQ=="}, "originalCommit": {"oid": "4310e7888b52f62b9dfb16d200dd5b982a60b133"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI5MjY0MQ==", "bodyText": "Anyways, we still need to add some validation or truncation, otherwise we have a build logs 2.0 case \ud83d\ude04", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r504292641", "createdAt": "2020-10-13T22:23:07Z", "author": {"login": "kloessst"}, "path": "src/main/resources/config/liquibase/changelog/20201007105032_changelog.xml", "diffHunk": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+<changeSet author=\"krusche\" id=\"20201007105032\">\n+    <addColumn tableName=\"course\">\n+        <column name=\"registration_confirmation_message\" type=\"VARCHAR(255)\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI4ODA4OQ=="}, "originalCommit": {"oid": "4310e7888b52f62b9dfb16d200dd5b982a60b133"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwMjgwMw==", "bodyText": "Good point, I added a basic validation", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r504302803", "createdAt": "2020-10-13T22:50:48Z", "author": {"login": "krusche"}, "path": "src/main/resources/config/liquibase/changelog/20201007105032_changelog.xml", "diffHunk": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+<changeSet author=\"krusche\" id=\"20201007105032\">\n+    <addColumn tableName=\"course\">\n+        <column name=\"registration_confirmation_message\" type=\"VARCHAR(255)\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI4ODA4OQ=="}, "originalCommit": {"oid": "4310e7888b52f62b9dfb16d200dd5b982a60b133"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODc2ODMxOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/course/manage/course-update.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjoxNDo1OVrOHg7Y3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMjoxNDo1OVrOHg7Y3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDI4OTUwMA==", "bodyText": "Could add something like Validators.maxLength(255) here", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r504289500", "createdAt": "2020-10-13T22:14:59Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/course/manage/course-update.component.ts", "diffHunk": "@@ -113,6 +107,7 @@ export class CourseUpdateComponent implements OnInit {\n             }),\n             studentQuestionsEnabled: new FormControl(this.course.studentQuestionsEnabled),\n             registrationEnabled: new FormControl(this.course.registrationEnabled),\n+            registrationConfirmationMessage: new FormControl(this.course.registrationConfirmationMessage),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4310e7888b52f62b9dfb16d200dd5b982a60b133"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTUwMTQ4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/home/home.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDoxMDo1N1rOHhVDIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDoyMzozMFrOHhVptA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwOTkyMg==", "bodyText": "An idea for a future PR might be to allow to customize this, so that other can also set specific warnings/error messages.(?)", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r504709922", "createdAt": "2020-10-14T14:10:57Z", "author": {"login": "FrankeLukas"}, "path": "src/main/webapp/app/home/home.component.ts", "diffHunk": "@@ -60,26 +58,25 @@ export class HomeComponent implements OnInit, AfterViewInit {\n     ) {}\n \n     ngOnInit() {\n-        this.profileService\n-            .getProfileInfo()\n-            .pipe(\n-                filter(Boolean),\n-                tap((info: ProfileInfo) => {\n-                    if (!info.activeProfiles.includes('jira')) {\n-                        // if the server is not connected to an external user management such as JIRA, we accept all valid username patterns\n-                        this.usernameRegexPattern = /^[a-z0-9_-]{3,100}$/;\n-                        this.signInMessage = 'home.pleaseSignIn';\n-                        this.errorMesssageUsername = 'home.errors.usernameIncorrect';\n-                        this.externalUserManagementActive = false;\n-                    } else {\n-                        this.externalUserManagementUrl = info.externalUserManagementURL;\n-                        this.externalUserManagementName = info.externalUserManagementName;\n+        this.profileService.getProfileInfo().subscribe((profileInfo) => {\n+            if (profileInfo) {\n+                if (profileInfo.activeProfiles.includes('jira')) {\n+                    this.externalUserManagementUrl = profileInfo.externalUserManagementURL;\n+                    this.externalUserManagementName = profileInfo.externalUserManagementName;\n+                    if (profileInfo.allowedLdapUsernamePattern) {\n+                        this.usernameRegexPattern = new RegExp(profileInfo.allowedLdapUsernamePattern);\n                     }\n-\n-                    this.isRegistrationEnabled = info.registrationEnabled || false;\n-                }),\n-            )\n-            .subscribe();\n+                } else {\n+                    // TODO: in the future we might also allow external user management for non jira profiles\n+                    this.externalUserManagementActive = false;\n+                }\n+                this.accountName = profileInfo.accountName;\n+                if (this.accountName === 'TUM') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0293f54c49eacbd3308583c6934666cebb97a1"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxOTc5Ng==", "bodyText": "yes, we can do this in a follow-up. I was a bit lazy in the end ;-) and wanted to avoid too many config options.", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r504719796", "createdAt": "2020-10-14T14:23:30Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/home/home.component.ts", "diffHunk": "@@ -60,26 +58,25 @@ export class HomeComponent implements OnInit, AfterViewInit {\n     ) {}\n \n     ngOnInit() {\n-        this.profileService\n-            .getProfileInfo()\n-            .pipe(\n-                filter(Boolean),\n-                tap((info: ProfileInfo) => {\n-                    if (!info.activeProfiles.includes('jira')) {\n-                        // if the server is not connected to an external user management such as JIRA, we accept all valid username patterns\n-                        this.usernameRegexPattern = /^[a-z0-9_-]{3,100}$/;\n-                        this.signInMessage = 'home.pleaseSignIn';\n-                        this.errorMesssageUsername = 'home.errors.usernameIncorrect';\n-                        this.externalUserManagementActive = false;\n-                    } else {\n-                        this.externalUserManagementUrl = info.externalUserManagementURL;\n-                        this.externalUserManagementName = info.externalUserManagementName;\n+        this.profileService.getProfileInfo().subscribe((profileInfo) => {\n+            if (profileInfo) {\n+                if (profileInfo.activeProfiles.includes('jira')) {\n+                    this.externalUserManagementUrl = profileInfo.externalUserManagementURL;\n+                    this.externalUserManagementName = profileInfo.externalUserManagementName;\n+                    if (profileInfo.allowedLdapUsernamePattern) {\n+                        this.usernameRegexPattern = new RegExp(profileInfo.allowedLdapUsernamePattern);\n                     }\n-\n-                    this.isRegistrationEnabled = info.registrationEnabled || false;\n-                }),\n-            )\n-            .subscribe();\n+                } else {\n+                    // TODO: in the future we might also allow external user management for non jira profiles\n+                    this.externalUserManagementActive = false;\n+                }\n+                this.accountName = profileInfo.accountName;\n+                if (this.accountName === 'TUM') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwOTkyMg=="}, "originalCommit": {"oid": "db0293f54c49eacbd3308583c6934666cebb97a1"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTk0MzMzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/overview/course-registration-selector/course-registration-selector.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTo0MDozMFrOHhZW-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTo0OToyOFrOHhZvvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4MDUzOA==", "bodyText": "this can lead to a problem if a regex is specified with only a start or only a regex end e.g. ^[a-zA-Z0-9_\\-\\.\\+]+@(gmail.com) or [a-zA-Z0-9_\\-\\.\\+]+@(gmail.com)$\nwe would than wrap that again resulting in ^(^[a-zA-Z0-9_\\-\\.\\+]+@(gmail.com))$ or ^([a-zA-Z0-9_\\-\\.\\+]+@(gmail.com)$)$", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r504780538", "createdAt": "2020-10-14T15:40:30Z", "author": {"login": "TobiasPr"}, "path": "src/main/webapp/app/overview/course-registration-selector/course-registration-selector.component.ts", "diffHunk": "@@ -31,8 +31,14 @@ export class CourseRegistrationSelectorComponent implements OnInit {\n             this.profileService.getProfileInfo().subscribe((profileInfo) => {\n                 if (profileInfo) {\n                     if (profileInfo.allowedCourseRegistrationUsernamePattern) {\n-                        const regex = new RegExp(profileInfo.allowedCourseRegistrationUsernamePattern);\n-                        this.userIsAllowedToRegister = !!user!.login!.match(regex);\n+                        // we want to test for a full match, so wrap the regex in ^ and $\n+                        let regex = profileInfo.allowedCourseRegistrationUsernamePattern;\n+                        if (!regex.startsWith('^') && !regex.endsWith('$')) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bce51c36d706c9d5db3cfd6c2b98b4feea39b09"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4MzIyNA==", "bodyText": "That should be a || instead of &&. Will fix, thanks.", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r504783224", "createdAt": "2020-10-14T15:44:18Z", "author": {"login": "FrankeLukas"}, "path": "src/main/webapp/app/overview/course-registration-selector/course-registration-selector.component.ts", "diffHunk": "@@ -31,8 +31,14 @@ export class CourseRegistrationSelectorComponent implements OnInit {\n             this.profileService.getProfileInfo().subscribe((profileInfo) => {\n                 if (profileInfo) {\n                     if (profileInfo.allowedCourseRegistrationUsernamePattern) {\n-                        const regex = new RegExp(profileInfo.allowedCourseRegistrationUsernamePattern);\n-                        this.userIsAllowedToRegister = !!user!.login!.match(regex);\n+                        // we want to test for a full match, so wrap the regex in ^ and $\n+                        let regex = profileInfo.allowedCourseRegistrationUsernamePattern;\n+                        if (!regex.startsWith('^') && !regex.endsWith('$')) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4MDUzOA=="}, "originalCommit": {"oid": "1bce51c36d706c9d5db3cfd6c2b98b4feea39b09"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4Njg3OA==", "bodyText": "never mind I think it is correct just got it wrong, but one question: what happens to the case when we do start only with ^ or end with $ should it then also be wrapped?", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r504786878", "createdAt": "2020-10-14T15:49:28Z", "author": {"login": "TobiasPr"}, "path": "src/main/webapp/app/overview/course-registration-selector/course-registration-selector.component.ts", "diffHunk": "@@ -31,8 +31,14 @@ export class CourseRegistrationSelectorComponent implements OnInit {\n             this.profileService.getProfileInfo().subscribe((profileInfo) => {\n                 if (profileInfo) {\n                     if (profileInfo.allowedCourseRegistrationUsernamePattern) {\n-                        const regex = new RegExp(profileInfo.allowedCourseRegistrationUsernamePattern);\n-                        this.userIsAllowedToRegister = !!user!.login!.match(regex);\n+                        // we want to test for a full match, so wrap the regex in ^ and $\n+                        let regex = profileInfo.allowedCourseRegistrationUsernamePattern;\n+                        if (!regex.startsWith('^') && !regex.endsWith('$')) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc4MDUzOA=="}, "originalCommit": {"oid": "1bce51c36d706c9d5db3cfd6c2b98b4feea39b09"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjcwMTM0OnYy", "diffSide": "LEFT", "path": "src/main/webapp/app/overview/course-registration-selector/course-registration-selector.component.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzo0MDoyN1rOHiIXCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzo0MDoyN1rOHiIXCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU1MDYwMw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/ls1intum/Artemis/pull/2174#discussion_r505550603", "createdAt": "2020-10-15T13:40:27Z", "author": {"login": "1-alex98"}, "path": "src/main/webapp/app/overview/course-registration-selector/course-registration-selector.component.html", "diffHunk": "@@ -1,44 +1,49 @@\n <div *ngIf=\"courses\">\n-    <div class=\"col-12 col-sm-auto\" *ngIf=\"!showCourseSelection && !addedSuccessful && isTumStudent\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7fd1cea6a1099995c640d16b25d338e2d15d08"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4504, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}