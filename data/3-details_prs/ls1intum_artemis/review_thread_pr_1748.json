{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMzgxNTYy", "number": 1748, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo1Nzo1NlrOEJrAuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo1OTo1NVrOEJrEPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTc3MzM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/StudentExamAccessService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo1Nzo1NlrOGqSPNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo1Nzo1NlrOGqSPNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5MjE4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Check that the exam is live\n          \n          \n            \n                    // Check that the exam is already visible. After the exam, we directly show the summary!", "url": "https://github.com/ls1intum/Artemis/pull/1748#discussion_r446992181", "createdAt": "2020-06-29T13:57:56Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/StudentExamAccessService.java", "diffHunk": "@@ -95,8 +95,7 @@ public StudentExamAccessService(CourseService courseService, UserService userSer\n         }\n \n         // Check that the exam is live", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a74a1a7df2f3f82c73cd8c298cc72110d6d2240"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTc4MjM3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exam/participate/exam-participation.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo1OTo1NVrOGqSU5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzo1OTo1NVrOGqSU5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5MzYzNg==", "bodyText": "I will approve this for now, but in the future we should check if the student has actually participated in the exam and only then we will show the summary page. We might need to add a new attribute to StudentExam to track this. (something similar like the initializationState in the Participation)", "url": "https://github.com/ls1intum/Artemis/pull/1748#discussion_r446993636", "createdAt": "2020-06-29T13:59:55Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exam/participate/exam-participation.component.ts", "diffHunk": "@@ -77,7 +77,14 @@ export class ExamParticipationComponent implements OnInit, OnDestroy {\n         this.route.parent!.params.subscribe((params) => {\n             this.courseId = parseInt(params['courseId'], 10);\n             this.examId = parseInt(params['examId'], 10);\n-            this.examParticipationService.loadExam(this.courseId, this.examId).subscribe((exam) => (this.exam = exam));\n+            this.examParticipationService.loadExam(this.courseId, this.examId).subscribe((exam) => {\n+                this.exam = exam;\n+                if (this.isOver()) {\n+                    this.examParticipationService.loadStudentExam(this.exam.course.id, this.exam.id).subscribe((studentExam: StudentExam) => {\n+                        this.studentExam = studentExam;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64450d3ee04f54df36d812ce1529db90193bee62"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4932, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}