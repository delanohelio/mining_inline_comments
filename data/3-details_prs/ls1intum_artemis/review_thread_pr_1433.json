{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0OTYxODA5", "number": 1433, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTo0MDo1MlrOD7BsBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTo0MToxM1rOEBfXnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIwMjI5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.module.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTo0MDo1MlrOGTH0ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjowMDo0MlrOGTi0mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDI2Ng==", "bodyText": "I do not think we need a new Module for this. Please check our module structure (e.g. #1248) and decide if this fits in an existing module.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422704266", "createdAt": "2020-05-10T21:40:52Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.module.ts", "diffHunk": "@@ -0,0 +1,17 @@\n+import { NgModule } from '@angular/core';\n+import { AssessmentLocksComponent } from './assessment-locks.component';\n+import { MomentModule } from 'ngx-moment';\n+import { ClipboardModule } from 'ngx-clipboard';\n+import { RouterModule } from '@angular/router';\n+import { assessmentLocksRoute } from 'app/assessment/assessment-locks/assessment-locks.route';\n+import { SortByModule } from 'app/shared/pipes/sort-by.module';\n+import { ArtemisSharedModule } from 'app/shared/shared.module';\n+\n+const ENTITY_STATES = [...assessmentLocksRoute];\n+\n+@NgModule({\n+    imports: [ArtemisSharedModule, MomentModule, ClipboardModule, RouterModule.forChild(ENTITY_STATES), SortByModule],\n+    declarations: [AssessmentLocksComponent],\n+    exports: [AssessmentLocksComponent],\n+})\n+export class ArtemisAssessmentLocksModule {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE0NjY1MQ==", "bodyText": "I put it in the assessment-shared.module.ts.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423146651", "createdAt": "2020-05-11T16:00:42Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.module.ts", "diffHunk": "@@ -0,0 +1,17 @@\n+import { NgModule } from '@angular/core';\n+import { AssessmentLocksComponent } from './assessment-locks.component';\n+import { MomentModule } from 'ngx-moment';\n+import { ClipboardModule } from 'ngx-clipboard';\n+import { RouterModule } from '@angular/router';\n+import { assessmentLocksRoute } from 'app/assessment/assessment-locks/assessment-locks.route';\n+import { SortByModule } from 'app/shared/pipes/sort-by.module';\n+import { ArtemisSharedModule } from 'app/shared/shared.module';\n+\n+const ENTITY_STATES = [...assessmentLocksRoute];\n+\n+@NgModule({\n+    imports: [ArtemisSharedModule, MomentModule, ClipboardModule, RouterModule.forChild(ENTITY_STATES), SortByModule],\n+    declarations: [AssessmentLocksComponent],\n+    exports: [AssessmentLocksComponent],\n+})\n+export class ArtemisAssessmentLocksModule {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDI2Ng=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIwNTMyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/entities/submission.model.ts", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTo0NDoxOFrOGTH1_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo1NToxNlrOGTa-Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDYzNg==", "bodyText": "I do not like this change. A Submission does not have an exercise id. Adding this here may lead to many problems in the future that would lead to a compile error now.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public exerciseId?: number;", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422704636", "createdAt": "2020-05-10T21:44:18Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/entities/submission.model.ts", "diffHunk": "@@ -34,6 +34,8 @@ export abstract class Submission implements BaseEntity {\n \n     public language: Language | null;\n \n+    public exerciseId?: number;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4MzE2Mg==", "bodyText": "Is there another way to conclude the corresponding exercise from a submission without having to do a lookup on which exercise contains the given submission?", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422983162", "createdAt": "2020-05-11T11:48:44Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/entities/submission.model.ts", "diffHunk": "@@ -34,6 +34,8 @@ export abstract class Submission implements BaseEntity {\n \n     public language: Language | null;\n \n+    public exerciseId?: number;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDYzNg=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwNzg3Ng==", "bodyText": "submission.participation.exercise", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423007876", "createdAt": "2020-05-11T12:37:00Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/entities/submission.model.ts", "diffHunk": "@@ -34,6 +34,8 @@ export abstract class Submission implements BaseEntity {\n \n     public language: Language | null;\n \n+    public exerciseId?: number;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDYzNg=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxODAxNQ==", "bodyText": "awesome, thanks :) removed this change", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423018015", "createdAt": "2020-05-11T12:55:16Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/entities/submission.model.ts", "diffHunk": "@@ -34,6 +34,8 @@ export abstract class Submission implements BaseEntity {\n \n     public language: Language | null;\n \n+    public exerciseId?: number;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDYzNg=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIwNjQzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/course/dashboards/tutor-course-dashboard/tutor-course-dashboard.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTo0NTo0OFrOGTH2jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMTo1OTowOVrOGTZJpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDc4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                readonly TEXT = ExerciseType.TEXT;\n          \n          \n            \n                readonly MODELING = ExerciseType.MODELING;\n          \n          \n            \n                readonly FILE_UPLOAD = ExerciseType.FILE_UPLOAD;\n          \n          \n            \n                readonly ExerciseType = ExerciseType;", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422704780", "createdAt": "2020-05-10T21:45:48Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/course/dashboards/tutor-course-dashboard/tutor-course-dashboard.component.ts", "diffHunk": "@@ -47,6 +48,10 @@ export class TutorCourseDashboardComponent implements OnInit, AfterViewInit {\n \n     exerciseForGuidedTour: Exercise | null;\n \n+    readonly TEXT = ExerciseType.TEXT;\n+    readonly MODELING = ExerciseType.MODELING;\n+    readonly FILE_UPLOAD = ExerciseType.FILE_UPLOAD;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk4ODE5OQ==", "bodyText": "Removed as the changes in the corresponding html file made it redundant.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422988199", "createdAt": "2020-05-11T11:59:09Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/course/dashboards/tutor-course-dashboard/tutor-course-dashboard.component.ts", "diffHunk": "@@ -47,6 +48,10 @@ export class TutorCourseDashboardComponent implements OnInit, AfterViewInit {\n \n     exerciseForGuidedTour: Exercise | null;\n \n+    readonly TEXT = ExerciseType.TEXT;\n+    readonly MODELING = ExerciseType.MODELING;\n+    readonly FILE_UPLOAD = ExerciseType.FILE_UPLOAD;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDc4MA=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIwNzkxOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/course/dashboards/tutor-course-dashboard/tutor-course-dashboard.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTo0Nzo1MVrOGTH3RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjozODo0MFrOGTaZ7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDk2NA==", "bodyText": "Could this work here?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    <button\n          \n          \n            \n                                        *ngIf=\"exercise.type === MODELING\"\n          \n          \n            \n                                        class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                        [routerLink]=\"['/course-management', course.id, 'modeling-exercises', exercise.id, 'assessment']\"\n          \n          \n            \n                                    >\n          \n          \n            \n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n          \n          \n            \n                                    </button>\n          \n          \n            \n                                    <button\n          \n          \n            \n                                        *ngIf=\"exercise.type === TEXT\"\n          \n          \n            \n                                        class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                        [routerLink]=\"['/course-management', course.id, 'text-exercises', exercise.id, 'assessment']\"\n          \n          \n            \n                                    >\n          \n          \n            \n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n          \n          \n            \n                                    </button>\n          \n          \n            \n                                    <button\n          \n          \n            \n                                        *ngIf=\"exercise.type === FILE_UPLOAD\"\n          \n          \n            \n                                        class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                        [routerLink]=\"['/course-management', course.id, 'file-upload-exercises', exercise.id, 'assessment']\"\n          \n          \n            \n                                    >\n          \n          \n            \n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n          \n          \n            \n                                    </button>\n          \n          \n            \n                                    <button\n          \n          \n            \n                                        class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                        [routerLink]=\"['/course-management', course.id, exercise.type + '-exercises', exercise.id, 'assessment']\"\n          \n          \n            \n                                    >\n          \n          \n            \n                                        <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n          \n          \n            \n                                    </button>", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422704964", "createdAt": "2020-05-10T21:47:51Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/course/dashboards/tutor-course-dashboard/tutor-course-dashboard.component.html", "diffHunk": "@@ -131,6 +140,27 @@ <h2>\n                         >\n                             <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.exerciseDashboard\">Exercise dashboard</span>\n                         </button>\n+                        <button\n+                            *ngIf=\"exercise.type === MODELING\"\n+                            class=\"btn btn-primary btn-sm mr-1\"\n+                            [routerLink]=\"['/course-management', course.id, 'modeling-exercises', exercise.id, 'assessment']\"\n+                        >\n+                            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n+                        </button>\n+                        <button\n+                            *ngIf=\"exercise.type === TEXT\"\n+                            class=\"btn btn-primary btn-sm mr-1\"\n+                            [routerLink]=\"['/course-management', course.id, 'text-exercises', exercise.id, 'assessment']\"\n+                        >\n+                            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n+                        </button>\n+                        <button\n+                            *ngIf=\"exercise.type === FILE_UPLOAD\"\n+                            class=\"btn btn-primary btn-sm mr-1\"\n+                            [routerLink]=\"['/course-management', course.id, 'file-upload-exercises', exercise.id, 'assessment']\"\n+                        >\n+                            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n+                        </button>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwODc1MA==", "bodyText": "Yes, works as expected, thanks :)", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423008750", "createdAt": "2020-05-11T12:38:40Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/course/dashboards/tutor-course-dashboard/tutor-course-dashboard.component.html", "diffHunk": "@@ -131,6 +140,27 @@ <h2>\n                         >\n                             <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.exerciseDashboard\">Exercise dashboard</span>\n                         </button>\n+                        <button\n+                            *ngIf=\"exercise.type === MODELING\"\n+                            class=\"btn btn-primary btn-sm mr-1\"\n+                            [routerLink]=\"['/course-management', course.id, 'modeling-exercises', exercise.id, 'assessment']\"\n+                        >\n+                            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n+                        </button>\n+                        <button\n+                            *ngIf=\"exercise.type === TEXT\"\n+                            class=\"btn btn-primary btn-sm mr-1\"\n+                            [routerLink]=\"['/course-management', course.id, 'text-exercises', exercise.id, 'assessment']\"\n+                        >\n+                            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n+                        </button>\n+                        <button\n+                            *ngIf=\"exercise.type === FILE_UPLOAD\"\n+                            class=\"btn btn-primary btn-sm mr-1\"\n+                            [routerLink]=\"['/course-management', course.id, 'file-upload-exercises', exercise.id, 'assessment']\"\n+                        >\n+                            <span class=\"d-none d-md-inline\" jhiTranslate=\"artemisApp.exercise.submissions\">Submissions</span>\n+                        </button>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDk2NA=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIwOTE0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/course/dashboards/instructor-course-dashboard/instructor-course-dashboard.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTo0ODo1NVrOGTH30w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo0MDozM1rOGTaeHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTEwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                readonly TEXT = ExerciseType.TEXT;\n          \n          \n            \n                readonly MODELING = ExerciseType.MODELING;\n          \n          \n            \n                readonly FILE_UPLOAD = ExerciseType.FILE_UPLOAD;\n          \n          \n            \n                readonly ExerciseType = ExerciseType;", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422705107", "createdAt": "2020-05-10T21:48:55Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/course/dashboards/instructor-course-dashboard/instructor-course-dashboard.component.ts", "diffHunk": "@@ -31,14 +34,29 @@ export class InstructorCourseDashboardComponent implements OnInit {\n     readonly MIN_POINTS_GREEN = 100;\n     readonly MIN_POINTS_ORANGE = 50;\n \n-    constructor(private courseService: CourseManagementService, private resultService: ResultService, private route: ActivatedRoute, private jhiAlertService: AlertService) {}\n+    readonly TEXT = ExerciseType.TEXT;\n+    readonly MODELING = ExerciseType.MODELING;\n+    readonly FILE_UPLOAD = ExerciseType.FILE_UPLOAD;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAwOTgyMw==", "bodyText": "Removed as the changes in the corresponding html file made it redundant.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423009823", "createdAt": "2020-05-11T12:40:33Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/course/dashboards/instructor-course-dashboard/instructor-course-dashboard.component.ts", "diffHunk": "@@ -31,14 +34,29 @@ export class InstructorCourseDashboardComponent implements OnInit {\n     readonly MIN_POINTS_GREEN = 100;\n     readonly MIN_POINTS_ORANGE = 50;\n \n-    constructor(private courseService: CourseManagementService, private resultService: ResultService, private route: ActivatedRoute, private jhiAlertService: AlertService) {}\n+    readonly TEXT = ExerciseType.TEXT;\n+    readonly MODELING = ExerciseType.MODELING;\n+    readonly FILE_UPLOAD = ExerciseType.FILE_UPLOAD;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTEwNw=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIxMTg0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/course/dashboards/instructor-course-dashboard/instructor-course-dashboard.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTo1MjoyNVrOGTH5Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo1MTowOFrOGTa1Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTQ0Nw==", "bodyText": "Could this work here? Maybe filter like [ExerciseType.MODELING, ExerciseType. TEXT, ExerciseType. FILE_UPLOAD].includes(exercise.type).\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            <button\n          \n          \n            \n                                                *ngIf=\"exercise.type === MODELING\"\n          \n          \n            \n                                                class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                                routerLink=\"/course-management/{{ course.id }}/modeling-exercises/{{ exercise.id }}/assessment\"\n          \n          \n            \n                                            >\n          \n          \n            \n                                                {{ 'artemisApp.exercise.submissions' | translate }}\n          \n          \n            \n                                            </button>\n          \n          \n            \n                                            <button\n          \n          \n            \n                                                *ngIf=\"exercise.type === TEXT\"\n          \n          \n            \n                                                class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                                routerLink=\"/course-management/{{ course.id }}/text-exercises/{{ exercise.id }}/assessment\"\n          \n          \n            \n                                            >\n          \n          \n            \n                                                {{ 'artemisApp.exercise.submissions' | translate }}\n          \n          \n            \n                                            </button>\n          \n          \n            \n                                            <button\n          \n          \n            \n                                                *ngIf=\"exercise.type === FILE_UPLOAD\"\n          \n          \n            \n                                                class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                                routerLink=\"/course-management/{{ course.id }}/file-upload-exercises/{{ exercise.id }}/assessment\"\n          \n          \n            \n                                            >\n          \n          \n            \n                                                {{ 'artemisApp.exercise.submissions' | translate }}\n          \n          \n            \n                                            </button>\n          \n          \n            \n                                            <button\n          \n          \n            \n                                                class=\"btn btn-primary btn-sm mr-1\"\n          \n          \n            \n                                                routerLink=\"/course-management/{{ course.id }}/{{exercise.type}}-exercises/{{ exercise.id }}/assessment\"\n          \n          \n            \n                                            >\n          \n          \n            \n                                                {{ 'artemisApp.exercise.submissions' | translate }}\n          \n          \n            \n                                            </button>\n          \n      \n    \n    \n  \n\nAlso consider using the [routerLink]=\"[..]\" notation maybe?", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422705447", "createdAt": "2020-05-10T21:52:25Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/course/dashboards/instructor-course-dashboard/instructor-course-dashboard.component.html", "diffHunk": "@@ -122,9 +127,32 @@ <h3>\n                             </div>\n                         </td>\n                         <td>\n-                            <button class=\"btn btn-primary\" routerLink=\"/course-management/{{ course.id }}/exercises/{{ exercise.id }}/instructor-dashboard\">\n-                                {{ 'artemisApp.instructorCourseDashboard.exerciseDashboard' | translate }}\n-                            </button>\n+                            <div class=\"btn-group flex-btn-group-container\">\n+                                <button class=\"btn btn-primary btn-sm mr-1\" routerLink=\"/course-management/{{ course.id }}/exercises/{{ exercise.id }}/instructor-dashboard\">\n+                                    {{ 'artemisApp.instructorCourseDashboard.exerciseDashboard' | translate }}\n+                                </button>\n+                                <button\n+                                    *ngIf=\"exercise.type === MODELING\"\n+                                    class=\"btn btn-primary btn-sm mr-1\"\n+                                    routerLink=\"/course-management/{{ course.id }}/modeling-exercises/{{ exercise.id }}/assessment\"\n+                                >\n+                                    {{ 'artemisApp.exercise.submissions' | translate }}\n+                                </button>\n+                                <button\n+                                    *ngIf=\"exercise.type === TEXT\"\n+                                    class=\"btn btn-primary btn-sm mr-1\"\n+                                    routerLink=\"/course-management/{{ course.id }}/text-exercises/{{ exercise.id }}/assessment\"\n+                                >\n+                                    {{ 'artemisApp.exercise.submissions' | translate }}\n+                                </button>\n+                                <button\n+                                    *ngIf=\"exercise.type === FILE_UPLOAD\"\n+                                    class=\"btn btn-primary btn-sm mr-1\"\n+                                    routerLink=\"/course-management/{{ course.id }}/file-upload-exercises/{{ exercise.id }}/assessment\"\n+                                >\n+                                    {{ 'artemisApp.exercise.submissions' | translate }}\n+                                </button>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxNTc2Mw==", "bodyText": "Changed as suggested", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423015763", "createdAt": "2020-05-11T12:51:08Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/course/dashboards/instructor-course-dashboard/instructor-course-dashboard.component.html", "diffHunk": "@@ -122,9 +127,32 @@ <h3>\n                             </div>\n                         </td>\n                         <td>\n-                            <button class=\"btn btn-primary\" routerLink=\"/course-management/{{ course.id }}/exercises/{{ exercise.id }}/instructor-dashboard\">\n-                                {{ 'artemisApp.instructorCourseDashboard.exerciseDashboard' | translate }}\n-                            </button>\n+                            <div class=\"btn-group flex-btn-group-container\">\n+                                <button class=\"btn btn-primary btn-sm mr-1\" routerLink=\"/course-management/{{ course.id }}/exercises/{{ exercise.id }}/instructor-dashboard\">\n+                                    {{ 'artemisApp.instructorCourseDashboard.exerciseDashboard' | translate }}\n+                                </button>\n+                                <button\n+                                    *ngIf=\"exercise.type === MODELING\"\n+                                    class=\"btn btn-primary btn-sm mr-1\"\n+                                    routerLink=\"/course-management/{{ course.id }}/modeling-exercises/{{ exercise.id }}/assessment\"\n+                                >\n+                                    {{ 'artemisApp.exercise.submissions' | translate }}\n+                                </button>\n+                                <button\n+                                    *ngIf=\"exercise.type === TEXT\"\n+                                    class=\"btn btn-primary btn-sm mr-1\"\n+                                    routerLink=\"/course-management/{{ course.id }}/text-exercises/{{ exercise.id }}/assessment\"\n+                                >\n+                                    {{ 'artemisApp.exercise.submissions' | translate }}\n+                                </button>\n+                                <button\n+                                    *ngIf=\"exercise.type === FILE_UPLOAD\"\n+                                    class=\"btn btn-primary btn-sm mr-1\"\n+                                    routerLink=\"/course-management/{{ course.id }}/file-upload-exercises/{{ exercise.id }}/assessment\"\n+                                >\n+                                    {{ 'artemisApp.exercise.submissions' | translate }}\n+                                </button>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTQ0Nw=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIxNDM0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTo1NToyM1rOGTH6WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToyMzoxNFrOGTqE_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTc1Mg==", "bodyText": "Can we do this in one network call? If we have a big course, this can trigger many (like 100) network calls!", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422705752", "createdAt": "2020-05-10T21:55:23Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NTUzNQ==", "bodyText": "Yes, refactored the code accordingly.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423265535", "createdAt": "2020-05-11T19:23:14Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTc1Mg=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIxNTY3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTo1NzoyNFrOGTH7Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNDo1MDoxMVrOGTfwUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTk0Mg==", "bodyText": "return not needed, remove arrow function.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422705942", "createdAt": "2020-05-10T21:57:24Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {\n+            switch (exercise.type) {\n+                case ExerciseType.MODELING:\n+                    this.getModelingSubmissions(exercise as ModelingExercise);\n+                    break;\n+\n+                case ExerciseType.TEXT:\n+                    this.getTextSubmissions(exercise as TextExercise);\n+                    break;\n+\n+                case ExerciseType.FILE_UPLOAD:\n+                    this.getFileUploadSubmissions(exercise as FileUploadExercise);\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Get submissions for modeling exercise\n+     * @param exercise modeling exercise\n+     */\n+    getModelingSubmissions(exercise: ModelingExercise) {\n+        this.modelingSubmissionService.getModelingSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<ModelingSubmission[]>) => {\n+            return response.body?.forEach((submission) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA5NjQwMw==", "bodyText": "Refactored", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423096403", "createdAt": "2020-05-11T14:50:11Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {\n+            switch (exercise.type) {\n+                case ExerciseType.MODELING:\n+                    this.getModelingSubmissions(exercise as ModelingExercise);\n+                    break;\n+\n+                case ExerciseType.TEXT:\n+                    this.getTextSubmissions(exercise as TextExercise);\n+                    break;\n+\n+                case ExerciseType.FILE_UPLOAD:\n+                    this.getFileUploadSubmissions(exercise as FileUploadExercise);\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Get submissions for modeling exercise\n+     * @param exercise modeling exercise\n+     */\n+    getModelingSubmissions(exercise: ModelingExercise) {\n+        this.modelingSubmissionService.getModelingSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<ModelingSubmission[]>) => {\n+            return response.body?.forEach((submission) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNTk0Mg=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIxNzE2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTo1ODowMVrOGTH7uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNDo1MDoyNFrOGTfw4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjEwNA==", "bodyText": "This needs to change (see comment above), but this code is duplicated a few times and can easily refactored.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422706104", "createdAt": "2020-05-10T21:58:01Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {\n+            switch (exercise.type) {\n+                case ExerciseType.MODELING:\n+                    this.getModelingSubmissions(exercise as ModelingExercise);\n+                    break;\n+\n+                case ExerciseType.TEXT:\n+                    this.getTextSubmissions(exercise as TextExercise);\n+                    break;\n+\n+                case ExerciseType.FILE_UPLOAD:\n+                    this.getFileUploadSubmissions(exercise as FileUploadExercise);\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Get submissions for modeling exercise\n+     * @param exercise modeling exercise\n+     */\n+    getModelingSubmissions(exercise: ModelingExercise) {\n+        this.modelingSubmissionService.getModelingSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<ModelingSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA5NjU0Ng==", "bodyText": "Refactored", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423096546", "createdAt": "2020-05-11T14:50:24Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {\n+            switch (exercise.type) {\n+                case ExerciseType.MODELING:\n+                    this.getModelingSubmissions(exercise as ModelingExercise);\n+                    break;\n+\n+                case ExerciseType.TEXT:\n+                    this.getTextSubmissions(exercise as TextExercise);\n+                    break;\n+\n+                case ExerciseType.FILE_UPLOAD:\n+                    this.getFileUploadSubmissions(exercise as FileUploadExercise);\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Get submissions for modeling exercise\n+     * @param exercise modeling exercise\n+     */\n+    getModelingSubmissions(exercise: ModelingExercise) {\n+        this.modelingSubmissionService.getModelingSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<ModelingSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjEwNA=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIxODI2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTo1OTowNFrOGTH8Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMzoyMzoxOVrOGTcBUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjIzNQ==", "bodyText": "In this case, do we need to perform all 100 network calls again?", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422706235", "createdAt": "2020-05-10T21:59:04Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {\n+            switch (exercise.type) {\n+                case ExerciseType.MODELING:\n+                    this.getModelingSubmissions(exercise as ModelingExercise);\n+                    break;\n+\n+                case ExerciseType.TEXT:\n+                    this.getTextSubmissions(exercise as TextExercise);\n+                    break;\n+\n+                case ExerciseType.FILE_UPLOAD:\n+                    this.getFileUploadSubmissions(exercise as FileUploadExercise);\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Get submissions for modeling exercise\n+     * @param exercise modeling exercise\n+     */\n+    getModelingSubmissions(exercise: ModelingExercise) {\n+        this.modelingSubmissionService.getModelingSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<ModelingSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.modelingSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get submissions for text exercise\n+     * @param exercise text exercise\n+     */\n+    getTextSubmissions(exercise: TextExercise) {\n+        this.textSubmissionService.getTextSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<TextSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.textSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get submissions for file uplaod exercise\n+     * @param exercise file upload exercise\n+     */\n+    getFileUploadSubmissions(exercise: FileUploadExercise) {\n+        this.fileUploadSubmissionService.getFileUploadSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<FileUploadSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.fileUploadSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Cancel the current assessment and reload the submissions to reflect the change.\n+     * @param submission submission\n+     */\n+    cancelModelingAssessment(submission: Submission) {\n+        const confirmCancel = window.confirm(this.cancelConfirmationText);\n+        if (confirmCancel) {\n+            this.modelingAssessmentService.cancelAssessment(submission.id).subscribe(() => {\n+                this.getAllSubmissions(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 193}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAzNTIxNw==", "bodyText": "No, now it simply removes the submission locally without a full reload after canceling it through a network call .", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423035217", "createdAt": "2020-05-11T13:23:19Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {\n+            switch (exercise.type) {\n+                case ExerciseType.MODELING:\n+                    this.getModelingSubmissions(exercise as ModelingExercise);\n+                    break;\n+\n+                case ExerciseType.TEXT:\n+                    this.getTextSubmissions(exercise as TextExercise);\n+                    break;\n+\n+                case ExerciseType.FILE_UPLOAD:\n+                    this.getFileUploadSubmissions(exercise as FileUploadExercise);\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Get submissions for modeling exercise\n+     * @param exercise modeling exercise\n+     */\n+    getModelingSubmissions(exercise: ModelingExercise) {\n+        this.modelingSubmissionService.getModelingSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<ModelingSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.modelingSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get submissions for text exercise\n+     * @param exercise text exercise\n+     */\n+    getTextSubmissions(exercise: TextExercise) {\n+        this.textSubmissionService.getTextSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<TextSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.textSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get submissions for file uplaod exercise\n+     * @param exercise file upload exercise\n+     */\n+    getFileUploadSubmissions(exercise: FileUploadExercise) {\n+        this.fileUploadSubmissionService.getFileUploadSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<FileUploadSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.fileUploadSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Cancel the current assessment and reload the submissions to reflect the change.\n+     * @param submission submission\n+     */\n+    cancelModelingAssessment(submission: Submission) {\n+        const confirmCancel = window.confirm(this.cancelConfirmationText);\n+        if (confirmCancel) {\n+            this.modelingAssessmentService.cancelAssessment(submission.id).subscribe(() => {\n+                this.getAllSubmissions(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjIzNQ=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 193}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIxODc5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTo1OTo1NFrOGTH8gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMzoyMToxNVrOGTb79w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjMwNg==", "bodyText": "This is duplicated code and could be one function.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422706306", "createdAt": "2020-05-10T21:59:54Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {\n+            switch (exercise.type) {\n+                case ExerciseType.MODELING:\n+                    this.getModelingSubmissions(exercise as ModelingExercise);\n+                    break;\n+\n+                case ExerciseType.TEXT:\n+                    this.getTextSubmissions(exercise as TextExercise);\n+                    break;\n+\n+                case ExerciseType.FILE_UPLOAD:\n+                    this.getFileUploadSubmissions(exercise as FileUploadExercise);\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Get submissions for modeling exercise\n+     * @param exercise modeling exercise\n+     */\n+    getModelingSubmissions(exercise: ModelingExercise) {\n+        this.modelingSubmissionService.getModelingSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<ModelingSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.modelingSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get submissions for text exercise\n+     * @param exercise text exercise\n+     */\n+    getTextSubmissions(exercise: TextExercise) {\n+        this.textSubmissionService.getTextSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<TextSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.textSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get submissions for file uplaod exercise\n+     * @param exercise file upload exercise\n+     */\n+    getFileUploadSubmissions(exercise: FileUploadExercise) {\n+        this.fileUploadSubmissionService.getFileUploadSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<FileUploadSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.fileUploadSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Cancel the current assessment and reload the submissions to reflect the change.\n+     * @param submission submission\n+     */\n+    cancelModelingAssessment(submission: Submission) {\n+        const confirmCancel = window.confirm(this.cancelConfirmationText);\n+        if (confirmCancel) {\n+            this.modelingAssessmentService.cancelAssessment(submission.id).subscribe(() => {\n+                this.getAllSubmissions(true);\n+            });\n+        }\n+    }\n+\n+    /**\n+     * Cancel the current assessment and reload the submissions to reflect the change.\n+     * @param submission submission\n+     */\n+    cancelTextAssessment(submission: Submission) {\n+        const confirmCancel = window.confirm(this.cancelConfirmationText);\n+        if (confirmCancel && submission.exerciseId) {\n+            this.textAssessmentsService.cancelAssessment(submission.exerciseId, submission.id).subscribe(() => {\n+                this.getAllSubmissions(true);\n+            });\n+        }\n+    }\n+\n+    /**\n+     * Cancel the current assessment and reload the submissions to reflect the change.\n+     * @param submission submission\n+     */\n+    cancelFileUploadAssessment(submission: Submission) {\n+        const confirmCancel = window.confirm(this.cancelConfirmationText);\n+        if (confirmCancel) {\n+            this.fileUploadAssessmentsService.cancelAssessment(submission.id).subscribe(() => {\n+                this.getAllSubmissions(true);\n+            });\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 222}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAzMzg0Nw==", "bodyText": "Refactored to one function", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423033847", "createdAt": "2020-05-11T13:21:15Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,248 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { FileUploadExercise } from 'app/entities/file-upload-exercise.model';\n+import { FileUploadSubmission } from 'app/entities/file-upload-submission.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, ExerciseType } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { ModelingSubmission } from 'app/entities/modeling-submission.model';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    modelingSubmissions: ModelingSubmission[] = [];\n+    textSubmissions: TextSubmission[] = [];\n+    fileUploadSubmissions: FileUploadSubmission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,\n+        translateService: TranslateService,\n+        private location: Location,\n+        private courseService: CourseManagementService,\n+    ) {\n+        translateService.get('artemisApp.assessment.messages.confirmCancel').subscribe((text) => (this.cancelConfirmationText = text));\n+    }\n+\n+    public async ngOnInit(): Promise<void> {\n+        this.route.params.subscribe((params) => {\n+            this.courseId = Number(params['courseId']);\n+        });\n+        this.route.queryParams.subscribe((queryParams) => {\n+            this.tutorId = Number(queryParams['tutorId']);\n+        });\n+        this.getExercises();\n+    }\n+\n+    /**\n+     * Get exercises for course\n+     */\n+    getExercises() {\n+        this.courseService.getForTutors(this.courseId).subscribe(\n+            (res: HttpResponse<Course>) => {\n+                if (!res.body) {\n+                    return;\n+                }\n+\n+                this.course = res.body;\n+                this.course.isAtLeastTutor = this.accountService.isAtLeastTutorInCourse(this.course);\n+                this.course.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.course);\n+\n+                if (this.course.exercises.length > 0) {\n+                    this.exercises = this.course.exercises;\n+                }\n+\n+                this.getAllSubmissions();\n+            },\n+            (response: string) => this.onError(response),\n+        );\n+    }\n+\n+    /**\n+     * Get submissions for exercise types modeling, text and file upload.\n+     * @param reload tells whether to reload all submissions\n+     */\n+    getAllSubmissions(reload?: boolean) {\n+        if (reload) {\n+            this.modelingSubmissions = [];\n+            this.textSubmissions = [];\n+            this.fileUploadSubmissions = [];\n+        }\n+        for (const exercise of this.exercises) {\n+            switch (exercise.type) {\n+                case ExerciseType.MODELING:\n+                    this.getModelingSubmissions(exercise as ModelingExercise);\n+                    break;\n+\n+                case ExerciseType.TEXT:\n+                    this.getTextSubmissions(exercise as TextExercise);\n+                    break;\n+\n+                case ExerciseType.FILE_UPLOAD:\n+                    this.getFileUploadSubmissions(exercise as FileUploadExercise);\n+                    break;\n+\n+                default:\n+                    break;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Get submissions for modeling exercise\n+     * @param exercise modeling exercise\n+     */\n+    getModelingSubmissions(exercise: ModelingExercise) {\n+        this.modelingSubmissionService.getModelingSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<ModelingSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.modelingSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get submissions for text exercise\n+     * @param exercise text exercise\n+     */\n+    getTextSubmissions(exercise: TextExercise) {\n+        this.textSubmissionService.getTextSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<TextSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.textSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Get submissions for file uplaod exercise\n+     * @param exercise file upload exercise\n+     */\n+    getFileUploadSubmissions(exercise: FileUploadExercise) {\n+        this.fileUploadSubmissionService.getFileUploadSubmissionsForExercise(exercise.id, { submittedOnly: true }).subscribe((response: HttpResponse<FileUploadSubmission[]>) => {\n+            return response.body?.forEach((submission) => {\n+                if (!submission.result || !submission.submitted || submission.result.assessor.id !== this.tutorId) {\n+                    return;\n+                }\n+                // reconnect some associations\n+                submission.result.submission = submission;\n+                submission.result.participation = submission.participation;\n+                submission.participation.results = [submission.result];\n+                submission.exerciseId = exercise.id;\n+\n+                this.fileUploadSubmissions.push(submission);\n+            });\n+        });\n+    }\n+\n+    /**\n+     * Cancel the current assessment and reload the submissions to reflect the change.\n+     * @param submission submission\n+     */\n+    cancelModelingAssessment(submission: Submission) {\n+        const confirmCancel = window.confirm(this.cancelConfirmationText);\n+        if (confirmCancel) {\n+            this.modelingAssessmentService.cancelAssessment(submission.id).subscribe(() => {\n+                this.getAllSubmissions(true);\n+            });\n+        }\n+    }\n+\n+    /**\n+     * Cancel the current assessment and reload the submissions to reflect the change.\n+     * @param submission submission\n+     */\n+    cancelTextAssessment(submission: Submission) {\n+        const confirmCancel = window.confirm(this.cancelConfirmationText);\n+        if (confirmCancel && submission.exerciseId) {\n+            this.textAssessmentsService.cancelAssessment(submission.exerciseId, submission.id).subscribe(() => {\n+                this.getAllSubmissions(true);\n+            });\n+        }\n+    }\n+\n+    /**\n+     * Cancel the current assessment and reload the submissions to reflect the change.\n+     * @param submission submission\n+     */\n+    cancelFileUploadAssessment(submission: Submission) {\n+        const confirmCancel = window.confirm(this.cancelConfirmationText);\n+        if (confirmCancel) {\n+            this.fileUploadAssessmentsService.cancelAssessment(submission.id).subscribe(() => {\n+                this.getAllSubmissions(true);\n+            });\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjMwNg=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 222}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIxOTgwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMjowMTowM1rOGTH89Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNDo0OToxN1rOGTftrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjQyMQ==", "bodyText": "if wired up correctly, this could be\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                <td>{{ getExerciseName(fileUploadSubmission.exerciseId) }}</td>\n          \n          \n            \n                                <td>{{ fileUploadSubmission.participation.exercise.title }}</td>", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422706421", "createdAt": "2020-05-10T22:01:03Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "diffHunk": "@@ -0,0 +1,192 @@\n+<div class=\"course-info-bar\">\n+    <div class=\"row justify-content-between\">\n+        <div class=\"col-8\">\n+            <h2>\n+                <fa-icon [icon]=\"'arrow-left'\" (click)=\"back()\" class=\"back-button mr-2\"></fa-icon>\n+                <span>{{ 'artemisApp.assessment.locks.title' | translate }}</span>\n+            </h2>\n+        </div>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"modelingSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.modelingSubmissions' | translate }}\n+    </h4>\n+\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th class=\"th-link\">#</th>\n+                    <th class=\"th-link\">Id</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let modelingSubmission of modelingSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ modelingSubmission.id }}</td>\n+                    <td>{{ getExerciseName(modelingSubmission.exerciseId) }}</td>\n+                    <td>{{ modelingSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ modelingSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"modelingSubmission.result && modelingSubmission.result.score != null\">{{ modelingSubmission.result.score }}%</span>\n+                    </td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result\"\n+                                [routerLink]=\"[\n+                                    '/course-management',\n+                                    courseId,\n+                                    'modeling-exercises',\n+                                    modelingSubmission.exerciseId,\n+                                    'submissions',\n+                                    modelingSubmission.id,\n+                                    'assessment'\n+                                ]\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result && !modelingSubmission.result.completionDate\"\n+                                (click)=\"cancelModelingAssessment(modelingSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"textSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.textSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.tutorExerciseDashboard.language\">Language</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let textSubmission of textSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ textSubmission.id }}</td>\n+                    <td>{{ getExerciseName(textSubmission.exerciseId) }}</td>\n+                    <td>{{ textSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ textSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"textSubmission.result && textSubmission.result.score != null\">{{ textSubmission.result.score }} %</span>\n+                    </td>\n+                    <td>{{ 'artemisApp.tutorExerciseDashboard.languages.' + (textSubmission.language || 'UNKNOWN') | translate }}</td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result\"\n+                                [routerLink]=\"['/course-management', courseId, 'text-exercises', textSubmission.exerciseId, 'submissions', textSubmission.id, 'assessment']\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result && !textSubmission.result.completionDate\"\n+                                (click)=\"cancelTextAssessment(textSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"fileUploadSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.fileUploadSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let fileUploadSubmission of fileUploadSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ fileUploadSubmission.id }}</td>\n+                    <td>{{ getExerciseName(fileUploadSubmission.exerciseId) }}</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA5NTcyNQ==", "bodyText": "Refactored", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423095725", "createdAt": "2020-05-11T14:49:17Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "diffHunk": "@@ -0,0 +1,192 @@\n+<div class=\"course-info-bar\">\n+    <div class=\"row justify-content-between\">\n+        <div class=\"col-8\">\n+            <h2>\n+                <fa-icon [icon]=\"'arrow-left'\" (click)=\"back()\" class=\"back-button mr-2\"></fa-icon>\n+                <span>{{ 'artemisApp.assessment.locks.title' | translate }}</span>\n+            </h2>\n+        </div>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"modelingSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.modelingSubmissions' | translate }}\n+    </h4>\n+\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th class=\"th-link\">#</th>\n+                    <th class=\"th-link\">Id</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let modelingSubmission of modelingSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ modelingSubmission.id }}</td>\n+                    <td>{{ getExerciseName(modelingSubmission.exerciseId) }}</td>\n+                    <td>{{ modelingSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ modelingSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"modelingSubmission.result && modelingSubmission.result.score != null\">{{ modelingSubmission.result.score }}%</span>\n+                    </td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result\"\n+                                [routerLink]=\"[\n+                                    '/course-management',\n+                                    courseId,\n+                                    'modeling-exercises',\n+                                    modelingSubmission.exerciseId,\n+                                    'submissions',\n+                                    modelingSubmission.id,\n+                                    'assessment'\n+                                ]\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result && !modelingSubmission.result.completionDate\"\n+                                (click)=\"cancelModelingAssessment(modelingSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"textSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.textSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.tutorExerciseDashboard.language\">Language</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let textSubmission of textSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ textSubmission.id }}</td>\n+                    <td>{{ getExerciseName(textSubmission.exerciseId) }}</td>\n+                    <td>{{ textSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ textSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"textSubmission.result && textSubmission.result.score != null\">{{ textSubmission.result.score }} %</span>\n+                    </td>\n+                    <td>{{ 'artemisApp.tutorExerciseDashboard.languages.' + (textSubmission.language || 'UNKNOWN') | translate }}</td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result\"\n+                                [routerLink]=\"['/course-management', courseId, 'text-exercises', textSubmission.exerciseId, 'submissions', textSubmission.id, 'assessment']\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result && !textSubmission.result.completionDate\"\n+                                (click)=\"cancelTextAssessment(textSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"fileUploadSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.fileUploadSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let fileUploadSubmission of fileUploadSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ fileUploadSubmission.id }}</td>\n+                    <td>{{ getExerciseName(fileUploadSubmission.exerciseId) }}</td>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjQyMQ=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 150}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIyMDQzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMjowMTo0N1rOGTH9RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNDo0OTowM1rOGTftDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjUwMA==", "bodyText": "Please extract this in a template or component as this is reused above.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422706500", "createdAt": "2020-05-10T22:01:47Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "diffHunk": "@@ -0,0 +1,192 @@\n+<div class=\"course-info-bar\">\n+    <div class=\"row justify-content-between\">\n+        <div class=\"col-8\">\n+            <h2>\n+                <fa-icon [icon]=\"'arrow-left'\" (click)=\"back()\" class=\"back-button mr-2\"></fa-icon>\n+                <span>{{ 'artemisApp.assessment.locks.title' | translate }}</span>\n+            </h2>\n+        </div>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"modelingSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.modelingSubmissions' | translate }}\n+    </h4>\n+\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th class=\"th-link\">#</th>\n+                    <th class=\"th-link\">Id</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let modelingSubmission of modelingSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ modelingSubmission.id }}</td>\n+                    <td>{{ getExerciseName(modelingSubmission.exerciseId) }}</td>\n+                    <td>{{ modelingSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ modelingSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"modelingSubmission.result && modelingSubmission.result.score != null\">{{ modelingSubmission.result.score }}%</span>\n+                    </td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result\"\n+                                [routerLink]=\"[\n+                                    '/course-management',\n+                                    courseId,\n+                                    'modeling-exercises',\n+                                    modelingSubmission.exerciseId,\n+                                    'submissions',\n+                                    modelingSubmission.id,\n+                                    'assessment'\n+                                ]\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result && !modelingSubmission.result.completionDate\"\n+                                (click)=\"cancelModelingAssessment(modelingSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"textSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.textSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.tutorExerciseDashboard.language\">Language</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let textSubmission of textSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ textSubmission.id }}</td>\n+                    <td>{{ getExerciseName(textSubmission.exerciseId) }}</td>\n+                    <td>{{ textSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ textSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"textSubmission.result && textSubmission.result.score != null\">{{ textSubmission.result.score }} %</span>\n+                    </td>\n+                    <td>{{ 'artemisApp.tutorExerciseDashboard.languages.' + (textSubmission.language || 'UNKNOWN') | translate }}</td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result\"\n+                                [routerLink]=\"['/course-management', courseId, 'text-exercises', textSubmission.exerciseId, 'submissions', textSubmission.id, 'assessment']\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result && !textSubmission.result.completionDate\"\n+                                (click)=\"cancelTextAssessment(textSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"fileUploadSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.fileUploadSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let fileUploadSubmission of fileUploadSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ fileUploadSubmission.id }}</td>\n+                    <td>{{ getExerciseName(fileUploadSubmission.exerciseId) }}</td>\n+                    <td>{{ fileUploadSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ fileUploadSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"fileUploadSubmission.result && fileUploadSubmission.result.score != null\">{{ fileUploadSubmission.result.score }} %</span>\n+                    </td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"fileUploadSubmission && fileUploadSubmission.result\"\n+                                [routerLink]=\"[\n+                                    '/course-management',\n+                                    courseId,\n+                                    'file-upload-exercises',\n+                                    fileUploadSubmission.exerciseId,\n+                                    'submissions',\n+                                    fileUploadSubmission.id,\n+                                    'assessment'\n+                                ]\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"fileUploadSubmission && fileUploadSubmission.result && !fileUploadSubmission.result.completionDate\"\n+                                (click)=\"cancelFileUploadAssessment(fileUploadSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 188}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA5NTU2Nw==", "bodyText": "Refactored", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423095567", "createdAt": "2020-05-11T14:49:03Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "diffHunk": "@@ -0,0 +1,192 @@\n+<div class=\"course-info-bar\">\n+    <div class=\"row justify-content-between\">\n+        <div class=\"col-8\">\n+            <h2>\n+                <fa-icon [icon]=\"'arrow-left'\" (click)=\"back()\" class=\"back-button mr-2\"></fa-icon>\n+                <span>{{ 'artemisApp.assessment.locks.title' | translate }}</span>\n+            </h2>\n+        </div>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"modelingSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.modelingSubmissions' | translate }}\n+    </h4>\n+\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th class=\"th-link\">#</th>\n+                    <th class=\"th-link\">Id</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let modelingSubmission of modelingSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ modelingSubmission.id }}</td>\n+                    <td>{{ getExerciseName(modelingSubmission.exerciseId) }}</td>\n+                    <td>{{ modelingSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ modelingSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"modelingSubmission.result && modelingSubmission.result.score != null\">{{ modelingSubmission.result.score }}%</span>\n+                    </td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result\"\n+                                [routerLink]=\"[\n+                                    '/course-management',\n+                                    courseId,\n+                                    'modeling-exercises',\n+                                    modelingSubmission.exerciseId,\n+                                    'submissions',\n+                                    modelingSubmission.id,\n+                                    'assessment'\n+                                ]\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result && !modelingSubmission.result.completionDate\"\n+                                (click)=\"cancelModelingAssessment(modelingSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"textSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.textSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.tutorExerciseDashboard.language\">Language</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let textSubmission of textSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ textSubmission.id }}</td>\n+                    <td>{{ getExerciseName(textSubmission.exerciseId) }}</td>\n+                    <td>{{ textSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ textSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"textSubmission.result && textSubmission.result.score != null\">{{ textSubmission.result.score }} %</span>\n+                    </td>\n+                    <td>{{ 'artemisApp.tutorExerciseDashboard.languages.' + (textSubmission.language || 'UNKNOWN') | translate }}</td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result\"\n+                                [routerLink]=\"['/course-management', courseId, 'text-exercises', textSubmission.exerciseId, 'submissions', textSubmission.id, 'assessment']\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result && !textSubmission.result.completionDate\"\n+                                (click)=\"cancelTextAssessment(textSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"fileUploadSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.fileUploadSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let fileUploadSubmission of fileUploadSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ fileUploadSubmission.id }}</td>\n+                    <td>{{ getExerciseName(fileUploadSubmission.exerciseId) }}</td>\n+                    <td>{{ fileUploadSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ fileUploadSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"fileUploadSubmission.result && fileUploadSubmission.result.score != null\">{{ fileUploadSubmission.result.score }} %</span>\n+                    </td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"fileUploadSubmission && fileUploadSubmission.result\"\n+                                [routerLink]=\"[\n+                                    '/course-management',\n+                                    courseId,\n+                                    'file-upload-exercises',\n+                                    fileUploadSubmission.exerciseId,\n+                                    'submissions',\n+                                    fileUploadSubmission.id,\n+                                    'assessment'\n+                                ]\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"fileUploadSubmission && fileUploadSubmission.result && !fileUploadSubmission.result.completionDate\"\n+                                (click)=\"cancelFileUploadAssessment(fileUploadSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjUwMA=="}, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjIyMDU3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMjowMjowNVrOGTH9WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMjowMjowNVrOGTH9WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjUyMA==", "bodyText": "See comment below.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r422706520", "createdAt": "2020-05-10T22:02:05Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "diffHunk": "@@ -0,0 +1,192 @@\n+<div class=\"course-info-bar\">\n+    <div class=\"row justify-content-between\">\n+        <div class=\"col-8\">\n+            <h2>\n+                <fa-icon [icon]=\"'arrow-left'\" (click)=\"back()\" class=\"back-button mr-2\"></fa-icon>\n+                <span>{{ 'artemisApp.assessment.locks.title' | translate }}</span>\n+            </h2>\n+        </div>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"modelingSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.modelingSubmissions' | translate }}\n+    </h4>\n+\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th class=\"th-link\">#</th>\n+                    <th class=\"th-link\">Id</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th class=\"th-link\" jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let modelingSubmission of modelingSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ modelingSubmission.id }}</td>\n+                    <td>{{ getExerciseName(modelingSubmission.exerciseId) }}</td>\n+                    <td>{{ modelingSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ modelingSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"modelingSubmission.result && modelingSubmission.result.score != null\">{{ modelingSubmission.result.score }}%</span>\n+                    </td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result\"\n+                                [routerLink]=\"[\n+                                    '/course-management',\n+                                    courseId,\n+                                    'modeling-exercises',\n+                                    modelingSubmission.exerciseId,\n+                                    'submissions',\n+                                    modelingSubmission.id,\n+                                    'assessment'\n+                                ]\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"modelingSubmission && modelingSubmission.result && !modelingSubmission.result.completionDate\"\n+                                (click)=\"cancelModelingAssessment(modelingSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>\n+\n+<div *ngIf=\"textSubmissions.length > 0\">\n+    <h4 style=\"margin-top: 10px;\">\n+        {{ 'artemisApp.assessment.locks.textSubmissions' | translate }}\n+    </h4>\n+    <div class=\"table-responsive\">\n+        <table class=\"table table-striped exercise-table\">\n+            <thead>\n+                <tr>\n+                    <th>#</th>\n+                    <th>Id</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.locks.exercise\">Exercise</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionDate\">Submission date</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.submissionCount\">Submission count</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.score\">Score</th>\n+                    <th jhiTranslate=\"artemisApp.tutorExerciseDashboard.language\">Language</th>\n+                    <th jhiTranslate=\"artemisApp.assessment.dashboard.columns.action\">Action</th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let textSubmission of textSubmissions; let i = index\">\n+                    <td>{{ i + 1 }}</td>\n+                    <td>{{ textSubmission.id }}</td>\n+                    <td>{{ getExerciseName(textSubmission.exerciseId) }}</td>\n+                    <td>{{ textSubmission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n+                    <td>{{ textSubmission.participation.submissions.length }}</td>\n+                    <td>\n+                        <span *ngIf=\"textSubmission.result && textSubmission.result.score != null\">{{ textSubmission.result.score }} %</span>\n+                    </td>\n+                    <td>{{ 'artemisApp.tutorExerciseDashboard.languages.' + (textSubmission.language || 'UNKNOWN') | translate }}</td>\n+                    <td>\n+                        <span *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_INSTRUCTOR', 'ROLE_TA']\">\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result\"\n+                                [routerLink]=\"['/course-management', courseId, 'text-exercises', textSubmission.exerciseId, 'submissions', textSubmission.id, 'assessment']\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'folder-open'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.open' | translate }}\n+                            </button>\n+                        </span>\n+                        <span>\n+                            <button\n+                                *ngIf=\"textSubmission && textSubmission.result && !textSubmission.result.completionDate\"\n+                                (click)=\"cancelTextAssessment(textSubmission)\"\n+                                class=\"btn btn-outline-secondary btn-sm mb-1\"\n+                            >\n+                                <fa-icon [icon]=\"'ban'\" [fixedWidth]=\"true\"></fa-icon>&nbsp;{{ 'artemisApp.assessment.dashboard.actions.cancel' | translate }}\n+                            </button>\n+                        </span>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a16d4d693ceb0c92821905e8048ab5e5af3df"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODM4ODYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTo1NzoyNlrOGUDFfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjo1ODo0NFrOGW1_0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NTI2MQ==", "bodyText": "bad performance!", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423675261", "createdAt": "2020-05-12T11:57:26Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "diffHunk": "@@ -636,6 +654,60 @@ private void validateComplaintsConfig(Course course) {\n         return ResponseUtil.wrapOrNotFound(Optional.of(course));\n     }\n \n+    /**\n+     * GET /courses/:courseId/submissions Get all submissions for course\n+     *\n+     * @param courseId the id of the course\n+     * @return the ResponseEntity with status 200 (OK) and with body the course, or with status 404 (Not Found)\n+     * @throws AccessForbiddenException if the current user doesn't have the permission to access the course\n+     */\n+    @GetMapping(\"/courses/{courseId}/submissions\")\n+    @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<List<Submission>> getSubmissionsForCourse(@PathVariable Long courseId) throws AccessForbiddenException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d7c021511b8dbe74ee3cb62c9f4039379cc08f"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwNjU0NA==", "bodyText": "Refactored", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r426606544", "createdAt": "2020-05-18T12:58:44Z", "author": {"login": "balazs-czopf"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "diffHunk": "@@ -636,6 +654,60 @@ private void validateComplaintsConfig(Course course) {\n         return ResponseUtil.wrapOrNotFound(Optional.of(course));\n     }\n \n+    /**\n+     * GET /courses/:courseId/submissions Get all submissions for course\n+     *\n+     * @param courseId the id of the course\n+     * @return the ResponseEntity with status 200 (OK) and with body the course, or with status 404 (Not Found)\n+     * @throws AccessForbiddenException if the current user doesn't have the permission to access the course\n+     */\n+    @GetMapping(\"/courses/{courseId}/submissions\")\n+    @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<List<Submission>> getSubmissionsForCourse(@PathVariable Long courseId) throws AccessForbiddenException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NTI2MQ=="}, "originalCommit": {"oid": "48d7c021511b8dbe74ee3cb62c9f4039379cc08f"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODM5NTU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTo1OToyNVrOGUDJrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjo1OTo1M1rOGW2CpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NjMzMw==", "bodyText": "Make sure to filter (i.e. hide) elements that should not be visible to tutors, e.g. they are not allowed to see the author of the submission", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423676333", "createdAt": "2020-05-12T11:59:25Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "diffHunk": "@@ -636,6 +654,60 @@ private void validateComplaintsConfig(Course course) {\n         return ResponseUtil.wrapOrNotFound(Optional.of(course));\n     }\n \n+    /**\n+     * GET /courses/:courseId/submissions Get all submissions for course\n+     *\n+     * @param courseId the id of the course\n+     * @return the ResponseEntity with status 200 (OK) and with body the course, or with status 404 (Not Found)\n+     * @throws AccessForbiddenException if the current user doesn't have the permission to access the course\n+     */\n+    @GetMapping(\"/courses/{courseId}/submissions\")\n+    @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<List<Submission>> getSubmissionsForCourse(@PathVariable Long courseId) throws AccessForbiddenException {\n+        log.debug(\"REST request to get all submissions for course : {}\", courseId);\n+        long start = System.currentTimeMillis();\n+        Course course = courseService.findOneWithExercises(courseId);\n+        User user = userService.getUserWithGroupsAndAuthorities();\n+        if (!authCheckService.isAtLeastInstructorInCourse(course, user)) {\n+            throw new AccessForbiddenException(\"You are not allowed to access this resource\");\n+        }\n+\n+        List<Exercise> exercises = exerciseService.findAllForCourse(course, user);\n+        List<Submission> submissions = new ArrayList<>();\n+\n+        for (Exercise exercise : exercises) {\n+            if (exercise instanceof ModelingExercise) {\n+                List<ModelingSubmission> modelingSubmissions = modelingSubmissionService.getModelingSubmissions(exercise.getId(), true);\n+                for (ModelingSubmission modelingSubmission : modelingSubmissions) {\n+                    modelingSubmission.getParticipation().setExercise(exercise);\n+                }\n+                submissions.addAll(modelingSubmissions);\n+            }\n+            else if (exercise instanceof TextExercise) {\n+                List<TextSubmission> textSubmissions = textSubmissionService.getTextSubmissionsByExerciseId(exercise.getId(), true);\n+                for (TextSubmission textSubmission : textSubmissions) {\n+                    textSubmission.getParticipation().setExercise(exercise);\n+                }\n+                submissions.addAll(textSubmissions);\n+            }\n+            else if (exercise instanceof FileUploadExercise) {\n+                List<FileUploadSubmission> fileUploadSubmissions = fileUploadSubmissionService.getFileUploadSubmissions(exercise.getId(), true);\n+                for (FileUploadSubmission fileUploadSubmission : fileUploadSubmissions) {\n+                    fileUploadSubmission.getParticipation().setExercise(exercise);\n+                }\n+                submissions.addAll(fileUploadSubmissions);\n+            }\n+\n+            Set<Submission> set = new HashSet<>(submissions);\n+            submissions.clear();\n+            submissions.addAll(set);\n+\n+        }\n+        long end = System.currentTimeMillis();\n+        log.info(\"Finished /courses/\" + courseId + \"/submissions call in \" + (end - start) + \"ms\");\n+        return ResponseEntity.ok(submissions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d7c021511b8dbe74ee3cb62c9f4039379cc08f"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwNzI2OQ==", "bodyText": "Thanks for the hint, done so.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r426607269", "createdAt": "2020-05-18T12:59:53Z", "author": {"login": "balazs-czopf"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "diffHunk": "@@ -636,6 +654,60 @@ private void validateComplaintsConfig(Course course) {\n         return ResponseUtil.wrapOrNotFound(Optional.of(course));\n     }\n \n+    /**\n+     * GET /courses/:courseId/submissions Get all submissions for course\n+     *\n+     * @param courseId the id of the course\n+     * @return the ResponseEntity with status 200 (OK) and with body the course, or with status 404 (Not Found)\n+     * @throws AccessForbiddenException if the current user doesn't have the permission to access the course\n+     */\n+    @GetMapping(\"/courses/{courseId}/submissions\")\n+    @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<List<Submission>> getSubmissionsForCourse(@PathVariable Long courseId) throws AccessForbiddenException {\n+        log.debug(\"REST request to get all submissions for course : {}\", courseId);\n+        long start = System.currentTimeMillis();\n+        Course course = courseService.findOneWithExercises(courseId);\n+        User user = userService.getUserWithGroupsAndAuthorities();\n+        if (!authCheckService.isAtLeastInstructorInCourse(course, user)) {\n+            throw new AccessForbiddenException(\"You are not allowed to access this resource\");\n+        }\n+\n+        List<Exercise> exercises = exerciseService.findAllForCourse(course, user);\n+        List<Submission> submissions = new ArrayList<>();\n+\n+        for (Exercise exercise : exercises) {\n+            if (exercise instanceof ModelingExercise) {\n+                List<ModelingSubmission> modelingSubmissions = modelingSubmissionService.getModelingSubmissions(exercise.getId(), true);\n+                for (ModelingSubmission modelingSubmission : modelingSubmissions) {\n+                    modelingSubmission.getParticipation().setExercise(exercise);\n+                }\n+                submissions.addAll(modelingSubmissions);\n+            }\n+            else if (exercise instanceof TextExercise) {\n+                List<TextSubmission> textSubmissions = textSubmissionService.getTextSubmissionsByExerciseId(exercise.getId(), true);\n+                for (TextSubmission textSubmission : textSubmissions) {\n+                    textSubmission.getParticipation().setExercise(exercise);\n+                }\n+                submissions.addAll(textSubmissions);\n+            }\n+            else if (exercise instanceof FileUploadExercise) {\n+                List<FileUploadSubmission> fileUploadSubmissions = fileUploadSubmissionService.getFileUploadSubmissions(exercise.getId(), true);\n+                for (FileUploadSubmission fileUploadSubmission : fileUploadSubmissions) {\n+                    fileUploadSubmission.getParticipation().setExercise(exercise);\n+                }\n+                submissions.addAll(fileUploadSubmissions);\n+            }\n+\n+            Set<Submission> set = new HashSet<>(submissions);\n+            submissions.clear();\n+            submissions.addAll(set);\n+\n+        }\n+        long end = System.currentTimeMillis();\n+        log.info(\"Finished /courses/\" + courseId + \"/submissions call in \" + (end - start) + \"ms\");\n+        return ResponseEntity.ok(submissions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3NjMzMw=="}, "originalCommit": {"oid": "48d7c021511b8dbe74ee3cb62c9f4039379cc08f"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODQwODA4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMjowMzoxMVrOGUDRaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzowMDozMVrOGW2EVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3ODMxMg==", "bodyText": "do we need all these services?", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r423678312", "createdAt": "2020-05-12T12:03:11Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,155 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission, SubmissionExerciseType } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, getIcon, getIconTooltip } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    submissions: Submission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    getIcon = getIcon;\n+    getIconTooltip = getIconTooltip;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48d7c021511b8dbe74ee3cb62c9f4039379cc08f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYwNzcwMA==", "bodyText": "No, removed the unused ones. Thanks.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r426607700", "createdAt": "2020-05-18T13:00:31Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.ts", "diffHunk": "@@ -0,0 +1,155 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+import { Location } from '@angular/common';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { FileUploadSubmissionService } from 'app/exercises/file-upload/participate/file-upload-submission.service';\n+import { FileUploadAssessmentsService } from 'app/exercises/file-upload/assess/file-upload-assessment.service';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Submission, SubmissionExerciseType } from 'app/entities/submission.model';\n+import { CourseManagementService } from 'app/course/manage/course-management.service';\n+import { HttpResponse } from '@angular/common/http';\n+import { Course } from 'app/entities/course.model';\n+import { Exercise, getIcon, getIconTooltip } from 'app/entities/exercise.model';\n+import { AlertService } from 'app/core/alert/alert.service';\n+import { ModelingSubmissionService } from 'app/exercises/modeling/participate/modeling-submission.service';\n+import { ModelingAssessmentService } from 'app/exercises/modeling/assess/modeling-assessment.service';\n+import { TextSubmissionService } from 'app/exercises/text/participate/text-submission.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+\n+@Component({\n+    selector: 'jhi-assessment-locks',\n+    templateUrl: './assessment-locks.component.html',\n+})\n+export class AssessmentLocksComponent implements OnInit {\n+    course: Course;\n+    courseId: number;\n+    tutorId: number;\n+    exercises: Exercise[] = [];\n+\n+    submissions: Submission[] = [];\n+\n+    private cancelConfirmationText: string;\n+\n+    getIcon = getIcon;\n+    getIconTooltip = getIconTooltip;\n+\n+    constructor(\n+        private route: ActivatedRoute,\n+        private accountService: AccountService,\n+        private jhiAlertService: AlertService,\n+        private modelingSubmissionService: ModelingSubmissionService,\n+        private modelingAssessmentService: ModelingAssessmentService,\n+        private textSubmissionService: TextSubmissionService,\n+        private textAssessmentsService: TextAssessmentsService,\n+        private fileUploadSubmissionService: FileUploadSubmissionService,\n+        private fileUploadAssessmentsService: FileUploadAssessmentsService,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY3ODMxMg=="}, "originalCommit": {"oid": "48d7c021511b8dbe74ee3cb62c9f4039379cc08f"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTk3Mzk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTozOToyMlrOGdXimA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDoxOToyNlrOGdYtwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0NzU3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    log.info(\"Finished /courses/\" + courseId + \"/submissions call in \" + (end - start) + \"ms\");\n          \n          \n            \n                    log.debug(\"Finished /courses/\" + courseId + \"/submissions call in \" + (end - start) + \"ms\");", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r433447576", "createdAt": "2020-06-01T19:39:22Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "diffHunk": "@@ -659,6 +665,35 @@ public void fetchParticipationsWithSubmissionsAndResultsForCourses(List<Course>\n         return ResponseUtil.wrapOrNotFound(Optional.of(course));\n     }\n \n+    /**\n+     * GET /courses/:courseId/lockedSubmissions Get locked submissions for course for user\n+     *\n+     * @param courseId the id of the course\n+     * @return the ResponseEntity with status 200 (OK) and with body the course, or with status 404 (Not Found)\n+     * @throws AccessForbiddenException if the current user doesn't have the permission to access the course\n+     */\n+    @GetMapping(\"/courses/{courseId}/lockedSubmissions\")\n+    @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<List<Submission>> getLockedSubmissionsForCourse(@PathVariable Long courseId) throws AccessForbiddenException {\n+        log.debug(\"REST request to get all locked submissions for course : {}\", courseId);\n+        long start = System.currentTimeMillis();\n+        Course course = courseService.findOneWithExercises(courseId);\n+        User user = userService.getUserWithGroupsAndAuthorities();\n+        if (!authCheckService.isAtLeastTeachingAssistantInCourse(course, user)) {\n+            throw new AccessForbiddenException(\"You are not allowed to access this resource\");\n+        }\n+\n+        List<Submission> submissions = submissionService.getLockedSubmissions(courseId);\n+\n+        for (Submission submission : submissions) {\n+            submissionService.hideDetails(submission, user);\n+        }\n+\n+        long end = System.currentTimeMillis();\n+        log.info(\"Finished /courses/\" + courseId + \"/submissions call in \" + (end - start) + \"ms\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211e2fdc5030b648b75f430db16cd71b6409da6c"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0NzY5OA==", "bodyText": "we don't really need info here. The time is tracked anyway in the metrics", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r433447698", "createdAt": "2020-06-01T19:39:39Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "diffHunk": "@@ -659,6 +665,35 @@ public void fetchParticipationsWithSubmissionsAndResultsForCourses(List<Course>\n         return ResponseUtil.wrapOrNotFound(Optional.of(course));\n     }\n \n+    /**\n+     * GET /courses/:courseId/lockedSubmissions Get locked submissions for course for user\n+     *\n+     * @param courseId the id of the course\n+     * @return the ResponseEntity with status 200 (OK) and with body the course, or with status 404 (Not Found)\n+     * @throws AccessForbiddenException if the current user doesn't have the permission to access the course\n+     */\n+    @GetMapping(\"/courses/{courseId}/lockedSubmissions\")\n+    @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<List<Submission>> getLockedSubmissionsForCourse(@PathVariable Long courseId) throws AccessForbiddenException {\n+        log.debug(\"REST request to get all locked submissions for course : {}\", courseId);\n+        long start = System.currentTimeMillis();\n+        Course course = courseService.findOneWithExercises(courseId);\n+        User user = userService.getUserWithGroupsAndAuthorities();\n+        if (!authCheckService.isAtLeastTeachingAssistantInCourse(course, user)) {\n+            throw new AccessForbiddenException(\"You are not allowed to access this resource\");\n+        }\n+\n+        List<Submission> submissions = submissionService.getLockedSubmissions(courseId);\n+\n+        for (Submission submission : submissions) {\n+            submissionService.hideDetails(submission, user);\n+        }\n+\n+        long end = System.currentTimeMillis();\n+        log.info(\"Finished /courses/\" + courseId + \"/submissions call in \" + (end - start) + \"ms\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0NzU3Ng=="}, "originalCommit": {"oid": "211e2fdc5030b648b75f430db16cd71b6409da6c"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2NjgxNg==", "bodyText": "Changed it accordingly.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r433466816", "createdAt": "2020-06-01T20:19:26Z", "author": {"login": "balazs-czopf"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "diffHunk": "@@ -659,6 +665,35 @@ public void fetchParticipationsWithSubmissionsAndResultsForCourses(List<Course>\n         return ResponseUtil.wrapOrNotFound(Optional.of(course));\n     }\n \n+    /**\n+     * GET /courses/:courseId/lockedSubmissions Get locked submissions for course for user\n+     *\n+     * @param courseId the id of the course\n+     * @return the ResponseEntity with status 200 (OK) and with body the course, or with status 404 (Not Found)\n+     * @throws AccessForbiddenException if the current user doesn't have the permission to access the course\n+     */\n+    @GetMapping(\"/courses/{courseId}/lockedSubmissions\")\n+    @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<List<Submission>> getLockedSubmissionsForCourse(@PathVariable Long courseId) throws AccessForbiddenException {\n+        log.debug(\"REST request to get all locked submissions for course : {}\", courseId);\n+        long start = System.currentTimeMillis();\n+        Course course = courseService.findOneWithExercises(courseId);\n+        User user = userService.getUserWithGroupsAndAuthorities();\n+        if (!authCheckService.isAtLeastTeachingAssistantInCourse(course, user)) {\n+            throw new AccessForbiddenException(\"You are not allowed to access this resource\");\n+        }\n+\n+        List<Submission> submissions = submissionService.getLockedSubmissions(courseId);\n+\n+        for (Submission submission : submissions) {\n+            submissionService.hideDetails(submission, user);\n+        }\n+\n+        long end = System.currentTimeMillis();\n+        log.info(\"Finished /courses/\" + courseId + \"/submissions call in \" + (end - start) + \"ms\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0NzU3Ng=="}, "originalCommit": {"oid": "211e2fdc5030b648b75f430db16cd71b6409da6c"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTk3OTgzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/course/manage/course-management.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTo0MToxM1rOGdXmKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDoxODo1N1rOGdYs0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0ODQ4OQ==", "bodyText": "please delete this line", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r433448489", "createdAt": "2020-06-01T19:41:13Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/course/manage/course-management.service.ts", "diffHunk": "@@ -248,6 +250,29 @@ export class CourseManagementService {\n         return this.http.get<User[]>(`${this.resourceUrl}/${courseId}/${courseGroup}`, { observe: 'response' });\n     }\n \n+    /**\n+     * Find all locked submissions of a given course for user\n+     * @param {number} courseId - The id of the course to be searched for\n+     */\n+    findAllLockedSubmissionsOfCourse(courseId: number): Observable<HttpResponse<Submission[]>> {\n+        return this.http\n+            .get<Submission[]>(`${this.resourceUrl}/${courseId}/lockedSubmissions`, { observe: 'response' })\n+            .pipe(\n+                // map((res) => this.convertDateArrayFromServer(res)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211e2fdc5030b648b75f430db16cd71b6409da6c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2NjU3OA==", "bodyText": "Done. Thanks for the hint.", "url": "https://github.com/ls1intum/Artemis/pull/1433#discussion_r433466578", "createdAt": "2020-06-01T20:18:57Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/course/manage/course-management.service.ts", "diffHunk": "@@ -248,6 +250,29 @@ export class CourseManagementService {\n         return this.http.get<User[]>(`${this.resourceUrl}/${courseId}/${courseGroup}`, { observe: 'response' });\n     }\n \n+    /**\n+     * Find all locked submissions of a given course for user\n+     * @param {number} courseId - The id of the course to be searched for\n+     */\n+    findAllLockedSubmissionsOfCourse(courseId: number): Observable<HttpResponse<Submission[]>> {\n+        return this.http\n+            .get<Submission[]>(`${this.resourceUrl}/${courseId}/lockedSubmissions`, { observe: 'response' })\n+            .pipe(\n+                // map((res) => this.convertDateArrayFromServer(res)),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0ODQ4OQ=="}, "originalCommit": {"oid": "211e2fdc5030b648b75f430db16cd71b6409da6c"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 150, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}