{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMDQyMzEz", "number": 2549, "title": "[Chore] Improve test coverage (Programming Assessment)", "bodyText": "Description\n\nThis PR adds missing test cases for the programming assessment repo export dialog. Also, it fixes a bug, which was due to a always true value in an if statement.\nSteps for Testing\n\nNo changes to the actual code. Only test cases.\nTest Coverage\n\nmain/webapp/app/shared/util/download.util.ts: 13.33% -> 93.33%\nmain/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.ts: 27.59% -> 87.93%", "createdAt": "2020-12-15T07:29:48Z", "url": "https://github.com/ls1intum/Artemis/pull/2549", "merged": true, "mergeCommit": {"oid": "aa6d48202f4a9bd65038c02f2cbb2b0095371650"}, "closed": true, "closedAt": "2020-12-16T12:31:10Z", "author": {"login": "derLalla"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmLELygH2gAyNTQwMDQyMzEzOjNlYTliNjE3YzI5ZGFkMDMyNjQ5YmFmOTMxZDdkYzc3NDI5NGZiMTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmuIIGAFqTU1MzY0MDYxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3ea9b617c29dad032649baf931d7dc774294fb14", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/3ea9b617c29dad032649baf931d7dc774294fb14", "committedDate": "2020-12-14T19:39:53Z", "message": "fix bug in if block and increase test coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6db0792f22cb38fd71714643651b58bd2716a8ea", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/6db0792f22cb38fd71714643651b58bd2716a8ea", "committedDate": "2020-12-14T19:43:40Z", "message": "refactor code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a5e3d4766eb4cf8ddd31f75979d95432d07a117", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/1a5e3d4766eb4cf8ddd31f75979d95432d07a117", "committedDate": "2020-12-15T07:34:23Z", "message": "remove unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a38e2830fb2ec0df37208e310e26cc59044f1144", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/a38e2830fb2ec0df37208e310e26cc59044f1144", "committedDate": "2020-12-15T07:42:27Z", "message": "extract method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94bd034933595b6387345267eb3c79706a3f059c", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/94bd034933595b6387345267eb3c79706a3f059c", "committedDate": "2020-12-15T07:49:18Z", "message": "Merge branch 'develop' into chore/assessment/improve-repo-export-test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDc1Mjcw", "url": "https://github.com/ls1intum/Artemis/pull/2549#pullrequestreview-552475270", "createdAt": "2020-12-15T13:51:46Z", "commit": {"oid": "94bd034933595b6387345267eb3c79706a3f059c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo1MTo0NlrOIGL48g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo1MTo0NlrOIGL48g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM1NzE3MA==", "bodyText": "Are you sure participationIdList cannot be undefined?", "url": "https://github.com/ls1intum/Artemis/pull/2549#discussion_r543357170", "createdAt": "2020-12-15T13:51:46Z", "author": {"login": "FuchsDominik"}, "path": "src/main/webapp/app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component.ts", "diffHunk": "@@ -82,7 +82,7 @@ export class ProgrammingAssessmentRepoExportDialogComponent implements OnInit {\n         }\n         this.exportInProgress = true;\n         // The participation ids take priority over the participant identifiers (student login or team names).\n-        if (this.participationIdList) {\n+        if (this.participationIdList.length) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94bd034933595b6387345267eb3c79706a3f059c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6908cd85d14c0b02c33ca323da1fc2f7493e7862", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/6908cd85d14c0b02c33ca323da1fc2f7493e7862", "committedDate": "2020-12-16T11:55:59Z", "message": "Fix possible undefined error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjMwMzg1", "url": "https://github.com/ls1intum/Artemis/pull/2549#pullrequestreview-553630385", "createdAt": "2020-12-16T12:17:06Z", "commit": {"oid": "6908cd85d14c0b02c33ca323da1fc2f7493e7862"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoxNzowN1rOIHCg3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMjoxNzozOFrOIHCiXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MjEyNA==", "bodyText": "The findExerciseId variable doesn't seem to be used. (If you need the stub statement I'd just remove the variable assignment.)", "url": "https://github.com/ls1intum/Artemis/pull/2549#discussion_r544252124", "createdAt": "2020-12-16T12:17:07Z", "author": {"login": "FrankeLukas"}, "path": "src/test/javascript/spec/component/programming-assessment/programming-assessment-repo-export-dialog.component.spec.ts", "diffHunk": "@@ -0,0 +1,128 @@\n+import { ComponentFixture, TestBed, tick, fakeAsync } from '@angular/core/testing';\n+import { TranslateModule } from '@ngx-translate/core';\n+import * as chai from 'chai';\n+import * as sinonChai from 'sinon-chai';\n+import { SinonStub, stub } from 'sinon';\n+import { of } from 'rxjs';\n+import { HttpResponse, HttpHeaders } from '@angular/common/http';\n+import { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\n+import * as moment from 'moment';\n+import { ArtemisTestModule } from '../../test.module';\n+import { ProgrammingAssessmentRepoExportDialogComponent } from 'app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component';\n+import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n+import { Course } from 'app/entities/course.model';\n+import { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\n+import { ProgrammingAssessmentRepoExportService } from 'app/exercises/programming/assess/repo-export/programming-assessment-repo-export.service';\n+import { ArtemisProgrammingAssessmentModule } from 'app/exercises/programming/assess/programming-assessment.module';\n+import { Exercise } from 'app/entities/exercise.model';\n+import { MockSyncStorage } from '../../helpers/mocks/service/mock-sync-storage.service';\n+\n+chai.use(sinonChai);\n+const expect = chai.expect;\n+\n+const createBlobHttpResponse = () => {\n+    const blob = new Blob([JSON.stringify({ property: 'blob' })], { type: 'application/json' });\n+    const headers = new HttpHeaders().set('filename', 'blobfile');\n+    return new HttpResponse({ body: blob, headers });\n+};\n+\n+describe('ProgrammingAssessmentRepoExportDialogComponent', () => {\n+    let comp: ProgrammingAssessmentRepoExportDialogComponent;\n+    let fixture: ComponentFixture<ProgrammingAssessmentRepoExportDialogComponent>;\n+    let exerciseService: ExerciseService;\n+    let repoExportService: ProgrammingAssessmentRepoExportService;\n+\n+    // stubs\n+    let findExerciseId: SinonStub;\n+    global.URL.createObjectURL = jest.fn(() => 'http://some.test.com');\n+    global.URL.revokeObjectURL = jest.fn(() => '');\n+\n+    const exerciseId = 42;\n+    const participationIdList = [1];\n+    const singleParticipantMode = false;\n+    const programmingExercise = new ProgrammingExercise(new Course(), undefined);\n+    programmingExercise.id = exerciseId;\n+    programmingExercise.releaseDate = moment();\n+    programmingExercise.dueDate = moment().add(7, 'days');\n+\n+    beforeEach(async () => {\n+        return TestBed.configureTestingModule({\n+            imports: [TranslateModule.forRoot(), ArtemisTestModule, ArtemisProgrammingAssessmentModule],\n+            providers: [\n+                ExerciseService,\n+                ProgrammingAssessmentRepoExportService,\n+                { provide: SessionStorageService, useClass: MockSyncStorage },\n+                { provide: LocalStorageService, useClass: MockSyncStorage },\n+            ],\n+        })\n+            .overrideModule(ArtemisTestModule, { set: { declarations: [], exports: [] } })\n+            .compileComponents()\n+            .then(() => {\n+                // Ignore console errors\n+                console.error = () => false;\n+                fixture = TestBed.createComponent(ProgrammingAssessmentRepoExportDialogComponent);\n+                comp = fixture.componentInstance;\n+                exerciseService = fixture.debugElement.injector.get(ExerciseService);\n+                repoExportService = fixture.debugElement.injector.get(ProgrammingAssessmentRepoExportService);\n+\n+                // stubs\n+                findExerciseId = stub(exerciseService, 'find').returns(of({ body: programmingExercise } as HttpResponse<Exercise>));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6908cd85d14c0b02c33ca323da1fc2f7493e7862"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI1MjUwOQ==", "bodyText": "Is it necessary to fakeAsync here (without tick etc.)?", "url": "https://github.com/ls1intum/Artemis/pull/2549#discussion_r544252509", "createdAt": "2020-12-16T12:17:38Z", "author": {"login": "FrankeLukas"}, "path": "src/test/javascript/spec/component/programming-assessment/programming-assessment-repo-export-dialog.component.spec.ts", "diffHunk": "@@ -0,0 +1,128 @@\n+import { ComponentFixture, TestBed, tick, fakeAsync } from '@angular/core/testing';\n+import { TranslateModule } from '@ngx-translate/core';\n+import * as chai from 'chai';\n+import * as sinonChai from 'sinon-chai';\n+import { SinonStub, stub } from 'sinon';\n+import { of } from 'rxjs';\n+import { HttpResponse, HttpHeaders } from '@angular/common/http';\n+import { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\n+import * as moment from 'moment';\n+import { ArtemisTestModule } from '../../test.module';\n+import { ProgrammingAssessmentRepoExportDialogComponent } from 'app/exercises/programming/assess/repo-export/programming-assessment-repo-export-dialog.component';\n+import { ProgrammingExercise } from 'app/entities/programming-exercise.model';\n+import { Course } from 'app/entities/course.model';\n+import { ExerciseService } from 'app/exercises/shared/exercise/exercise.service';\n+import { ProgrammingAssessmentRepoExportService } from 'app/exercises/programming/assess/repo-export/programming-assessment-repo-export.service';\n+import { ArtemisProgrammingAssessmentModule } from 'app/exercises/programming/assess/programming-assessment.module';\n+import { Exercise } from 'app/entities/exercise.model';\n+import { MockSyncStorage } from '../../helpers/mocks/service/mock-sync-storage.service';\n+\n+chai.use(sinonChai);\n+const expect = chai.expect;\n+\n+const createBlobHttpResponse = () => {\n+    const blob = new Blob([JSON.stringify({ property: 'blob' })], { type: 'application/json' });\n+    const headers = new HttpHeaders().set('filename', 'blobfile');\n+    return new HttpResponse({ body: blob, headers });\n+};\n+\n+describe('ProgrammingAssessmentRepoExportDialogComponent', () => {\n+    let comp: ProgrammingAssessmentRepoExportDialogComponent;\n+    let fixture: ComponentFixture<ProgrammingAssessmentRepoExportDialogComponent>;\n+    let exerciseService: ExerciseService;\n+    let repoExportService: ProgrammingAssessmentRepoExportService;\n+\n+    // stubs\n+    let findExerciseId: SinonStub;\n+    global.URL.createObjectURL = jest.fn(() => 'http://some.test.com');\n+    global.URL.revokeObjectURL = jest.fn(() => '');\n+\n+    const exerciseId = 42;\n+    const participationIdList = [1];\n+    const singleParticipantMode = false;\n+    const programmingExercise = new ProgrammingExercise(new Course(), undefined);\n+    programmingExercise.id = exerciseId;\n+    programmingExercise.releaseDate = moment();\n+    programmingExercise.dueDate = moment().add(7, 'days');\n+\n+    beforeEach(async () => {\n+        return TestBed.configureTestingModule({\n+            imports: [TranslateModule.forRoot(), ArtemisTestModule, ArtemisProgrammingAssessmentModule],\n+            providers: [\n+                ExerciseService,\n+                ProgrammingAssessmentRepoExportService,\n+                { provide: SessionStorageService, useClass: MockSyncStorage },\n+                { provide: LocalStorageService, useClass: MockSyncStorage },\n+            ],\n+        })\n+            .overrideModule(ArtemisTestModule, { set: { declarations: [], exports: [] } })\n+            .compileComponents()\n+            .then(() => {\n+                // Ignore console errors\n+                console.error = () => false;\n+                fixture = TestBed.createComponent(ProgrammingAssessmentRepoExportDialogComponent);\n+                comp = fixture.componentInstance;\n+                exerciseService = fixture.debugElement.injector.get(ExerciseService);\n+                repoExportService = fixture.debugElement.injector.get(ProgrammingAssessmentRepoExportService);\n+\n+                // stubs\n+                findExerciseId = stub(exerciseService, 'find').returns(of({ body: programmingExercise } as HttpResponse<Exercise>));\n+\n+                comp.exerciseId = exerciseId;\n+                comp.participationIdList = participationIdList;\n+                comp.singleParticipantMode = singleParticipantMode;\n+            });\n+    });\n+\n+    it('test initialization', () => {\n+        fixture.detectChanges();\n+        expect(comp.exerciseId).to.be.equal(42);\n+    });\n+\n+    it('Exerciseservice should find the correct programming exercise', fakeAsync(() => {\n+        fixture.detectChanges();\n+        expect(comp.exercise).to.be.equal(programmingExercise);\n+    }));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6908cd85d14c0b02c33ca323da1fc2f7493e7862"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjQwNjEw", "url": "https://github.com/ls1intum/Artemis/pull/2549#pullrequestreview-553640610", "createdAt": "2020-12-16T12:30:52Z", "commit": {"oid": "6908cd85d14c0b02c33ca323da1fc2f7493e7862"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3464, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}