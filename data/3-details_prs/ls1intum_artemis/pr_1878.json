{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NzAxOTM2", "number": 1878, "title": "add achievement storage", "bodyText": "Checklist\n\n Server: I documented the Java code using JavaDoc style.\n Server: I added @PreAuthorize and check the course groups for all new REST Calls (security)\n Server: I added multiple integration tests (Spring) related to the features\n Server: I implemented the changes with a good performance and prevented too many database calls\n\nno changes for the client included\nMotivation and Context\nSolves issue #1882\nTest Coverage", "createdAt": "2020-07-14T07:31:31Z", "url": "https://github.com/ls1intum/Artemis/pull/1878", "merged": true, "mergeCommit": {"oid": "97ea170b54809ca5d121c48963d41a5124a6a703"}, "closed": true, "closedAt": "2020-10-13T09:26:52Z", "author": {"login": "balazs-czopf"}, "timelineItems": {"totalCount": 194, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEt8CLAFqTQ4MDExNDE5OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQNaj2AFqTUwMzkwODMzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMTE0MTk5", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-480114199", "createdAt": "2020-09-01T21:04:14Z", "commit": {"oid": "efe97b904e2506356b25a51a137cc654e2ffb140"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMTowNDoxNFrOHLILFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMTowNDoxNFrOHLILFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQzMDI5NA==", "bodyText": "Don't you need to add a user relationship somewhere, when you give out achievements?", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r481430294", "createdAt": "2020-09-01T21:04:14Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AchievementService.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.domain.enumeration.AchievementRank;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+\n+@Service\n+public class AchievementService {\n+\n+    private final AchievementRepository achievementRepository;\n+\n+    private final UserRepository userRepository;\n+\n+    public AchievementService(AchievementRepository achievementRepository, UserRepository userRepository) {\n+        this.achievementRepository = achievementRepository;\n+        this.userRepository = userRepository;\n+    }\n+\n+    public Optional<Achievement> findById(Long achievementId) {\n+        return achievementRepository.findById(achievementId);\n+    }\n+\n+    public List<Achievement> findAll() {\n+        return achievementRepository.findAll();\n+    }\n+\n+    public Set<Achievement> findAllByCourseId(Long courseId) {\n+        return achievementRepository.findAllByCourseId(courseId);\n+    }\n+\n+    public Set<Achievement> findAllByExerciseId(Long exerciseId) {\n+        return achievementRepository.findAllByExerciseId(exerciseId);\n+    }\n+\n+    public Set<Achievement> findAllByUserId(Long userId) {\n+        return achievementRepository.findAllByUserId(userId);\n+    }\n+\n+    public Achievement save(Achievement achievement) {\n+        return achievementRepository.save(achievement);\n+    }\n+\n+    /**\n+     * Creates an achievement and persist it\n+     */\n+    public Achievement create(String title, String description, String icon, AchievementRank rank, Course course) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efe97b904e2506356b25a51a137cc654e2ffb140"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMTE2MTIy", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-480116122", "createdAt": "2020-09-01T21:07:24Z", "commit": {"oid": "efe97b904e2506356b25a51a137cc654e2ffb140"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMTowNzoyNFrOHLIRaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMTowNzoyNFrOHLIRaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQzMTkxMg==", "bodyText": "Don't you have to save the altered achievements?", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r481431912", "createdAt": "2020-09-01T21:07:24Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ExerciseService.java", "diffHunk": "@@ -285,6 +288,9 @@ public void delete(long exerciseId, boolean deleteStudentReposBuildPlans, boolea\n         // make sure tutor participations are deleted before the exercise is deleted\n         tutorParticipationRepository.deleteAllByAssessedExerciseId(exercise.getId());\n \n+        // delete exercise in all achievements\n+        achievementService.findAllByExerciseId(exercise.getId()).forEach(achievement -> achievement.setExercise(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efe97b904e2506356b25a51a137cc654e2ffb140"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6aa68b0ab7a071fa631c7c72cdb8ea02ccf15a39", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/6aa68b0ab7a071fa631c7c72cdb8ea02ccf15a39", "committedDate": "2020-09-01T21:11:31Z", "message": "add param doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMTE5NzYx", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-480119761", "createdAt": "2020-09-01T21:13:13Z", "commit": {"oid": "efe97b904e2506356b25a51a137cc654e2ffb140"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMToxMzoxM1rOHLIdBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMToxMzoxM1rOHLIdBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQzNDg4Nw==", "bodyText": "I would just use VARCHAR(255) to future proof this. No need to be frugal here in this range.", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r481434887", "createdAt": "2020-09-01T21:13:13Z", "author": {"login": "kloessst"}, "path": "src/main/resources/config/liquibase/changelog/20200824233945_changelog.xml", "diffHunk": "@@ -0,0 +1,28 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-34\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"description\" type=\"VARCHAR(255)\"/>\n+            <column name=\"icon\" type=\"VARCHAR(255)\"/>\n+            <column name=\"rank\" type=\"VARCHAR(8)\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efe97b904e2506356b25a51a137cc654e2ffb140"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6f4c8861d530ee606cd33ce9bea33c51e4f2728", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/d6f4c8861d530ee606cd33ce9bea33c51e4f2728", "committedDate": "2020-09-01T21:30:09Z", "message": "integrate further feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ef266e869ba2a7881c261a2ff2936b1acdb4911", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/9ef266e869ba2a7881c261a2ff2936b1acdb4911", "committedDate": "2020-09-01T21:58:03Z", "message": "add return to javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMTcxNDk1", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-480171495", "createdAt": "2020-09-01T22:55:48Z", "commit": {"oid": "9ef266e869ba2a7881c261a2ff2936b1acdb4911"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNTY3MTk3", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-480567197", "createdAt": "2020-09-02T07:49:29Z", "commit": {"oid": "9ef266e869ba2a7881c261a2ff2936b1acdb4911"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1de95feae06f4d7194b157599d21b659665da934", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/1de95feae06f4d7194b157599d21b659665da934", "committedDate": "2020-09-19T07:07:16Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b55d823034cdd1c7d78f81b2656deb0463a57163", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/b55d823034cdd1c7d78f81b2656deb0463a57163", "committedDate": "2020-09-19T07:21:32Z", "message": "Merge branch 'feature/achievements/storage' into feature/achievements/achievement-checks\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/service/AchievementService.java\n#\tsrc/main/java/de/tum/in/www1/artemis/service/ProgrammingAssessmentService.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b78dc9d7d8eb442e8cca093c1e39c80633ae7c46", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/b78dc9d7d8eb442e8cca093c1e39c80633ae7c46", "committedDate": "2020-09-19T08:06:27Z", "message": "remove semicolons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53dba54103c70309a079b8d63b7c97244b81c458", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/53dba54103c70309a079b8d63b7c97244b81c458", "committedDate": "2020-09-19T08:08:22Z", "message": "remove another semicolon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29b99cf76c6ad320bec1bc5873d8c3db73d72cf3", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/29b99cf76c6ad320bec1bc5873d8c3db73d72cf3", "committedDate": "2020-09-19T08:12:21Z", "message": "remove semicolons once again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "865d4c8c0b2383053a0206e3f554ad5ddd33ed22", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/865d4c8c0b2383053a0206e3f554ad5ddd33ed22", "committedDate": "2020-09-19T10:38:00Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9de666709304efc7d693591721e3a95c65ee6a9", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/d9de666709304efc7d693591721e3a95c65ee6a9", "committedDate": "2020-09-20T15:09:16Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72ed71a2a7717d3b129f6365d24db139ca9ffdf8", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/72ed71a2a7717d3b129f6365d24db139ca9ffdf8", "committedDate": "2020-09-20T15:11:59Z", "message": "Merge branch 'develop' into feature/achievements/achievement-checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2880feed09fc2090a643646854d2f6a5d2a67e8f", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/2880feed09fc2090a643646854d2f6a5d2a67e8f", "committedDate": "2020-09-23T09:42:16Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad64b282b2255d720c9773cccc6f49a00bff6ad4", "author": {"user": {"login": "kloessst", "name": "Stefan Kl\u00f6ss-Schuster"}}, "url": "https://github.com/ls1intum/Artemis/commit/ad64b282b2255d720c9773cccc6f49a00bff6ad4", "committedDate": "2020-09-23T13:58:56Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9aef805a8b7948a9d5cd14781203108636a085e", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/f9aef805a8b7948a9d5cd14781203108636a085e", "committedDate": "2020-09-24T06:15:01Z", "message": "Merge branch 'develop' into feature/achievements/achievement-checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16c868730f899decba01ea6e156f8e7aebc0f26a", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/16c868730f899decba01ea6e156f8e7aebc0f26a", "committedDate": "2020-09-24T06:16:03Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5aa0f887eec40ee49590ae6c36598ed23f71fa30", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/5aa0f887eec40ee49590ae6c36598ed23f71fa30", "committedDate": "2020-09-24T08:41:09Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9e78d5f35e682dd1b8e5882d0883d782cecbe3f", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/c9e78d5f35e682dd1b8e5882d0883d782cecbe3f", "committedDate": "2020-09-24T08:46:44Z", "message": "Merge branch 'develop' into feature/achievements/achievement-checks\n\n# Conflicts:\n#\tsrc/main/resources/config/liquibase/master.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4605b63a052365e502039c1e3d72f325538cf7eb", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/4605b63a052365e502039c1e3d72f325538cf7eb", "committedDate": "2020-09-24T13:03:15Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18ddbfcae8f77e8cee1c7944a18fba5a589d46b5", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/18ddbfcae8f77e8cee1c7944a18fba5a589d46b5", "committedDate": "2020-09-24T13:04:50Z", "message": "Merge branch 'develop' into feature/achievements/achievement-checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1555470b055e8a99d34b9ed7f4fcb0929ede6bc6", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/1555470b055e8a99d34b9ed7f4fcb0929ede6bc6", "committedDate": "2020-09-24T17:31:50Z", "message": "Merge branch 'develop' into feature/achievements/storage\n\n# Conflicts:\n#\tsrc/main/resources/config/liquibase/master.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "350087b6078ccb4c49a78aebe602a163fa860637", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/350087b6078ccb4c49a78aebe602a163fa860637", "committedDate": "2020-09-24T17:33:48Z", "message": "Merge branch 'develop' into feature/achievements/achievement-checks\n\n# Conflicts:\n#\tsrc/main/resources/config/liquibase/master.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b496ec47dbd27567e02f96f7b2e363733ca7d89f", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/b496ec47dbd27567e02f96f7b2e363733ca7d89f", "committedDate": "2020-09-26T09:57:30Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1871fe479e13e32629073b2a2ab2ae293cf2a6ae", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/1871fe479e13e32629073b2a2ab2ae293cf2a6ae", "committedDate": "2020-09-26T09:59:58Z", "message": "Merge branch 'develop' into feature/achievements/achievement-checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d1887ebc2c67095c5a13eee2f86b7fb39b901d3", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/2d1887ebc2c67095c5a13eee2f86b7fb39b901d3", "committedDate": "2020-09-26T15:01:09Z", "message": "remove random semicolons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0e4daee087d8b6f0d36b1b78465a31f6f09713d", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/f0e4daee087d8b6f0d36b1b78465a31f6f09713d", "committedDate": "2020-09-26T15:11:46Z", "message": "remove random semicolons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95622742bd3fa7623d0ad8df6089acef534ee60f", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/95622742bd3fa7623d0ad8df6089acef534ee60f", "committedDate": "2020-09-27T09:24:20Z", "message": "add achievement checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0a4b8df894787c7f22b172ecf3a3a9ce1ff398d", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/c0a4b8df894787c7f22b172ecf3a3a9ce1ff398d", "committedDate": "2020-09-28T07:41:32Z", "message": "fix a few things"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e82242b97cdbc112e1d3a883cb2281d462dd405", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/0e82242b97cdbc112e1d3a883cb2281d462dd405", "committedDate": "2020-09-28T07:52:42Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7425c9af8e7e15cd22a3771029b103c6d79608f", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/c7425c9af8e7e15cd22a3771029b103c6d79608f", "committedDate": "2020-09-28T07:53:20Z", "message": "Merge branch 'develop' into feature/achievements/achievement-checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28ed83395042c9e9faddf43940bd9f3c221684b3", "author": {"user": {"login": "kloessst", "name": "Stefan Kl\u00f6ss-Schuster"}}, "url": "https://github.com/ls1intum/Artemis/commit/28ed83395042c9e9faddf43940bd9f3c221684b3", "committedDate": "2020-09-28T19:39:26Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f91a8c850a8261a5a2cccec6290474ad193d1b8", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/7f91a8c850a8261a5a2cccec6290474ad193d1b8", "committedDate": "2020-09-29T15:18:39Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13581c27c5425e2d08d6c8d22c23aabb06a4661b", "author": {"user": {"login": "krusche", "name": "Stephan Krusche"}}, "url": "https://github.com/ls1intum/Artemis/commit/13581c27c5425e2d08d6c8d22c23aabb06a4661b", "committedDate": "2020-09-29T17:28:10Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a29934b894dc985ef64551a61cb158c8db3cb095", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/a29934b894dc985ef64551a61cb158c8db3cb095", "committedDate": "2020-09-29T18:07:56Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "108a983bae22d4c3041b0c52e1acbc5132791cf4", "author": {"user": {"login": "kloessst", "name": "Stefan Kl\u00f6ss-Schuster"}}, "url": "https://github.com/ls1intum/Artemis/commit/108a983bae22d4c3041b0c52e1acbc5132791cf4", "committedDate": "2020-09-30T14:47:01Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3317e06a092c8dbee21b52de380addd92f73b3f", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/c3317e06a092c8dbee21b52de380addd92f73b3f", "committedDate": "2020-10-01T10:52:14Z", "message": "add stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "508e8977abe4d1e8ec1c8a817fe9bd0f91f6bb8a", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/508e8977abe4d1e8ec1c8a817fe9bd0f91f6bb8a", "committedDate": "2020-10-01T10:59:26Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3d2ea3ec69fdc3185bac66822f03c4a1bf0b6b1", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/d3d2ea3ec69fdc3185bac66822f03c4a1bf0b6b1", "committedDate": "2020-10-01T11:00:44Z", "message": "Merge branch 'develop' into feature/achievements/server"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee25bd720633e2da0f2ad7b9354358590178e20f", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/ee25bd720633e2da0f2ad7b9354358590178e20f", "committedDate": "2020-10-01T11:36:40Z", "message": "prepare for client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22dd5cf9af0d3ad36041717a3f4ca1be5c5a6925", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/22dd5cf9af0d3ad36041717a3f4ca1be5c5a6925", "committedDate": "2020-10-01T19:34:47Z", "message": "small fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87e1b7686ddcdf36dbefc8407242e70d200a329d", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/87e1b7686ddcdf36dbefc8407242e70d200a329d", "committedDate": "2020-10-01T22:17:53Z", "message": "few further fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64778c859b7f2d14015c50aedae62db4c98bcee7", "author": {"user": {"login": "kloessst", "name": "Stefan Kl\u00f6ss-Schuster"}}, "url": "https://github.com/ls1intum/Artemis/commit/64778c859b7f2d14015c50aedae62db4c98bcee7", "committedDate": "2020-10-03T11:52:15Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d5bfc049d9e75323290b069e7343df6fc579ee7", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/8d5bfc049d9e75323290b069e7343df6fc579ee7", "committedDate": "2020-10-03T16:02:35Z", "message": "refactor stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b37db66c5ce9ba8f83251928b06cf1348c9d2a8", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/1b37db66c5ce9ba8f83251928b06cf1348c9d2a8", "committedDate": "2020-10-03T16:50:03Z", "message": "Merge branch 'develop' into feature/achievements/server\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d253878f2c48324cce17332d858163dc22f932f6", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/d253878f2c48324cce17332d858163dc22f932f6", "committedDate": "2020-10-04T08:40:29Z", "message": "add javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e261947c3ac2358fb9c0c2794728e9499b0504ae", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/e261947c3ac2358fb9c0c2794728e9499b0504ae", "committedDate": "2020-10-04T08:46:50Z", "message": "Merge branch 'develop' into feature/achievements/server\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/domain/User.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a5de1a37353eb19f93ef49666bba352198834cb", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/7a5de1a37353eb19f93ef49666bba352198834cb", "committedDate": "2020-10-04T08:53:29Z", "message": "Merge branch 'develop' into feature/achievements/storage\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/domain/User.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "116151629d403403ee9b750c30c182f44f70e233", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/116151629d403403ee9b750c30c182f44f70e233", "committedDate": "2020-10-04T09:18:47Z", "message": "Merge relevant changes from 'feature/achievements/server' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93870f9227c9fc41eccd69fbff118cd9b1535aad", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/93870f9227c9fc41eccd69fbff118cd9b1535aad", "committedDate": "2020-10-04T09:53:51Z", "message": "fix default value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7db5a3c96eed46493c6270e6aa8c8f658fa78b14", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/7db5a3c96eed46493c6270e6aa8c8f658fa78b14", "committedDate": "2020-10-04T09:57:41Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53c319a21a4053a341e9b24da4987de5abfb656d", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/53c319a21a4053a341e9b24da4987de5abfb656d", "committedDate": "2020-10-04T12:27:27Z", "message": "use service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "786e61b1b217fb61e37f5dc1256ea2e3663d3cdb", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/786e61b1b217fb61e37f5dc1256ea2e3663d3cdb", "committedDate": "2020-10-05T06:35:18Z", "message": "Merge branch 'develop' into feature/achievements/storage\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/domain/Course.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24465a0b342536acdc8e7b8d0448043b276dab91", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/24465a0b342536acdc8e7b8d0448043b276dab91", "committedDate": "2020-10-05T09:47:44Z", "message": "fix codacy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxODY3ODA2", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-501867806", "createdAt": "2020-10-05T09:19:45Z", "commit": {"oid": "786e61b1b217fb61e37f5dc1256ea2e3663d3cdb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOToxOTo0NVrOHcUcNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwOTozMDowN1rOHcU31Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ1NzA3Ng==", "bodyText": "I would suggest not using SQL keywords for column names. https://www.drupal.org/node/141051", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r499457076", "createdAt": "2020-10-05T09:19:45Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -0,0 +1,166 @@\n+package de.tum.in.www1.artemis.domain;\n+\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.persistence.*;\n+\n+import org.hibernate.annotations.Cache;\n+import org.hibernate.annotations.CacheConcurrencyStrategy;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+\n+import de.tum.in.www1.artemis.domain.enumeration.AchievementRank;\n+import de.tum.in.www1.artemis.domain.enumeration.AchievementType;\n+\n+@Entity\n+@Table(name = \"achievement\")\n+@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+@JsonInclude(JsonInclude.Include.NON_EMPTY)\n+public class Achievement implements Serializable {\n+\n+    @Id\n+    @Column(name = \"id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"title\")\n+    private String title;\n+\n+    @Column(name = \"description\")\n+    private String description;\n+\n+    @Column(name = \"icon\")\n+    private String icon;\n+\n+    @Enumerated(EnumType.STRING)\n+    @Column(name = \"`rank`\")\n+    private AchievementRank rank;\n+\n+    @Enumerated(EnumType.STRING)\n+    @Column(name = \"`type`\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "786e61b1b217fb61e37f5dc1256ea2e3663d3cdb"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ1NzIzMA==", "bodyText": "I would suggest not using SQL keywords for column names. https://www.drupal.org/node/141051", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r499457230", "createdAt": "2020-10-05T09:20:00Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -0,0 +1,166 @@\n+package de.tum.in.www1.artemis.domain;\n+\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.persistence.*;\n+\n+import org.hibernate.annotations.Cache;\n+import org.hibernate.annotations.CacheConcurrencyStrategy;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+\n+import de.tum.in.www1.artemis.domain.enumeration.AchievementRank;\n+import de.tum.in.www1.artemis.domain.enumeration.AchievementType;\n+\n+@Entity\n+@Table(name = \"achievement\")\n+@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+@JsonInclude(JsonInclude.Include.NON_EMPTY)\n+public class Achievement implements Serializable {\n+\n+    @Id\n+    @Column(name = \"id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"title\")\n+    private String title;\n+\n+    @Column(name = \"description\")\n+    private String description;\n+\n+    @Column(name = \"icon\")\n+    private String icon;\n+\n+    @Enumerated(EnumType.STRING)\n+    @Column(name = \"`rank`\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "786e61b1b217fb61e37f5dc1256ea2e3663d3cdb"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ2MzI2NQ==", "bodyText": "I am not certain if this implementation of equals and hashcode is a good idea, as you are also calling equals and hashcode of other entities.  But I am not an expert so @krusche might help here\nMaybe read through this here https://docs.jboss.org/hibernate/stable/core.old/reference/en/html/persistent-classes-equalshashcode.html.\nIs title a natural key?", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r499463265", "createdAt": "2020-10-05T09:28:47Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -0,0 +1,166 @@\n+package de.tum.in.www1.artemis.domain;\n+\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.persistence.*;\n+\n+import org.hibernate.annotations.Cache;\n+import org.hibernate.annotations.CacheConcurrencyStrategy;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+\n+import de.tum.in.www1.artemis.domain.enumeration.AchievementRank;\n+import de.tum.in.www1.artemis.domain.enumeration.AchievementType;\n+\n+@Entity\n+@Table(name = \"achievement\")\n+@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+@JsonInclude(JsonInclude.Include.NON_EMPTY)\n+public class Achievement implements Serializable {\n+\n+    @Id\n+    @Column(name = \"id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"title\")\n+    private String title;\n+\n+    @Column(name = \"description\")\n+    private String description;\n+\n+    @Column(name = \"icon\")\n+    private String icon;\n+\n+    @Enumerated(EnumType.STRING)\n+    @Column(name = \"`rank`\")\n+    private AchievementRank rank;\n+\n+    @Enumerated(EnumType.STRING)\n+    @Column(name = \"`type`\")\n+    private AchievementType type;\n+\n+    @ManyToOne\n+    private Course course;\n+\n+    @ManyToOne\n+    private Exercise exercise;\n+\n+    @ManyToMany(mappedBy = \"achievements\")\n+    @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+    @JsonIgnoreProperties({ \"achievements\" })\n+    private Set<User> users = new HashSet<>();\n+\n+    public Achievement() {\n+    }\n+\n+    public Achievement(String title, String description, String icon, AchievementRank rank, AchievementType type, Course course, Exercise exercise) {\n+        this.title = title;\n+        this.description = description;\n+        this.icon = icon;\n+        this.rank = rank;\n+        this.type = type;\n+        this.course = course;\n+        this.exercise = exercise;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getTitle() {\n+        return title;\n+    }\n+\n+    public void setTitle(String title) {\n+        this.title = title;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+\n+    public String getIcon() {\n+        return icon;\n+    }\n+\n+    public void setIcon(String icon) {\n+        this.icon = icon;\n+    }\n+\n+    public AchievementRank getRank() {\n+        return rank;\n+    }\n+\n+    public void setRank(AchievementRank rank) {\n+        this.rank = rank;\n+    }\n+\n+    public AchievementType getType() {\n+        return type;\n+    }\n+\n+    public void setType(AchievementType type) {\n+        this.type = type;\n+    }\n+\n+    public Set<User> getUsers() {\n+        return users;\n+    }\n+\n+    public void setUsers(Set<User> users) {\n+        this.users = users;\n+    }\n+\n+    public Course getCourse() {\n+        return course;\n+    }\n+\n+    public void setCourse(Course course) {\n+        this.course = course;\n+    }\n+\n+    public Exercise getExercise() {\n+        return exercise;\n+    }\n+\n+    public void setExercise(Exercise exercise) {\n+        this.exercise = exercise;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Achievement{\" + \"id=\" + getId() + \", title='\" + getTitle() + \"'\" + \", description='\" + getDescription() + \"'\" + \", icon='\" + getIcon() + \"'\" + \", rank='\"\n+                + getRank() + \"'\" + \", type='\" + getType() + \"'\" + \"}\";\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "786e61b1b217fb61e37f5dc1256ea2e3663d3cdb"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ2NDE0OQ==", "bodyText": "Why is it nullable if false is the default value? That would imply it is never null? You could also set it using liquibase for all already existing courses to false.", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r499464149", "createdAt": "2020-10-05T09:30:07Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Course.java", "diffHunk": "@@ -102,6 +103,10 @@\n     @Column(name = \"presentation_score\")\n     private Integer presentationScore;\n \n+    @Nullable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "786e61b1b217fb61e37f5dc1256ea2e3663d3cdb"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b13fd64547c4c2d86064c81dc0e1e15e4e58b0e", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/2b13fd64547c4c2d86064c81dc0e1e15e4e58b0e", "committedDate": "2020-10-05T10:12:44Z", "message": "fix codacy again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e204099c92da4070f6297f4168820a36bcebe96", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/9e204099c92da4070f6297f4168820a36bcebe96", "committedDate": "2020-10-05T10:13:52Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d87fe70c504d9d9c855d7c0371f19b9bd8c745d", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/2d87fe70c504d9d9c855d7c0371f19b9bd8c745d", "committedDate": "2020-10-05T10:35:14Z", "message": "remove and update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMDUxNzIy", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-502051722", "createdAt": "2020-10-05T13:24:42Z", "commit": {"oid": "2d87fe70c504d9d9c855d7c0371f19b9bd8c745d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzoyNDo0MlrOHcc5OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzoyNDo0MlrOHcc5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU5NTU3Ng==", "bodyText": "We introduced a new superclass for domain classes a few days ago that comes with the benefits of:\n\nalready implementing Serializable\nalready having an id attribute including getId() and setId(Long)\nalready overriding Object.hashCode() and Object.equals(Object) correctly, based on the id.\n\nI think it would be a good idea (and with the tests of #2155 almost necessary) to use DomainObject here.\nThen there are also fewer problems to deal with.\nI just want to mention it here and now already, to avoid confusion and possibly problems later on.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class Achievement implements Serializable {\n          \n          \n            \n            \n          \n          \n            \n                @Id\n          \n          \n            \n                @Column(name = \"id\")\n          \n          \n            \n                @GeneratedValue(strategy = GenerationType.IDENTITY)\n          \n          \n            \n                private Long id;\n          \n          \n            \n            public class Achievement extends DomainObject {", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r499595576", "createdAt": "2020-10-05T13:24:42Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -0,0 +1,147 @@\n+package de.tum.in.www1.artemis.domain;\n+\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import javax.persistence.*;\n+\n+import org.hibernate.annotations.Cache;\n+import org.hibernate.annotations.CacheConcurrencyStrategy;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+\n+import de.tum.in.www1.artemis.domain.enumeration.AchievementRank;\n+import de.tum.in.www1.artemis.domain.enumeration.AchievementType;\n+\n+@Entity\n+@Table(name = \"achievement\")\n+@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+@JsonInclude(JsonInclude.Include.NON_EMPTY)\n+public class Achievement implements Serializable {\n+\n+    @Id\n+    @Column(name = \"id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d87fe70c504d9d9c855d7c0371f19b9bd8c745d"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMDUyMTY5", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-502052169", "createdAt": "2020-10-05T13:25:13Z", "commit": {"oid": "2d87fe70c504d9d9c855d7c0371f19b9bd8c745d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzoyNToxM1rOHcc6lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzoyNToxM1rOHcc6lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU5NTkyNg==", "bodyText": "See comment above.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                public Long getId() {\n          \n          \n            \n                    return id;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                public void setId(Long id) {\n          \n          \n            \n                    this.id = id;\n          \n          \n            \n                }", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r499595926", "createdAt": "2020-10-05T13:25:13Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -0,0 +1,147 @@\n+package de.tum.in.www1.artemis.domain;\n+\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import javax.persistence.*;\n+\n+import org.hibernate.annotations.Cache;\n+import org.hibernate.annotations.CacheConcurrencyStrategy;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+\n+import de.tum.in.www1.artemis.domain.enumeration.AchievementRank;\n+import de.tum.in.www1.artemis.domain.enumeration.AchievementType;\n+\n+@Entity\n+@Table(name = \"achievement\")\n+@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+@JsonInclude(JsonInclude.Include.NON_EMPTY)\n+public class Achievement implements Serializable {\n+\n+    @Id\n+    @Column(name = \"id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"title\")\n+    private String title;\n+\n+    @Column(name = \"description\")\n+    private String description;\n+\n+    @Column(name = \"icon\")\n+    private String icon;\n+\n+    @Enumerated(EnumType.STRING)\n+    @Column(name = \"achievement_rank\")\n+    private AchievementRank rank;\n+\n+    @Enumerated(EnumType.STRING)\n+    @Column(name = \"achievement_type\")\n+    private AchievementType type;\n+\n+    @ManyToOne\n+    private Course course;\n+\n+    @ManyToOne\n+    private Exercise exercise;\n+\n+    @ManyToMany(mappedBy = \"achievements\")\n+    @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+    @JsonIgnoreProperties({ \"achievements\" })\n+    private Set<User> users = new HashSet<>();\n+\n+    public Achievement() {\n+    }\n+\n+    public Achievement(String title, String description, String icon, AchievementRank rank, AchievementType type, Course course, Exercise exercise) {\n+        this.title = title;\n+        this.description = description;\n+        this.icon = icon;\n+        this.rank = rank;\n+        this.type = type;\n+        this.course = course;\n+        this.exercise = exercise;\n+    }\n+\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d87fe70c504d9d9c855d7c0371f19b9bd8c745d"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59f1e61538f3768d7b7e66eb614337d27d805321", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/59f1e61538f3768d7b7e66eb614337d27d805321", "committedDate": "2020-10-05T14:21:30Z", "message": "replace serializable with domainobject\n\nCo-authored-by: Christian Femers <c.femers@tum.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a616036218e566ee1e309966c4cd89c4f8b5b7f0", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/a616036218e566ee1e309966c4cd89c4f8b5b7f0", "committedDate": "2020-10-05T14:22:01Z", "message": "remove getter and setter for id\n\nCo-authored-by: Christian Femers <c.femers@tum.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bbb0ecd89c40edcf360b83fa3b864cb9f329e6d", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/2bbb0ecd89c40edcf360b83fa3b864cb9f329e6d", "committedDate": "2020-10-05T14:40:31Z", "message": "fix changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93ae455b025de7b1343fd226822a7082511bc7fa", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/93ae455b025de7b1343fd226822a7082511bc7fa", "committedDate": "2020-10-05T18:08:00Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d11204e7243c0a60e8f82d1dcb920a4a43ac7bd8", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/d11204e7243c0a60e8f82d1dcb920a4a43ac7bd8", "committedDate": "2020-10-05T19:49:31Z", "message": "move changelog.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ad134de34257e969783f6450f2f3690a7c0a59a", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/7ad134de34257e969783f6450f2f3690a7c0a59a", "committedDate": "2020-10-05T20:19:26Z", "message": "try nullable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03f892a98b61e11da27c5072e17ae52eaf07db72", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/03f892a98b61e11da27c5072e17ae52eaf07db72", "committedDate": "2020-10-05T20:23:16Z", "message": "remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abd6b740eef2c879229969643c12f7e79abd1970", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/abd6b740eef2c879229969643c12f7e79abd1970", "committedDate": "2020-10-05T20:50:12Z", "message": "remove nullable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39f18fde4dfafea42fec7c2bd2edf098dc76ba12", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/39f18fde4dfafea42fec7c2bd2edf098dc76ba12", "committedDate": "2020-10-05T21:17:06Z", "message": "try jsonignore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDU2NDMy", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-502456432", "createdAt": "2020-10-05T22:10:46Z", "commit": {"oid": "39f18fde4dfafea42fec7c2bd2edf098dc76ba12"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDYxNTA4", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-502461508", "createdAt": "2020-10-05T22:21:36Z", "commit": {"oid": "39f18fde4dfafea42fec7c2bd2edf098dc76ba12"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjoyMTozNlrOHcvuwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjoyMTozNlrOHcvuwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkwNDE5Mg==", "bodyText": "If I see it correctly, this is used for all exercise types. To reduce code duplication you could extract this into ExerciseService.java :)", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r499904192", "createdAt": "2020-10-05T22:21:36Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/FileUploadExerciseResource.java", "diffHunk": "@@ -106,6 +110,11 @@ public FileUploadExerciseResource(FileUploadExerciseService fileUploadExerciseSe\n \n         FileUploadExercise result = fileUploadExerciseRepository.save(fileUploadExercise);\n \n+        // Generate achievements if enabled in course and exercise not part of exam\n+        if (course.getHasAchievements() && (result.getExerciseGroup() == null || result.getExerciseGroup().getExam() == null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f18fde4dfafea42fec7c2bd2edf098dc76ba12"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDc2NTc1", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-502476575", "createdAt": "2020-10-05T22:57:51Z", "commit": {"oid": "39f18fde4dfafea42fec7c2bd2edf098dc76ba12"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjo1Nzo1MlrOHcwdhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjo1OTo1NFrOHcwf8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxNjE2Nw==", "bodyText": "I think you can remove the Transactional here when you just fetch the achievements for the users in the findAllByCourseId", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r499916167", "createdAt": "2020-10-05T22:57:52Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AchievementService.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import java.util.Set;\n+\n+import javax.transaction.Transactional;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.Exercise;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+\n+@Service\n+public class AchievementService {\n+\n+    private final PointBasedAchievementService pointBasedAchievementService;\n+\n+    private final TimeBasedAchievementService timeBasedAchievementService;\n+\n+    private final ProgressBasedAchievementService progressBasedAchievementService;\n+\n+    private final AchievementRepository achievementRepository;\n+\n+    private final UserRepository userRepository;\n+\n+    public AchievementService(AchievementRepository achievementRepository, UserRepository userRepository, PointBasedAchievementService pointBasedAchievementService,\n+            TimeBasedAchievementService timeBasedAchievementService, ProgressBasedAchievementService progressBasedAchievementService) {\n+        this.achievementRepository = achievementRepository;\n+        this.pointBasedAchievementService = pointBasedAchievementService;\n+        this.timeBasedAchievementService = timeBasedAchievementService;\n+        this.progressBasedAchievementService = progressBasedAchievementService;\n+        this.userRepository = userRepository;\n+    }\n+\n+    /**\n+     * Finds all achievements for a user in a given course and returns them as a set\n+     * @param userId\n+     * @param courseId\n+     * @return set of achievements\n+     */\n+    public Set<Achievement> findAllByUserIdAndCourseId(Long userId, Long courseId) {\n+        return achievementRepository.findAllByUserIdAndCourseId(userId, courseId);\n+    }\n+\n+    /**\n+     * Deletes all achievements that belong to the course with the given courseId\n+     * Used when a course is deleted or when achievements are disabled again for a course\n+     * @param courseId\n+     */\n+    @Transactional\n+    public void deleteByCourseId(Long courseId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f18fde4dfafea42fec7c2bd2edf098dc76ba12"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxNjYzNg==", "bodyText": "For my comment in the delete call:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Query(\"SELECT a FROM Achievement a LEFT JOIN FETCH a.users WHERE a.course.id = :#{#courseId}\")\n          \n          \n            \n                @Query(\"SELECT a FROM Achievement a LEFT JOIN FETCH a.users u LEFT JOIN FETCH u.achievements WHERE a.course.id = :#{#courseId}\")", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r499916636", "createdAt": "2020-10-05T22:59:27Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/AchievementRepository.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.util.Set;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+\n+/**\n+ * Spring Data JPA repository for the Achievement entity.\n+ */\n+@Repository\n+public interface AchievementRepository extends JpaRepository<Achievement, Long> {\n+\n+    @Query(\"SELECT a FROM Achievement a LEFT JOIN FETCH a.users WHERE a.course.id = :#{#courseId}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f18fde4dfafea42fec7c2bd2edf098dc76ba12"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxNjc4Nw==", "bodyText": "Same as above :)", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r499916787", "createdAt": "2020-10-05T22:59:54Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AchievementService.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import java.util.Set;\n+\n+import javax.transaction.Transactional;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.Exercise;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+\n+@Service\n+public class AchievementService {\n+\n+    private final PointBasedAchievementService pointBasedAchievementService;\n+\n+    private final TimeBasedAchievementService timeBasedAchievementService;\n+\n+    private final ProgressBasedAchievementService progressBasedAchievementService;\n+\n+    private final AchievementRepository achievementRepository;\n+\n+    private final UserRepository userRepository;\n+\n+    public AchievementService(AchievementRepository achievementRepository, UserRepository userRepository, PointBasedAchievementService pointBasedAchievementService,\n+            TimeBasedAchievementService timeBasedAchievementService, ProgressBasedAchievementService progressBasedAchievementService) {\n+        this.achievementRepository = achievementRepository;\n+        this.pointBasedAchievementService = pointBasedAchievementService;\n+        this.timeBasedAchievementService = timeBasedAchievementService;\n+        this.progressBasedAchievementService = progressBasedAchievementService;\n+        this.userRepository = userRepository;\n+    }\n+\n+    /**\n+     * Finds all achievements for a user in a given course and returns them as a set\n+     * @param userId\n+     * @param courseId\n+     * @return set of achievements\n+     */\n+    public Set<Achievement> findAllByUserIdAndCourseId(Long userId, Long courseId) {\n+        return achievementRepository.findAllByUserIdAndCourseId(userId, courseId);\n+    }\n+\n+    /**\n+     * Deletes all achievements that belong to the course with the given courseId\n+     * Used when a course is deleted or when achievements are disabled again for a course\n+     * @param courseId\n+     */\n+    @Transactional\n+    public void deleteByCourseId(Long courseId) {\n+        Set<Achievement> achievements = achievementRepository.findAllByCourseId(courseId);\n+        for (Achievement achievement : achievements) {\n+            removeFromUsers(achievement);\n+        }\n+        achievementRepository.deleteAll(achievements);\n+    }\n+\n+    /**\n+     * Deletes all achievements that belong to the exercise with the given exerciseId\n+     * Used when an exercise is deleted\n+     * @param exerciseId\n+     */\n+    @Transactional\n+    public void deleteByExerciseId(Long exerciseId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f18fde4dfafea42fec7c2bd2edf098dc76ba12"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "719a46d7fd1e520b77bb96ef30efe4d29582c872", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/719a46d7fd1e520b77bb96ef30efe4d29582c872", "committedDate": "2020-10-05T23:16:05Z", "message": "code quality improvement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f9400ee05f1f5802745ebdbac3d497f8debe2f2", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/4f9400ee05f1f5802745ebdbac3d497f8debe2f2", "committedDate": "2020-10-06T06:56:00Z", "message": "refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00ec5a4f4dc7f9eeeb161db5cd1c2f7e1a402c6b", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/00ec5a4f4dc7f9eeeb161db5cd1c2f7e1a402c6b", "committedDate": "2020-10-06T06:59:49Z", "message": "adjust test as well"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNjUwMjc0", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-502650274", "createdAt": "2020-10-06T07:23:42Z", "commit": {"oid": "00ec5a4f4dc7f9eeeb161db5cd1c2f7e1a402c6b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMzg0MTQw", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-503384140", "createdAt": "2020-10-06T21:49:22Z", "commit": {"oid": "00ec5a4f4dc7f9eeeb161db5cd1c2f7e1a402c6b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMzg1NDU5", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-503385459", "createdAt": "2020-10-06T21:51:37Z", "commit": {"oid": "00ec5a4f4dc7f9eeeb161db5cd1c2f7e1a402c6b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMzg3MDY5", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-503387069", "createdAt": "2020-10-06T21:54:33Z", "commit": {"oid": "00ec5a4f4dc7f9eeeb161db5cd1c2f7e1a402c6b"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNDE3MzE5", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-503417319", "createdAt": "2020-10-06T23:00:15Z", "commit": {"oid": "00ec5a4f4dc7f9eeeb161db5cd1c2f7e1a402c6b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzowMDoxNVrOHdc1Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzowNjoyMVrOHdc8Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0MzA3OA==", "bodyText": "Is this attribute set when the course is created by the instructor? If this is the case I would rename it to something like achievementsEnabled.", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r500643078", "createdAt": "2020-10-06T23:00:15Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Course.java", "diffHunk": "@@ -102,6 +102,9 @@\n     @Column(name = \"presentation_score\")\n     private Integer presentationScore;\n \n+    @Column(name = \"has_achievements\", columnDefinition = \"Boolean default false\")\n+    private Boolean hasAchievements = false; // default value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00ec5a4f4dc7f9eeeb161db5cd1c2f7e1a402c6b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0NDg4Nw==", "bodyText": "You could use exercise.hasExerciseGroup() to check for exam exercises.", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r500644887", "createdAt": "2020-10-06T23:06:21Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AchievementService.java", "diffHunk": "@@ -0,0 +1,118 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import java.util.Set;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.Exercise;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+\n+@Service\n+public class AchievementService {\n+\n+    private final PointBasedAchievementService pointBasedAchievementService;\n+\n+    private final TimeBasedAchievementService timeBasedAchievementService;\n+\n+    private final ProgressBasedAchievementService progressBasedAchievementService;\n+\n+    private final AchievementRepository achievementRepository;\n+\n+    private final UserRepository userRepository;\n+\n+    public AchievementService(AchievementRepository achievementRepository, UserRepository userRepository, PointBasedAchievementService pointBasedAchievementService,\n+            TimeBasedAchievementService timeBasedAchievementService, ProgressBasedAchievementService progressBasedAchievementService) {\n+        this.achievementRepository = achievementRepository;\n+        this.pointBasedAchievementService = pointBasedAchievementService;\n+        this.timeBasedAchievementService = timeBasedAchievementService;\n+        this.progressBasedAchievementService = progressBasedAchievementService;\n+        this.userRepository = userRepository;\n+    }\n+\n+    /**\n+     * Finds all achievements for a user in a given course and returns them as a set\n+     * @param userId\n+     * @param courseId\n+     * @return set of achievements\n+     */\n+    public Set<Achievement> findAllByUserIdAndCourseId(Long userId, Long courseId) {\n+        return achievementRepository.findAllByUserIdAndCourseId(userId, courseId);\n+    }\n+\n+    /**\n+     * Deletes all achievements that belong to the course with the given courseId\n+     * Used when a course is deleted or when achievements are disabled again for a course\n+     * @param courseId\n+     */\n+    public void deleteByCourseId(Long courseId) {\n+        Set<Achievement> achievements = achievementRepository.findAllByCourseId(courseId);\n+        for (Achievement achievement : achievements) {\n+            removeFromUsers(achievement);\n+        }\n+        achievementRepository.deleteAll(achievements);\n+    }\n+\n+    /**\n+     * Deletes all achievements that belong to the exercise with the given exerciseId\n+     * Used when an exercise is deleted\n+     * @param exerciseId\n+     */\n+    public void deleteByExerciseId(Long exerciseId) {\n+        Set<Achievement> achievements = achievementRepository.findAllByExerciseId(exerciseId);\n+        for (Achievement achievement : achievements) {\n+            removeFromUsers(achievement);\n+        }\n+        achievementRepository.deleteAll(achievements);\n+    }\n+\n+    /**\n+     * Removes an achievement from all users\n+     * @param achievement achievement to be deleted\n+     */\n+    public void removeFromUsers(Achievement achievement) {\n+        var users = achievement.getUsers();\n+        for (User user : users) {\n+            user.removeAchievement(achievement);\n+        }\n+        userRepository.saveAll(users);\n+    }\n+\n+    /**\n+     * Generates achievements for a course\n+     * Used when course is updated or created and achievements are enabled for course\n+     * @param course\n+     */\n+    public void generateForCourse(Course course) {\n+        progressBasedAchievementService.generateAchievements(course);\n+    }\n+\n+    /**\n+     * Generates achievements for an exercise\n+     * If achievements are enabled for corresponding course and exercise is not part of exam\n+     * Used when exercise is created\n+     * @param course\n+     * @param exercise\n+     */\n+    public void generateForExercise(Course course, Exercise exercise) {\n+        if (course.getHasAchievements() && (exercise.getExerciseGroup() == null || exercise.getExerciseGroup().getExam() == null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00ec5a4f4dc7f9eeeb161db5cd1c2f7e1a402c6b"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d35863fc9176959b6e549ea62985f2c3b5d2cef", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/9d35863fc9176959b6e549ea62985f2c3b5d2cef", "committedDate": "2020-10-07T07:44:56Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3198ffe7b3c8590c0745f00f6ef6cb27701301f5", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/3198ffe7b3c8590c0745f00f6ef6cb27701301f5", "committedDate": "2020-10-07T08:01:36Z", "message": "integrate review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjIyNDU4", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-503622458", "createdAt": "2020-10-07T08:05:57Z", "commit": {"oid": "3198ffe7b3c8590c0745f00f6ef6cb27701301f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjIzNjU1", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-503623655", "createdAt": "2020-10-07T08:07:28Z", "commit": {"oid": "3198ffe7b3c8590c0745f00f6ef6cb27701301f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjI0MDc1", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-503624075", "createdAt": "2020-10-07T08:07:59Z", "commit": {"oid": "3198ffe7b3c8590c0745f00f6ef6cb27701301f5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODowNzo1OVrOHdneYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODowNzo1OVrOHdneYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgxNzUwNA==", "bodyText": "Codacy found an issue: Missing a Javadoc comment.", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r500817504", "createdAt": "2020-10-07T08:07:59Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/AchievementIntegrationTest.java", "diffHunk": "@@ -0,0 +1,134 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.repository.CourseRepository;\n+import de.tum.in.www1.artemis.repository.ParticipationRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+import de.tum.in.www1.artemis.service.AchievementService;\n+import de.tum.in.www1.artemis.service.CourseService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class AchievementIntegrationTest extends AbstractSpringIntegrationBambooBitbucketJiraTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    AchievementService achievementService;\n+\n+    @Autowired\n+    CourseService courseService;\n+\n+    @Autowired\n+    UserRepository userRepository;\n+\n+    @Autowired\n+    AchievementRepository achievementRepository;\n+\n+    @Autowired\n+    CourseRepository courseRepository;\n+\n+    @Autowired\n+    ParticipationRepository participationRepository;\n+\n+    private User student;\n+\n+    private User instructor;\n+\n+    private Course firstCourse;\n+\n+    private Course secondCourse;\n+\n+    private Exercise firstExercise;\n+\n+    @BeforeEach\n+    public void initTestCase() {\n+        var users = database.addUsers(1, 0, 1);\n+        student = users.get(0);\n+        instructor = users.get(1);\n+        instructor.setGroups(new HashSet<>(Arrays.asList(\"instructor\")));\n+        firstCourse = database.addCourseWithModelingAndTextAndFileUploadExercise();\n+        firstCourse.setAchievementsEnabled(true);\n+        courseRepository.save(firstCourse);\n+        secondCourse = database.addCourseWithModelingAndTextAndFileUploadExercise();\n+        firstExercise = firstCourse.getExercises().stream().findFirst().get();\n+\n+        achievementService.generateForCourse(firstCourse);\n+        achievementService.generateForCourse(secondCourse);\n+        achievementService.generateForExercise(firstCourse, firstExercise);\n+    }\n+\n+    @AfterEach\n+    public void resetDatabase() {\n+        database.resetDatabase();\n+    }\n+\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3198ffe7b3c8590c0745f00f6ef6cb27701301f5"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjI0MDg3", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-503624087", "createdAt": "2020-10-07T08:07:59Z", "commit": {"oid": "3198ffe7b3c8590c0745f00f6ef6cb27701301f5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODowODowMFrOHdneZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODowODowMFrOHdneZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgxNzUxMA==", "bodyText": "Codacy found an issue: Missing a Javadoc comment.", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r500817510", "createdAt": "2020-10-07T08:08:00Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/AchievementIntegrationTest.java", "diffHunk": "@@ -0,0 +1,134 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.repository.CourseRepository;\n+import de.tum.in.www1.artemis.repository.ParticipationRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+import de.tum.in.www1.artemis.service.AchievementService;\n+import de.tum.in.www1.artemis.service.CourseService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class AchievementIntegrationTest extends AbstractSpringIntegrationBambooBitbucketJiraTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    AchievementService achievementService;\n+\n+    @Autowired\n+    CourseService courseService;\n+\n+    @Autowired\n+    UserRepository userRepository;\n+\n+    @Autowired\n+    AchievementRepository achievementRepository;\n+\n+    @Autowired\n+    CourseRepository courseRepository;\n+\n+    @Autowired\n+    ParticipationRepository participationRepository;\n+\n+    private User student;\n+\n+    private User instructor;\n+\n+    private Course firstCourse;\n+\n+    private Course secondCourse;\n+\n+    private Exercise firstExercise;\n+\n+    @BeforeEach", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3198ffe7b3c8590c0745f00f6ef6cb27701301f5"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjI0MDk2", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-503624096", "createdAt": "2020-10-07T08:08:00Z", "commit": {"oid": "3198ffe7b3c8590c0745f00f6ef6cb27701301f5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODowODowMFrOHdneaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODowODowMFrOHdneaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgxNzUxNQ==", "bodyText": "Codacy found an issue: Document empty constructor", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r500817515", "createdAt": "2020-10-07T08:08:00Z", "author": {"login": "artemis-bot"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package de.tum.in.www1.artemis.domain;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import javax.persistence.*;\n+\n+import org.hibernate.annotations.Cache;\n+import org.hibernate.annotations.CacheConcurrencyStrategy;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+\n+import de.tum.in.www1.artemis.domain.enumeration.AchievementRank;\n+import de.tum.in.www1.artemis.domain.enumeration.AchievementType;\n+\n+@Entity\n+@Table(name = \"achievement\")\n+@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+@JsonInclude(JsonInclude.Include.NON_EMPTY)\n+public class Achievement extends DomainObject {\n+\n+    @Column(name = \"title\")\n+    private String title;\n+\n+    @Column(name = \"description\")\n+    private String description;\n+\n+    @Column(name = \"icon\")\n+    private String icon;\n+\n+    @Enumerated(EnumType.STRING)\n+    @Column(name = \"achievement_rank\")\n+    private AchievementRank rank;\n+\n+    @Enumerated(EnumType.STRING)\n+    @Column(name = \"achievement_type\")\n+    private AchievementType type;\n+\n+    @ManyToOne\n+    private Course course;\n+\n+    @ManyToOne\n+    private Exercise exercise;\n+\n+    @ManyToMany(mappedBy = \"achievements\")\n+    @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+    @JsonIgnoreProperties(\"achievements\")\n+    private Set<User> users = new HashSet<>();\n+\n+    public Achievement() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3198ffe7b3c8590c0745f00f6ef6cb27701301f5"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjQzOTY0", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-503643964", "createdAt": "2020-10-07T08:32:08Z", "commit": {"oid": "3198ffe7b3c8590c0745f00f6ef6cb27701301f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjcxNzEy", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-503671712", "createdAt": "2020-10-07T09:05:05Z", "commit": {"oid": "3198ffe7b3c8590c0745f00f6ef6cb27701301f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzODgwMTAw", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-503880100", "createdAt": "2020-10-07T13:30:24Z", "commit": {"oid": "3198ffe7b3c8590c0745f00f6ef6cb27701301f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTA4MzMx", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-503908331", "createdAt": "2020-10-07T13:57:48Z", "commit": {"oid": "3198ffe7b3c8590c0745f00f6ef6cb27701301f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e27d529128c11ca6eeb50cb57571e51ebf71a143", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/e27d529128c11ca6eeb50cb57571e51ebf71a143", "committedDate": "2020-07-14T07:28:46Z", "message": "add achievement storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de275af916b062001911f88c8dc897ffdbb22c9d", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/de275af916b062001911f88c8dc897ffdbb22c9d", "committedDate": "2020-07-16T08:57:30Z", "message": "fix changelog format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "972e1efc3c4df2730ebc8238280545a9ee45e353", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/972e1efc3c4df2730ebc8238280545a9ee45e353", "committedDate": "2020-07-16T08:59:17Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e72eedfcdab9d9786820ce38d03336287518fbc2", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/e72eedfcdab9d9786820ce38d03336287518fbc2", "committedDate": "2020-07-19T10:23:41Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f260dd751faa52efff4c54c1167dfaae6718852", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/7f260dd751faa52efff4c54c1167dfaae6718852", "committedDate": "2020-07-19T13:00:10Z", "message": "minor fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f4a503e4c5c83936e2419bf86fc5eae4aca1ce2", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/9f4a503e4c5c83936e2419bf86fc5eae4aca1ce2", "committedDate": "2020-07-19T16:46:09Z", "message": "minor fixes part two"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a434a978449baa283f3b5f9a5a80b5256796c4d3", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/a434a978449baa283f3b5f9a5a80b5256796c4d3", "committedDate": "2020-07-19T16:53:00Z", "message": "remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e81f1aafb864610c78ab8628c32c0b2b16928fb4", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/e81f1aafb864610c78ab8628c32c0b2b16928fb4", "committedDate": "2020-07-20T09:00:20Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f553087c073b83e198e8b1d9f17b517af701e2e8", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/f553087c073b83e198e8b1d9f17b517af701e2e8", "committedDate": "2020-07-20T09:15:21Z", "message": "add asserts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e142509fc0288e4d413dd53adc4acea94c44feb", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/2e142509fc0288e4d413dd53adc4acea94c44feb", "committedDate": "2020-07-21T07:32:49Z", "message": "add checks for point based achievements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b03e23710fe205090894c5b483e18321c06b95e1", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/b03e23710fe205090894c5b483e18321c06b95e1", "committedDate": "2020-07-27T16:19:21Z", "message": "fix typo and return type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a815c7d375596a690b924c929f31a4cb29fe068", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/4a815c7d375596a690b924c929f31a4cb29fe068", "committedDate": "2020-08-11T08:19:53Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94d24706f578fef980af17371f2c62a85664e48b", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/94d24706f578fef980af17371f2c62a85664e48b", "committedDate": "2020-08-11T08:20:20Z", "message": "Merge branch 'develop' into feature/achievements/point-based-checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f24c127f441012f187c865ed3467f7f569f147dc", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/f24c127f441012f187c865ed3467f7f569f147dc", "committedDate": "2020-08-14T14:26:33Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDEyMjk5", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-468012299", "createdAt": "2020-08-15T19:09:44Z", "commit": {"oid": "f24c127f441012f187c865ed3467f7f569f147dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxOTowOTo0NFrOHBNE6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxOTowOTo0NFrOHBNE6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAyNDg3Mg==", "bodyText": "not sure, how we save icons to the database, but I think VARCHAR(45) is too less space\nIf you save the image data itself, I used to do that with blobs, but maybe a bigger VARCHAR will be sufficient. If this is this just a reference to icons from icon libraries we use or is it actually the image data?", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r471024872", "createdAt": "2020-08-15T19:09:44Z", "author": {"login": "TobiasPr"}, "path": "src/main/resources/config/liquibase/changelog/20200706223010_changelog.xml", "diffHunk": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazsczopf\" id=\"20200706223010\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"title\" type=\"VARCHAR(45)\"/>\n+            <column name=\"description\" type=\"VARCHAR(45)\"/>\n+            <column name=\"icon\" type=\"VARCHAR(45)\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f24c127f441012f187c865ed3467f7f569f147dc"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDEyNjAx", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-468012601", "createdAt": "2020-08-15T19:14:55Z", "commit": {"oid": "f24c127f441012f187c865ed3467f7f569f147dc"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2f96bfcb0065cbd61bb06aa9c2718a44691a63f", "author": {"user": {"login": "HanyaElhashemy", "name": "Hanya Elhashemy"}}, "url": "https://github.com/ls1intum/Artemis/commit/a2f96bfcb0065cbd61bb06aa9c2718a44691a63f", "committedDate": "2020-08-17T16:48:13Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd7af35f35cc660130e8fa4c003e003ef6969b12", "author": {"user": {"login": "HanyaElhashemy", "name": "Hanya Elhashemy"}}, "url": "https://github.com/ls1intum/Artemis/commit/dd7af35f35cc660130e8fa4c003e003ef6969b12", "committedDate": "2020-08-18T07:43:28Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5ODY2OTA2", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-469866906", "createdAt": "2020-08-18T22:13:45Z", "commit": {"oid": "dd7af35f35cc660130e8fa4c003e003ef6969b12"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMjoxMzo0NVrOHCohUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMjoxMzo0NVrOHCohUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjUyMzA4OA==", "bodyText": "This might be too small for a nice description?", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r472523088", "createdAt": "2020-08-18T22:13:45Z", "author": {"login": "kloessst"}, "path": "src/main/resources/config/liquibase/changelog/20200706223010_changelog.xml", "diffHunk": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazsczopf\" id=\"20200706223010\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"title\" type=\"VARCHAR(45)\"/>\n+            <column name=\"description\" type=\"VARCHAR(45)\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd7af35f35cc660130e8fa4c003e003ef6969b12"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ad60b8b22a558f8f65ace6e151e72d86269742a", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/1ad60b8b22a558f8f65ace6e151e72d86269742a", "committedDate": "2020-08-18T22:30:15Z", "message": "Update 20200706223010_changelog.xml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5ODc5Nzk3", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-469879797", "createdAt": "2020-08-18T22:44:12Z", "commit": {"oid": "1ad60b8b22a558f8f65ace6e151e72d86269742a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5ODgwMTQ5", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-469880149", "createdAt": "2020-08-18T22:45:04Z", "commit": {"oid": "1ad60b8b22a558f8f65ace6e151e72d86269742a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5OTEyMjM4", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-469912238", "createdAt": "2020-08-19T00:15:19Z", "commit": {"oid": "1ad60b8b22a558f8f65ace6e151e72d86269742a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMDoxNToxOVrOHCq7Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMDoxOTo1NVrOHCq__Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2MjQ1NA==", "bodyText": "AchievementEntity", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r472562454", "createdAt": "2020-08-19T00:15:19Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/AchievementRepository.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+\n+/**\n+ * Spring Data JPA repository for the StudentExam entity.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ad60b8b22a558f8f65ace6e151e72d86269742a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2MzU1OA==", "bodyText": "Why the 45 char limit?", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r472563558", "createdAt": "2020-08-19T00:19:27Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/resources/config/liquibase/changelog/20200706223010_changelog.xml", "diffHunk": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazsczopf\" id=\"20200706223010\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"title\" type=\"VARCHAR(45)\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ad60b8b22a558f8f65ace6e151e72d86269742a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2MzU2OA==", "bodyText": "Is 255 chars enough for the whole achievement description?", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r472563568", "createdAt": "2020-08-19T00:19:30Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/resources/config/liquibase/changelog/20200706223010_changelog.xml", "diffHunk": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazsczopf\" id=\"20200706223010\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"title\" type=\"VARCHAR(45)\"/>\n+            <column name=\"description\" type=\"VARCHAR(255)\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ad60b8b22a558f8f65ace6e151e72d86269742a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU2MzcwOQ==", "bodyText": "I do not quite get why this is a Varchar?", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r472563709", "createdAt": "2020-08-19T00:19:55Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/resources/config/liquibase/changelog/20200706223010_changelog.xml", "diffHunk": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazsczopf\" id=\"20200706223010\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"title\" type=\"VARCHAR(45)\"/>\n+            <column name=\"description\" type=\"VARCHAR(255)\"/>\n+            <column name=\"icon\" type=\"VARCHAR(45)\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ad60b8b22a558f8f65ace6e151e72d86269742a"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9f0edb87441d63c5ff8fe668b57b237f1cb4a38", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/e9f0edb87441d63c5ff8fe668b57b237f1cb4a38", "committedDate": "2020-08-19T09:55:22Z", "message": "correct comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMzI4NDYw", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-470328460", "createdAt": "2020-08-19T10:31:05Z", "commit": {"oid": "e9f0edb87441d63c5ff8fe668b57b237f1cb4a38"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4669dabb538cfe77d13a0e0edc864da34a50144", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/c4669dabb538cfe77d13a0e0edc864da34a50144", "committedDate": "2020-08-19T10:55:05Z", "message": "adjust testcases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMzgxNzE1", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-470381715", "createdAt": "2020-08-19T11:53:16Z", "commit": {"oid": "c4669dabb538cfe77d13a0e0edc864da34a50144"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99f2f6768169c7797b7d53bd74fd231ec3685038", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/99f2f6768169c7797b7d53bd74fd231ec3685038", "committedDate": "2020-08-19T16:05:59Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNzg3NDcz", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-470787473", "createdAt": "2020-08-19T19:42:58Z", "commit": {"oid": "99f2f6768169c7797b7d53bd74fd231ec3685038"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51c61b920c49e6c63f69756edd666884b9ca3cfa", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/51c61b920c49e6c63f69756edd666884b9ca3cfa", "committedDate": "2020-08-24T14:57:02Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d4e4cc13f97b0a0d4c004ab07a76cffbd07d762", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/3d4e4cc13f97b0a0d4c004ab07a76cffbd07d762", "committedDate": "2020-08-25T05:35:56Z", "message": "refactor according to feedback in issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MjM4MTA4", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-474238108", "createdAt": "2020-08-25T08:10:29Z", "commit": {"oid": "3d4e4cc13f97b0a0d4c004ab07a76cffbd07d762"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2432f78d48bc42ee32c0d5a5880ff7789cc6c130", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/2432f78d48bc42ee32c0d5a5880ff7789cc6c130", "committedDate": "2020-08-26T12:14:52Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f5da67987bcf3198dbf86886d0740d20a1ce945", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/8f5da67987bcf3198dbf86886d0740d20a1ce945", "committedDate": "2020-08-27T19:17:21Z", "message": "refactor tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dccee74bc806babfd462be86d5afa0f101b1aa8", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/0dccee74bc806babfd462be86d5afa0f101b1aa8", "committedDate": "2020-08-28T10:00:16Z", "message": "end world hunger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d920609e115d481728c31a12f249ff69af94e9d1", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/d920609e115d481728c31a12f249ff69af94e9d1", "committedDate": "2020-08-28T10:01:56Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7f4ee33c43213ef762c8ae5424e6064fa75cac9", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/c7f4ee33c43213ef762c8ae5424e6064fa75cac9", "committedDate": "2020-08-28T12:03:54Z", "message": "Update Achievement.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "003ca137e32c922818eb661ff973171ed13b2c1d", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/003ca137e32c922818eb661ff973171ed13b2c1d", "committedDate": "2020-08-28T12:04:12Z", "message": "Update Achievement.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "666dd0eafa4822ee94d5cc1866b97aa926a8ab1c", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/666dd0eafa4822ee94d5cc1866b97aa926a8ab1c", "committedDate": "2020-08-28T14:07:06Z", "message": "Update Achievement.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/198e5998d51d5103ab55075d2bee38be7a95c67d", "committedDate": "2020-08-28T14:07:23Z", "message": "Update Achievement.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTI2Mjg5", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-478126289", "createdAt": "2020-08-29T12:54:35Z", "commit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMjo1NDozNlrOHJbUtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMjo1NDozNlrOHJbUtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY0NjkwMw==", "bodyText": "I think we need here also getAllByUserIdAndCourseId as it can be that students are registered for several courses.", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r479646903", "createdAt": "2020-08-29T12:54:36Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/AchievementRepository.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.util.Set;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+\n+/**\n+ * Spring Data JPA repository for the Achievement entity.\n+ */\n+@Repository\n+public interface AchievementRepository extends JpaRepository<Achievement, Long> {\n+\n+    @Query(\"SELECT a FROM Achievement a WHERE a.course.id = :#{#courseId}\")\n+    Set<Achievement> getAllByCourseId(@Param(\"courseId\") Long courseId);\n+\n+    @Query(\"SELECT a FROM Achievement a JOIN a.users u WHERE u.id = :#{#userId}\")\n+    Set<Achievement> getAllByUserId(@Param(\"userId\") Long userId);\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTI2OTQ4", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-478126948", "createdAt": "2020-08-29T13:05:37Z", "commit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMzowNTozN1rOHJbY8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMzowNTozN1rOHJbY8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY0Nzk4NA==", "bodyText": "I would move that to AchievementResource.java", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r479647984", "createdAt": "2020-08-29T13:05:37Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/CourseResource.java", "diffHunk": "@@ -994,4 +982,18 @@ public void fetchParticipationsWithSubmissionsAndResultsForCourses(List<Course>\n             return forbidden();\n         }\n     }\n+\n+    /**\n+     * GET /courses/{courseId}/achievements : Get all achievements for course.\n+     *\n+     * @param courseId the course to which the achievements belong to\n+     * @return the ResponseEntity with status 200 (OK) and with the found achievements as body\n+     */\n+    @GetMapping(\"/courses/{courseId}/achievements\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTI3MTM3", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-478127137", "createdAt": "2020-08-29T13:09:16Z", "commit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMzowOToxNlrOHJbaBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMzowOToxNlrOHJbaBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY0ODI2Mg==", "bodyText": "Add REST call to delete achievements", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r479648262", "createdAt": "2020-08-29T13:09:16Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AchievementResource.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package de.tum.in.www1.artemis.web.rest;\n+\n+import java.util.Set;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.service.AchievementService;\n+import de.tum.in.www1.artemis.service.UserService;\n+\n+/**\n+ * REST controller for managing Achievements.\n+ */\n+@RestController\n+@RequestMapping(\"/api\")\n+public class AchievementResource {\n+\n+    private final Logger log = LoggerFactory.getLogger(AchievementResource.class);\n+\n+    private final AchievementService achievementService;\n+\n+    private final UserService userService;\n+\n+    public AchievementResource(AchievementService achievementService, UserService userService) {\n+        this.achievementService = achievementService;\n+        this.userService = userService;\n+    }\n+\n+    /**\n+     * GET /achievements : Get all achievements for user.\n+     *\n+     * @return the ResponseEntity with status 200 (OK) and with the found achievements as body\n+     */\n+    @GetMapping(\"/achievements\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Set<Achievement>> getAchievementsForUser() {\n+        User user = userService.getUser();\n+        log.debug(\"REST request to get achievements for user : {}\", user.getLogin());\n+        Set<Achievement> achievements = achievementService.findAllForUser(user.getId());\n+        return ResponseEntity.ok(achievements);\n+    }\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTI3Mjc0", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-478127274", "createdAt": "2020-08-29T13:12:22Z", "commit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMzoxMjoyMlrOHJbbJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMzoxMjoyMlrOHJbbJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY0ODU1MQ==", "bodyText": "Use delete REST call", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r479648551", "createdAt": "2020-08-29T13:12:22Z", "author": {"login": "fde312"}, "path": "src/test/java/de/tum/in/www1/artemis/AchievementIntegrationTest.java", "diffHunk": "@@ -0,0 +1,137 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.Set;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.repository.CourseRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+import de.tum.in.www1.artemis.service.AchievementService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class AchievementIntegrationTest extends AbstractSpringIntegrationBambooBitbucketJiraTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    AchievementService achievementService;\n+\n+    @Autowired\n+    AchievementRepository achievementRepository;\n+\n+    @Autowired\n+    UserRepository userRepository;\n+\n+    @Autowired\n+    CourseRepository courseRepository;\n+\n+    private User user;\n+\n+    private Course course;\n+\n+    private Achievement achievement;\n+\n+    @BeforeEach\n+    public void initTestCase() {\n+        user = database.addUsers(1, 0, 0).get(0);\n+        course = database.addEmptyCourse();\n+\n+        achievement = new Achievement();\n+        achievement.setId(1L);\n+        achievement.setTitle(\"Test Achievement\");\n+        achievement.setDescription(\"Create correct relations\");\n+        achievement.setIcon(\"\");\n+        achievement.setRank(1);\n+        achievement.setCourse(course);\n+\n+        achievement = achievementRepository.save(achievement);\n+    }\n+\n+    @AfterEach\n+    public void resetDatabase() {\n+        database.resetDatabase();\n+    }\n+\n+    @Test\n+    public void testManyToManyRelationToUser() {\n+        assertThat(user.getAchievements().size()).isEqualTo(0).as(\"Number of achievements for user should be 0\");\n+\n+        user.addAchievement(achievement);\n+        assertThat(user.getAchievements().size()).isEqualTo(1).as(\"Number of achievements for user should be 1\");\n+        assertThat(user.getAchievements().contains(achievement)).isTrue().as(\"User has correct achievement\");\n+        assertThat(achievement.getUsers().size()).isEqualTo(1).as(\"Number of users for achievement should be 1\");\n+        assertThat(achievement.getUsers().contains(user)).isTrue().as(\"Achievement has correct user\");\n+\n+        user.removeAchievement(achievement);\n+        assertThat(user.getAchievements().size()).isEqualTo(0).as(\"Number of achievements for user should be 0\");\n+        assertThat(user.getAchievements().contains(achievement)).isFalse().as(\"User does not have removed achievement\");\n+        assertThat(achievement.getUsers().size()).isEqualTo(0).as(\"Number of users for achievement should be 0\");\n+        assertThat(achievement.getUsers().contains(user)).isFalse().as(\"Achievement does not have incorrect user\");\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"student1\", roles = \"USER\")\n+    public void testManyToManyRelationToUserRepository() throws Exception {\n+        user.addAchievement(achievement);\n+        user = userRepository.save(user);\n+\n+        var achievements = request.get(\"/api/achievements\", HttpStatus.OK, Set.class);\n+        assertThat(achievements.size()).isEqualTo(1).as(\"Number of achievements for user should be 1\");\n+\n+        userRepository.delete(user);\n+        assertThat(achievementRepository.findAll().contains(achievement)).isTrue().as(\"Achievement does not get deleted if user does\");\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"student1\", roles = \"USER\")\n+    public void testManyToOneRelationToCourseRepository() throws Exception {\n+        var achievements = request.get(\"/api/courses/\" + course.getId() + \"/achievements\", HttpStatus.OK, Set.class);\n+        assertThat(achievements.size()).isEqualTo(1).as(\"Number of achievements for course should be 1\");\n+\n+        courseRepository.delete(course);\n+        assertThat(achievementRepository.findAll().contains(achievement)).isFalse().as(\"Achievement gets deleted if course does\");\n+    }\n+\n+    @Test\n+    public void testUpdateAchievement() {\n+        user.addAchievement(achievement);\n+        userRepository.save(user);\n+        var achievementToUpdate = achievementRepository.findById(achievement.getId());\n+        if (achievementToUpdate.isPresent()) {\n+            achievementToUpdate.get().setDescription(\"Updated achievement\");\n+            achievementRepository.save(achievementToUpdate.get());\n+            assertThat(achievementRepository.findById(achievement.getId()).get()).isEqualTo(achievementToUpdate.get()).as(\"Achievement is updated correctly\");\n+        }\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"student1\", roles = \"USER\")\n+    public void testDeleteAchievement() {\n+        user.addAchievement(achievement);\n+        user = userRepository.save(user);\n+        achievement = achievementRepository.save(achievement);\n+        achievementService.delete(achievement);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d"}, "originalPosition": 129}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTI3NjE2", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-478127616", "createdAt": "2020-08-29T13:17:19Z", "commit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMzoxNzoxOVrOHJbczQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMzoxNzoxOVrOHJbczQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY0ODk3Mw==", "bodyText": "I think this test will be also successful even though the achievementToUpdate.isPresent() is false as the assert is in the if statement", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r479648973", "createdAt": "2020-08-29T13:17:19Z", "author": {"login": "fde312"}, "path": "src/test/java/de/tum/in/www1/artemis/AchievementIntegrationTest.java", "diffHunk": "@@ -0,0 +1,137 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.Set;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.repository.CourseRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+import de.tum.in.www1.artemis.service.AchievementService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class AchievementIntegrationTest extends AbstractSpringIntegrationBambooBitbucketJiraTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    AchievementService achievementService;\n+\n+    @Autowired\n+    AchievementRepository achievementRepository;\n+\n+    @Autowired\n+    UserRepository userRepository;\n+\n+    @Autowired\n+    CourseRepository courseRepository;\n+\n+    private User user;\n+\n+    private Course course;\n+\n+    private Achievement achievement;\n+\n+    @BeforeEach\n+    public void initTestCase() {\n+        user = database.addUsers(1, 0, 0).get(0);\n+        course = database.addEmptyCourse();\n+\n+        achievement = new Achievement();\n+        achievement.setId(1L);\n+        achievement.setTitle(\"Test Achievement\");\n+        achievement.setDescription(\"Create correct relations\");\n+        achievement.setIcon(\"\");\n+        achievement.setRank(1);\n+        achievement.setCourse(course);\n+\n+        achievement = achievementRepository.save(achievement);\n+    }\n+\n+    @AfterEach\n+    public void resetDatabase() {\n+        database.resetDatabase();\n+    }\n+\n+    @Test\n+    public void testManyToManyRelationToUser() {\n+        assertThat(user.getAchievements().size()).isEqualTo(0).as(\"Number of achievements for user should be 0\");\n+\n+        user.addAchievement(achievement);\n+        assertThat(user.getAchievements().size()).isEqualTo(1).as(\"Number of achievements for user should be 1\");\n+        assertThat(user.getAchievements().contains(achievement)).isTrue().as(\"User has correct achievement\");\n+        assertThat(achievement.getUsers().size()).isEqualTo(1).as(\"Number of users for achievement should be 1\");\n+        assertThat(achievement.getUsers().contains(user)).isTrue().as(\"Achievement has correct user\");\n+\n+        user.removeAchievement(achievement);\n+        assertThat(user.getAchievements().size()).isEqualTo(0).as(\"Number of achievements for user should be 0\");\n+        assertThat(user.getAchievements().contains(achievement)).isFalse().as(\"User does not have removed achievement\");\n+        assertThat(achievement.getUsers().size()).isEqualTo(0).as(\"Number of users for achievement should be 0\");\n+        assertThat(achievement.getUsers().contains(user)).isFalse().as(\"Achievement does not have incorrect user\");\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"student1\", roles = \"USER\")\n+    public void testManyToManyRelationToUserRepository() throws Exception {\n+        user.addAchievement(achievement);\n+        user = userRepository.save(user);\n+\n+        var achievements = request.get(\"/api/achievements\", HttpStatus.OK, Set.class);\n+        assertThat(achievements.size()).isEqualTo(1).as(\"Number of achievements for user should be 1\");\n+\n+        userRepository.delete(user);\n+        assertThat(achievementRepository.findAll().contains(achievement)).isTrue().as(\"Achievement does not get deleted if user does\");\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"student1\", roles = \"USER\")\n+    public void testManyToOneRelationToCourseRepository() throws Exception {\n+        var achievements = request.get(\"/api/courses/\" + course.getId() + \"/achievements\", HttpStatus.OK, Set.class);\n+        assertThat(achievements.size()).isEqualTo(1).as(\"Number of achievements for course should be 1\");\n+\n+        courseRepository.delete(course);\n+        assertThat(achievementRepository.findAll().contains(achievement)).isFalse().as(\"Achievement gets deleted if course does\");\n+    }\n+\n+    @Test\n+    public void testUpdateAchievement() {\n+        user.addAchievement(achievement);\n+        userRepository.save(user);\n+        var achievementToUpdate = achievementRepository.findById(achievement.getId());\n+        if (achievementToUpdate.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTI3ODMx", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-478127831", "createdAt": "2020-08-29T13:21:17Z", "commit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMzoyMToxN1rOHJbeCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMzoyMToxN1rOHJbeCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY0OTI5MA==", "bodyText": "You could use here the create REST Call instead and for the above lines (same for tests below)", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r479649290", "createdAt": "2020-08-29T13:21:17Z", "author": {"login": "fde312"}, "path": "src/test/java/de/tum/in/www1/artemis/AchievementIntegrationTest.java", "diffHunk": "@@ -0,0 +1,137 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.Set;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.repository.CourseRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+import de.tum.in.www1.artemis.service.AchievementService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class AchievementIntegrationTest extends AbstractSpringIntegrationBambooBitbucketJiraTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    AchievementService achievementService;\n+\n+    @Autowired\n+    AchievementRepository achievementRepository;\n+\n+    @Autowired\n+    UserRepository userRepository;\n+\n+    @Autowired\n+    CourseRepository courseRepository;\n+\n+    private User user;\n+\n+    private Course course;\n+\n+    private Achievement achievement;\n+\n+    @BeforeEach\n+    public void initTestCase() {\n+        user = database.addUsers(1, 0, 0).get(0);\n+        course = database.addEmptyCourse();\n+\n+        achievement = new Achievement();\n+        achievement.setId(1L);\n+        achievement.setTitle(\"Test Achievement\");\n+        achievement.setDescription(\"Create correct relations\");\n+        achievement.setIcon(\"\");\n+        achievement.setRank(1);\n+        achievement.setCourse(course);\n+\n+        achievement = achievementRepository.save(achievement);\n+    }\n+\n+    @AfterEach\n+    public void resetDatabase() {\n+        database.resetDatabase();\n+    }\n+\n+    @Test\n+    public void testManyToManyRelationToUser() {\n+        assertThat(user.getAchievements().size()).isEqualTo(0).as(\"Number of achievements for user should be 0\");\n+\n+        user.addAchievement(achievement);\n+        assertThat(user.getAchievements().size()).isEqualTo(1).as(\"Number of achievements for user should be 1\");\n+        assertThat(user.getAchievements().contains(achievement)).isTrue().as(\"User has correct achievement\");\n+        assertThat(achievement.getUsers().size()).isEqualTo(1).as(\"Number of users for achievement should be 1\");\n+        assertThat(achievement.getUsers().contains(user)).isTrue().as(\"Achievement has correct user\");\n+\n+        user.removeAchievement(achievement);\n+        assertThat(user.getAchievements().size()).isEqualTo(0).as(\"Number of achievements for user should be 0\");\n+        assertThat(user.getAchievements().contains(achievement)).isFalse().as(\"User does not have removed achievement\");\n+        assertThat(achievement.getUsers().size()).isEqualTo(0).as(\"Number of users for achievement should be 0\");\n+        assertThat(achievement.getUsers().contains(user)).isFalse().as(\"Achievement does not have incorrect user\");\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"student1\", roles = \"USER\")\n+    public void testManyToManyRelationToUserRepository() throws Exception {\n+        user.addAchievement(achievement);\n+        user = userRepository.save(user);\n+\n+        var achievements = request.get(\"/api/achievements\", HttpStatus.OK, Set.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTI3OTI4", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-478127928", "createdAt": "2020-08-29T13:22:52Z", "commit": {"oid": "198e5998d51d5103ab55075d2bee38be7a95c67d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "669ba95aca108519bc3499ee88a04461aaa1f1b6", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/669ba95aca108519bc3499ee88a04461aaa1f1b6", "committedDate": "2020-08-30T11:45:23Z", "message": "integrate feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3233af82374e6b412cee00ab670bf23f05769c11", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/3233af82374e6b412cee00ab670bf23f05769c11", "committedDate": "2020-08-30T11:46:11Z", "message": "Merge branch 'feature/achievements/storage' of https://github.com/ls1intum/Artemis into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9df40089b21ad7551313f5b19e32f3fd5e632a4f", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/9df40089b21ad7551313f5b19e32f3fd5e632a4f", "committedDate": "2020-08-30T11:47:17Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d79fe9f4e5d9b3656047b7dc9c1cc7c52379f9d2", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/d79fe9f4e5d9b3656047b7dc9c1cc7c52379f9d2", "committedDate": "2020-08-30T13:25:01Z", "message": "fix missing parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84ce3abcc1059d698df86587b1e2a400cbc7b05c", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/84ce3abcc1059d698df86587b1e2a400cbc7b05c", "committedDate": "2020-08-30T13:53:02Z", "message": "fix URI and roles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec718eb715f9773b914d77078e2cf8ec6e0c61b1", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/ec718eb715f9773b914d77078e2cf8ec6e0c61b1", "committedDate": "2020-08-30T14:02:41Z", "message": "fix java codestyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "497e3316832c66677399172c3bc6bd223073c1b2", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/497e3316832c66677399172c3bc6bd223073c1b2", "committedDate": "2020-08-30T17:00:27Z", "message": "fix failing tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MjMxMjI0", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-478231224", "createdAt": "2020-08-30T20:16:30Z", "commit": {"oid": "669ba95aca108519bc3499ee88a04461aaa1f1b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMDoxNjozMFrOHJlWRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMDoxNjozMFrOHJlWRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgxMTE0MQ==", "bodyText": "The variable name result is here a bit misleading (as we have a Result class). I would use response, achievementResponse or just achievement", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r479811141", "createdAt": "2020-08-30T20:16:30Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AchievementResource.java", "diffHunk": "@@ -47,4 +65,52 @@ public AchievementResource(AchievementService achievementService, UserService us\n         return ResponseEntity.ok(achievements);\n     }\n \n+    /**\n+     * PUT /achievements : Updates an existing achievement.\n+     *\n+     * @param achievement the achievement to update\n+     * @return the ResponseEntity with status 200 (OK) and with body the updated achievement, or with status 500\n+     *         (Internal Server Error) if the achievement couldn't be updated\n+     * @throws URISyntaxException if the Location URI syntax is incorrect\n+     */\n+    @PutMapping(\"/achievements\")\n+    @PreAuthorize(\"hasAnyRole('INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Achievement> updateAchievement(@RequestBody Achievement achievement) throws URISyntaxException {\n+        log.debug(\"REST request to update Achievement : {}\", achievement);\n+\n+        Course course = achievement.getCourse();\n+        User user = userService.getUserWithGroupsAndAuthorities();\n+        if (!authCheckService.isAtLeastInstructorInCourse(course, user)) {\n+            throw new AccessForbiddenException(\"You are not allowed to access this resource\");\n+        }\n+\n+        if (achievement.getId() == null) {\n+            return ResponseEntity.badRequest().build();\n+        }\n+\n+        Achievement result = achievementRepository.save(achievement);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "669ba95aca108519bc3499ee88a04461aaa1f1b6"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MjMxNDQ4", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-478231448", "createdAt": "2020-08-30T20:20:53Z", "commit": {"oid": "497e3316832c66677399172c3bc6bd223073c1b2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMDoyMDo1M1rOHJlXpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMDoyMDo1M1rOHJlXpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgxMTQ5Mg==", "bodyText": "Why did you add here and below @Transactional?", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r479811492", "createdAt": "2020-08-30T20:20:53Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AchievementService.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+\n+@Service\n+public class AchievementService {\n+\n+    private final AchievementRepository achievementRepository;\n+\n+    private final UserRepository userRepository;\n+\n+    public AchievementService(AchievementRepository achievementRepository, UserRepository userRepository) {\n+        this.achievementRepository = achievementRepository;\n+        this.userRepository = userRepository;\n+    }\n+\n+    public Optional<Achievement> findById(Long achievementId) {\n+        return achievementRepository.findById(achievementId);\n+    }\n+\n+    @Transactional\n+    public Set<Achievement> findAllForCourse(Long courseId, Long userId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "497e3316832c66677399172c3bc6bd223073c1b2"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MjMxNTg3", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-478231587", "createdAt": "2020-08-30T20:22:55Z", "commit": {"oid": "497e3316832c66677399172c3bc6bd223073c1b2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMDoyMjo1NVrOHJlYbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQyMDoyMjo1NVrOHJlYbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgxMTY5Mg==", "bodyText": "I think you can leave out the @Transactional above when you persist here the achievements into the database.", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r479811692", "createdAt": "2020-08-30T20:22:55Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AchievementService.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+\n+@Service\n+public class AchievementService {\n+\n+    private final AchievementRepository achievementRepository;\n+\n+    private final UserRepository userRepository;\n+\n+    public AchievementService(AchievementRepository achievementRepository, UserRepository userRepository) {\n+        this.achievementRepository = achievementRepository;\n+        this.userRepository = userRepository;\n+    }\n+\n+    public Optional<Achievement> findById(Long achievementId) {\n+        return achievementRepository.findById(achievementId);\n+    }\n+\n+    @Transactional\n+    public Set<Achievement> findAllForCourse(Long courseId, Long userId) {\n+        var achievements = achievementRepository.getAllByCourseId(courseId);\n+        return hideUsersInAchievements(achievements, userId);\n+    }\n+\n+    @Transactional\n+    public Set<Achievement> findAllForUser(Long userId) {\n+        var achievements = achievementRepository.getAllByUserId(userId);\n+        return hideUsersInAchievements(achievements, userId);\n+    }\n+\n+    public void delete(Achievement achievement) {\n+        for (User user : achievement.getUsers()) {\n+            user.removeAchievement(achievement);\n+            userRepository.save(user);\n+        }\n+        achievementRepository.delete(achievement);\n+    }\n+\n+    private Set<Achievement> hideUsersInAchievements(Set<Achievement> achievements, Long userId) {\n+        for (Achievement achievement : achievements) {\n+            achievement.getUsers().removeIf(userToRemove -> !userToRemove.getId().equals(userId));\n+        }\n+        return achievements;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "497e3316832c66677399172c3bc6bd223073c1b2"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07837b56882d0df7027dd1422c761e34f89147f1", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/07837b56882d0df7027dd1422c761e34f89147f1", "committedDate": "2020-08-30T20:34:54Z", "message": "update variable name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0bc01d15b7e677a36aa71c0319f71bb6ed7a885", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/f0bc01d15b7e677a36aa71c0319f71bb6ed7a885", "committedDate": "2020-08-30T22:23:52Z", "message": "few fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbe0fa5d020deb1872587771311cf95735d6fbeb", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/cbe0fa5d020deb1872587771311cf95735d6fbeb", "committedDate": "2020-08-30T22:25:53Z", "message": "Merge branch 'feature/achievements/storage' of https://github.com/ls1intum/Artemis into feature/achievements/storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1882f801a065a93bf07972cc6cbca1f623579186", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/1882f801a065a93bf07972cc6cbca1f623579186", "committedDate": "2020-08-30T22:30:32Z", "message": "fix wrong variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31966613a4ee4179be8f16688ef84aa51272e675", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/31966613a4ee4179be8f16688ef84aa51272e675", "committedDate": "2020-08-30T22:59:23Z", "message": "add documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a890b63c2cf16cf422548fe9d20849d71967bcd", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/5a890b63c2cf16cf422548fe9d20849d71967bcd", "committedDate": "2020-08-31T09:16:58Z", "message": "trigger new build 1/2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1631126ec91b00529db9044aca65d2b9eae6e1d1", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/1631126ec91b00529db9044aca65d2b9eae6e1d1", "committedDate": "2020-08-31T09:17:31Z", "message": "trigger new build 2/2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4ODYyMDQ2", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-478862046", "createdAt": "2020-08-31T18:55:33Z", "commit": {"oid": "1631126ec91b00529db9044aca65d2b9eae6e1d1"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxODo1NTozNFrOHKEruA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxOTowNDo0MVrOHKE-yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMyNDUzNg==", "bodyText": "Is there no better way to check if a user is logged in? If roles change in the future, they would need to be adjusted here as well.", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480324536", "createdAt": "2020-08-31T18:55:34Z", "author": {"login": "linusmichel"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AchievementResource.java", "diffHunk": "@@ -0,0 +1,130 @@\n+package de.tum.in.www1.artemis.web.rest;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.web.bind.annotation.*;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.service.AchievementService;\n+import de.tum.in.www1.artemis.service.AuthorizationCheckService;\n+import de.tum.in.www1.artemis.service.UserService;\n+import de.tum.in.www1.artemis.web.rest.errors.AccessForbiddenException;\n+import de.tum.in.www1.artemis.web.rest.util.HeaderUtil;\n+\n+/**\n+ * REST controller for managing Achievements.\n+ */\n+@RestController\n+@RequestMapping(\"/api\")\n+public class AchievementResource {\n+\n+    private static final String ENTITY_NAME = \"achievement\";\n+\n+    @Value(\"${jhipster.clientApp.name}\")\n+    private String applicationName;\n+\n+    private final Logger log = LoggerFactory.getLogger(AchievementResource.class);\n+\n+    private final AuthorizationCheckService authCheckService;\n+\n+    private final AchievementService achievementService;\n+\n+    private final UserService userService;\n+\n+    private final AchievementRepository achievementRepository;\n+\n+    public AchievementResource(AuthorizationCheckService authCheckService, AchievementService achievementService, UserService userService,\n+            AchievementRepository achievementRepository) {\n+        this.authCheckService = authCheckService;\n+        this.achievementService = achievementService;\n+        this.userService = userService;\n+        this.achievementRepository = achievementRepository;\n+    }\n+\n+    /**\n+     * GET /achievements : Get all achievements for user.\n+     *\n+     * @return the ResponseEntity with status 200 (OK) and with the found achievements as body\n+     */\n+    @GetMapping(\"/achievements\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1631126ec91b00529db9044aca65d2b9eae6e1d1"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMyNDc1OQ==", "bodyText": "Is there no better way to check if a user is logged in? If roles change in the future, they would need to be adjusted here as well.", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480324759", "createdAt": "2020-08-31T18:55:53Z", "author": {"login": "linusmichel"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AchievementResource.java", "diffHunk": "@@ -0,0 +1,130 @@\n+package de.tum.in.www1.artemis.web.rest;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.web.bind.annotation.*;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.service.AchievementService;\n+import de.tum.in.www1.artemis.service.AuthorizationCheckService;\n+import de.tum.in.www1.artemis.service.UserService;\n+import de.tum.in.www1.artemis.web.rest.errors.AccessForbiddenException;\n+import de.tum.in.www1.artemis.web.rest.util.HeaderUtil;\n+\n+/**\n+ * REST controller for managing Achievements.\n+ */\n+@RestController\n+@RequestMapping(\"/api\")\n+public class AchievementResource {\n+\n+    private static final String ENTITY_NAME = \"achievement\";\n+\n+    @Value(\"${jhipster.clientApp.name}\")\n+    private String applicationName;\n+\n+    private final Logger log = LoggerFactory.getLogger(AchievementResource.class);\n+\n+    private final AuthorizationCheckService authCheckService;\n+\n+    private final AchievementService achievementService;\n+\n+    private final UserService userService;\n+\n+    private final AchievementRepository achievementRepository;\n+\n+    public AchievementResource(AuthorizationCheckService authCheckService, AchievementService achievementService, UserService userService,\n+            AchievementRepository achievementRepository) {\n+        this.authCheckService = authCheckService;\n+        this.achievementService = achievementService;\n+        this.userService = userService;\n+        this.achievementRepository = achievementRepository;\n+    }\n+\n+    /**\n+     * GET /achievements : Get all achievements for user.\n+     *\n+     * @return the ResponseEntity with status 200 (OK) and with the found achievements as body\n+     */\n+    @GetMapping(\"/achievements\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Set<Achievement>> getAchievementsForUser() {\n+        User user = userService.getUser();\n+        log.debug(\"REST request to get achievements for user : {}\", user.getLogin());\n+        Set<Achievement> achievements = achievementService.findAllForUser(user.getId());\n+        return ResponseEntity.ok(achievements);\n+    }\n+\n+    /**\n+     * GET /courses/{courseId}/achievements : Get all achievements for course.\n+     *\n+     * @param courseId the course to which the achievements belong to\n+     * @return the ResponseEntity with status 200 (OK) and with the found achievements as body\n+     */\n+    @GetMapping(\"/courses/{courseId}/achievements\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1631126ec91b00529db9044aca65d2b9eae6e1d1"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMyNjQ1OA==", "bodyText": "Is there a chance of some sensitive data coming along with achievements? In this case, I guess we would need to check for the user access rights for the course first.", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480326458", "createdAt": "2020-08-31T18:58:53Z", "author": {"login": "linusmichel"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AchievementResource.java", "diffHunk": "@@ -0,0 +1,130 @@\n+package de.tum.in.www1.artemis.web.rest;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.web.bind.annotation.*;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.service.AchievementService;\n+import de.tum.in.www1.artemis.service.AuthorizationCheckService;\n+import de.tum.in.www1.artemis.service.UserService;\n+import de.tum.in.www1.artemis.web.rest.errors.AccessForbiddenException;\n+import de.tum.in.www1.artemis.web.rest.util.HeaderUtil;\n+\n+/**\n+ * REST controller for managing Achievements.\n+ */\n+@RestController\n+@RequestMapping(\"/api\")\n+public class AchievementResource {\n+\n+    private static final String ENTITY_NAME = \"achievement\";\n+\n+    @Value(\"${jhipster.clientApp.name}\")\n+    private String applicationName;\n+\n+    private final Logger log = LoggerFactory.getLogger(AchievementResource.class);\n+\n+    private final AuthorizationCheckService authCheckService;\n+\n+    private final AchievementService achievementService;\n+\n+    private final UserService userService;\n+\n+    private final AchievementRepository achievementRepository;\n+\n+    public AchievementResource(AuthorizationCheckService authCheckService, AchievementService achievementService, UserService userService,\n+            AchievementRepository achievementRepository) {\n+        this.authCheckService = authCheckService;\n+        this.achievementService = achievementService;\n+        this.userService = userService;\n+        this.achievementRepository = achievementRepository;\n+    }\n+\n+    /**\n+     * GET /achievements : Get all achievements for user.\n+     *\n+     * @return the ResponseEntity with status 200 (OK) and with the found achievements as body\n+     */\n+    @GetMapping(\"/achievements\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Set<Achievement>> getAchievementsForUser() {\n+        User user = userService.getUser();\n+        log.debug(\"REST request to get achievements for user : {}\", user.getLogin());\n+        Set<Achievement> achievements = achievementService.findAllForUser(user.getId());\n+        return ResponseEntity.ok(achievements);\n+    }\n+\n+    /**\n+     * GET /courses/{courseId}/achievements : Get all achievements for course.\n+     *\n+     * @param courseId the course to which the achievements belong to\n+     * @return the ResponseEntity with status 200 (OK) and with the found achievements as body\n+     */\n+    @GetMapping(\"/courses/{courseId}/achievements\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Set<Achievement>> getAchievementsForCourse(@PathVariable Long courseId) {\n+        log.debug(\"REST request to get achievements for course : {}\", courseId);\n+        Set<Achievement> achievements = achievementService.findAllForCourse(courseId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1631126ec91b00529db9044aca65d2b9eae6e1d1"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMyOTQxOA==", "bodyText": "I would move this check to the method start", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480329418", "createdAt": "2020-08-31T19:04:41Z", "author": {"login": "linusmichel"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AchievementResource.java", "diffHunk": "@@ -0,0 +1,130 @@\n+package de.tum.in.www1.artemis.web.rest;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.web.bind.annotation.*;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.service.AchievementService;\n+import de.tum.in.www1.artemis.service.AuthorizationCheckService;\n+import de.tum.in.www1.artemis.service.UserService;\n+import de.tum.in.www1.artemis.web.rest.errors.AccessForbiddenException;\n+import de.tum.in.www1.artemis.web.rest.util.HeaderUtil;\n+\n+/**\n+ * REST controller for managing Achievements.\n+ */\n+@RestController\n+@RequestMapping(\"/api\")\n+public class AchievementResource {\n+\n+    private static final String ENTITY_NAME = \"achievement\";\n+\n+    @Value(\"${jhipster.clientApp.name}\")\n+    private String applicationName;\n+\n+    private final Logger log = LoggerFactory.getLogger(AchievementResource.class);\n+\n+    private final AuthorizationCheckService authCheckService;\n+\n+    private final AchievementService achievementService;\n+\n+    private final UserService userService;\n+\n+    private final AchievementRepository achievementRepository;\n+\n+    public AchievementResource(AuthorizationCheckService authCheckService, AchievementService achievementService, UserService userService,\n+            AchievementRepository achievementRepository) {\n+        this.authCheckService = authCheckService;\n+        this.achievementService = achievementService;\n+        this.userService = userService;\n+        this.achievementRepository = achievementRepository;\n+    }\n+\n+    /**\n+     * GET /achievements : Get all achievements for user.\n+     *\n+     * @return the ResponseEntity with status 200 (OK) and with the found achievements as body\n+     */\n+    @GetMapping(\"/achievements\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Set<Achievement>> getAchievementsForUser() {\n+        User user = userService.getUser();\n+        log.debug(\"REST request to get achievements for user : {}\", user.getLogin());\n+        Set<Achievement> achievements = achievementService.findAllForUser(user.getId());\n+        return ResponseEntity.ok(achievements);\n+    }\n+\n+    /**\n+     * GET /courses/{courseId}/achievements : Get all achievements for course.\n+     *\n+     * @param courseId the course to which the achievements belong to\n+     * @return the ResponseEntity with status 200 (OK) and with the found achievements as body\n+     */\n+    @GetMapping(\"/courses/{courseId}/achievements\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Set<Achievement>> getAchievementsForCourse(@PathVariable Long courseId) {\n+        log.debug(\"REST request to get achievements for course : {}\", courseId);\n+        Set<Achievement> achievements = achievementService.findAllForCourse(courseId);\n+        return ResponseEntity.ok(achievements);\n+    }\n+\n+    /**\n+     * PUT /achievements : Updates an existing achievement.\n+     *\n+     * @param achievement the achievement to update\n+     * @return the ResponseEntity with status 200 (OK) and with body the updated achievement, or with status 500\n+     *         (Internal Server Error) if the achievement couldn't be updated\n+     */\n+    @PutMapping(\"/achievements\")\n+    @PreAuthorize(\"hasAnyRole('INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Achievement> updateAchievement(@RequestBody Achievement achievement) {\n+        log.debug(\"REST request to update Achievement : {}\", achievement);\n+\n+        Course course = achievement.getCourse();\n+        User user = userService.getUserWithGroupsAndAuthorities();\n+        if (!authCheckService.isAtLeastInstructorInCourse(course, user)) {\n+            throw new AccessForbiddenException(\"You are not allowed to access this resource\");\n+        }\n+\n+        if (achievement.getId() == null) {\n+            return ResponseEntity.badRequest().build();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1631126ec91b00529db9044aca65d2b9eae6e1d1"}, "originalPosition": 102}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e040450690f9f7b8962366e1d892df304682c95", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/8e040450690f9f7b8962366e1d892df304682c95", "committedDate": "2020-08-31T19:55:47Z", "message": "move check in function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b07582a02ee19947182bc0e8c8d434041dc35755", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/b07582a02ee19947182bc0e8c8d434041dc35755", "committedDate": "2020-08-31T19:59:14Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4OTIyMjYx", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-478922261", "createdAt": "2020-08-31T20:14:46Z", "commit": {"oid": "b07582a02ee19947182bc0e8c8d434041dc35755"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0616ac4ef001698a1e962c595c2ceecc0eb76dd0", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/0616ac4ef001698a1e962c595c2ceecc0eb76dd0", "committedDate": "2020-08-31T21:25:54Z", "message": "get 100 percent test coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45dac20bf2cd9e41c1e6ff21336a2849962b462e", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/45dac20bf2cd9e41c1e6ff21336a2849962b462e", "committedDate": "2020-08-31T22:03:36Z", "message": "tiny fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11b272cd28a879d99eefff297aec8bf6d3f4748c", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/11b272cd28a879d99eefff297aec8bf6d3f4748c", "committedDate": "2020-08-31T23:26:18Z", "message": "remove unnecessary eager"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5MDk5NTM1", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479099535", "createdAt": "2020-08-31T23:58:43Z", "commit": {"oid": "11b272cd28a879d99eefff297aec8bf6d3f4748c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzo1ODo0NFrOHKOM_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMDoyNzo1NVrOHKPKvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MDUxMQ==", "bodyText": "Double check if this is correct: https://docs.jboss.org/hibernate/orm/current/userguide/html_single/Hibernate_User_Guide.html#pc-cascade-on-delete. Sounds to me like this is only for auto generated schemas. We also never use this in Artemis at the moment", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480480511", "createdAt": "2020-08-31T23:58:44Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package de.tum.in.www1.artemis.domain;\n+\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.persistence.*;\n+\n+import org.hibernate.annotations.Cache;\n+import org.hibernate.annotations.CacheConcurrencyStrategy;\n+import org.hibernate.annotations.OnDelete;\n+import org.hibernate.annotations.OnDeleteAction;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+\n+@Entity\n+@Table(name = \"achievement\")\n+@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+@JsonInclude(JsonInclude.Include.NON_EMPTY)\n+public class Achievement implements Serializable {\n+\n+    @Id\n+    @Column(name = \"id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"title\")\n+    private String title;\n+\n+    @Column(name = \"description\")\n+    private String description;\n+\n+    @Column(name = \"icon\")\n+    private String icon;\n+\n+    @Column(name = \"rank\")\n+    private Integer rank;\n+\n+    @ManyToOne\n+    @OnDelete(action = OnDeleteAction.CASCADE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11b272cd28a879d99eefff297aec8bf6d3f4748c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ5NTM3OQ==", "bodyText": "I'd rather use an enum here to standardize the ranks across the system. For example AchievementRanks with PLATIN, GOLD, SILVER, BRONZE. Then you can easily couple these values with your achievement definitions.", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480495379", "createdAt": "2020-09-01T00:26:23Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package de.tum.in.www1.artemis.domain;\n+\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Objects;\n+import java.util.Set;\n+\n+import javax.persistence.*;\n+\n+import org.hibernate.annotations.Cache;\n+import org.hibernate.annotations.CacheConcurrencyStrategy;\n+import org.hibernate.annotations.OnDelete;\n+import org.hibernate.annotations.OnDeleteAction;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+\n+@Entity\n+@Table(name = \"achievement\")\n+@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)\n+@JsonInclude(JsonInclude.Include.NON_EMPTY)\n+public class Achievement implements Serializable {\n+\n+    @Id\n+    @Column(name = \"id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"title\")\n+    private String title;\n+\n+    @Column(name = \"description\")\n+    private String description;\n+\n+    @Column(name = \"icon\")\n+    private String icon;\n+\n+    @Column(name = \"rank\")\n+    private Integer rank;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11b272cd28a879d99eefff297aec8bf6d3f4748c"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ5NjMxOA==", "bodyText": "I would add an validation for the rank which is defined as INT at the moment. For example only allow ranks >0 or use the enum approach explained above.", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480496318", "createdAt": "2020-09-01T00:27:55Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AchievementResource.java", "diffHunk": "@@ -0,0 +1,135 @@\n+package de.tum.in.www1.artemis.web.rest;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.web.bind.annotation.*;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.service.AchievementService;\n+import de.tum.in.www1.artemis.service.AuthorizationCheckService;\n+import de.tum.in.www1.artemis.service.UserService;\n+import de.tum.in.www1.artemis.web.rest.errors.AccessForbiddenException;\n+import de.tum.in.www1.artemis.web.rest.util.HeaderUtil;\n+\n+/**\n+ * REST controller for managing Achievements.\n+ */\n+@RestController\n+@RequestMapping(\"/api\")\n+public class AchievementResource {\n+\n+    private static final String ENTITY_NAME = \"achievement\";\n+\n+    @Value(\"${jhipster.clientApp.name}\")\n+    private String applicationName;\n+\n+    private final Logger log = LoggerFactory.getLogger(AchievementResource.class);\n+\n+    private final AuthorizationCheckService authCheckService;\n+\n+    private final AchievementService achievementService;\n+\n+    private final UserService userService;\n+\n+    private final AchievementRepository achievementRepository;\n+\n+    public AchievementResource(AuthorizationCheckService authCheckService, AchievementService achievementService, UserService userService,\n+            AchievementRepository achievementRepository) {\n+        this.authCheckService = authCheckService;\n+        this.achievementService = achievementService;\n+        this.userService = userService;\n+        this.achievementRepository = achievementRepository;\n+    }\n+\n+    /**\n+     * GET /achievements : Get all achievements for user.\n+     *\n+     * @return the ResponseEntity with status 200 (OK) and with the found achievements as body\n+     */\n+    @GetMapping(\"/achievements\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Set<Achievement>> getAchievementsForUser() {\n+        User user = userService.getUser();\n+        log.debug(\"REST request to get achievements for user : {}\", user.getLogin());\n+        Set<Achievement> achievements = achievementService.findAllForUser(user.getId());\n+        return ResponseEntity.ok(achievements);\n+    }\n+\n+    /**\n+     * GET /courses/{courseId}/achievements : Get all achievements for course.\n+     *\n+     * @param courseId the course to which the achievements belong to\n+     * @return the ResponseEntity with status 200 (OK) and with the found achievements as body\n+     */\n+    @GetMapping(\"/courses/{courseId}/achievements\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Set<Achievement>> getAchievementsForCourse(@PathVariable Long courseId) {\n+        log.debug(\"REST request to get achievements for course : {}\", courseId);\n+        Set<Achievement> achievements = achievementService.findAllForCourse(courseId);\n+        return ResponseEntity.ok(achievements);\n+    }\n+\n+    /**\n+     * PUT /achievements : Updates an existing achievement.\n+     *\n+     * @param achievement the achievement to update\n+     * @return the ResponseEntity with status 200 (OK) and with body the updated achievement, or with status 500\n+     *         (Internal Server Error) if the achievement couldn't be updated\n+     */\n+    @PutMapping(\"/achievements\")\n+    @PreAuthorize(\"hasAnyRole('INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Achievement> updateAchievement(@RequestBody Achievement achievement) {\n+        log.debug(\"REST request to update Achievement : {}\", achievement);\n+\n+        if (achievement.getId() == null) {\n+            return ResponseEntity.badRequest().build();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11b272cd28a879d99eefff297aec8bf6d3f4748c"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/38f60a94a755877c7b502fda4cd54fca2ba8cb18", "committedDate": "2020-09-01T05:59:15Z", "message": "turn rank into enum"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDM2MTY5", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479436169", "createdAt": "2020-09-01T06:32:44Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDY4MzUw", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479468350", "createdAt": "2020-09-01T07:27:45Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDg0NDMx", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479484431", "createdAt": "2020-09-01T07:50:53Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MDo1M1rOHKqGVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MDo1M1rOHKqGVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkzNzU1OA==", "bodyText": "remove this line", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480937558", "createdAt": "2020-09-01T07:50:53Z", "author": {"login": "krusche"}, "path": "src/main/resources/config/liquibase/changelog/20200824233945_changelog.xml", "diffHunk": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-34\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"description\" type=\"VARCHAR(255)\"/>\n+            <column name=\"icon\" type=\"VARCHAR(255)\"/>\n+            <column name=\"rank\" type=\"VARCHAR(8)\"/>\n+            <column name=\"title\" type=\"VARCHAR(255)\"/>\n+            <column name=\"course_id\" type=\"BIGINT\"/>\n+            <column name=\"exercise_id\" type=\"BIGINT\"/>\n+        </createTable>\n+    </changeSet>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDg0NjM1", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479484635", "createdAt": "2020-09-01T07:51:06Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MTowNlrOHKqHHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MTowNlrOHKqHHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkzNzc1Nw==", "bodyText": "remove this line", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480937757", "createdAt": "2020-09-01T07:51:06Z", "author": {"login": "krusche"}, "path": "src/main/resources/config/liquibase/changelog/20200824233945_changelog.xml", "diffHunk": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-34\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"description\" type=\"VARCHAR(255)\"/>\n+            <column name=\"icon\" type=\"VARCHAR(255)\"/>\n+            <column name=\"rank\" type=\"VARCHAR(8)\"/>\n+            <column name=\"title\" type=\"VARCHAR(255)\"/>\n+            <column name=\"course_id\" type=\"BIGINT\"/>\n+            <column name=\"exercise_id\" type=\"BIGINT\"/>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-35\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDg0Njkw", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479484690", "createdAt": "2020-09-01T07:51:10Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MToxMFrOHKqHVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MToxMFrOHKqHVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkzNzgxNQ==", "bodyText": "remove this line", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480937815", "createdAt": "2020-09-01T07:51:10Z", "author": {"login": "krusche"}, "path": "src/main/resources/config/liquibase/changelog/20200824233945_changelog.xml", "diffHunk": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-34\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"description\" type=\"VARCHAR(255)\"/>\n+            <column name=\"icon\" type=\"VARCHAR(255)\"/>\n+            <column name=\"rank\" type=\"VARCHAR(8)\"/>\n+            <column name=\"title\" type=\"VARCHAR(255)\"/>\n+            <column name=\"course_id\" type=\"BIGINT\"/>\n+            <column name=\"exercise_id\" type=\"BIGINT\"/>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-35\">\n+        <createTable tableName=\"user_achievement\">\n+            <column name=\"user_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+            <column name=\"achievement_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+        </createTable>\n+    </changeSet>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDg0NzQy", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479484742", "createdAt": "2020-09-01T07:51:14Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MToxNVrOHKqHmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MToxNVrOHKqHmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkzNzg4Mw==", "bodyText": "remove this line", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480937883", "createdAt": "2020-09-01T07:51:15Z", "author": {"login": "krusche"}, "path": "src/main/resources/config/liquibase/changelog/20200824233945_changelog.xml", "diffHunk": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-34\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"description\" type=\"VARCHAR(255)\"/>\n+            <column name=\"icon\" type=\"VARCHAR(255)\"/>\n+            <column name=\"rank\" type=\"VARCHAR(8)\"/>\n+            <column name=\"title\" type=\"VARCHAR(255)\"/>\n+            <column name=\"course_id\" type=\"BIGINT\"/>\n+            <column name=\"exercise_id\" type=\"BIGINT\"/>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-35\">\n+        <createTable tableName=\"user_achievement\">\n+            <column name=\"user_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+            <column name=\"achievement_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-56\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDg0Nzc3", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479484777", "createdAt": "2020-09-01T07:51:18Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MToxOVrOHKqHzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MToxOVrOHKqHzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkzNzkzNQ==", "bodyText": "remove this line", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480937935", "createdAt": "2020-09-01T07:51:19Z", "author": {"login": "krusche"}, "path": "src/main/resources/config/liquibase/changelog/20200824233945_changelog.xml", "diffHunk": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-34\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"description\" type=\"VARCHAR(255)\"/>\n+            <column name=\"icon\" type=\"VARCHAR(255)\"/>\n+            <column name=\"rank\" type=\"VARCHAR(8)\"/>\n+            <column name=\"title\" type=\"VARCHAR(255)\"/>\n+            <column name=\"course_id\" type=\"BIGINT\"/>\n+            <column name=\"exercise_id\" type=\"BIGINT\"/>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-35\">\n+        <createTable tableName=\"user_achievement\">\n+            <column name=\"user_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+            <column name=\"achievement_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-56\">\n+        <addForeignKeyConstraint baseColumnNames=\"user_id\" baseTableName=\"user_achievement\" constraintName=\"FKag0f3cay7w8r2nn3qa42qjcmj\" deferrable=\"false\" initiallyDeferred=\"false\" referencedColumnNames=\"id\" referencedTableName=\"jhi_user\" validate=\"true\"/>\n+    </changeSet>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDg0ODM0", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479484834", "createdAt": "2020-09-01T07:51:24Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MToyNFrOHKqIGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MToyNFrOHKqIGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkzODAwOA==", "bodyText": "remove this line", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480938008", "createdAt": "2020-09-01T07:51:24Z", "author": {"login": "krusche"}, "path": "src/main/resources/config/liquibase/changelog/20200824233945_changelog.xml", "diffHunk": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-34\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"description\" type=\"VARCHAR(255)\"/>\n+            <column name=\"icon\" type=\"VARCHAR(255)\"/>\n+            <column name=\"rank\" type=\"VARCHAR(8)\"/>\n+            <column name=\"title\" type=\"VARCHAR(255)\"/>\n+            <column name=\"course_id\" type=\"BIGINT\"/>\n+            <column name=\"exercise_id\" type=\"BIGINT\"/>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-35\">\n+        <createTable tableName=\"user_achievement\">\n+            <column name=\"user_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+            <column name=\"achievement_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-56\">\n+        <addForeignKeyConstraint baseColumnNames=\"user_id\" baseTableName=\"user_achievement\" constraintName=\"FKag0f3cay7w8r2nn3qa42qjcmj\" deferrable=\"false\" initiallyDeferred=\"false\" referencedColumnNames=\"id\" referencedTableName=\"jhi_user\" validate=\"true\"/>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-57\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDg0OTA5", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479484909", "createdAt": "2020-09-01T07:51:30Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MTozMFrOHKqIag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MTozMFrOHKqIag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkzODA5MA==", "bodyText": "remove this line", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480938090", "createdAt": "2020-09-01T07:51:30Z", "author": {"login": "krusche"}, "path": "src/main/resources/config/liquibase/changelog/20200824233945_changelog.xml", "diffHunk": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-34\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"description\" type=\"VARCHAR(255)\"/>\n+            <column name=\"icon\" type=\"VARCHAR(255)\"/>\n+            <column name=\"rank\" type=\"VARCHAR(8)\"/>\n+            <column name=\"title\" type=\"VARCHAR(255)\"/>\n+            <column name=\"course_id\" type=\"BIGINT\"/>\n+            <column name=\"exercise_id\" type=\"BIGINT\"/>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-35\">\n+        <createTable tableName=\"user_achievement\">\n+            <column name=\"user_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+            <column name=\"achievement_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-56\">\n+        <addForeignKeyConstraint baseColumnNames=\"user_id\" baseTableName=\"user_achievement\" constraintName=\"FKag0f3cay7w8r2nn3qa42qjcmj\" deferrable=\"false\" initiallyDeferred=\"false\" referencedColumnNames=\"id\" referencedTableName=\"jhi_user\" validate=\"true\"/>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-57\">\n+        <addForeignKeyConstraint baseColumnNames=\"achievement_id\" baseTableName=\"user_achievement\" constraintName=\"FKcxeo6malce3dsw6tc43bcrwfd\" deferrable=\"false\" initiallyDeferred=\"false\" referencedColumnNames=\"id\" referencedTableName=\"achievement\" validate=\"true\"/>\n+    </changeSet>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDg0OTkz", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479484993", "createdAt": "2020-09-01T07:51:37Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MTozN1rOHKqI1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MTozN1rOHKqI1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkzODE5OA==", "bodyText": "remove this line", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480938198", "createdAt": "2020-09-01T07:51:37Z", "author": {"login": "krusche"}, "path": "src/main/resources/config/liquibase/changelog/20200824233945_changelog.xml", "diffHunk": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-34\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"description\" type=\"VARCHAR(255)\"/>\n+            <column name=\"icon\" type=\"VARCHAR(255)\"/>\n+            <column name=\"rank\" type=\"VARCHAR(8)\"/>\n+            <column name=\"title\" type=\"VARCHAR(255)\"/>\n+            <column name=\"course_id\" type=\"BIGINT\"/>\n+            <column name=\"exercise_id\" type=\"BIGINT\"/>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-35\">\n+        <createTable tableName=\"user_achievement\">\n+            <column name=\"user_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+            <column name=\"achievement_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-56\">\n+        <addForeignKeyConstraint baseColumnNames=\"user_id\" baseTableName=\"user_achievement\" constraintName=\"FKag0f3cay7w8r2nn3qa42qjcmj\" deferrable=\"false\" initiallyDeferred=\"false\" referencedColumnNames=\"id\" referencedTableName=\"jhi_user\" validate=\"true\"/>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-57\">\n+        <addForeignKeyConstraint baseColumnNames=\"achievement_id\" baseTableName=\"user_achievement\" constraintName=\"FKcxeo6malce3dsw6tc43bcrwfd\" deferrable=\"false\" initiallyDeferred=\"false\" referencedColumnNames=\"id\" referencedTableName=\"achievement\" validate=\"true\"/>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-58\">\n+        <addForeignKeyConstraint baseColumnNames=\"exercise_id\" baseTableName=\"achievement\" constraintName=\"FKqdk7gj5csvsa1dq48aihd4lk\" deferrable=\"false\" initiallyDeferred=\"false\" referencedColumnNames=\"id\" referencedTableName=\"exercise\" validate=\"true\"/>\n+    </changeSet>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDg1MDQ1", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479485045", "createdAt": "2020-09-01T07:51:41Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MTo0MVrOHKqJFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1MTo0MVrOHKqJFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkzODI2MA==", "bodyText": "remove this line", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480938260", "createdAt": "2020-09-01T07:51:41Z", "author": {"login": "krusche"}, "path": "src/main/resources/config/liquibase/changelog/20200824233945_changelog.xml", "diffHunk": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-34\">\n+        <createTable tableName=\"achievement\">\n+            <column autoIncrement=\"true\" name=\"id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\" primaryKeyName=\"achievementPK\"/>\n+            </column>\n+            <column name=\"description\" type=\"VARCHAR(255)\"/>\n+            <column name=\"icon\" type=\"VARCHAR(255)\"/>\n+            <column name=\"rank\" type=\"VARCHAR(8)\"/>\n+            <column name=\"title\" type=\"VARCHAR(255)\"/>\n+            <column name=\"course_id\" type=\"BIGINT\"/>\n+            <column name=\"exercise_id\" type=\"BIGINT\"/>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-35\">\n+        <createTable tableName=\"user_achievement\">\n+            <column name=\"user_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+            <column name=\"achievement_id\" type=\"BIGINT\">\n+                <constraints nullable=\"false\" primaryKey=\"true\"/>\n+            </column>\n+        </createTable>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-56\">\n+        <addForeignKeyConstraint baseColumnNames=\"user_id\" baseTableName=\"user_achievement\" constraintName=\"FKag0f3cay7w8r2nn3qa42qjcmj\" deferrable=\"false\" initiallyDeferred=\"false\" referencedColumnNames=\"id\" referencedTableName=\"jhi_user\" validate=\"true\"/>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-57\">\n+        <addForeignKeyConstraint baseColumnNames=\"achievement_id\" baseTableName=\"user_achievement\" constraintName=\"FKcxeo6malce3dsw6tc43bcrwfd\" deferrable=\"false\" initiallyDeferred=\"false\" referencedColumnNames=\"id\" referencedTableName=\"achievement\" validate=\"true\"/>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-58\">\n+        <addForeignKeyConstraint baseColumnNames=\"exercise_id\" baseTableName=\"achievement\" constraintName=\"FKqdk7gj5csvsa1dq48aihd4lk\" deferrable=\"false\" initiallyDeferred=\"false\" referencedColumnNames=\"id\" referencedTableName=\"exercise\" validate=\"true\"/>\n+    </changeSet>\n+    <changeSet author=\"balazs-czopf\" id=\"1598305196706-59\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDg1MzUz", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479485353", "createdAt": "2020-09-01T07:52:06Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDg3NDM0", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479487434", "createdAt": "2020-09-01T07:54:57Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1NDo1N1rOHKqT3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1NDo1N1rOHKqT3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk0MTAyMg==", "bodyText": "what happens if the user objects are proxy objects here?\nIf you expect that the achievement includes the actual users, please clearly mention this in the JavaDoc", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480941022", "createdAt": "2020-09-01T07:54:57Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AchievementService.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+\n+@Service\n+public class AchievementService {\n+\n+    private final AchievementRepository achievementRepository;\n+\n+    private final UserRepository userRepository;\n+\n+    public AchievementService(AchievementRepository achievementRepository, UserRepository userRepository) {\n+        this.achievementRepository = achievementRepository;\n+        this.userRepository = userRepository;\n+    }\n+\n+    public Optional<Achievement> findById(Long achievementId) {\n+        return achievementRepository.findById(achievementId);\n+    }\n+\n+    public Set<Achievement> findAllForCourse(Long courseId) {\n+        return achievementRepository.getAllByCourseId(courseId);\n+    }\n+\n+    public Set<Achievement> findAllForUser(Long userId) {\n+        return achievementRepository.getAllByUserId(userId);\n+    }\n+\n+    /**\n+     * Deletes an achievement by also removing it from all users\n+     * @param achievement achievement to be deleted\n+     */\n+    public void delete(Achievement achievement) {\n+        for (User user : achievement.getUsers()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDg3ODA1", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479487805", "createdAt": "2020-09-01T07:55:25Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1NToyNVrOHKqVmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1NToyNVrOHKqVmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk0MTQ2Nw==", "bodyText": "please remove Transactional, we don't want to use it!", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480941467", "createdAt": "2020-09-01T07:55:25Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AchievementResource.java", "diffHunk": "@@ -0,0 +1,135 @@\n+package de.tum.in.www1.artemis.web.rest;\n+\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.web.bind.annotation.*;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.service.AchievementService;\n+import de.tum.in.www1.artemis.service.AuthorizationCheckService;\n+import de.tum.in.www1.artemis.service.UserService;\n+import de.tum.in.www1.artemis.web.rest.errors.AccessForbiddenException;\n+import de.tum.in.www1.artemis.web.rest.util.HeaderUtil;\n+\n+/**\n+ * REST controller for managing Achievements.\n+ */\n+@RestController\n+@RequestMapping(\"/api\")\n+public class AchievementResource {\n+\n+    private static final String ENTITY_NAME = \"achievement\";\n+\n+    @Value(\"${jhipster.clientApp.name}\")\n+    private String applicationName;\n+\n+    private final Logger log = LoggerFactory.getLogger(AchievementResource.class);\n+\n+    private final AuthorizationCheckService authCheckService;\n+\n+    private final AchievementService achievementService;\n+\n+    private final UserService userService;\n+\n+    private final AchievementRepository achievementRepository;\n+\n+    public AchievementResource(AuthorizationCheckService authCheckService, AchievementService achievementService, UserService userService,\n+            AchievementRepository achievementRepository) {\n+        this.authCheckService = authCheckService;\n+        this.achievementService = achievementService;\n+        this.userService = userService;\n+        this.achievementRepository = achievementRepository;\n+    }\n+\n+    /**\n+     * GET /achievements : Get all achievements for user.\n+     *\n+     * @return the ResponseEntity with status 200 (OK) and with the found achievements as body\n+     */\n+    @GetMapping(\"/achievements\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Set<Achievement>> getAchievementsForUser() {\n+        User user = userService.getUser();\n+        log.debug(\"REST request to get achievements for user : {}\", user.getLogin());\n+        Set<Achievement> achievements = achievementService.findAllForUser(user.getId());\n+        return ResponseEntity.ok(achievements);\n+    }\n+\n+    /**\n+     * GET /courses/{courseId}/achievements : Get all achievements for course.\n+     *\n+     * @param courseId the course to which the achievements belong to\n+     * @return the ResponseEntity with status 200 (OK) and with the found achievements as body\n+     */\n+    @GetMapping(\"/courses/{courseId}/achievements\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Set<Achievement>> getAchievementsForCourse(@PathVariable Long courseId) {\n+        log.debug(\"REST request to get achievements for course : {}\", courseId);\n+        Set<Achievement> achievements = achievementService.findAllForCourse(courseId);\n+        return ResponseEntity.ok(achievements);\n+    }\n+\n+    /**\n+     * PUT /achievements : Updates an existing achievement.\n+     *\n+     * @param achievement the achievement to update\n+     * @return the ResponseEntity with status 200 (OK) and with body the updated achievement, or with status 500\n+     *         (Internal Server Error) if the achievement couldn't be updated\n+     */\n+    @PutMapping(\"/achievements\")\n+    @PreAuthorize(\"hasAnyRole('INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Achievement> updateAchievement(@RequestBody Achievement achievement) {\n+        log.debug(\"REST request to update Achievement : {}\", achievement);\n+\n+        if (achievement.getId() == null) {\n+            return ResponseEntity.badRequest().build();\n+        }\n+\n+        Course course = achievement.getCourse();\n+        User user = userService.getUserWithGroupsAndAuthorities();\n+        if (!authCheckService.isAtLeastInstructorInCourse(course, user)) {\n+            throw new AccessForbiddenException(\"You are not allowed to access this resource\");\n+        }\n+\n+        Achievement savedAchievement = achievementRepository.save(achievement);\n+        return ResponseEntity.ok().headers(HeaderUtil.createEntityUpdateAlert(applicationName, true, ENTITY_NAME, savedAchievement.getId().toString())).body(savedAchievement);\n+    }\n+\n+    /**\n+     * DELETE /achievements/:achievementId : delete the \"id\" achievement.\n+     *\n+     * @param achievementId the id of the achievement to delete\n+     * @return the ResponseEntity with status 200 (OK)\n+     */\n+    @DeleteMapping(\"/achievements/{achievementId}\")\n+    @PreAuthorize(\"hasAnyRole('INSTRUCTOR', 'ADMIN')\")\n+    @Transactional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDg4OTkx", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479488991", "createdAt": "2020-09-01T07:57:00Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1NzowMFrOHKqarw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzo1NzowMFrOHKqarw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk0Mjc2Nw==", "bodyText": "When you save new entities to the database, they should not contain an id already!", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r480942767", "createdAt": "2020-09-01T07:57:00Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/AchievementIntegrationTest.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.Achievement;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.User;\n+import de.tum.in.www1.artemis.domain.enumeration.Rank;\n+import de.tum.in.www1.artemis.repository.AchievementRepository;\n+import de.tum.in.www1.artemis.repository.CourseRepository;\n+import de.tum.in.www1.artemis.repository.UserRepository;\n+import de.tum.in.www1.artemis.service.AchievementService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class AchievementIntegrationTest extends AbstractSpringIntegrationBambooBitbucketJiraTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    AchievementService achievementService;\n+\n+    @Autowired\n+    AchievementRepository achievementRepository;\n+\n+    @Autowired\n+    UserRepository userRepository;\n+\n+    @Autowired\n+    CourseRepository courseRepository;\n+\n+    private User student;\n+\n+    private User instructor;\n+\n+    private Course course;\n+\n+    private Achievement achievement;\n+\n+    @BeforeEach\n+    public void initTestCase() {\n+        var users = database.addUsers(1, 0, 1);\n+        student = users.get(0);\n+        instructor = users.get(1);\n+        instructor.setGroups(new HashSet<>(Arrays.asList(\"instructor\")));\n+        course = database.addEmptyCourse();\n+\n+        achievement = new Achievement();\n+        achievement.setId(1L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d85f5f34a571777d2b7558382f25bf6bc7434049", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/d85f5f34a571777d2b7558382f25bf6bc7434049", "committedDate": "2020-09-01T08:01:09Z", "message": "remove unnecessary changesets"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NDkyNzM2", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479492736", "createdAt": "2020-09-01T08:01:50Z", "commit": {"oid": "38f60a94a755877c7b502fda4cd54fca2ba8cb18"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd13e3d27e731c1b8d1a2dea0e1c43ae2468034b", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/fd13e3d27e731c1b8d1a2dea0e1c43ae2468034b", "committedDate": "2020-09-01T16:16:55Z", "message": "integrate feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b93d0e90fde6137e06a126e85edefb5814f653c", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/4b93d0e90fde6137e06a126e85edefb5814f653c", "committedDate": "2020-09-01T16:18:56Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5OTk4MDYy", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-479998062", "createdAt": "2020-09-01T18:12:26Z", "commit": {"oid": "4b93d0e90fde6137e06a126e85edefb5814f653c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODoxMjoyN1rOHLChQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODoxMjoyN1rOHLChQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzNzY2NQ==", "bodyText": "Should be findAllWithEagerAchivement or not?\nI think this would be more understandable, when you do it the other way around.\nSo in the AchievementRepository and make findByIdWithEagerUsers(achievementId)", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r481337665", "createdAt": "2020-09-01T18:12:27Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/UserRepository.java", "diffHunk": "@@ -96,4 +96,7 @@\n \n     @Query(\"select distinct team.students from Team team where team.exercise.course.id = :#{#courseId} and team.shortName = :#{#teamShortName}\")\n     Set<User> findAllInTeam(@Param(\"courseId\") Long courseId, @Param(\"teamShortName\") String teamShortName);\n+\n+    @Query(\"SELECT u FROM User u JOIN FETCH u.achievements a WHERE a.id = :#{#achievementId}\")\n+    Set<User> findAllWithEagerAchievements(@Param(\"achievementId\") Long achievementId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b93d0e90fde6137e06a126e85edefb5814f653c"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e71c08bfb8259e519230dcb95a44996794c4e79e", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/e71c08bfb8259e519230dcb95a44996794c4e79e", "committedDate": "2020-09-01T20:26:30Z", "message": "change query function name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9508d2e30a1f565543bf539723faac6031854da4", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/9508d2e30a1f565543bf539723faac6031854da4", "committedDate": "2020-09-01T20:28:11Z", "message": "Merge branch 'develop' into feature/achievements/storage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDk1MjY1", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-480095265", "createdAt": "2020-09-01T20:34:54Z", "commit": {"oid": "9508d2e30a1f565543bf539723faac6031854da4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMDozNDo1NVrOHLHPeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMDozNDo1NVrOHLHPeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQxNTAzMg==", "bodyText": "Maybe rename this to AchievementRank so that one can see directly that this belongs to achievements :)", "url": "https://github.com/ls1intum/Artemis/pull/1878#discussion_r481415032", "createdAt": "2020-09-01T20:34:55Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/enumeration/Rank.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package de.tum.in.www1.artemis.domain.enumeration;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9508d2e30a1f565543bf539723faac6031854da4"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d6b585f50ea18da108af99466daf80870a21a0b", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/9d6b585f50ea18da108af99466daf80870a21a0b", "committedDate": "2020-09-01T20:35:23Z", "message": "rename rank enum"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c842d6d85c758969dce647319d9e503bc90b7c11", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/c842d6d85c758969dce647319d9e503bc90b7c11", "committedDate": "2020-09-01T20:35:57Z", "message": "Merge branch 'feature/achievements/storage' of https://github.com/ls1intum/Artemis into feature/achievements/storage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDk3NjM4", "url": "https://github.com/ls1intum/Artemis/pull/1878#pullrequestreview-480097638", "createdAt": "2020-09-01T20:38:44Z", "commit": {"oid": "c842d6d85c758969dce647319d9e503bc90b7c11"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efe97b904e2506356b25a51a137cc654e2ffb140", "author": {"user": {"login": "balazs-czopf", "name": "Balazs Czopf"}}, "url": "https://github.com/ls1intum/Artemis/commit/efe97b904e2506356b25a51a137cc654e2ffb140", "committedDate": "2020-09-01T20:52:36Z", "message": "add javadoc"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4341, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}