{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ3MTEwODc2", "number": 2617, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMzoxOTo1OVrOFKMOAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMzoyMDo0NlrOFKMOPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjMwMjczOnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/LearningGoalIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMzoxOTo1OVrOIM28gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMzoyNjoxM1rOIM3AJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM1NDA1MA==", "bodyText": "please remove this again after it works properly", "url": "https://github.com/ls1intum/Artemis/pull/2617#discussion_r550354050", "createdAt": "2020-12-30T23:19:59Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/LearningGoalIntegrationTest.java", "diffHunk": "@@ -451,15 +452,22 @@ public void getLearningGoalCourseProgressTeamsTest_asInstructorOne() throws Exce\n \n         assertThat(courseLearningGoalProgress.totalPointsAchievableByStudentsInLearningGoal).isEqualTo(30.0);\n         assertThat(courseLearningGoalProgress.averagePointsAchievedByStudentInLearningGoal).isEqualTo(3.0);\n-        CourseLearningGoalProgress.CourseLectureUnitProgress progressInTeamExercise = courseLearningGoalProgress.progressInLectureUnits.stream()\n-                .filter(courseLectureUnitProgress -> courseLectureUnitProgress.lectureUnitId.equals(idOfExerciseUnitTeamTextOfLectureOne)).findFirst().get();\n-        assertThat(progressInTeamExercise.participationRate).isEqualTo(80.0);\n-        assertThat(progressInTeamExercise.noOfParticipants).isEqualTo(4);\n-        assertThat(progressInTeamExercise.averageScoreAchievedByStudentInLectureUnit).isEqualTo(30.0);\n+\n+        boolean foundProgressWithCorrectNumbers = false;\n+        for (CourseLearningGoalProgress.CourseLectureUnitProgress courseLectureUnitProgress : courseLearningGoalProgress.progressInLectureUnits) {\n+            if (courseLectureUnitProgress.participationRate.equals(80.0) && courseLectureUnitProgress.noOfParticipants.equals(4)\n+                    && courseLectureUnitProgress.averageScoreAchievedByStudentInLectureUnit.equals(30.0)) {\n+                foundProgressWithCorrectNumbers = true;\n+                break;\n+            }\n+        }\n+\n+        assertThat(foundProgressWithCorrectNumbers).isTrue();\n     }\n \n     @Test\n     @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    @RepeatedTest(100)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "220110c07d1a60d3514527f5564f36d1853fa7ad"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM1NDk4Mw==", "bodyText": "Done in fbc81e7", "url": "https://github.com/ls1intum/Artemis/pull/2617#discussion_r550354983", "createdAt": "2020-12-30T23:26:13Z", "author": {"login": "stefanwaldhauser"}, "path": "src/test/java/de/tum/in/www1/artemis/LearningGoalIntegrationTest.java", "diffHunk": "@@ -451,15 +452,22 @@ public void getLearningGoalCourseProgressTeamsTest_asInstructorOne() throws Exce\n \n         assertThat(courseLearningGoalProgress.totalPointsAchievableByStudentsInLearningGoal).isEqualTo(30.0);\n         assertThat(courseLearningGoalProgress.averagePointsAchievedByStudentInLearningGoal).isEqualTo(3.0);\n-        CourseLearningGoalProgress.CourseLectureUnitProgress progressInTeamExercise = courseLearningGoalProgress.progressInLectureUnits.stream()\n-                .filter(courseLectureUnitProgress -> courseLectureUnitProgress.lectureUnitId.equals(idOfExerciseUnitTeamTextOfLectureOne)).findFirst().get();\n-        assertThat(progressInTeamExercise.participationRate).isEqualTo(80.0);\n-        assertThat(progressInTeamExercise.noOfParticipants).isEqualTo(4);\n-        assertThat(progressInTeamExercise.averageScoreAchievedByStudentInLectureUnit).isEqualTo(30.0);\n+\n+        boolean foundProgressWithCorrectNumbers = false;\n+        for (CourseLearningGoalProgress.CourseLectureUnitProgress courseLectureUnitProgress : courseLearningGoalProgress.progressInLectureUnits) {\n+            if (courseLectureUnitProgress.participationRate.equals(80.0) && courseLectureUnitProgress.noOfParticipants.equals(4)\n+                    && courseLectureUnitProgress.averageScoreAchievedByStudentInLectureUnit.equals(30.0)) {\n+                foundProgressWithCorrectNumbers = true;\n+                break;\n+            }\n+        }\n+\n+        assertThat(foundProgressWithCorrectNumbers).isTrue();\n     }\n \n     @Test\n     @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    @RepeatedTest(100)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM1NDA1MA=="}, "originalCommit": {"oid": "220110c07d1a60d3514527f5564f36d1853fa7ad"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjMwMzMzOnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/LearningGoalIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMzoyMDo0NlrOIM285A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMzoyNjoyMFrOIM3ARg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM1NDE0OA==", "bodyText": "This is quite some duplicated code with a similar section below.\nPlease refactor this into a method to avoid code duplication!", "url": "https://github.com/ls1intum/Artemis/pull/2617#discussion_r550354148", "createdAt": "2020-12-30T23:20:46Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/LearningGoalIntegrationTest.java", "diffHunk": "@@ -451,15 +452,22 @@ public void getLearningGoalCourseProgressTeamsTest_asInstructorOne() throws Exce\n \n         assertThat(courseLearningGoalProgress.totalPointsAchievableByStudentsInLearningGoal).isEqualTo(30.0);\n         assertThat(courseLearningGoalProgress.averagePointsAchievedByStudentInLearningGoal).isEqualTo(3.0);\n-        CourseLearningGoalProgress.CourseLectureUnitProgress progressInTeamExercise = courseLearningGoalProgress.progressInLectureUnits.stream()\n-                .filter(courseLectureUnitProgress -> courseLectureUnitProgress.lectureUnitId.equals(idOfExerciseUnitTeamTextOfLectureOne)).findFirst().get();\n-        assertThat(progressInTeamExercise.participationRate).isEqualTo(80.0);\n-        assertThat(progressInTeamExercise.noOfParticipants).isEqualTo(4);\n-        assertThat(progressInTeamExercise.averageScoreAchievedByStudentInLectureUnit).isEqualTo(30.0);\n+\n+        boolean foundProgressWithCorrectNumbers = false;\n+        for (CourseLearningGoalProgress.CourseLectureUnitProgress courseLectureUnitProgress : courseLearningGoalProgress.progressInLectureUnits) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "220110c07d1a60d3514527f5564f36d1853fa7ad"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM1NTAxNA==", "bodyText": "Done in fbc81e7", "url": "https://github.com/ls1intum/Artemis/pull/2617#discussion_r550355014", "createdAt": "2020-12-30T23:26:20Z", "author": {"login": "stefanwaldhauser"}, "path": "src/test/java/de/tum/in/www1/artemis/LearningGoalIntegrationTest.java", "diffHunk": "@@ -451,15 +452,22 @@ public void getLearningGoalCourseProgressTeamsTest_asInstructorOne() throws Exce\n \n         assertThat(courseLearningGoalProgress.totalPointsAchievableByStudentsInLearningGoal).isEqualTo(30.0);\n         assertThat(courseLearningGoalProgress.averagePointsAchievedByStudentInLearningGoal).isEqualTo(3.0);\n-        CourseLearningGoalProgress.CourseLectureUnitProgress progressInTeamExercise = courseLearningGoalProgress.progressInLectureUnits.stream()\n-                .filter(courseLectureUnitProgress -> courseLectureUnitProgress.lectureUnitId.equals(idOfExerciseUnitTeamTextOfLectureOne)).findFirst().get();\n-        assertThat(progressInTeamExercise.participationRate).isEqualTo(80.0);\n-        assertThat(progressInTeamExercise.noOfParticipants).isEqualTo(4);\n-        assertThat(progressInTeamExercise.averageScoreAchievedByStudentInLectureUnit).isEqualTo(30.0);\n+\n+        boolean foundProgressWithCorrectNumbers = false;\n+        for (CourseLearningGoalProgress.CourseLectureUnitProgress courseLectureUnitProgress : courseLearningGoalProgress.progressInLectureUnits) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM1NDE0OA=="}, "originalCommit": {"oid": "220110c07d1a60d3514527f5564f36d1853fa7ad"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4262, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}