{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM4MjEwNDY2", "number": 2539, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNTo1NjowNlrOFEl6lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNTo1NjowNlrOFEl6lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMzU5ODI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNTo1NjowNlrOIEwGNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzozNDoyNlrOIH12NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg1MzIzNw==", "bodyText": "This seems very weird to me. Could we discuss that again? I think this is a bad way to handle pure bonus exercises because the score should still reflect the percentage of the gotten bonus points. I am also wondering how that influences the computation of the course-total points.", "url": "https://github.com/ls1intum/Artemis/pull/2539#discussion_r541853237", "createdAt": "2020-12-13T05:56:06Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -402,7 +402,14 @@ private void updateScore(Result result, Set<ProgrammingExerciseTestCase> success\n             }\n \n             // The score is calculated as a percentage of the maximum points\n-            long score = Math.round(successfulTestPoints / maxScoreRespectingZeroPointExercises * 100.0);\n+            long score;\n+            if (maxScoreRespectingZeroPointExercises > 0) {\n+                score = Math.round(successfulTestPoints / maxScoreRespectingZeroPointExercises * 100.0);\n+            }\n+            else {\n+                // special case when exercise has no regular points, but bonus points (e.g. 0 points, 5 bonus points -> score between 100% and 105%)\n+                score = Math.round((PLACEHOLDER_POINTS_FOR_ZERO_POINT_EXERCISES + successfulTestPoints) / PLACEHOLDER_POINTS_FOR_ZERO_POINT_EXERCISES * 100.0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bcb1124a9c2faef1bc2a7b44d68e04d22940bea"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg3MjQzOQ==", "bodyText": "Yes, the statement in the comment is wrong. Basically, percentages do not make much sense here, because the base value (points) is 0. I think we need to solve this case differently.\nMaybe it would be better to split the score for normal points and the score for bonus points in the future to support this case in a better way.\nAn we need to make sure the course-total points and the export in the course scores are correct", "url": "https://github.com/ls1intum/Artemis/pull/2539#discussion_r541872439", "createdAt": "2020-12-13T08:06:46Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -402,7 +402,14 @@ private void updateScore(Result result, Set<ProgrammingExerciseTestCase> success\n             }\n \n             // The score is calculated as a percentage of the maximum points\n-            long score = Math.round(successfulTestPoints / maxScoreRespectingZeroPointExercises * 100.0);\n+            long score;\n+            if (maxScoreRespectingZeroPointExercises > 0) {\n+                score = Math.round(successfulTestPoints / maxScoreRespectingZeroPointExercises * 100.0);\n+            }\n+            else {\n+                // special case when exercise has no regular points, but bonus points (e.g. 0 points, 5 bonus points -> score between 100% and 105%)\n+                score = Math.round((PLACEHOLDER_POINTS_FOR_ZERO_POINT_EXERCISES + successfulTestPoints) / PLACEHOLDER_POINTS_FOR_ZERO_POINT_EXERCISES * 100.0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg1MzIzNw=="}, "originalCommit": {"oid": "2bcb1124a9c2faef1bc2a7b44d68e04d22940bea"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA5MjQ3NQ==", "bodyText": "As discussed in the meeting, we are allowing a max score of 100% as maxPoints are the amount of bonus points.\ne.g. exercise with 0 normal points 5 bonus points -> 2 tests (each giving 1 bonus point) correct -> 40% score as 2/5.", "url": "https://github.com/ls1intum/Artemis/pull/2539#discussion_r545092475", "createdAt": "2020-12-17T13:33:20Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -402,7 +402,14 @@ private void updateScore(Result result, Set<ProgrammingExerciseTestCase> success\n             }\n \n             // The score is calculated as a percentage of the maximum points\n-            long score = Math.round(successfulTestPoints / maxScoreRespectingZeroPointExercises * 100.0);\n+            long score;\n+            if (maxScoreRespectingZeroPointExercises > 0) {\n+                score = Math.round(successfulTestPoints / maxScoreRespectingZeroPointExercises * 100.0);\n+            }\n+            else {\n+                // special case when exercise has no regular points, but bonus points (e.g. 0 points, 5 bonus points -> score between 100% and 105%)\n+                score = Math.round((PLACEHOLDER_POINTS_FOR_ZERO_POINT_EXERCISES + successfulTestPoints) / PLACEHOLDER_POINTS_FOR_ZERO_POINT_EXERCISES * 100.0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg1MzIzNw=="}, "originalCommit": {"oid": "2bcb1124a9c2faef1bc2a7b44d68e04d22940bea"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA5MzE3Mg==", "bodyText": "Tests concerning the course-score points can be done in a follow up.", "url": "https://github.com/ls1intum/Artemis/pull/2539#discussion_r545093172", "createdAt": "2020-12-17T13:34:26Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -402,7 +402,14 @@ private void updateScore(Result result, Set<ProgrammingExerciseTestCase> success\n             }\n \n             // The score is calculated as a percentage of the maximum points\n-            long score = Math.round(successfulTestPoints / maxScoreRespectingZeroPointExercises * 100.0);\n+            long score;\n+            if (maxScoreRespectingZeroPointExercises > 0) {\n+                score = Math.round(successfulTestPoints / maxScoreRespectingZeroPointExercises * 100.0);\n+            }\n+            else {\n+                // special case when exercise has no regular points, but bonus points (e.g. 0 points, 5 bonus points -> score between 100% and 105%)\n+                score = Math.round((PLACEHOLDER_POINTS_FOR_ZERO_POINT_EXERCISES + successfulTestPoints) / PLACEHOLDER_POINTS_FOR_ZERO_POINT_EXERCISES * 100.0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg1MzIzNw=="}, "originalCommit": {"oid": "2bcb1124a9c2faef1bc2a7b44d68e04d22940bea"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4336, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}