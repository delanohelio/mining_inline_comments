{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMjM5MDAy", "number": 2507, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzozMzo1NFrOFC7S6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzozMDoyMVrOFEFuSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjEyOTcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzozMzo1NFrOICU0Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzozMzo1NFrOICU0Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwOTE0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539309147", "createdAt": "2020-12-09T13:33:54Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -128,33 +133,29 @@ public Result getFirstResult() {\n         return null;\n     }\n \n-    // TODO NR, SE: remove redundant setter after relationship change on client. Currently we need two deserializing setters for \"result\" (client) and \"results\" (server)\n-    @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResult(Result result) {\n-        this.setResults(result);\n-    }\n-\n-    // TODO Ruscher, Entholzer: refactor to addResult\n     /**\n-     * custom setter that supports the migration from 1...1 to 1...* in the submission->result(s) relationship\n-     * Will be refactore in the future\n-     * @param result the result that should be added, in case this is null, an empty list will be used instead\n+     * Used as a setResult method, as typically the latest result is used\n+     *\n+     * @param result\n      */\n-    @JsonProperty(value = \"results\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResults(Result result) {\n-        if (result == null) {\n-            // clear the list of results\n+    // @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjE0Njk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzozNzoyOVrOICU-gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDoxNDoxMFrOICWr8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMxMTc0Nw==", "bodyText": "I think something is odd in this method. I am not seeing where you are adding the result for the case when this.results == null", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539311747", "createdAt": "2020-12-09T13:37:29Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -128,33 +133,29 @@ public Result getFirstResult() {\n         return null;\n     }\n \n-    // TODO NR, SE: remove redundant setter after relationship change on client. Currently we need two deserializing setters for \"result\" (client) and \"results\" (server)\n-    @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResult(Result result) {\n-        this.setResults(result);\n-    }\n-\n-    // TODO Ruscher, Entholzer: refactor to addResult\n     /**\n-     * custom setter that supports the migration from 1...1 to 1...* in the submission->result(s) relationship\n-     * Will be refactore in the future\n-     * @param result the result that should be added, in case this is null, an empty list will be used instead\n+     * Used as a setResult method, as typically the latest result is used\n+     *\n+     * @param result\n      */\n-    @JsonProperty(value = \"results\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResults(Result result) {\n-        if (result == null) {\n-            // clear the list of results\n+    // @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n+    public void replaceLatestOrIfEmptyAddResult(Result result) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzOTc2Mg==", "bodyText": "Yes, that's true, thanks for noticing. As it turns out the case this.results == null never occurs. (Or so far it should never occur) I'll remove it.", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539339762", "createdAt": "2020-12-09T14:14:10Z", "author": {"login": "SimonEntholzer"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -128,33 +133,29 @@ public Result getFirstResult() {\n         return null;\n     }\n \n-    // TODO NR, SE: remove redundant setter after relationship change on client. Currently we need two deserializing setters for \"result\" (client) and \"results\" (server)\n-    @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResult(Result result) {\n-        this.setResults(result);\n-    }\n-\n-    // TODO Ruscher, Entholzer: refactor to addResult\n     /**\n-     * custom setter that supports the migration from 1...1 to 1...* in the submission->result(s) relationship\n-     * Will be refactore in the future\n-     * @param result the result that should be added, in case this is null, an empty list will be used instead\n+     * Used as a setResult method, as typically the latest result is used\n+     *\n+     * @param result\n      */\n-    @JsonProperty(value = \"results\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResults(Result result) {\n-        if (result == null) {\n-            // clear the list of results\n+    // @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n+    public void replaceLatestOrIfEmptyAddResult(Result result) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMxMTc0Nw=="}, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjIwNjU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzo0OTozMVrOICVhcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDozMjoxOVrOICXlzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMDY5MA==", "bodyText": "I am not quire sure what is happening here. As far as I know we only have one result at the moment, therefore this would remove the last result (the one result at the moment) and then add the same result back, right? Or am I misunderstanding here something?", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539320690", "createdAt": "2020-12-09T13:49:31Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -128,33 +133,29 @@ public Result getFirstResult() {\n         return null;\n     }\n \n-    // TODO NR, SE: remove redundant setter after relationship change on client. Currently we need two deserializing setters for \"result\" (client) and \"results\" (server)\n-    @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResult(Result result) {\n-        this.setResults(result);\n-    }\n-\n-    // TODO Ruscher, Entholzer: refactor to addResult\n     /**\n-     * custom setter that supports the migration from 1...1 to 1...* in the submission->result(s) relationship\n-     * Will be refactore in the future\n-     * @param result the result that should be added, in case this is null, an empty list will be used instead\n+     * Used as a setResult method, as typically the latest result is used\n+     *\n+     * @param result\n      */\n-    @JsonProperty(value = \"results\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResults(Result result) {\n-        if (result == null) {\n-            // clear the list of results\n+    // @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n+    public void replaceLatestOrIfEmptyAddResult(Result result) {\n+        if (this.results == null) {\n             this.results = new ArrayList<>();\n         }\n+        else if (!this.results.isEmpty()) {\n+            results.set(results.size() - 1, result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM1NDU3Mg==", "bodyText": "It removes the last result, but the result passed to the method isn't the same result. So, a different result is set to the results list.", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539354572", "createdAt": "2020-12-09T14:32:19Z", "author": {"login": "SimonEntholzer"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -128,33 +133,29 @@ public Result getFirstResult() {\n         return null;\n     }\n \n-    // TODO NR, SE: remove redundant setter after relationship change on client. Currently we need two deserializing setters for \"result\" (client) and \"results\" (server)\n-    @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResult(Result result) {\n-        this.setResults(result);\n-    }\n-\n-    // TODO Ruscher, Entholzer: refactor to addResult\n     /**\n-     * custom setter that supports the migration from 1...1 to 1...* in the submission->result(s) relationship\n-     * Will be refactore in the future\n-     * @param result the result that should be added, in case this is null, an empty list will be used instead\n+     * Used as a setResult method, as typically the latest result is used\n+     *\n+     * @param result\n      */\n-    @JsonProperty(value = \"results\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResults(Result result) {\n-        if (result == null) {\n-            // clear the list of results\n+    // @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n+    public void replaceLatestOrIfEmptyAddResult(Result result) {\n+        if (this.results == null) {\n             this.results = new ArrayList<>();\n         }\n+        else if (!this.results.isEmpty()) {\n+            results.set(results.size() - 1, result);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMDY5MA=="}, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjIxMjYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzo1MDo1NVrOICVlSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDozMzowNFrOICXoNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMTY3Mg==", "bodyText": "I think that we should not delete any result at all except for special reasons", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539321672", "createdAt": "2020-12-09T13:50:55Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -128,33 +133,29 @@ public Result getFirstResult() {\n         return null;\n     }\n \n-    // TODO NR, SE: remove redundant setter after relationship change on client. Currently we need two deserializing setters for \"result\" (client) and \"results\" (server)\n-    @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResult(Result result) {\n-        this.setResults(result);\n-    }\n-\n-    // TODO Ruscher, Entholzer: refactor to addResult\n     /**\n-     * custom setter that supports the migration from 1...1 to 1...* in the submission->result(s) relationship\n-     * Will be refactore in the future\n-     * @param result the result that should be added, in case this is null, an empty list will be used instead\n+     * Used as a setResult method, as typically the latest result is used\n+     *\n+     * @param result\n      */\n-    @JsonProperty(value = \"results\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResults(Result result) {\n-        if (result == null) {\n-            // clear the list of results\n+    // @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n+    public void replaceLatestOrIfEmptyAddResult(Result result) {\n+        if (this.results == null) {\n             this.results = new ArrayList<>();\n         }\n+        else if (!this.results.isEmpty()) {\n+            results.set(results.size() - 1, result);\n+            // TODO: Make sure the deletion is saved in the database too (SE, NR)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM1NTE4OA==", "bodyText": "We still should make sure that the deletion is also propagated to the database. We should write a test for that probably.", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539355188", "createdAt": "2020-12-09T14:33:04Z", "author": {"login": "SimonEntholzer"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -128,33 +133,29 @@ public Result getFirstResult() {\n         return null;\n     }\n \n-    // TODO NR, SE: remove redundant setter after relationship change on client. Currently we need two deserializing setters for \"result\" (client) and \"results\" (server)\n-    @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResult(Result result) {\n-        this.setResults(result);\n-    }\n-\n-    // TODO Ruscher, Entholzer: refactor to addResult\n     /**\n-     * custom setter that supports the migration from 1...1 to 1...* in the submission->result(s) relationship\n-     * Will be refactore in the future\n-     * @param result the result that should be added, in case this is null, an empty list will be used instead\n+     * Used as a setResult method, as typically the latest result is used\n+     *\n+     * @param result\n      */\n-    @JsonProperty(value = \"results\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResults(Result result) {\n-        if (result == null) {\n-            // clear the list of results\n+    // @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n+    public void replaceLatestOrIfEmptyAddResult(Result result) {\n+        if (this.results == null) {\n             this.results = new ArrayList<>();\n         }\n+        else if (!this.results.isEmpty()) {\n+            results.set(results.size() - 1, result);\n+            // TODO: Make sure the deletion is saved in the database too (SE, NR)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMTY3Mg=="}, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjIyNjA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzo1Mzo0M1rOICVtZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOToyNToxNlrOIC_Z2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMzc0OA==", "bodyText": "this returns the result with the highest Id right?", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539323748", "createdAt": "2020-12-09T13:53:43Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -96,15 +96,14 @@ public Long getDurationInMinutes() {\n         return Duration.between(initilizationDate, submissionDate).toMinutes();\n     }\n \n-    // TODO Ruscher, Entholzer: Refactor to getLatestResult\n     /**\n      * Is used as a workaround for objects that expect submission to have 1 result\n      *\n      * @return the latest result\n      */\n     @Nullable\n-    @JsonProperty(value = \"result\", access = JsonProperty.Access.READ_ONLY)\n-    public Result getResult() {\n+    @JsonIgnore\n+    public Result getLatestResult() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1MzUxMw==", "bodyText": "Technically \"latest\" means the newest result? It might be great to add that information in the comment above", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539653513", "createdAt": "2020-12-09T21:16:27Z", "author": {"login": "ivanchimeno"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -96,15 +96,14 @@ public Long getDurationInMinutes() {\n         return Duration.between(initilizationDate, submissionDate).toMinutes();\n     }\n \n-    // TODO Ruscher, Entholzer: Refactor to getLatestResult\n     /**\n      * Is used as a workaround for objects that expect submission to have 1 result\n      *\n      * @return the latest result\n      */\n     @Nullable\n-    @JsonProperty(value = \"result\", access = JsonProperty.Access.READ_ONLY)\n-    public Result getResult() {\n+    @JsonIgnore\n+    public Result getLatestResult() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMzc0OA=="}, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAwNjg3Mw==", "bodyText": "We do not order the results by ID, we have a specific order_column which is handled by hibernate only. But yes, the latest result means the newest result", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r540006873", "createdAt": "2020-12-10T09:25:16Z", "author": {"login": "anditurdiu"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -96,15 +96,14 @@ public Long getDurationInMinutes() {\n         return Duration.between(initilizationDate, submissionDate).toMinutes();\n     }\n \n-    // TODO Ruscher, Entholzer: Refactor to getLatestResult\n     /**\n      * Is used as a workaround for objects that expect submission to have 1 result\n      *\n      * @return the latest result\n      */\n     @Nullable\n-    @JsonProperty(value = \"result\", access = JsonProperty.Access.READ_ONLY)\n-    public Result getResult() {\n+    @JsonIgnore\n+    public Result getLatestResult() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMzc0OA=="}, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjI4NTI5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/entities/submission.model.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDowNToxNVrOICWQlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOToyNjoyMVrOIC_c4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzMjc1Nw==", "bodyText": "I am not sure if it would be better to not export this function and rename it to getLatestResult then you can call this directly from a submission, e.g. const result = this.submission.getLatestResult()", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539332757", "createdAt": "2020-12-09T14:05:15Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/entities/submission.model.ts", "diffHunk": "@@ -40,3 +40,58 @@ export abstract class Submission implements BaseEntity {\n         this.submitted = false; // default value\n     }\n }\n+\n+/**\n+ * Used to access the correct submissions result\n+ *\n+ * @param submission\n+ */\n+export function getLatestSubmissionResult(submission: Submission | undefined): Result | undefined {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAwNzY1MA==", "bodyText": "This does not work in typescript because there is no actual object submission in runtime. You cant really work in an object oriented way", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r540007650", "createdAt": "2020-12-10T09:26:21Z", "author": {"login": "anditurdiu"}, "path": "src/main/webapp/app/entities/submission.model.ts", "diffHunk": "@@ -40,3 +40,58 @@ export abstract class Submission implements BaseEntity {\n         this.submitted = false; // default value\n     }\n }\n+\n+/**\n+ * Used to access the correct submissions result\n+ *\n+ * @param submission\n+ */\n+export function getLatestSubmissionResult(submission: Submission | undefined): Result | undefined {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzMjc1Nw=="}, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjI5Nzg5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment-dashboard.component.html", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDowNzo0MFrOICWX_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODowMDoyNVrOIED0TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzNDY1Mw==", "bodyText": "It would be better to save the result in a global variable instead of using the method in the check. See also other places where you are doing this that way (e.g. line 57)", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539334653", "createdAt": "2020-12-09T14:07:40Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment-dashboard.component.html", "diffHunk": "@@ -53,7 +53,9 @@ <h4 jhiTranslate=\"artemisApp.fileUploadAssessment.dashboard.heading\" [translateV\n                         </ng-container>\n                     </td>\n                     <td>\n-                        <span *ngIf=\"submission.result && submission.result.score != null\">{{ submission.result.score }} %</span>\n+                        <span *ngIf=\"getLatestSubmissionResult(submission) && getLatestSubmissionResult(submission)!.score != null\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU3MjUxNg==", "bodyText": "I agree, in the html we should avoid method calls", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539572516", "createdAt": "2020-12-09T19:08:57Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment-dashboard.component.html", "diffHunk": "@@ -53,7 +53,9 @@ <h4 jhiTranslate=\"artemisApp.fileUploadAssessment.dashboard.heading\" [translateV\n                         </ng-container>\n                     </td>\n                     <td>\n-                        <span *ngIf=\"submission.result && submission.result.score != null\">{{ submission.result.score }} %</span>\n+                        <span *ngIf=\"getLatestSubmissionResult(submission) && getLatestSubmissionResult(submission)!.score != null\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzNDY1Mw=="}, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyNzc1Nw==", "bodyText": "The refactoring of the function calls within the HTML will be done in a followup PR next week!", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r541127757", "createdAt": "2020-12-11T18:00:25Z", "author": {"login": "nicolasruscher"}, "path": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment-dashboard.component.html", "diffHunk": "@@ -53,7 +53,9 @@ <h4 jhiTranslate=\"artemisApp.fileUploadAssessment.dashboard.heading\" [translateV\n                         </ng-container>\n                     </td>\n                     <td>\n-                        <span *ngIf=\"submission.result && submission.result.score != null\">{{ submission.result.score }} %</span>\n+                        <span *ngIf=\"getLatestSubmissionResult(submission) && getLatestSubmissionResult(submission)!.score != null\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzNDY1Mw=="}, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjMxMjI4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment-dashboard.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDoxMDoyNlrOICWgPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODowMzoxN1rOIED6zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzNjc2NA==", "bodyText": "wuuut :D", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539336764", "createdAt": "2020-12-09T14:10:26Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment-dashboard.component.ts", "diffHunk": "@@ -23,6 +23,7 @@ export class FileUploadAssessmentDashboardComponent implements OnInit {\n     busy = false;\n     predicate = 'id';\n     reverse = false;\n+    getLatestSubmissionResult = getLatestSubmissionResult;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyOTQyMA==", "bodyText": "This is used as a workaround to make the function available within the HTML. This will be gone once the refactoring is done next week!", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r541129420", "createdAt": "2020-12-11T18:03:17Z", "author": {"login": "nicolasruscher"}, "path": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment-dashboard.component.ts", "diffHunk": "@@ -23,6 +23,7 @@ export class FileUploadAssessmentDashboardComponent implements OnInit {\n     busy = false;\n     predicate = 'id';\n     reverse = false;\n+    getLatestSubmissionResult = getLatestSubmissionResult;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzNjc2NA=="}, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjMxNDU3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment-dashboard.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDoxMDo1MlrOICWhow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDoxMDo1MlrOICWhow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzNzEyMw==", "bodyText": "Please save the result in a local variable", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539337123", "createdAt": "2020-12-09T14:10:52Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/file-upload/assess/file-upload-assessment-dashboard.component.ts", "diffHunk": "@@ -73,11 +74,11 @@ export class FileUploadAssessmentDashboardComponent implements OnInit {\n                 .pipe(\n                     map((response: HttpResponse<FileUploadSubmission[]>) =>\n                         response.body!.map((submission: FileUploadSubmission) => {\n-                            if (submission.result) {\n+                            if (getLatestSubmissionResult(submission)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjMyMTAxOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/file-upload/participate/file-upload-submission.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDoxMjowMFrOICWlWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDoxMjowMFrOICWlWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzODA3Mw==", "bodyText": "Please save the result in a local/global variable", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539338073", "createdAt": "2020-12-09T14:12:00Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/file-upload/participate/file-upload-submission.component.ts", "diffHunk": "@@ -74,16 +75,16 @@ export class FileUploadSubmissionComponent implements OnInit, ComponentCanDeacti\n         this.fileUploadSubmissionService.getDataForFileUploadEditor(participationId).subscribe(\n             (submission: FileUploadSubmission) => {\n                 // reconnect participation <--> result\n-                if (submission.result) {\n-                    submission.participation!.results = [submission.result];\n+                if (getLatestSubmissionResult(submission)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjMyNjMwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-dashboard.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDoxMzowNlrOICWojQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDoxOToxOFrOICW8MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzODg5Mw==", "bodyText": "Please save the result in a global variable and change it also in the html accordingly", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539338893", "createdAt": "2020-12-09T14:13:06Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-dashboard.component.ts", "diffHunk": "@@ -116,18 +117,20 @@ export class ModelingAssessmentDashboardComponent implements OnInit, OnDestroy {\n                 // the server should have filtered these submissions already\n                 this.submissions = res.body!.filter((submission) => submission.submitted);\n                 this.submissions.forEach((submission) => {\n-                    if (submission.result) {\n+                    if (getLatestSubmissionResult(submission)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM0MzkyMA==", "bodyText": "This is a reoccurring thing, so check also the other parts where getLatestSubmissionResult is used :)", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539343920", "createdAt": "2020-12-09T14:19:18Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-dashboard.component.ts", "diffHunk": "@@ -116,18 +117,20 @@ export class ModelingAssessmentDashboardComponent implements OnInit, OnDestroy {\n                 // the server should have filtered these submissions already\n                 this.submissions = res.body!.filter((submission) => submission.submitted);\n                 this.submissions.forEach((submission) => {\n-                    if (submission.result) {\n+                    if (getLatestSubmissionResult(submission)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzODg5Mw=="}, "originalCommit": {"oid": "0610ea45db116c7c60ee831b29c81c1b8b6af9e3"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODM4Mzk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/Result.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMToxNDo1OVrOICpyKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDowNjowOFrOIDxygg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1MjY1MQ==", "bodyText": "Should the comment be removed since you renamed the ignored property?", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539652651", "createdAt": "2020-12-09T21:14:59Z", "author": {"login": "ivanchimeno"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Result.java", "diffHunk": "@@ -79,7 +79,7 @@\n     @ManyToOne(fetch = FetchType.LAZY)\n     @JsonView(QuizView.Before.class)\n     // TODO: rename ignored property to \"results\" after change in client", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgzMjM4Ng==", "bodyText": "Yes, we removed it", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r540832386", "createdAt": "2020-12-11T10:06:08Z", "author": {"login": "SimonEntholzer"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Result.java", "diffHunk": "@@ -79,7 +79,7 @@\n     @ManyToOne(fetch = FetchType.LAZY)\n     @JsonView(QuizView.Before.class)\n     // TODO: rename ignored property to \"results\" after change in client", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY1MjY1MQ=="}, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODQ1MjQ3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exam/participate/exam-participation.service.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMTozMToxOFrOICqZ7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzo1ODo0OFrOIEDwfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2MjgzMA==", "bodyText": "Quick question: isn't !!getLatestSubmissionResult(submission) the same as getLatestSubmissionResult(submission) (so that we can simply omit the !!)?", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539662830", "createdAt": "2020-12-09T21:31:18Z", "author": {"login": "ivanchimeno"}, "path": "src/main/webapp/app/exam/participate/exam-participation.service.ts", "diffHunk": "@@ -129,9 +130,10 @@ export class ExamParticipationService {\n                     if (!!participation.submissions) {\n                         for (const submission of participation.submissions) {\n                             delete submission.participation;\n-                            if (!!submission.result) {\n-                                delete submission.result.participation;\n-                                delete submission.result.submission;\n+                            if (!!getLatestSubmissionResult(submission)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgyNDU1MA==", "bodyText": "In theory !! forces the expression to evaluate to a boolean, so that is likely the reason it is used here.", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r540824550", "createdAt": "2020-12-11T09:53:44Z", "author": {"login": "FrankeLukas"}, "path": "src/main/webapp/app/exam/participate/exam-participation.service.ts", "diffHunk": "@@ -129,9 +130,10 @@ export class ExamParticipationService {\n                     if (!!participation.submissions) {\n                         for (const submission of participation.submissions) {\n                             delete submission.participation;\n-                            if (!!submission.result) {\n-                                delete submission.result.participation;\n-                                delete submission.result.submission;\n+                            if (!!getLatestSubmissionResult(submission)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2MjgzMA=="}, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyNjc4Mg==", "bodyText": "As @FrankeLukas stated correctly, we enforce an evaluation as a boolean :)", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r541126782", "createdAt": "2020-12-11T17:58:48Z", "author": {"login": "nicolasruscher"}, "path": "src/main/webapp/app/exam/participate/exam-participation.service.ts", "diffHunk": "@@ -129,9 +130,10 @@ export class ExamParticipationService {\n                     if (!!participation.submissions) {\n                         for (const submission of participation.submissions) {\n                             delete submission.participation;\n-                            if (!!submission.result) {\n-                                delete submission.result.participation;\n-                                delete submission.result.submission;\n+                            if (!!getLatestSubmissionResult(submission)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2MjgzMA=="}, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODQ1OTc2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMTozMjo1OFrOICqeGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzo1NzozMlrOIEDtvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2Mzg5Nw==", "bodyText": "@fde312 mentioned below that it might be better to refactor that into a variable so that we avoid long html", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539663897", "createdAt": "2020-12-09T21:32:58Z", "author": {"login": "ivanchimeno"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "diffHunk": "@@ -37,7 +37,7 @@ <h2>\n                     <td>{{ submission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n                     <td>{{ submission.participation.submissions?.length }}</td>\n                     <td>\n-                        <span *ngIf=\"submission.result.score != null\">{{ submission.result.score }}%</span>\n+                        <span *ngIf=\"getLatestSubmissionResult(submission)!.score != null\">{{ getLatestSubmissionResult(submission)!.score }}%</span>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyNjA3Nw==", "bodyText": "Yes thats right, thanks! We will refactor that in a followup PR next week.", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r541126077", "createdAt": "2020-12-11T17:57:32Z", "author": {"login": "nicolasruscher"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "diffHunk": "@@ -37,7 +37,7 @@ <h2>\n                     <td>{{ submission.submissionDate | date: 'MMM d, y HH:mm:ss' }}</td>\n                     <td>{{ submission.participation.submissions?.length }}</td>\n                     <td>\n-                        <span *ngIf=\"submission.result.score != null\">{{ submission.result.score }}%</span>\n+                        <span *ngIf=\"getLatestSubmissionResult(submission)!.score != null\">{{ getLatestSubmissionResult(submission)!.score }}%</span>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2Mzg5Nw=="}, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODQ2MDI2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMTozMzowN1rOICqebQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMTozMzowN1rOICqebQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2Mzk4MQ==", "bodyText": "@fde312 mentioned below that it might be better to refactor that into a variable so that we avoid long html", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539663981", "createdAt": "2020-12-09T21:33:07Z", "author": {"login": "ivanchimeno"}, "path": "src/main/webapp/app/assessment/assessment-locks/assessment-locks.component.html", "diffHunk": "@@ -57,7 +57,11 @@ <h2>\n                             </button>\n                         </span>\n                         <span>\n-                            <button *ngIf=\"!submission.result.completionDate\" (click)=\"cancelAssessment(submission)\" class=\"btn btn-outline-secondary btn-sm mb-1\">\n+                            <button\n+                                *ngIf=\"!getLatestSubmissionResult(submission)!.completionDate\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODY5NjE2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/entities/submission.model.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjozMzozN1rOICsmhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzo1MTo0MFrOIEDgaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5ODgyMg==", "bodyText": "You are saying that submission could be undefined but here your are asserting that submission is not undefined with the !.", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539698822", "createdAt": "2020-12-09T22:33:37Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/entities/submission.model.ts", "diffHunk": "@@ -40,3 +40,58 @@ export abstract class Submission implements BaseEntity {\n         this.submitted = false; // default value\n     }\n }\n+\n+/**\n+ * Used to access the correct submissions result\n+ *\n+ * @param submission\n+ */\n+export function getLatestSubmissionResult(submission: Submission | undefined): Result | undefined {\n+    checkForResultsLength(submission);\n+    if (submission?.results) {\n+        const length = submission.results.length;\n+        if (length > 0) {\n+            return submission.results[length - 1];\n+        }\n+    }\n+}\n+\n+/**\n+ * Used to set the correct submissions result\n+ *\n+ * @param submission\n+ * @param result\n+ *\n+ * @return the index of the latestSubmissionResult or undefined if any of the params was undefined\n+ */\n+export function setLatestSubmissionResult(submission: Submission | undefined, result: Result | undefined): number | undefined {\n+    checkForResultsLength(submission);\n+\n+    if (!submission || !result) {\n+        return undefined;\n+    }\n+\n+    if (submission.results) {\n+        submission.results[submission.results.length - 1] = result;\n+    } else {\n+        submission.results = [result];\n+    }\n+    return submission.results.length - 1;\n+}\n+\n+export function getFirstResult(submission: Submission | undefined): Result | undefined {\n+    checkForResultsLength(submission);\n+    if (submission?.results) {\n+        const length = submission.results.length;\n+        if (length > 0) {\n+            return submission.results[0];\n+        }\n+    }\n+}\n+\n+// todo NR/SE: remove after PR can be merged into develop\n+function checkForResultsLength(submission: Submission | undefined) {\n+    if (submission!.results && submission!.results?.length > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyMjY2NA==", "bodyText": "We fixed this with the new commits.", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r541122664", "createdAt": "2020-12-11T17:51:40Z", "author": {"login": "nicolasruscher"}, "path": "src/main/webapp/app/entities/submission.model.ts", "diffHunk": "@@ -40,3 +40,58 @@ export abstract class Submission implements BaseEntity {\n         this.submitted = false; // default value\n     }\n }\n+\n+/**\n+ * Used to access the correct submissions result\n+ *\n+ * @param submission\n+ */\n+export function getLatestSubmissionResult(submission: Submission | undefined): Result | undefined {\n+    checkForResultsLength(submission);\n+    if (submission?.results) {\n+        const length = submission.results.length;\n+        if (length > 0) {\n+            return submission.results[length - 1];\n+        }\n+    }\n+}\n+\n+/**\n+ * Used to set the correct submissions result\n+ *\n+ * @param submission\n+ * @param result\n+ *\n+ * @return the index of the latestSubmissionResult or undefined if any of the params was undefined\n+ */\n+export function setLatestSubmissionResult(submission: Submission | undefined, result: Result | undefined): number | undefined {\n+    checkForResultsLength(submission);\n+\n+    if (!submission || !result) {\n+        return undefined;\n+    }\n+\n+    if (submission.results) {\n+        submission.results[submission.results.length - 1] = result;\n+    } else {\n+        submission.results = [result];\n+    }\n+    return submission.results.length - 1;\n+}\n+\n+export function getFirstResult(submission: Submission | undefined): Result | undefined {\n+    checkForResultsLength(submission);\n+    if (submission?.results) {\n+        const length = submission.results.length;\n+        if (length > 0) {\n+            return submission.results[0];\n+        }\n+    }\n+}\n+\n+// todo NR/SE: remove after PR can be merged into develop\n+function checkForResultsLength(submission: Submission | undefined) {\n+    if (submission!.results && submission!.results?.length > 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5ODgyMg=="}, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODcwMTU2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/entities/submission.model.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjozNTowN1rOICspkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzo1MjowN1rOIEDhZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5OTYwMg==", "bodyText": "What is the correct submissions result?", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539699602", "createdAt": "2020-12-09T22:35:07Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/entities/submission.model.ts", "diffHunk": "@@ -40,3 +40,58 @@ export abstract class Submission implements BaseEntity {\n         this.submitted = false; // default value\n     }\n }\n+\n+/**\n+ * Used to access the correct submissions result\n+ *\n+ * @param submission\n+ */\n+export function getLatestSubmissionResult(submission: Submission | undefined): Result | undefined {\n+    checkForResultsLength(submission);\n+    if (submission?.results) {\n+        const length = submission.results.length;\n+        if (length > 0) {\n+            return submission.results[length - 1];\n+        }\n+    }\n+}\n+\n+/**\n+ * Used to set the correct submissions result", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcwNjcxNg==", "bodyText": "I think this needs a little more elaboration :)", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539706716", "createdAt": "2020-12-09T22:49:06Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/entities/submission.model.ts", "diffHunk": "@@ -40,3 +40,58 @@ export abstract class Submission implements BaseEntity {\n         this.submitted = false; // default value\n     }\n }\n+\n+/**\n+ * Used to access the correct submissions result\n+ *\n+ * @param submission\n+ */\n+export function getLatestSubmissionResult(submission: Submission | undefined): Result | undefined {\n+    checkForResultsLength(submission);\n+    if (submission?.results) {\n+        const length = submission.results.length;\n+        if (length > 0) {\n+            return submission.results[length - 1];\n+        }\n+    }\n+}\n+\n+/**\n+ * Used to set the correct submissions result", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5OTYwMg=="}, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyMjkxOQ==", "bodyText": "This should also be fixed now.", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r541122919", "createdAt": "2020-12-11T17:52:07Z", "author": {"login": "nicolasruscher"}, "path": "src/main/webapp/app/entities/submission.model.ts", "diffHunk": "@@ -40,3 +40,58 @@ export abstract class Submission implements BaseEntity {\n         this.submitted = false; // default value\n     }\n }\n+\n+/**\n+ * Used to access the correct submissions result\n+ *\n+ * @param submission\n+ */\n+export function getLatestSubmissionResult(submission: Submission | undefined): Result | undefined {\n+    checkForResultsLength(submission);\n+    if (submission?.results) {\n+        const length = submission.results.length;\n+        if (length > 0) {\n+            return submission.results[length - 1];\n+        }\n+    }\n+}\n+\n+/**\n+ * Used to set the correct submissions result", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5OTYwMg=="}, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODc1NjU5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/entities/submission.model.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjo1MToxNFrOICtJSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjo1MToxNFrOICtJSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcwNzcyMg==", "bodyText": "What happens with an empty array? Then you would set submission.results[-1] = result", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r539707722", "createdAt": "2020-12-09T22:51:14Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/entities/submission.model.ts", "diffHunk": "@@ -40,3 +40,58 @@ export abstract class Submission implements BaseEntity {\n         this.submitted = false; // default value\n     }\n }\n+\n+/**\n+ * Used to access the correct submissions result\n+ *\n+ * @param submission\n+ */\n+export function getLatestSubmissionResult(submission: Submission | undefined): Result | undefined {\n+    checkForResultsLength(submission);\n+    if (submission?.results) {\n+        const length = submission.results.length;\n+        if (length > 0) {\n+            return submission.results[length - 1];\n+        }\n+    }\n+}\n+\n+/**\n+ * Used to set the correct submissions result\n+ *\n+ * @param submission\n+ * @param result\n+ *\n+ * @return the index of the latestSubmissionResult or undefined if any of the params was undefined\n+ */\n+export function setLatestSubmissionResult(submission: Submission | undefined, result: Result | undefined): number | undefined {\n+    checkForResultsLength(submission);\n+\n+    if (!submission || !result) {\n+        return undefined;\n+    }\n+\n+    if (submission.results) {\n+        submission.results[submission.results.length - 1] = result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc599e5bfaf04c2b194b48ea71030c92cca4c92"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NjYwMjQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMDo0MjozNFrOIDzJ_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODoyNzo1OFrOIEEydA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NDc4Mg==", "bodyText": "It looks like this is mostly/only used for clearing results. Wouldn't it make more sense to add a dedicated clear method? (This way we also don't allocate a new ArrayList each time we just want to throw the old results away.)", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r540854782", "createdAt": "2020-12-11T10:42:34Z", "author": {"login": "FrankeLukas"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -128,33 +133,19 @@ public Result getFirstResult() {\n         return null;\n     }\n \n-    // TODO NR, SE: remove redundant setter after relationship change on client. Currently we need two deserializing setters for \"result\" (client) and \"results\" (server)\n-    @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResult(Result result) {\n-        this.setResults(result);\n-    }\n-\n-    // TODO Ruscher, Entholzer: refactor to addResult\n     /**\n-     * custom setter that supports the migration from 1...1 to 1...* in the submission->result(s) relationship\n-     * Will be refactore in the future\n-     * @param result the result that should be added, in case this is null, an empty list will be used instead\n+     * Used as a setResult method, as typically the latest result is used\n+     *\n+     * @param result\n      */\n-    @JsonProperty(value = \"results\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResults(Result result) {\n-        if (result == null) {\n-            // clear the list of results\n-            this.results = new ArrayList<>();\n-        }\n-        else {\n-            // addResult\n-            this.results.add(result);\n-        }\n+    public void addResult(Result result) {\n+        this.results.add(result);\n+        // At the moment only one result in results is allowed\n+        assert results.size() < 2;\n     }\n \n-    // TODO Ruscher, Entholzer: refactor to setResults\n-    @JsonIgnore()\n-    public void setResultsList(List<Result> results) {\n+    @JsonProperty(value = \"results\", access = JsonProperty.Access.WRITE_ONLY)\n+    public void setResults(List<Result> results) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c9f2e2521c047ad8320f68b9c36b2d0a396df51"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyNTA2MA==", "bodyText": "Yes for now its only used for that, but the method will be used for the upcoming multi correction feature, therefore we should keep the name for now.", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r541125060", "createdAt": "2020-12-11T17:55:46Z", "author": {"login": "nicolasruscher"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -128,33 +133,19 @@ public Result getFirstResult() {\n         return null;\n     }\n \n-    // TODO NR, SE: remove redundant setter after relationship change on client. Currently we need two deserializing setters for \"result\" (client) and \"results\" (server)\n-    @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResult(Result result) {\n-        this.setResults(result);\n-    }\n-\n-    // TODO Ruscher, Entholzer: refactor to addResult\n     /**\n-     * custom setter that supports the migration from 1...1 to 1...* in the submission->result(s) relationship\n-     * Will be refactore in the future\n-     * @param result the result that should be added, in case this is null, an empty list will be used instead\n+     * Used as a setResult method, as typically the latest result is used\n+     *\n+     * @param result\n      */\n-    @JsonProperty(value = \"results\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResults(Result result) {\n-        if (result == null) {\n-            // clear the list of results\n-            this.results = new ArrayList<>();\n-        }\n-        else {\n-            // addResult\n-            this.results.add(result);\n-        }\n+    public void addResult(Result result) {\n+        this.results.add(result);\n+        // At the moment only one result in results is allowed\n+        assert results.size() < 2;\n     }\n \n-    // TODO Ruscher, Entholzer: refactor to setResults\n-    @JsonIgnore()\n-    public void setResultsList(List<Result> results) {\n+    @JsonProperty(value = \"results\", access = JsonProperty.Access.WRITE_ONLY)\n+    public void setResults(List<Result> results) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NDc4Mg=="}, "originalCommit": {"oid": "4c9f2e2521c047ad8320f68b9c36b2d0a396df51"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE0MzY2OA==", "bodyText": "I was more trying to suggest creating a new method which is just used for clearing. Or will clearing get obsolete once we have multi correction?", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r541143668", "createdAt": "2020-12-11T18:27:58Z", "author": {"login": "FrankeLukas"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -128,33 +133,19 @@ public Result getFirstResult() {\n         return null;\n     }\n \n-    // TODO NR, SE: remove redundant setter after relationship change on client. Currently we need two deserializing setters for \"result\" (client) and \"results\" (server)\n-    @JsonProperty(value = \"result\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResult(Result result) {\n-        this.setResults(result);\n-    }\n-\n-    // TODO Ruscher, Entholzer: refactor to addResult\n     /**\n-     * custom setter that supports the migration from 1...1 to 1...* in the submission->result(s) relationship\n-     * Will be refactore in the future\n-     * @param result the result that should be added, in case this is null, an empty list will be used instead\n+     * Used as a setResult method, as typically the latest result is used\n+     *\n+     * @param result\n      */\n-    @JsonProperty(value = \"results\", access = JsonProperty.Access.WRITE_ONLY)\n-    public void setResults(Result result) {\n-        if (result == null) {\n-            // clear the list of results\n-            this.results = new ArrayList<>();\n-        }\n-        else {\n-            // addResult\n-            this.results.add(result);\n-        }\n+    public void addResult(Result result) {\n+        this.results.add(result);\n+        // At the moment only one result in results is allowed\n+        assert results.size() < 2;\n     }\n \n-    // TODO Ruscher, Entholzer: refactor to setResults\n-    @JsonIgnore()\n-    public void setResultsList(List<Result> results) {\n+    @JsonProperty(value = \"results\", access = JsonProperty.Access.WRITE_ONLY)\n+    public void setResults(List<Result> results) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg1NDc4Mg=="}, "originalCommit": {"oid": "4c9f2e2521c047ad8320f68b9c36b2d0a396df51"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODMyMzk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzozMDoyMVrOIECuMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzo0NjozMVrOIEDUeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwOTgwOQ==", "bodyText": "I have never seen this in production java code before. I also found this online. Could you maybe throw a normal Exception here? Or is there a specific reason you used assert here that I miss.\nhttps://en.wikibooks.org/wiki/Java_Programming/Keywords/assert#:~:text=assert%20is%20a%20Java%20keyword,runtime%20system%20throws%20an%20AssertionError%20.\nAssertions are usually used as a debugging aid. They should not be used instead of validating arguments to public methods, or in place of a more precise runtime error exception.", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r541109809", "createdAt": "2020-12-11T17:30:21Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -138,13 +138,9 @@ public Result getFirstResult() {\n      *\n      * @param result\n      */\n-    public void replaceLatestOrIfEmptyAddResult(Result result) {\n-        if (this.results.isEmpty()) {\n-            this.results.add(result);\n-        }\n-        else {\n-            results.set(results.size() - 1, result);\n-        }\n+    public void addResult(Result result) {\n+        this.results.add(result);\n+        // At the moment only one result in results is allowed\n         assert results.size() < 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a1d84900e793a1689c8879d6601acd5a529cd7"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTExOTYxMA==", "bodyText": "We changed it to throw an Exception. This check will be removed later, as with second corrections enabled we will need longer Submission.results lists.", "url": "https://github.com/ls1intum/Artemis/pull/2507#discussion_r541119610", "createdAt": "2020-12-11T17:46:31Z", "author": {"login": "SimonEntholzer"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Submission.java", "diffHunk": "@@ -138,13 +138,9 @@ public Result getFirstResult() {\n      *\n      * @param result\n      */\n-    public void replaceLatestOrIfEmptyAddResult(Result result) {\n-        if (this.results.isEmpty()) {\n-            this.results.add(result);\n-        }\n-        else {\n-            results.set(results.size() - 1, result);\n-        }\n+    public void addResult(Result result) {\n+        this.results.add(result);\n+        // At the moment only one result in results is allowed\n         assert results.size() < 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwOTgwOQ=="}, "originalCommit": {"oid": "c6a1d84900e793a1689c8879d6601acd5a529cd7"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4302, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}