{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNjMwMDE2", "number": 1755, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjowNTowM1rOEJ2O_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMDoxNDozM1rOEKpaRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzYxMjEzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjowNTowM1rOGqj2ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwOTo1MjoxN1rOGq03LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI4MDgwMw==", "bodyText": "you could also check if it is already over so that its only between start and due date.", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r447280803", "createdAt": "2020-06-29T22:05:03Z", "author": {"login": "filip-gregurevic"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -126,4 +158,11 @@ export class NavbarComponent implements OnInit, OnDestroy {\n             }\n         }\n     }\n+\n+    /**\n+     * check if exam already started\n+     */\n+    examHasStarted(exam: Exam): boolean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c5907e4d664c120344f0a9c407f506aea6c2441"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU1OTQ2OQ==", "bodyText": "makes total sense, thanks \ud83d\udc4d", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r447559469", "createdAt": "2020-06-30T09:52:17Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -126,4 +158,11 @@ export class NavbarComponent implements OnInit, OnDestroy {\n             }\n         }\n     }\n+\n+    /**\n+     * check if exam already started\n+     */\n+    examHasStarted(exam: Exam): boolean {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI4MDgwMw=="}, "originalCommit": {"oid": "1c5907e4d664c120344f0a9c407f506aea6c2441"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTgyMTI0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMTo0MjowMVrOGq4bjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMTo1NjozN1rOGq447A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYxNzkzMg==", "bodyText": "Instead of passing it to each method you could just check this.exam since it is the object which you pass to them, otherwise the code looks good to me \ud83d\udc4d", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r447617932", "createdAt": "2020-06-30T11:42:01Z", "author": {"login": "filip-gregurevic"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -126,4 +154,25 @@ export class NavbarComponent implements OnInit, OnDestroy {\n             }\n         }\n     }\n+\n+    /**\n+     * check if exam already started\n+     */\n+    examHasStarted(exam?: Exam): boolean {\n+        return exam?.startDate ? exam.startDate.isBefore(this.serverDateService.now()) : false;\n+    }\n+\n+    /**\n+     * check if exam is over\n+     */\n+    examIsOver(exam?: Exam): boolean {\n+        return exam?.endDate ? exam.endDate.isBefore(this.serverDateService.now()) : true;\n+    }\n+\n+    /**\n+     * check if exam mode is active\n+     */\n+    examModeActive(exam?: Exam): boolean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c753ae6b91d8689ce97c9a2fe02bf70d62bae82f"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYyNTQ1Mg==", "bodyText": "done \ud83d\ude0a", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r447625452", "createdAt": "2020-06-30T11:56:37Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -126,4 +154,25 @@ export class NavbarComponent implements OnInit, OnDestroy {\n             }\n         }\n     }\n+\n+    /**\n+     * check if exam already started\n+     */\n+    examHasStarted(exam?: Exam): boolean {\n+        return exam?.startDate ? exam.startDate.isBefore(this.serverDateService.now()) : false;\n+    }\n+\n+    /**\n+     * check if exam is over\n+     */\n+    examIsOver(exam?: Exam): boolean {\n+        return exam?.endDate ? exam.endDate.isBefore(this.serverDateService.now()) : true;\n+    }\n+\n+    /**\n+     * check if exam mode is active\n+     */\n+    examModeActive(exam?: Exam): boolean {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzYxNzkzMg=="}, "originalCommit": {"oid": "c753ae6b91d8689ce97c9a2fe02bf70d62bae82f"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDM2NjM0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMzo1Nzo0M1rOGq9qgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDoxMzo0M1rOGq-abg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwMzY4Mw==", "bodyText": "Just out of interest. Why do you put it on the a element and not on the li element?", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r447703683", "createdAt": "2020-06-30T13:57:43Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.html", "diffHunk": "@@ -37,7 +37,7 @@\n                 routerLinkActive=\"active\"\n                 [routerLinkActiveOptions]=\"{ exact: true }\"\n             >\n-                <a class=\"guided-tour-course-admin nav-link\" routerLink=\"course-management\" (click)=\"collapseNavbar()\" id=\"course-admin-menu\">\n+                <a *ngIf=\"!examModeActive()\" class=\"guided-tour-course-admin nav-link\" routerLink=\"course-management\" (click)=\"collapseNavbar()\" id=\"course-admin-menu\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92e227db2a426b988588242406f977894227bb55"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcxNTk1MA==", "bodyText": "because Angular doesn\u00b4t like two *-attributes on the same element \ud83d\ude04", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r447715950", "createdAt": "2020-06-30T14:13:43Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.html", "diffHunk": "@@ -37,7 +37,7 @@\n                 routerLinkActive=\"active\"\n                 [routerLinkActiveOptions]=\"{ exact: true }\"\n             >\n-                <a class=\"guided-tour-course-admin nav-link\" routerLink=\"course-management\" (click)=\"collapseNavbar()\" id=\"course-admin-menu\">\n+                <a *ngIf=\"!examModeActive()\" class=\"guided-tour-course-admin nav-link\" routerLink=\"course-management\" (click)=\"collapseNavbar()\" id=\"course-admin-menu\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwMzY4Mw=="}, "originalCommit": {"oid": "92e227db2a426b988588242406f977894227bb55"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDM5NDA0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDowMzoyMFrOGq97wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNzo0Mzo1MlrOGrallA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwODA5Ng==", "bodyText": "I am not an Angular Expert but this whole part seems extremely brittle. Anybody got an idea how to do this whole part in a more robust way than regexing and splitting?", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r447708096", "createdAt": "2020-06-30T14:03:20Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -64,12 +73,31 @@ export class NavbarComponent implements OnInit, OnDestroy {\n             .getAuthenticationState()\n             .pipe(tap((user: User) => (this.currAccount = user)))\n             .subscribe();\n+\n+        this.routerEventSubscription = this.router.events.subscribe((event) => {\n+            if (event instanceof NavigationEnd) {\n+                this.exam = undefined;\n+                const examRoute = new RegExp('exams/[0-9]');\n+                if (examRoute.test(event.url) && !event.url.includes('management')) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92e227db2a426b988588242406f977894227bb55"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcxOTk1MA==", "bodyText": "usually you can access the parameters by using\nthis.route.params.subscribe((params) => { courseId = params['courseId']); examId = params['examId']); });\nbut that didn\u00b4t work for me, this way both IDs remained undefined, no matter what..\npossibly due to being inside the router event subscription, idk..", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r447719950", "createdAt": "2020-06-30T14:18:50Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -64,12 +73,31 @@ export class NavbarComponent implements OnInit, OnDestroy {\n             .getAuthenticationState()\n             .pipe(tap((user: User) => (this.currAccount = user)))\n             .subscribe();\n+\n+        this.routerEventSubscription = this.router.events.subscribe((event) => {\n+            if (event instanceof NavigationEnd) {\n+                this.exam = undefined;\n+                const examRoute = new RegExp('exams/[0-9]');\n+                if (examRoute.test(event.url) && !event.url.includes('management')) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwODA5Ng=="}, "originalCommit": {"oid": "92e227db2a426b988588242406f977894227bb55"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgxNTEzMw==", "bodyText": "Following this Article How To Get Route Path Parameters In Non-Routed Angular Components \ud83e\udd80. this should be possible in a slightly nicer way.", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r447815133", "createdAt": "2020-06-30T16:24:33Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -64,12 +73,31 @@ export class NavbarComponent implements OnInit, OnDestroy {\n             .getAuthenticationState()\n             .pipe(tap((user: User) => (this.currAccount = user)))\n             .subscribe();\n+\n+        this.routerEventSubscription = this.router.events.subscribe((event) => {\n+            if (event instanceof NavigationEnd) {\n+                this.exam = undefined;\n+                const examRoute = new RegExp('exams/[0-9]');\n+                if (examRoute.test(event.url) && !event.url.includes('management')) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwODA5Ng=="}, "originalCommit": {"oid": "92e227db2a426b988588242406f977894227bb55"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE3NzU1Ng==", "bodyText": "this works, thanks \ud83d\ude01", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r448177556", "createdAt": "2020-07-01T07:43:52Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -64,12 +73,31 @@ export class NavbarComponent implements OnInit, OnDestroy {\n             .getAuthenticationState()\n             .pipe(tap((user: User) => (this.currAccount = user)))\n             .subscribe();\n+\n+        this.routerEventSubscription = this.router.events.subscribe((event) => {\n+            if (event instanceof NavigationEnd) {\n+                this.exam = undefined;\n+                const examRoute = new RegExp('exams/[0-9]');\n+                if (examRoute.test(event.url) && !event.url.includes('management')) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwODA5Ng=="}, "originalCommit": {"oid": "92e227db2a426b988588242406f977894227bb55"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDQwMzM3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDowNToxOVrOGq-BgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDoxNTowM1rOGq-etQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwOTU2OQ==", "bodyText": "Activated Route is defined but never used", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r447709569", "createdAt": "2020-06-30T14:05:19Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -15,6 +15,10 @@ import { ParticipationWebsocketService } from 'app/overview/participation-websoc\n import { AccountService } from 'app/core/auth/account.service';\n import { ProfileService } from 'app/shared/layouts/profiles/profile.service';\n import { LoginService } from 'app/core/login/login.service';\n+import { Router, NavigationEnd, ActivatedRoute } from '@angular/router';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92e227db2a426b988588242406f977894227bb55"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcxNzA0NQ==", "bodyText": "good catch, thanks \ud83d\udc4d", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r447717045", "createdAt": "2020-06-30T14:15:03Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -15,6 +15,10 @@ import { ParticipationWebsocketService } from 'app/overview/participation-websoc\n import { AccountService } from 'app/core/auth/account.service';\n import { ProfileService } from 'app/shared/layouts/profiles/profile.service';\n import { LoginService } from 'app/core/login/login.service';\n+import { Router, NavigationEnd, ActivatedRoute } from '@angular/router';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwOTU2OQ=="}, "originalCommit": {"oid": "92e227db2a426b988588242406f977894227bb55"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTAyODM4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjoxNjo0MVrOGrEFYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwODowNDoyNFrOGrbQ9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgwODg2NA==", "bodyText": "Can this be done in one check? (something like this?)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * check if exam already started\n          \n          \n            \n                 */\n          \n          \n            \n                examHasStarted(): boolean {\n          \n          \n            \n                    return this.exam?.startDate ? this.exam.startDate.isBefore(this.serverDateService.now()) : false;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * check if exam is over\n          \n          \n            \n                 */\n          \n          \n            \n                examIsOver(): boolean {\n          \n          \n            \n                    return this.exam?.endDate ? this.exam.endDate.isBefore(this.serverDateService.now()) : true;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                /**\n          \n          \n            \n                 * check if exam mode is active\n          \n          \n            \n                 */\n          \n          \n            \n                examModeActive(): boolean {\n          \n          \n            \n                    return this.examHasStarted() && !this.examIsOver();\n          \n          \n            \n                /**\n          \n          \n            \n                 * check if exam mode is active\n          \n          \n            \n                 */\n          \n          \n            \n                get examModeActive(): boolean {\n          \n          \n            \n                    if (this.exam && this.exam.startDate && this.exam.endDate) {\n          \n          \n            \n                        return this.serverDateService.now().isBetween(this.exam.startDate, this.exam.endDate);\n          \n          \n            \n                    }\n          \n          \n            \n                    return false;\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\n(Also, this could maybe be a getter.)", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r447808864", "createdAt": "2020-06-30T16:16:41Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -126,4 +154,25 @@ export class NavbarComponent implements OnInit, OnDestroy {\n             }\n         }\n     }\n+\n+    /**\n+     * check if exam already started\n+     */\n+    examHasStarted(): boolean {\n+        return this.exam?.startDate ? this.exam.startDate.isBefore(this.serverDateService.now()) : false;\n+    }\n+\n+    /**\n+     * check if exam is over\n+     */\n+    examIsOver(): boolean {\n+        return this.exam?.endDate ? this.exam.endDate.isBefore(this.serverDateService.now()) : true;\n+    }\n+\n+    /**\n+     * check if exam mode is active\n+     */\n+    examModeActive(): boolean {\n+        return this.examHasStarted() && !this.examIsOver();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80bf4f974e6a81896a376c06780d8220de1f8997"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4MDA0MA==", "bodyText": "yeah sure, this seems really good, thanks :)", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r448180040", "createdAt": "2020-07-01T07:48:25Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -126,4 +154,25 @@ export class NavbarComponent implements OnInit, OnDestroy {\n             }\n         }\n     }\n+\n+    /**\n+     * check if exam already started\n+     */\n+    examHasStarted(): boolean {\n+        return this.exam?.startDate ? this.exam.startDate.isBefore(this.serverDateService.now()) : false;\n+    }\n+\n+    /**\n+     * check if exam is over\n+     */\n+    examIsOver(): boolean {\n+        return this.exam?.endDate ? this.exam.endDate.isBefore(this.serverDateService.now()) : true;\n+    }\n+\n+    /**\n+     * check if exam mode is active\n+     */\n+    examModeActive(): boolean {\n+        return this.examHasStarted() && !this.examIsOver();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgwODg2NA=="}, "originalCommit": {"oid": "80bf4f974e6a81896a376c06780d8220de1f8997"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE4ODY2Mg==", "bodyText": "the getter part didn\u00b4t work though", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r448188662", "createdAt": "2020-07-01T08:04:24Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -126,4 +154,25 @@ export class NavbarComponent implements OnInit, OnDestroy {\n             }\n         }\n     }\n+\n+    /**\n+     * check if exam already started\n+     */\n+    examHasStarted(): boolean {\n+        return this.exam?.startDate ? this.exam.startDate.isBefore(this.serverDateService.now()) : false;\n+    }\n+\n+    /**\n+     * check if exam is over\n+     */\n+    examIsOver(): boolean {\n+        return this.exam?.endDate ? this.exam.endDate.isBefore(this.serverDateService.now()) : true;\n+    }\n+\n+    /**\n+     * check if exam mode is active\n+     */\n+    examModeActive(): boolean {\n+        return this.examHasStarted() && !this.examIsOver();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgwODg2NA=="}, "originalCommit": {"oid": "80bf4f974e6a81896a376c06780d8220de1f8997"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTk5Njg1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMDoxNDozM1rOGrz7fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODo1MjozMlrOGsZi7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5Mjc2Nw==", "bodyText": "Please do not load the exam from the server in the navbar! This is a really bad idea!!!\nAlso the method name is confusing, because the outer method only subscribes for router changes.\nOnly the inner one actually loads the exam, so I suggest to extract the inner method and rename the outer one!\nI would suggest that we add some kind of examService that holds the currently visible exams (they are e.g. loaded by the courses for dashboard REST call or when students navigate into the exam. This could then notify the navbar, when an exam is available. The navbar then does not need to load it from the server!", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r448592767", "createdAt": "2020-07-01T20:14:33Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -126,4 +141,40 @@ export class NavbarComponent implements OnInit, OnDestroy {\n             }\n         }\n     }\n+\n+    loadExamIfAvailable() {\n+        this.routerEventSubscription = this.router.events.pipe(filter((event: RouterEvent) => event instanceof NavigationEnd)).subscribe((event) => {\n+            this.exam = undefined;\n+            if (event.url.includes('exams') && !event.url.includes('management')) {\n+                const routePathParams = of(event).pipe(\n+                    map(() => this.route.root),\n+                    map((root) => root.firstChild),\n+                    switchMap((firstChild) => {\n+                        if (firstChild) {\n+                            return firstChild?.paramMap.pipe(map((paramMap) => [paramMap.get('courseId'), paramMap.get('examId')]));\n+                        } else {\n+                            return of(null);\n+                        }\n+                    }),\n+                );\n+                routePathParams.subscribe((param) => {\n+                    if (param !== null) {\n+                        if (param[0] !== null && param[1] !== null) {\n+                            this.examParticipationService.loadExam(+param[0], +param[1]).subscribe((loadedExam) => (this.exam = loadedExam));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6b2566811948e91c1d651958f949c65f2626cbe"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIwOTA2OQ==", "bodyText": "Refactored the code according to your suggestions \ud83d\ude0a\nPlease let me know whether the changes meet your expectations", "url": "https://github.com/ls1intum/Artemis/pull/1755#discussion_r449209069", "createdAt": "2020-07-02T18:52:32Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/shared/layouts/navbar/navbar.component.ts", "diffHunk": "@@ -126,4 +141,40 @@ export class NavbarComponent implements OnInit, OnDestroy {\n             }\n         }\n     }\n+\n+    loadExamIfAvailable() {\n+        this.routerEventSubscription = this.router.events.pipe(filter((event: RouterEvent) => event instanceof NavigationEnd)).subscribe((event) => {\n+            this.exam = undefined;\n+            if (event.url.includes('exams') && !event.url.includes('management')) {\n+                const routePathParams = of(event).pipe(\n+                    map(() => this.route.root),\n+                    map((root) => root.firstChild),\n+                    switchMap((firstChild) => {\n+                        if (firstChild) {\n+                            return firstChild?.paramMap.pipe(map((paramMap) => [paramMap.get('courseId'), paramMap.get('examId')]));\n+                        } else {\n+                            return of(null);\n+                        }\n+                    }),\n+                );\n+                routePathParams.subscribe((param) => {\n+                    if (param !== null) {\n+                        if (param[0] !== null && param[1] !== null) {\n+                            this.examParticipationService.loadExam(+param[0], +param[1]).subscribe((loadedExam) => (this.exam = loadedExam));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5Mjc2Nw=="}, "originalCommit": {"oid": "b6b2566811948e91c1d651958f949c65f2626cbe"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4935, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}