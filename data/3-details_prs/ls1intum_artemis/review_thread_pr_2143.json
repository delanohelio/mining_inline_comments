{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NjAwODk3", "number": 2143, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjoxNzoxNFrOEqY9hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzowNjo0OVrOEq86cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODg0NjEyOnYy", "diffSide": "RIGHT", "path": "docs/admin/registration.rst", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjoxNzoxNFrOHckXJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDowNzozN1rOHdIqXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcxNzkyNw==", "bodyText": "This line seems erroneous, as we don't expect a . in the domain, but allow any value.\nThis would e.g. allow the domain inAtum.de to register users.\nI believe this can be fixed be escaping the dot.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@(tum.de)|(in.tum.de)|(mytum.de)\n          \n          \n            \n                            allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@(tum\\.de)|(in\\.tum\\.de)|(mytum\\.de)", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r499717927", "createdAt": "2020-10-05T16:17:14Z", "author": {"login": "sleiss"}, "path": "docs/admin/registration.rst", "diffHunk": "@@ -0,0 +1,41 @@\n+Artemis supports user registration based on the Jhipster template.\n+User registration has to be enabled in one ``application-*.yml`` file and can be customized.\n+\n+Example:\n+\n+.. code:: yaml\n+\n+    artemis:\n+        user-management:\n+            use-external: false\n+            registration:\n+                enabled: true\n+                allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@(tum.de)|(in.tum.de)|(mytum.de)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczNjM3MA==", "bodyText": "You can test it on https://regexr.com/ btw", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r499736370", "createdAt": "2020-10-05T16:48:29Z", "author": {"login": "stefanwaldhauser"}, "path": "docs/admin/registration.rst", "diffHunk": "@@ -0,0 +1,41 @@\n+Artemis supports user registration based on the Jhipster template.\n+User registration has to be enabled in one ``application-*.yml`` file and can be customized.\n+\n+Example:\n+\n+.. code:: yaml\n+\n+    artemis:\n+        user-management:\n+            use-external: false\n+            registration:\n+                enabled: true\n+                allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@(tum.de)|(in.tum.de)|(mytum.de)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcxNzkyNw=="}, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczODY0Ng==", "bodyText": "I think it needs to be ([a-zA-Z0-9_\\-\\.\\+]+)@((tum\\.de)|(in\\.tum\\.de)|(mytum\\.de)) otherwise\nit will not match stefan.waldhauser@mytum.de but only the @mytum.de part", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r499738646", "createdAt": "2020-10-05T16:52:16Z", "author": {"login": "stefanwaldhauser"}, "path": "docs/admin/registration.rst", "diffHunk": "@@ -0,0 +1,41 @@\n+Artemis supports user registration based on the Jhipster template.\n+User registration has to be enabled in one ``application-*.yml`` file and can be customized.\n+\n+Example:\n+\n+.. code:: yaml\n+\n+    artemis:\n+        user-management:\n+            use-external: false\n+            registration:\n+                enabled: true\n+                allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@(tum.de)|(in.tum.de)|(mytum.de)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcxNzkyNw=="}, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMjY3MQ==", "bodyText": "fixed", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500312671", "createdAt": "2020-10-06T14:07:37Z", "author": {"login": "krusche"}, "path": "docs/admin/registration.rst", "diffHunk": "@@ -0,0 +1,41 @@\n+Artemis supports user registration based on the Jhipster template.\n+User registration has to be enabled in one ``application-*.yml`` file and can be customized.\n+\n+Example:\n+\n+.. code:: yaml\n+\n+    artemis:\n+        user-management:\n+            use-external: false\n+            registration:\n+                enabled: true\n+                allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@(tum.de)|(in.tum.de)|(mytum.de)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcxNzkyNw=="}, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODg4NTQxOnYy", "diffSide": "RIGHT", "path": "docs/admin/registration.rst", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjoyNzoyN1rOHckvmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDowNjo0MVrOHdInCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyNDE4NA==", "bodyText": "Actually, there is another flaw as it seems:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@(tum.de)|(in.tum.de)|(mytum.de)\n          \n          \n            \n                            allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@(tum\\.de|in\\.tum\\.de|mytum\\.de)", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r499724184", "createdAt": "2020-10-05T16:27:27Z", "author": {"login": "sleiss"}, "path": "docs/admin/registration.rst", "diffHunk": "@@ -0,0 +1,41 @@\n+Artemis supports user registration based on the Jhipster template.\n+User registration has to be enabled in one ``application-*.yml`` file and can be customized.\n+\n+Example:\n+\n+.. code:: yaml\n+\n+    artemis:\n+        user-management:\n+            use-external: false\n+            registration:\n+                enabled: true\n+                allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@(tum.de)|(in.tum.de)|(mytum.de)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyNTMxMw==", "bodyText": "I am not a regex expert \ud83d\ude05", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r499725313", "createdAt": "2020-10-05T16:29:19Z", "author": {"login": "krusche"}, "path": "docs/admin/registration.rst", "diffHunk": "@@ -0,0 +1,41 @@\n+Artemis supports user registration based on the Jhipster template.\n+User registration has to be enabled in one ``application-*.yml`` file and can be customized.\n+\n+Example:\n+\n+.. code:: yaml\n+\n+    artemis:\n+        user-management:\n+            use-external: false\n+            registration:\n+                enabled: true\n+                allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@(tum.de)|(in.tum.de)|(mytum.de)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyNDE4NA=="}, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyNzIxMg==", "bodyText": "I think I found the 2nd error already, but only replaced it my local (not committed) application.yml file\nThanks for noticing it \ud83d\udc4d", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r499727212", "createdAt": "2020-10-05T16:32:40Z", "author": {"login": "krusche"}, "path": "docs/admin/registration.rst", "diffHunk": "@@ -0,0 +1,41 @@\n+Artemis supports user registration based on the Jhipster template.\n+User registration has to be enabled in one ``application-*.yml`` file and can be customized.\n+\n+Example:\n+\n+.. code:: yaml\n+\n+    artemis:\n+        user-management:\n+            use-external: false\n+            registration:\n+                enabled: true\n+                allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@(tum.de)|(in.tum.de)|(mytum.de)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyNDE4NA=="}, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTgxOQ==", "bodyText": "fixed", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500311819", "createdAt": "2020-10-06T14:06:41Z", "author": {"login": "krusche"}, "path": "docs/admin/registration.rst", "diffHunk": "@@ -0,0 +1,41 @@\n+Artemis supports user registration based on the Jhipster template.\n+User registration has to be enabled in one ``application-*.yml`` file and can be customized.\n+\n+Example:\n+\n+.. code:: yaml\n+\n+    artemis:\n+        user-management:\n+            use-external: false\n+            registration:\n+                enabled: true\n+                allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@(tum.de)|(in.tum.de)|(mytum.de)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyNDE4NA=="}, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTAxNTM5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/account/password/password.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzowMzo1MVrOHcmB1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDowNToxNVrOHdIhew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NTIzNw==", "bodyText": "What is the reason for the [/] brackets? I find them quite uncommon in this context.", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r499745237", "createdAt": "2020-10-05T17:03:51Z", "author": {"login": "sleiss"}, "path": "src/main/webapp/app/account/password/password.component.html", "diffHunk": "@@ -1,92 +1,119 @@\n-<div>\n+<div *ngIf=\"isRegistrationEnabled\">\n     <div class=\"row justify-content-center\">\n-        <div class=\"col-md-8\">\n-            <h2 jhiTranslate=\"password.title\" [translateValues]=\"{ username: user.login }\" *ngIf=\"user\">\n-                Password for [<b>{{ user.login }}</b\n+        <div class=\"col-md-8\" *ngIf=\"user\">\n+            <h2 jhiTranslate=\"password.title\" [translateValues]=\"{ username: user.login }\">\n+                Password for [<strong>{{ user.login }}</strong", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMDM5NQ==", "bodyText": "fixed", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500310395", "createdAt": "2020-10-06T14:05:15Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/account/password/password.component.html", "diffHunk": "@@ -1,92 +1,119 @@\n-<div>\n+<div *ngIf=\"isRegistrationEnabled\">\n     <div class=\"row justify-content-center\">\n-        <div class=\"col-md-8\">\n-            <h2 jhiTranslate=\"password.title\" [translateValues]=\"{ username: user.login }\" *ngIf=\"user\">\n-                Password for [<b>{{ user.login }}</b\n+        <div class=\"col-md-8\" *ngIf=\"user\">\n+            <h2 jhiTranslate=\"password.title\" [translateValues]=\"{ username: user.login }\">\n+                Password for [<strong>{{ user.login }}</strong", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NTIzNw=="}, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTQxMTc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AccountResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowMjoxNFrOHcp6gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowMjoxNFrOHcp6gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgwODg5OQ==", "bodyText": "See #1659.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (registrationEnabled.isEmpty() || registrationEnabled.get() == Boolean.FALSE) {\n          \n          \n            \n                    if (registrationEnabled.isEmpty() || Boolean.FALSE.equals(registrationEnabled.get())) {", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r499808899", "createdAt": "2020-10-05T19:02:14Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AccountResource.java", "diffHunk": "@@ -81,6 +101,9 @@ public void registerAccount(@Valid @RequestBody ManagedUserVM managedUserVM) {\n      */\n     @GetMapping(\"/activate\")\n     public void activateAccount(@RequestParam(value = \"key\") String key) {\n+        if (registrationEnabled.isEmpty() || registrationEnabled.get() == Boolean.FALSE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTQxNzIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AccountResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowNDowMlrOHcp9_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowNDowMlrOHcp9_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgwOTc5MA==", "bodyText": "See #1659.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (registrationEnabled.isEmpty() || registrationEnabled.get() == Boolean.FALSE) {\n          \n          \n            \n                    if (registrationEnabled.isEmpty() || Boolean.FALSE.equals(registrationEnabled.get())) {", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r499809790", "createdAt": "2020-10-05T19:04:02Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AccountResource.java", "diffHunk": "@@ -66,9 +75,20 @@ public AccountResource(UserRepository userRepository, UserService userService, M\n     @PostMapping(\"/register\")\n     @ResponseStatus(HttpStatus.CREATED)\n     public void registerAccount(@Valid @RequestBody ManagedUserVM managedUserVM) {\n-        if (!checkPasswordLength(managedUserVM.getPassword())) {\n+        if (registrationEnabled.isEmpty() || registrationEnabled.get() == Boolean.FALSE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTQyMzI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AccountResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowNTo0OFrOHcqBsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowNTo0OFrOHcqBsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgxMDczOA==", "bodyText": "See #1659.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (registrationEnabled.isEmpty() || registrationEnabled.get() == Boolean.FALSE) {\n          \n          \n            \n                    if (registrationEnabled.isEmpty() || Boolean.FALSE.equals(registrationEnabled.get())) {", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r499810738", "createdAt": "2020-10-05T19:05:48Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AccountResource.java", "diffHunk": "@@ -135,6 +160,9 @@ public UserDTO getAccount() {\n      */\n     @PostMapping(\"/account\")\n     public void saveAccount(@Valid @RequestBody UserDTO userDTO) {\n+        if (registrationEnabled.isEmpty() || registrationEnabled.get() == Boolean.FALSE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTQyODU2OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AccountResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowNzoyMlrOHcqE-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowNzoyMlrOHcqE-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgxMTU3Nw==", "bodyText": "See #1659.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (registrationEnabled.isEmpty() || registrationEnabled.get() == Boolean.FALSE) {\n          \n          \n            \n                    if (registrationEnabled.isEmpty() || Boolean.FALSE.equals(registrationEnabled.get())) {", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r499811577", "createdAt": "2020-10-05T19:07:22Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AccountResource.java", "diffHunk": "@@ -155,7 +183,10 @@ public void saveAccount(@Valid @RequestBody UserDTO userDTO) {\n      */\n     @PostMapping(path = \"/account/change-password\")\n     public void changePassword(@RequestBody PasswordChangeDTO passwordChangeDto) {\n-        if (!checkPasswordLength(passwordChangeDto.getNewPassword())) {\n+        if (registrationEnabled.isEmpty() || registrationEnabled.get() == Boolean.FALSE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTQzMDk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AccountResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowODoxMFrOHcqGkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowODoxMFrOHcqGkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgxMTk4Ng==", "bodyText": "See #1659.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (registrationEnabled.isEmpty() || registrationEnabled.get() == Boolean.FALSE) {\n          \n          \n            \n                    if (registrationEnabled.isEmpty() || Boolean.FALSE.equals(registrationEnabled.get())) {", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r499811986", "createdAt": "2020-10-05T19:08:10Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AccountResource.java", "diffHunk": "@@ -168,6 +199,9 @@ public void changePassword(@RequestBody PasswordChangeDTO passwordChangeDto) {\n      */\n     @PostMapping(path = \"/account/reset-password/init\")\n     public void requestPasswordReset(@RequestBody String mail) {\n+        if (registrationEnabled.isEmpty() || registrationEnabled.get() == Boolean.FALSE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTQzMTE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AccountResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowODoxNlrOHcqGxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOTowODoxNlrOHcqGxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgxMjAzOA==", "bodyText": "See #1659.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (registrationEnabled.isEmpty() || registrationEnabled.get() == Boolean.FALSE) {\n          \n          \n            \n                    if (registrationEnabled.isEmpty() || Boolean.FALSE.equals(registrationEnabled.get())) {", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r499812038", "createdAt": "2020-10-05T19:08:16Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/AccountResource.java", "diffHunk": "@@ -188,7 +222,10 @@ public void requestPasswordReset(@RequestBody String mail) {\n      */\n     @PostMapping(path = \"/account/reset-password/finish\")\n     public void finishPasswordReset(@RequestBody KeyAndPasswordVM keyAndPassword) {\n-        if (!checkPasswordLength(keyAndPassword.getNewPassword())) {\n+        if (registrationEnabled.isEmpty() || registrationEnabled.get() == Boolean.FALSE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05cca020103877fd49fae0c43bc3dac3625b9a5"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDYzODQ1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/config/application-artemis.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjoyNDowNFrOHdcBuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjozMjoxOVrOHdcN3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYyOTk0NA==", "bodyText": "We should be able to do that as well:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@((tum\\.de)|(in\\.tum\\.de)|(mytum\\.de))\n          \n          \n            \n                        allowed-email-pattern: [a-zA-Z0-9_\\-\\.\\+]+@(tum\\.de|in\\.tum\\.de|mytum\\.de)", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500629944", "createdAt": "2020-10-06T22:24:04Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/resources/config/application-artemis.yml", "diffHunk": "@@ -21,6 +21,10 @@ artemis:\n         internal-admin:\n             username: artemis_admin\n             password: artemis_admin\n+        registration:\n+            enabled: false\n+            allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@((tum\\.de)|(in\\.tum\\.de)|(mytum\\.de))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21d16f32e9c701c05b39d96c4bebf51af171f1fa"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYzMDY5NA==", "bodyText": "Checked it, also works like this.", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500630694", "createdAt": "2020-10-06T22:26:02Z", "author": {"login": "sleiss"}, "path": "src/main/resources/config/application-artemis.yml", "diffHunk": "@@ -21,6 +21,10 @@ artemis:\n         internal-admin:\n             username: artemis_admin\n             password: artemis_admin\n+        registration:\n+            enabled: false\n+            allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@((tum\\.de)|(in\\.tum\\.de)|(mytum\\.de))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYyOTk0NA=="}, "originalCommit": {"oid": "21d16f32e9c701c05b39d96c4bebf51af171f1fa"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYzMzA1NQ==", "bodyText": "thanks, this looks easier, I'll change it", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500633055", "createdAt": "2020-10-06T22:32:19Z", "author": {"login": "krusche"}, "path": "src/main/resources/config/application-artemis.yml", "diffHunk": "@@ -21,6 +21,10 @@ artemis:\n         internal-admin:\n             username: artemis_admin\n             password: artemis_admin\n+        registration:\n+            enabled: false\n+            allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@((tum\\.de)|(in\\.tum\\.de)|(mytum\\.de))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYyOTk0NA=="}, "originalCommit": {"oid": "21d16f32e9c701c05b39d96c4bebf51af171f1fa"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDY1MDUwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/account/register/register.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjoyODo1M1rOHdcI9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjozNjozOVrOHdcUJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYzMTc5OQ==", "bodyText": "Is this still needed?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                        <!-- TEST CODE -->\n          \n          \n            \n                        <!--            <div class=\"form-group\">-->\n          \n          \n            \n                        <!--                <label style=\"color: red\" class=\"form-control-label\">Email Pattern for Testing</label>-->\n          \n          \n            \n                        <!--                <input style=\"color: red\" class=\"form-control\" id=\"regex\" name=\"regex\" [(ngModel)]=\"allowedEmailPattern\" (ngModelChange)=\"updateAllowedEmailPattern()\" />-->\n          \n          \n            \n                        <!--            </div>-->\n          \n          \n            \n                        <!-- TEST CODE -->", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500631799", "createdAt": "2020-10-06T22:28:53Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/webapp/app/account/register/register.component.html", "diffHunk": "@@ -1,8 +1,15 @@\n-<div>\n+<div *ngIf=\"isRegistrationEnabled\">\n     <div class=\"row justify-content-center\">\n         <div class=\"col-md-8\">\n             <h1 jhiTranslate=\"register.title\">Registration</h1>\n \n+            <!-- TEST CODE -->\n+            <!--            <div class=\"form-group\">-->\n+            <!--                <label style=\"color: red\" class=\"form-control-label\">Email Pattern for Testing</label>-->\n+            <!--                <input style=\"color: red\" class=\"form-control\" id=\"regex\" name=\"regex\" [(ngModel)]=\"allowedEmailPattern\" (ngModelChange)=\"updateAllowedEmailPattern()\" />-->\n+            <!--            </div>-->\n+            <!-- TEST CODE -->\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21d16f32e9c701c05b39d96c4bebf51af171f1fa"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYzNDY2MQ==", "bodyText": "It really helped me in testing the regex pattern, so this might be super useful for other administrators playing around with Artemis, therefore I would like to keep it.", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500634661", "createdAt": "2020-10-06T22:36:39Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/account/register/register.component.html", "diffHunk": "@@ -1,8 +1,15 @@\n-<div>\n+<div *ngIf=\"isRegistrationEnabled\">\n     <div class=\"row justify-content-center\">\n         <div class=\"col-md-8\">\n             <h1 jhiTranslate=\"register.title\">Registration</h1>\n \n+            <!-- TEST CODE -->\n+            <!--            <div class=\"form-group\">-->\n+            <!--                <label style=\"color: red\" class=\"form-control-label\">Email Pattern for Testing</label>-->\n+            <!--                <input style=\"color: red\" class=\"form-control\" id=\"regex\" name=\"regex\" [(ngModel)]=\"allowedEmailPattern\" (ngModelChange)=\"updateAllowedEmailPattern()\" />-->\n+            <!--            </div>-->\n+            <!-- TEST CODE -->\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYzMTc5OQ=="}, "originalCommit": {"oid": "21d16f32e9c701c05b39d96c4bebf51af171f1fa"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDY1NDM2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/account/register/register.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjozMDoyNVrOHdcLXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjozNjo0OVrOHdcUag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYzMjQxMw==", "bodyText": "Is this still needed?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // TEST CODE BEGIN\n          \n          \n            \n                // updateAllowedEmailPattern() {\n          \n          \n            \n                //     if (this.allowedEmailPattern) {\n          \n          \n            \n                //         this.registerForm.get('email')!\n          \n          \n            \n                //         .setValidators([Validators.required, Validators.minLength(4), Validators.maxLength(50), Validators.pattern(this.allowedEmailPattern)]);\n          \n          \n            \n                //     }\n          \n          \n            \n                // }\n          \n          \n            \n                // TEST CODE END", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500632413", "createdAt": "2020-10-06T22:30:25Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/webapp/app/account/register/register.component.ts", "diffHunk": "@@ -1,69 +1,107 @@\n-import { AfterViewInit, Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n+import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n import { HttpErrorResponse } from '@angular/common/http';\n-import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n import { JhiLanguageService } from 'ng-jhipster';\n \n import { RegisterService } from 'app/account/register/register.service';\n import { User } from 'app/core/user/user.model';\n import { EMAIL_ALREADY_USED_TYPE, LOGIN_ALREADY_USED_TYPE } from 'app/shared/constants/error.constants';\n+import { ProfileService } from 'app/shared/layouts/profiles/profile.service';\n+import { FormBuilder, Validators } from '@angular/forms';\n \n @Component({\n     selector: 'jhi-register',\n     templateUrl: './register.component.html',\n })\n export class RegisterComponent implements OnInit, AfterViewInit {\n-    confirmPassword: string;\n-    doNotMatch?: string;\n-    error?: string;\n-    errorEmailExists?: string;\n-    errorUserExists?: string;\n-    registerAccount: User;\n-    success: boolean;\n-    modalRef: NgbModalRef;\n+    @ViewChild('login', { static: false })\n+    login?: ElementRef;\n \n-    constructor(private languageService: JhiLanguageService, private registerService: RegisterService, private elementRef: ElementRef, private renderer: Renderer2) {}\n+    doNotMatch = false;\n+    error = false;\n+    errorEmailExists = false;\n+    errorUserExists = false;\n+    success = false;\n \n-    ngOnInit() {\n-        this.success = false;\n-        this.registerAccount = new User();\n+    defaultEmailPattern = '^[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$';\n+\n+    registerForm = this.fb.group({\n+        firstName: ['', [Validators.required, Validators.minLength(2)]],\n+        lastName: ['', [Validators.required, Validators.minLength(2)]],\n+        login: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50), Validators.pattern(this.defaultEmailPattern)]],\n+        email: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(254), Validators.email]],\n+        password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(50)]],\n+        confirmPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(50)]],\n+    });\n+    isRegistrationEnabled = false;\n+    allowedEmailPattern?: string;\n+    allowedEmailPatternReadable?: string;\n+\n+    constructor(private languageService: JhiLanguageService, private registerService: RegisterService, private fb: FormBuilder, private profileService: ProfileService) {}\n+\n+    ngAfterViewInit(): void {\n+        if (this.login) {\n+            this.login.nativeElement.focus();\n+        }\n     }\n \n-    ngAfterViewInit() {\n-        this.renderer.selectRootElement('#login', true).focus();\n+    // TEST CODE BEGIN\n+    // updateAllowedEmailPattern() {\n+    //     if (this.allowedEmailPattern) {\n+    //         this.registerForm.get('email')!\n+    //         .setValidators([Validators.required, Validators.minLength(4), Validators.maxLength(50), Validators.pattern(this.allowedEmailPattern)]);\n+    //     }\n+    // }\n+    // TEST CODE END", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "348ad3587c3b81b93242149ac4fa61bb36a40cbf"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYzNDczMA==", "bodyText": "It really helped me in testing the regex pattern, so this might be super useful for other administrators playing around with Artemis, therefore I would like to keep it.", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500634730", "createdAt": "2020-10-06T22:36:49Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/account/register/register.component.ts", "diffHunk": "@@ -1,69 +1,107 @@\n-import { AfterViewInit, Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n+import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n import { HttpErrorResponse } from '@angular/common/http';\n-import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n import { JhiLanguageService } from 'ng-jhipster';\n \n import { RegisterService } from 'app/account/register/register.service';\n import { User } from 'app/core/user/user.model';\n import { EMAIL_ALREADY_USED_TYPE, LOGIN_ALREADY_USED_TYPE } from 'app/shared/constants/error.constants';\n+import { ProfileService } from 'app/shared/layouts/profiles/profile.service';\n+import { FormBuilder, Validators } from '@angular/forms';\n \n @Component({\n     selector: 'jhi-register',\n     templateUrl: './register.component.html',\n })\n export class RegisterComponent implements OnInit, AfterViewInit {\n-    confirmPassword: string;\n-    doNotMatch?: string;\n-    error?: string;\n-    errorEmailExists?: string;\n-    errorUserExists?: string;\n-    registerAccount: User;\n-    success: boolean;\n-    modalRef: NgbModalRef;\n+    @ViewChild('login', { static: false })\n+    login?: ElementRef;\n \n-    constructor(private languageService: JhiLanguageService, private registerService: RegisterService, private elementRef: ElementRef, private renderer: Renderer2) {}\n+    doNotMatch = false;\n+    error = false;\n+    errorEmailExists = false;\n+    errorUserExists = false;\n+    success = false;\n \n-    ngOnInit() {\n-        this.success = false;\n-        this.registerAccount = new User();\n+    defaultEmailPattern = '^[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$';\n+\n+    registerForm = this.fb.group({\n+        firstName: ['', [Validators.required, Validators.minLength(2)]],\n+        lastName: ['', [Validators.required, Validators.minLength(2)]],\n+        login: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50), Validators.pattern(this.defaultEmailPattern)]],\n+        email: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(254), Validators.email]],\n+        password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(50)]],\n+        confirmPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(50)]],\n+    });\n+    isRegistrationEnabled = false;\n+    allowedEmailPattern?: string;\n+    allowedEmailPatternReadable?: string;\n+\n+    constructor(private languageService: JhiLanguageService, private registerService: RegisterService, private fb: FormBuilder, private profileService: ProfileService) {}\n+\n+    ngAfterViewInit(): void {\n+        if (this.login) {\n+            this.login.nativeElement.focus();\n+        }\n     }\n \n-    ngAfterViewInit() {\n-        this.renderer.selectRootElement('#login', true).focus();\n+    // TEST CODE BEGIN\n+    // updateAllowedEmailPattern() {\n+    //     if (this.allowedEmailPattern) {\n+    //         this.registerForm.get('email')!\n+    //         .setValidators([Validators.required, Validators.minLength(4), Validators.maxLength(50), Validators.pattern(this.allowedEmailPattern)]);\n+    //     }\n+    // }\n+    // TEST CODE END", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYzMjQxMw=="}, "originalCommit": {"oid": "348ad3587c3b81b93242149ac4fa61bb36a40cbf"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDcwODIwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/i18n/de/global.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjo1MzoxM1rOHdcriw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzoyMzowNFrOHddQKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0MDY1MQ==", "bodyText": "This is not consistent to ManagedUserVM as far as I can see.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"maxlength\": \"Das neue Passwort darf nicht l\u00e4nger als 50 Zeichen sein\",\n          \n          \n            \n                                \"maxlength\": \"Das neue Passwort darf nicht l\u00e4nger als 100 Zeichen sein\",", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500640651", "createdAt": "2020-10-06T22:53:13Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/webapp/i18n/de/global.json", "diffHunk": "@@ -130,20 +135,21 @@\n             \"validate\": {\n                 \"newpassword\": {\n                     \"required\": \"Ein neues Passwort wird ben\u00f6tigt.\",\n-                    \"minlength\": \"Das neue Passwort muss mindestens 5 Zeichen lang sein\",\n+                    \"minlength\": \"Das neue Passwort muss mindestens 8 Zeichen lang sein\",\n                     \"maxlength\": \"Das neue Passwort darf nicht l\u00e4nger als 50 Zeichen sein\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bb2e7999aa14855de8c617f3e23b72366256f48"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY1MDAyNg==", "bodyText": "thx. I fixed it.", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500650026", "createdAt": "2020-10-06T23:23:04Z", "author": {"login": "krusche"}, "path": "src/main/webapp/i18n/de/global.json", "diffHunk": "@@ -130,20 +135,21 @@\n             \"validate\": {\n                 \"newpassword\": {\n                     \"required\": \"Ein neues Passwort wird ben\u00f6tigt.\",\n-                    \"minlength\": \"Das neue Passwort muss mindestens 5 Zeichen lang sein\",\n+                    \"minlength\": \"Das neue Passwort muss mindestens 8 Zeichen lang sein\",\n                     \"maxlength\": \"Das neue Passwort darf nicht l\u00e4nger als 50 Zeichen sein\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0MDY1MQ=="}, "originalCommit": {"oid": "0bb2e7999aa14855de8c617f3e23b72366256f48"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDcwOTQ5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/i18n/de/global.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjo1Mzo1MFrOHdcsTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzoyMzoxNlrOHddQZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0MDg0NQ==", "bodyText": "This is not consistent to ManagedUserVM as far as I can see.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"maxlength\": \"Das best\u00e4tigte Passwort darf nicht l\u00e4nger als 50 Zeichen sein\"\n          \n          \n            \n                                \"maxlength\": \"Das best\u00e4tigte Passwort darf nicht l\u00e4nger als 100 Zeichen sein\"", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500640845", "createdAt": "2020-10-06T22:53:50Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/webapp/i18n/de/global.json", "diffHunk": "@@ -130,20 +135,21 @@\n             \"validate\": {\n                 \"newpassword\": {\n                     \"required\": \"Ein neues Passwort wird ben\u00f6tigt.\",\n-                    \"minlength\": \"Das neue Passwort muss mindestens 5 Zeichen lang sein\",\n+                    \"minlength\": \"Das neue Passwort muss mindestens 8 Zeichen lang sein\",\n                     \"maxlength\": \"Das neue Passwort darf nicht l\u00e4nger als 50 Zeichen sein\",\n                     \"strength\": \"Passwortst\u00e4rke:\"\n                 },\n                 \"confirmpassword\": {\n                     \"required\": \"Du musst das Passwort best\u00e4tigen.\",\n-                    \"minlength\": \"Das best\u00e4tigte Passwort muss mindestens 5 Zeichen lang sein\",\n+                    \"minlength\": \"Das best\u00e4tigte Passwort muss mindestens 8 Zeichen lang sein\",\n                     \"maxlength\": \"Das best\u00e4tigte Passwort darf nicht l\u00e4nger als 50 Zeichen sein\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bb2e7999aa14855de8c617f3e23b72366256f48"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY1MDA4NA==", "bodyText": "thx. I fixed it.", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500650084", "createdAt": "2020-10-06T23:23:16Z", "author": {"login": "krusche"}, "path": "src/main/webapp/i18n/de/global.json", "diffHunk": "@@ -130,20 +135,21 @@\n             \"validate\": {\n                 \"newpassword\": {\n                     \"required\": \"Ein neues Passwort wird ben\u00f6tigt.\",\n-                    \"minlength\": \"Das neue Passwort muss mindestens 5 Zeichen lang sein\",\n+                    \"minlength\": \"Das neue Passwort muss mindestens 8 Zeichen lang sein\",\n                     \"maxlength\": \"Das neue Passwort darf nicht l\u00e4nger als 50 Zeichen sein\",\n                     \"strength\": \"Passwortst\u00e4rke:\"\n                 },\n                 \"confirmpassword\": {\n                     \"required\": \"Du musst das Passwort best\u00e4tigen.\",\n-                    \"minlength\": \"Das best\u00e4tigte Passwort muss mindestens 5 Zeichen lang sein\",\n+                    \"minlength\": \"Das best\u00e4tigte Passwort muss mindestens 8 Zeichen lang sein\",\n                     \"maxlength\": \"Das best\u00e4tigte Passwort darf nicht l\u00e4nger als 50 Zeichen sein\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0MDg0NQ=="}, "originalCommit": {"oid": "0bb2e7999aa14855de8c617f3e23b72366256f48"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDcxMDAzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/i18n/en/global.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjo1NDowN1rOHdcsoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjo1NDowN1rOHdcsoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0MDkyOA==", "bodyText": "This is not consistent to ManagedUserVM as far as I can see.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"maxlength\": \"Your password cannot be longer than 50 characters.\",\n          \n          \n            \n                                \"maxlength\": \"Your password cannot be longer than 100 characters.\",", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500640928", "createdAt": "2020-10-06T22:54:07Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/webapp/i18n/en/global.json", "diffHunk": "@@ -130,20 +135,21 @@\n             \"validate\": {\n                 \"newpassword\": {\n                     \"required\": \"Your password is required.\",\n-                    \"minlength\": \"Your password is required to be at least 4 characters.\",\n+                    \"minlength\": \"Your password is required to be at least 8 characters.\",\n                     \"maxlength\": \"Your password cannot be longer than 50 characters.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bb2e7999aa14855de8c617f3e23b72366256f48"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDcxMDgyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/i18n/en/global.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjo1NDoyNVrOHdctGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzoyMzo0MlrOHddQzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0MTA1MA==", "bodyText": "This is not consistent to ManagedUserVM as far as I can see.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"maxlength\": \"Your confirmation password cannot be longer than 50 characters.\"\n          \n          \n            \n                                \"maxlength\": \"Your confirmation password cannot be longer than 100 characters.\"", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500641050", "createdAt": "2020-10-06T22:54:25Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/webapp/i18n/en/global.json", "diffHunk": "@@ -130,20 +135,21 @@\n             \"validate\": {\n                 \"newpassword\": {\n                     \"required\": \"Your password is required.\",\n-                    \"minlength\": \"Your password is required to be at least 4 characters.\",\n+                    \"minlength\": \"Your password is required to be at least 8 characters.\",\n                     \"maxlength\": \"Your password cannot be longer than 50 characters.\",\n                     \"strength\": \"Password strength:\"\n                 },\n                 \"confirmpassword\": {\n                     \"required\": \"Your confirmation password is required.\",\n-                    \"minlength\": \"Your confirmation password is required to be at least 4 characters.\",\n+                    \"minlength\": \"Your confirmation password is required to be at least 8 characters.\",\n                     \"maxlength\": \"Your confirmation password cannot be longer than 50 characters.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bb2e7999aa14855de8c617f3e23b72366256f48"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY1MDE4OA==", "bodyText": "thx. I fixed it.", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500650188", "createdAt": "2020-10-06T23:23:42Z", "author": {"login": "krusche"}, "path": "src/main/webapp/i18n/en/global.json", "diffHunk": "@@ -130,20 +135,21 @@\n             \"validate\": {\n                 \"newpassword\": {\n                     \"required\": \"Your password is required.\",\n-                    \"minlength\": \"Your password is required to be at least 4 characters.\",\n+                    \"minlength\": \"Your password is required to be at least 8 characters.\",\n                     \"maxlength\": \"Your password cannot be longer than 50 characters.\",\n                     \"strength\": \"Password strength:\"\n                 },\n                 \"confirmpassword\": {\n                     \"required\": \"Your confirmation password is required.\",\n-                    \"minlength\": \"Your confirmation password is required to be at least 4 characters.\",\n+                    \"minlength\": \"Your confirmation password is required to be at least 8 characters.\",\n                     \"maxlength\": \"Your confirmation password cannot be longer than 50 characters.\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0MTA1MA=="}, "originalCommit": {"oid": "0bb2e7999aa14855de8c617f3e23b72366256f48"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDcyMjcwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/account/register/register.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMjo1OTo1MlrOHdc0fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzoyNDo0NFrOHddR-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0Mjk0Mg==", "bodyText": "This does not match with the localization", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500642942", "createdAt": "2020-10-06T22:59:52Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/webapp/app/account/register/register.component.html", "diffHunk": "@@ -20,129 +27,176 @@ <h1 jhiTranslate=\"register.title\">Registration</h1>\n             <div class=\"alert alert-danger\" *ngIf=\"doNotMatch\" jhiTranslate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div>\n         </div>\n     </div>\n+\n     <div class=\"row justify-content-center\">\n         <div class=\"col-md-8\">\n-            <form name=\"form\" role=\"form\" (ngSubmit)=\"register()\" #registerForm=\"ngForm\" *ngIf=\"!success\">\n+            <form name=\"form\" role=\"form\" (ngSubmit)=\"register()\" [formGroup]=\"registerForm\" *ngIf=\"!success\">\n+                <div class=\"form-group\">\n+                    <label class=\"form-control-label\" for=\"firstName\" jhiTranslate=\"global.form.firstname\">First name</label>\n+                    <input\n+                        type=\"text\"\n+                        class=\"form-control\"\n+                        id=\"firstName\"\n+                        name=\"firstName\"\n+                        autocomplete=\"given-name\"\n+                        placeholder=\"{{ 'global.form.firstname.placeholder' | translate }}\"\n+                        formControlName=\"firstName\"\n+                    />\n+                </div>\n+                <div class=\"form-group\">\n+                    <label class=\"form-control-label\" for=\"lastName\" jhiTranslate=\"global.form.lastname\">Last name</label>\n+                    <input\n+                        type=\"text\"\n+                        class=\"form-control\"\n+                        id=\"lastName\"\n+                        name=\"lastName\"\n+                        autocomplete=\"last-name\"\n+                        placeholder=\"{{ 'global.form.lastname.placeholder' | translate }}\"\n+                        formControlName=\"lastName\"\n+                    />\n+                </div>\n                 <div class=\"form-group\">\n                     <label class=\"form-control-label\" for=\"login\" jhiTranslate=\"global.form.username\">Username</label>\n                     <input\n                         type=\"text\"\n                         class=\"form-control\"\n-                        [(ngModel)]=\"registerAccount.login\"\n                         id=\"login\"\n                         name=\"login\"\n-                        #login=\"ngModel\"\n+                        autocomplete=\"username\"\n                         placeholder=\"{{ 'global.form.username.placeholder' | translate }}\"\n-                        required\n-                        minlength=\"1\"\n-                        maxlength=\"50\"\n-                        pattern=\"^[_'.@A-Za-z0-9-]*$\"\n+                        formControlName=\"login\"\n+                        #login\n                     />\n-                    <div *ngIf=\"login.dirty && login.invalid\">\n-                        <small class=\"form-text text-danger\" *ngIf=\"login.errors?.required\" jhiTranslate=\"register.messages.validate.login.required\">\n+\n+                    <div *ngIf=\"registerForm.get('login')!.invalid && (registerForm.get('login')!.dirty || registerForm.get('login')!.touched)\">\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('login')?.errors?.required\" jhiTranslate=\"register.messages.validate.login.required\">\n                             Your username is required.\n                         </small>\n-                        <small class=\"form-text text-danger\" *ngIf=\"login.errors?.minlength\" jhiTranslate=\"register.messages.validate.login.minlength\">\n+\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('login')?.errors?.minlength\" jhiTranslate=\"register.messages.validate.login.minlength\">\n                             Your username is required to be at least 1 character.\n                         </small>\n-                        <small class=\"form-text text-danger\" *ngIf=\"login.errors?.maxlength\" jhiTranslate=\"register.messages.validate.login.maxlength\">\n+\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('login')?.errors?.maxlength\" jhiTranslate=\"register.messages.validate.login.maxlength\">\n                             Your username cannot be longer than 50 characters.\n                         </small>\n-                        <small class=\"form-text text-danger\" *ngIf=\"login.errors?.pattern\" jhiTranslate=\"register.messages.validate.login.pattern\">\n+\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('login')?.errors?.pattern\" jhiTranslate=\"register.messages.validate.login.pattern\">\n                             Your username can only contain letters and digits.\n                         </small>\n                     </div>\n                 </div>\n+\n+                <div class=\"form-group\" *ngIf=\"allowedEmailPatternReadable\">\n+                    <strong jhiTranslate=\"global.form.email.pattern\">Please use an email with the following pattern:</strong>\n+                    {{ allowedEmailPatternReadable }}\n+                </div>\n+\n                 <div class=\"form-group\">\n                     <label class=\"form-control-label\" for=\"email\" jhiTranslate=\"global.form.email\">Email</label>\n                     <input\n                         type=\"email\"\n                         class=\"form-control\"\n                         id=\"email\"\n                         name=\"email\"\n-                        #email=\"ngModel\"\n+                        autocomplete=\"email\"\n                         placeholder=\"{{ 'global.form.email.placeholder' | translate }}\"\n-                        [(ngModel)]=\"registerAccount.email\"\n-                        minlength=\"5\"\n-                        maxlength=\"100\"\n-                        email\n-                        required\n+                        formControlName=\"email\"\n                     />\n-                    <div *ngIf=\"email.dirty && email.invalid\">\n-                        <small class=\"form-text text-danger\" *ngIf=\"email.errors?.required\" jhiTranslate=\"global.messages.validate.email.required\"> Your email is required. </small>\n-                        <small class=\"form-text text-danger\" *ngIf=\"email.errors?.invalid\" jhiTranslate=\"global.messages.validate.email.invalid\"> Your email is invalid. </small>\n-                        <small class=\"form-text text-danger\" *ngIf=\"email.errors?.minlength\" jhiTranslate=\"global.messages.validate.email.minlength\">\n+\n+                    <div *ngIf=\"registerForm.get('email')!.invalid && (registerForm.get('email')!.dirty || registerForm.get('email')!.touched)\">\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('email')?.errors?.required\" jhiTranslate=\"global.messages.validate.email.required\">\n+                            Your email is required.\n+                        </small>\n+\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('email')?.errors?.invalid\" jhiTranslate=\"global.messages.validate.email.invalid\">\n+                            Your email is invalid.\n+                        </small>\n+\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('email')?.errors?.minlength\" jhiTranslate=\"global.messages.validate.email.minlength\">\n                             Your email is required to be at least 5 characters.\n                         </small>\n-                        <small class=\"form-text text-danger\" *ngIf=\"email.errors?.maxlength\" jhiTranslate=\"global.messages.validate.email.maxlength\">\n+\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('email')?.errors?.maxlength\" jhiTranslate=\"global.messages.validate.email.maxlength\">\n                             Your email cannot be longer than 100 characters.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bb2e7999aa14855de8c617f3e23b72366256f48"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY1MDQ5MA==", "bodyText": "thx. I fixed it.", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500650490", "createdAt": "2020-10-06T23:24:44Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/account/register/register.component.html", "diffHunk": "@@ -20,129 +27,176 @@ <h1 jhiTranslate=\"register.title\">Registration</h1>\n             <div class=\"alert alert-danger\" *ngIf=\"doNotMatch\" jhiTranslate=\"global.messages.error.dontmatch\">The password and its confirmation do not match!</div>\n         </div>\n     </div>\n+\n     <div class=\"row justify-content-center\">\n         <div class=\"col-md-8\">\n-            <form name=\"form\" role=\"form\" (ngSubmit)=\"register()\" #registerForm=\"ngForm\" *ngIf=\"!success\">\n+            <form name=\"form\" role=\"form\" (ngSubmit)=\"register()\" [formGroup]=\"registerForm\" *ngIf=\"!success\">\n+                <div class=\"form-group\">\n+                    <label class=\"form-control-label\" for=\"firstName\" jhiTranslate=\"global.form.firstname\">First name</label>\n+                    <input\n+                        type=\"text\"\n+                        class=\"form-control\"\n+                        id=\"firstName\"\n+                        name=\"firstName\"\n+                        autocomplete=\"given-name\"\n+                        placeholder=\"{{ 'global.form.firstname.placeholder' | translate }}\"\n+                        formControlName=\"firstName\"\n+                    />\n+                </div>\n+                <div class=\"form-group\">\n+                    <label class=\"form-control-label\" for=\"lastName\" jhiTranslate=\"global.form.lastname\">Last name</label>\n+                    <input\n+                        type=\"text\"\n+                        class=\"form-control\"\n+                        id=\"lastName\"\n+                        name=\"lastName\"\n+                        autocomplete=\"last-name\"\n+                        placeholder=\"{{ 'global.form.lastname.placeholder' | translate }}\"\n+                        formControlName=\"lastName\"\n+                    />\n+                </div>\n                 <div class=\"form-group\">\n                     <label class=\"form-control-label\" for=\"login\" jhiTranslate=\"global.form.username\">Username</label>\n                     <input\n                         type=\"text\"\n                         class=\"form-control\"\n-                        [(ngModel)]=\"registerAccount.login\"\n                         id=\"login\"\n                         name=\"login\"\n-                        #login=\"ngModel\"\n+                        autocomplete=\"username\"\n                         placeholder=\"{{ 'global.form.username.placeholder' | translate }}\"\n-                        required\n-                        minlength=\"1\"\n-                        maxlength=\"50\"\n-                        pattern=\"^[_'.@A-Za-z0-9-]*$\"\n+                        formControlName=\"login\"\n+                        #login\n                     />\n-                    <div *ngIf=\"login.dirty && login.invalid\">\n-                        <small class=\"form-text text-danger\" *ngIf=\"login.errors?.required\" jhiTranslate=\"register.messages.validate.login.required\">\n+\n+                    <div *ngIf=\"registerForm.get('login')!.invalid && (registerForm.get('login')!.dirty || registerForm.get('login')!.touched)\">\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('login')?.errors?.required\" jhiTranslate=\"register.messages.validate.login.required\">\n                             Your username is required.\n                         </small>\n-                        <small class=\"form-text text-danger\" *ngIf=\"login.errors?.minlength\" jhiTranslate=\"register.messages.validate.login.minlength\">\n+\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('login')?.errors?.minlength\" jhiTranslate=\"register.messages.validate.login.minlength\">\n                             Your username is required to be at least 1 character.\n                         </small>\n-                        <small class=\"form-text text-danger\" *ngIf=\"login.errors?.maxlength\" jhiTranslate=\"register.messages.validate.login.maxlength\">\n+\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('login')?.errors?.maxlength\" jhiTranslate=\"register.messages.validate.login.maxlength\">\n                             Your username cannot be longer than 50 characters.\n                         </small>\n-                        <small class=\"form-text text-danger\" *ngIf=\"login.errors?.pattern\" jhiTranslate=\"register.messages.validate.login.pattern\">\n+\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('login')?.errors?.pattern\" jhiTranslate=\"register.messages.validate.login.pattern\">\n                             Your username can only contain letters and digits.\n                         </small>\n                     </div>\n                 </div>\n+\n+                <div class=\"form-group\" *ngIf=\"allowedEmailPatternReadable\">\n+                    <strong jhiTranslate=\"global.form.email.pattern\">Please use an email with the following pattern:</strong>\n+                    {{ allowedEmailPatternReadable }}\n+                </div>\n+\n                 <div class=\"form-group\">\n                     <label class=\"form-control-label\" for=\"email\" jhiTranslate=\"global.form.email\">Email</label>\n                     <input\n                         type=\"email\"\n                         class=\"form-control\"\n                         id=\"email\"\n                         name=\"email\"\n-                        #email=\"ngModel\"\n+                        autocomplete=\"email\"\n                         placeholder=\"{{ 'global.form.email.placeholder' | translate }}\"\n-                        [(ngModel)]=\"registerAccount.email\"\n-                        minlength=\"5\"\n-                        maxlength=\"100\"\n-                        email\n-                        required\n+                        formControlName=\"email\"\n                     />\n-                    <div *ngIf=\"email.dirty && email.invalid\">\n-                        <small class=\"form-text text-danger\" *ngIf=\"email.errors?.required\" jhiTranslate=\"global.messages.validate.email.required\"> Your email is required. </small>\n-                        <small class=\"form-text text-danger\" *ngIf=\"email.errors?.invalid\" jhiTranslate=\"global.messages.validate.email.invalid\"> Your email is invalid. </small>\n-                        <small class=\"form-text text-danger\" *ngIf=\"email.errors?.minlength\" jhiTranslate=\"global.messages.validate.email.minlength\">\n+\n+                    <div *ngIf=\"registerForm.get('email')!.invalid && (registerForm.get('email')!.dirty || registerForm.get('email')!.touched)\">\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('email')?.errors?.required\" jhiTranslate=\"global.messages.validate.email.required\">\n+                            Your email is required.\n+                        </small>\n+\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('email')?.errors?.invalid\" jhiTranslate=\"global.messages.validate.email.invalid\">\n+                            Your email is invalid.\n+                        </small>\n+\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('email')?.errors?.minlength\" jhiTranslate=\"global.messages.validate.email.minlength\">\n                             Your email is required to be at least 5 characters.\n                         </small>\n-                        <small class=\"form-text text-danger\" *ngIf=\"email.errors?.maxlength\" jhiTranslate=\"global.messages.validate.email.maxlength\">\n+\n+                        <small class=\"form-text text-danger\" *ngIf=\"registerForm.get('email')?.errors?.maxlength\" jhiTranslate=\"global.messages.validate.email.maxlength\">\n                             Your email cannot be longer than 100 characters.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0Mjk0Mg=="}, "originalCommit": {"oid": "0bb2e7999aa14855de8c617f3e23b72366256f48"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDczNDQxOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/account/settings/settings.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzowNTo0MVrOHdc7Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzoyOTowMFrOHddWsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0NDY5OA==", "bodyText": "This is another maximum email length", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500644698", "createdAt": "2020-10-06T23:05:41Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/webapp/app/account/settings/settings.component.ts", "diffHunk": "@@ -3,88 +3,66 @@ import { FormBuilder, Validators } from '@angular/forms';\n import { JhiLanguageService } from 'ng-jhipster';\n \n import { AccountService } from 'app/core/auth/account.service';\n-import { Account } from 'app/core/user/account.model';\n-import { JhiLanguageHelper } from 'app/core/language/language.helper';\n+import { ProfileService } from 'app/shared/layouts/profiles/profile.service';\n+import { LANGUAGES } from 'app/core/language/language.constants';\n+import { User } from 'app/core/user/user.model';\n \n @Component({\n     selector: 'jhi-settings',\n     templateUrl: './settings.component.html',\n })\n export class SettingsComponent implements OnInit {\n-    error: string | null;\n-    success: string | null;\n-    settingsAccount: Account;\n-    languages: string[];\n+    success = false;\n+    account: User;\n+    languages = LANGUAGES;\n     settingsForm = this.fb.group({\n-        firstName: [undefined, [Validators.required, Validators.minLength(1), Validators.maxLength(50)]],\n-        lastName: [undefined, [Validators.required, Validators.minLength(1), Validators.maxLength(50)]],\n+        firstName: [undefined, [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n+        lastName: [undefined, [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n         email: [undefined, [Validators.required, Validators.minLength(5), Validators.maxLength(254), Validators.email]],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bb2e7999aa14855de8c617f3e23b72366256f48"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY1MTY5OA==", "bodyText": "thx. I fixed it.", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500651698", "createdAt": "2020-10-06T23:29:00Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/account/settings/settings.component.ts", "diffHunk": "@@ -3,88 +3,66 @@ import { FormBuilder, Validators } from '@angular/forms';\n import { JhiLanguageService } from 'ng-jhipster';\n \n import { AccountService } from 'app/core/auth/account.service';\n-import { Account } from 'app/core/user/account.model';\n-import { JhiLanguageHelper } from 'app/core/language/language.helper';\n+import { ProfileService } from 'app/shared/layouts/profiles/profile.service';\n+import { LANGUAGES } from 'app/core/language/language.constants';\n+import { User } from 'app/core/user/user.model';\n \n @Component({\n     selector: 'jhi-settings',\n     templateUrl: './settings.component.html',\n })\n export class SettingsComponent implements OnInit {\n-    error: string | null;\n-    success: string | null;\n-    settingsAccount: Account;\n-    languages: string[];\n+    success = false;\n+    account: User;\n+    languages = LANGUAGES;\n     settingsForm = this.fb.group({\n-        firstName: [undefined, [Validators.required, Validators.minLength(1), Validators.maxLength(50)]],\n-        lastName: [undefined, [Validators.required, Validators.minLength(1), Validators.maxLength(50)]],\n+        firstName: [undefined, [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n+        lastName: [undefined, [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n         email: [undefined, [Validators.required, Validators.minLength(5), Validators.maxLength(254), Validators.email]],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0NDY5OA=="}, "originalCommit": {"oid": "0bb2e7999aa14855de8c617f3e23b72366256f48"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDczNjUwOnYy", "diffSide": "RIGHT", "path": "src/test/resources/config/application-artemis.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzowNjo0OVrOHdc8oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzozMDozNlrOHddYvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0NTAyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})\n          \n          \n            \n                        allowed-email-pattern: [a-zA-Z0-9_\\-\\.\\+]+@[a-zA-Z0-9_\\-\\.]+\\.[a-zA-Z]{2,5}", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500645025", "createdAt": "2020-10-06T23:06:49Z", "author": {"login": "MaisiKoleni"}, "path": "src/test/resources/config/application-artemis.yml", "diffHunk": "@@ -21,6 +21,9 @@ artemis:\n         internal-admin:\n             username: artemis_admin\n             password: artemis_admin\n+        registration:\n+            enabled: true\n+            allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bb2e7999aa14855de8c617f3e23b72366256f48"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY1MjIyMg==", "bodyText": "if we write it like this, we have to put it into '...'", "url": "https://github.com/ls1intum/Artemis/pull/2143#discussion_r500652222", "createdAt": "2020-10-06T23:30:36Z", "author": {"login": "krusche"}, "path": "src/test/resources/config/application-artemis.yml", "diffHunk": "@@ -21,6 +21,9 @@ artemis:\n         internal-admin:\n             username: artemis_admin\n             password: artemis_admin\n+        registration:\n+            enabled: true\n+            allowed-email-pattern: ([a-zA-Z0-9_\\-\\.\\+]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0NTAyNQ=="}, "originalCommit": {"oid": "0bb2e7999aa14855de8c617f3e23b72366256f48"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4734, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}