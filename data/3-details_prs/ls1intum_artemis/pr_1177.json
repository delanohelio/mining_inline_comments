{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMDY0OTM1", "number": 1177, "title": "Enhancement: Guided Tour update orientation", "bodyText": "Checklist\n\n I tested all changes and all related features with different users (student, tutor, instructor, admin) on the test server https://artemistest.ase.in.tum.de.\n Client: I added multiple integration tests (Jest) related to the features\n Client: I added authorities to all new routes and check the course groups for displaying navigation elements (links, buttons)\n Client: I documented the TypeScript code using JSDoc style.\n Client: I added multiple screenshots/screencasts of my UI changes\n Client: I translated all the newly inserted strings into German and English\n\nMotivation and Context\nThis PR should solve the issue #972\n(Description in issue)\nSteps for Testing\n\nAll tutorials should work as usual\nOn the course overview page, the tour step for the Tutorial Course might be cut off depending on the position of the course tile. In that case the position of the tour step should be flipped (see screencast).\n\nScreenshots", "createdAt": "2020-01-07T16:20:17Z", "url": "https://github.com/ls1intum/Artemis/pull/1177", "merged": true, "mergeCommit": {"oid": "c7da971857948990f9799a4d05bfef866c6b5dcf"}, "closed": true, "closedAt": "2020-01-27T21:28:39Z", "author": {"login": "lovaiible"}, "timelineItems": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb32VnjgH2gAyMzYwMDY0OTM1OjhmYTRhMmI1NTY5YTg1Y2M3ZWRkY2M2MGIyODE3OTU5M2IzODIxY2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-jnyPAFqTM0ODk4NzMwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8fa4a2b5569a85cc7eddcc60b28179593b3821ce", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/8fa4a2b5569a85cc7eddcc60b28179593b3821ce", "committedDate": "2020-01-07T01:19:15Z", "message": "Implement orientation update for tour step"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d3b5bb82eeade8dc233cc30e7808ffb1a6c09a1", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/0d3b5bb82eeade8dc233cc30e7808ffb1a6c09a1", "committedDate": "2020-01-07T01:43:54Z", "message": "Improve calculation in getTopScrollingPosition() method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f747568581aac46b02d6715722d7e82bdf05c94d", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/f747568581aac46b02d6715722d7e82bdf05c94d", "committedDate": "2020-01-07T01:57:26Z", "message": "Improve calculation in getTopScrollingPosition() method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73a5bf98974899e58691c5598a3c1dfd016c2f6a", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/73a5bf98974899e58691c5598a3c1dfd016c2f6a", "committedDate": "2020-01-07T16:10:31Z", "message": "Merge branch 'develop' into enhancement/guided-tour/update-orientation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dd5be9d2b8969110b6fc5da60e521be9d9b273d", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/0dd5be9d2b8969110b6fc5da60e521be9d9b273d", "committedDate": "2020-01-09T01:21:03Z", "message": "Merge branch 'develop' into enhancement/guided-tour/update-orientation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3346c1f9eb44b3f1147c8f799b099ba8f121e0c8", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/3346c1f9eb44b3f1147c8f799b099ba8f121e0c8", "committedDate": "2020-01-09T21:45:25Z", "message": "Change accessibility of some public methods of the guided-tour.component.ts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33caea10f06d2897b41e035161f535e7cc6f3571", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/33caea10f06d2897b41e035161f535e7cc6f3571", "committedDate": "2020-01-09T22:00:36Z", "message": "Fix build error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f52ced607ac38f854323dd91d3412003c77a937c", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/f52ced607ac38f854323dd91d3412003c77a937c", "committedDate": "2020-01-09T22:43:48Z", "message": "Fix client tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "646682bff1e566a33e2b4f83b232537792b11258", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/646682bff1e566a33e2b4f83b232537792b11258", "committedDate": "2020-01-10T17:14:24Z", "message": "Merge branch 'develop' into enhancement/guided-tour/update-orientation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cbe9d5ebf1faafadc2068d74faba2c01b4cb1b0", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/0cbe9d5ebf1faafadc2068d74faba2c01b4cb1b0", "committedDate": "2020-01-10T20:25:54Z", "message": "Add and update client tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bef377f578dcdf247335ce792986343a6d60baef", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/bef377f578dcdf247335ce792986343a6d60baef", "committedDate": "2020-01-10T20:32:04Z", "message": "Run prettier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6258a9a969e391e53337213272faa23ec4c9583", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/b6258a9a969e391e53337213272faa23ec4c9583", "committedDate": "2020-01-10T21:46:05Z", "message": "Fix offset calculation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d596751dee9c8d0059a9183122dd2d32387beb1b", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/d596751dee9c8d0059a9183122dd2d32387beb1b", "committedDate": "2020-01-12T17:56:10Z", "message": "Merge branch 'develop' into enhancement/guided-tour/update-orientation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50abc3002707fa1a713930ad9dd6772e7a9035c2", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/50abc3002707fa1a713930ad9dd6772e7a9035c2", "committedDate": "2020-01-13T03:26:25Z", "message": "Refactor elementInViewport method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a442e18e1880a95b879c6bedf6dcb25fbf2a5aca", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/a442e18e1880a95b879c6bedf6dcb25fbf2a5aca", "committedDate": "2020-01-13T03:29:16Z", "message": "Merge branch 'develop' into enhancement/guided-tour/update-orientation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a44a39e8baafd80837c13255af30b5748e6eae6b", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/a44a39e8baafd80837c13255af30b5748e6eae6b", "committedDate": "2020-01-13T03:50:42Z", "message": "Run prettier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55501e520727a9aaa8de722613ffb2ac55bd1c44", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/55501e520727a9aaa8de722613ffb2ac55bd1c44", "committedDate": "2020-01-16T02:37:10Z", "message": "Merge branch 'develop' into enhancement/guided-tour/update-orientation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db7062aa2219874dae3bf21b2d6fa3df79c05bfc", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/db7062aa2219874dae3bf21b2d6fa3df79c05bfc", "committedDate": "2020-01-17T12:56:26Z", "message": "Adjust implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fed06eb5621ec50b8d218540ef2a99724726083", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/9fed06eb5621ec50b8d218540ef2a99724726083", "committedDate": "2020-01-17T13:15:49Z", "message": "Run prettier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d9e3e8cbd80680b1a5bcae7d565c359e08752a3", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/1d9e3e8cbd80680b1a5bcae7d565c359e08752a3", "committedDate": "2020-01-17T13:35:07Z", "message": "Revert refactoring and fix client tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60764b50b4a5e1a214107f57800755ac3ec8ea07", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/60764b50b4a5e1a214107f57800755ac3ec8ea07", "committedDate": "2020-01-17T20:03:42Z", "message": "Fix helper methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "614a932692b67dd1fc1559f5e1d41138a6eccad5", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/614a932692b67dd1fc1559f5e1d41138a6eccad5", "committedDate": "2020-01-17T20:17:22Z", "message": "Merge branch 'develop' into enhancement/guided-tour/update-orientation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "175921648f169ab6a11c1153e5f3f0aabb024559", "author": {"user": {"login": "krusche", "name": "Stephan Krusche"}}, "url": "https://github.com/ls1intum/Artemis/commit/175921648f169ab6a11c1153e5f3f0aabb024559", "committedDate": "2020-01-21T00:19:03Z", "message": "Merge branch 'develop' into enhancement/guided-tour/update-orientation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NTgyODk4", "url": "https://github.com/ls1intum/Artemis/pull/1177#pullrequestreview-345582898", "createdAt": "2020-01-21T00:34:19Z", "commit": {"oid": "175921648f169ab6a11c1153e5f3f0aabb024559"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1ODk1NDk0", "url": "https://github.com/ls1intum/Artemis/pull/1177#pullrequestreview-345895494", "createdAt": "2020-01-21T13:58:55Z", "commit": {"oid": "175921648f169ab6a11c1153e5f3f0aabb024559"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzo1ODo1NVrOFf65Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoxMjowMVrOFf7VQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAxNTA5MQ==", "bodyText": "Would be nice to wrap the subtract and add operations with closures. It is quite hard to follow, when you add another statement with &&", "url": "https://github.com/ls1intum/Artemis/pull/1177#discussion_r369015091", "createdAt": "2020-01-21T13:58:55Z", "author": {"login": "maxr96"}, "path": "src/main/webapp/app/guided-tour/guided-tour.component.ts", "diffHunk": "@@ -173,68 +178,191 @@ export class GuidedTourComponent implements AfterViewInit, OnDestroy {\n     /**\n      * Scroll to and set highlighted element\n      */\n-    public scrollToAndSetElement(): void {\n+    private scrollToAndSetElement(): void {\n         this.selectedElementRect = this.updateStepLocation(this.getSelectedElement(), false);\n         this.observeSelectedRectPosition();\n \n         // Set timeout to allow things to render in order to scroll to the correct location\n         setTimeout(() => {\n-            if (this.isTourOnScreen()) {\n+            if (this.isTourOnScreen(Direction.VERTICAL) && this.isTourOnScreen(Direction.HORIZONTAL)) {\n                 return;\n             }\n-            const topPosition = this.getTopScrollingPosition();\n-            try {\n-                window.scrollTo({\n-                    left: 0,\n-                    top: topPosition,\n-                    behavior: 'smooth',\n-                });\n-            } catch (err) {\n-                if (err instanceof TypeError) {\n-                    window.scroll(0, topPosition);\n-                } else {\n-                    throw err;\n+            if (!this.isTourOnScreen(Direction.VERTICAL)) {\n+                const topPosition = this.getTopScrollingPosition();\n+                try {\n+                    window.scrollTo({ left: 0, top: topPosition, behavior: 'smooth' });\n+                } catch (err) {\n+                    if (err instanceof TypeError) {\n+                        window.scroll(0, topPosition);\n+                    } else {\n+                        throw err;\n+                    }\n                 }\n             }\n+            setTimeout(() => {\n+                if (!this.isTourOnScreen(Direction.HORIZONTAL)) {\n+                    this.flipOrientation();\n+                }\n+            }, 300);\n         }, 0);\n     }\n \n+    /**\n+     * Check if the current tour step has a bottom orientation\n+     * @return true if the current tour step orientation is bottom, otherwise false\n+     */\n+    private isBottom(): boolean {\n+        if (this.currentTourStep && this.currentTourStep.orientation) {\n+            return (\n+                this.currentTourStep.orientation === Orientation.BOTTOM ||\n+                this.currentTourStep.orientation === Orientation.BOTTOMLEFT ||\n+                this.currentTourStep.orientation === Orientation.BOTTOMRIGHT\n+            );\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Check if the current tour step has a top orientation\n+     * @return true if the current tour step orientation is bottom, otherwise false\n+     */\n+    private isTop(): boolean {\n+        if (this.currentTourStep && this.currentTourStep.orientation) {\n+            return (\n+                this.currentTourStep.orientation === Orientation.TOP ||\n+                this.currentTourStep.orientation === Orientation.TOPLEFT ||\n+                this.currentTourStep.orientation === Orientation.TOPRIGHT\n+            );\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Check if the current tour step has a left orientation\n+     * @return true if the current tour step orientation is left, otherwise false\n+     */\n+    private isLeft(): boolean {\n+        if (this.currentTourStep && this.currentTourStep.orientation) {\n+            return (\n+                this.currentTourStep.orientation === Orientation.LEFT ||\n+                this.currentTourStep.orientation === Orientation.TOPLEFT ||\n+                this.currentTourStep.orientation === Orientation.BOTTOMLEFT\n+            );\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Check if the current tour step has a right orientation\n+     * @return true if the current tour step orientation is right, otherwise false\n+     */\n+    private isRight(): boolean {\n+        if (this.currentTourStep && this.currentTourStep.orientation) {\n+            return (\n+                this.currentTourStep.orientation === Orientation.RIGHT ||\n+                this.currentTourStep.orientation === Orientation.TOPRIGHT ||\n+                this.currentTourStep.orientation === Orientation.BOTTOMRIGHT\n+            );\n+        }\n+        return false;\n+    }\n+\n     /**\n      * Check if the tour step element would be visible on screen\n      * @return true if tour step is visible on screen, otherwise false\n      */\n-    public isTourOnScreen(): boolean {\n+    private isTourOnScreen(direction: Direction): boolean {\n         if (!this.currentTourStep) {\n             return false;\n         }\n-        return !this.currentTourStep.highlightSelector || (this.elementInViewport(this.getSelectedElement()) && this.elementInViewport(this.tourStep.nativeElement));\n+        switch (direction) {\n+            case Direction.HORIZONTAL: {\n+                return !this.currentTourStep.highlightSelector || this.elementInViewport(this.getSelectedElement(), direction);\n+            }\n+            case Direction.VERTICAL: {\n+                return (\n+                    !this.currentTourStep.highlightSelector ||\n+                    (this.elementInViewport(this.getSelectedElement(), direction) && this.elementInViewport(this.tourStep.nativeElement, direction))\n+                );\n+            }\n+        }\n     }\n \n     /**\n      * Define if HTMLElement is visible in current viewport\n      * Modified from https://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n      * @param element that should be checked\n+     * @param direction it should be checked if the tour step is horizontally or vertically in the viewport\n      * @return true if element is in viewport, otherwise false\n      */\n-    public elementInViewport(element: HTMLElement | null): boolean {\n+    private elementInViewport(element: HTMLElement | null, direction: Direction): boolean {\n         if (!element) {\n             return false;\n         }\n-        let top = element.offsetTop;\n-        const height = element.offsetHeight;\n \n-        while (element.offsetParent) {\n-            element = element.offsetParent as HTMLElement;\n-            top += element.offsetTop;\n-        }\n+        let elementInViewPort = true;\n \n-        const scrollAdjustment = this.currentTourStep && this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0;\n-        const stepScreenAdjustment = this.getStepScreenAdjustment();\n+        switch (direction) {\n+            case Direction.HORIZONTAL: {\n+                const width = element.offsetWidth;\n+                const left = calculateLeftOffset(element);\n+                const tourStepWidth = this.tourStep.nativeElement.offsetWidth;\n+                elementInViewPort = isElementInViewPortHorizontally(this.currentTourStep.orientation, left, width, tourStepWidth);\n+                break;\n+            }\n+            case Direction.VERTICAL: {\n+                const scrollAdjustment = this.currentTourStep && this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0;\n+                const stepScreenAdjustment = this.getStepScreenAdjustment();\n+                const top = calculateTopOffset(element);\n+                const height = element.offsetHeight;\n+\n+                if (this.isBottom()) {\n+                    elementInViewPort =\n+                        top >= window.pageYOffset + this.topOfPageAdjustment + scrollAdjustment + stepScreenAdjustment && top + height <= window.innerHeight + window.pageYOffset;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175921648f169ab6a11c1153e5f3f0aabb024559"}, "originalPosition": 253}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAxODk1NA==", "bodyText": "Hm here you are accessing orientation directly on the class and below you do it on currentTourStep. If I understand correctly it should be only accessed with the first approach.", "url": "https://github.com/ls1intum/Artemis/pull/1177#discussion_r369018954", "createdAt": "2020-01-21T14:05:57Z", "author": {"login": "maxr96"}, "path": "src/main/webapp/app/guided-tour/guided-tour.component.ts", "diffHunk": "@@ -173,68 +178,191 @@ export class GuidedTourComponent implements AfterViewInit, OnDestroy {\n     /**\n      * Scroll to and set highlighted element\n      */\n-    public scrollToAndSetElement(): void {\n+    private scrollToAndSetElement(): void {\n         this.selectedElementRect = this.updateStepLocation(this.getSelectedElement(), false);\n         this.observeSelectedRectPosition();\n \n         // Set timeout to allow things to render in order to scroll to the correct location\n         setTimeout(() => {\n-            if (this.isTourOnScreen()) {\n+            if (this.isTourOnScreen(Direction.VERTICAL) && this.isTourOnScreen(Direction.HORIZONTAL)) {\n                 return;\n             }\n-            const topPosition = this.getTopScrollingPosition();\n-            try {\n-                window.scrollTo({\n-                    left: 0,\n-                    top: topPosition,\n-                    behavior: 'smooth',\n-                });\n-            } catch (err) {\n-                if (err instanceof TypeError) {\n-                    window.scroll(0, topPosition);\n-                } else {\n-                    throw err;\n+            if (!this.isTourOnScreen(Direction.VERTICAL)) {\n+                const topPosition = this.getTopScrollingPosition();\n+                try {\n+                    window.scrollTo({ left: 0, top: topPosition, behavior: 'smooth' });\n+                } catch (err) {\n+                    if (err instanceof TypeError) {\n+                        window.scroll(0, topPosition);\n+                    } else {\n+                        throw err;\n+                    }\n                 }\n             }\n+            setTimeout(() => {\n+                if (!this.isTourOnScreen(Direction.HORIZONTAL)) {\n+                    this.flipOrientation();\n+                }\n+            }, 300);\n         }, 0);\n     }\n \n+    /**\n+     * Check if the current tour step has a bottom orientation\n+     * @return true if the current tour step orientation is bottom, otherwise false\n+     */\n+    private isBottom(): boolean {\n+        if (this.currentTourStep && this.currentTourStep.orientation) {\n+            return (\n+                this.currentTourStep.orientation === Orientation.BOTTOM ||\n+                this.currentTourStep.orientation === Orientation.BOTTOMLEFT ||\n+                this.currentTourStep.orientation === Orientation.BOTTOMRIGHT\n+            );\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Check if the current tour step has a top orientation\n+     * @return true if the current tour step orientation is bottom, otherwise false\n+     */\n+    private isTop(): boolean {\n+        if (this.currentTourStep && this.currentTourStep.orientation) {\n+            return (\n+                this.currentTourStep.orientation === Orientation.TOP ||\n+                this.currentTourStep.orientation === Orientation.TOPLEFT ||\n+                this.currentTourStep.orientation === Orientation.TOPRIGHT\n+            );\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Check if the current tour step has a left orientation\n+     * @return true if the current tour step orientation is left, otherwise false\n+     */\n+    private isLeft(): boolean {\n+        if (this.currentTourStep && this.currentTourStep.orientation) {\n+            return (\n+                this.currentTourStep.orientation === Orientation.LEFT ||\n+                this.currentTourStep.orientation === Orientation.TOPLEFT ||\n+                this.currentTourStep.orientation === Orientation.BOTTOMLEFT\n+            );\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Check if the current tour step has a right orientation\n+     * @return true if the current tour step orientation is right, otherwise false\n+     */\n+    private isRight(): boolean {\n+        if (this.currentTourStep && this.currentTourStep.orientation) {\n+            return (\n+                this.currentTourStep.orientation === Orientation.RIGHT ||\n+                this.currentTourStep.orientation === Orientation.TOPRIGHT ||\n+                this.currentTourStep.orientation === Orientation.BOTTOMRIGHT\n+            );\n+        }\n+        return false;\n+    }\n+\n     /**\n      * Check if the tour step element would be visible on screen\n      * @return true if tour step is visible on screen, otherwise false\n      */\n-    public isTourOnScreen(): boolean {\n+    private isTourOnScreen(direction: Direction): boolean {\n         if (!this.currentTourStep) {\n             return false;\n         }\n-        return !this.currentTourStep.highlightSelector || (this.elementInViewport(this.getSelectedElement()) && this.elementInViewport(this.tourStep.nativeElement));\n+        switch (direction) {\n+            case Direction.HORIZONTAL: {\n+                return !this.currentTourStep.highlightSelector || this.elementInViewport(this.getSelectedElement(), direction);\n+            }\n+            case Direction.VERTICAL: {\n+                return (\n+                    !this.currentTourStep.highlightSelector ||\n+                    (this.elementInViewport(this.getSelectedElement(), direction) && this.elementInViewport(this.tourStep.nativeElement, direction))\n+                );\n+            }\n+        }\n     }\n \n     /**\n      * Define if HTMLElement is visible in current viewport\n      * Modified from https://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n      * @param element that should be checked\n+     * @param direction it should be checked if the tour step is horizontally or vertically in the viewport\n      * @return true if element is in viewport, otherwise false\n      */\n-    public elementInViewport(element: HTMLElement | null): boolean {\n+    private elementInViewport(element: HTMLElement | null, direction: Direction): boolean {\n         if (!element) {\n             return false;\n         }\n-        let top = element.offsetTop;\n-        const height = element.offsetHeight;\n \n-        while (element.offsetParent) {\n-            element = element.offsetParent as HTMLElement;\n-            top += element.offsetTop;\n-        }\n+        let elementInViewPort = true;\n \n-        const scrollAdjustment = this.currentTourStep && this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0;\n-        const stepScreenAdjustment = this.getStepScreenAdjustment();\n+        switch (direction) {\n+            case Direction.HORIZONTAL: {\n+                const width = element.offsetWidth;\n+                const left = calculateLeftOffset(element);\n+                const tourStepWidth = this.tourStep.nativeElement.offsetWidth;\n+                elementInViewPort = isElementInViewPortHorizontally(this.currentTourStep.orientation, left, width, tourStepWidth);\n+                break;\n+            }\n+            case Direction.VERTICAL: {\n+                const scrollAdjustment = this.currentTourStep && this.currentTourStep.scrollAdjustment ? this.currentTourStep.scrollAdjustment : 0;\n+                const stepScreenAdjustment = this.getStepScreenAdjustment();\n+                const top = calculateTopOffset(element);\n+                const height = element.offsetHeight;\n+\n+                if (this.isBottom()) {\n+                    elementInViewPort =\n+                        top >= window.pageYOffset + this.topOfPageAdjustment + scrollAdjustment + stepScreenAdjustment && top + height <= window.innerHeight + window.pageYOffset;\n+                } else {\n+                    elementInViewPort =\n+                        top >= window.pageYOffset + this.topOfPageAdjustment - stepScreenAdjustment && top + height + scrollAdjustment <= window.innerHeight + window.pageYOffset;\n+                }\n+                break;\n+            }\n+        }\n+        return elementInViewPort;\n+    }\n \n-        if (this.isBottom()) {\n-            return top >= window.pageYOffset + this.topOfPageAdjustment + scrollAdjustment + stepScreenAdjustment && top + height <= window.innerHeight;\n-        } else {\n-            return top >= window.pageYOffset + this.topOfPageAdjustment - stepScreenAdjustment && top + height + scrollAdjustment <= window.innerHeight;\n+    /**\n+     * Flips the orientation of the current tour step horizontally\n+     */\n+    private flipOrientation(): void {\n+        if (this.isLeft()) {\n+            switch (this.orientation) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175921648f169ab6a11c1153e5f3f0aabb024559"}, "originalPosition": 273}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyMDAxNg==", "bodyText": "You should be able to use just this.orientation here since you already assign it in the beginning", "url": "https://github.com/ls1intum/Artemis/pull/1177#discussion_r369020016", "createdAt": "2020-01-21T14:08:01Z", "author": {"login": "maxr96"}, "path": "src/main/webapp/app/guided-tour/guided-tour.component.ts", "diffHunk": "@@ -173,68 +178,191 @@ export class GuidedTourComponent implements AfterViewInit, OnDestroy {\n     /**\n      * Scroll to and set highlighted element\n      */\n-    public scrollToAndSetElement(): void {\n+    private scrollToAndSetElement(): void {\n         this.selectedElementRect = this.updateStepLocation(this.getSelectedElement(), false);\n         this.observeSelectedRectPosition();\n \n         // Set timeout to allow things to render in order to scroll to the correct location\n         setTimeout(() => {\n-            if (this.isTourOnScreen()) {\n+            if (this.isTourOnScreen(Direction.VERTICAL) && this.isTourOnScreen(Direction.HORIZONTAL)) {\n                 return;\n             }\n-            const topPosition = this.getTopScrollingPosition();\n-            try {\n-                window.scrollTo({\n-                    left: 0,\n-                    top: topPosition,\n-                    behavior: 'smooth',\n-                });\n-            } catch (err) {\n-                if (err instanceof TypeError) {\n-                    window.scroll(0, topPosition);\n-                } else {\n-                    throw err;\n+            if (!this.isTourOnScreen(Direction.VERTICAL)) {\n+                const topPosition = this.getTopScrollingPosition();\n+                try {\n+                    window.scrollTo({ left: 0, top: topPosition, behavior: 'smooth' });\n+                } catch (err) {\n+                    if (err instanceof TypeError) {\n+                        window.scroll(0, topPosition);\n+                    } else {\n+                        throw err;\n+                    }\n                 }\n             }\n+            setTimeout(() => {\n+                if (!this.isTourOnScreen(Direction.HORIZONTAL)) {\n+                    this.flipOrientation();\n+                }\n+            }, 300);\n         }, 0);\n     }\n \n+    /**\n+     * Check if the current tour step has a bottom orientation\n+     * @return true if the current tour step orientation is bottom, otherwise false\n+     */\n+    private isBottom(): boolean {\n+        if (this.currentTourStep && this.currentTourStep.orientation) {\n+            return (\n+                this.currentTourStep.orientation === Orientation.BOTTOM ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175921648f169ab6a11c1153e5f3f0aabb024559"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyMjI3Mw==", "bodyText": "Why do you need @ts-ignore here?", "url": "https://github.com/ls1intum/Artemis/pull/1177#discussion_r369022273", "createdAt": "2020-01-21T14:12:01Z", "author": {"login": "maxr96"}, "path": "src/main/webapp/app/guided-tour/guided-tour.constants.ts", "diffHunk": "@@ -38,8 +31,17 @@ export enum OverlayPosition {\n }\n \n export enum UserInteractionEvent {\n+    // @ts-ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175921648f169ab6a11c1153e5f3f0aabb024559"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MDI4NTY4", "url": "https://github.com/ls1intum/Artemis/pull/1177#pullrequestreview-346028568", "createdAt": "2020-01-21T16:46:05Z", "commit": {"oid": "175921648f169ab6a11c1153e5f3f0aabb024559"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNjo0NjowNVrOFgBG6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNzowMDowNlrOFgBn1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTExNjkwNQ==", "bodyText": "this. should be redundant here.", "url": "https://github.com/ls1intum/Artemis/pull/1177#discussion_r369116905", "createdAt": "2020-01-21T16:46:05Z", "author": {"login": "madwau"}, "path": "src/main/webapp/app/guided-tour/guided-tour.component.html", "diffHunk": "@@ -7,7 +7,7 @@\n     <div\n         #tourStep\n         *ngIf=\"currentTourStep\"\n-        class=\"tour-step tour-{{ currentTourStep.orientation }}\"\n+        class=\"tour-step tour-{{ this.orientation }}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175921648f169ab6a11c1153e5f3f0aabb024559"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTEyNTMzNA==", "bodyText": "I assume this timeout is needed to let the previously triggered scrolling finish? Is it not possible to move the flip orientation before the scrolling without timeout since the scrolling should not affect whether the tour is in the viewport horizontally?\nCurrently, the 300ms are noticeable and the user can see the popup jumping into the flipped orientation. Not super serious but if this could be avoided, even better.", "url": "https://github.com/ls1intum/Artemis/pull/1177#discussion_r369125334", "createdAt": "2020-01-21T17:00:06Z", "author": {"login": "madwau"}, "path": "src/main/webapp/app/guided-tour/guided-tour.component.ts", "diffHunk": "@@ -173,68 +178,191 @@ export class GuidedTourComponent implements AfterViewInit, OnDestroy {\n     /**\n      * Scroll to and set highlighted element\n      */\n-    public scrollToAndSetElement(): void {\n+    private scrollToAndSetElement(): void {\n         this.selectedElementRect = this.updateStepLocation(this.getSelectedElement(), false);\n         this.observeSelectedRectPosition();\n \n         // Set timeout to allow things to render in order to scroll to the correct location\n         setTimeout(() => {\n-            if (this.isTourOnScreen()) {\n+            if (this.isTourOnScreen(Direction.VERTICAL) && this.isTourOnScreen(Direction.HORIZONTAL)) {\n                 return;\n             }\n-            const topPosition = this.getTopScrollingPosition();\n-            try {\n-                window.scrollTo({\n-                    left: 0,\n-                    top: topPosition,\n-                    behavior: 'smooth',\n-                });\n-            } catch (err) {\n-                if (err instanceof TypeError) {\n-                    window.scroll(0, topPosition);\n-                } else {\n-                    throw err;\n+            if (!this.isTourOnScreen(Direction.VERTICAL)) {\n+                const topPosition = this.getTopScrollingPosition();\n+                try {\n+                    window.scrollTo({ left: 0, top: topPosition, behavior: 'smooth' });\n+                } catch (err) {\n+                    if (err instanceof TypeError) {\n+                        window.scroll(0, topPosition);\n+                    } else {\n+                        throw err;\n+                    }\n                 }\n             }\n+            setTimeout(() => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "175921648f169ab6a11c1153e5f3f0aabb024559"}, "originalPosition": 123}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d310783a0c86b13996dabff6a905c3b8c9c1798d", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/d310783a0c86b13996dabff6a905c3b8c9c1798d", "committedDate": "2020-01-22T16:33:41Z", "message": "Merge branch 'develop' into enhancement/guided-tour/update-orientation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13733f9afef0cafa64790d5f92242024c7607ff6", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/13733f9afef0cafa64790d5f92242024c7607ff6", "committedDate": "2020-01-23T01:37:41Z", "message": "Address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2060990b1d5f2c86f29152eaa6d215e8305d2029", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/2060990b1d5f2c86f29152eaa6d215e8305d2029", "committedDate": "2020-01-27T01:53:53Z", "message": "Adjust scrolling calculation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f9a0e53faf88955be2c20c58d85a750d6a9896e", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/4f9a0e53faf88955be2c20c58d85a750d6a9896e", "committedDate": "2020-01-27T02:10:45Z", "message": "Apply feedback and fix calculation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b73512862e1e84a700bf71a8c8e42cd877ad04a", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/6b73512862e1e84a700bf71a8c8e42cd877ad04a", "committedDate": "2020-01-27T02:18:55Z", "message": "Fix flipOrientation method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02e7b90a6e3eb3faae39f948bca7a17ade53aebb", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/02e7b90a6e3eb3faae39f948bca7a17ade53aebb", "committedDate": "2020-01-27T02:30:40Z", "message": "Apply prettier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3fd3eceb49861bbeb5ac2986a171b1d8016d66d", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/d3fd3eceb49861bbeb5ac2986a171b1d8016d66d", "committedDate": "2020-01-27T02:37:05Z", "message": "Remove timeout when flipping orientation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a487fbe23938b2ca59fa632fd81c47fe5557834f", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/a487fbe23938b2ca59fa632fd81c47fe5557834f", "committedDate": "2020-01-27T02:37:14Z", "message": "Merge branch 'develop' into enhancement/guided-tour/update-orientation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0018275918e2bfc8aecc465a146bf06957414157", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/0018275918e2bfc8aecc465a146bf06957414157", "committedDate": "2020-01-27T15:21:14Z", "message": "Merge branch 'develop' into enhancement/guided-tour/update-orientation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTcxODk1", "url": "https://github.com/ls1intum/Artemis/pull/1177#pullrequestreview-348971895", "createdAt": "2020-01-27T21:01:48Z", "commit": {"oid": "0018275918e2bfc8aecc465a146bf06957414157"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTgzMzg3", "url": "https://github.com/ls1intum/Artemis/pull/1177#pullrequestreview-348983387", "createdAt": "2020-01-27T21:21:48Z", "commit": {"oid": "0018275918e2bfc8aecc465a146bf06957414157"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTg3MzAz", "url": "https://github.com/ls1intum/Artemis/pull/1177#pullrequestreview-348987303", "createdAt": "2020-01-27T21:28:22Z", "commit": {"oid": "0018275918e2bfc8aecc465a146bf06957414157"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3087, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}