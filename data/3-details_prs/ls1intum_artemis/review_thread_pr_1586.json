{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI5ODkzMzQx", "number": 1586, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDoyOTo0MFrOEDnZpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo1MDoxNlrOEEB9Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjI2NzI2OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDoyOTo0MFrOGgvN9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTo0MzowM1rOGhBgVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4MTIzNw==", "bodyText": "why do we need an earlier version?", "url": "https://github.com/ls1intum/Artemis/pull/1586#discussion_r436981237", "createdAt": "2020-06-08T20:29:40Z", "author": {"login": "krusche"}, "path": "build.gradle", "diffHunk": "@@ -182,22 +182,24 @@ dependencies {\n \n     implementation \"io.github.jhipster:jhipster-framework\"\n     implementation \"org.springframework.boot:spring-boot-starter-cache:${spring_boot_version}\"\n-    implementation \"io.micrometer:micrometer-registry-prometheus:1.5.1\"\n+    implementation \"io.micrometer:micrometer-registry-prometheus:1.3.5\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "412bc6b3b5581db179fa918dad449caa498e2165"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4MDg1Mw==", "bodyText": "I cannot remember what was the initial cause, but I've just tested it with 1.5.1 and it seems to work, so I've reverted this change.", "url": "https://github.com/ls1intum/Artemis/pull/1586#discussion_r437280853", "createdAt": "2020-06-09T09:43:03Z", "author": {"login": "sleiss"}, "path": "build.gradle", "diffHunk": "@@ -182,22 +182,24 @@ dependencies {\n \n     implementation \"io.github.jhipster:jhipster-framework\"\n     implementation \"org.springframework.boot:spring-boot-starter-cache:${spring_boot_version}\"\n-    implementation \"io.micrometer:micrometer-registry-prometheus:1.5.1\"\n+    implementation \"io.micrometer:micrometer-registry-prometheus:1.3.5\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4MTIzNw=="}, "originalCommit": {"oid": "412bc6b3b5581db179fa918dad449caa498e2165"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjU4MjcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/config/CacheConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTozOToyMVrOGhZa1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDozNDowM1rOGhbKbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3MjY2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (this.registration == null) {\n          \n          \n            \n                    if (registration == null) {\n          \n      \n    \n    \n  \n\nUnneeded this", "url": "https://github.com/ls1intum/Artemis/pull/1586#discussion_r437672662", "createdAt": "2020-06-09T19:39:21Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/config/CacheConfiguration.java", "diffHunk": "@@ -1,215 +1,127 @@\n package de.tum.in.www1.artemis.config;\n \n-import java.time.Duration;\n+import javax.annotation.PreDestroy;\n \n-import javax.cache.CacheManager;\n-\n-import org.ehcache.config.builders.CacheConfigurationBuilder;\n-import org.ehcache.config.builders.ExpiryPolicyBuilder;\n-import org.ehcache.config.builders.ResourcePoolsBuilder;\n-import org.ehcache.jsr107.Eh107Configuration;\n-import org.hibernate.cache.jcache.ConfigSettings;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.boot.autoconfigure.cache.JCacheManagerCustomizer;\n-import org.springframework.boot.autoconfigure.orm.jpa.HibernatePropertiesCustomizer;\n+import org.springframework.boot.autoconfigure.web.ServerProperties;\n import org.springframework.boot.info.BuildProperties;\n import org.springframework.boot.info.GitProperties;\n+import org.springframework.cache.CacheManager;\n import org.springframework.cache.annotation.EnableCaching;\n import org.springframework.cache.interceptor.KeyGenerator;\n+import org.springframework.cloud.client.ServiceInstance;\n+import org.springframework.cloud.client.discovery.DiscoveryClient;\n+import org.springframework.cloud.client.serviceregistry.Registration;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.env.Environment;\n+import org.springframework.core.env.Profiles;\n+\n+import com.hazelcast.config.*;\n+import com.hazelcast.core.Hazelcast;\n+import com.hazelcast.core.HazelcastInstance;\n \n-import de.tum.in.www1.artemis.domain.*;\n-import de.tum.in.www1.artemis.domain.exam.Exam;\n-import de.tum.in.www1.artemis.domain.exam.ExerciseGroup;\n-import de.tum.in.www1.artemis.domain.exam.StudentExam;\n-import de.tum.in.www1.artemis.domain.modeling.*;\n-import de.tum.in.www1.artemis.domain.notification.GroupNotification;\n-import de.tum.in.www1.artemis.domain.notification.Notification;\n-import de.tum.in.www1.artemis.domain.notification.SingleUserNotification;\n-import de.tum.in.www1.artemis.domain.notification.SystemNotification;\n-import de.tum.in.www1.artemis.domain.participation.Participation;\n-import de.tum.in.www1.artemis.domain.participation.TutorParticipation;\n-import de.tum.in.www1.artemis.domain.quiz.*;\n-import de.tum.in.www1.artemis.repository.UserRepository;\n+import io.github.jhipster.config.JHipsterConstants;\n import io.github.jhipster.config.JHipsterProperties;\n import io.github.jhipster.config.cache.PrefixedKeyGenerator;\n \n @Configuration\n @EnableCaching\n public class CacheConfiguration {\n \n+    private final Logger log = LoggerFactory.getLogger(CacheConfiguration.class);\n+\n     private GitProperties gitProperties;\n \n     private BuildProperties buildProperties;\n \n-    private final javax.cache.configuration.Configuration<Object, Object> jcacheConfiguration;\n+    private final Environment env;\n+\n+    private final ServerProperties serverProperties;\n \n-    public CacheConfiguration(JHipsterProperties jHipsterProperties) {\n-        JHipsterProperties.Cache.Ehcache ehcache = jHipsterProperties.getCache().getEhcache();\n+    private final DiscoveryClient discoveryClient;\n \n-        jcacheConfiguration = Eh107Configuration.fromEhcacheCacheConfiguration(\n-                CacheConfigurationBuilder.newCacheConfigurationBuilder(Object.class, Object.class, ResourcePoolsBuilder.heap(ehcache.getMaxEntries()))\n-                        .withExpiry(ExpiryPolicyBuilder.timeToLiveExpiration(Duration.ofSeconds(ehcache.getTimeToLiveSeconds()))).build());\n+    private Registration registration;\n+\n+    public CacheConfiguration(Environment env, ServerProperties serverProperties, DiscoveryClient discoveryClient) {\n+        this.env = env;\n+        this.serverProperties = serverProperties;\n+        this.discoveryClient = discoveryClient;\n+    }\n+\n+    @Autowired(required = false)\n+    public void setRegistration(Registration registration) {\n+        this.registration = registration;\n+    }\n+\n+    @PreDestroy\n+    public void destroy() {\n+        log.info(\"Closing Cache Manager\");\n+        Hazelcast.shutdownAll();\n     }\n \n     @Bean\n-    public HibernatePropertiesCustomizer hibernatePropertiesCustomizer(javax.cache.CacheManager cacheManager) {\n-        return hibernateProperties -> hibernateProperties.put(ConfigSettings.CACHE_MANAGER, cacheManager);\n+    public CacheManager cacheManager(HazelcastInstance hazelcastInstance) {\n+        log.debug(\"Starting HazelcastCacheManager\");\n+        return new com.hazelcast.spring.cache.HazelcastCacheManager(hazelcastInstance);\n     }\n \n     /**\n-     * @return the initialized cache manager\n+     * Setup the hazelcast instance based on the given jHipster properties and the enabled spring profiles.\n+     * @param jHipsterProperties the jhipster properties\n+     * @return the created HazelcastInstance\n      */\n     @Bean\n-    public JCacheManagerCustomizer cacheManagerCustomizer() {\n-        return cm -> {\n-            createIfNotExists(cm, UserRepository.USERS_CACHE, jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Authority.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName() + \".authorities\", jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName() + \".persistentTokens\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".exercises\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".exams\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".studentParticipations\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".exampleSubmissions\", jcacheConfiguration);\n-            createIfNotExists(cm, LtiOutcomeUrl.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, LtiUserId.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Participation.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Participation.class.getName() + \".results\", jcacheConfiguration);\n-            createIfNotExists(cm, Result.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ProgrammingExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ModelingExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizExercise.class.getName() + \".quizQuestions\", jcacheConfiguration);\n-            createIfNotExists(cm, SubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestion.class.getName() + \".answerOptions\", jcacheConfiguration);\n-            createIfNotExists(cm, AnswerOption.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceSubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceSubmittedAnswer.class.getName() + \".selectedOptions\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName() + \".dropLocations\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName() + \".dragItems\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName() + \".correctMappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DropLocation.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragItem.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Submission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Submission.class.getName() + \".versions\", jcacheConfiguration);\n-            createIfNotExists(cm, SubmissionVersion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ModelingSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizSubmission.class.getName() + \".submittedAnswers\", jcacheConfiguration);\n-            createIfNotExists(cm, ProgrammingSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TextSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, FileUploadSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropSubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizQuestion.class.getName() + \".quizExercises\", jcacheConfiguration);\n-            createIfNotExists(cm, Result.class.getName() + \".feedbacks\", jcacheConfiguration);\n-            createIfNotExists(cm, Feedback.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, AnswerCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DropLocationCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName() + \".ratedPointCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName() + \".unRatedPointCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName() + \".ratedAnswerCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName() + \".unRatedAnswerCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName() + \".ratedDropLocationCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName() + \".unRatedDropLocationCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, QuizStatisticCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, PointCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName() + \".pointCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName() + \".answerCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName() + \".dropLocationCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragItem.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DropLocation.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropSubmittedAnswer.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropMapping.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ApollonDiagram.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Participation.class.getName() + \".submissions\", jcacheConfiguration);\n-            createIfNotExists(cm, TextExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, FileUploadExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestionStatistic.class.getName() + \".shortAnswerSpotCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSpotCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName() + \".spots\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName() + \".solutions\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName() + \".correctMappings\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSpot.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSolution.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSubmittedAnswer.class.getName() + \".submittedTexts\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSubmittedText.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerMapping.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSpot.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSolution.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, Complaint.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ComplaintResponse.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorParticipation.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorParticipation.class.getName() + \".trainedExampleSubmissions\", jcacheConfiguration);\n-            createIfNotExists(cm, ExampleSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".tutorParticipations\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".lectures\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".tutorGroups\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".attachments\", jcacheConfiguration);\n-            createIfNotExists(cm, StudentQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, StudentQuestion.class.getName() + \".answers\", jcacheConfiguration);\n-            createIfNotExists(cm, StudentQuestionAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorGroup.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorGroup.class.getName() + \".students\", jcacheConfiguration);\n-            createIfNotExists(cm, Notification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, SystemNotification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GroupNotification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, SingleUserNotification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Lecture.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Lecture.class.getName() + \".attachments\", jcacheConfiguration);\n-            createIfNotExists(cm, Attachment.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".studentQuestions\", jcacheConfiguration);\n-            createIfNotExists(cm, Lecture.class.getName() + \".studentQuestions\", jcacheConfiguration);\n-            createIfNotExists(cm, ModelAssessmentConflict.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ModelAssessmentConflict.class.getName() + \".resultsInConflict\", jcacheConfiguration);\n-            createIfNotExists(cm, ConflictingResult.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ExampleSubmission.class.getName() + \".tutorParticipations\", jcacheConfiguration);\n-            createIfNotExists(cm, ProgrammingExerciseTestCase.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ExerciseHint.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GuidedTourSetting.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName() + \".guidedTourSettings\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".teams\", jcacheConfiguration);\n-            createIfNotExists(cm, Team.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Team.class.getName() + \".students\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".gradingCriteria\", jcacheConfiguration);\n-            createIfNotExists(cm, GradingInstruction.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GradingCriterion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GradingCriterion.class.getName() + \".structuredGradingInstructions\", jcacheConfiguration);\n-\n-            createIfNotExists(cm, Exam.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exam.class.getName() + \".exerciseGroups\", jcacheConfiguration);\n-            createIfNotExists(cm, Exam.class.getName() + \".studentExams\", jcacheConfiguration);\n-            createIfNotExists(cm, Exam.class.getName() + \".registeredUsers\", jcacheConfiguration);\n-            createIfNotExists(cm, ExerciseGroup.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ExerciseGroup.class.getName() + \".exercises\", jcacheConfiguration);\n-            createIfNotExists(cm, StudentExam.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, StudentExam.class.getName() + \".exercises\", jcacheConfiguration);\n-\n-            createIfNotExists(cm, \"files\", jcacheConfiguration);\n-        };\n-    }\n-\n-    // This method is a hotfix for the issue described in: https://github.com/jhipster/generator-jhipster/issues/5354.\n-    // During the execution of tests, spring boot will try to instantiate the same cache multiple times, leading to an error.\n-    // This issue appears if e.g. a MockBean is used in a test.\n-    private void createIfNotExists(CacheManager cacheManager, String cacheName, javax.cache.configuration.Configuration<Object, Object> cacheConfiguration) {\n-        if (cacheManager.getCache(cacheName) == null) {\n-            cacheManager.createCache(cacheName, cacheConfiguration);\n+    public HazelcastInstance hazelcastInstance(JHipsterProperties jHipsterProperties) {\n+        log.debug(\"Configuring Hazelcast\");\n+        HazelcastInstance hazelCastInstance = Hazelcast.getHazelcastInstanceByName(\"Artemis\");\n+        if (hazelCastInstance != null) {\n+            log.debug(\"Hazelcast already initialized\");\n+            return hazelCastInstance;\n+        }\n+        Config config = new Config();\n+        config.setInstanceName(\"Artemis\");\n+        config.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(false);\n+        if (this.registration == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d59ae206f0089d65bd2fe677c862addec7382dc3"}, "originalPosition": 266}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwMTIyOA==", "bodyText": "This was the auto generated code, I've applied your suggestion.", "url": "https://github.com/ls1intum/Artemis/pull/1586#discussion_r437701228", "createdAt": "2020-06-09T20:34:03Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/config/CacheConfiguration.java", "diffHunk": "@@ -1,215 +1,127 @@\n package de.tum.in.www1.artemis.config;\n \n-import java.time.Duration;\n+import javax.annotation.PreDestroy;\n \n-import javax.cache.CacheManager;\n-\n-import org.ehcache.config.builders.CacheConfigurationBuilder;\n-import org.ehcache.config.builders.ExpiryPolicyBuilder;\n-import org.ehcache.config.builders.ResourcePoolsBuilder;\n-import org.ehcache.jsr107.Eh107Configuration;\n-import org.hibernate.cache.jcache.ConfigSettings;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.boot.autoconfigure.cache.JCacheManagerCustomizer;\n-import org.springframework.boot.autoconfigure.orm.jpa.HibernatePropertiesCustomizer;\n+import org.springframework.boot.autoconfigure.web.ServerProperties;\n import org.springframework.boot.info.BuildProperties;\n import org.springframework.boot.info.GitProperties;\n+import org.springframework.cache.CacheManager;\n import org.springframework.cache.annotation.EnableCaching;\n import org.springframework.cache.interceptor.KeyGenerator;\n+import org.springframework.cloud.client.ServiceInstance;\n+import org.springframework.cloud.client.discovery.DiscoveryClient;\n+import org.springframework.cloud.client.serviceregistry.Registration;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.env.Environment;\n+import org.springframework.core.env.Profiles;\n+\n+import com.hazelcast.config.*;\n+import com.hazelcast.core.Hazelcast;\n+import com.hazelcast.core.HazelcastInstance;\n \n-import de.tum.in.www1.artemis.domain.*;\n-import de.tum.in.www1.artemis.domain.exam.Exam;\n-import de.tum.in.www1.artemis.domain.exam.ExerciseGroup;\n-import de.tum.in.www1.artemis.domain.exam.StudentExam;\n-import de.tum.in.www1.artemis.domain.modeling.*;\n-import de.tum.in.www1.artemis.domain.notification.GroupNotification;\n-import de.tum.in.www1.artemis.domain.notification.Notification;\n-import de.tum.in.www1.artemis.domain.notification.SingleUserNotification;\n-import de.tum.in.www1.artemis.domain.notification.SystemNotification;\n-import de.tum.in.www1.artemis.domain.participation.Participation;\n-import de.tum.in.www1.artemis.domain.participation.TutorParticipation;\n-import de.tum.in.www1.artemis.domain.quiz.*;\n-import de.tum.in.www1.artemis.repository.UserRepository;\n+import io.github.jhipster.config.JHipsterConstants;\n import io.github.jhipster.config.JHipsterProperties;\n import io.github.jhipster.config.cache.PrefixedKeyGenerator;\n \n @Configuration\n @EnableCaching\n public class CacheConfiguration {\n \n+    private final Logger log = LoggerFactory.getLogger(CacheConfiguration.class);\n+\n     private GitProperties gitProperties;\n \n     private BuildProperties buildProperties;\n \n-    private final javax.cache.configuration.Configuration<Object, Object> jcacheConfiguration;\n+    private final Environment env;\n+\n+    private final ServerProperties serverProperties;\n \n-    public CacheConfiguration(JHipsterProperties jHipsterProperties) {\n-        JHipsterProperties.Cache.Ehcache ehcache = jHipsterProperties.getCache().getEhcache();\n+    private final DiscoveryClient discoveryClient;\n \n-        jcacheConfiguration = Eh107Configuration.fromEhcacheCacheConfiguration(\n-                CacheConfigurationBuilder.newCacheConfigurationBuilder(Object.class, Object.class, ResourcePoolsBuilder.heap(ehcache.getMaxEntries()))\n-                        .withExpiry(ExpiryPolicyBuilder.timeToLiveExpiration(Duration.ofSeconds(ehcache.getTimeToLiveSeconds()))).build());\n+    private Registration registration;\n+\n+    public CacheConfiguration(Environment env, ServerProperties serverProperties, DiscoveryClient discoveryClient) {\n+        this.env = env;\n+        this.serverProperties = serverProperties;\n+        this.discoveryClient = discoveryClient;\n+    }\n+\n+    @Autowired(required = false)\n+    public void setRegistration(Registration registration) {\n+        this.registration = registration;\n+    }\n+\n+    @PreDestroy\n+    public void destroy() {\n+        log.info(\"Closing Cache Manager\");\n+        Hazelcast.shutdownAll();\n     }\n \n     @Bean\n-    public HibernatePropertiesCustomizer hibernatePropertiesCustomizer(javax.cache.CacheManager cacheManager) {\n-        return hibernateProperties -> hibernateProperties.put(ConfigSettings.CACHE_MANAGER, cacheManager);\n+    public CacheManager cacheManager(HazelcastInstance hazelcastInstance) {\n+        log.debug(\"Starting HazelcastCacheManager\");\n+        return new com.hazelcast.spring.cache.HazelcastCacheManager(hazelcastInstance);\n     }\n \n     /**\n-     * @return the initialized cache manager\n+     * Setup the hazelcast instance based on the given jHipster properties and the enabled spring profiles.\n+     * @param jHipsterProperties the jhipster properties\n+     * @return the created HazelcastInstance\n      */\n     @Bean\n-    public JCacheManagerCustomizer cacheManagerCustomizer() {\n-        return cm -> {\n-            createIfNotExists(cm, UserRepository.USERS_CACHE, jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Authority.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName() + \".authorities\", jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName() + \".persistentTokens\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".exercises\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".exams\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".studentParticipations\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".exampleSubmissions\", jcacheConfiguration);\n-            createIfNotExists(cm, LtiOutcomeUrl.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, LtiUserId.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Participation.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Participation.class.getName() + \".results\", jcacheConfiguration);\n-            createIfNotExists(cm, Result.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ProgrammingExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ModelingExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizExercise.class.getName() + \".quizQuestions\", jcacheConfiguration);\n-            createIfNotExists(cm, SubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestion.class.getName() + \".answerOptions\", jcacheConfiguration);\n-            createIfNotExists(cm, AnswerOption.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceSubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceSubmittedAnswer.class.getName() + \".selectedOptions\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName() + \".dropLocations\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName() + \".dragItems\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName() + \".correctMappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DropLocation.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragItem.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Submission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Submission.class.getName() + \".versions\", jcacheConfiguration);\n-            createIfNotExists(cm, SubmissionVersion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ModelingSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizSubmission.class.getName() + \".submittedAnswers\", jcacheConfiguration);\n-            createIfNotExists(cm, ProgrammingSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TextSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, FileUploadSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropSubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizQuestion.class.getName() + \".quizExercises\", jcacheConfiguration);\n-            createIfNotExists(cm, Result.class.getName() + \".feedbacks\", jcacheConfiguration);\n-            createIfNotExists(cm, Feedback.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, AnswerCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DropLocationCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName() + \".ratedPointCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName() + \".unRatedPointCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName() + \".ratedAnswerCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName() + \".unRatedAnswerCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName() + \".ratedDropLocationCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName() + \".unRatedDropLocationCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, QuizStatisticCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, PointCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName() + \".pointCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName() + \".answerCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName() + \".dropLocationCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragItem.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DropLocation.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropSubmittedAnswer.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropMapping.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ApollonDiagram.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Participation.class.getName() + \".submissions\", jcacheConfiguration);\n-            createIfNotExists(cm, TextExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, FileUploadExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestionStatistic.class.getName() + \".shortAnswerSpotCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSpotCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName() + \".spots\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName() + \".solutions\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName() + \".correctMappings\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSpot.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSolution.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSubmittedAnswer.class.getName() + \".submittedTexts\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSubmittedText.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerMapping.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSpot.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSolution.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, Complaint.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ComplaintResponse.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorParticipation.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorParticipation.class.getName() + \".trainedExampleSubmissions\", jcacheConfiguration);\n-            createIfNotExists(cm, ExampleSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".tutorParticipations\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".lectures\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".tutorGroups\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".attachments\", jcacheConfiguration);\n-            createIfNotExists(cm, StudentQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, StudentQuestion.class.getName() + \".answers\", jcacheConfiguration);\n-            createIfNotExists(cm, StudentQuestionAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorGroup.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorGroup.class.getName() + \".students\", jcacheConfiguration);\n-            createIfNotExists(cm, Notification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, SystemNotification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GroupNotification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, SingleUserNotification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Lecture.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Lecture.class.getName() + \".attachments\", jcacheConfiguration);\n-            createIfNotExists(cm, Attachment.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".studentQuestions\", jcacheConfiguration);\n-            createIfNotExists(cm, Lecture.class.getName() + \".studentQuestions\", jcacheConfiguration);\n-            createIfNotExists(cm, ModelAssessmentConflict.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ModelAssessmentConflict.class.getName() + \".resultsInConflict\", jcacheConfiguration);\n-            createIfNotExists(cm, ConflictingResult.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ExampleSubmission.class.getName() + \".tutorParticipations\", jcacheConfiguration);\n-            createIfNotExists(cm, ProgrammingExerciseTestCase.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ExerciseHint.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GuidedTourSetting.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName() + \".guidedTourSettings\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".teams\", jcacheConfiguration);\n-            createIfNotExists(cm, Team.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Team.class.getName() + \".students\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".gradingCriteria\", jcacheConfiguration);\n-            createIfNotExists(cm, GradingInstruction.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GradingCriterion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GradingCriterion.class.getName() + \".structuredGradingInstructions\", jcacheConfiguration);\n-\n-            createIfNotExists(cm, Exam.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exam.class.getName() + \".exerciseGroups\", jcacheConfiguration);\n-            createIfNotExists(cm, Exam.class.getName() + \".studentExams\", jcacheConfiguration);\n-            createIfNotExists(cm, Exam.class.getName() + \".registeredUsers\", jcacheConfiguration);\n-            createIfNotExists(cm, ExerciseGroup.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ExerciseGroup.class.getName() + \".exercises\", jcacheConfiguration);\n-            createIfNotExists(cm, StudentExam.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, StudentExam.class.getName() + \".exercises\", jcacheConfiguration);\n-\n-            createIfNotExists(cm, \"files\", jcacheConfiguration);\n-        };\n-    }\n-\n-    // This method is a hotfix for the issue described in: https://github.com/jhipster/generator-jhipster/issues/5354.\n-    // During the execution of tests, spring boot will try to instantiate the same cache multiple times, leading to an error.\n-    // This issue appears if e.g. a MockBean is used in a test.\n-    private void createIfNotExists(CacheManager cacheManager, String cacheName, javax.cache.configuration.Configuration<Object, Object> cacheConfiguration) {\n-        if (cacheManager.getCache(cacheName) == null) {\n-            cacheManager.createCache(cacheName, cacheConfiguration);\n+    public HazelcastInstance hazelcastInstance(JHipsterProperties jHipsterProperties) {\n+        log.debug(\"Configuring Hazelcast\");\n+        HazelcastInstance hazelCastInstance = Hazelcast.getHazelcastInstanceByName(\"Artemis\");\n+        if (hazelCastInstance != null) {\n+            log.debug(\"Hazelcast already initialized\");\n+            return hazelCastInstance;\n+        }\n+        Config config = new Config();\n+        config.setInstanceName(\"Artemis\");\n+        config.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(false);\n+        if (this.registration == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3MjY2Mg=="}, "originalCommit": {"oid": "d59ae206f0089d65bd2fe677c862addec7382dc3"}, "originalPosition": 266}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjU4NDk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/config/CacheConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo0MDowOFrOGhZccg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDozNzozMlrOGhbRVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3MzA3NA==", "bodyText": "Should \"Artemis\" be a constant? Or can we even inject and use spring.application.name OR hibernate.cache.hazelcast.instance_name?", "url": "https://github.com/ls1intum/Artemis/pull/1586#discussion_r437673074", "createdAt": "2020-06-09T19:40:08Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/config/CacheConfiguration.java", "diffHunk": "@@ -1,215 +1,127 @@\n package de.tum.in.www1.artemis.config;\n \n-import java.time.Duration;\n+import javax.annotation.PreDestroy;\n \n-import javax.cache.CacheManager;\n-\n-import org.ehcache.config.builders.CacheConfigurationBuilder;\n-import org.ehcache.config.builders.ExpiryPolicyBuilder;\n-import org.ehcache.config.builders.ResourcePoolsBuilder;\n-import org.ehcache.jsr107.Eh107Configuration;\n-import org.hibernate.cache.jcache.ConfigSettings;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.boot.autoconfigure.cache.JCacheManagerCustomizer;\n-import org.springframework.boot.autoconfigure.orm.jpa.HibernatePropertiesCustomizer;\n+import org.springframework.boot.autoconfigure.web.ServerProperties;\n import org.springframework.boot.info.BuildProperties;\n import org.springframework.boot.info.GitProperties;\n+import org.springframework.cache.CacheManager;\n import org.springframework.cache.annotation.EnableCaching;\n import org.springframework.cache.interceptor.KeyGenerator;\n+import org.springframework.cloud.client.ServiceInstance;\n+import org.springframework.cloud.client.discovery.DiscoveryClient;\n+import org.springframework.cloud.client.serviceregistry.Registration;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.env.Environment;\n+import org.springframework.core.env.Profiles;\n+\n+import com.hazelcast.config.*;\n+import com.hazelcast.core.Hazelcast;\n+import com.hazelcast.core.HazelcastInstance;\n \n-import de.tum.in.www1.artemis.domain.*;\n-import de.tum.in.www1.artemis.domain.exam.Exam;\n-import de.tum.in.www1.artemis.domain.exam.ExerciseGroup;\n-import de.tum.in.www1.artemis.domain.exam.StudentExam;\n-import de.tum.in.www1.artemis.domain.modeling.*;\n-import de.tum.in.www1.artemis.domain.notification.GroupNotification;\n-import de.tum.in.www1.artemis.domain.notification.Notification;\n-import de.tum.in.www1.artemis.domain.notification.SingleUserNotification;\n-import de.tum.in.www1.artemis.domain.notification.SystemNotification;\n-import de.tum.in.www1.artemis.domain.participation.Participation;\n-import de.tum.in.www1.artemis.domain.participation.TutorParticipation;\n-import de.tum.in.www1.artemis.domain.quiz.*;\n-import de.tum.in.www1.artemis.repository.UserRepository;\n+import io.github.jhipster.config.JHipsterConstants;\n import io.github.jhipster.config.JHipsterProperties;\n import io.github.jhipster.config.cache.PrefixedKeyGenerator;\n \n @Configuration\n @EnableCaching\n public class CacheConfiguration {\n \n+    private final Logger log = LoggerFactory.getLogger(CacheConfiguration.class);\n+\n     private GitProperties gitProperties;\n \n     private BuildProperties buildProperties;\n \n-    private final javax.cache.configuration.Configuration<Object, Object> jcacheConfiguration;\n+    private final Environment env;\n+\n+    private final ServerProperties serverProperties;\n \n-    public CacheConfiguration(JHipsterProperties jHipsterProperties) {\n-        JHipsterProperties.Cache.Ehcache ehcache = jHipsterProperties.getCache().getEhcache();\n+    private final DiscoveryClient discoveryClient;\n \n-        jcacheConfiguration = Eh107Configuration.fromEhcacheCacheConfiguration(\n-                CacheConfigurationBuilder.newCacheConfigurationBuilder(Object.class, Object.class, ResourcePoolsBuilder.heap(ehcache.getMaxEntries()))\n-                        .withExpiry(ExpiryPolicyBuilder.timeToLiveExpiration(Duration.ofSeconds(ehcache.getTimeToLiveSeconds()))).build());\n+    private Registration registration;\n+\n+    public CacheConfiguration(Environment env, ServerProperties serverProperties, DiscoveryClient discoveryClient) {\n+        this.env = env;\n+        this.serverProperties = serverProperties;\n+        this.discoveryClient = discoveryClient;\n+    }\n+\n+    @Autowired(required = false)\n+    public void setRegistration(Registration registration) {\n+        this.registration = registration;\n+    }\n+\n+    @PreDestroy\n+    public void destroy() {\n+        log.info(\"Closing Cache Manager\");\n+        Hazelcast.shutdownAll();\n     }\n \n     @Bean\n-    public HibernatePropertiesCustomizer hibernatePropertiesCustomizer(javax.cache.CacheManager cacheManager) {\n-        return hibernateProperties -> hibernateProperties.put(ConfigSettings.CACHE_MANAGER, cacheManager);\n+    public CacheManager cacheManager(HazelcastInstance hazelcastInstance) {\n+        log.debug(\"Starting HazelcastCacheManager\");\n+        return new com.hazelcast.spring.cache.HazelcastCacheManager(hazelcastInstance);\n     }\n \n     /**\n-     * @return the initialized cache manager\n+     * Setup the hazelcast instance based on the given jHipster properties and the enabled spring profiles.\n+     * @param jHipsterProperties the jhipster properties\n+     * @return the created HazelcastInstance\n      */\n     @Bean\n-    public JCacheManagerCustomizer cacheManagerCustomizer() {\n-        return cm -> {\n-            createIfNotExists(cm, UserRepository.USERS_CACHE, jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Authority.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName() + \".authorities\", jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName() + \".persistentTokens\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".exercises\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".exams\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".studentParticipations\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".exampleSubmissions\", jcacheConfiguration);\n-            createIfNotExists(cm, LtiOutcomeUrl.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, LtiUserId.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Participation.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Participation.class.getName() + \".results\", jcacheConfiguration);\n-            createIfNotExists(cm, Result.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ProgrammingExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ModelingExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizExercise.class.getName() + \".quizQuestions\", jcacheConfiguration);\n-            createIfNotExists(cm, SubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestion.class.getName() + \".answerOptions\", jcacheConfiguration);\n-            createIfNotExists(cm, AnswerOption.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceSubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceSubmittedAnswer.class.getName() + \".selectedOptions\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName() + \".dropLocations\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName() + \".dragItems\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName() + \".correctMappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DropLocation.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragItem.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Submission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Submission.class.getName() + \".versions\", jcacheConfiguration);\n-            createIfNotExists(cm, SubmissionVersion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ModelingSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizSubmission.class.getName() + \".submittedAnswers\", jcacheConfiguration);\n-            createIfNotExists(cm, ProgrammingSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TextSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, FileUploadSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropSubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizQuestion.class.getName() + \".quizExercises\", jcacheConfiguration);\n-            createIfNotExists(cm, Result.class.getName() + \".feedbacks\", jcacheConfiguration);\n-            createIfNotExists(cm, Feedback.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, AnswerCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DropLocationCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName() + \".ratedPointCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName() + \".unRatedPointCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName() + \".ratedAnswerCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName() + \".unRatedAnswerCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName() + \".ratedDropLocationCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName() + \".unRatedDropLocationCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, QuizStatisticCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, PointCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName() + \".pointCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName() + \".answerCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName() + \".dropLocationCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragItem.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DropLocation.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropSubmittedAnswer.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropMapping.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ApollonDiagram.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Participation.class.getName() + \".submissions\", jcacheConfiguration);\n-            createIfNotExists(cm, TextExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, FileUploadExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestionStatistic.class.getName() + \".shortAnswerSpotCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSpotCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName() + \".spots\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName() + \".solutions\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName() + \".correctMappings\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSpot.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSolution.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSubmittedAnswer.class.getName() + \".submittedTexts\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSubmittedText.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerMapping.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSpot.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSolution.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, Complaint.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ComplaintResponse.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorParticipation.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorParticipation.class.getName() + \".trainedExampleSubmissions\", jcacheConfiguration);\n-            createIfNotExists(cm, ExampleSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".tutorParticipations\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".lectures\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".tutorGroups\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".attachments\", jcacheConfiguration);\n-            createIfNotExists(cm, StudentQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, StudentQuestion.class.getName() + \".answers\", jcacheConfiguration);\n-            createIfNotExists(cm, StudentQuestionAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorGroup.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorGroup.class.getName() + \".students\", jcacheConfiguration);\n-            createIfNotExists(cm, Notification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, SystemNotification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GroupNotification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, SingleUserNotification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Lecture.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Lecture.class.getName() + \".attachments\", jcacheConfiguration);\n-            createIfNotExists(cm, Attachment.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".studentQuestions\", jcacheConfiguration);\n-            createIfNotExists(cm, Lecture.class.getName() + \".studentQuestions\", jcacheConfiguration);\n-            createIfNotExists(cm, ModelAssessmentConflict.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ModelAssessmentConflict.class.getName() + \".resultsInConflict\", jcacheConfiguration);\n-            createIfNotExists(cm, ConflictingResult.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ExampleSubmission.class.getName() + \".tutorParticipations\", jcacheConfiguration);\n-            createIfNotExists(cm, ProgrammingExerciseTestCase.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ExerciseHint.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GuidedTourSetting.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName() + \".guidedTourSettings\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".teams\", jcacheConfiguration);\n-            createIfNotExists(cm, Team.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Team.class.getName() + \".students\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".gradingCriteria\", jcacheConfiguration);\n-            createIfNotExists(cm, GradingInstruction.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GradingCriterion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GradingCriterion.class.getName() + \".structuredGradingInstructions\", jcacheConfiguration);\n-\n-            createIfNotExists(cm, Exam.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exam.class.getName() + \".exerciseGroups\", jcacheConfiguration);\n-            createIfNotExists(cm, Exam.class.getName() + \".studentExams\", jcacheConfiguration);\n-            createIfNotExists(cm, Exam.class.getName() + \".registeredUsers\", jcacheConfiguration);\n-            createIfNotExists(cm, ExerciseGroup.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ExerciseGroup.class.getName() + \".exercises\", jcacheConfiguration);\n-            createIfNotExists(cm, StudentExam.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, StudentExam.class.getName() + \".exercises\", jcacheConfiguration);\n-\n-            createIfNotExists(cm, \"files\", jcacheConfiguration);\n-        };\n-    }\n-\n-    // This method is a hotfix for the issue described in: https://github.com/jhipster/generator-jhipster/issues/5354.\n-    // During the execution of tests, spring boot will try to instantiate the same cache multiple times, leading to an error.\n-    // This issue appears if e.g. a MockBean is used in a test.\n-    private void createIfNotExists(CacheManager cacheManager, String cacheName, javax.cache.configuration.Configuration<Object, Object> cacheConfiguration) {\n-        if (cacheManager.getCache(cacheName) == null) {\n-            cacheManager.createCache(cacheName, cacheConfiguration);\n+    public HazelcastInstance hazelcastInstance(JHipsterProperties jHipsterProperties) {\n+        log.debug(\"Configuring Hazelcast\");\n+        HazelcastInstance hazelCastInstance = Hazelcast.getHazelcastInstanceByName(\"Artemis\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d59ae206f0089d65bd2fe677c862addec7382dc3"}, "originalPosition": 258}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwMjk5OA==", "bodyText": "I will change it to hibernate.cache.hazelcast.instance_name.", "url": "https://github.com/ls1intum/Artemis/pull/1586#discussion_r437702998", "createdAt": "2020-06-09T20:37:32Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/config/CacheConfiguration.java", "diffHunk": "@@ -1,215 +1,127 @@\n package de.tum.in.www1.artemis.config;\n \n-import java.time.Duration;\n+import javax.annotation.PreDestroy;\n \n-import javax.cache.CacheManager;\n-\n-import org.ehcache.config.builders.CacheConfigurationBuilder;\n-import org.ehcache.config.builders.ExpiryPolicyBuilder;\n-import org.ehcache.config.builders.ResourcePoolsBuilder;\n-import org.ehcache.jsr107.Eh107Configuration;\n-import org.hibernate.cache.jcache.ConfigSettings;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.boot.autoconfigure.cache.JCacheManagerCustomizer;\n-import org.springframework.boot.autoconfigure.orm.jpa.HibernatePropertiesCustomizer;\n+import org.springframework.boot.autoconfigure.web.ServerProperties;\n import org.springframework.boot.info.BuildProperties;\n import org.springframework.boot.info.GitProperties;\n+import org.springframework.cache.CacheManager;\n import org.springframework.cache.annotation.EnableCaching;\n import org.springframework.cache.interceptor.KeyGenerator;\n+import org.springframework.cloud.client.ServiceInstance;\n+import org.springframework.cloud.client.discovery.DiscoveryClient;\n+import org.springframework.cloud.client.serviceregistry.Registration;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.env.Environment;\n+import org.springframework.core.env.Profiles;\n+\n+import com.hazelcast.config.*;\n+import com.hazelcast.core.Hazelcast;\n+import com.hazelcast.core.HazelcastInstance;\n \n-import de.tum.in.www1.artemis.domain.*;\n-import de.tum.in.www1.artemis.domain.exam.Exam;\n-import de.tum.in.www1.artemis.domain.exam.ExerciseGroup;\n-import de.tum.in.www1.artemis.domain.exam.StudentExam;\n-import de.tum.in.www1.artemis.domain.modeling.*;\n-import de.tum.in.www1.artemis.domain.notification.GroupNotification;\n-import de.tum.in.www1.artemis.domain.notification.Notification;\n-import de.tum.in.www1.artemis.domain.notification.SingleUserNotification;\n-import de.tum.in.www1.artemis.domain.notification.SystemNotification;\n-import de.tum.in.www1.artemis.domain.participation.Participation;\n-import de.tum.in.www1.artemis.domain.participation.TutorParticipation;\n-import de.tum.in.www1.artemis.domain.quiz.*;\n-import de.tum.in.www1.artemis.repository.UserRepository;\n+import io.github.jhipster.config.JHipsterConstants;\n import io.github.jhipster.config.JHipsterProperties;\n import io.github.jhipster.config.cache.PrefixedKeyGenerator;\n \n @Configuration\n @EnableCaching\n public class CacheConfiguration {\n \n+    private final Logger log = LoggerFactory.getLogger(CacheConfiguration.class);\n+\n     private GitProperties gitProperties;\n \n     private BuildProperties buildProperties;\n \n-    private final javax.cache.configuration.Configuration<Object, Object> jcacheConfiguration;\n+    private final Environment env;\n+\n+    private final ServerProperties serverProperties;\n \n-    public CacheConfiguration(JHipsterProperties jHipsterProperties) {\n-        JHipsterProperties.Cache.Ehcache ehcache = jHipsterProperties.getCache().getEhcache();\n+    private final DiscoveryClient discoveryClient;\n \n-        jcacheConfiguration = Eh107Configuration.fromEhcacheCacheConfiguration(\n-                CacheConfigurationBuilder.newCacheConfigurationBuilder(Object.class, Object.class, ResourcePoolsBuilder.heap(ehcache.getMaxEntries()))\n-                        .withExpiry(ExpiryPolicyBuilder.timeToLiveExpiration(Duration.ofSeconds(ehcache.getTimeToLiveSeconds()))).build());\n+    private Registration registration;\n+\n+    public CacheConfiguration(Environment env, ServerProperties serverProperties, DiscoveryClient discoveryClient) {\n+        this.env = env;\n+        this.serverProperties = serverProperties;\n+        this.discoveryClient = discoveryClient;\n+    }\n+\n+    @Autowired(required = false)\n+    public void setRegistration(Registration registration) {\n+        this.registration = registration;\n+    }\n+\n+    @PreDestroy\n+    public void destroy() {\n+        log.info(\"Closing Cache Manager\");\n+        Hazelcast.shutdownAll();\n     }\n \n     @Bean\n-    public HibernatePropertiesCustomizer hibernatePropertiesCustomizer(javax.cache.CacheManager cacheManager) {\n-        return hibernateProperties -> hibernateProperties.put(ConfigSettings.CACHE_MANAGER, cacheManager);\n+    public CacheManager cacheManager(HazelcastInstance hazelcastInstance) {\n+        log.debug(\"Starting HazelcastCacheManager\");\n+        return new com.hazelcast.spring.cache.HazelcastCacheManager(hazelcastInstance);\n     }\n \n     /**\n-     * @return the initialized cache manager\n+     * Setup the hazelcast instance based on the given jHipster properties and the enabled spring profiles.\n+     * @param jHipsterProperties the jhipster properties\n+     * @return the created HazelcastInstance\n      */\n     @Bean\n-    public JCacheManagerCustomizer cacheManagerCustomizer() {\n-        return cm -> {\n-            createIfNotExists(cm, UserRepository.USERS_CACHE, jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Authority.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName() + \".authorities\", jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName() + \".persistentTokens\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".exercises\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".exams\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".studentParticipations\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".exampleSubmissions\", jcacheConfiguration);\n-            createIfNotExists(cm, LtiOutcomeUrl.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, LtiUserId.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Participation.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Participation.class.getName() + \".results\", jcacheConfiguration);\n-            createIfNotExists(cm, Result.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ProgrammingExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ModelingExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizExercise.class.getName() + \".quizQuestions\", jcacheConfiguration);\n-            createIfNotExists(cm, SubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestion.class.getName() + \".answerOptions\", jcacheConfiguration);\n-            createIfNotExists(cm, AnswerOption.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceSubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceSubmittedAnswer.class.getName() + \".selectedOptions\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName() + \".dropLocations\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName() + \".dragItems\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestion.class.getName() + \".correctMappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DropLocation.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragItem.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Submission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Submission.class.getName() + \".versions\", jcacheConfiguration);\n-            createIfNotExists(cm, SubmissionVersion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ModelingSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizSubmission.class.getName() + \".submittedAnswers\", jcacheConfiguration);\n-            createIfNotExists(cm, ProgrammingSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TextSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, FileUploadSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropSubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizQuestion.class.getName() + \".quizExercises\", jcacheConfiguration);\n-            createIfNotExists(cm, Result.class.getName() + \".feedbacks\", jcacheConfiguration);\n-            createIfNotExists(cm, Feedback.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, AnswerCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DropLocationCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName() + \".ratedPointCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName() + \".unRatedPointCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName() + \".ratedAnswerCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName() + \".unRatedAnswerCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName() + \".ratedDropLocationCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName() + \".unRatedDropLocationCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, QuizStatisticCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, PointCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, QuizPointStatistic.class.getName() + \".pointCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, MultipleChoiceQuestionStatistic.class.getName() + \".answerCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropQuestionStatistic.class.getName() + \".dropLocationCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, DragItem.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DropLocation.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropSubmittedAnswer.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, DragAndDropMapping.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ApollonDiagram.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Participation.class.getName() + \".submissions\", jcacheConfiguration);\n-            createIfNotExists(cm, TextExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, FileUploadExercise.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestionStatistic.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestionStatistic.class.getName() + \".shortAnswerSpotCounters\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSpotCounter.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName() + \".spots\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName() + \".solutions\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerQuestion.class.getName() + \".correctMappings\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSpot.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSolution.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSubmittedAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSubmittedAnswer.class.getName() + \".submittedTexts\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSubmittedText.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerMapping.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSpot.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, ShortAnswerSolution.class.getName() + \".mappings\", jcacheConfiguration);\n-            createIfNotExists(cm, Complaint.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ComplaintResponse.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorParticipation.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorParticipation.class.getName() + \".trainedExampleSubmissions\", jcacheConfiguration);\n-            createIfNotExists(cm, ExampleSubmission.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".tutorParticipations\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".lectures\", jcacheConfiguration);\n-            createIfNotExists(cm, Course.class.getName() + \".tutorGroups\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".attachments\", jcacheConfiguration);\n-            createIfNotExists(cm, StudentQuestion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, StudentQuestion.class.getName() + \".answers\", jcacheConfiguration);\n-            createIfNotExists(cm, StudentQuestionAnswer.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorGroup.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, TutorGroup.class.getName() + \".students\", jcacheConfiguration);\n-            createIfNotExists(cm, Notification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, SystemNotification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GroupNotification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, SingleUserNotification.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Lecture.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Lecture.class.getName() + \".attachments\", jcacheConfiguration);\n-            createIfNotExists(cm, Attachment.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".studentQuestions\", jcacheConfiguration);\n-            createIfNotExists(cm, Lecture.class.getName() + \".studentQuestions\", jcacheConfiguration);\n-            createIfNotExists(cm, ModelAssessmentConflict.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ModelAssessmentConflict.class.getName() + \".resultsInConflict\", jcacheConfiguration);\n-            createIfNotExists(cm, ConflictingResult.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ExampleSubmission.class.getName() + \".tutorParticipations\", jcacheConfiguration);\n-            createIfNotExists(cm, ProgrammingExerciseTestCase.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ExerciseHint.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GuidedTourSetting.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, User.class.getName() + \".guidedTourSettings\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".teams\", jcacheConfiguration);\n-            createIfNotExists(cm, Team.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Team.class.getName() + \".students\", jcacheConfiguration);\n-            createIfNotExists(cm, Exercise.class.getName() + \".gradingCriteria\", jcacheConfiguration);\n-            createIfNotExists(cm, GradingInstruction.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GradingCriterion.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, GradingCriterion.class.getName() + \".structuredGradingInstructions\", jcacheConfiguration);\n-\n-            createIfNotExists(cm, Exam.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, Exam.class.getName() + \".exerciseGroups\", jcacheConfiguration);\n-            createIfNotExists(cm, Exam.class.getName() + \".studentExams\", jcacheConfiguration);\n-            createIfNotExists(cm, Exam.class.getName() + \".registeredUsers\", jcacheConfiguration);\n-            createIfNotExists(cm, ExerciseGroup.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, ExerciseGroup.class.getName() + \".exercises\", jcacheConfiguration);\n-            createIfNotExists(cm, StudentExam.class.getName(), jcacheConfiguration);\n-            createIfNotExists(cm, StudentExam.class.getName() + \".exercises\", jcacheConfiguration);\n-\n-            createIfNotExists(cm, \"files\", jcacheConfiguration);\n-        };\n-    }\n-\n-    // This method is a hotfix for the issue described in: https://github.com/jhipster/generator-jhipster/issues/5354.\n-    // During the execution of tests, spring boot will try to instantiate the same cache multiple times, leading to an error.\n-    // This issue appears if e.g. a MockBean is used in a test.\n-    private void createIfNotExists(CacheManager cacheManager, String cacheName, javax.cache.configuration.Configuration<Object, Object> cacheConfiguration) {\n-        if (cacheManager.getCache(cacheName) == null) {\n-            cacheManager.createCache(cacheName, cacheConfiguration);\n+    public HazelcastInstance hazelcastInstance(JHipsterProperties jHipsterProperties) {\n+        log.debug(\"Configuring Hazelcast\");\n+        HazelcastInstance hazelCastInstance = Hazelcast.getHazelcastInstanceByName(\"Artemis\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3MzA3NA=="}, "originalCommit": {"oid": "d59ae206f0089d65bd2fe677c862addec7382dc3"}, "originalPosition": 258}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjYxNDI0OnYy", "diffSide": "RIGHT", "path": "src/main/resources/config/application.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo0ODo1N1rOGhZvEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo0ODo1N1rOGhZvEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3Nzg0MQ==", "bodyText": "This is duplicating your additions in application-dev.yml. Is this needed?", "url": "https://github.com/ls1intum/Artemis/pull/1586#discussion_r437677841", "createdAt": "2020-06-09T19:48:57Z", "author": {"login": "jpbernius"}, "path": "src/main/resources/config/application.yml", "diffHunk": "@@ -101,6 +101,10 @@ spring:\n             hibernate.order_updates: true\n #            hibernate.query.fail_on_pagination_over_collection_fetch: true  # not appropriate in our case: https://vladmihalcea.com/hibernate-query-fail-on-pagination-over-collection-fetch/\n             hibernate.query.in_clause_parameter_padding: true\n+            hibernate.cache.region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory\n+            hibernate.cache.use_minimal_puts: true\n+            hibernate.cache.hazelcast.instance_name: Artemis\n+            hibernate.cache.hazelcast.use_lite_member: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d59ae206f0089d65bd2fe677c862addec7382dc3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjYxODUwOnYy", "diffSide": "RIGHT", "path": "src/main/resources/config/application.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo1MDoxNlrOGhZxrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo1MDoxNlrOGhZxrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3ODUxMA==", "bodyText": "Also duplicated config here?", "url": "https://github.com/ls1intum/Artemis/pull/1586#discussion_r437678510", "createdAt": "2020-06-09T19:50:16Z", "author": {"login": "jpbernius"}, "path": "src/main/resources/config/application.yml", "diffHunk": "@@ -164,3 +168,41 @@ jhipster:\n         #max-age: 1800\n     mail:\n         from: artemis@localhost\n+    registry:\n+        password: AN-ADMIN-PASSWORD-THAT-MUST-BE-CHANGED (FROM REGISTRY CONFIG)\n+    cache: # Cache configuration\n+        hazelcast: # Hazelcast distributed cache\n+            time-to-live-seconds: 3600\n+            backup-count: 1\n+            management-center: # Full reference is available at: http://docs.hazelcast.org/docs/management-center/3.9/manual/html/Deploying_and_Starting.html\n+                enabled: false\n+                update-interval: 3\n+                url: http://localhost:8180/hazelcast-mancenter/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d59ae206f0089d65bd2fe677c862addec7382dc3"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 26, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}