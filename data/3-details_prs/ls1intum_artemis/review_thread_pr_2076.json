{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NDYzNzIw", "number": 2076, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxODo0MDo1MFrOEebCjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzoxNjo0N1rOEew5kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMzM1NzU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxODo0MDo1MFrOHKENOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxOTowMToyMVrOHKE4cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMxNjcyOQ==", "bodyText": "@krusche Is it on purpose that this operation (and also the corresponding one for TAs) is no longer within a try-catch?", "url": "https://github.com/ls1intum/Artemis/pull/2076#discussion_r480316729", "createdAt": "2020-08-31T18:40:50Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabService.java", "diffHunk": "@@ -276,20 +276,25 @@ public void createProjectForExercise(ProgrammingExercise programmingExercise) th\n         final var group = new Group().withPath(exercisePath).withName(exerciseName).withVisibility(Visibility.PRIVATE);\n         try {\n             gitlab.getGroupApi().addGroup(group);\n-\n-            final var instructors = userService.getInstructors(programmingExercise.getCourseViaExerciseGroupOrCourseMember());\n-            final var teachingAssistants = userService.getTutors(programmingExercise.getCourseViaExerciseGroupOrCourseMember());\n-            for (final var instructor : instructors) {\n-                final var userId = gitLabUserManagementService.getUserId(instructor.getLogin());\n-                gitLabUserManagementService.addUserToGroups(userId, List.of(programmingExercise), MAINTAINER);\n+        }\n+        catch (GitLabApiException e) {\n+            if (e.getMessage().contains(\"has already been taken\")) {\n+                // ignore this error, because it is not really a problem\n+                log.warn(\"Failed to add group \" + exerciseName + \" due to error: \" + e.getMessage());\n             }\n-            for (final var ta : teachingAssistants) {\n-                final var userId = gitLabUserManagementService.getUserId(ta.getLogin());\n-                gitLabUserManagementService.addUserToGroups(userId, List.of(programmingExercise), GUEST);\n+            else {\n+                throw new GitLabException(\"Unable to create new group for course \" + exerciseName, e);\n             }\n         }\n-        catch (GitLabApiException e) {\n-            throw new GitLabException(\"Unable to create new group for course \" + exerciseName, e);\n+        final var instructors = userService.getInstructors(programmingExercise.getCourseViaExerciseGroupOrCourseMember());\n+        final var teachingAssistants = userService.getTutors(programmingExercise.getCourseViaExerciseGroupOrCourseMember());\n+        for (final var instructor : instructors) {\n+            final var userId = gitLabUserManagementService.getUserId(instructor.getLogin());\n+            gitLabUserManagementService.addUserToGroups(userId, List.of(programmingExercise), MAINTAINER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cecc803d4ba8cd363a32180f2c66dd3f327b66e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMyNzc5NQ==", "bodyText": "yes, the method gitLabUserManagementService.addUserToGroups(...) itself has a try catch block and does not throw if the user is already part of the group. So I don't think there is a reason to have another try catch here, in particular because the previous catch (which I moved up) only re-threw the exception", "url": "https://github.com/ls1intum/Artemis/pull/2076#discussion_r480327795", "createdAt": "2020-08-31T19:01:21Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/gitlab/GitLabService.java", "diffHunk": "@@ -276,20 +276,25 @@ public void createProjectForExercise(ProgrammingExercise programmingExercise) th\n         final var group = new Group().withPath(exercisePath).withName(exerciseName).withVisibility(Visibility.PRIVATE);\n         try {\n             gitlab.getGroupApi().addGroup(group);\n-\n-            final var instructors = userService.getInstructors(programmingExercise.getCourseViaExerciseGroupOrCourseMember());\n-            final var teachingAssistants = userService.getTutors(programmingExercise.getCourseViaExerciseGroupOrCourseMember());\n-            for (final var instructor : instructors) {\n-                final var userId = gitLabUserManagementService.getUserId(instructor.getLogin());\n-                gitLabUserManagementService.addUserToGroups(userId, List.of(programmingExercise), MAINTAINER);\n+        }\n+        catch (GitLabApiException e) {\n+            if (e.getMessage().contains(\"has already been taken\")) {\n+                // ignore this error, because it is not really a problem\n+                log.warn(\"Failed to add group \" + exerciseName + \" due to error: \" + e.getMessage());\n             }\n-            for (final var ta : teachingAssistants) {\n-                final var userId = gitLabUserManagementService.getUserId(ta.getLogin());\n-                gitLabUserManagementService.addUserToGroups(userId, List.of(programmingExercise), GUEST);\n+            else {\n+                throw new GitLabException(\"Unable to create new group for course \" + exerciseName, e);\n             }\n         }\n-        catch (GitLabApiException e) {\n-            throw new GitLabException(\"Unable to create new group for course \" + exerciseName, e);\n+        final var instructors = userService.getInstructors(programmingExercise.getCourseViaExerciseGroupOrCourseMember());\n+        final var teachingAssistants = userService.getTutors(programmingExercise.getCourseViaExerciseGroupOrCourseMember());\n+        for (final var instructor : instructors) {\n+            final var userId = gitLabUserManagementService.getUserId(instructor.getLogin());\n+            gitLabUserManagementService.addUserToGroups(userId, List.of(programmingExercise), MAINTAINER);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDMxNjcyOQ=="}, "originalCommit": {"oid": "2cecc803d4ba8cd363a32180f2c66dd3f327b66e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNjkzOTA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/JenkinsService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzoxNjo0N1rOHKoTpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzoxNjo0N1rOHKoTpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkwODE5Nw==", "bodyText": "Codacy found an issue: Useless parentheses.", "url": "https://github.com/ls1intum/Artemis/pull/2076#discussion_r480908197", "createdAt": "2020-09-01T07:16:47Z", "author": {"login": "artemis-bot"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/jenkins/JenkinsService.java", "diffHunk": "@@ -139,22 +140,67 @@ public void updatePlanRepository(String projectKey, String planName, String repo\n \n         // remove potential username from repo URL. Jenkins uses the Artemis Admin user and will fail if other usernames are in the URL\n         final var repoUrl = vcsRepositoryUrl.replaceAll(\"(https?://)(.*@)(.*)\", \"$1$3\");\n-        final var config = jobXml(projectKey, planName);\n-        final var urlElements = config.getElementsByTagName(\"url\");\n-        if (urlElements.getLength() != 2) {\n+        final var jobXmlDocument = getJobXmlForBuildPlanWith(projectKey, planName);\n+        final var remoteUrlNode = findUserRemoteConfigFor(jobXmlDocument, repoNameInCI);\n+        if (remoteUrlNode == null || remoteUrlNode.getFirstChild() == null) {\n+            throw new IllegalArgumentException(\"Url to replace not found in job xml document\");\n+        }\n+        remoteUrlNode.getFirstChild().setNodeValue(repoUrl);\n+        final var errorMessage = \"Error trying to configure build plan in Jenkins \" + planName;\n+        postXml(jobXmlDocument, String.class, HttpStatus.OK, errorMessage, Endpoint.PLAN_CONFIG, projectKey, planName);\n+    }\n+\n+    private org.w3c.dom.Node findUserRemoteConfigFor(Document jobXmlDocument, String repoNameInCI) {\n+        final var userRemoteConfigs = jobXmlDocument.getElementsByTagName(\"hudson.plugins.git.UserRemoteConfig\");\n+        if (userRemoteConfigs.getLength() != 2) {\n             throw new IllegalArgumentException(\"Configuration of build plans currently only supports a model with two repositories, ASSIGNMENT and TESTS\");\n         }\n+        var firstUserRemoteConfig = userRemoteConfigs.item(0).getChildNodes();\n+        var urlElement = findUrlElement(firstUserRemoteConfig, repoNameInCI);\n+        if (urlElement != null) {\n+            return urlElement;\n+        }\n+        var secondUserRemoteConfig = userRemoteConfigs.item(1).getChildNodes();\n+        urlElement = findUrlElement(secondUserRemoteConfig, repoNameInCI);\n+        if (urlElement != null) {\n+            return urlElement;\n+        }\n+        return null;\n+    }\n+\n+    private org.w3c.dom.Node findUrlElement(NodeList nodeList, String repoNameInCI) {\n+        boolean found = false;\n+        org.w3c.dom.Node urlNode = null;\n+        for (int i = 0; i < nodeList.getLength(); i++) {\n+            var childElement = nodeList.item(i);\n+            if (\"name\".equalsIgnoreCase(childElement.getNodeName())) {\n+                var nameValue = childElement.hasChildNodes() ? childElement.getFirstChild().getNodeValue() : null;\n+                // this name was added recently, so we cannot assume that all job xml files include this name\n+                if (repoNameInCI.equalsIgnoreCase(nameValue)) {\n+                    found = true;\n+                }\n+            }\n+            else if (\"url\".equalsIgnoreCase(childElement.getNodeName())) {\n+                urlNode = childElement;\n+                if (!found) {\n+                    // fallback for old xmls\n+                    var urlValue = childElement.hasChildNodes() ? childElement.getFirstChild().getNodeValue() : null;\n+                    if (urlValue != null && repoNameInCI.equals(ASSIGNMENT_REPO_NAME) && ((urlValue.contains(\"-exercise.git\") || (urlValue.contains(\"-solution.git\"))))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04b1cbb052b9ed7f067867ff1013eb5a736d22a"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4672, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}