{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4ODI4OTg3", "number": 1478, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoxMzo0MVrOEBBkTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoxMzo0MVrOEBBkTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTA5NzA4OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoxMzo0MVrOGcqu0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxOTo1Mjo0NFrOGc1CBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMzQyNg==", "bodyText": "I believe some test cases where the value actually gets changed would be quite useful.", "url": "https://github.com/ls1intum/Artemis/pull/1478#discussion_r432713426", "createdAt": "2020-05-29T20:13:41Z", "author": {"login": "sleiss"}, "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionIntegrationTest.java", "diffHunk": "@@ -214,4 +214,41 @@ public void deleteStudentQuestions_asStudent() throws Exception {\n         request.delete(\"/api/student-questions/\" + studentQuestion1_student2.getId(), HttpStatus.FORBIDDEN);\n         assertThat(studentQuestionRepository.count()).isEqualTo(1);\n     }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void editStudentQuestionVotes_asInstructor() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        studentQuestion.setVotes(42);\n+\n+        StudentQuestion updatedStudentQuestion = request.putWithResponseBody(\"/api/student-questions/\" + studentQuestion.getId() + \"/votes\", 0, StudentQuestion.class,\n+                HttpStatus.OK);\n+        assertThat(updatedStudentQuestion.getVotes().equals(42));\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n+    public void editStudentQuestionVotes_asTA() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        studentQuestion.setVotes(42);\n+\n+        StudentQuestion updatedStudentQuestion = request.putWithResponseBody(\"/api/student-questions/\" + studentQuestion.getId() + \"/votes\", 0, StudentQuestion.class,\n+                HttpStatus.OK);\n+        assertThat(updatedStudentQuestion.getVotes().equals(42));\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"student1\", roles = \"USER\")\n+    public void editStudentQuestionVotes_asStudent() throws Exception {\n+        List<StudentQuestion> questions = database.createCourseWithExerciseAndStudentQuestions();\n+        StudentQuestion studentQuestion = questions.get(0);\n+\n+        studentQuestion.setVotes(42);\n+\n+        StudentQuestion updatedStudentQuestion = request.putWithResponseBody(\"/api/student-questions/\" + studentQuestion.getId() + \"/votes\", 0, StudentQuestion.class,\n+                HttpStatus.OK);\n+        assertThat(updatedStudentQuestion.getVotes().equals(42));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "101c5d9f2d53db31edd141388ba2db4ad6693a4f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgzNTQ5Mw==", "bodyText": "These were just placeholders, now there are tests that actually test something with 45b799f", "url": "https://github.com/ls1intum/Artemis/pull/1478#discussion_r432835493", "createdAt": "2020-05-30T11:54:40Z", "author": {"login": "filip-gregurevic"}, "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionIntegrationTest.java", "diffHunk": "@@ -214,4 +214,41 @@ public void deleteStudentQuestions_asStudent() throws Exception {\n         request.delete(\"/api/student-questions/\" + studentQuestion1_student2.getId(), HttpStatus.FORBIDDEN);\n         assertThat(studentQuestionRepository.count()).isEqualTo(1);\n     }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void editStudentQuestionVotes_asInstructor() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        studentQuestion.setVotes(42);\n+\n+        StudentQuestion updatedStudentQuestion = request.putWithResponseBody(\"/api/student-questions/\" + studentQuestion.getId() + \"/votes\", 0, StudentQuestion.class,\n+                HttpStatus.OK);\n+        assertThat(updatedStudentQuestion.getVotes().equals(42));\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n+    public void editStudentQuestionVotes_asTA() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        studentQuestion.setVotes(42);\n+\n+        StudentQuestion updatedStudentQuestion = request.putWithResponseBody(\"/api/student-questions/\" + studentQuestion.getId() + \"/votes\", 0, StudentQuestion.class,\n+                HttpStatus.OK);\n+        assertThat(updatedStudentQuestion.getVotes().equals(42));\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"student1\", roles = \"USER\")\n+    public void editStudentQuestionVotes_asStudent() throws Exception {\n+        List<StudentQuestion> questions = database.createCourseWithExerciseAndStudentQuestions();\n+        StudentQuestion studentQuestion = questions.get(0);\n+\n+        studentQuestion.setVotes(42);\n+\n+        StudentQuestion updatedStudentQuestion = request.putWithResponseBody(\"/api/student-questions/\" + studentQuestion.getId() + \"/votes\", 0, StudentQuestion.class,\n+                HttpStatus.OK);\n+        assertThat(updatedStudentQuestion.getVotes().equals(42));\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMzQyNg=="}, "originalCommit": {"oid": "101c5d9f2d53db31edd141388ba2db4ad6693a4f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4MjE4Mg==", "bodyText": "Yeah, thats how I like them test cases :D", "url": "https://github.com/ls1intum/Artemis/pull/1478#discussion_r432882182", "createdAt": "2020-05-30T19:52:44Z", "author": {"login": "sleiss"}, "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionIntegrationTest.java", "diffHunk": "@@ -214,4 +214,41 @@ public void deleteStudentQuestions_asStudent() throws Exception {\n         request.delete(\"/api/student-questions/\" + studentQuestion1_student2.getId(), HttpStatus.FORBIDDEN);\n         assertThat(studentQuestionRepository.count()).isEqualTo(1);\n     }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void editStudentQuestionVotes_asInstructor() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        studentQuestion.setVotes(42);\n+\n+        StudentQuestion updatedStudentQuestion = request.putWithResponseBody(\"/api/student-questions/\" + studentQuestion.getId() + \"/votes\", 0, StudentQuestion.class,\n+                HttpStatus.OK);\n+        assertThat(updatedStudentQuestion.getVotes().equals(42));\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n+    public void editStudentQuestionVotes_asTA() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        studentQuestion.setVotes(42);\n+\n+        StudentQuestion updatedStudentQuestion = request.putWithResponseBody(\"/api/student-questions/\" + studentQuestion.getId() + \"/votes\", 0, StudentQuestion.class,\n+                HttpStatus.OK);\n+        assertThat(updatedStudentQuestion.getVotes().equals(42));\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"student1\", roles = \"USER\")\n+    public void editStudentQuestionVotes_asStudent() throws Exception {\n+        List<StudentQuestion> questions = database.createCourseWithExerciseAndStudentQuestions();\n+        StudentQuestion studentQuestion = questions.get(0);\n+\n+        studentQuestion.setVotes(42);\n+\n+        StudentQuestion updatedStudentQuestion = request.putWithResponseBody(\"/api/student-questions/\" + studentQuestion.getId() + \"/votes\", 0, StudentQuestion.class,\n+                HttpStatus.OK);\n+        assertThat(updatedStudentQuestion.getVotes().equals(42));\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMzQyNg=="}, "originalCommit": {"oid": "101c5d9f2d53db31edd141388ba2db4ad6693a4f"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4981, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}