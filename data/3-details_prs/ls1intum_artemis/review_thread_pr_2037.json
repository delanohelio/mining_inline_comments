{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MTM3MDAx", "number": 2037, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTozODoxN1rOEe9sbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTozNzo1MlrOEogfNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTAzNTM0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/manage/grading/programming-exercise-configure-grading.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTozODoxN1rOHK8b4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTozODoxN1rOHK8b4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzNzk4Nw==", "bodyText": "You can remove this, as we have the overall loading icon in the nav bar :)", "url": "https://github.com/ls1intum/Artemis/pull/2037#discussion_r481237987", "createdAt": "2020-09-01T15:38:17Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/programming/manage/grading/programming-exercise-configure-grading.component.html", "diffHunk": "@@ -0,0 +1,166 @@\n+<jhi-alert></jhi-alert>\n+<div>\n+    <div class=\"d-flex align-content-center mb-2\">\n+        <h3 jhiTranslate=\"artemisApp.programmingExercise.configureGrading.title\">Configure Automated Grading</h3>\n+    </div>\n+    <ng-container *ngIf=\"!isLoading; else loadingContainer\">\n+        <div class=\"d-flex\">\n+            <div class=\"d-flex align-items-center ml-auto\">\n+                <jhi-programming-exercise-configure-grading-status\n+                    [exerciseIsReleasedAndHasResults]=\"isReleasedAndHasResults\"\n+                    [hasUnsavedChanges]=\"!!changedTestCaseIds.length\"\n+                    [hasUpdatedTestCases]=\"hasUpdatedTestCases\"\n+                ></jhi-programming-exercise-configure-grading-status>\n+                <jhi-programming-exercise-configure-grading-actions\n+                    [exercise]=\"exercise\"\n+                    [hasUpdatedTestCases]=\"hasUpdatedTestCases\"\n+                    [hasUnsavedChanges]=\"!!changedTestCaseIds.length\"\n+                    (onReset)=\"resetChanges()\"\n+                    (onSave)=\"saveChanges()\"\n+                ></jhi-programming-exercise-configure-grading-actions>\n+            </div>\n+        </div>\n+\n+        <div class=\"tab-bar\">\n+            <div class=\"tab-item test-cases\" (click)=\"selectTab('test-cases')\" [ngClass]=\"activeTab == 'test-cases' ? 'active' : ''\">\n+                <b>Test Cases</b>\n+            </div>\n+            <div class=\"tab-item code-analysis\" (click)=\"selectTab('code-analysis')\" [ngClass]=\"activeTab == 'code-analysis' ? 'active' : ''\">\n+                <b>Code Analysis</b>\n+            </div>\n+        </div>\n+\n+        <div class=\"grading-body-container\">\n+            <div *ngIf=\"activeTab == 'test-cases'\">\n+                <label class=\"d-flex align-items-center mb-0\">\n+                    <input type=\"checkbox\" [checked]=\"showInactive\" (change)=\"showInactive = !showInactive\" />\n+                    <span class=\"ml-2\" jhiTranslate=\"artemisApp.programmingExercise.manageTestCases.showInactive\">Show inactive</span>\n+                </label>\n+                <ngx-datatable\n+                    id=\"testCaseTable\"\n+                    class=\"bootstrap\"\n+                    [headerHeight]=\"50\"\n+                    [limit]=\"20\"\n+                    [columnMode]=\"'force'\"\n+                    [footerHeight]=\"50\"\n+                    [rowHeight]=\"'auto'\"\n+                    [rows]=\"filteredTestCases\"\n+                    [sorts]=\"[{ prop: 'testName', dir: 'asc' }]\"\n+                    [rowClass]=\"getRowClass\"\n+                >\n+                    <ngx-datatable-column name=\"Id\" prop=\"id\">\n+                        <ng-template ngx-datatable-cell-template let-value=\"value\">\n+                            {{ value }}\n+                        </ng-template>\n+                    </ngx-datatable-column>\n+                    <ngx-datatable-column name=\"Test Name\" prop=\"testName\">\n+                        <ng-template ngx-datatable-cell-template let-value=\"value\">\n+                            {{ value }}\n+                        </ng-template>\n+                    </ngx-datatable-column>\n+                    <ngx-datatable-column name=\"Weight\" prop=\"weight\">\n+                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n+                            <jhi-table-editable-field [value]=\"value\" (onValueUpdate)=\"updateEditedField($event, row, EditableField.WEIGHT)\"></jhi-table-editable-field>\n+                        </ng-template>\n+                    </ngx-datatable-column>\n+                    <ngx-datatable-column name=\"Bonus Multiplier\" prop=\"bonusMultiplier\">\n+                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n+                            <jhi-table-editable-field [value]=\"value\" (onValueUpdate)=\"updateEditedField($event, row, EditableField.BONUS_MULTIPLIER)\"></jhi-table-editable-field>\n+                        </ng-template>\n+                    </ngx-datatable-column>\n+                    <ngx-datatable-column name=\"Bonus Points\" prop=\"bonusPoints\">\n+                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n+                            <jhi-table-editable-field [value]=\"value\" (onValueUpdate)=\"updateEditedField($event, row, EditableField.BONUS_POINTS)\"></jhi-table-editable-field>\n+                        </ng-template>\n+                    </ngx-datatable-column>\n+                    <ngx-datatable-column name=\"After Due Date\" prop=\"afterDueDate\">\n+                        <ng-template ngx-datatable-header-template>\n+                            <span>After Due Date</span\n+                            ><fa-icon\n+                                *ngIf=\"buildAfterDueDateActive === false\"\n+                                [icon]=\"'question-circle'\"\n+                                class=\"text-secondary ml-2\"\n+                                [ngbPopover]=\"popoverContent\"\n+                                placement=\"bottom\"\n+                                container=\"body\"\n+                            ></fa-icon>\n+                            <ng-template #popoverContent>\n+                                <div class=\"d-flex flex-column run-after-due-date-disabled\">\n+                                    <pre jhiTranslate=\"artemisApp.programmingExercise.manageTestCases.runAfterDueDateDisabled\"></pre>\n+                                    <a [routerLink]=\"['/course/', this.courseId, 'programming-exercise', this.exercise.id, 'edit']\" class=\"ml-auto\">\n+                                        <jhi-button [icon]=\"'arrow-right'\" ngbTooltip=\"{{ 'entity.action.edit' | translate }}\"></jhi-button>\n+                                    </a>\n+                                </div>\n+                            </ng-template>\n+                        </ng-template>\n+                        <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\" let-row=\"row\">\n+                            <jhi-table-editable-checkbox\n+                                [value]=\"value\"\n+                                [disabled]=\"!buildAfterDueDateActive\"\n+                                (onValueUpdate)=\"toggleAfterDueDate(filteredTestCases.indexOf(row))\"\n+                            ></jhi-table-editable-checkbox>\n+                        </ng-template>\n+                    </ngx-datatable-column>\n+                    <ngx-datatable-column name=\"Is Active\" prop=\"active\">\n+                        <ng-template ngx-datatable-cell-template let-value=\"value\">\n+                            {{ value }}\n+                        </ng-template>\n+                    </ngx-datatable-column>\n+                </ngx-datatable>\n+            </div>\n+            <div *ngIf=\"activeTab == 'code-analysis'\">\n+                <ngx-datatable\n+                    id=\"codeAnalysisTable\"\n+                    class=\"bootstrap\"\n+                    [headerHeight]=\"50\"\n+                    [limit]=\"20\"\n+                    [columnMode]=\"'force'\"\n+                    [footerHeight]=\"50\"\n+                    [rowHeight]=\"'auto'\"\n+                    [rows]=\"staticCodeAnalysisCategories\"\n+                >\n+                    <ngx-datatable-column name=\"Category\" prop=\"name\">\n+                        <ng-template ngx-datatable-cell-template let-value=\"value\">\n+                            {{ value }}\n+                        </ng-template>\n+                    </ngx-datatable-column>\n+                    <ngx-datatable-column name=\"Description\" prop=\"description\">\n+                        <ng-template ngx-datatable-cell-template let-value=\"value\">\n+                            {{ value }}\n+                        </ng-template>\n+                    </ngx-datatable-column>\n+                    <ngx-datatable-column name=\"State\" prop=\"state\">\n+                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n+                            <select [ngModel]=\"value\" (change)=\"updateEditedCategoryField($event.target.value, row, EditableField.STATE)\">\n+                                <option *ngFor=\"let s of categoryStateList\" [value]=\"s.value\">{{ s.name }}</option>\n+                            </select>\n+                        </ng-template>\n+                    </ngx-datatable-column>\n+                    <ngx-datatable-column name=\"Checks\" prop=\"checks\">\n+                        <ng-template ngx-datatable-cell-template let-value=\"value\">\n+                            {{ value.length }}\n+                        </ng-template>\n+                    </ngx-datatable-column>\n+                    <ngx-datatable-column name=\"Penalty\" prop=\"penalty\">\n+                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n+                            <jhi-table-editable-field [value]=\"value\" (onValueUpdate)=\"updateEditedCategoryField($event, row, EditableField.PENALTY)\"></jhi-table-editable-field>\n+                        </ng-template>\n+                    </ngx-datatable-column>\n+                    <ngx-datatable-column name=\"Max Penalty\" prop=\"maxPenalty\">\n+                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n+                            <jhi-table-editable-field\n+                                [value]=\"value\"\n+                                (onValueUpdate)=\"updateEditedCategoryField($event, row, EditableField.MAX_PENALTY)\"\n+                            ></jhi-table-editable-field>\n+                        </ng-template>\n+                    </ngx-datatable-column>\n+                </ngx-datatable>\n+            </div>\n+        </div>\n+    </ng-container>\n+    <ng-template #loadingContainer>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b1f28e26c82528e5f1b0e65794d6e075ac76a66"}, "originalPosition": 161}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTEwMTU2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/manage/grading/codeAnalysisMapping.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTozNjowNVrOHZo3sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTozNjoxNFrOHZo37g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0NjA2NA==", "bodyText": "please mark this as a dummy object that will be replaced later by the actual default categories of the server", "url": "https://github.com/ls1intum/Artemis/pull/2037#discussion_r496646064", "createdAt": "2020-09-29T11:36:05Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/programming/manage/grading/codeAnalysisMapping.ts", "diffHunk": "@@ -0,0 +1,76 @@\n+import { StaticCodeAnalysisCategory, StaticCodeAnalysisCategoryState } from 'app/entities/static-code-analysis-category.model';\n+\n+export const Mapping: StaticCodeAnalysisCategory[] = [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd856726db3903938adb726e6911e9e351f1d83f"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0NjEyNg==", "bodyText": "using a TODO :-)", "url": "https://github.com/ls1intum/Artemis/pull/2037#discussion_r496646126", "createdAt": "2020-09-29T11:36:14Z", "author": {"login": "krusche"}, "path": "src/main/webapp/app/exercises/programming/manage/grading/codeAnalysisMapping.ts", "diffHunk": "@@ -0,0 +1,76 @@\n+import { StaticCodeAnalysisCategory, StaticCodeAnalysisCategoryState } from 'app/entities/static-code-analysis-category.model';\n+\n+export const Mapping: StaticCodeAnalysisCategory[] = [", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0NjA2NA=="}, "originalCommit": {"oid": "cd856726db3903938adb726e6911e9e351f1d83f"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTEwNzcyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/entities/static-code-analysis-category.model.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTozNzo1MlrOHZo7bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTozNzo1MlrOHZo7bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0NzAyMQ==", "bodyText": "I would create an interface for the type instead of defining here anonymously.", "url": "https://github.com/ls1intum/Artemis/pull/2037#discussion_r496647021", "createdAt": "2020-09-29T11:37:52Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/entities/static-code-analysis-category.model.ts", "diffHunk": "@@ -0,0 +1,17 @@\n+import { BaseEntity } from 'app/shared/model/base-entity';\n+\n+export class StaticCodeAnalysisCategory implements BaseEntity {\n+    id: number;\n+    name: string;\n+    description: string;\n+    state: StaticCodeAnalysisCategoryState;\n+    checks: { tool: string; check: string }[];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd856726db3903938adb726e6911e9e351f1d83f"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4639, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}