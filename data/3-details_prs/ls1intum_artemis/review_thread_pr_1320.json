{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NTU3Njgw", "number": 1320, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMzozMjoxNFrOD5M8Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjoyMjoxMVrOD8Vk4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzA3NDI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/repository/ApollonDiagramRepository.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMzozMjoxNFrOGQV1JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMzozMjoxNFrOGQV1JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc4ODA2OQ==", "bodyText": "I think the native query is not necessary here. List<ApollonDiagram> findDiagramsByCourse(Long courseId); should be enough and the JPA implementation will do all the magic.\nE.g. compare to implementation in TutorLeaderboardComplaintsViewRepository.java.", "url": "https://github.com/ls1intum/Artemis/pull/1320#discussion_r419788069", "createdAt": "2020-05-04T23:32:14Z", "author": {"login": "sascha11110"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/ApollonDiagramRepository.java", "diffHunk": "@@ -12,4 +15,6 @@\n @Repository\n public interface ApollonDiagramRepository extends JpaRepository<ApollonDiagram, Long> {\n \n+    @Query(\"SELECT a FROM ApollonDiagram a WHERE a.courseId = :#{#courseId} OR a.courseId is null\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0500386b0afd4a667d99ccc6a96174e436337644"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzA4MDIwOnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMzozNToxOFrOGQV4oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMzozNToxOFrOGQV4oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc4ODk2MQ==", "bodyText": "Typo", "url": "https://github.com/ls1intum/Artemis/pull/1320#discussion_r419788961", "createdAt": "2020-05-04T23:35:18Z", "author": {"login": "sascha11110"}, "path": "src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java", "diffHunk": "@@ -90,6 +90,35 @@ public void testGetAllApollonDiagram_OK() throws Exception {\n         assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n     }\n \n+    @Test\n+    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n+    public void testGetDiagramsByCourse() throws Exception {\n+        apollonDiagram.setCourseId((long) 1);\n+        apollonDiagramRepository.save(apollonDiagram);\n+        List<ApollonDiagram> response = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(response.isEmpty()).as(\"response is not empty\").isFalse();\n+        assertThat(response.size()).as(\"response has length 1 \").isEqualTo(1);\n+\n+        ApollonDiagram newApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"new title\");\n+        newApollonDiagram.setCourseId((long) 1);\n+        apollonDiagramRepository.save(newApollonDiagram);\n+        List<ApollonDiagram> updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponse.isEmpty()).as(\"updated response is not empty\").isFalse();\n+        assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n+\n+        ApollonDiagram newerApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"newer title\");\n+        newerApollonDiagram.setCourseId((long) 2);\n+        apollonDiagramRepository.save(newerApollonDiagram);\n+        updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponse.isEmpty()).as(\"updateder response is not empty\").isFalse();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0500386b0afd4a667d99ccc6a96174e436337644"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzA4MDQ5OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMzozNToyN1rOGQV4zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMzozNToyN1rOGQV4zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc4OTAwNQ==", "bodyText": "Typo", "url": "https://github.com/ls1intum/Artemis/pull/1320#discussion_r419789005", "createdAt": "2020-05-04T23:35:27Z", "author": {"login": "sascha11110"}, "path": "src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java", "diffHunk": "@@ -90,6 +90,35 @@ public void testGetAllApollonDiagram_OK() throws Exception {\n         assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n     }\n \n+    @Test\n+    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n+    public void testGetDiagramsByCourse() throws Exception {\n+        apollonDiagram.setCourseId((long) 1);\n+        apollonDiagramRepository.save(apollonDiagram);\n+        List<ApollonDiagram> response = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(response.isEmpty()).as(\"response is not empty\").isFalse();\n+        assertThat(response.size()).as(\"response has length 1 \").isEqualTo(1);\n+\n+        ApollonDiagram newApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"new title\");\n+        newApollonDiagram.setCourseId((long) 1);\n+        apollonDiagramRepository.save(newApollonDiagram);\n+        List<ApollonDiagram> updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponse.isEmpty()).as(\"updated response is not empty\").isFalse();\n+        assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n+\n+        ApollonDiagram newerApollonDiagram = ModelFactory.generateApollonDiagram(DiagramType.ClassDiagram, \"newer title\");\n+        newerApollonDiagram.setCourseId((long) 2);\n+        apollonDiagramRepository.save(newerApollonDiagram);\n+        updatedResponse = request.get(\"/api/apollon-diagrams/list/1\", HttpStatus.OK, List.class);\n+        assertThat(updatedResponse.isEmpty()).as(\"updateder response is not empty\").isFalse();\n+        assertThat(updatedResponse.size()).as(\"updateder response has length 2\").isEqualTo(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0500386b0afd4a667d99ccc6a96174e436337644"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzA4NDI4OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMzozNzozNVrOGQV7Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOTo0MjoxN1rOGQh3fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc4OTU5MQ==", "bodyText": "In general you might test here that the evaluation of the courseId actually works. E.g. add two diagrams with different courses to the repository and test that only the one with the matching course is returned.", "url": "https://github.com/ls1intum/Artemis/pull/1320#discussion_r419789591", "createdAt": "2020-05-04T23:37:35Z", "author": {"login": "sascha11110"}, "path": "src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java", "diffHunk": "@@ -90,6 +90,35 @@ public void testGetAllApollonDiagram_OK() throws Exception {\n         assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0500386b0afd4a667d99ccc6a96174e436337644"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4NTI3Ng==", "bodyText": "As discussed.", "url": "https://github.com/ls1intum/Artemis/pull/1320#discussion_r419985276", "createdAt": "2020-05-05T09:42:17Z", "author": {"login": "sjagla27"}, "path": "src/test/java/de/tum/in/www1/artemis/ApollonDiagramResourceIntegrationTest.java", "diffHunk": "@@ -90,6 +90,35 @@ public void testGetAllApollonDiagram_OK() throws Exception {\n         assertThat(updatedResponse.size()).as(\"updated response has length 2\").isEqualTo(2);\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc4OTU5MQ=="}, "originalCommit": {"oid": "0500386b0afd4a667d99ccc6a96174e436337644"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTk0NjU4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/quiz/manage/apollon-diagrams/apollon-diagram-detail.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjoyMjoxMVrOGVNkxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjoyMjoxMVrOGVNkxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg5NTY4NA==", "bodyText": "'courseExerciseOverviewTour' is defined but never used - github action", "url": "https://github.com/ls1intum/Artemis/pull/1320#discussion_r424895684", "createdAt": "2020-05-14T06:22:11Z", "author": {"login": "TobiasPr"}, "path": "src/main/webapp/app/exercises/quiz/manage/apollon-diagrams/apollon-diagram-detail.component.ts", "diffHunk": "@@ -9,6 +9,7 @@ import { convertRenderedSVGToPNG } from './exercise-generation/svg-renderer';\n import { ApollonDiagramService } from 'app/exercises/quiz/manage/apollon-diagrams/apollon-diagram.service';\n import { ApollonDiagram } from 'app/entities/apollon-diagram.model';\n import { AlertService } from 'app/core/alert/alert.service';\n+import { courseExerciseOverviewTour } from 'app/guided-tour/tours/course-exercise-overview-tour';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf6d72d884009bd2f9b46e7a140a4b05566300d8"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 104, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}