{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTExNDc4", "number": 1845, "title": "Export metrics in prometheus format", "bodyText": "Checklist\n\n I tested all changes and all related features with different users (student, tutor, instructor, admin) on the test server https://artemistest.ase.in.tum.de.\n\nMotivation and Context\nSpring collects several metrics, including cache performance, http performance and system health.\nThese metrics are displayed in the Metrics Tab of both Artemis and the Jhipster Registry.\nAs we now increasingly use external monitoring systems, we also want to publish insights into the Artemis application to these systems.\nThis PR adds additional metrics (Health status and User count) to the prometheus endpoint and adds an configuration option to specify the ip address of the monitoring system, that should be allowed to access these metrics.\nDescription\nDue to Spring not exporting the Health status for the individual indicators (See micrometer-metrics/micrometer#416 and spring-projects/spring-boot#14087), I've added these metrics manually using a micrometer Gauge.\nThe current user count and the status of the system will then be published, alongside the 'normal' metrics like http request time, cpu usage, etc and can be collected by Prometheus.\nTo allow only the monitoring system to access these metrics, a new configuration option spring.prometheus.monitoringIp is added (defaulting to 127.0.0.1), that must equal the IP address of the monitoring system (that is used to access the Prometheus endpoint).\nSteps for Testing (locally)\n\n\nChange the config value management.metrics.export.prometheus.enabled to true.\n\n\nIf necessary, adjust the value of spring.prometheus.monitoringIp to match the IP address used to access Artemis.\n\n\nNavigate to ARTEMIS_IP:8080/management/prometheus (where ARTEMIS_IP is 127.0.0.1 when using the same device) and verify that something like this is shown:\n\n\n\nChange to config value of spring.prometheus.monitoringIp to a different ip address & reboot Artemis.\n\n\nVerify that the metrics can not be accessed anymore:", "createdAt": "2020-07-09T21:50:20Z", "url": "https://github.com/ls1intum/Artemis/pull/1845", "merged": true, "mergeCommit": {"oid": "2db3e8d7d91ac83b6e1239bec794fd98956128f9"}, "closed": true, "closedAt": "2020-07-11T22:00:37Z", "author": {"login": "sleiss"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczJcv7AH2gAyNDQ3MTExNDc4Ojc2YjlhN2NkYmMxZWY4NTY0NTI4MGY2MDFkMDc3NTZiZjkzNjkxNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcz_jNlAFqTQ0NjgzMTU2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "76b9a7cdbc1ef85645280f601d07756bf9369167", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/76b9a7cdbc1ef85645280f601d07756bf9369167", "committedDate": "2020-07-09T06:56:46Z", "message": "Add health indicator metrics, allow access to endpoint."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b21f17eb348e6bbe1802284e4b0e7115ad36dbae", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/b21f17eb348e6bbe1802284e4b0e7115ad36dbae", "committedDate": "2020-07-09T21:38:45Z", "message": "Move Prometheus Configuration, only allow from specified IP."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "617836921f4a85b79dbc3cd5103dfe0e7448696f", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/617836921f4a85b79dbc3cd5103dfe0e7448696f", "committedDate": "2020-07-10T07:24:52Z", "message": "Merge branch 'develop' into feature/prometheus-metrics-export"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MjUzNzAz", "url": "https://github.com/ls1intum/Artemis/pull/1845#pullrequestreview-446253703", "createdAt": "2020-07-10T09:21:03Z", "commit": {"oid": "617836921f4a85b79dbc3cd5103dfe0e7448696f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MzQzNjg5", "url": "https://github.com/ls1intum/Artemis/pull/1845#pullrequestreview-446343689", "createdAt": "2020-07-10T11:59:23Z", "commit": {"oid": "617836921f4a85b79dbc3cd5103dfe0e7448696f"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMTo1OToyM1rOGv0p3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjowNTowOFrOGv0znA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc5ODk0MQ==", "bodyText": "Is this a typo? \"healthindicator\"", "url": "https://github.com/ls1intum/Artemis/pull/1845#discussion_r452798941", "createdAt": "2020-07-10T11:59:23Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/config/MetricsBean.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package de.tum.in.www1.artemis.config;\n+\n+import java.util.List;\n+\n+import org.springframework.boot.actuate.health.*;\n+import org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor;\n+import org.springframework.messaging.simp.user.SimpUserRegistry;\n+import org.springframework.stereotype.Component;\n+\n+import io.micrometer.core.instrument.Gauge;\n+import io.micrometer.core.instrument.MeterRegistry;\n+\n+@Component\n+public class MetricsBean {\n+\n+    public MetricsBean(MeterRegistry meterRegistry, SimpUserRegistry simpUserRegistry, List<HealthContributor> healthContributors) {\n+        Gauge.builder(\"artemis.instance.websocket.users\", simpUserRegistry, SimpUserRegistry::getUserCount).strongReference(true)\n+                .description(\"Number of users connected to this Artemis instance\").register(meterRegistry);\n+\n+        for (HealthContributor healthContributor : healthContributors) {\n+            if (healthContributor instanceof HealthIndicator) {\n+                HealthIndicator healthIndicator = (HealthIndicator) healthContributor;\n+                Gauge.builder(\"artemis.health\", healthIndicator, h -> mapHealthToDouble(h.health())).strongReference(true).description(\"Artemis Health Indicator\")\n+                        .tag(\"healtindicator\", healthIndicator.getClass().getSimpleName().toLowerCase()).register(meterRegistry);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "617836921f4a85b79dbc3cd5103dfe0e7448696f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc5OTgxNA==", "bodyText": "Is this a typo? \"healthindicator\"", "url": "https://github.com/ls1intum/Artemis/pull/1845#discussion_r452799814", "createdAt": "2020-07-10T12:01:21Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/config/MetricsBean.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package de.tum.in.www1.artemis.config;\n+\n+import java.util.List;\n+\n+import org.springframework.boot.actuate.health.*;\n+import org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor;\n+import org.springframework.messaging.simp.user.SimpUserRegistry;\n+import org.springframework.stereotype.Component;\n+\n+import io.micrometer.core.instrument.Gauge;\n+import io.micrometer.core.instrument.MeterRegistry;\n+\n+@Component\n+public class MetricsBean {\n+\n+    public MetricsBean(MeterRegistry meterRegistry, SimpUserRegistry simpUserRegistry, List<HealthContributor> healthContributors) {\n+        Gauge.builder(\"artemis.instance.websocket.users\", simpUserRegistry, SimpUserRegistry::getUserCount).strongReference(true)\n+                .description(\"Number of users connected to this Artemis instance\").register(meterRegistry);\n+\n+        for (HealthContributor healthContributor : healthContributors) {\n+            if (healthContributor instanceof HealthIndicator) {\n+                HealthIndicator healthIndicator = (HealthIndicator) healthContributor;\n+                Gauge.builder(\"artemis.health\", healthIndicator, h -> mapHealthToDouble(h.health())).strongReference(true).description(\"Artemis Health Indicator\")\n+                        .tag(\"healtindicator\", healthIndicator.getClass().getSimpleName().toLowerCase()).register(meterRegistry);\n+            }\n+            if (healthContributor instanceof DiscoveryCompositeHealthContributor) {\n+                DiscoveryCompositeHealthContributor discoveryCompositeHealthContributor = (DiscoveryCompositeHealthContributor) healthContributor;\n+                for (NamedContributor<HealthContributor> discoveryHealthContributor : discoveryCompositeHealthContributor) {\n+                    if (discoveryHealthContributor.getContributor() instanceof HealthIndicator) {\n+                        HealthIndicator healthIndicator = (HealthIndicator) discoveryHealthContributor.getContributor();\n+                        Gauge.builder(\"artemis.health\", healthIndicator, h -> mapHealthToDouble(h.health())).strongReference(true).description(\"Artemis Health Indicator\")\n+                                .tag(\"healtindicator\", discoveryHealthContributor.getName().toLowerCase()).register(meterRegistry);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "617836921f4a85b79dbc3cd5103dfe0e7448696f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgwMDU1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Only enable the endpoint an ip-address is specified\n          \n          \n            \n                    // Only enable the endpoint if an ip-address is specified", "url": "https://github.com/ls1intum/Artemis/pull/1845#discussion_r452800551", "createdAt": "2020-07-10T12:03:12Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/config/PrometheusAuthConfiguration.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package de.tum.in.www1.artemis.config;\n+\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.annotation.Order;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.config.http.SessionCreationPolicy;\n+\n+@Configuration\n+@Order(1)\n+@ConditionalOnProperty(prefix = \"management\", name = \"metrics.export.prometheus.enabled\")\n+public class PrometheusAuthConfiguration extends WebSecurityConfigurerAdapter {\n+\n+    @Value(\"${spring.prometheus.monitoringIp}\")\n+    private String monitoringIpAddress;\n+\n+    @Override\n+    protected void configure(HttpSecurity http) throws Exception {\n+        // Only enable the endpoint an ip-address is specified", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "617836921f4a85b79dbc3cd5103dfe0e7448696f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgwMTQzNg==", "bodyText": "You could define constants for \"artemis.health\", \"Artemis Health Indicator\", \"healt(h)indicator\". But this could also hurt readability.", "url": "https://github.com/ls1intum/Artemis/pull/1845#discussion_r452801436", "createdAt": "2020-07-10T12:05:08Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/config/MetricsBean.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package de.tum.in.www1.artemis.config;\n+\n+import java.util.List;\n+\n+import org.springframework.boot.actuate.health.*;\n+import org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor;\n+import org.springframework.messaging.simp.user.SimpUserRegistry;\n+import org.springframework.stereotype.Component;\n+\n+import io.micrometer.core.instrument.Gauge;\n+import io.micrometer.core.instrument.MeterRegistry;\n+\n+@Component\n+public class MetricsBean {\n+\n+    public MetricsBean(MeterRegistry meterRegistry, SimpUserRegistry simpUserRegistry, List<HealthContributor> healthContributors) {\n+        Gauge.builder(\"artemis.instance.websocket.users\", simpUserRegistry, SimpUserRegistry::getUserCount).strongReference(true)\n+                .description(\"Number of users connected to this Artemis instance\").register(meterRegistry);\n+\n+        for (HealthContributor healthContributor : healthContributors) {\n+            if (healthContributor instanceof HealthIndicator) {\n+                HealthIndicator healthIndicator = (HealthIndicator) healthContributor;\n+                Gauge.builder(\"artemis.health\", healthIndicator, h -> mapHealthToDouble(h.health())).strongReference(true).description(\"Artemis Health Indicator\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "617836921f4a85b79dbc3cd5103dfe0e7448696f"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6503ab10001ab5a0223cd6f2d65ecd7b86c0d905", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/6503ab10001ab5a0223cd6f2d65ecd7b86c0d905", "committedDate": "2020-07-11T11:43:26Z", "message": "Apply feedback, add more documentation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61628e96639bb4d2623508cd3d1a62f27692ef00", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/61628e96639bb4d2623508cd3d1a62f27692ef00", "committedDate": "2020-07-11T11:46:31Z", "message": "Merge remote-tracking branch 'origin/feature/prometheus-metrics-export' into feature/prometheus-metrics-export"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2Nzk4Mjgx", "url": "https://github.com/ls1intum/Artemis/pull/1845#pullrequestreview-446798281", "createdAt": "2020-07-11T12:01:43Z", "commit": {"oid": "61628e96639bb4d2623508cd3d1a62f27692ef00"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODMxNTY0", "url": "https://github.com/ls1intum/Artemis/pull/1845#pullrequestreview-446831564", "createdAt": "2020-07-11T21:58:42Z", "commit": {"oid": "61628e96639bb4d2623508cd3d1a62f27692ef00"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4300, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}