{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1Njk4MzQ0", "number": 1270, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzowMjowN1rODmYgqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzowOTowN1rODmYrXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTc0MDU4OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionAnswerIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzowMjowN1rOFzxQEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwODoyMDo1MFrOF0E8qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyODYyNA==", "bodyText": "Can a student edit the answer to a question? If not could you please cover this case.", "url": "https://github.com/ls1intum/Artemis/pull/1270#discussion_r389828624", "createdAt": "2020-03-09T17:02:07Z", "author": {"login": "HanyaElhashemy"}, "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionAnswerIntegrationTest.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.time.ZonedDateTime;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.repository.CourseRepository;\n+import de.tum.in.www1.artemis.repository.ExerciseRepository;\n+import de.tum.in.www1.artemis.repository.StudentQuestionAnswerRepository;\n+import de.tum.in.www1.artemis.repository.StudentQuestionRepository;\n+import de.tum.in.www1.artemis.service.StudentQuestionService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class StudentQuestionAnswerIntegrationTest extends AbstractSpringIntegrationTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    CourseRepository courseRepo;\n+\n+    @Autowired\n+    ExerciseRepository exerciseRepo;\n+\n+    @Autowired\n+    StudentQuestionRepository studentQuestionRepository;\n+\n+    @Autowired\n+    StudentQuestionAnswerRepository studentQuestionAnswerRepository;\n+\n+    @Autowired\n+    StudentQuestionService studentQuestionService;\n+\n+    @BeforeEach\n+    public void initTestCase() {\n+        database.addUsers(5, 5, 1);\n+    }\n+\n+    @AfterEach\n+    public void tearDown() {\n+        database.resetDatabase();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createStudentQuestionAnswer() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        StudentQuestionAnswer studentQuestionAnswer = new StudentQuestionAnswer();\n+        studentQuestionAnswer.setAuthor(database.getUserByLogin(\"tutor1\"));\n+        studentQuestionAnswer.setAnswerText(\"Test Answer\");\n+        studentQuestionAnswer.setAnswerDate(ZonedDateTime.now());\n+        studentQuestionAnswer.setQuestion(studentQuestion);\n+        StudentQuestionAnswer response = request.postWithResponseBody(\"/api/student-question-answers\", studentQuestionAnswer, StudentQuestionAnswer.class, HttpStatus.CREATED);\n+\n+        // trying to create same studentQuestionAnswer again --> bad request\n+        request.postWithResponseBody(\"/api/student-question-answers\", response, StudentQuestionAnswer.class, HttpStatus.BAD_REQUEST);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void editStudentQuestionAnswer() throws Exception {\n+        StudentQuestionAnswer studentQuestionAnswer = createStudentQuestionAnswerOnServer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a9f81404bd6d08cd5bbf2d99bbc5c055e90d595"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg4MTM2MA==", "bodyText": "Good point! Yes, currently everyone can edit the answers. Anyway I added a testcase to cover it, since it makes sense to test with different users.", "url": "https://github.com/ls1intum/Artemis/pull/1270#discussion_r389881360", "createdAt": "2020-03-09T18:30:12Z", "author": {"login": "clemenszuck"}, "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionAnswerIntegrationTest.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.time.ZonedDateTime;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.repository.CourseRepository;\n+import de.tum.in.www1.artemis.repository.ExerciseRepository;\n+import de.tum.in.www1.artemis.repository.StudentQuestionAnswerRepository;\n+import de.tum.in.www1.artemis.repository.StudentQuestionRepository;\n+import de.tum.in.www1.artemis.service.StudentQuestionService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class StudentQuestionAnswerIntegrationTest extends AbstractSpringIntegrationTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    CourseRepository courseRepo;\n+\n+    @Autowired\n+    ExerciseRepository exerciseRepo;\n+\n+    @Autowired\n+    StudentQuestionRepository studentQuestionRepository;\n+\n+    @Autowired\n+    StudentQuestionAnswerRepository studentQuestionAnswerRepository;\n+\n+    @Autowired\n+    StudentQuestionService studentQuestionService;\n+\n+    @BeforeEach\n+    public void initTestCase() {\n+        database.addUsers(5, 5, 1);\n+    }\n+\n+    @AfterEach\n+    public void tearDown() {\n+        database.resetDatabase();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createStudentQuestionAnswer() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        StudentQuestionAnswer studentQuestionAnswer = new StudentQuestionAnswer();\n+        studentQuestionAnswer.setAuthor(database.getUserByLogin(\"tutor1\"));\n+        studentQuestionAnswer.setAnswerText(\"Test Answer\");\n+        studentQuestionAnswer.setAnswerDate(ZonedDateTime.now());\n+        studentQuestionAnswer.setQuestion(studentQuestion);\n+        StudentQuestionAnswer response = request.postWithResponseBody(\"/api/student-question-answers\", studentQuestionAnswer, StudentQuestionAnswer.class, HttpStatus.CREATED);\n+\n+        // trying to create same studentQuestionAnswer again --> bad request\n+        request.postWithResponseBody(\"/api/student-question-answers\", response, StudentQuestionAnswer.class, HttpStatus.BAD_REQUEST);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void editStudentQuestionAnswer() throws Exception {\n+        StudentQuestionAnswer studentQuestionAnswer = createStudentQuestionAnswerOnServer();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyODYyNA=="}, "originalCommit": {"oid": "9a9f81404bd6d08cd5bbf2d99bbc5c055e90d595"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE1MTMzOA==", "bodyText": "Students should only be able to edit and delete their own answers. They should NOT be able to edit and delete answers of other users.\nTutors and instructors should be able to edit and delete answers of other users.\nPlease implement this logic in the tests and let them fail if the server logic is not implemented correctly, then we should fix it!", "url": "https://github.com/ls1intum/Artemis/pull/1270#discussion_r390151338", "createdAt": "2020-03-10T08:20:50Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionAnswerIntegrationTest.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.time.ZonedDateTime;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.repository.CourseRepository;\n+import de.tum.in.www1.artemis.repository.ExerciseRepository;\n+import de.tum.in.www1.artemis.repository.StudentQuestionAnswerRepository;\n+import de.tum.in.www1.artemis.repository.StudentQuestionRepository;\n+import de.tum.in.www1.artemis.service.StudentQuestionService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class StudentQuestionAnswerIntegrationTest extends AbstractSpringIntegrationTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    CourseRepository courseRepo;\n+\n+    @Autowired\n+    ExerciseRepository exerciseRepo;\n+\n+    @Autowired\n+    StudentQuestionRepository studentQuestionRepository;\n+\n+    @Autowired\n+    StudentQuestionAnswerRepository studentQuestionAnswerRepository;\n+\n+    @Autowired\n+    StudentQuestionService studentQuestionService;\n+\n+    @BeforeEach\n+    public void initTestCase() {\n+        database.addUsers(5, 5, 1);\n+    }\n+\n+    @AfterEach\n+    public void tearDown() {\n+        database.resetDatabase();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createStudentQuestionAnswer() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        StudentQuestionAnswer studentQuestionAnswer = new StudentQuestionAnswer();\n+        studentQuestionAnswer.setAuthor(database.getUserByLogin(\"tutor1\"));\n+        studentQuestionAnswer.setAnswerText(\"Test Answer\");\n+        studentQuestionAnswer.setAnswerDate(ZonedDateTime.now());\n+        studentQuestionAnswer.setQuestion(studentQuestion);\n+        StudentQuestionAnswer response = request.postWithResponseBody(\"/api/student-question-answers\", studentQuestionAnswer, StudentQuestionAnswer.class, HttpStatus.CREATED);\n+\n+        // trying to create same studentQuestionAnswer again --> bad request\n+        request.postWithResponseBody(\"/api/student-question-answers\", response, StudentQuestionAnswer.class, HttpStatus.BAD_REQUEST);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void editStudentQuestionAnswer() throws Exception {\n+        StudentQuestionAnswer studentQuestionAnswer = createStudentQuestionAnswerOnServer();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyODYyNA=="}, "originalCommit": {"oid": "9a9f81404bd6d08cd5bbf2d99bbc5c055e90d595"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTc2Nzk2OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzowOTowN1rOFzxg3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwODoyMToxM1rOF0E9OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgzMjkyNQ==", "bodyText": "Can another student edit this student's question?", "url": "https://github.com/ls1intum/Artemis/pull/1270#discussion_r389832925", "createdAt": "2020-03-09T17:09:07Z", "author": {"login": "HanyaElhashemy"}, "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionIntegrationTest.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.time.ZonedDateTime;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.Attachment;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.Lecture;\n+import de.tum.in.www1.artemis.domain.StudentQuestion;\n+import de.tum.in.www1.artemis.repository.*;\n+import de.tum.in.www1.artemis.service.StudentQuestionService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.ModelFactory;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class StudentQuestionIntegrationTest extends AbstractSpringIntegrationTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    CourseRepository courseRepo;\n+\n+    @Autowired\n+    ExerciseRepository exerciseRepo;\n+\n+    @Autowired\n+    LectureRepository lectureRepo;\n+\n+    @Autowired\n+    AttachmentRepository attachmentRepo;\n+\n+    @Autowired\n+    StudentQuestionRepository studentQuestionRepository;\n+\n+    @Autowired\n+    StudentQuestionService studentQuestionService;\n+\n+    @BeforeEach\n+    public void initTestCase() {\n+        database.addUsers(5, 5, 1);\n+    }\n+\n+    @AfterEach\n+    public void tearDown() {\n+        database.resetDatabase();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createStudentQuestion() throws Exception {\n+        StudentQuestion studentQuestion = new StudentQuestion();\n+        studentQuestion.setQuestionText(\"Test Student Question 1\");\n+        studentQuestion.setVisibleForStudents(true);\n+\n+        StudentQuestion createdStudentQuestion = request.postWithResponseBody(\"/api/student-questions\", studentQuestion, StudentQuestion.class, HttpStatus.CREATED);\n+\n+        assertThat(createdStudentQuestion).isNotNull();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createExistingStudentQuestion() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        request.postWithResponseBody(\"/api/student-questions\", studentQuestion, StudentQuestion.class, HttpStatus.BAD_REQUEST);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void editStudentQuestion() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a9f81404bd6d08cd5bbf2d99bbc5c055e90d595"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg4MTcxNw==", "bodyText": "Same as with the answers, everyone can edit it, but I still added an additional case for it.", "url": "https://github.com/ls1intum/Artemis/pull/1270#discussion_r389881717", "createdAt": "2020-03-09T18:30:50Z", "author": {"login": "clemenszuck"}, "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionIntegrationTest.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.time.ZonedDateTime;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.Attachment;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.Lecture;\n+import de.tum.in.www1.artemis.domain.StudentQuestion;\n+import de.tum.in.www1.artemis.repository.*;\n+import de.tum.in.www1.artemis.service.StudentQuestionService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.ModelFactory;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class StudentQuestionIntegrationTest extends AbstractSpringIntegrationTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    CourseRepository courseRepo;\n+\n+    @Autowired\n+    ExerciseRepository exerciseRepo;\n+\n+    @Autowired\n+    LectureRepository lectureRepo;\n+\n+    @Autowired\n+    AttachmentRepository attachmentRepo;\n+\n+    @Autowired\n+    StudentQuestionRepository studentQuestionRepository;\n+\n+    @Autowired\n+    StudentQuestionService studentQuestionService;\n+\n+    @BeforeEach\n+    public void initTestCase() {\n+        database.addUsers(5, 5, 1);\n+    }\n+\n+    @AfterEach\n+    public void tearDown() {\n+        database.resetDatabase();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createStudentQuestion() throws Exception {\n+        StudentQuestion studentQuestion = new StudentQuestion();\n+        studentQuestion.setQuestionText(\"Test Student Question 1\");\n+        studentQuestion.setVisibleForStudents(true);\n+\n+        StudentQuestion createdStudentQuestion = request.postWithResponseBody(\"/api/student-questions\", studentQuestion, StudentQuestion.class, HttpStatus.CREATED);\n+\n+        assertThat(createdStudentQuestion).isNotNull();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createExistingStudentQuestion() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        request.postWithResponseBody(\"/api/student-questions\", studentQuestion, StudentQuestion.class, HttpStatus.BAD_REQUEST);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void editStudentQuestion() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgzMjkyNQ=="}, "originalCommit": {"oid": "9a9f81404bd6d08cd5bbf2d99bbc5c055e90d595"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE1MTQ4MQ==", "bodyText": "Students should only be able to edit and delete their own questions. They should NOT be able to edit and delete questions of other users.\nTutors and instructors should be able to edit and delete questions of other users.\nPlease implement this logic in the tests and let them fail if the server logic is not implemented correctly, then we should fix it!", "url": "https://github.com/ls1intum/Artemis/pull/1270#discussion_r390151481", "createdAt": "2020-03-10T08:21:13Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/StudentQuestionIntegrationTest.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package de.tum.in.www1.artemis;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.time.ZonedDateTime;\n+import java.util.HashSet;\n+import java.util.List;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import de.tum.in.www1.artemis.domain.Attachment;\n+import de.tum.in.www1.artemis.domain.Course;\n+import de.tum.in.www1.artemis.domain.Lecture;\n+import de.tum.in.www1.artemis.domain.StudentQuestion;\n+import de.tum.in.www1.artemis.repository.*;\n+import de.tum.in.www1.artemis.service.StudentQuestionService;\n+import de.tum.in.www1.artemis.util.DatabaseUtilService;\n+import de.tum.in.www1.artemis.util.ModelFactory;\n+import de.tum.in.www1.artemis.util.RequestUtilService;\n+\n+public class StudentQuestionIntegrationTest extends AbstractSpringIntegrationTest {\n+\n+    @Autowired\n+    DatabaseUtilService database;\n+\n+    @Autowired\n+    RequestUtilService request;\n+\n+    @Autowired\n+    CourseRepository courseRepo;\n+\n+    @Autowired\n+    ExerciseRepository exerciseRepo;\n+\n+    @Autowired\n+    LectureRepository lectureRepo;\n+\n+    @Autowired\n+    AttachmentRepository attachmentRepo;\n+\n+    @Autowired\n+    StudentQuestionRepository studentQuestionRepository;\n+\n+    @Autowired\n+    StudentQuestionService studentQuestionService;\n+\n+    @BeforeEach\n+    public void initTestCase() {\n+        database.addUsers(5, 5, 1);\n+    }\n+\n+    @AfterEach\n+    public void tearDown() {\n+        database.resetDatabase();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createStudentQuestion() throws Exception {\n+        StudentQuestion studentQuestion = new StudentQuestion();\n+        studentQuestion.setQuestionText(\"Test Student Question 1\");\n+        studentQuestion.setVisibleForStudents(true);\n+\n+        StudentQuestion createdStudentQuestion = request.postWithResponseBody(\"/api/student-questions\", studentQuestion, StudentQuestion.class, HttpStatus.CREATED);\n+\n+        assertThat(createdStudentQuestion).isNotNull();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void createExistingStudentQuestion() throws Exception {\n+        StudentQuestion studentQuestion = database.createCourseWithExerciseAndStudentQuestions().get(0);\n+\n+        request.postWithResponseBody(\"/api/student-questions\", studentQuestion, StudentQuestion.class, HttpStatus.BAD_REQUEST);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void editStudentQuestion() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgzMjkyNQ=="}, "originalCommit": {"oid": "9a9f81404bd6d08cd5bbf2d99bbc5c055e90d595"}, "originalPosition": 84}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 256, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}