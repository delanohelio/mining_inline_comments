{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NTk1NDMx", "number": 2066, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNjozNTowM1rOElcBTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDowODoyOVrOEqqGfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NjkxODU0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/course/dashboards/instructor-course-dashboard/instructor-course-dashboard.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxNjozNTowM1rOHU7g0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMToyMzo0NFrOHVLQKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwODYyNw==", "bodyText": "</a> split over 2 lines", "url": "https://github.com/ls1intum/Artemis/pull/2066#discussion_r491708627", "createdAt": "2020-09-20T16:35:03Z", "author": {"login": "linusmichel"}, "path": "src/main/webapp/app/course/dashboards/instructor-course-dashboard/instructor-course-dashboard.component.html", "diffHunk": "@@ -47,6 +47,11 @@ <h4 class=\"card-title\">{{ 'artemisApp.instructorCourseDashboard.informationAbout\n                                     <b>{{ 'artemisApp.instructorCourseDashboard.yourAssessmentLocks' | translate }}:</b> {{ stats.numberOfAssessmentLocks }}\n                                 </a>\n                             </li>\n+                            <li>\n+                                <a [routerLink]=\"['/course-management', course.id, 'ratings']\">\n+                                    <b>{{ 'artemisApp.instructorCourseDashboard.rating' | translate }}</b></a\n+                                >", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5031dc73ec7e49db7f8058e0d7f52a80aa4b9602"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk2NjUwNg==", "bodyText": "fixed it", "url": "https://github.com/ls1intum/Artemis/pull/2066#discussion_r491966506", "createdAt": "2020-09-21T11:23:44Z", "author": {"login": "JonasPetry"}, "path": "src/main/webapp/app/course/dashboards/instructor-course-dashboard/instructor-course-dashboard.component.html", "diffHunk": "@@ -47,6 +47,11 @@ <h4 class=\"card-title\">{{ 'artemisApp.instructorCourseDashboard.informationAbout\n                                     <b>{{ 'artemisApp.instructorCourseDashboard.yourAssessmentLocks' | translate }}:</b> {{ stats.numberOfAssessmentLocks }}\n                                 </a>\n                             </li>\n+                            <li>\n+                                <a [routerLink]=\"['/course-management', course.id, 'ratings']\">\n+                                    <b>{{ 'artemisApp.instructorCourseDashboard.rating' | translate }}</b></a\n+                                >", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwODYyNw=="}, "originalCommit": {"oid": "5031dc73ec7e49db7f8058e0d7f52a80aa4b9602"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODcxOTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/repository/RatingRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNTo0NjoyMFrOHcjHxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoxNDo1NVrOHcmZCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5NzYwNg==", "bodyText": "Shouldn\u00b4t this be called findAllByCourse_Id?", "url": "https://github.com/ls1intum/Artemis/pull/2066#discussion_r499697606", "createdAt": "2020-10-05T15:46:20Z", "author": {"login": "balazs-czopf"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/RatingRepository.java", "diffHunk": "@@ -26,4 +27,6 @@\n      * @param resultId the Id of the result where the rating should be deleted\n      */\n     void deleteByResult_Id(long resultId);\n+\n+    List<Rating> findAllByResult_Participation_Exercise_Course_Id(Long courseId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c08a39a35e6ead303e6fc6fcada725b54f31faf"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1MTE3Ng==", "bodyText": "No, this is a native hibernate query.", "url": "https://github.com/ls1intum/Artemis/pull/2066#discussion_r499751176", "createdAt": "2020-10-05T17:14:55Z", "author": {"login": "JonasPetry"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/RatingRepository.java", "diffHunk": "@@ -26,4 +27,6 @@\n      * @param resultId the Id of the result where the rating should be deleted\n      */\n     void deleteByResult_Id(long resultId);\n+\n+    List<Rating> findAllByResult_Participation_Exercise_Course_Id(Long courseId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5NzYwNg=="}, "originalCommit": {"oid": "6c08a39a35e6ead303e6fc6fcada725b54f31faf"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODc5MDI5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/entities/feedback.model.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjowMzoyNFrOHcj0ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoyNjo1NVrOHcmzaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcwOTExNA==", "bodyText": "I guess you shouldn\u00b4t use null as type annotation here since @krusche removed that in #2135. In TypeScript rather use undefined which is implied by the question mark.", "url": "https://github.com/ls1intum/Artemis/pull/2066#discussion_r499709114", "createdAt": "2020-10-05T16:03:24Z", "author": {"login": "balazs-czopf"}, "path": "src/main/webapp/app/entities/feedback.model.ts", "diffHunk": "@@ -25,7 +25,7 @@ export class Feedback implements BaseEntity {\n     public gradingInstruction?: GradingInstruction;\n     public text?: string;\n     public detailText?: string;\n-    public reference?: string;\n+    public reference?: string | null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c08a39a35e6ead303e6fc6fcada725b54f31faf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1NzkyOQ==", "bodyText": "Done", "url": "https://github.com/ls1intum/Artemis/pull/2066#discussion_r499757929", "createdAt": "2020-10-05T17:26:55Z", "author": {"login": "JonasPetry"}, "path": "src/main/webapp/app/entities/feedback.model.ts", "diffHunk": "@@ -25,7 +25,7 @@ export class Feedback implements BaseEntity {\n     public gradingInstruction?: GradingInstruction;\n     public text?: string;\n     public detailText?: string;\n-    public reference?: string;\n+    public reference?: string | null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcwOTExNA=="}, "originalCommit": {"oid": "6c08a39a35e6ead303e6fc6fcada725b54f31faf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTY1NDE4OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/RatingResourceIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDowODoyNVrOHc_Paw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDowODoyNVrOHc_Paw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE1ODMxNQ==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'testGetRatingForInstructorDashboard_asTutor_FORBIDDEN' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2066#discussion_r500158315", "createdAt": "2020-10-06T10:08:25Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/RatingResourceIntegrationTest.java", "diffHunk": "@@ -162,4 +170,32 @@ public void testUpdateRating_asTutor_FORBIDDEN() throws Exception {\n         Rating updatedRating = ratingService.findRatingByResultId(savedRating.getResult().getId()).get();\n         assertThat(updatedRating.getRating()).isNotEqualTo(5);\n     }\n+\n+    @Test\n+    @WithMockUser(value = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void testGetRatingForInstructorDashboard_asInstructor() throws Exception {\n+        Rating savedRating = ratingService.saveRating(result.getId(), rating.getRating());\n+        final var ratings = request.getList(\"/api/course/\" + course.getId() + \"/rating\", HttpStatus.OK, Rating.class);\n+\n+        assertThat(ratings.size()).isEqualTo(1);\n+        assertThat(ratings.get(0).getId()).isEqualTo(savedRating.getId());\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"tutor1\", roles = \"TA\")\n+    public void testGetRatingForInstructorDashboard_asTutor_FORBIDDEN() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "577e0cb7bea459cb1d8183d633c43a8a6fb5ea2f"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTY1NDIyOnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/RatingResourceIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDowODoyNlrOHc_PdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDowODoyNlrOHc_PdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE1ODMyNA==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'testGetRatingForInstructorDashboard_asInstructor_FORBIDDEN' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2066#discussion_r500158324", "createdAt": "2020-10-06T10:08:26Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/RatingResourceIntegrationTest.java", "diffHunk": "@@ -162,4 +170,32 @@ public void testUpdateRating_asTutor_FORBIDDEN() throws Exception {\n         Rating updatedRating = ratingService.findRatingByResultId(savedRating.getResult().getId()).get();\n         assertThat(updatedRating.getRating()).isNotEqualTo(5);\n     }\n+\n+    @Test\n+    @WithMockUser(value = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void testGetRatingForInstructorDashboard_asInstructor() throws Exception {\n+        Rating savedRating = ratingService.saveRating(result.getId(), rating.getRating());\n+        final var ratings = request.getList(\"/api/course/\" + course.getId() + \"/rating\", HttpStatus.OK, Rating.class);\n+\n+        assertThat(ratings.size()).isEqualTo(1);\n+        assertThat(ratings.get(0).getId()).isEqualTo(savedRating.getId());\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"tutor1\", roles = \"TA\")\n+    public void testGetRatingForInstructorDashboard_asTutor_FORBIDDEN() throws Exception {\n+        request.getList(\"/api/course/\" + course.getId() + \"/rating\", HttpStatus.FORBIDDEN, Rating.class);\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"student1\", roles = \"USER\")\n+    public void testGetRatingForInstructorDashboard_asStudent_FORBIDDEN() throws Exception {\n+        request.getList(\"/api/course/\" + course.getId() + \"/rating\", HttpStatus.FORBIDDEN, Rating.class);\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"instructor2\", roles = \"INSTRUCTOR\")\n+    public void testGetRatingForInstructorDashboard_asInstructor_FORBIDDEN() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "577e0cb7bea459cb1d8183d633c43a8a6fb5ea2f"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTY1NDI5OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/RatingResourceIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDowODoyN1rOHc_PfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDowODoyN1rOHc_PfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE1ODMzMw==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'testGetRatingForInstructorDashboard_asStudent_FORBIDDEN' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2066#discussion_r500158333", "createdAt": "2020-10-06T10:08:27Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/RatingResourceIntegrationTest.java", "diffHunk": "@@ -162,4 +170,32 @@ public void testUpdateRating_asTutor_FORBIDDEN() throws Exception {\n         Rating updatedRating = ratingService.findRatingByResultId(savedRating.getResult().getId()).get();\n         assertThat(updatedRating.getRating()).isNotEqualTo(5);\n     }\n+\n+    @Test\n+    @WithMockUser(value = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void testGetRatingForInstructorDashboard_asInstructor() throws Exception {\n+        Rating savedRating = ratingService.saveRating(result.getId(), rating.getRating());\n+        final var ratings = request.getList(\"/api/course/\" + course.getId() + \"/rating\", HttpStatus.OK, Rating.class);\n+\n+        assertThat(ratings.size()).isEqualTo(1);\n+        assertThat(ratings.get(0).getId()).isEqualTo(savedRating.getId());\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"tutor1\", roles = \"TA\")\n+    public void testGetRatingForInstructorDashboard_asTutor_FORBIDDEN() throws Exception {\n+        request.getList(\"/api/course/\" + course.getId() + \"/rating\", HttpStatus.FORBIDDEN, Rating.class);\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"student1\", roles = \"USER\")\n+    public void testGetRatingForInstructorDashboard_asStudent_FORBIDDEN() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "577e0cb7bea459cb1d8183d633c43a8a6fb5ea2f"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTY1NDMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/repository/RatingRepository.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDowODoyOFrOHc_PiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDowODoyOFrOHc_PiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE1ODM0NQ==", "bodyText": "Codacy found an issue: The instance method name 'findAllByResult_Participation_Exercise_Course_Id' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2066#discussion_r500158345", "createdAt": "2020-10-06T10:08:28Z", "author": {"login": "artemis-bot"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/RatingRepository.java", "diffHunk": "@@ -26,4 +27,6 @@\n      * @param resultId the Id of the result where the rating should be deleted\n      */\n     void deleteByResult_Id(long resultId);\n+\n+    List<Rating> findAllByResult_Participation_Exercise_Course_Id(Long courseId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "577e0cb7bea459cb1d8183d633c43a8a6fb5ea2f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTY1NDM4OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/RatingResourceIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDowODoyOVrOHc_Pkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDowODoyOVrOHc_Pkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE1ODM1NQ==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'testGetRatingForInstructorDashboard_asInstructor' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2066#discussion_r500158355", "createdAt": "2020-10-06T10:08:29Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/RatingResourceIntegrationTest.java", "diffHunk": "@@ -162,4 +170,32 @@ public void testUpdateRating_asTutor_FORBIDDEN() throws Exception {\n         Rating updatedRating = ratingService.findRatingByResultId(savedRating.getResult().getId()).get();\n         assertThat(updatedRating.getRating()).isNotEqualTo(5);\n     }\n+\n+    @Test\n+    @WithMockUser(value = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void testGetRatingForInstructorDashboard_asInstructor() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "577e0cb7bea459cb1d8183d633c43a8a6fb5ea2f"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4655, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}