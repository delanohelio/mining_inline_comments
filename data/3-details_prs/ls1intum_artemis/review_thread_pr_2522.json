{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0Njk4MzUx", "number": 2522, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTowNjoxN1rOFGWfAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTowOTo1NlrOFGWk4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjA0MTYyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/manage/services/programming-exercise.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTowNjoxN1rOIHUwkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTozNjozM1rOIHaMzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU1MTA1Nw==", "bodyText": "The title is a bit confusing, maybe you can use checkPlagiarismJplagReport instead?", "url": "https://github.com/ls1intum/Artemis/pull/2522#discussion_r544551057", "createdAt": "2020-12-16T19:06:17Z", "author": {"login": "anditurdiu"}, "path": "src/main/webapp/app/exercises/programming/manage/services/programming-exercise.service.ts", "diffHunk": "@@ -48,12 +49,25 @@ export class ProgrammingExerciseService {\n         return this.http.put<string>(this.resourceUrl + '/' + exerciseId + '/generate-tests', { responseType: 'text' });\n     }\n \n+    /**\n+     * Check plagiarism with JPlag\n+     *\n+     * @param exerciseId\n+     */\n+    checkPlagiarism(exerciseId: number): Observable<TextPlagiarismResult> {\n+        return this.http\n+            .get<TextPlagiarismResult>(`${this.resourceUrl}/${exerciseId}/check-plagiarism`, {\n+                observe: 'response',\n+            })\n+            .pipe(map((response: HttpResponse<TextPlagiarismResult>) => response.body!));\n+    }\n+\n     /**\n      * Check for plagiarism\n      * @param exerciseId of the programming exercise\n      */\n-    checkPlagiarism(exerciseId: number): Observable<HttpResponse<Blob>> {\n-        return this.http.get(`${this.resourceUrl}/${exerciseId}/check-plagiarism`, {\n+    checkPlagiarismJPlagResponse(exerciseId: number): Observable<HttpResponse<Blob>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "130d224df199540d3c4c7764a253b06d6c1d246f"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0MDIwNQ==", "bodyText": "Good point, I actually intended to call it checkPlagiarismJplagReport but was probably a little distracted writing this \ud83d\ude04", "url": "https://github.com/ls1intum/Artemis/pull/2522#discussion_r544640205", "createdAt": "2020-12-16T21:36:33Z", "author": {"login": "philippbauch"}, "path": "src/main/webapp/app/exercises/programming/manage/services/programming-exercise.service.ts", "diffHunk": "@@ -48,12 +49,25 @@ export class ProgrammingExerciseService {\n         return this.http.put<string>(this.resourceUrl + '/' + exerciseId + '/generate-tests', { responseType: 'text' });\n     }\n \n+    /**\n+     * Check plagiarism with JPlag\n+     *\n+     * @param exerciseId\n+     */\n+    checkPlagiarism(exerciseId: number): Observable<TextPlagiarismResult> {\n+        return this.http\n+            .get<TextPlagiarismResult>(`${this.resourceUrl}/${exerciseId}/check-plagiarism`, {\n+                observe: 'response',\n+            })\n+            .pipe(map((response: HttpResponse<TextPlagiarismResult>) => response.body!));\n+    }\n+\n     /**\n      * Check for plagiarism\n      * @param exerciseId of the programming exercise\n      */\n-    checkPlagiarism(exerciseId: number): Observable<HttpResponse<Blob>> {\n-        return this.http.get(`${this.resourceUrl}/${exerciseId}/check-plagiarism`, {\n+    checkPlagiarismJPlagResponse(exerciseId: number): Observable<HttpResponse<Blob>> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU1MTA1Nw=="}, "originalCommit": {"oid": "130d224df199540d3c4c7764a253b06d6c1d246f"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjA1NjIyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/plagiarism-split-view.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTowOTo0OFrOIHU5OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTo1MToyOFrOIHatfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU1MzI3Mg==", "bodyText": "It is better if you don't call methods directly from the HTML because it will continuously trigger the function. You can achieve better performance if you store them as attributes in the component.", "url": "https://github.com/ls1intum/Artemis/pull/2522#discussion_r544553272", "createdAt": "2020-12-16T19:09:48Z", "author": {"login": "anditurdiu"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/plagiarism-split-view.component.html", "diffHunk": "@@ -1,25 +1,17 @@\n <div class=\"plagiarism-split-view\">\n     <div class=\"plagiarism-split-pane\" jhiPane>\n-        <div class=\"plagiarism-split-pane-header\">\n-            {{ comparison.submissionA.studentLogin || ('artemisApp.plagiarism.unknown-student' | translate) }}\n-        </div>\n+        <jhi-modeling-submission-viewer *ngIf=\"isModelingExercise()\" [exercise]=\"exercise\" [plagiarismSubmission]=\"getModelingSubmissionA()\"></jhi-modeling-submission-viewer>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "130d224df199540d3c4c7764a253b06d6c1d246f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0ODU3Mw==", "bodyText": "I updated the calls to isModelingExercise() etc. to be attributes of the components instead.\nBut I still call getModelingSubmissionA() etc. in the template as this method is just a typecast and I don't know how to do it in the template directly.", "url": "https://github.com/ls1intum/Artemis/pull/2522#discussion_r544648573", "createdAt": "2020-12-16T21:51:28Z", "author": {"login": "philippbauch"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/plagiarism-split-view.component.html", "diffHunk": "@@ -1,25 +1,17 @@\n <div class=\"plagiarism-split-view\">\n     <div class=\"plagiarism-split-pane\" jhiPane>\n-        <div class=\"plagiarism-split-pane-header\">\n-            {{ comparison.submissionA.studentLogin || ('artemisApp.plagiarism.unknown-student' | translate) }}\n-        </div>\n+        <jhi-modeling-submission-viewer *ngIf=\"isModelingExercise()\" [exercise]=\"exercise\" [plagiarismSubmission]=\"getModelingSubmissionA()\"></jhi-modeling-submission-viewer>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU1MzI3Mg=="}, "originalCommit": {"oid": "130d224df199540d3c4c7764a253b06d6c1d246f"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjA1NjY0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/plagiarism-split-view.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTowOTo1NlrOIHU5fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTowOTo1NlrOIHU5fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU1MzM0Mw==", "bodyText": "here also", "url": "https://github.com/ls1intum/Artemis/pull/2522#discussion_r544553343", "createdAt": "2020-12-16T19:09:56Z", "author": {"login": "anditurdiu"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/plagiarism-split-view.component.html", "diffHunk": "@@ -1,25 +1,17 @@\n <div class=\"plagiarism-split-view\">\n     <div class=\"plagiarism-split-pane\" jhiPane>\n-        <div class=\"plagiarism-split-pane-header\">\n-            {{ comparison.submissionA.studentLogin || ('artemisApp.plagiarism.unknown-student' | translate) }}\n-        </div>\n+        <jhi-modeling-submission-viewer *ngIf=\"isModelingExercise()\" [exercise]=\"exercise\" [plagiarismSubmission]=\"getModelingSubmissionA()\"></jhi-modeling-submission-viewer>\n \n-        <div class=\"plagiarism-split-pane-body\">\n-            <jhi-modeling-submission-viewer *ngIf=\"isModelingExercise()\" [exercise]=\"exercise\" [plagiarismSubmission]=\"getModelingSubmissionA()\"></jhi-modeling-submission-viewer>\n+        <jhi-text-submission-viewer *ngIf=\"isTextExercise()\" [exercise]=\"exercise\" [plagiarismSubmission]=\"getTextSubmissionA()\"></jhi-text-submission-viewer>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "130d224df199540d3c4c7764a253b06d6c1d246f"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4320, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}