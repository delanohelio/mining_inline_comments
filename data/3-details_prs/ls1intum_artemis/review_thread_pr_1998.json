{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMzU5NDAw", "number": 1998, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNToxMjoyMFrOEVdQpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODoxODo0NVrOEVuCOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTM0OTQ5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/shared/util/download.util.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNToxMjoyMFrOG8ONcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNToxMjoyMFrOG8ONcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgwMDU2MQ==", "bodyText": "@krusche I refactored your new method in #1995 and what was used in quiz-exercise.service.ts here as this is duplicate. This here drops the $window argument though.", "url": "https://github.com/ls1intum/Artemis/pull/1998#discussion_r465800561", "createdAt": "2020-08-05T15:12:20Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/shared/util/download.util.ts", "diffHunk": "@@ -0,0 +1,32 @@\n+import { HttpResponse } from '@angular/common/http';\n+\n+export function downloadZipFileFromResponse(response: HttpResponse<Blob>): void {\n+    if (response.body) {\n+        const file = new Blob([response.body], { type: 'application/zip' });\n+        downloadFile(file, response.headers.get('filename')!);\n+    }\n+}\n+\n+/**\n+ * Make a file of given blob and allows user to download it from the browser.\n+ * @param blob data to be written in file.\n+ * @param filename suggested to the browser.\n+ */\n+export function downloadFile(blob: Blob, filename: string) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61024c0f75b79877e61f662e48408996cc01dc96"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTk2NjI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/plagiarism/text/TextPlagiarismDetectionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzo0NDo1OFrOG8nJXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzo0NDo1OFrOG8nJXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwOTExOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Convenience method of extract all latest submissions from a TextExercise and compute pair-wise distancse.\n          \n          \n            \n                 * Convenience method to extract all latest submissions from a TextExercise and compute pair-wise distances.", "url": "https://github.com/ls1intum/Artemis/pull/1998#discussion_r466209119", "createdAt": "2020-08-06T07:44:58Z", "author": {"login": "JonasPetry"}, "path": "src/main/java/de/tum/in/www1/artemis/service/plagiarism/text/TextPlagiarismDetectionService.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package de.tum.in.www1.artemis.service.plagiarism.text;\n+\n+import static java.util.stream.Collectors.toUnmodifiableList;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.TextExercise;\n+import de.tum.in.www1.artemis.domain.TextSubmission;\n+import de.tum.in.www1.artemis.domain.participation.Participation;\n+\n+@Service\n+public class TextPlagiarismDetectionService {\n+\n+    /**\n+     * Convenience method of extract all latest submissions from a TextExercise and compute pair-wise distancse.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61024c0f75b79877e61f662e48408996cc01dc96"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjAyOTAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/plagiarism/text/TextPlagiarismDetectionService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODowMDoxNFrOG8nuCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzoyNDoyOVrOG8zWCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIxODUwNw==", "bodyText": "Iterating like that, items are only compared to items behind them in the list.\nIf there are submissions [a,b,c] and let's say a & c are identical, a would receive a low distance score and c would not be evaluated at all. Is this intended? If yes, I would indicate that somewhere in the documentation.", "url": "https://github.com/ls1intum/Artemis/pull/1998#discussion_r466218507", "createdAt": "2020-08-06T08:00:14Z", "author": {"login": "JonasPetry"}, "path": "src/main/java/de/tum/in/www1/artemis/service/plagiarism/text/TextPlagiarismDetectionService.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package de.tum.in.www1.artemis.service.plagiarism.text;\n+\n+import static java.util.stream.Collectors.toUnmodifiableList;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.TextExercise;\n+import de.tum.in.www1.artemis.domain.TextSubmission;\n+import de.tum.in.www1.artemis.domain.participation.Participation;\n+\n+@Service\n+public class TextPlagiarismDetectionService {\n+\n+    /**\n+     * Convenience method of extract all latest submissions from a TextExercise and compute pair-wise distancse.\n+     *\n+     * @param exerciseWithParticipationsAndSubmissions Text Exercise with fetched participations and submissions\n+     * @param comparisionStrategy TextComparisionStrategy\n+     * @return Map of text submission pairs and distance score\n+     */\n+    public Map<Set<TextSubmission>, Double> compareSubmissionsForExerciseWithStrategy(TextExercise exerciseWithParticipationsAndSubmissions,\n+            TextComparisionStrategy comparisionStrategy) {\n+        final List<TextSubmission> textSubmissions = textSubmissionsForComparison(exerciseWithParticipationsAndSubmissions);\n+        return compareSubmissionsForExerciseWithStrategy(textSubmissions, comparisionStrategy);\n+    }\n+\n+    /**\n+     * Pairwise comparision of text submissions using a TextComparisionStrategy\n+     *\n+     * @param textSubmissions List of text submissions\n+     * @param comparisionStrategy TextComparisionStrategy\n+     * @return Map of text submission pairs and distance score\n+     */\n+    public Map<Set<TextSubmission>, Double> compareSubmissionsForExerciseWithStrategy(List<TextSubmission> textSubmissions, TextComparisionStrategy comparisionStrategy) {\n+        final Map<Set<TextSubmission>, Double> map = new HashMap<>();\n+\n+        for (int i = 0; i < textSubmissions.size(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61024c0f75b79877e61f662e48408996cc01dc96"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwODk2OA==", "bodyText": "The idea behind the loop is to only compare each pair once.\nfor a,b,c we will compare a & b, a & c, and b & c.\nOn purpose, this leaves out a & a, b & a, b & b, c & a, c & b, and c & c.", "url": "https://github.com/ls1intum/Artemis/pull/1998#discussion_r466408968", "createdAt": "2020-08-06T13:24:29Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/service/plagiarism/text/TextPlagiarismDetectionService.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package de.tum.in.www1.artemis.service.plagiarism.text;\n+\n+import static java.util.stream.Collectors.toUnmodifiableList;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.TextExercise;\n+import de.tum.in.www1.artemis.domain.TextSubmission;\n+import de.tum.in.www1.artemis.domain.participation.Participation;\n+\n+@Service\n+public class TextPlagiarismDetectionService {\n+\n+    /**\n+     * Convenience method of extract all latest submissions from a TextExercise and compute pair-wise distancse.\n+     *\n+     * @param exerciseWithParticipationsAndSubmissions Text Exercise with fetched participations and submissions\n+     * @param comparisionStrategy TextComparisionStrategy\n+     * @return Map of text submission pairs and distance score\n+     */\n+    public Map<Set<TextSubmission>, Double> compareSubmissionsForExerciseWithStrategy(TextExercise exerciseWithParticipationsAndSubmissions,\n+            TextComparisionStrategy comparisionStrategy) {\n+        final List<TextSubmission> textSubmissions = textSubmissionsForComparison(exerciseWithParticipationsAndSubmissions);\n+        return compareSubmissionsForExerciseWithStrategy(textSubmissions, comparisionStrategy);\n+    }\n+\n+    /**\n+     * Pairwise comparision of text submissions using a TextComparisionStrategy\n+     *\n+     * @param textSubmissions List of text submissions\n+     * @param comparisionStrategy TextComparisionStrategy\n+     * @return Map of text submission pairs and distance score\n+     */\n+    public Map<Set<TextSubmission>, Double> compareSubmissionsForExerciseWithStrategy(List<TextSubmission> textSubmissions, TextComparisionStrategy comparisionStrategy) {\n+        final Map<Set<TextSubmission>, Double> map = new HashMap<>();\n+\n+        for (int i = 0; i < textSubmissions.size(); i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIxODUwNw=="}, "originalCommit": {"oid": "61024c0f75b79877e61f662e48408996cc01dc96"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjA2MjU1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise-detail.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODowODo1OVrOG8oCLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODowODo1OVrOG8oCLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyMzY2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        downloadFile(blob, `check-plagiarism-${this.textExercise.id}.json`);\n          \n          \n            \n                        downloadFile(blob, `check-plagiarism-textExercise_${this.textExercise.id}.json`);", "url": "https://github.com/ls1intum/Artemis/pull/1998#discussion_r466223662", "createdAt": "2020-08-06T08:08:59Z", "author": {"login": "JonasPetry"}, "path": "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise-detail.component.ts", "diffHunk": "@@ -106,4 +111,60 @@ export class TextExerciseDetailComponent implements OnInit, OnDestroy {\n     registerChangeInTextExercises() {\n         this.eventSubscriber = this.eventManager.subscribe('textExerciseListModification', () => this.load(this.textExercise.id));\n     }\n+\n+    checkPlagiarismJson() {\n+        this.checkPlagiarism((data) => {\n+            const json = JSON.stringify(data);\n+            const blob = new Blob([json], { type: 'application/json' });\n+            downloadFile(blob, `check-plagiarism-${this.textExercise.id}.json`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61024c0f75b79877e61f662e48408996cc01dc96"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjA2NDU4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise-detail.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODowOTozNlrOG8oDcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODowOTozNlrOG8oDcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyMzk4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                title: `Plagiarism Check for Exercise ${this.textExercise.id}: ${this.textExercise.title}`,\n          \n          \n            \n                                title: `Plagiarism Check for Text Exercise ${this.textExercise.id}: ${this.textExercise.title}`,", "url": "https://github.com/ls1intum/Artemis/pull/1998#discussion_r466223987", "createdAt": "2020-08-06T08:09:36Z", "author": {"login": "JonasPetry"}, "path": "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise-detail.component.ts", "diffHunk": "@@ -106,4 +111,60 @@ export class TextExerciseDetailComponent implements OnInit, OnDestroy {\n     registerChangeInTextExercises() {\n         this.eventSubscriber = this.eventManager.subscribe('textExerciseListModification', () => this.load(this.textExercise.id));\n     }\n+\n+    checkPlagiarismJson() {\n+        this.checkPlagiarism((data) => {\n+            const json = JSON.stringify(data);\n+            const blob = new Blob([json], { type: 'application/json' });\n+            downloadFile(blob, `check-plagiarism-${this.textExercise.id}.json`);\n+        });\n+    }\n+\n+    checkPlagiarismCsv() {\n+        this.checkPlagiarism((data) => {\n+            if (data.length > 0) {\n+                const csvExporter = new ExportToCsv({\n+                    fieldSeparator: ';',\n+                    quoteStrings: '\"',\n+                    decimalSeparator: 'locale',\n+                    showLabels: true,\n+                    title: `Plagiarism Check for Exercise ${this.textExercise.id}: ${this.textExercise.title}`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61024c0f75b79877e61f662e48408996cc01dc96"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjA2NTg2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise-detail.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODowOTo1NVrOG8oEKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODowOTo1NVrOG8oEKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyNDE3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                filename: `check-plagiarism-${this.textExercise.id}`,\n          \n          \n            \n                                filename: `check-plagiarism-textExercise_${this.textExercise.id}`,", "url": "https://github.com/ls1intum/Artemis/pull/1998#discussion_r466224170", "createdAt": "2020-08-06T08:09:55Z", "author": {"login": "JonasPetry"}, "path": "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise-detail.component.ts", "diffHunk": "@@ -106,4 +111,60 @@ export class TextExerciseDetailComponent implements OnInit, OnDestroy {\n     registerChangeInTextExercises() {\n         this.eventSubscriber = this.eventManager.subscribe('textExerciseListModification', () => this.load(this.textExercise.id));\n     }\n+\n+    checkPlagiarismJson() {\n+        this.checkPlagiarism((data) => {\n+            const json = JSON.stringify(data);\n+            const blob = new Blob([json], { type: 'application/json' });\n+            downloadFile(blob, `check-plagiarism-${this.textExercise.id}.json`);\n+        });\n+    }\n+\n+    checkPlagiarismCsv() {\n+        this.checkPlagiarism((data) => {\n+            if (data.length > 0) {\n+                const csvExporter = new ExportToCsv({\n+                    fieldSeparator: ';',\n+                    quoteStrings: '\"',\n+                    decimalSeparator: 'locale',\n+                    showLabels: true,\n+                    title: `Plagiarism Check for Exercise ${this.textExercise.id}: ${this.textExercise.title}`,\n+                    filename: `check-plagiarism-${this.textExercise.id}`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61024c0f75b79877e61f662e48408996cc01dc96"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjA5Nzg1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise-detail.component.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwODoxODo0NVrOG8oX3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzoyNDo0N1rOG8zW4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyOTIxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            const fullname = (student: User): string => `${student.firstName || ''} ${student.lastName || ''}`;\n          \n          \n            \n                            const fullname = (student: User): string => `${student.firstName || ''}${' ' + student.lastName || ''}`;", "url": "https://github.com/ls1intum/Artemis/pull/1998#discussion_r466229213", "createdAt": "2020-08-06T08:18:45Z", "author": {"login": "JonasPetry"}, "path": "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise-detail.component.ts", "diffHunk": "@@ -106,4 +111,60 @@ export class TextExerciseDetailComponent implements OnInit, OnDestroy {\n     registerChangeInTextExercises() {\n         this.eventSubscriber = this.eventManager.subscribe('textExerciseListModification', () => this.load(this.textExercise.id));\n     }\n+\n+    checkPlagiarismJson() {\n+        this.checkPlagiarism((data) => {\n+            const json = JSON.stringify(data);\n+            const blob = new Blob([json], { type: 'application/json' });\n+            downloadFile(blob, `check-plagiarism-${this.textExercise.id}.json`);\n+        });\n+    }\n+\n+    checkPlagiarismCsv() {\n+        this.checkPlagiarism((data) => {\n+            if (data.length > 0) {\n+                const csvExporter = new ExportToCsv({\n+                    fieldSeparator: ';',\n+                    quoteStrings: '\"',\n+                    decimalSeparator: 'locale',\n+                    showLabels: true,\n+                    title: `Plagiarism Check for Exercise ${this.textExercise.id}: ${this.textExercise.title}`,\n+                    filename: `check-plagiarism-${this.textExercise.id}`,\n+                    useTextFile: false,\n+                    useBom: true,\n+                    headers: ['Student A', 'Submission A', 'Student B', 'Submission B', ...Object.keys(data[0].distanceMetrics)],\n+                });\n+\n+                const fullname = (student: User): string => `${student.firstName || ''} ${student.lastName || ''}`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61024c0f75b79877e61f662e48408996cc01dc96"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwNjkwMA==", "bodyText": "Is this solving trailing spaces? Otherwise, we could also call .trim().", "url": "https://github.com/ls1intum/Artemis/pull/1998#discussion_r466406900", "createdAt": "2020-08-06T13:21:27Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise-detail.component.ts", "diffHunk": "@@ -106,4 +111,60 @@ export class TextExerciseDetailComponent implements OnInit, OnDestroy {\n     registerChangeInTextExercises() {\n         this.eventSubscriber = this.eventManager.subscribe('textExerciseListModification', () => this.load(this.textExercise.id));\n     }\n+\n+    checkPlagiarismJson() {\n+        this.checkPlagiarism((data) => {\n+            const json = JSON.stringify(data);\n+            const blob = new Blob([json], { type: 'application/json' });\n+            downloadFile(blob, `check-plagiarism-${this.textExercise.id}.json`);\n+        });\n+    }\n+\n+    checkPlagiarismCsv() {\n+        this.checkPlagiarism((data) => {\n+            if (data.length > 0) {\n+                const csvExporter = new ExportToCsv({\n+                    fieldSeparator: ';',\n+                    quoteStrings: '\"',\n+                    decimalSeparator: 'locale',\n+                    showLabels: true,\n+                    title: `Plagiarism Check for Exercise ${this.textExercise.id}: ${this.textExercise.title}`,\n+                    filename: `check-plagiarism-${this.textExercise.id}`,\n+                    useTextFile: false,\n+                    useBom: true,\n+                    headers: ['Student A', 'Submission A', 'Student B', 'Submission B', ...Object.keys(data[0].distanceMetrics)],\n+                });\n+\n+                const fullname = (student: User): string => `${student.firstName || ''} ${student.lastName || ''}`;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyOTIxMw=="}, "originalCommit": {"oid": "61024c0f75b79877e61f662e48408996cc01dc96"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwOTE4Ng==", "bodyText": "I think calling .trim() would work even better.", "url": "https://github.com/ls1intum/Artemis/pull/1998#discussion_r466409186", "createdAt": "2020-08-06T13:24:47Z", "author": {"login": "JonasPetry"}, "path": "src/main/webapp/app/exercises/text/manage/text-exercise/text-exercise-detail.component.ts", "diffHunk": "@@ -106,4 +111,60 @@ export class TextExerciseDetailComponent implements OnInit, OnDestroy {\n     registerChangeInTextExercises() {\n         this.eventSubscriber = this.eventManager.subscribe('textExerciseListModification', () => this.load(this.textExercise.id));\n     }\n+\n+    checkPlagiarismJson() {\n+        this.checkPlagiarism((data) => {\n+            const json = JSON.stringify(data);\n+            const blob = new Blob([json], { type: 'application/json' });\n+            downloadFile(blob, `check-plagiarism-${this.textExercise.id}.json`);\n+        });\n+    }\n+\n+    checkPlagiarismCsv() {\n+        this.checkPlagiarism((data) => {\n+            if (data.length > 0) {\n+                const csvExporter = new ExportToCsv({\n+                    fieldSeparator: ';',\n+                    quoteStrings: '\"',\n+                    decimalSeparator: 'locale',\n+                    showLabels: true,\n+                    title: `Plagiarism Check for Exercise ${this.textExercise.id}: ${this.textExercise.title}`,\n+                    filename: `check-plagiarism-${this.textExercise.id}`,\n+                    useTextFile: false,\n+                    useBom: true,\n+                    headers: ['Student A', 'Submission A', 'Student B', 'Submission B', ...Object.keys(data[0].distanceMetrics)],\n+                });\n+\n+                const fullname = (student: User): string => `${student.firstName || ''} ${student.lastName || ''}`;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIyOTIxMw=="}, "originalCommit": {"oid": "61024c0f75b79877e61f662e48408996cc01dc96"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4838, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}