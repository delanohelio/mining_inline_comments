{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyODc5NDk4", "number": 1234, "title": "Chore: Add tests for ResultResource", "bodyText": "Checklist\n\n Server: I added multiple integration tests (Spring) related to the features\n\nMotivation and Context\n\n\nThis PR increases the test coverage of the ResultResource class from 57%  to 91%. All REST endpoints are covered now.", "createdAt": "2020-02-09T22:06:17Z", "url": "https://github.com/ls1intum/Artemis/pull/1234", "merged": true, "mergeCommit": {"oid": "7b09250982a413b9fc2eb022b75f4aeb3f183089"}, "closed": true, "closedAt": "2020-02-18T23:18:52Z", "author": {"login": "maxr96"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcCtf3iAH2gAyMzcyODc5NDk4OjcyNzMxOTAyOWE5ZmZjNmUyZjg0NzQ3NWQ2NjgyNDBhYjIyNGRjNmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFqYoMgFqTM2MDc0NDA4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "727319029a9ffc6e2f847475d668240ab224dc6b", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/727319029a9ffc6e2f847475d668240ab224dc6b", "committedDate": "2020-02-09T19:14:28Z", "message": "Add test case for get result endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bef6dfd7a93985476b229085088837bd317b17f", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/4bef6dfd7a93985476b229085088837bd317b17f", "committedDate": "2020-02-09T20:11:05Z", "message": "Add test case for get latest result endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d2e5adb5c86c389e00a9fe9052a0d18bd61c71a", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/8d2e5adb5c86c389e00a9fe9052a0d18bd61c71a", "committedDate": "2020-02-09T20:53:19Z", "message": "Add test case for delete result endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a97d2e7bcc84b477e524a320775366704e40ccb", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/2a97d2e7bcc84b477e524a320775366704e40ccb", "committedDate": "2020-02-09T21:12:08Z", "message": "Add test case for get result for submission endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd437989d6fb8b22dfb81fa2a0e15825e2678426", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/dd437989d6fb8b22dfb81fa2a0e15825e2678426", "committedDate": "2020-02-09T21:39:06Z", "message": "Add test case for create example result endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1061568d064d257225cc2f23ceffdaf3ba29be0", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/e1061568d064d257225cc2f23ceffdaf3ba29be0", "committedDate": "2020-02-09T22:02:32Z", "message": "Add test case for create result for external submission endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2e0a76ed738120acc533b233f0015d0dad9d63f", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/a2e0a76ed738120acc533b233f0015d0dad9d63f", "committedDate": "2020-02-10T10:39:59Z", "message": "Additional test case for create result for external submission endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04a9313269f44ee5f85f2dfd04d5209e84205e33", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/04a9313269f44ee5f85f2dfd04d5209e84205e33", "committedDate": "2020-02-10T11:04:44Z", "message": "Simplified existing test cases for creating manual result for programming exercise"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1c706b10af45f6c13b9c28e16cb6fd018493fb2", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/a1c706b10af45f6c13b9c28e16cb6fd018493fb2", "committedDate": "2020-02-10T12:07:57Z", "message": "Add more test cases for create manual programming result endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "561c5f120dec552d32716bf7aa9fb65fdac668d0", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/561c5f120dec552d32716bf7aa9fb65fdac668d0", "committedDate": "2020-02-10T13:50:52Z", "message": "Add test case for create result for external submission due date not passed endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc1d780f1cf106707898a1e7e6631d05a640b3ef", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/dc1d780f1cf106707898a1e7e6631d05a640b3ef", "committedDate": "2020-02-10T15:31:50Z", "message": "Simplified test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bd37f73260057528f2dd92c712bb9f525491b63", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/5bd37f73260057528f2dd92c712bb9f525491b63", "committedDate": "2020-02-10T15:40:39Z", "message": "Merge branch 'develop' into chore/test-coverage/result-resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MjczNjEw", "url": "https://github.com/ls1intum/Artemis/pull/1234#pullrequestreview-356273610", "createdAt": "2020-02-10T21:24:05Z", "commit": {"oid": "5bd37f73260057528f2dd92c712bb9f525491b63"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MDE5MDMx", "url": "https://github.com/ls1intum/Artemis/pull/1234#pullrequestreview-357019031", "createdAt": "2020-02-11T21:44:42Z", "commit": {"oid": "5bd37f73260057528f2dd92c712bb9f525491b63"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMTo0NDo0MlrOFoaSFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMTo0NDo0MlrOFoaSFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkxNzk3NQ==", "bodyText": "wrong style, please use doReturn...when\nMake sure to check other tests before implementing something wrong", "url": "https://github.com/ls1intum/Artemis/pull/1234#discussion_r377917975", "createdAt": "2020-02-11T21:44:42Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/ResultServiceIntegrationTest.java", "diffHunk": "@@ -294,23 +289,66 @@ public void createManualProgrammingExerciseResult() throws Exception {\n         assertThat(response.getFeedbacks().size()).isEqualTo(result.getFeedbacks().size());\n     }\n \n+    @Test\n+    @WithMockUser(value = \"tutor1\", roles = \"TA\")\n+    public void createManualProgrammingExerciseResult_manualResultsNotAllowed() throws Exception {\n+        var participation = setParticipationForProgrammingExercise(AssessmentType.AUTOMATIC);\n+        Result result = ModelFactory.generateResult(true, 200).resultString(\"Good effort!\");\n+        List<Feedback> feedbacks = ModelFactory.generateFeedback().stream().peek(feedback -> feedback.setText(\"Good work here\")).collect(Collectors.toList());\n+        result.setFeedbacks(feedbacks);\n+        result.setParticipation(participation);\n+\n+        String dummyHash = \"9b3a9bd71a0d80e5bbc42204c319ed3d1d4f0d6d\";\n+        when(gitService.getLastCommitHash(ArgumentMatchers.any())).thenReturn(ObjectId.fromString(dummyHash));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bd37f73260057528f2dd92c712bb9f525491b63"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MDE5NDY1", "url": "https://github.com/ls1intum/Artemis/pull/1234#pullrequestreview-357019465", "createdAt": "2020-02-11T21:45:27Z", "commit": {"oid": "5bd37f73260057528f2dd92c712bb9f525491b63"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMTo0NToyN1rOFoaTaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMTo0NToyN1rOFoaTaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkxODMxNQ==", "bodyText": "if you mock this multiple times, please move it into the method\n@beforeeach\npublic void init() {}", "url": "https://github.com/ls1intum/Artemis/pull/1234#discussion_r377918315", "createdAt": "2020-02-11T21:45:27Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/ResultServiceIntegrationTest.java", "diffHunk": "@@ -294,23 +289,66 @@ public void createManualProgrammingExerciseResult() throws Exception {\n         assertThat(response.getFeedbacks().size()).isEqualTo(result.getFeedbacks().size());\n     }\n \n+    @Test\n+    @WithMockUser(value = \"tutor1\", roles = \"TA\")\n+    public void createManualProgrammingExerciseResult_manualResultsNotAllowed() throws Exception {\n+        var participation = setParticipationForProgrammingExercise(AssessmentType.AUTOMATIC);\n+        Result result = ModelFactory.generateResult(true, 200).resultString(\"Good effort!\");\n+        List<Feedback> feedbacks = ModelFactory.generateFeedback().stream().peek(feedback -> feedback.setText(\"Good work here\")).collect(Collectors.toList());\n+        result.setFeedbacks(feedbacks);\n+        result.setParticipation(participation);\n+\n+        String dummyHash = \"9b3a9bd71a0d80e5bbc42204c319ed3d1d4f0d6d\";\n+        when(gitService.getLastCommitHash(ArgumentMatchers.any())).thenReturn(ObjectId.fromString(dummyHash));\n+\n+        request.postWithResponseBody(\"/api/participations/\" + participation.getId() + \"/manual-results\", result, Result.class, HttpStatus.FORBIDDEN);\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"tutor1\", roles = \"TA\")\n+    public void createManualProgrammingExerciseResult_resultExists() throws Exception {\n+        var participation = setParticipationForProgrammingExercise(AssessmentType.SEMI_AUTOMATIC);\n+        Result result = ModelFactory.generateResult(true, 200).resultString(\"Good effort!\");\n+        List<Feedback> feedbacks = ModelFactory.generateFeedback().stream().peek(feedback -> feedback.setText(\"Good work here\")).collect(Collectors.toList());\n+        result.setFeedbacks(feedbacks);\n+        result.setParticipation(participation);\n+        result = resultRepository.save(result);\n+\n+        String dummyHash = \"9b3a9bd71a0d80e5bbc42204c319ed3d1d4f0d6d\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bd37f73260057528f2dd92c712bb9f525491b63"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MDE5NTQw", "url": "https://github.com/ls1intum/Artemis/pull/1234#pullrequestreview-357019540", "createdAt": "2020-02-11T21:45:35Z", "commit": {"oid": "5bd37f73260057528f2dd92c712bb9f525491b63"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMTo0NTozNlrOFoaTpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMTo0NTozNlrOFoaTpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkxODM3Mw==", "bodyText": "wrong style", "url": "https://github.com/ls1intum/Artemis/pull/1234#discussion_r377918373", "createdAt": "2020-02-11T21:45:36Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/ResultServiceIntegrationTest.java", "diffHunk": "@@ -294,23 +289,66 @@ public void createManualProgrammingExerciseResult() throws Exception {\n         assertThat(response.getFeedbacks().size()).isEqualTo(result.getFeedbacks().size());\n     }\n \n+    @Test\n+    @WithMockUser(value = \"tutor1\", roles = \"TA\")\n+    public void createManualProgrammingExerciseResult_manualResultsNotAllowed() throws Exception {\n+        var participation = setParticipationForProgrammingExercise(AssessmentType.AUTOMATIC);\n+        Result result = ModelFactory.generateResult(true, 200).resultString(\"Good effort!\");\n+        List<Feedback> feedbacks = ModelFactory.generateFeedback().stream().peek(feedback -> feedback.setText(\"Good work here\")).collect(Collectors.toList());\n+        result.setFeedbacks(feedbacks);\n+        result.setParticipation(participation);\n+\n+        String dummyHash = \"9b3a9bd71a0d80e5bbc42204c319ed3d1d4f0d6d\";\n+        when(gitService.getLastCommitHash(ArgumentMatchers.any())).thenReturn(ObjectId.fromString(dummyHash));\n+\n+        request.postWithResponseBody(\"/api/participations/\" + participation.getId() + \"/manual-results\", result, Result.class, HttpStatus.FORBIDDEN);\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"tutor1\", roles = \"TA\")\n+    public void createManualProgrammingExerciseResult_resultExists() throws Exception {\n+        var participation = setParticipationForProgrammingExercise(AssessmentType.SEMI_AUTOMATIC);\n+        Result result = ModelFactory.generateResult(true, 200).resultString(\"Good effort!\");\n+        List<Feedback> feedbacks = ModelFactory.generateFeedback().stream().peek(feedback -> feedback.setText(\"Good work here\")).collect(Collectors.toList());\n+        result.setFeedbacks(feedbacks);\n+        result.setParticipation(participation);\n+        result = resultRepository.save(result);\n+\n+        String dummyHash = \"9b3a9bd71a0d80e5bbc42204c319ed3d1d4f0d6d\";\n+        when(gitService.getLastCommitHash(ArgumentMatchers.any())).thenReturn(ObjectId.fromString(dummyHash));\n+\n+        request.postWithResponseBody(\"/api/participations/\" + participation.getId() + \"/manual-results\", result, Result.class, HttpStatus.BAD_REQUEST);\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"tutor1\", roles = \"TA\")\n+    public void createManualProgrammingExerciseResult_resultPropertyMissing() throws Exception {\n+        var participation = setParticipationForProgrammingExercise(AssessmentType.SEMI_AUTOMATIC);\n+        Result result = new Result();\n+\n+        String dummyHash = \"9b3a9bd71a0d80e5bbc42204c319ed3d1d4f0d6d\";\n+        when(gitService.getLastCommitHash(ArgumentMatchers.any())).thenReturn(ObjectId.fromString(dummyHash));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bd37f73260057528f2dd92c712bb9f525491b63"}, "originalPosition": 89}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74e4f681cfa53d49bdd8b01fda1e71c4b5e33d2c", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/74e4f681cfa53d49bdd8b01fda1e71c4b5e33d2c", "committedDate": "2020-02-17T19:14:00Z", "message": "Merge branch 'develop' into chore/test-coverage/result-resource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "267f5b10bf06c23083b099fc750edf6cdcf75e3b", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/267f5b10bf06c23083b099fc750edf6cdcf75e3b", "committedDate": "2020-02-17T20:48:33Z", "message": "Changes according to code review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ac5bc4c266ee28465825e24e13d26962770b395", "author": {"user": {"login": "maxr96", "name": null}}, "url": "https://github.com/ls1intum/Artemis/commit/7ac5bc4c266ee28465825e24e13d26962770b395", "committedDate": "2020-02-17T20:48:43Z", "message": "Merge remote-tracking branch 'origin/chore/test-coverage/result-resource' into chore/test-coverage/result-resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNzQ0MDgz", "url": "https://github.com/ls1intum/Artemis/pull/1234#pullrequestreview-360744083", "createdAt": "2020-02-18T23:18:37Z", "commit": {"oid": "7ac5bc4c266ee28465825e24e13d26962770b395"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3162, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}