{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5ODYxNjE3", "number": 2179, "title": "Support Petri Nets and Syntax Trees", "bodyText": "Checklist\n\n I tested all changes and all related features with different users (student, tutor, instructor, admin) on the test server https://artemistest.ase.in.tum.de.\n Server: I added multiple integration tests (Spring) related to the features (with a high test coverage)\n Server: I implemented the changes with a good performance and prevented too many database calls\n Server: I documented the Java code using JavaDoc style.\n #2168 got merged.\n\nMotivation and Context\nApollon supports petri nets and syntax trees with the new version 2.2.0, introduced in #2168.\nWe now want to add support for both types in Artemis as well.\nDescription\n\nAdded syntax tree and petri nets to the Artemis DiagramTypes\nAdded models for both types for the compass subsystem and added them to the compass JSON parser.\nAdded tests for those two compass models\n TODO: move JSON from text blocks into files, depends a bit on #2122.\n\nSteps for Testing\n\nReview the Code, at least the most important classes.\n\nDo this for both petri nets and syntax trees:\n\nCreate a modelling exercise for the new diagram type as instructor (preferred: with start, due and assessment due date).\nCheck that the example solution and example submission can be created\n(available when editing the newly created exercise)\nParticipate as a student, change your submission, within the due date.\nEverything should work as expected, no lost changes, no errors, ...\nPlay around with the diagram editor a bit as well.\nWait for due date to pass or set it\nLogged in as tutor, go to the tutor exercise dashboard for your new exercise.\nYou should see the grading instructions and the example solution.\nYou should then have to work on the example submission(s) first.\nNow you can assess the submission done earlier.\nCheck that assessment works and all elements and connections can be assessed with points and explanations.\nAs a student again, check your submission. You should not see the grading yet.\nAs instructor, check the exercise scores table (over course management) and take a look at the submission.\nYou should see the submission and assessment fully and correctly displayed.\nWait for the assessment due date or set it.\nLogged in as student, check your score and look at the assessment.\nYou should now see everything the instructor could see (apart from the assessor/tutor).\nI would be good if you have/generate more submissions with different similarity for the next step.\nOver course management, go to view exercise and then on check plagiarism.\nYou should now see some submissions compared to each other if they are similar.\nCheck that the reported similarity roughly matches your perceived similarity.\n\nTest Coverage\n\n\nde.tum.in.www1.artemis.service.compass.umlmodel.petrinet  - 83%\nde.tum.in.www1.artemis.service.compass.umlmodel.syntaxtree - 80%\nde.tum.in.www1.artemis.service.compass.controller - 95%\n\nScreenshots\nSyntax Tree\n\n\nPetri Net", "createdAt": "2020-10-08T11:45:07Z", "url": "https://github.com/ls1intum/Artemis/pull/2179", "merged": true, "mergeCommit": {"oid": "e2f3c1e5f354f86c9cc574c8d2c1e2de0f787ce1"}, "closed": true, "closedAt": "2020-10-13T21:23:07Z", "author": {"login": "MaisiKoleni"}, "timelineItems": {"totalCount": 46, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPx_AYAH2gAyNDk5ODYxNjE3OjE2YWQ3OWFiMmNkZmMwMzhjYmFlNDAwYzJiMmUwZGUxZmJkNTBjMTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSOuObAFqTUwNzgwOTQ2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "16ad79ab2cdfc038cbae400c2b2e0de1fbd50c15", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/16ad79ab2cdfc038cbae400c2b2e0de1fbd50c15", "committedDate": "2020-10-06T06:00:16Z", "message": "update apollon version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15c36d28418edd03e47a9b42df9716e3af191d09", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/15c36d28418edd03e47a9b42df9716e3af191d09", "committedDate": "2020-10-06T06:08:27Z", "message": "Merge branch 'develop' into feature/update-apollon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a94754fe6c6d6bf50d75581c96ba3dda628e3247", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/a94754fe6c6d6bf50d75581c96ba3dda628e3247", "committedDate": "2020-10-06T20:32:36Z", "message": "Merge branch 'develop' into feature/update-apollon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "827a8a46ce6bee5b768a78f22c1c7f3d2150a424", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/827a8a46ce6bee5b768a78f22c1c7f3d2150a424", "committedDate": "2020-10-06T21:21:10Z", "message": "update apollon version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ab0d2de8e9761e97fbbea5a289fbbb2e8230d21", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/9ab0d2de8e9761e97fbbea5a289fbbb2e8230d21", "committedDate": "2020-10-06T21:51:37Z", "message": "Merge branch 'develop' into feature/update-apollon-version-2.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c14cf41e7723d111798d6e2e182183830689a4a", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/9c14cf41e7723d111798d6e2e182183830689a4a", "committedDate": "2020-10-08T11:09:01Z", "message": "Merge branch 'develop' into feature/update-apollon-version-2.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cb9a50044c610994f288da244ecdf649a4a3b37", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/2cb9a50044c610994f288da244ecdf649a4a3b37", "committedDate": "2020-10-08T11:16:52Z", "message": "Add PetriNet and SyntaxTree diagram types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bfdb4c0df55d7b7ab13aaf8a6ce1d2e42a81c37", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/0bfdb4c0df55d7b7ab13aaf8a6ce1d2e42a81c37", "committedDate": "2020-10-08T11:17:52Z", "message": "Add PetriNet and SyntaxTree diagram type localization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25de9aae7f868c14603091020adc653117fff54e", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/25de9aae7f868c14603091020adc653117fff54e", "committedDate": "2020-10-08T11:18:53Z", "message": "Add PetriNet diagram type compass model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b02d104831ce050e8c7059b3f77d1757cdbc7d3", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/2b02d104831ce050e8c7059b3f77d1757cdbc7d3", "committedDate": "2020-10-08T11:19:22Z", "message": "Add SyntaxTree diagram type compass model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c66598d75c679c321ef5e9dafa9681bb1bce440a", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/c66598d75c679c321ef5e9dafa9681bb1bce440a", "committedDate": "2020-10-08T11:21:00Z", "message": "Support PetriNet and SyntaxTree diagram types in compass UMLModelParser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4175e89b415f0f4aa3dbe702254766e29577b64d", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/4175e89b415f0f4aa3dbe702254766e29577b64d", "committedDate": "2020-10-08T11:21:35Z", "message": "Add tests for PetriNet diagram type compass model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "382963be9b2390e4b466d8545090dba8016c439f", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/382963be9b2390e4b466d8545090dba8016c439f", "committedDate": "2020-10-08T11:21:55Z", "message": "Add tests for SyntaxTree diagram type compass model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6807bceb32a6bbb0d3c661a14fae81bef64b4dd", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/a6807bceb32a6bbb0d3c661a14fae81bef64b4dd", "committedDate": "2020-10-08T11:53:31Z", "message": "Add PetriNet and SyntaxTree diagram models in the Artemis client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fec4c0d6857558af4481f12f4e13667e4392021", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/8fec4c0d6857558af4481f12f4e13667e4392021", "committedDate": "2020-10-08T15:03:21Z", "message": "Add PetriNet and SyntaxTree diagram type to form selectors in the client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7289fc1d8139154ad9fcc2eed8d13932f2aa048b", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/7289fc1d8139154ad9fcc2eed8d13932f2aa048b", "committedDate": "2020-10-09T08:30:24Z", "message": "Merge branch 'develop' into feature/update-apollon-version-2.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70fb1fd97aa52dc9492930d84fbaa6e26f6140c0", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/70fb1fd97aa52dc9492930d84fbaa6e26f6140c0", "committedDate": "2020-10-09T18:34:40Z", "message": "update to apollon 2.2.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad3780d05342907d5b39c99f38fc785c6e6736d7", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/ad3780d05342907d5b39c99f38fc785c6e6736d7", "committedDate": "2020-10-09T19:03:29Z", "message": "Merge branch 'feature/update-apollon-version-2.2.0' into feature/petri-nets-and-syntax-trees"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76b29da98454e858842f063b2e6c3cb48308ef93", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/76b29da98454e858842f063b2e6c3cb48308ef93", "committedDate": "2020-10-13T09:27:30Z", "message": "Merge branch 'develop' into feature/update-apollon-version-2.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4892b3d0e818372c20ca04b3b6cb678fd97bd4b", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/d4892b3d0e818372c20ca04b3b6cb678fd97bd4b", "committedDate": "2020-10-13T09:28:24Z", "message": "update apollon version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af1b08411a0d627c8f7a2abeb23ef7d4a3ea0c5d", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/af1b08411a0d627c8f7a2abeb23ef7d4a3ea0c5d", "committedDate": "2020-10-13T09:29:36Z", "message": "Merge branch 'develop' into feature/update-apollon-version-2.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77feb0389ae83ed795cd90063f76500190a9e914", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/77feb0389ae83ed795cd90063f76500190a9e914", "committedDate": "2020-10-13T09:56:55Z", "message": "Merge branch 'develop' into feature/petri-nets-and-syntax-trees"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "152f657c54360c3de601b888267b05cb88882bf2", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/152f657c54360c3de601b888267b05cb88882bf2", "committedDate": "2020-10-13T11:56:36Z", "message": "Merge branch 'feature/update-apollon-version-2.2.0' into feature/petri-nets-and-syntax-trees"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f69e5b5d57eee2df8e04235321d01e1750bfaa1", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/5f69e5b5d57eee2df8e04235321d01e1750bfaa1", "committedDate": "2020-10-13T12:19:35Z", "message": "Move JSON from text blocks to .json files (see #2122)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45159c59e73e69361e65ff109f14e6a9d75d261f", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/45159c59e73e69361e65ff109f14e6a9d75d261f", "committedDate": "2020-10-13T13:55:41Z", "message": "Merge branch 'develop' into feature/update-apollon-version-2.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dbe2f028e08b5d28595244d2b1f0e87c055eab1", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/6dbe2f028e08b5d28595244d2b1f0e87c055eab1", "committedDate": "2020-10-13T13:56:17Z", "message": "update apollon version to 2.2.4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c0fca9fd5c77f469dbcb382056470d37afc7301", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/9c0fca9fd5c77f469dbcb382056470d37afc7301", "committedDate": "2020-10-13T13:56:31Z", "message": "Merge remote-tracking branch 'origin/feature/update-apollon-version-2.2.0' into feature/update-apollon-version-2.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bee3f365cd7057c0abeb7ecc1000da02f46aefce", "author": {"user": {"login": "TobiasPr", "name": "Tobias Priesching"}}, "url": "https://github.com/ls1intum/Artemis/commit/bee3f365cd7057c0abeb7ecc1000da02f46aefce", "committedDate": "2020-10-13T14:02:46Z", "message": "update apollon version to 2.2.5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dcedaf8c22a43f66660f0c90a2d0500ba5c063a", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/2dcedaf8c22a43f66660f0c90a2d0500ba5c063a", "committedDate": "2020-10-13T14:48:30Z", "message": "Merge branch 'feature/update-apollon-version-2.2.0' into feature/petri-nets-and-syntax-trees"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NTUyNjQy", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507552642", "createdAt": "2020-10-13T15:19:46Z", "commit": {"oid": "2dcedaf8c22a43f66660f0c90a2d0500ba5c063a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7151ae601d4843613532eb5dcdc748c73e62400", "author": {"user": {"login": "krusche", "name": "Stephan Krusche"}}, "url": "https://github.com/ls1intum/Artemis/commit/d7151ae601d4843613532eb5dcdc748c73e62400", "committedDate": "2020-10-13T15:19:55Z", "message": "Merge branch 'develop' into feature/petri-nets-and-syntax-trees"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NjA3ODU5", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507607859", "createdAt": "2020-10-13T16:13:43Z", "commit": {"oid": "d7151ae601d4843613532eb5dcdc748c73e62400"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjoxMzo0NFrOHguqcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjoxMzo0NFrOHguqcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA4MTAwOQ==", "bodyText": "weird name for petri net arc", "url": "https://github.com/ls1intum/Artemis/pull/2179#discussion_r504081009", "createdAt": "2020-10-13T16:13:44Z", "author": {"login": "TobiasPr"}, "path": "src/main/java/de/tum/in/www1/artemis/service/compass/controller/UMLModelParser.java", "diffHunk": "@@ -813,6 +814,161 @@ private static UMLControlFlow parseControlFlow(JsonObject controlFlowJson, Map<S\n         }\n     }\n \n+    /**\n+     * Create a petri net from the model and relationship elements given as JSON arrays. It parses the JSON objects to corresponding Java objects and creates a\n+     * petri net containing these UML model elements.\n+     *\n+     * @param modelElements the model elements as JSON array\n+     * @param relationships the relationship elements as JSON array\n+     * @param modelSubmissionId the ID of the corresponding modeling submission\n+     * @return a petri net containing the parsed model elements and relationships\n+     * @throws IOException when no corresponding model elements could be found for the source and target IDs in the relationship JSON objects\n+     */\n+    private static PetriNet buildPetriNetFromJSON(JsonArray modelElements, JsonArray relationships, long modelSubmissionId) throws IOException {\n+        List<PetriNetArc> arcs = new ArrayList<>();\n+        Map<String, PetriNetPlace> places = new HashMap<>();\n+        Map<String, PetriNetTransition> transitions = new HashMap<>();\n+        Map<String, UMLElement> allElementsMap = new HashMap<>();\n+\n+        // loop over all JSON elements and create the UML objects\n+        for (JsonElement jsonElement : modelElements) {\n+            JsonObject jsonObject = jsonElement.getAsJsonObject();\n+            String elementType = jsonObject.get(ELEMENT_TYPE).getAsString();\n+            // elementType is never null\n+            switch (elementType) {\n+                case PetriNetPlace.PETRI_NET_PLACE_TYPE -> {\n+                    PetriNetPlace place = parsePetriNetPlace(jsonObject);\n+                    places.put(place.getJSONElementID(), place);\n+                    allElementsMap.put(place.getJSONElementID(), place);\n+                }\n+                case PetriNetTransition.PETRI_NET_TRANSITION_TYPE -> {\n+                    PetriNetTransition transition = parsePetriNetTransition(jsonObject);\n+                    transitions.put(transition.getJSONElementID(), transition);\n+                    allElementsMap.put(transition.getJSONElementID(), transition);\n+                }\n+                default -> {\n+                    // ignore unknown elements\n+                }\n+            }\n+        }\n+\n+        // loop over all JSON control flow elements and create syntax tree links\n+        for (JsonElement rel : relationships) {\n+            Optional<PetriNetArc> useCaseAssociation = parsePetriNetArc(rel.getAsJsonObject(), allElementsMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7151ae601d4843613532eb5dcdc748c73e62400"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NjEwMDg5", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507610089", "createdAt": "2020-10-13T16:16:14Z", "commit": {"oid": "d7151ae601d4843613532eb5dcdc748c73e62400"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjoxNjoxNVrOHguxSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNjoxNjoxNVrOHguxSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA4Mjc2Mg==", "bodyText": "same here, shouldn't useCaseAssociation be something like syntacTreeLink?", "url": "https://github.com/ls1intum/Artemis/pull/2179#discussion_r504082762", "createdAt": "2020-10-13T16:16:15Z", "author": {"login": "TobiasPr"}, "path": "src/main/java/de/tum/in/www1/artemis/service/compass/controller/UMLModelParser.java", "diffHunk": "@@ -813,6 +814,161 @@ private static UMLControlFlow parseControlFlow(JsonObject controlFlowJson, Map<S\n         }\n     }\n \n+    /**\n+     * Create a petri net from the model and relationship elements given as JSON arrays. It parses the JSON objects to corresponding Java objects and creates a\n+     * petri net containing these UML model elements.\n+     *\n+     * @param modelElements the model elements as JSON array\n+     * @param relationships the relationship elements as JSON array\n+     * @param modelSubmissionId the ID of the corresponding modeling submission\n+     * @return a petri net containing the parsed model elements and relationships\n+     * @throws IOException when no corresponding model elements could be found for the source and target IDs in the relationship JSON objects\n+     */\n+    private static PetriNet buildPetriNetFromJSON(JsonArray modelElements, JsonArray relationships, long modelSubmissionId) throws IOException {\n+        List<PetriNetArc> arcs = new ArrayList<>();\n+        Map<String, PetriNetPlace> places = new HashMap<>();\n+        Map<String, PetriNetTransition> transitions = new HashMap<>();\n+        Map<String, UMLElement> allElementsMap = new HashMap<>();\n+\n+        // loop over all JSON elements and create the UML objects\n+        for (JsonElement jsonElement : modelElements) {\n+            JsonObject jsonObject = jsonElement.getAsJsonObject();\n+            String elementType = jsonObject.get(ELEMENT_TYPE).getAsString();\n+            // elementType is never null\n+            switch (elementType) {\n+                case PetriNetPlace.PETRI_NET_PLACE_TYPE -> {\n+                    PetriNetPlace place = parsePetriNetPlace(jsonObject);\n+                    places.put(place.getJSONElementID(), place);\n+                    allElementsMap.put(place.getJSONElementID(), place);\n+                }\n+                case PetriNetTransition.PETRI_NET_TRANSITION_TYPE -> {\n+                    PetriNetTransition transition = parsePetriNetTransition(jsonObject);\n+                    transitions.put(transition.getJSONElementID(), transition);\n+                    allElementsMap.put(transition.getJSONElementID(), transition);\n+                }\n+                default -> {\n+                    // ignore unknown elements\n+                }\n+            }\n+        }\n+\n+        // loop over all JSON control flow elements and create syntax tree links\n+        for (JsonElement rel : relationships) {\n+            Optional<PetriNetArc> useCaseAssociation = parsePetriNetArc(rel.getAsJsonObject(), allElementsMap);\n+            useCaseAssociation.ifPresent(arcs::add);\n+        }\n+\n+        return new PetriNet(modelSubmissionId, List.copyOf(places.values()), List.copyOf(transitions.values()), arcs);\n+    }\n+\n+    private static PetriNetPlace parsePetriNetPlace(JsonObject componentJson) {\n+        String name = componentJson.get(ELEMENT_NAME).getAsString();\n+        String amountOfTokens = componentJson.get(\"amountOfTokens\").getAsString();\n+        String capacity = componentJson.get(\"capacity\").getAsString();\n+        return new PetriNetPlace(name, amountOfTokens, capacity, componentJson.get(ELEMENT_ID).getAsString());\n+    }\n+\n+    private static PetriNetTransition parsePetriNetTransition(JsonObject componentJson) {\n+        String name = componentJson.get(ELEMENT_NAME).getAsString();\n+        return new PetriNetTransition(name, componentJson.get(ELEMENT_ID).getAsString());\n+    }\n+\n+    /**\n+     * Parses the given JSON representation of a UML relationship to a PetriNetArc Java object.\n+     *\n+     * @param relationshipJson the JSON object containing the relationship\n+     * @param objectMap a map containing all objects of the corresponding syntax tree, necessary for assigning source and target element of the relationships\n+     * @return the PetriNetArc object parsed from the JSON object\n+     * @throws IOException when no class could be found in the classMap for the source and target ID in the JSON object\n+     */\n+    private static Optional<PetriNetArc> parsePetriNetArc(JsonObject relationshipJson, Map<String, UMLElement> allSyntaxTreeElements) throws IOException {\n+        String multiplicity = relationshipJson.get(ELEMENT_NAME).getAsString();\n+        UMLElement source = findElement(relationshipJson, allSyntaxTreeElements, RELATIONSHIP_SOURCE);\n+        UMLElement target = findElement(relationshipJson, allSyntaxTreeElements, RELATIONSHIP_TARGET);\n+\n+        if (source == null || target == null) {\n+            throw new IOException(\"Relationship source or target not part of model!\");\n+        }\n+        PetriNetArc newSPetriNetArc = new PetriNetArc(multiplicity, source, target, relationshipJson.get(ELEMENT_ID).getAsString());\n+        return Optional.of(newSPetriNetArc);\n+    }\n+\n+    /**\n+     * Create a syntax tree from the model and relationship elements given as JSON arrays. It parses the JSON objects to corresponding Java objects and creates a\n+     * syntax tree containing these UML model elements.\n+     *\n+     * @param modelElements the model elements as JSON array\n+     * @param relationships the relationship elements as JSON array\n+     * @param modelSubmissionId the ID of the corresponding modeling submission\n+     * @return a syntax tree containing the parsed model elements and relationships\n+     * @throws IOException when no corresponding model elements could be found for the source and target IDs in the relationship JSON objects\n+     */\n+    private static SyntaxTree buildSyntaxTreeFromJSON(JsonArray modelElements, JsonArray relationships, long modelSubmissionId) throws IOException {\n+        List<SyntaxTreeLink> syntaxTreeLinkList = new ArrayList<>();\n+        Map<String, SyntaxTreeTerminal> terminalMap = new HashMap<>();\n+        Map<String, SyntaxTreeNonterminal> nonterminalMap = new HashMap<>();\n+        Map<String, UMLElement> allElementsMap = new HashMap<>();\n+\n+        // loop over all JSON elements and create the UML objects\n+        for (JsonElement jsonElement : modelElements) {\n+            JsonObject jsonObject = jsonElement.getAsJsonObject();\n+            String elementType = jsonObject.get(ELEMENT_TYPE).getAsString();\n+            // elementType is never null\n+            switch (elementType) {\n+                case SyntaxTreeTerminal.SYNTAX_TREE_TERMINAL_TYPE -> {\n+                    SyntaxTreeTerminal terminal = parseTerminal(jsonObject);\n+                    terminalMap.put(terminal.getJSONElementID(), terminal);\n+                    allElementsMap.put(terminal.getJSONElementID(), terminal);\n+                }\n+                case SyntaxTreeNonterminal.SYNTAX_TREE_NONTERMINAL_TYPE -> {\n+                    SyntaxTreeNonterminal nonterminal = parseNonterminal(jsonObject);\n+                    nonterminalMap.put(nonterminal.getJSONElementID(), nonterminal);\n+                    allElementsMap.put(nonterminal.getJSONElementID(), nonterminal);\n+                }\n+                default -> {\n+                    // ignore unknown elements\n+                }\n+            }\n+        }\n+\n+        // loop over all JSON control flow elements and create syntax tree links\n+        for (JsonElement rel : relationships) {\n+            Optional<SyntaxTreeLink> useCaseAssociation = parseSyntaxTreeLink(rel.getAsJsonObject(), allElementsMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7151ae601d4843613532eb5dcdc748c73e62400"}, "originalPosition": 187}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NjIxNDQx", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507621441", "createdAt": "2020-10-13T16:26:56Z", "commit": {"oid": "d7151ae601d4843613532eb5dcdc748c73e62400"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08f288d64f10bd2d55c6881d6c76b4ce105a1fb2", "author": {"user": {"login": "MaisiKoleni", "name": "Christian Femers"}}, "url": "https://github.com/ls1intum/Artemis/commit/08f288d64f10bd2d55c6881d6c76b4ce105a1fb2", "committedDate": "2020-10-13T17:40:10Z", "message": "Fix local variable names in UMLModelParser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd", "author": {"user": {"login": "krusche", "name": "Stephan Krusche"}}, "url": "https://github.com/ls1intum/Artemis/commit/3f5511ae3724d95eed56a9f29cd8b106ee0b30dd", "committedDate": "2020-10-13T18:36:35Z", "message": "Merge branch 'develop' into feature/petri-nets-and-syntax-trees"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzI1OTAw", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507725900", "createdAt": "2020-10-13T18:37:22Z", "commit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzI4NDMw", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507728430", "createdAt": "2020-10-13T18:40:59Z", "commit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MDo1OVrOHg0kPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MDo1OVrOHg0kPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3NzcyNw==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'similarityPetriNet_differentModels' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2179#discussion_r504177727", "createdAt": "2020-10-13T18:40:59Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/service/compass/umlmodel/petrinet/PetriNetTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package de.tum.in.www1.artemis.service.compass.umlmodel.petrinet;\n+\n+import static com.google.gson.JsonParser.parseString;\n+import static de.tum.in.www1.artemis.service.compass.umlmodel.petrinet.PetriNets.PETRI_NET_MODEL_1A;\n+import static de.tum.in.www1.artemis.service.compass.umlmodel.petrinet.PetriNets.PETRI_NET_MODEL_1B;\n+import static de.tum.in.www1.artemis.service.compass.umlmodel.petrinet.PetriNets.PETRI_NET_MODEL_2;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.InstanceOfAssertFactories.type;\n+\n+import java.io.IOException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import de.tum.in.www1.artemis.service.compass.controller.UMLModelParser;\n+import de.tum.in.www1.artemis.service.compass.umlmodel.AbstractUMLDiagramTest;\n+import de.tum.in.www1.artemis.service.compass.umlmodel.UMLDiagram;\n+\n+public class PetriNetTest extends AbstractUMLDiagramTest {\n+\n+    @Test\n+    void similarityPetriNet_equalModels() {\n+        compareSubmissions(modelingSubmission(PETRI_NET_MODEL_1A), modelingSubmission(PETRI_NET_MODEL_1A), 0.8, 1.0);\n+        compareSubmissions(modelingSubmission(PETRI_NET_MODEL_2), modelingSubmission(PETRI_NET_MODEL_2), 0.8, 1.0);\n+\n+        compareSubmissions(modelingSubmission(PETRI_NET_MODEL_1A), modelingSubmission(PETRI_NET_MODEL_1B), 0.8, 0.9375);\n+    }\n+\n+    @Test\n+    void similarityPetriNet_differentModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzI4NDU0", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507728454", "createdAt": "2020-10-13T18:41:01Z", "commit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MTowMVrOHg0kTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MTowMVrOHg0kTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3Nzc0Mw==", "bodyText": "Codacy found an issue: The utility class name 'SyntaxTrees' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper|Constants)'", "url": "https://github.com/ls1intum/Artemis/pull/2179#discussion_r504177743", "createdAt": "2020-10-13T18:41:01Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/service/compass/umlmodel/syntaxtree/SyntaxTrees.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package de.tum.in.www1.artemis.service.compass.umlmodel.syntaxtree;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.nio.charset.StandardCharsets;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+class SyntaxTrees {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzI4NDY5", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507728469", "createdAt": "2020-10-13T18:41:03Z", "commit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MTowM1rOHg0kXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MTowM1rOHg0kXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3Nzc1OA==", "bodyText": "Codacy found an issue: The utility class name 'PetriNets' doesn't match '[A-Z][a-zA-Z0-9]+(Utils?|Helper|Constants)'", "url": "https://github.com/ls1intum/Artemis/pull/2179#discussion_r504177758", "createdAt": "2020-10-13T18:41:03Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/service/compass/umlmodel/petrinet/PetriNets.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package de.tum.in.www1.artemis.service.compass.umlmodel.petrinet;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.nio.charset.StandardCharsets;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+class PetriNets {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzI4NDg0", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507728484", "createdAt": "2020-10-13T18:41:04Z", "commit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MTowNFrOHg0kZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MTowNFrOHg0kZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3Nzc2NQ==", "bodyText": "Codacy found an issue: Switch statements should have a default label", "url": "https://github.com/ls1intum/Artemis/pull/2179#discussion_r504177765", "createdAt": "2020-10-13T18:41:04Z", "author": {"login": "artemis-bot"}, "path": "src/main/java/de/tum/in/www1/artemis/service/compass/controller/UMLModelParser.java", "diffHunk": "@@ -813,6 +814,161 @@ private static UMLControlFlow parseControlFlow(JsonObject controlFlowJson, Map<S\n         }\n     }\n \n+    /**\n+     * Create a petri net from the model and relationship elements given as JSON arrays. It parses the JSON objects to corresponding Java objects and creates a\n+     * petri net containing these UML model elements.\n+     *\n+     * @param modelElements the model elements as JSON array\n+     * @param relationships the relationship elements as JSON array\n+     * @param modelSubmissionId the ID of the corresponding modeling submission\n+     * @return a petri net containing the parsed model elements and relationships\n+     * @throws IOException when no corresponding model elements could be found for the source and target IDs in the relationship JSON objects\n+     */\n+    private static PetriNet buildPetriNetFromJSON(JsonArray modelElements, JsonArray relationships, long modelSubmissionId) throws IOException {\n+        List<PetriNetArc> arcs = new ArrayList<>();\n+        Map<String, PetriNetPlace> places = new HashMap<>();\n+        Map<String, PetriNetTransition> transitions = new HashMap<>();\n+        Map<String, UMLElement> allElementsMap = new HashMap<>();\n+\n+        // loop over all JSON elements and create the UML objects\n+        for (JsonElement jsonElement : modelElements) {\n+            JsonObject jsonObject = jsonElement.getAsJsonObject();\n+            String elementType = jsonObject.get(ELEMENT_TYPE).getAsString();\n+            // elementType is never null\n+            switch (elementType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "originalPosition": 89}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzI4NDk3", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507728497", "createdAt": "2020-10-13T18:41:05Z", "commit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MTowNVrOHg0kag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MTowNVrOHg0kag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3Nzc3MA==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'similaritySyntaxTree_differentModels' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2179#discussion_r504177770", "createdAt": "2020-10-13T18:41:05Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/service/compass/umlmodel/syntaxtree/SyntaxTreeTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package de.tum.in.www1.artemis.service.compass.umlmodel.syntaxtree;\n+\n+import static com.google.gson.JsonParser.parseString;\n+import static de.tum.in.www1.artemis.service.compass.umlmodel.syntaxtree.SyntaxTrees.SYNTAX_TREE_MODEL_1A;\n+import static de.tum.in.www1.artemis.service.compass.umlmodel.syntaxtree.SyntaxTrees.SYNTAX_TREE_MODEL_1B;\n+import static de.tum.in.www1.artemis.service.compass.umlmodel.syntaxtree.SyntaxTrees.SYNTAX_TREE_MODEL_2;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.InstanceOfAssertFactories.type;\n+\n+import java.io.IOException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import de.tum.in.www1.artemis.service.compass.controller.UMLModelParser;\n+import de.tum.in.www1.artemis.service.compass.umlmodel.AbstractUMLDiagramTest;\n+import de.tum.in.www1.artemis.service.compass.umlmodel.UMLDiagram;\n+\n+public class SyntaxTreeTest extends AbstractUMLDiagramTest {\n+\n+    @Test\n+    void similaritySyntaxTree_equalModels() {\n+        compareSubmissions(modelingSubmission(SYNTAX_TREE_MODEL_1A), modelingSubmission(SYNTAX_TREE_MODEL_1A), 0.8, 1.0);\n+        compareSubmissions(modelingSubmission(SYNTAX_TREE_MODEL_2), modelingSubmission(SYNTAX_TREE_MODEL_2), 0.8, 1.0);\n+\n+        compareSubmissions(modelingSubmission(SYNTAX_TREE_MODEL_1A), modelingSubmission(SYNTAX_TREE_MODEL_1B), 0.8, 1.0);\n+    }\n+\n+    @Test\n+    void similaritySyntaxTree_differentModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzI4NTE1", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507728515", "createdAt": "2020-10-13T18:41:06Z", "commit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MTowNlrOHg0kdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MTowNlrOHg0kdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3Nzc4Mw==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'similaritySyntaxTree_equalModels' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2179#discussion_r504177783", "createdAt": "2020-10-13T18:41:06Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/service/compass/umlmodel/syntaxtree/SyntaxTreeTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package de.tum.in.www1.artemis.service.compass.umlmodel.syntaxtree;\n+\n+import static com.google.gson.JsonParser.parseString;\n+import static de.tum.in.www1.artemis.service.compass.umlmodel.syntaxtree.SyntaxTrees.SYNTAX_TREE_MODEL_1A;\n+import static de.tum.in.www1.artemis.service.compass.umlmodel.syntaxtree.SyntaxTrees.SYNTAX_TREE_MODEL_1B;\n+import static de.tum.in.www1.artemis.service.compass.umlmodel.syntaxtree.SyntaxTrees.SYNTAX_TREE_MODEL_2;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.InstanceOfAssertFactories.type;\n+\n+import java.io.IOException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import de.tum.in.www1.artemis.service.compass.controller.UMLModelParser;\n+import de.tum.in.www1.artemis.service.compass.umlmodel.AbstractUMLDiagramTest;\n+import de.tum.in.www1.artemis.service.compass.umlmodel.UMLDiagram;\n+\n+public class SyntaxTreeTest extends AbstractUMLDiagramTest {\n+\n+    @Test\n+    void similaritySyntaxTree_equalModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzI4NTMw", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507728530", "createdAt": "2020-10-13T18:41:08Z", "commit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MTowOFrOHg0kfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODo0MTowOFrOHg0kfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3Nzc5MA==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'similarityPetriNet_equalModels' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2179#discussion_r504177790", "createdAt": "2020-10-13T18:41:08Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/service/compass/umlmodel/petrinet/PetriNetTest.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package de.tum.in.www1.artemis.service.compass.umlmodel.petrinet;\n+\n+import static com.google.gson.JsonParser.parseString;\n+import static de.tum.in.www1.artemis.service.compass.umlmodel.petrinet.PetriNets.PETRI_NET_MODEL_1A;\n+import static de.tum.in.www1.artemis.service.compass.umlmodel.petrinet.PetriNets.PETRI_NET_MODEL_1B;\n+import static de.tum.in.www1.artemis.service.compass.umlmodel.petrinet.PetriNets.PETRI_NET_MODEL_2;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.InstanceOfAssertFactories.type;\n+\n+import java.io.IOException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import de.tum.in.www1.artemis.service.compass.controller.UMLModelParser;\n+import de.tum.in.www1.artemis.service.compass.umlmodel.AbstractUMLDiagramTest;\n+import de.tum.in.www1.artemis.service.compass.umlmodel.UMLDiagram;\n+\n+public class PetriNetTest extends AbstractUMLDiagramTest {\n+\n+    @Test\n+    void similarityPetriNet_equalModels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3ODA3Njc1", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507807675", "createdAt": "2020-10-13T20:34:17Z", "commit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3ODA5NDYw", "url": "https://github.com/ls1intum/Artemis/pull/2179#pullrequestreview-507809460", "createdAt": "2020-10-13T20:37:02Z", "commit": {"oid": "3f5511ae3724d95eed56a9f29cd8b106ee0b30dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3791, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}