{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMjIxMzQ3", "number": 2415, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjowMDowOFrOE6QLZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNDoyNjozMVrOE6l28A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTE3OTI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjowMDowOFrOH1NNlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjowNDowOFrOH1NVOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU1MzA0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Get a file upload submission of the given exercise that still needs to be assessed and lock the submission to prevent other tutors from receiving and assessing it.\n          \n          \n            \n                 * Get a programming exercise submission of the given exercise that still needs to be assessed and lock the submission to prevent other tutors from receiving and assessing it.", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r525553047", "createdAt": "2020-11-17T22:00:08Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "diffHunk": "@@ -634,4 +633,42 @@ public ProgrammingSubmission findByIdWithEagerResultAndFeedback(long submissionI\n         return programmingSubmissionRepository.findWithEagerResultAssessorFeedbackById(submissionId)\n                 .orElseThrow(() -> new EntityNotFoundException(\"Programming submission with id \\\"\" + submissionId + \"\\\" does not exist\"));\n     }\n+\n+    /**\n+     * Get a file upload submission of the given exercise that still needs to be assessed and lock the submission to prevent other tutors from receiving and assessing it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75c4457e82feb0829f19dfe84e2c47d8f84916ff"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU1NTAwMQ==", "bodyText": "Good eyes!", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r525555001", "createdAt": "2020-11-17T22:04:08Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "diffHunk": "@@ -634,4 +633,42 @@ public ProgrammingSubmission findByIdWithEagerResultAndFeedback(long submissionI\n         return programmingSubmissionRepository.findWithEagerResultAssessorFeedbackById(submissionId)\n                 .orElseThrow(() -> new EntityNotFoundException(\"Programming submission with id \\\"\" + submissionId + \"\\\" does not exist\"));\n     }\n+\n+    /**\n+     * Get a file upload submission of the given exercise that still needs to be assessed and lock the submission to prevent other tutors from receiving and assessing it.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU1MzA0Nw=="}, "originalCommit": {"oid": "75c4457e82feb0829f19dfe84e2c47d8f84916ff"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTE5NjUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingAssessmentResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjowNToxMVrOH1NXuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDozMDo0NFrOH1RDUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU1NTY0Mw==", "bodyText": "I'd rename the variable to manualResult if because the statement just looks for the first manual result. I guess this is fine because only one manual result can exist now.", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r525555643", "createdAt": "2020-11-17T22:05:11Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingAssessmentResource.java", "diffHunk": "@@ -120,13 +118,11 @@ public ProgrammingAssessmentResource(AuthorizationCheckService authCheckService,\n \n         User user = userService.getUserWithGroupsAndAuthorities();\n \n-        Optional<Result> latestExistingResult = participation.getResults().stream().filter(result -> result.isManualResult()).findFirst();\n-        if (latestExistingResult.isPresent()) {\n-            // prevent that tutors create multiple manual results\n-            newResult.setId(latestExistingResult.get().getId());\n-            // load assessor\n-            latestExistingResult = resultRepository.findWithEagerSubmissionAndFeedbackAndAssessorById(latestExistingResult.get().getId());\n-        }\n+        Result latestExistingResult = participation.getResults().stream().filter(result -> result.isManualResult()).findFirst().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75c4457e82feb0829f19dfe84e2c47d8f84916ff"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYxNTk1NQ==", "bodyText": "Done", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r525615955", "createdAt": "2020-11-18T00:30:44Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingAssessmentResource.java", "diffHunk": "@@ -120,13 +118,11 @@ public ProgrammingAssessmentResource(AuthorizationCheckService authCheckService,\n \n         User user = userService.getUserWithGroupsAndAuthorities();\n \n-        Optional<Result> latestExistingResult = participation.getResults().stream().filter(result -> result.isManualResult()).findFirst();\n-        if (latestExistingResult.isPresent()) {\n-            // prevent that tutors create multiple manual results\n-            newResult.setId(latestExistingResult.get().getId());\n-            // load assessor\n-            latestExistingResult = resultRepository.findWithEagerSubmissionAndFeedbackAndAssessorById(latestExistingResult.get().getId());\n-        }\n+        Result latestExistingResult = participation.getResults().stream().filter(result -> result.isManualResult()).findFirst().get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU1NTY0Mw=="}, "originalCommit": {"oid": "75c4457e82feb0829f19dfe84e2c47d8f84916ff"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTI3MjgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingAssessmentResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjoyODoyN1rOH1OEyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjoyODoyN1rOH1OEyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU2NzE3OA==", "bodyText": "Is this call necessary? latestExistingResult should already have an safe submission fetched from the DB.", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r525567178", "createdAt": "2020-11-17T22:28:27Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingAssessmentResource.java", "diffHunk": "@@ -168,18 +164,9 @@ else if (!newResult.getFeedbacks().isEmpty() && newResult.getFeedbacks().stream(\n             throw new BadRequestAlertException(\"In case feedback is present, a feedback must contain points.\", ENTITY_NAME, \"feedbackCreditsNull\");\n         }\n \n-        ProgrammingSubmission submission;\n-        if (latestExistingResult.isEmpty()) {\n-            // Create manual submission with last commit hash and current time stamp.\n-            submission = programmingSubmissionService.createSubmissionWithLastCommitHashForParticipation((ProgrammingExerciseStudentParticipation) participation,\n-                    SubmissionType.MANUAL);\n-            newResult.setSubmission(submission);\n-        }\n-        else {\n-            submission = programmingSubmissionService.findByIdWithEagerResultAndFeedback(latestExistingResult.get().getSubmission().getId());\n-            newResult.setSubmission(submission);\n-        }\n-\n+        // make sure that the submission cannot be manipulated on the client side\n+        ProgrammingSubmission submission = programmingSubmissionService.findByIdWithEagerResultAndFeedback(latestExistingResult.getSubmission().getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75c4457e82feb0829f19dfe84e2c47d8f84916ff"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTI3NTcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjoyOToyOVrOH1OGkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMzo0NDoyMVrOH1QDAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU2NzYzNA==", "bodyText": "Add param lockSubmission to JavaDoc", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r525567634", "createdAt": "2020-11-17T22:29:29Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingSubmissionResource.java", "diffHunk": "@@ -355,7 +355,8 @@ public ProgrammingSubmissionResource(ProgrammingSubmissionService programmingSub\n      */\n     @GetMapping(value = \"/exercises/{exerciseId}/programming-submission-without-assessment\")\n     @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n-    public ResponseEntity<ProgrammingSubmission> getProgrammingSubmissionWithoutAssessment(@PathVariable Long exerciseId) {\n+    public ResponseEntity<ProgrammingSubmission> getProgrammingSubmissionWithoutAssessment(@PathVariable Long exerciseId,\n+            @RequestParam(value = \"lock\", defaultValue = \"false\") boolean lockSubmission) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75c4457e82feb0829f19dfe84e2c47d8f84916ff"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5OTQ4OA==", "bodyText": "Done", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r525599488", "createdAt": "2020-11-17T23:44:21Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingSubmissionResource.java", "diffHunk": "@@ -355,7 +355,8 @@ public ProgrammingSubmissionResource(ProgrammingSubmissionService programmingSub\n      */\n     @GetMapping(value = \"/exercises/{exerciseId}/programming-submission-without-assessment\")\n     @PreAuthorize(\"hasAnyRole('TA', 'INSTRUCTOR', 'ADMIN')\")\n-    public ResponseEntity<ProgrammingSubmission> getProgrammingSubmissionWithoutAssessment(@PathVariable Long exerciseId) {\n+    public ResponseEntity<ProgrammingSubmission> getProgrammingSubmissionWithoutAssessment(@PathVariable Long exerciseId,\n+            @RequestParam(value = \"lock\", defaultValue = \"false\") boolean lockSubmission) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU2NzYzNA=="}, "originalCommit": {"oid": "75c4457e82feb0829f19dfe84e2c47d8f84916ff"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTI3ODc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingSubmissionResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjozMDoxOVrOH1OIRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMzo0NDoxMFrOH1QCxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU2ODA2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                    // final ProgrammingSubmission programmingSubmission = optionalProgrammingSubmission.get();", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r525568069", "createdAt": "2020-11-17T22:30:19Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingSubmissionResource.java", "diffHunk": "@@ -369,14 +370,24 @@ public ProgrammingSubmissionResource(ProgrammingSubmissionService programmingSub\n             return forbidden();\n         }\n \n-        // TODO: Handle lock limit.\n+        // Check if the limit of simultaneously locked submissions has been reached\n+        programmingSubmissionService.checkSubmissionLockLimit(programmingExercise.getCourseViaExerciseGroupOrCourseMember().getId());\n+\n+        final ProgrammingSubmission programmingSubmission;\n+        if (lockSubmission) {\n+            programmingSubmission = programmingSubmissionService.getLockedProgrammingSubmissionWithoutResult(programmingExercise);\n+        }\n+        else {\n+            Optional<ProgrammingSubmission> optionalProgrammingSubmission = programmingSubmissionService.getRandomProgrammingSubmissionEligibleForNewAssessment(programmingExercise,\n+                    programmingExercise.hasExerciseGroup());\n+            if (optionalProgrammingSubmission.isEmpty()) {\n+                return notFound();\n+            }\n+            programmingSubmission = optionalProgrammingSubmission.get();\n \n-        Optional<ProgrammingSubmission> optionalProgrammingSubmission = programmingSubmissionService.getRandomProgrammingSubmissionEligibleForNewAssessment(programmingExercise,\n-                programmingExercise.hasExerciseGroup());\n-        if (optionalProgrammingSubmission.isEmpty()) {\n-            return notFound();\n         }\n-        final ProgrammingSubmission programmingSubmission = optionalProgrammingSubmission.get();\n+\n+        // final ProgrammingSubmission programmingSubmission = optionalProgrammingSubmission.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75c4457e82feb0829f19dfe84e2c47d8f84916ff"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU5OTQzMA==", "bodyText": "Done", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r525599430", "createdAt": "2020-11-17T23:44:10Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingSubmissionResource.java", "diffHunk": "@@ -369,14 +370,24 @@ public ProgrammingSubmissionResource(ProgrammingSubmissionService programmingSub\n             return forbidden();\n         }\n \n-        // TODO: Handle lock limit.\n+        // Check if the limit of simultaneously locked submissions has been reached\n+        programmingSubmissionService.checkSubmissionLockLimit(programmingExercise.getCourseViaExerciseGroupOrCourseMember().getId());\n+\n+        final ProgrammingSubmission programmingSubmission;\n+        if (lockSubmission) {\n+            programmingSubmission = programmingSubmissionService.getLockedProgrammingSubmissionWithoutResult(programmingExercise);\n+        }\n+        else {\n+            Optional<ProgrammingSubmission> optionalProgrammingSubmission = programmingSubmissionService.getRandomProgrammingSubmissionEligibleForNewAssessment(programmingExercise,\n+                    programmingExercise.hasExerciseGroup());\n+            if (optionalProgrammingSubmission.isEmpty()) {\n+                return notFound();\n+            }\n+            programmingSubmission = optionalProgrammingSubmission.get();\n \n-        Optional<ProgrammingSubmission> optionalProgrammingSubmission = programmingSubmissionService.getRandomProgrammingSubmissionEligibleForNewAssessment(programmingExercise,\n-                programmingExercise.hasExerciseGroup());\n-        if (optionalProgrammingSubmission.isEmpty()) {\n-            return notFound();\n         }\n-        final ProgrammingSubmission programmingSubmission = optionalProgrammingSubmission.get();\n+\n+        // final ProgrammingSubmission programmingSubmission = optionalProgrammingSubmission.get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU2ODA2OQ=="}, "originalCommit": {"oid": "75c4457e82feb0829f19dfe84e2c47d8f84916ff"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTMyMjM4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjo0NDowNVrOH1OiCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDo1Mjo0M1rOH1RgwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU3NDY2Nw==", "bodyText": "I would rather check here, that no manual feedback exist.", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r525574667", "createdAt": "2020-11-17T22:44:05Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts", "diffHunk": "@@ -386,19 +380,14 @@ export class CodeEditorTutorAssessmentContainerComponent implements OnInit, OnDe\n     }\n \n     private handleFeedback(): void {\n-        // Setup automatic feedback\n-        this.automaticFeedback = this.automaticResult?.feedbacks ?? [];\n-        this.automaticFeedback.forEach((feedback) => {\n-            feedback.id = undefined;\n-            if (!feedback.credits) {\n-                feedback.credits = 0;\n-            }\n-        });\n-\n-        // Setup not automatically generated feedbacks\n         const feedbacks = this.manualResult?.feedbacks || [];\n-        this.unreferencedFeedback = feedbacks.filter((feedbackElement) => feedbackElement.reference == undefined && feedbackElement.type === FeedbackType.MANUAL_UNREFERENCED);\n+        this.automaticFeedback = feedbacks.filter((feedback) => feedback.type === FeedbackType.AUTOMATIC);\n+        // When manual result only contains automatic feedback elements (when assessing for the first time), no manual assessment was yet saved or submitted.\n+        if (this.manualResult?.feedbacks && this.manualResult.feedbacks.length === this.automaticFeedback.length) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75c4457e82feb0829f19dfe84e2c47d8f84916ff"}, "originalPosition": 192}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYyMzQ4OA==", "bodyText": "@kloessst I modified the check to also set it as first assessment when there is no feedback at all to include the No tests found result string of automatic result with build failed :)", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r525623488", "createdAt": "2020-11-18T00:52:43Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts", "diffHunk": "@@ -386,19 +380,14 @@ export class CodeEditorTutorAssessmentContainerComponent implements OnInit, OnDe\n     }\n \n     private handleFeedback(): void {\n-        // Setup automatic feedback\n-        this.automaticFeedback = this.automaticResult?.feedbacks ?? [];\n-        this.automaticFeedback.forEach((feedback) => {\n-            feedback.id = undefined;\n-            if (!feedback.credits) {\n-                feedback.credits = 0;\n-            }\n-        });\n-\n-        // Setup not automatically generated feedbacks\n         const feedbacks = this.manualResult?.feedbacks || [];\n-        this.unreferencedFeedback = feedbacks.filter((feedbackElement) => feedbackElement.reference == undefined && feedbackElement.type === FeedbackType.MANUAL_UNREFERENCED);\n+        this.automaticFeedback = feedbacks.filter((feedback) => feedback.type === FeedbackType.AUTOMATIC);\n+        // When manual result only contains automatic feedback elements (when assessing for the first time), no manual assessment was yet saved or submitted.\n+        if (this.manualResult?.feedbacks && this.manualResult.feedbacks.length === this.automaticFeedback.length) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU3NDY2Nw=="}, "originalCommit": {"oid": "75c4457e82feb0829f19dfe84e2c47d8f84916ff"}, "originalPosition": 192}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODE3NjI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMjoxMzo0MlrOH1q8CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNTo0MzoyOFrOH10DrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA0MDA3Mw==", "bodyText": "A bit confusing method name, maybe LockAndGetProgrammingSubmissionWithoutResult makes more sense", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r526040073", "createdAt": "2020-11-18T12:13:42Z", "author": {"login": "TobiasPr"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "diffHunk": "@@ -634,4 +633,42 @@ public ProgrammingSubmission findByIdWithEagerResultAndFeedback(long submissionI\n         return programmingSubmissionRepository.findWithEagerResultAssessorFeedbackById(submissionId)\n                 .orElseThrow(() -> new EntityNotFoundException(\"Programming submission with id \\\"\" + submissionId + \"\\\" does not exist\"));\n     }\n+\n+    /**\n+     * Get a programming submission of the given exercise that still needs to be assessed and lock the submission to prevent other tutors from receiving and assessing it.\n+     *\n+     * @param exercise the exercise the submission should belong to\n+     * @return a locked programming submission that needs an assessment\n+     */\n+    @Transactional\n+    public ProgrammingSubmission getLockedProgrammingSubmissionWithoutResult(ProgrammingExercise exercise) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8012d71bc5449d3be974749c61a10014a58a20c9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE4OTQ4NQ==", "bodyText": "Changed to lockAndGetProgramingSubmissionWithoutResultand also accordingly for modeling and file upload exercises.", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r526189485", "createdAt": "2020-11-18T15:43:28Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "diffHunk": "@@ -634,4 +633,42 @@ public ProgrammingSubmission findByIdWithEagerResultAndFeedback(long submissionI\n         return programmingSubmissionRepository.findWithEagerResultAssessorFeedbackById(submissionId)\n                 .orElseThrow(() -> new EntityNotFoundException(\"Programming submission with id \\\"\" + submissionId + \"\\\" does not exist\"));\n     }\n+\n+    /**\n+     * Get a programming submission of the given exercise that still needs to be assessed and lock the submission to prevent other tutors from receiving and assessing it.\n+     *\n+     * @param exercise the exercise the submission should belong to\n+     * @return a locked programming submission that needs an assessment\n+     */\n+    @Transactional\n+    public ProgrammingSubmission getLockedProgrammingSubmissionWithoutResult(ProgrammingExercise exercise) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA0MDA3Mw=="}, "originalCommit": {"oid": "8012d71bc5449d3be974749c61a10014a58a20c9"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODczMDY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/SubmissionService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNDoyNjoyNFrOH1wSMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDowMzoyNlrOH1_6Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEyNzY2Ng==", "bodyText": "can we please remove this @Transactional here", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r526127666", "createdAt": "2020-11-18T14:26:24Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/SubmissionService.java", "diffHunk": "@@ -163,19 +163,20 @@ public long countSubmissionLocks(long courseId) {\n      * No manual result means that no user has started an assessment for the corresponding submission yet.\n      * For exam exercises we should also remove the test run participations as these should not be graded by the tutors.\n      *\n-     * @param fileUploadExercise the exercise for which we want to retrieve a submission without manual result\n+     * @param exercise the exercise for which we want to retrieve a submission without manual result\n      * @param examMode flag to determine if test runs should be removed. This should be set to true for exam exercises\n      * @return a submission without any manual result or an empty Optional if no submission without manual result could be found\n      */\n     @Transactional(readOnly = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8012d71bc5449d3be974749c61a10014a58a20c9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM4MzcxOA==", "bodyText": "Done", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r526383718", "createdAt": "2020-11-18T20:03:26Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/SubmissionService.java", "diffHunk": "@@ -163,19 +163,20 @@ public long countSubmissionLocks(long courseId) {\n      * No manual result means that no user has started an assessment for the corresponding submission yet.\n      * For exam exercises we should also remove the test run participations as these should not be graded by the tutors.\n      *\n-     * @param fileUploadExercise the exercise for which we want to retrieve a submission without manual result\n+     * @param exercise the exercise for which we want to retrieve a submission without manual result\n      * @param examMode flag to determine if test runs should be removed. This should be set to true for exam exercises\n      * @return a submission without any manual result or an empty Optional if no submission without manual result could be found\n      */\n     @Transactional(readOnly = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEyNzY2Ng=="}, "originalCommit": {"oid": "8012d71bc5449d3be974749c61a10014a58a20c9"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5ODczMTM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNDoyNjozMVrOH1wSlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDowMzozNFrOH1_6qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEyNzc2NQ==", "bodyText": "please remove this @Transactional here", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r526127765", "createdAt": "2020-11-18T14:26:31Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "diffHunk": "@@ -634,4 +633,42 @@ public ProgrammingSubmission findByIdWithEagerResultAndFeedback(long submissionI\n         return programmingSubmissionRepository.findWithEagerResultAssessorFeedbackById(submissionId)\n                 .orElseThrow(() -> new EntityNotFoundException(\"Programming submission with id \\\"\" + submissionId + \"\\\" does not exist\"));\n     }\n+\n+    /**\n+     * Get a programming submission of the given exercise that still needs to be assessed and lock the submission to prevent other tutors from receiving and assessing it.\n+     *\n+     * @param exercise the exercise the submission should belong to\n+     * @return a locked programming submission that needs an assessment\n+     */\n+    @Transactional", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8012d71bc5449d3be974749c61a10014a58a20c9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE1MjU2MQ==", "bodyText": "Isn't it possible then, that two tutors aquire the same lock on a submission?", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r526152561", "createdAt": "2020-11-18T14:57:45Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "diffHunk": "@@ -634,4 +633,42 @@ public ProgrammingSubmission findByIdWithEagerResultAndFeedback(long submissionI\n         return programmingSubmissionRepository.findWithEagerResultAssessorFeedbackById(submissionId)\n                 .orElseThrow(() -> new EntityNotFoundException(\"Programming submission with id \\\"\" + submissionId + \"\\\" does not exist\"));\n     }\n+\n+    /**\n+     * Get a programming submission of the given exercise that still needs to be assessed and lock the submission to prevent other tutors from receiving and assessing it.\n+     *\n+     * @param exercise the exercise the submission should belong to\n+     * @return a locked programming submission that needs an assessment\n+     */\n+    @Transactional", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEyNzc2NQ=="}, "originalCommit": {"oid": "8012d71bc5449d3be974749c61a10014a58a20c9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM4Mzc4Nw==", "bodyText": "Done", "url": "https://github.com/ls1intum/Artemis/pull/2415#discussion_r526383787", "createdAt": "2020-11-18T20:03:34Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingSubmissionService.java", "diffHunk": "@@ -634,4 +633,42 @@ public ProgrammingSubmission findByIdWithEagerResultAndFeedback(long submissionI\n         return programmingSubmissionRepository.findWithEagerResultAssessorFeedbackById(submissionId)\n                 .orElseThrow(() -> new EntityNotFoundException(\"Programming submission with id \\\"\" + submissionId + \"\\\" does not exist\"));\n     }\n+\n+    /**\n+     * Get a programming submission of the given exercise that still needs to be assessed and lock the submission to prevent other tutors from receiving and assessing it.\n+     *\n+     * @param exercise the exercise the submission should belong to\n+     * @return a locked programming submission that needs an assessment\n+     */\n+    @Transactional", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjEyNzc2NQ=="}, "originalCommit": {"oid": "8012d71bc5449d3be974749c61a10014a58a20c9"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4452, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}