{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MzY3NjEx", "number": 2211, "title": "Add Kotlin, VHDL, Assember Programming Language Templates.", "bodyText": "Checklist\n\n I tested all changes and all related features with different users (student, tutor, instructor, admin) on the test server https://artemistest.ase.in.tum.de.\n Client: I translated all the newly inserted strings into German and English\n\nMotivation and Context\nSome courses that use Artemis run exercises with Kotlin, VHDL or Assembler. Currently, the setup for these exercises has to be done manually (or imported from an already existing exercise).\nDescription\nThis PR adds templates for Kotlin, VHDL and Assembler.\nThe template for Kotlin is very similar to the Java template (including some non-trivial tests), whereas the VHDL and Assembler tests only contain very basic functionality (compile checks).\nSteps for Testing\n\nCreate a programming exercise for each of the new programming languages\nVerify that the base build plan fails (with 0 tests passed) and that the solution build plan passes.\nSolve the exercises (You can check https://github.com/ls1intum/Artemis/tree/develop/src/main/resources/templates in case you need some help ;-))\n\nNote: The new programming languages are only supported with Bamboo, so make sure to use TS1 or TS3 when testing.\nTest Coverage\n\n\nExerciseService.java: 85%\nprogramming-exercise.component.ts 95%\n\nScreenshots", "createdAt": "2020-10-15T20:24:09Z", "url": "https://github.com/ls1intum/Artemis/pull/2211", "merged": true, "mergeCommit": {"oid": "8aa73283089fcb3c6cba833e36fb55faec7c128a"}, "closed": true, "closedAt": "2020-10-20T00:18:46Z", "author": {"login": "sleiss"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS3tm6AH2gAyNTA0MzY3NjExOjIwZDJiZTZmMDU4YzY2NzIzMDJmNjg2ZGZkYzk1NGZmOTM0MmZiODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUNeowgFqTUxMjI0NTg0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "20d2be6f058c6672302f686dfdc954ff9342fb86", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/20d2be6f058c6672302f686dfdc954ff9342fb86", "committedDate": "2020-10-15T20:22:28Z", "message": "Add kotlin template, prepare for Assembler & VHDL."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fb2793310e2df20dace066d95ea0d91382a2afd", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/0fb2793310e2df20dace066d95ea0d91382a2afd", "committedDate": "2020-10-15T23:07:33Z", "message": "Add VHDL template."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef78567499117c5ddeb16e00aee05998f508d35d", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/ef78567499117c5ddeb16e00aee05998f508d35d", "committedDate": "2020-10-15T23:10:59Z", "message": "Add VHDL assignment checkout repo path."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b8219569fb4fee552bc31a7911f4d95b9fa1242", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/6b8219569fb4fee552bc31a7911f4d95b9fa1242", "committedDate": "2020-10-15T23:16:33Z", "message": "Rename VHDL Makefiles and .gitignore files."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0838f129b2e7a9a4f916c1a3ac1dee3827af574d", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/0838f129b2e7a9a4f916c1a3ac1dee3827af574d", "committedDate": "2020-10-15T23:37:13Z", "message": "Add Assembler template."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "151572724297f1822980cff02d8f227355fe3af9", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/151572724297f1822980cff02d8f227355fe3af9", "committedDate": "2020-10-16T00:03:04Z", "message": "Merge branch 'develop' into feature/additional-programming-languages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/eed668f08294417c73599010e68fbac048c35eb2", "committedDate": "2020-10-17T18:32:36Z", "message": "Add kotlin template tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc0e2fb14218da72922b60db4ce3f7efb5224b5a", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/dc0e2fb14218da72922b60db4ce3f7efb5224b5a", "committedDate": "2020-10-17T20:39:25Z", "message": "Fix comment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMDEzNzYw", "url": "https://github.com/ls1intum/Artemis/pull/2211#pullrequestreview-511013760", "createdAt": "2020-10-17T20:40:05Z", "commit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QyMDo0MDowNlrOHjfttg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QyMDo0MDowNlrOHjfttg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTgxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        default -> throw new IllegalArgumentException(\"No build stage setup for programming language \" + programmingLanguage);\n          \n      \n    \n    \n  \n\nWe should delete this to let the compiler check the correctness, I think this would be better.", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r506981814", "createdAt": "2020-10-17T20:40:06Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanService.java", "diffHunk": "@@ -183,6 +183,26 @@ private Stage createBuildStage(ProgrammingLanguage programmingLanguage, final bo\n                 tasks.add(0, checkoutTask);\n                 return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n             }\n+            case VHDL -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n+                    defaultJob.dockerConfiguration(new DockerConfiguration().image(\"tizianleonhardt/era-artemis-vhdl:latest\"));\n+                }\n+                final var testParserTask = new TestParserTask(TestParserTaskProperties.TestType.JUNIT).resultDirectories(\"**/result.xml\");\n+                var tasks = readScriptTasksFromTemplate(programmingLanguage, sequentialBuildRuns);\n+                tasks.add(0, checkoutTask);\n+                return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n+            }\n+            case ASSEMBLER -> {\n+                // Do not run the builds in extra docker containers if the dev-profile is active\n+                if (!activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT)) {\n+                    defaultJob.dockerConfiguration(new DockerConfiguration().image(\"tizianleonhardt/era-artemis-assembler:latest\"));\n+                }\n+                final var testParserTask = new TestParserTask(TestParserTaskProperties.TestType.JUNIT).resultDirectories(\"**/result.xml\");\n+                var tasks = readScriptTasksFromTemplate(programmingLanguage, sequentialBuildRuns);\n+                tasks.add(0, checkoutTask);\n+                return defaultStage.jobs(defaultJob.tasks(tasks.toArray(new Task[0])).finalTasks(testParserTask));\n+            }\n             default -> throw new IllegalArgumentException(\"No build stage setup for programming language \" + programmingLanguage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMDEzNzkw", "url": "https://github.com/ls1intum/Artemis/pull/2211#pullrequestreview-511013790", "createdAt": "2020-10-17T20:40:33Z", "commit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QyMDo0MDozNFrOHjft6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QyMDo0MDozNFrOHjft6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                default -> throw new IllegalArgumentException(\"Repository checkout path for assignment repo has not yet been defined for \" + language);", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r506981864", "createdAt": "2020-10-17T20:40:34Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "diffHunk": "@@ -237,7 +237,7 @@\n             @Override\n             public String forProgrammingLanguage(ProgrammingLanguage language) {\n                 return switch (language) {\n-                    case JAVA, PYTHON, C, HASKELL -> Constants.ASSIGNMENT_CHECKOUT_PATH;\n+                    case JAVA, PYTHON, C, HASKELL, KOTLIN, VHDL, ASSEMBLER -> Constants.ASSIGNMENT_CHECKOUT_PATH;\n                     default -> throw new IllegalArgumentException(\"Repository checkout path for assignment repo has not yet been defined for \" + language);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMDEzNzk5", "url": "https://github.com/ls1intum/Artemis/pull/2211#pullrequestreview-511013799", "createdAt": "2020-10-17T20:40:41Z", "commit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QyMDo0MDo0MVrOHjft8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QyMDo0MDo0MVrOHjft8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk4MTg3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                default -> throw new IllegalArgumentException(\"Repository checkout path for test repo has not yet been defined for \" + language);", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r506981873", "createdAt": "2020-10-17T20:40:41Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/ContinuousIntegrationService.java", "diffHunk": "@@ -247,8 +247,8 @@ public String forProgrammingLanguage(ProgrammingLanguage language) {\n             @Override\n             public String forProgrammingLanguage(ProgrammingLanguage language) {\n                 return switch (language) {\n-                    case JAVA, PYTHON, HASKELL -> \"\";\n-                    case C -> Constants.TESTS_CHECKOUT_PATH;\n+                    case JAVA, PYTHON, HASKELL, KOTLIN -> \"\";\n+                    case C, VHDL, ASSEMBLER -> Constants.TESTS_CHECKOUT_PATH;\n                     default -> throw new IllegalArgumentException(\"Repository checkout path for test repo has not yet been defined for \" + language);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eed668f08294417c73599010e68fbac048c35eb2"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf0b81e90f7c61472760e948d3527dff5119aadb", "author": {"user": {"login": "krusche", "name": "Stephan Krusche"}}, "url": "https://github.com/ls1intum/Artemis/commit/bf0b81e90f7c61472760e948d3527dff5119aadb", "committedDate": "2020-10-19T08:45:17Z", "message": "Merge branch 'develop' into feature/additional-programming-languages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "352e64d7277eef3f37e3b0b0d6a33d8fb16b989b", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/352e64d7277eef3f37e3b0b0d6a33d8fb16b989b", "committedDate": "2020-10-19T18:42:02Z", "message": "Remove default cases from switch(ProgrammingLanguage)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b937202fcc2543f575bb03b8185d48fae0fb159f", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/b937202fcc2543f575bb03b8185d48fae0fb159f", "committedDate": "2020-10-19T18:43:17Z", "message": "Merge remote-tracking branch 'origin/feature/additional-programming-languages' into feature/additional-programming-languages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcf4ac14a30000118173fad1c97821ed5d0bb6b9", "author": {"user": {"login": "krusche", "name": "Stephan Krusche"}}, "url": "https://github.com/ls1intum/Artemis/commit/dcf4ac14a30000118173fad1c97821ed5d0bb6b9", "committedDate": "2020-10-19T23:33:52Z", "message": "Merge branch 'develop' into feature/additional-programming-languages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d7f64c452e75cf4d273299f373ebe30388bd304", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/1d7f64c452e75cf4d273299f373ebe30388bd304", "committedDate": "2020-10-19T23:39:34Z", "message": "Merge branch 'develop' into feature/additional-programming-languages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d2e45d3fbc08eb9a3cf10a497ca3b37ad0d493c", "author": {"user": {"login": "sleiss", "name": "Simon Lei\u00df"}}, "url": "https://github.com/ls1intum/Artemis/commit/4d2e45d3fbc08eb9a3cf10a497ca3b37ad0d493c", "committedDate": "2020-10-19T23:50:47Z", "message": "Revert removal of default branch."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61e5e8d496082b941d7779e59a071105c2cf3ed2", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/61e5e8d496082b941d7779e59a071105c2cf3ed2", "committedDate": "2020-10-19T23:51:37Z", "message": "fix compile issues, warnings and refactor duplicated code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/c9902085ebebce1ef2e12d65c6879491092956e7", "committedDate": "2020-10-19T23:53:42Z", "message": "Merge branch 'feature/additional-programming-languages' of https://github.com/ls1intum/Artemis into feature/additional-programming-languages\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooBuildPlanService.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMjQyMTMx", "url": "https://github.com/ls1intum/Artemis/pull/2211#pullrequestreview-512242131", "createdAt": "2020-10-20T00:06:34Z", "commit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDowNjozNVrOHkl5Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDowNjozNVrOHkl5Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzMTYyNw==", "bodyText": "Just as a small note: I believe Kotlin handles Identifiers differently to Java and is way more permissive. I don't know if this applies to package names, but it is quite likely that different rules apply (different character groups, whitespace, and keywords). However, I don't think that the package names are that different in practice, so we should be fine here for now (we should keep that in mind though).", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r508131627", "createdAt": "2020-10-20T00:06:35Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseResource.java", "diffHunk": "@@ -308,8 +308,8 @@ public ProgrammingExerciseResource(ProgrammingExerciseRepository programmingExer\n         }\n \n         // Check if package name is set\n-        if (programmingExercise.getProgrammingLanguage() == ProgrammingLanguage.JAVA) {\n-            // only Java needs a valid package name at the moment\n+        if (programmingExercise.getProgrammingLanguage() == ProgrammingLanguage.JAVA || programmingExercise.getProgrammingLanguage() == ProgrammingLanguage.KOTLIN) {\n+            // only Java and Kotlin need a valid package name at the moment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMjQzNzA5", "url": "https://github.com/ls1intum/Artemis/pull/2211#pullrequestreview-512243709", "createdAt": "2020-10-20T00:11:18Z", "commit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxMToxOFrOHkl-pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxMToxOFrOHkl-pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzMzAzMQ==", "bodyText": "Maybe we could just add a new line here so git is not complaining.", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r508133031", "createdAt": "2020-10-20T00:11:18Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/resources/templates/assembler/test/compileTest.py", "diffHunk": "@@ -0,0 +1,43 @@\n+from junit_xml import TestSuite, TestCase\n+import subprocess\n+import argparse\n+\n+#Export JUnit result\n+def export_junit(retCode: int, msg: str, testName: str = 'Compile'):\n+    tc = TestCase(testName)\n+\n+    if retCode != 0:\n+        tc.add_failure_info(message=msg)\n+    ts = TestSuite(\"ERA Tester\", [tc])\n+    with open('result.xml', 'w') as f:\n+        TestSuite.to_file(f, [ts], prettyprint=False)\n+\n+\n+makefilePath: str\n+makeTarget: str\n+\n+#Set up argument parsing\n+parser = argparse.ArgumentParser(description='Calls make in the given directory, captures the output, and produces a JUnit report.')\n+\n+parser.add_argument('path', metavar='path', type=str, help=\"Path to makefile\")\n+parser.add_argument('--target', metavar='x', type=str, help = \"Target for make\", default=\"all\")\n+parser.add_argument('--timeout', metavar='y', type=int, help = \"Timeout for running make in seconds\", default=10)\n+\n+args = parser.parse_args()\n+\n+#Run make with subprocess\n+makeArgs = [\"make\", \"-C\", args.path, args.target]\n+print(f\"Running make with arguments: {makeArgs}\\nTimeout is {args.timeout} seconds\")\n+\n+#Check for timeouts\n+try:\n+    res = subprocess.run(makeArgs, capture_output=True, timeout=args.timeout)\n+except subprocess.TimeoutExpired:\n+    print(\"Time for make exceeded!\")\n+    export_junit(1, f\"Time for make exceeded, timeout was set at {args.timeout} seconds.\")\n+except OSError:\n+    print(\"OSError ecountered!\")\n+    export_junit(1, \"OSError ecountered - please contact us.\")\n+else:\n+    stderr = res.stderr.decode(\"utf-8\")\n+    export_junit(res.returncode, f\"Make exited with return code {res.returncode}.\\n---stderr---\\n{stderr}-----------\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMjQ1MzQ2", "url": "https://github.com/ls1intum/Artemis/pull/2211#pullrequestreview-512245346", "createdAt": "2020-10-20T00:16:21Z", "commit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMjQ1ODM2", "url": "https://github.com/ls1intum/Artemis/pull/2211#pullrequestreview-512245836", "createdAt": "2020-10-20T00:17:56Z", "commit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxNzo1NlrOHkmF6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxNzo1NlrOHkmF6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNDg4OA==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'runTemplateTests_kotlin_exercise' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r508134888", "createdAt": "2020-10-20T00:17:56Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseTemplateIntegrationTest.java", "diffHunk": "@@ -142,6 +143,38 @@ public void runTemplateTests_java_solution() throws Exception {\n         assertThat(testResults).containsExactlyInAnyOrderEntriesOf(Map.of(TestResult.SUCCESSFUL, 13));\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void runTemplateTests_kotlin_exercise() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMjQ1ODQx", "url": "https://github.com/ls1intum/Artemis/pull/2211#pullrequestreview-512245841", "createdAt": "2020-10-20T00:17:57Z", "commit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxNzo1N1rOHkmF8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxNzo1N1rOHkmF8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNDg5Ng==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'runTemplateTests_kotlin_solution' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2211#discussion_r508134896", "createdAt": "2020-10-20T00:17:57Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseTemplateIntegrationTest.java", "diffHunk": "@@ -142,6 +143,38 @@ public void runTemplateTests_java_solution() throws Exception {\n         assertThat(testResults).containsExactlyInAnyOrderEntriesOf(Map.of(TestResult.SUCCESSFUL, 13));\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void runTemplateTests_kotlin_exercise() throws Exception {\n+        exercise.setProgrammingLanguage(ProgrammingLanguage.KOTLIN);\n+\n+        mockConnectorRequestsForSetup(exercise);\n+        request.postWithResponseBody(ROOT + SETUP, exercise, ProgrammingExercise.class, HttpStatus.CREATED);\n+\n+        moveAssignmentSourcesOf(exerciseRepo);\n+        int exitCode = invokeMaven();\n+        assertThat(exitCode).isNotEqualTo(0);\n+\n+        var testResults = readTestReports();\n+        assertThat(testResults).containsExactlyInAnyOrderEntriesOf(Map.of(TestResult.FAILED, 12));\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void runTemplateTests_kotlin_solution() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9902085ebebce1ef2e12d65c6879491092956e7"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3829, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}