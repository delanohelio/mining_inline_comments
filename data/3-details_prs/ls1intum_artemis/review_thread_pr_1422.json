{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MDYzMjYz", "number": 1422, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTo0NToyMlrOD6T0Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTozMTozNFrOD7Bo1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDY4NjU4OnYy", "diffSide": "LEFT", "path": ".gitignore", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTo0NToyMlrOGSE0vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNTo0NToyMlrOGSE0vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYwNjU4OA==", "bodyText": "Please restore this file.", "url": "https://github.com/ls1intum/Artemis/pull/1422#discussion_r421606588", "createdAt": "2020-05-07T15:45:22Z", "author": {"login": "sleiss"}, "path": ".gitignore", "diffHunk": "@@ -1,173 +0,0 @@\n-######################", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14e7e0babac9a17fb8355950a010aab89d5e59b3"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjE5NDEzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQyMTozMTozNFrOGTHwiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjoxMjoyN1rOGTZjfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwMzI0MA==", "bodyText": "Is this the desired behavior?\nWouldn't it be preferred to have all elements at the needed height and not require scrolling here?", "url": "https://github.com/ls1intum/Artemis/pull/1422#discussion_r422703240", "createdAt": "2020-05-10T21:31:34Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -42,6 +42,16 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n      */\n     ngAfterViewInit(): void {\n         this.textareaElement = this.textareaRef.nativeElement as HTMLTextAreaElement;\n+        setTimeout(() => this.textareaOnloadSize());\n+    }\n+\n+    /**\n+     * Increase size of text area on page load to a max of 55px, depending on content\n+     */\n+    textareaOnloadSize(): void {\n+        this.textareaElement.style.height = '0px';\n+        this.textareaElement.style.height = `${this.textareaElement.scrollHeight}px`;\n+        this.textareaElement.style.height = this.textareaElement.scrollHeight > 55 ? '55px' : `${this.textareaElement.scrollHeight}px`;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ba5814da910f8e0a09f9f878287f2dac222fa4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNDE0NA==", "bodyText": "Yes. I used @filip-gregurevic suggestion (see the comment above)j, to let it expand to a certain height and if less text is entered (<2 lines), then only this (1 line e.g.) is shown. Would you prefer a different behaviour? The second line in the method seems to be redundant though (deleted that in new push)", "url": "https://github.com/ls1intum/Artemis/pull/1422#discussion_r422704144", "createdAt": "2020-05-10T21:39:42Z", "author": {"login": "tessaRuckstuhl"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -42,6 +42,16 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n      */\n     ngAfterViewInit(): void {\n         this.textareaElement = this.textareaRef.nativeElement as HTMLTextAreaElement;\n+        setTimeout(() => this.textareaOnloadSize());\n+    }\n+\n+    /**\n+     * Increase size of text area on page load to a max of 55px, depending on content\n+     */\n+    textareaOnloadSize(): void {\n+        this.textareaElement.style.height = '0px';\n+        this.textareaElement.style.height = `${this.textareaElement.scrollHeight}px`;\n+        this.textareaElement.style.height = this.textareaElement.scrollHeight > 55 ? '55px' : `${this.textareaElement.scrollHeight}px`;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwMzI0MA=="}, "originalCommit": {"oid": "f8ba5814da910f8e0a09f9f878287f2dac222fa4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwODQyMQ==", "bodyText": "So you are using this more than I am, so I am open to everything. :)\nMy personal preference is to reduce scrolling within scrollable content as much as possible.", "url": "https://github.com/ls1intum/Artemis/pull/1422#discussion_r422708421", "createdAt": "2020-05-10T22:19:39Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -42,6 +42,16 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n      */\n     ngAfterViewInit(): void {\n         this.textareaElement = this.textareaRef.nativeElement as HTMLTextAreaElement;\n+        setTimeout(() => this.textareaOnloadSize());\n+    }\n+\n+    /**\n+     * Increase size of text area on page load to a max of 55px, depending on content\n+     */\n+    textareaOnloadSize(): void {\n+        this.textareaElement.style.height = '0px';\n+        this.textareaElement.style.height = `${this.textareaElement.scrollHeight}px`;\n+        this.textareaElement.style.height = this.textareaElement.scrollHeight > 55 ? '55px' : `${this.textareaElement.scrollHeight}px`;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwMzI0MA=="}, "originalCommit": {"oid": "f8ba5814da910f8e0a09f9f878287f2dac222fa4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk5NDgxMg==", "bodyText": "That's true.\nAs the text area expands (and stays expanded) while editing and only reduces in size on reopening, scrolling is reduced anyways. Though when reopening and decreasing the text box sizes, it lets everyting appear very structured and clear. So I think this is a nice compromise :).", "url": "https://github.com/ls1intum/Artemis/pull/1422#discussion_r422994812", "createdAt": "2020-05-11T12:12:27Z", "author": {"login": "tessaRuckstuhl"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -42,6 +42,16 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n      */\n     ngAfterViewInit(): void {\n         this.textareaElement = this.textareaRef.nativeElement as HTMLTextAreaElement;\n+        setTimeout(() => this.textareaOnloadSize());\n+    }\n+\n+    /**\n+     * Increase size of text area on page load to a max of 55px, depending on content\n+     */\n+    textareaOnloadSize(): void {\n+        this.textareaElement.style.height = '0px';\n+        this.textareaElement.style.height = `${this.textareaElement.scrollHeight}px`;\n+        this.textareaElement.style.height = this.textareaElement.scrollHeight > 55 ? '55px' : `${this.textareaElement.scrollHeight}px`;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwMzI0MA=="}, "originalCommit": {"oid": "f8ba5814da910f8e0a09f9f878287f2dac222fa4"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 145, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}