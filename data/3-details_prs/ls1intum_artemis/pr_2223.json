{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MzcwNDUy", "number": 2223, "title": "[Enhancement] Manual Result based on Automatic Result + Enable Result score > 100% for all Exercises types", "bodyText": "Checklist\n\n I tested all changes and all related features with different users (student, tutor, instructor, admin) on the test server https://artemistest.ase.in.tum.de.\n Server: I added multiple integration tests (Spring) related to the features (with a high test coverage)\n Client: I documented the TypeScript code using JSDoc style.\n Client: I added multiple integration tests (Jest) related to the features (with a high test coverage)\n Client: I added multiple screenshots/screencasts of my UI changes\n\nMotivation and Context\n\n\nWe want to connect to automatic feedback into the manual result, so that the tutor and student have the full range of feedback and the score is calculated overall the feedback. Additionally this PR enables results with a score > 100% for all exercise types.\nTest Coverage\n\n\ncode-editor-tutor-assessment-container.component.ts: 83.17%\nProgrammingExerciseGradingService.java: 96%\nGradingCriterionService.java: 85%\nAssessmentService.java: 76%\nProgrammingAssessmentService.java: 89%\n\nDescription\n\n\nAdd automatic feedback into manual result\nSet credits of automatic feedback to 0, it it does not have credits set\nAdapt check that feedbacks must contain detail text\nSet feedback to positive if it has credits > 0\nEnable test case names for result dialog for assessment view\nEnable results >100% for all exercise types\nProperly count the totalScore of all feedback elements (especially for programming exercise)\nAfter reevaluation after configure grading, also manual result is updated\nChange manual result AssessmentType from MANUAL to SEMI_AUTOMATIC\n\nSteps for Testing\n\nFileUpload, Modeling, Text:\n\nLog in to Artemis\nNavigate to Course Administration\nCreate Text, Modeling, File Upload exercises with bonus points and participate\nAssess the exercises and give enough points to check if the max points are capped by max score + bonus points of exercise (try also SGI)\n4.1 Play around with the points you give and see if everything behaves as expected\nResult label should display then a result > 100% (also from students view) when you gave more than the maxScore.\n\nProgramming Exercises:\n\nLog in to Artemis\nNavigate to Course Administration\nCreate programming exercises with bonus points (with SCA and one without SCA) and participate (write only Collections.sort(input) to BubbleSort.java to only solve 1 test case, for SCA you get 3 issue of category Code Style (Magic Number issues))\nAssess programming exercise and click afterwards on result label to see if manual result contains automatic feedback and test case names\nNOTE: Positive automatic result, will count into the score calculation but will not be displayed in the result dialog\n4.1 Check for SCA that points are deducted, if in the category in configure grading is set to graded with penalties\n4.2 Check that the max points are capped by max score + bonus points of exercise\n4.3 Try also out SGI\nCheck also student view (students should not see test case names)\nChange values in configure grading and check that the automatic and manual result are updated accordingly\n6.1 NO manual result  feedback must be lost (referenced, unreferenced and general feedback)\n\nExamples to check if the result is calculated correctly for a exercise with maxScore=100 and bonusPoints=10:\nProgramming exercise without SCA but tested with SGI (one SGI is restricted to counted only 2 times, but was applied 3 times) and with Configure grading for Test Cases:\nCalculation => 7,69 Points for 1 successful test case + 100 Points for successful test case + 4 Points for SGI feedback (third is not counted as SGI is restricted to 2) - 3 Points normal manual feedback = 108,69 Points\nConfigure Grading View:\n\nAssessment View:\n\nProgramming exercise with SCA and Configure grading for SCA:\nCalculation => 7,69 Points for 1 successful test case + 103 Points given per manual assessment  - 3 Points for SCA = 107,69 Points\nConfigure Grading View:\n\nAssessment View:\n\nScreenshots\n\n\nPositive manual feedback and test case names in assessment view:\n\nResult details view from student perspective (no test case names but positive manual feedback):", "createdAt": "2020-10-18T00:55:43Z", "url": "https://github.com/ls1intum/Artemis/pull/2223", "merged": true, "mergeCommit": {"oid": "ddc00366ee8b3f5d46c69974b1b28cb62e185296"}, "closed": true, "closedAt": "2020-10-24T21:58:43Z", "author": {"login": "fde312"}, "timelineItems": {"totalCount": 74, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTjkfiAH2gAyNTA1MzcwNDUyOmZkNWUwZTljZTNhMmIxMGM1MjM1YzZkN2ZhNDg2YzIxY2Y1YmMyYjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVyefSAFqTUxNjMwOTg1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fd5e0e9ce3a2b10c5235c6d7fa486c21cf5bc2b1", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/fd5e0e9ce3a2b10c5235c6d7fa486c21cf5bc2b1", "committedDate": "2020-10-17T23:28:20Z", "message": "connect automatic feedback to manual result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd5044f7c941c354218db8b68756c3bfb59a73fb", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/bd5044f7c941c354218db8b68756c3bfb59a73fb", "committedDate": "2020-10-17T23:28:55Z", "message": "add also test case names to result dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45490d821e57a5b7ef8516e0fe3e375260f48f67", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/45490d821e57a5b7ef8516e0fe3e375260f48f67", "committedDate": "2020-10-18T00:50:04Z", "message": "make the check on server instead of client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7872f3ac9663ebc5dcf05084c0b528f0bfc2408d", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/7872f3ac9663ebc5dcf05084c0b528f0bfc2408d", "committedDate": "2020-10-18T00:50:32Z", "message": "set feedback positive if credits are positive"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b032269d18a09bfbc8bc5db16210c5d15aef980f", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/b032269d18a09bfbc8bc5db16210c5d15aef980f", "committedDate": "2020-10-18T00:52:15Z", "message": "run spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMDI0OTA2", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-511024906", "createdAt": "2020-10-18T00:59:24Z", "commit": {"oid": "b032269d18a09bfbc8bc5db16210c5d15aef980f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwMDo1OToyNFrOHjg5jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwMDo1OToyNFrOHjg5jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAwMTIyOQ==", "bodyText": "This is the score/credits for failed test cases. I added this here as I was not sure if it is better to add it somewhere at the updateResult method of ProgrammingExerciseGradingService.java\n@kloessst @schultek what do you think?", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r507001229", "createdAt": "2020-10-18T00:59:24Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts", "diffHunk": "@@ -114,6 +115,17 @@ export class CodeEditorTutorAssessmentContainerComponent implements OnInit, OnDe\n                     this.automaticResult = this.getLatestAutomaticResult(this.participation.results);\n                     this.manualResult = this.getLatestManualResult(this.participation.results);\n \n+                    // Setup automatic feedback, set or round credits and set detailText if not already set\n+                    this.automaticFeedback = this.automaticResult?.feedbacks!;\n+                    this.automaticFeedback.forEach((feedback) => {\n+                        feedback.id = undefined;\n+                        if (feedback.credits) {\n+                            feedback.credits = Math.round(feedback.credits);\n+                        } else {\n+                            feedback.credits = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b032269d18a09bfbc8bc5db16210c5d15aef980f"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36228cb384ce789a388034d26d7bd311c482af32", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/36228cb384ce789a388034d26d7bd311c482af32", "committedDate": "2020-10-18T01:53:30Z", "message": "try to fix client tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8df9aff915ef47a372f67146ca5b4d4710de8645", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/8df9aff915ef47a372f67146ca5b4d4710de8645", "committedDate": "2020-10-18T02:14:54Z", "message": "try to fix server tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6757078d77833be621075dcea68c1ed2fa3ab78d", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/6757078d77833be621075dcea68c1ed2fa3ab78d", "committedDate": "2020-10-18T02:16:50Z", "message": "run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "708b041777d57b6a9b628a5987af2684997d9f8c", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/708b041777d57b6a9b628a5987af2684997d9f8c", "committedDate": "2020-10-18T19:15:13Z", "message": "improve test coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a6c28af326e50696c82f5060a3d06748680db38", "author": {"user": {"login": "fde312", "name": "Francisco De las Casas Young"}}, "url": "https://github.com/ls1intum/Artemis/commit/2a6c28af326e50696c82f5060a3d06748680db38", "committedDate": "2020-10-18T20:32:24Z", "message": "Merge branch 'develop' into enhancement/programming-assessment/manual-result-based-on-automatic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNTkzMzIx", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-511593321", "createdAt": "2020-10-19T09:50:54Z", "commit": {"oid": "2a6c28af326e50696c82f5060a3d06748680db38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTo1MDo1NFrOHkGf7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTo1MDo1NFrOHkGf7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYxNzI2Mg==", "bodyText": "Unfortunately its not that easy \ud83d\ude05. With the extended score calculation with bonus points, sca penalties and max penalties we cannot just add the feedback credits to get the overall points. Also the score is in percent. I think we should let the server do the calculation here.", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r507617262", "createdAt": "2020-10-19T09:50:54Z", "author": {"login": "schultek"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts", "diffHunk": "@@ -396,7 +408,7 @@ export class CodeEditorTutorAssessmentContainerComponent implements OnInit, OnDe\n     }\n \n     private calculateTotalScore() {\n-        const feedbacks = [...this.referencedFeedback, ...this.unreferencedFeedback];\n+        const feedbacks = [...this.referencedFeedback, ...this.unreferencedFeedback, ...this.automaticFeedback];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a6c28af326e50696c82f5060a3d06748680db38"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMjM3NDg4", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-512237488", "createdAt": "2020-10-19T23:53:24Z", "commit": {"oid": "2a6c28af326e50696c82f5060a3d06748680db38"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMzo1MzoyNFrOHklpsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMzo1MzoyNFrOHklpsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEyNzY2Ng==", "bodyText": "But if we round the credits per automatic feedback, it no longer obeys the grading scheme defined in the test case and SCA section. This would make 0.51... into 1.0 and 0.49... into 0.0, right? I think this does not reflect fair grading and rounding already caused us enough trouble during the PGdP and EidI exams. My recommendation would be to just leave it as precise as possible, and maybe only display it better (or cut off / round up at some place far behind the dot).\nI don't think this will be much of a problem because very often the programming exercises never had \"nice\" credit number.", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r508127666", "createdAt": "2020-10-19T23:53:24Z", "author": {"login": "MaisiKoleni"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts", "diffHunk": "@@ -114,6 +115,17 @@ export class CodeEditorTutorAssessmentContainerComponent implements OnInit, OnDe\n                     this.automaticResult = this.getLatestAutomaticResult(this.participation.results);\n                     this.manualResult = this.getLatestManualResult(this.participation.results);\n \n+                    // Setup automatic feedback, set or round credits and set detailText if not already set\n+                    this.automaticFeedback = this.automaticResult?.feedbacks!;\n+                    this.automaticFeedback.forEach((feedback) => {\n+                        feedback.id = undefined;\n+                        if (feedback.credits) {\n+                            feedback.credits = Math.round(feedback.credits);\n+                        } else {\n+                            feedback.credits = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAwMTIyOQ=="}, "originalCommit": {"oid": "b032269d18a09bfbc8bc5db16210c5d15aef980f"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNDIzNzU3", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-512423757", "createdAt": "2020-10-20T07:50:52Z", "commit": {"oid": "2a6c28af326e50696c82f5060a3d06748680db38"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b2b6a565e6ceded8b9445029439223ac7af89b9", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/6b2b6a565e6ceded8b9445029439223ac7af89b9", "committedDate": "2020-10-20T11:21:21Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into enhancement/programming-assessment/manual-result-based-on-automatic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f45a80873ff92f76c5d518b28d8f0207f7cb6e36", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/f45a80873ff92f76c5d518b28d8f0207f7cb6e36", "committedDate": "2020-10-20T13:47:14Z", "message": "move calculation for structuredGradingInstruction to own service and enable results > 100% for all exercise types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92ec6b6c755ed5352a1109490c8c4db711fd671d", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/92ec6b6c755ed5352a1109490c8c4db711fd671d", "committedDate": "2020-10-20T13:48:28Z", "message": "add own calculation for the total score for programming exercises"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c69805343b0f6cb10688da58f096b919b444f91", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/5c69805343b0f6cb10688da58f096b919b444f91", "committedDate": "2020-10-20T13:55:04Z", "message": "check if bonus points are null"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a899d305e3fec55065f15de73932204e8d59e4ce", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/a899d305e3fec55065f15de73932204e8d59e4ce", "committedDate": "2020-10-20T16:58:17Z", "message": "include right calculation also for client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "632a06313bb448aefcdd6d5545f167e29689eaa6", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/632a06313bb448aefcdd6d5545f167e29689eaa6", "committedDate": "2020-10-20T16:58:28Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into enhancement/programming-assessment/manual-result-based-on-automatic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5889e0944d4e3de20d04b8501bf41b2d397c2985", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/5889e0944d4e3de20d04b8501bf41b2d397c2985", "committedDate": "2020-10-21T07:41:04Z", "message": "cap total score to max score also in client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22ffdc2e91cebaadbfd5368b5c4a35d8c071bb6f", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/22ffdc2e91cebaadbfd5368b5c4a35d8c071bb6f", "committedDate": "2020-10-21T11:21:12Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into enhancement/programming-assessment/manual-result-based-on-automatic\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/service/TextAssessmentService.java\n#\tsrc/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts\n#\tsrc/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-inline-feedback.component.ts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c86b42ead0b4122f21d48e8a296b4cd08ac31adf", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/c86b42ead0b4122f21d48e8a296b4cd08ac31adf", "committedDate": "2020-10-21T12:03:22Z", "message": "fix sgi bug for sever"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db6517d2f721584dedaed74ce26159a7bc54d37d", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/db6517d2f721584dedaed74ce26159a7bc54d37d", "committedDate": "2020-10-21T12:11:28Z", "message": "take SGI into account on client score calculation and extract calculation for SGI into own method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abd38c0a46fb20495ae1b143592f763689f95ca4", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/abd38c0a46fb20495ae1b143592f763689f95ca4", "committedDate": "2020-10-21T12:29:31Z", "message": "cap the totalScore also to max points + bonus points for the other exercises types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89ae3de1bda2949846838d0db7cdbeab134a75a0", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/89ae3de1bda2949846838d0db7cdbeab134a75a0", "committedDate": "2020-10-21T14:23:46Z", "message": "fix issue witch SGI calculation on client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbb4065a8f8b4660ce9589953e99ba9c1239fbc7", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/fbb4065a8f8b4660ce9589953e99ba9c1239fbc7", "committedDate": "2020-10-21T15:46:46Z", "message": "fix wrong selection of general feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c18787069a2323f0599310f23fd6b03a4ef373c6", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/c18787069a2323f0599310f23fd6b03a4ef373c6", "committedDate": "2020-10-21T15:47:28Z", "message": "update also manual result when grading of automatic tests or SCA is changed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61a7d41769e0772ebd2208e74146cbac01dddb8a", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/61a7d41769e0772ebd2208e74146cbac01dddb8a", "committedDate": "2020-10-21T15:52:40Z", "message": "run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35dc1f1606d322509b3a4609490852b0c5beb082", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/35dc1f1606d322509b3a4609490852b0c5beb082", "committedDate": "2020-10-21T18:38:30Z", "message": "try to fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97efe7a5bd666a0cfba6444e5499d152859ceaf4", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/97efe7a5bd666a0cfba6444e5499d152859ceaf4", "committedDate": "2020-10-21T20:03:30Z", "message": "change manual result from manual to semi_automatic on server"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9ed480fc005d5bacd75c8125e8ca976951e9581", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/d9ed480fc005d5bacd75c8125e8ca976951e9581", "committedDate": "2020-10-21T20:08:20Z", "message": "change manual result type from manual to semi_automatic on client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "318ba05939521b9a4c64acacd551c83db4cea847", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/318ba05939521b9a4c64acacd551c83db4cea847", "committedDate": "2020-10-21T20:09:32Z", "message": "run prettier and spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be28c49959961e86b686a19aeed7c0f95b41a75a", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/be28c49959961e86b686a19aeed7c0f95b41a75a", "committedDate": "2020-10-22T05:38:28Z", "message": "fix wrong test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb12e038ebf9a07c7e9cd317164c3c3f4206c505", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/bb12e038ebf9a07c7e9cd317164c3c3f4206c505", "committedDate": "2020-10-22T08:00:37Z", "message": "try to fix issue with deleting manual feedback after reevaulate configure grading"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f173cd3ed34f0378196d3275d34f107eaa97ca8c", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/f173cd3ed34f0378196d3275d34f107eaa97ca8c", "committedDate": "2020-10-22T23:20:08Z", "message": "fix nullpointer and extend test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bec1e9c8118a3e2cb2b45518e136f65cc6b9d5dc", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/bec1e9c8118a3e2cb2b45518e136f65cc6b9d5dc", "committedDate": "2020-10-22T23:51:04Z", "message": "fix docu issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82b9296bb7b63b279e4c91f4b96440f20161fa4b", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/82b9296bb7b63b279e4c91f4b96440f20161fa4b", "committedDate": "2020-10-22T23:53:46Z", "message": "fix issue that unreferenced and general feedback was deleted\nfix issue with wrong result string for manual results"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16e12c5ff588012b3d0d32847ea4253072dac348", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/16e12c5ff588012b3d0d32847ea4253072dac348", "committedDate": "2020-10-22T23:57:07Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into enhancement/programming-assessment/manual-result-based-on-automatic\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/domain/Feedback.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "447bac7c726dd3a7b89cb24c27aedf1d0baaa5ea", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/447bac7c726dd3a7b89cb24c27aedf1d0baaa5ea", "committedDate": "2020-10-23T02:30:49Z", "message": "fix another nullpointer\nset proper result score pro manual result\nrun spotless and small fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd4298ea81049ccbd401b6148c664b2830ddda46", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/bd4298ea81049ccbd401b6148c664b2830ddda46", "committedDate": "2020-10-23T02:40:39Z", "message": "fix failing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bc7ee731f3201a765dedc357951feec148231e4", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/6bc7ee731f3201a765dedc357951feec148231e4", "committedDate": "2020-10-23T11:32:18Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into enhancement/programming-assessment/manual-result-based-on-automatic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "937ff12c443c01281612b5a5bc32be34c63f2377", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/937ff12c443c01281612b5a5bc32be34c63f2377", "committedDate": "2020-10-23T12:44:07Z", "message": "fix nullpointers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c076d793dc2fce5a048f20e023987d66d8391892", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/c076d793dc2fce5a048f20e023987d66d8391892", "committedDate": "2020-10-23T12:44:44Z", "message": "move setup automatic feedback to handleFeedback()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8be9d136740c9f65ca1c353001f03a04b6a22be0", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/8be9d136740c9f65ca1c353001f03a04b6a22be0", "committedDate": "2020-10-23T13:45:39Z", "message": "fix issue with not updating result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f017857d71ba3f86ecc6cc3f805a47fb584d100b", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/f017857d71ba3f86ecc6cc3f805a47fb584d100b", "committedDate": "2020-10-23T14:10:14Z", "message": "improve code quality on server"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c0e9dbc9192c581a4785137ecadd31e30d6feb8", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/4c0e9dbc9192c581a4785137ecadd31e30d6feb8", "committedDate": "2020-10-23T14:28:44Z", "message": "improve code quality client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48bfb1af34b64604d31b976d70447e77daf32037", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/48bfb1af34b64604d31b976d70447e77daf32037", "committedDate": "2020-10-23T14:30:41Z", "message": "run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d51dab7e46ca17920d0fae634ca2d852e9a4ce1", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/4d51dab7e46ca17920d0fae634ca2d852e9a4ce1", "committedDate": "2020-10-23T14:43:14Z", "message": "remove not needed imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a29a9fa85de40e079514bb4472e8fb6a0c8a4255", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/a29a9fa85de40e079514bb4472e8fb6a0c8a4255", "committedDate": "2020-10-23T14:44:16Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into enhancement/programming-assessment/manual-result-based-on-automatic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1Nzk0OTM4", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-515794938", "createdAt": "2020-10-23T15:48:25Z", "commit": {"oid": "4d51dab7e46ca17920d0fae634ca2d852e9a4ce1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNTo0ODoyNVrOHnTnWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzoyNjozMlrOHnW6QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk3Nzg4Mg==", "bodyText": "Could this be simplified to return this.type != FeedbackType.AUTOMATIC. The null case is already covered by the second conditional.", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r510977882", "createdAt": "2020-10-23T15:48:25Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Feedback.java", "diffHunk": "@@ -226,6 +226,17 @@ public boolean isStaticCodeAnalysisFeedback() {\n         return this.text != null && this.text.startsWith(STATIC_CODE_ANALYSIS_FEEDBACK_IDENTIFIER) && this.type == FeedbackType.AUTOMATIC;\n     }\n \n+    /**\n+     * Checks whether the feedback is not an automatically generated feedback (test cases or SCA). We check for\n+     * manual (FeedbackType.MANUAL), unreferenced (FeedbackType.MANUAL_UNREFERENCED) and general (null) feedback.\n+     *\n+     * @return true if the it is not an automatically generated feedback else false\n+     */\n+    @JsonIgnore\n+    public boolean isNotAutomaticFeedback() {\n+        return this.type == null || this.type != FeedbackType.AUTOMATIC;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d51dab7e46ca17920d0fae634ca2d852e9a4ce1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk4Mzk3Ng==", "bodyText": "Why do you expect that one more result is updated? I don't see where the setup was changed.", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r510983976", "createdAt": "2020-10-23T15:58:24Z", "author": {"login": "kloessst"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseGradingServiceTest.java", "diffHunk": "@@ -420,7 +423,7 @@ public void shouldReEvaluateScoreOfTheCorrectResults() throws Exception {\n         // re-evaluate\n         final var endpoint = ProgrammingExerciseGradingResource.RE_EVALUATE.replace(\"{exerciseId}\", programmingExercise.getId().toString());\n         final var response = request.putWithResponseBody(ROOT + endpoint, \"{}\", Integer.class, HttpStatus.OK);\n-        assertThat(response).isEqualTo(6);\n+        assertThat(response).isEqualTo(7);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d51dab7e46ca17920d0fae634ca2d852e9a4ce1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk5NTYyNw==", "bodyText": "What is the plus doing here?", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r510995627", "createdAt": "2020-10-23T16:18:16Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exercises/programming/assess/code-editor-tutor-assessment-container.component.ts", "diffHunk": "@@ -398,7 +410,38 @@ export class CodeEditorTutorAssessmentContainerComponent implements OnInit, OnDe\n     }\n \n     private calculateTotalScore() {\n-        const feedbacks = [...this.referencedFeedback, ...this.unreferencedFeedback];\n-        this.totalScore = this.structuredGradingCriterionService.computeTotalScore(feedbacks);\n+        const feedbacks = [...this.referencedFeedback, ...this.unreferencedFeedback, ...this.automaticFeedback];\n+        const maxPoints = this.exercise.maxScore! + this.exercise.bonusPoints! ?? 0.0;\n+        let totalScore = 0.0;\n+        let scoreAutomaticTests = 0.0;\n+        const gradingInstructions = {}; // { instructionId: noOfEncounters }\n+\n+        feedbacks.forEach((feedback) => {\n+            // Check for feedback from automatic tests and store them separately\n+            if (feedback.type === FeedbackType.AUTOMATIC && !Feedback.isStaticCodeAnalysisFeedback(feedback)) {\n+                scoreAutomaticTests += feedback.credits!;\n+            } else {\n+                if (feedback.gradingInstruction) {\n+                    totalScore = this.structuredGradingCriterionService.calculateScoreForGradingInstructions(feedback, totalScore, gradingInstructions);\n+                } else {\n+                    totalScore += feedback.credits!;\n+                }\n+            }\n+        });\n+\n+        // Cap automatic test feedback to maxScore + bonus points of exercise\n+        if (scoreAutomaticTests > maxPoints) {\n+            scoreAutomaticTests = maxPoints;\n+        }\n+        totalScore += scoreAutomaticTests;\n+        // Do not allow negative score\n+        if (totalScore < 0) {\n+            totalScore = 0;\n+        }\n+        // Cap totalScore to maxPoints\n+        if (totalScore > maxPoints) {\n+            totalScore = maxPoints;\n+        }\n+        this.totalScore = +totalScore.toFixed(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d51dab7e46ca17920d0fae634ca2d852e9a4ce1"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAxMzk2NQ==", "bodyText": "Could you use feedback.type == FeedbackType.AUTOMATIC instead of a double negation.", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r511013965", "createdAt": "2020-10-23T16:51:52Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -453,7 +483,7 @@ private void removeAllTestCaseFeedbackAndSetScoreToZero(Result result, List<Feed\n      * @return true if there is no feedback for a given test.\n      */\n     private Predicate<ProgrammingExerciseTestCase> wasNotExecuted(Result result) {\n-        return testCase -> result.getFeedbacks().stream().noneMatch(feedback -> feedback.getText().equals(testCase.getTestName()));\n+        return testCase -> result.getFeedbacks().stream().noneMatch(feedback -> !feedback.isNotAutomaticFeedback() && feedback.getText().equals(testCase.getTestName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d51dab7e46ca17920d0fae634ca2d852e9a4ce1"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyMzEwNQ==", "bodyText": "I think I've seen this exact calculation also in the client gradingCriterionService. Could this be unified somehow? I guess it was always like this.", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r511023105", "createdAt": "2020-10-23T17:09:30Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AssessmentService.java", "diffHunk": "@@ -232,34 +239,11 @@ public double calculateTotalScore(Double calculatedScore, Double maxScore) {\n      */\n     public Double calculateTotalScore(List<Feedback> assessments) {\n         double totalScore = 0.0;\n-\n         var gradingInstructions = new HashMap<Long, Integer>(); // { instructionId: noOfEncounters }\n+\n         for (Feedback feedback : assessments) {\n             if (feedback.getGradingInstruction() != null) {\n-                if (gradingInstructions.get(feedback.getGradingInstruction().getId()) != null) {\n-                    // We Encountered this grading instruction before\n-                    var maxCount = feedback.getGradingInstruction().getUsageCount();\n-                    var encounters = gradingInstructions.get(feedback.getGradingInstruction().getId());\n-                    if (maxCount > 0) {\n-                        if (encounters >= maxCount) {\n-                            // the structured grading instruction was applied on assessment models more often that the usageCount limit allows so we don't sum the feedback credit\n-                            gradingInstructions.put(feedback.getGradingInstruction().getId(), encounters + 1);\n-                        }\n-                        else {\n-                            // the usageCount limit was not exceeded yet so we add the credit and increase the nrOfEncounters counter\n-                            gradingInstructions.put(feedback.getGradingInstruction().getId(), encounters + 1);\n-                            totalScore += feedback.getGradingInstruction().getCredits();\n-                        }\n-                    }\n-                    else {\n-                        totalScore += feedback.getCredits();\n-                    }\n-                }\n-                else {\n-                    // First time encountering the grading instruction\n-                    gradingInstructions.put(feedback.getGradingInstruction().getId(), 1);\n-                    totalScore += feedback.getCredits();\n-                }\n+                totalScore = gradingCriterionService.computeTotalScore(feedback, totalScore, gradingInstructions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d51dab7e46ca17920d0fae634ca2d852e9a4ce1"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyMzU1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public double computeTotalScore(Feedback feedback, double totalScore, HashMap<Long, Integer> gradingInstructions) {\n          \n          \n            \n                public double computeTotalScore(Feedback feedback, double totalScore, Map<Long, Integer> gradingInstructions) {", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r511023553", "createdAt": "2020-10-23T17:10:24Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/GradingCriterionService.java", "diffHunk": "@@ -46,4 +48,39 @@ public GradingCriterion findOne(long gradingCriterionId) {\n         return gradingCriterionRepository.findByExerciseIdWithEagerGradingCriteria(exerciseId);\n     }\n \n+    /**\n+     * Calculates the score over all feedback elements that were set using structured grading instructions (SGI)\n+     * @param feedback feedback element that was set by SGI\n+     * @param totalScore totalScore which is summed up. Starts from 0.0\n+     * @param gradingInstructions empty grading instruction Map to collect the used gradingInstructions\n+     * @return calculated total score from feedback elements set by SGI\n+     */\n+    public double computeTotalScore(Feedback feedback, double totalScore, HashMap<Long, Integer> gradingInstructions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d51dab7e46ca17920d0fae634ca2d852e9a4ce1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyNDY5Nw==", "bodyText": "If the parameter totalScore is always zero, then it doesn't make sense to have it as a parameter. I would suggest to remove it from the signature and provide it as a local variable.", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r511024697", "createdAt": "2020-10-23T17:12:36Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/GradingCriterionService.java", "diffHunk": "@@ -46,4 +48,39 @@ public GradingCriterion findOne(long gradingCriterionId) {\n         return gradingCriterionRepository.findByExerciseIdWithEagerGradingCriteria(exerciseId);\n     }\n \n+    /**\n+     * Calculates the score over all feedback elements that were set using structured grading instructions (SGI)\n+     * @param feedback feedback element that was set by SGI\n+     * @param totalScore totalScore which is summed up. Starts from 0.0\n+     * @param gradingInstructions empty grading instruction Map to collect the used gradingInstructions\n+     * @return calculated total score from feedback elements set by SGI\n+     */\n+    public double computeTotalScore(Feedback feedback, double totalScore, HashMap<Long, Integer> gradingInstructions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d51dab7e46ca17920d0fae634ca2d852e9a4ce1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyODcyMA==", "bodyText": "It seems a bit off to calculate the score again for manual assessments in this method. The method should just update the result String and do nothing else.", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r511028720", "createdAt": "2020-10-23T17:20:23Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -419,10 +438,21 @@ private double calculateStaticCodeAnalysisPenalty(List<Feedback> staticCodeAnaly\n      * @param successfulTestCases test cases with positive feedback.\n      * @param allTests of the given programming exercise.\n      */\n-    private void updateResultString(Result result, Set<ProgrammingExerciseTestCase> successfulTestCases, Set<ProgrammingExerciseTestCase> allTests) {\n-        // Create a new result string that reflects passed, failed & not executed test cases.\n-        String newResultString = successfulTestCases.size() + \" of \" + allTests.size() + \" passed\";\n-        result.setResultString(newResultString);\n+    private void updateResultString(Result result, Set<ProgrammingExerciseTestCase> successfulTestCases, Set<ProgrammingExerciseTestCase> allTests, ProgrammingExercise exercise) {\n+        if (result.getAssessmentType() == AssessmentType.AUTOMATIC) {\n+            // Create a new result string that reflects passed, failed & not executed test cases.\n+            String newResultString = successfulTestCases.size() + \" of \" + allTests.size() + \" passed\";\n+            result.setResultString(newResultString);\n+        }\n+        else {\n+            // Calculate different scores for totalScore calculation and set resultString for manual results\n+            double maxScore = exercise.getMaxScore();\n+            double bonusPoints = Optional.ofNullable(exercise.getBonusPoints()).orElse(0.0);\n+            double calculatedScore = programmingAssessmentService.calculateTotalScore(result.getFeedbacks());\n+            double totalScore = programmingAssessmentService.calculateTotalScore(calculatedScore, maxScore + bonusPoints);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d51dab7e46ca17920d0fae634ca2d852e9a4ce1"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyOTQ5OA==", "bodyText": "Double negation. Could probably check for FeedbackType.AUTOMATIC", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r511029498", "createdAt": "2020-10-23T17:21:53Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -325,7 +343,8 @@ private void updateScore(Result result, Set<ProgrammingExerciseTestCase> success\n                 double testPoints = testWeight / weightSum * programmingExercise.getMaxScore();\n                 double testPointsWithBonus = testPoints + test.getBonusPoints();\n                 // update credits of related feedback\n-                result.getFeedbacks().stream().filter(fb -> fb.getText().equals(test.getTestName())).findFirst().ifPresent(feedback -> feedback.setCredits(testPointsWithBonus));\n+                result.getFeedbacks().stream().filter(fb -> !fb.isNotAutomaticFeedback() && fb.getText().equals(test.getTestName())).findFirst()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d51dab7e46ca17920d0fae634ca2d852e9a4ce1"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyOTkzMw==", "bodyText": "Double negation. Could probably check for FeedbackType.AUTOMATIC", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r511029933", "createdAt": "2020-10-23T17:22:43Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -295,8 +313,8 @@ private void createFeedbackForNotExecutedTests(Result result, Set<ProgrammingExe\n      */\n     private void removeFeedbacksForAfterDueDateTests(Result result, Set<ProgrammingExerciseTestCase> testCasesForCurrentDate) {\n         // Find feedback which is not associated with test cases for the current date. Does not remove static code analysis feedback\n-        List<Feedback> feedbacksToFilterForCurrentDate = result.getFeedbacks().stream().filter(\n-                feedback -> !feedback.isStaticCodeAnalysisFeedback() && testCasesForCurrentDate.stream().noneMatch(testCase -> testCase.getTestName().equals(feedback.getText())))\n+        List<Feedback> feedbacksToFilterForCurrentDate = result.getFeedbacks().stream().filter(feedback -> !feedback.isStaticCodeAnalysisFeedback()\n+                && !feedback.isNotAutomaticFeedback() && testCasesForCurrentDate.stream().noneMatch(testCase -> testCase.getTestName().equals(feedback.getText())))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d51dab7e46ca17920d0fae634ca2d852e9a4ce1"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzMTg3Mg==", "bodyText": "Maybe we need a bigger refactoring here. Instead of having an all in one updateResult method which gets more and more complex because it has to handle all kinds of different feedback, we create a updateManualResult method. This could also solve the problem that updateResultString triggers yet another calculation for the manual case. This might be out of scope of this PR.", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r511031872", "createdAt": "2020-10-23T17:26:32Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingExerciseGradingService.java", "diffHunk": "@@ -215,6 +219,17 @@ public Result updateResult(Result result, ProgrammingExercise exercise, boolean\n                 updatedResults.add(result);\n             }\n         }\n+\n+        // Update also manual results\n+        List<StudentParticipation> participationsWithManualResult = participationService.findByExerciseIdWithManualResultAndFeedbacks(exercise.getId());\n+        for (StudentParticipation studentParticipation : participationsWithManualResult) {\n+            Result result = studentParticipation.findLatestResult();\n+            if (result != null) {\n+                updateResult(testCases, testCasesForCurrentDate, result, exercise);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d51dab7e46ca17920d0fae634ca2d852e9a4ce1"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a10860365e3567de7d63a6e11f7204497b12c6d9", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/a10860365e3567de7d63a6e11f7204497b12c6d9", "committedDate": "2020-10-23T19:06:48Z", "message": "add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "217c9f209465e531e173695486fcce6aa75917d0", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/217c9f209465e531e173695486fcce6aa75917d0", "committedDate": "2020-10-23T19:27:46Z", "message": "remove not needed method and do simple check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11aec7ef1b0258c9329c25dfbe2fdedd641eccc6", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/11aec7ef1b0258c9329c25dfbe2fdedd641eccc6", "committedDate": "2020-10-23T19:47:33Z", "message": "try to make codacy happy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ba7b822efc2c6c2be1af79dd71843ff235110d7", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/8ba7b822efc2c6c2be1af79dd71843ff235110d7", "committedDate": "2020-10-23T19:48:14Z", "message": "apply spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ac7a287d5f910a43ed8ffa68c2fe1930efde01f", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/1ac7a287d5f910a43ed8ffa68c2fe1930efde01f", "committedDate": "2020-10-23T19:49:56Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into enhancement/programming-assessment/manual-result-based-on-automatic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ba184164ade361bb0764bf59730d7240918f0d6", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/1ba184164ade361bb0764bf59730d7240918f0d6", "committedDate": "2020-10-23T22:55:07Z", "message": "add test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MDc3MDQz", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-516077043", "createdAt": "2020-10-23T23:24:07Z", "commit": {"oid": "1ba184164ade361bb0764bf59730d7240918f0d6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MjYzODI4", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-516263828", "createdAt": "2020-10-24T09:25:08Z", "commit": {"oid": "1ba184164ade361bb0764bf59730d7240918f0d6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwOToyNTowOVrOHnq-sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwOToyNTowOVrOHnq-sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTM2MDY4OA==", "bodyText": "You should cap this again to maxPoints, as you did in the tutor-assessment-container line 442", "url": "https://github.com/ls1intum/Artemis/pull/2223#discussion_r511360688", "createdAt": "2020-10-24T09:25:09Z", "author": {"login": "schultek"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ProgrammingAssessmentService.java", "diffHunk": "@@ -61,7 +68,50 @@ public Result submitManualAssessment(long resultId) {\n         Result result = resultRepository.findWithEagerSubmissionAndFeedbackAndAssessorById(resultId)\n                 .orElseThrow(() -> new EntityNotFoundException(\"No result for the given resultId could be found\"));\n \n-        Double calculatedScore = calculateTotalScore(result.getFeedbacks());\n+        Double calculatedScore = calculateTotalScore(result);\n         return submitResult(result, result.getParticipation().getExercise(), calculatedScore);\n     }\n+\n+    /**\n+     * Calculates the total score for programming exercises.\n+     * @param result with information about feedback and exercise\n+     * @return calculated totalScore\n+     */\n+    private Double calculateTotalScore(Result result) {\n+        double totalScore = 0.0;\n+        double scoreAutomaticTests = 0.0;\n+        ProgrammingExercise programmingExercise = (ProgrammingExercise) result.getParticipation().getExercise();\n+        List<Feedback> assessments = result.getFeedbacks();\n+        var gradingInstructions = new HashMap<Long, Integer>(); // { instructionId: noOfEncounters }\n+\n+        for (Feedback feedback : assessments) {\n+            if (feedback.getGradingInstruction() != null) {\n+                totalScore = gradingCriterionService.computeTotalScore(feedback, totalScore, gradingInstructions);\n+            }\n+            else {\n+                /*\n+                 * In case no structured grading instruction was applied on the assessment model we just sum the feedback credit. We differentiate between automatic test and\n+                 * automatic SCA feedback (automatic test feedback has to be capped)\n+                 */\n+                if (feedback.getType() == FeedbackType.AUTOMATIC && !feedback.isStaticCodeAnalysisFeedback()) {\n+                    scoreAutomaticTests += feedback.getCredits();\n+                }\n+                else {\n+                    totalScore += feedback.getCredits();\n+                }\n+            }\n+        }\n+        /** Calculated score from automatic test feedbacks, is capped to max points + bonus points,\n+        * see also see {@link ProgrammingExerciseGradingService#updateScore} */\n+        double maxPoints = programmingExercise.getMaxScore() + Optional.ofNullable(programmingExercise.getBonusPoints()).orElse(0.0);\n+        if (scoreAutomaticTests > maxPoints) {\n+            scoreAutomaticTests = maxPoints;\n+        }\n+        totalScore += scoreAutomaticTests;\n+        // Make sure to not give negative points\n+        if (totalScore < 0) {\n+            totalScore = 0;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ba184164ade361bb0764bf59730d7240918f0d6"}, "originalPosition": 89}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MjcyNDIx", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-516272421", "createdAt": "2020-10-24T12:02:04Z", "commit": {"oid": "1ba184164ade361bb0764bf59730d7240918f0d6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mjc5Mjc5", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-516279279", "createdAt": "2020-10-24T13:50:34Z", "commit": {"oid": "1ba184164ade361bb0764bf59730d7240918f0d6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mjc5Mjgw", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-516279280", "createdAt": "2020-10-24T13:50:34Z", "commit": {"oid": "1ba184164ade361bb0764bf59730d7240918f0d6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mjc5NDg5", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-516279489", "createdAt": "2020-10-24T13:53:37Z", "commit": {"oid": "1ba184164ade361bb0764bf59730d7240918f0d6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a12928d5f9a0227da72b5f1f7d34b83e35f5450", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/3a12928d5f9a0227da72b5f1f7d34b83e35f5450", "committedDate": "2020-10-24T13:54:20Z", "message": "cap also negative scores for other exercise types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10ae5ddb75367d3c957a0ef42a693a52d7b9d176", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/10ae5ddb75367d3c957a0ef42a693a52d7b9d176", "committedDate": "2020-10-24T16:47:15Z", "message": "improve test coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a81d59631a14b65233ceb0509fa0d0d340d415f7", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/a81d59631a14b65233ceb0509fa0d0d340d415f7", "committedDate": "2020-10-24T16:51:44Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into enhancement/programming-assessment/manual-result-based-on-automatic\n\n# Conflicts:\n#\tsrc/test/java/de/tum/in/www1/artemis/util/DatabaseUtilService.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ff7e7f161dc3a38cc08b28f5ceaf9f3ca261cd8", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/3ff7e7f161dc3a38cc08b28f5ceaf9f3ca261cd8", "committedDate": "2020-10-24T17:31:15Z", "message": "run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "175c40e2c789dcae280dc9aa2a694c9c1e805194", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/175c40e2c789dcae280dc9aa2a694c9c1e805194", "committedDate": "2020-10-24T18:35:53Z", "message": "try to fix failing of tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24c20ccea3fa1ea35459d9b39f05fbd18d00b4f1", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/24c20ccea3fa1ea35459d9b39f05fbd18d00b4f1", "committedDate": "2020-10-24T19:17:28Z", "message": "forgot to remove test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MzAxNzg3", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-516301787", "createdAt": "2020-10-24T19:30:59Z", "commit": {"oid": "24c20ccea3fa1ea35459d9b39f05fbd18d00b4f1"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MzA0MDgz", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-516304083", "createdAt": "2020-10-24T20:08:56Z", "commit": {"oid": "24c20ccea3fa1ea35459d9b39f05fbd18d00b4f1"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10128b6597b1c7723b5f48bac0d1d58c9d0c1df4", "author": {"user": {"login": "krusche", "name": "Stephan Krusche"}}, "url": "https://github.com/ls1intum/Artemis/commit/10128b6597b1c7723b5f48bac0d1d58c9d0c1df4", "committedDate": "2020-10-24T20:25:33Z", "message": "Merge branch 'develop' into enhancement/programming-assessment/manual-result-based-on-automatic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ccd7c6ebc3ea7dee25456bb6aab500f80234452", "author": {"user": {"login": "krusche", "name": "Stephan Krusche"}}, "url": "https://github.com/ls1intum/Artemis/commit/0ccd7c6ebc3ea7dee25456bb6aab500f80234452", "committedDate": "2020-10-24T20:26:24Z", "message": "Merge branch 'develop' into enhancement/programming-assessment/manual-result-based-on-automatic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MzA5ODUw", "url": "https://github.com/ls1intum/Artemis/pull/2223#pullrequestreview-516309850", "createdAt": "2020-10-24T21:58:13Z", "commit": {"oid": "0ccd7c6ebc3ea7dee25456bb6aab500f80234452"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3866, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}