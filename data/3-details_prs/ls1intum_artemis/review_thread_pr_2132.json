{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MzcxNzM0", "number": 2132, "reviewThreads": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzo1Njo1MFrOEqm_mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODo1MTo0MVrOEv7mDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTE0NTIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/FeedbackConflict.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzo1Njo1MFrOHc6RuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNToyMTozNlrOHjErng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3Njk4NQ==", "bodyText": "I though this is already achieved by the variable conflict above? why do we need another boolean flag?", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r500076985", "createdAt": "2020-10-06T07:56:50Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/FeedbackConflict.java", "diffHunk": "@@ -34,6 +34,9 @@\n     @JoinColumn(name = \"second_feedback_id\", referencedColumnName = \"id\")\n     private Feedback secondFeedback;\n \n+    @Column(name = \"markedAsNotConflict\")\n+    private Boolean markedAsNotConflict;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd2b2132461a1792489dc01815eb7d064802bb13"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3OTU4Mw==", "bodyText": "This boolean field (markedAsNotConflict) basically means, there is a conflict according to Athene but tutor thinks it is not a conflict. We put it there to see trustability of the algorithm in Athene.", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r500079583", "createdAt": "2020-10-06T08:01:01Z", "author": {"login": "bigultekin"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/FeedbackConflict.java", "diffHunk": "@@ -34,6 +34,9 @@\n     @JoinColumn(name = \"second_feedback_id\", referencedColumnName = \"id\")\n     private Feedback secondFeedback;\n \n+    @Column(name = \"markedAsNotConflict\")\n+    private Boolean markedAsNotConflict;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3Njk4NQ=="}, "originalCommit": {"oid": "fd2b2132461a1792489dc01815eb7d064802bb13"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMyMzgzMQ==", "bodyText": "Hmm I don\u2019t really like the name. Also you don\u2019t follow the naming conventions with _", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r503323831", "createdAt": "2020-10-12T14:12:03Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/FeedbackConflict.java", "diffHunk": "@@ -34,6 +34,9 @@\n     @JoinColumn(name = \"second_feedback_id\", referencedColumnName = \"id\")\n     private Feedback secondFeedback;\n \n+    @Column(name = \"markedAsNotConflict\")\n+    private Boolean markedAsNotConflict;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3Njk4NQ=="}, "originalCommit": {"oid": "fd2b2132461a1792489dc01815eb7d064802bb13"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUzODkxMA==", "bodyText": "I changed it to discard", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r506538910", "createdAt": "2020-10-16T15:21:36Z", "author": {"login": "bigultekin"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/FeedbackConflict.java", "diffHunk": "@@ -34,6 +34,9 @@\n     @JoinColumn(name = \"second_feedback_id\", referencedColumnName = \"id\")\n     private Feedback secondFeedback;\n \n+    @Column(name = \"markedAsNotConflict\")\n+    private Boolean markedAsNotConflict;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3Njk4NQ=="}, "originalCommit": {"oid": "fd2b2132461a1792489dc01815eb7d064802bb13"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTQ2MjExOnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/TextAssessmentIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNzoxNDozOVrOHjenxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNzoxNDozOVrOHjenxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk2MzkwOA==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'retrieveConflictingTextSubmissions_otherTutorForbidden' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r506963908", "createdAt": "2020-10-17T17:14:39Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/TextAssessmentIntegrationTest.java", "diffHunk": "@@ -681,4 +684,106 @@ public void checkTrackingTokenHeader() throws Exception {\n                 new String[] { \"X-Athene-Tracking-Authorization\" });\n \n     }\n+\n+    @Test\n+    @WithMockUser(value = \"tutor1\", roles = \"TA\")\n+    public void retrieveConflictingTextSubmissions() throws Exception {\n+        List<TextSubmission> textSubmissions = prepareTextSubmissionsWithFeedbackAndConflicts();\n+        List<TextSubmission> conflictingTextSubmissions = request.getList(\"/api/text-assessments/submission/\" + textSubmissions.get(0).getId() + \"/feedback/\"\n+                + textSubmissions.get(0).getResult().getFeedbacks().get(0).getId() + \"/feedback-conflicts\", HttpStatus.OK, TextSubmission.class);\n+\n+        assertThat(conflictingTextSubmissions).hasSize(1);\n+        TextSubmission conflictingTextSubmission = conflictingTextSubmissions.get(0);\n+        assertThat(conflictingTextSubmission).isEqualTo(textSubmissions.get(1));\n+        assertThat(conflictingTextSubmission.getParticipation()).isNotNull();\n+        assertThat(conflictingTextSubmission.getResult()).isEqualTo(textSubmissions.get(1).getResult());\n+        assertThat(conflictingTextSubmission.getBlocks()).isNotNull();\n+        assertThat(conflictingTextSubmission.getResult().getFeedbacks().get(0)).isEqualTo(textSubmissions.get(1).getResult().getFeedbacks().get(0));\n+        assertThat(conflictingTextSubmission.getResult().getFeedbacks().get(0).getResult()).isNull();\n+    }\n+\n+    @Test\n+    @WithMockUser(value = \"tutor2\", roles = \"TA\")\n+    public void retrieveConflictingTextSubmissions_otherTutorForbidden() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjQzNTA3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess/text-assessments.service.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDo1NDo1OVrOHkhSrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDo1NDo1OVrOHkhSrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1NjIzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        feedback.result = undefined;\n          \n          \n            \n                        /*if (feedback['firstConflicts']) {\n          \n          \n            \n                            feedback['firstConflicts'] = undefined;\n          \n          \n            \n                        }\n          \n          \n            \n                        if (feedback['secondConflicts']) {\n          \n          \n            \n                            feedback['secondConflicts'] = undefined;\n          \n          \n            \n                        }*/\n          \n          \n            \n                        feedback.conflictingTextAssessments = undefined;\n          \n          \n            \n                        delete feedback.result;\n          \n          \n            \n                        delete feedback.conflictingTextAssessments;", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508056236", "createdAt": "2020-10-19T20:54:59Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess/text-assessments.service.ts", "diffHunk": "@@ -119,10 +120,37 @@ export class TextAssessmentsService {\n         return this.http.get<Result>(`${this.resourceUrl}/exercise/${exerciseId}/submission/${submissionId}/example-result`);\n     }\n \n+    /**\n+     * Gets an array of text submissions that contains conflicting feedback with the given feedback id.\n+     *\n+     * @param submissionId id of the submission feedback belongs to of type {number}\n+     * @param feedbackId id of the feedback to search for conflicts of type {number}\n+     */\n+    public getConflictingTextSubmissions(submissionId: number, feedbackId: number): Observable<TextSubmission[]> {\n+        return this.http.get<TextSubmission[]>(`${this.resourceUrl}/submission/${submissionId}/feedback/${feedbackId}/feedback-conflicts`);\n+    }\n+\n+    /**\n+     * Set feedback conflict as solved. (Tutor decides it is not a conflict)\n+     *\n+     * @param exerciseId id of the exercise feedback conflict belongs to\n+     * @param feedbackConflictId id of the feedback conflict to be solved\n+     */\n+    public solveFeedbackConflict(exerciseId: number, feedbackConflictId: number): Observable<FeedbackConflict> {\n+        return this.http.get<FeedbackConflict>(`${this.resourceUrl}/exercise/${exerciseId}/feedbackConflict/${feedbackConflictId}/solve-feedback-conflict`);\n+    }\n+\n     private static prepareFeedbacksAndTextblocksForRequest(feedbacks: Feedback[], textBlocks: TextBlock[]): TextAssessmentDTO {\n         feedbacks = feedbacks.map((feedback) => {\n             feedback = Object.assign({}, feedback);\n             feedback.result = undefined;\n+            /*if (feedback['firstConflicts']) {\n+                feedback['firstConflicts'] = undefined;\n+            }\n+            if (feedback['secondConflicts']) {\n+                feedback['secondConflicts'] = undefined;\n+            }*/\n+            feedback.conflictingTextAssessments = undefined;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjQ1MTE2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDo1OToyNVrOHkhcOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDo1OToyNVrOHkhcOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1ODY4Mg==", "bodyText": "Is this the same?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @HostBinding('class.alert-secondary') get setNeutralFeedbackClass(): boolean {\n          \n          \n            \n                    return (this.feedback.credits === 0 && !this.conflictMode) || (this.conflictMode && !this.isConflictingFeedback);\n          \n          \n            \n                @HostBinding('class.alert-secondary') get neutralFeedbackClass(): boolean {\n          \n          \n            \n                    return !this.conflictMode ? this.feedback.credits === 0  : !this.isConflictingFeedback;", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508058682", "createdAt": "2020-10-19T20:59:25Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -17,24 +18,38 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n     @Output() feedbackChange = new EventEmitter<Feedback>();\n     @Output() close = new EventEmitter<void>();\n     @Output() onFocus = new EventEmitter<void>();\n+    @Output() onConflictsClicked = new EventEmitter<number>();\n     @ViewChild('detailText') textareaRef: ElementRef;\n     @ViewChild(ConfirmIconComponent) confirmIconComponent: ConfirmIconComponent;\n     @Input() disableEditScore = false;\n     @Input() readOnly: boolean;\n+    @Input() isConflictingFeedback: boolean;\n+    @Input() conflictMode: boolean;\n+    @Input() conflictType?: FeedbackConflictType;\n+    @Input() isLeftConflictingFeedback: boolean;\n+    @Input() isSelectedConflict: boolean;\n     private textareaElement: HTMLTextAreaElement;\n \n     @HostBinding('class.alert') @HostBinding('class.alert-dismissible') readonly classes = true;\n \n-    @HostBinding('class.alert-secondary') get neutralFeedbackClass(): boolean {\n-        return this.feedback.credits === 0;\n+    @HostBinding('class.alert-secondary') get setNeutralFeedbackClass(): boolean {\n+        return (this.feedback.credits === 0 && !this.conflictMode) || (this.conflictMode && !this.isConflictingFeedback);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjQ1NDEyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMDoxNFrOHkheBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMDoxNFrOHkheBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTE0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @HostBinding('class.alert-success') get setPositiveFeedbackClass(): boolean {\n          \n          \n            \n                @HostBinding('class.alert-success') get positiveFeedbackClass(): boolean {", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508059141", "createdAt": "2020-10-19T21:00:14Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -17,24 +18,38 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n     @Output() feedbackChange = new EventEmitter<Feedback>();\n     @Output() close = new EventEmitter<void>();\n     @Output() onFocus = new EventEmitter<void>();\n+    @Output() onConflictsClicked = new EventEmitter<number>();\n     @ViewChild('detailText') textareaRef: ElementRef;\n     @ViewChild(ConfirmIconComponent) confirmIconComponent: ConfirmIconComponent;\n     @Input() disableEditScore = false;\n     @Input() readOnly: boolean;\n+    @Input() isConflictingFeedback: boolean;\n+    @Input() conflictMode: boolean;\n+    @Input() conflictType?: FeedbackConflictType;\n+    @Input() isLeftConflictingFeedback: boolean;\n+    @Input() isSelectedConflict: boolean;\n     private textareaElement: HTMLTextAreaElement;\n \n     @HostBinding('class.alert') @HostBinding('class.alert-dismissible') readonly classes = true;\n \n-    @HostBinding('class.alert-secondary') get neutralFeedbackClass(): boolean {\n-        return this.feedback.credits === 0;\n+    @HostBinding('class.alert-secondary') get setNeutralFeedbackClass(): boolean {\n+        return (this.feedback.credits === 0 && !this.conflictMode) || (this.conflictMode && !this.isConflictingFeedback);\n     }\n \n-    @HostBinding('class.alert-success') get positiveFeedbackClass(): boolean {\n-        return this.feedback.credits !== undefined && this.feedback.credits > 0;\n+    @HostBinding('class.alert-success') get setPositiveFeedbackClass(): boolean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjQ1NTYxOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMDo0MlrOHkhe6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOToyMjoyNFrOHky8Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTM2OQ==", "bodyText": "What happens if credits is actually undefined? Can this happen?", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508059369", "createdAt": "2020-10-19T21:00:42Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -17,24 +18,38 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n     @Output() feedbackChange = new EventEmitter<Feedback>();\n     @Output() close = new EventEmitter<void>();\n     @Output() onFocus = new EventEmitter<void>();\n+    @Output() onConflictsClicked = new EventEmitter<number>();\n     @ViewChild('detailText') textareaRef: ElementRef;\n     @ViewChild(ConfirmIconComponent) confirmIconComponent: ConfirmIconComponent;\n     @Input() disableEditScore = false;\n     @Input() readOnly: boolean;\n+    @Input() isConflictingFeedback: boolean;\n+    @Input() conflictMode: boolean;\n+    @Input() conflictType?: FeedbackConflictType;\n+    @Input() isLeftConflictingFeedback: boolean;\n+    @Input() isSelectedConflict: boolean;\n     private textareaElement: HTMLTextAreaElement;\n \n     @HostBinding('class.alert') @HostBinding('class.alert-dismissible') readonly classes = true;\n \n-    @HostBinding('class.alert-secondary') get neutralFeedbackClass(): boolean {\n-        return this.feedback.credits === 0;\n+    @HostBinding('class.alert-secondary') get setNeutralFeedbackClass(): boolean {\n+        return (this.feedback.credits === 0 && !this.conflictMode) || (this.conflictMode && !this.isConflictingFeedback);\n     }\n \n-    @HostBinding('class.alert-success') get positiveFeedbackClass(): boolean {\n-        return this.feedback.credits !== undefined && this.feedback.credits > 0;\n+    @HostBinding('class.alert-success') get setPositiveFeedbackClass(): boolean {\n+        return this.feedback.credits! > 0 && !this.conflictMode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0NTM1NA==", "bodyText": "it is assigned to 0 in the constructor", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508345354", "createdAt": "2020-10-20T09:22:24Z", "author": {"login": "bigultekin"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -17,24 +18,38 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n     @Output() feedbackChange = new EventEmitter<Feedback>();\n     @Output() close = new EventEmitter<void>();\n     @Output() onFocus = new EventEmitter<void>();\n+    @Output() onConflictsClicked = new EventEmitter<number>();\n     @ViewChild('detailText') textareaRef: ElementRef;\n     @ViewChild(ConfirmIconComponent) confirmIconComponent: ConfirmIconComponent;\n     @Input() disableEditScore = false;\n     @Input() readOnly: boolean;\n+    @Input() isConflictingFeedback: boolean;\n+    @Input() conflictMode: boolean;\n+    @Input() conflictType?: FeedbackConflictType;\n+    @Input() isLeftConflictingFeedback: boolean;\n+    @Input() isSelectedConflict: boolean;\n     private textareaElement: HTMLTextAreaElement;\n \n     @HostBinding('class.alert') @HostBinding('class.alert-dismissible') readonly classes = true;\n \n-    @HostBinding('class.alert-secondary') get neutralFeedbackClass(): boolean {\n-        return this.feedback.credits === 0;\n+    @HostBinding('class.alert-secondary') get setNeutralFeedbackClass(): boolean {\n+        return (this.feedback.credits === 0 && !this.conflictMode) || (this.conflictMode && !this.isConflictingFeedback);\n     }\n \n-    @HostBinding('class.alert-success') get positiveFeedbackClass(): boolean {\n-        return this.feedback.credits !== undefined && this.feedback.credits > 0;\n+    @HostBinding('class.alert-success') get setPositiveFeedbackClass(): boolean {\n+        return this.feedback.credits! > 0 && !this.conflictMode;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTM2OQ=="}, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjQ1NjU3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMTowMFrOHkhfew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMTowMFrOHkhfew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTUxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @HostBinding('class.alert-danger') get setNegativeFeedbackClass(): boolean {\n          \n          \n            \n                @HostBinding('class.alert-danger') get negativeFeedbackClass(): boolean {", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508059515", "createdAt": "2020-10-19T21:01:00Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -17,24 +18,38 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n     @Output() feedbackChange = new EventEmitter<Feedback>();\n     @Output() close = new EventEmitter<void>();\n     @Output() onFocus = new EventEmitter<void>();\n+    @Output() onConflictsClicked = new EventEmitter<number>();\n     @ViewChild('detailText') textareaRef: ElementRef;\n     @ViewChild(ConfirmIconComponent) confirmIconComponent: ConfirmIconComponent;\n     @Input() disableEditScore = false;\n     @Input() readOnly: boolean;\n+    @Input() isConflictingFeedback: boolean;\n+    @Input() conflictMode: boolean;\n+    @Input() conflictType?: FeedbackConflictType;\n+    @Input() isLeftConflictingFeedback: boolean;\n+    @Input() isSelectedConflict: boolean;\n     private textareaElement: HTMLTextAreaElement;\n \n     @HostBinding('class.alert') @HostBinding('class.alert-dismissible') readonly classes = true;\n \n-    @HostBinding('class.alert-secondary') get neutralFeedbackClass(): boolean {\n-        return this.feedback.credits === 0;\n+    @HostBinding('class.alert-secondary') get setNeutralFeedbackClass(): boolean {\n+        return (this.feedback.credits === 0 && !this.conflictMode) || (this.conflictMode && !this.isConflictingFeedback);\n     }\n \n-    @HostBinding('class.alert-success') get positiveFeedbackClass(): boolean {\n-        return this.feedback.credits !== undefined && this.feedback.credits > 0;\n+    @HostBinding('class.alert-success') get setPositiveFeedbackClass(): boolean {\n+        return this.feedback.credits! > 0 && !this.conflictMode;\n     }\n \n-    @HostBinding('class.alert-danger') get negativeFeedbackClass(): boolean {\n-        return this.feedback.credits !== undefined && this.feedback.credits! < 0;\n+    @HostBinding('class.alert-danger') get setNegativeFeedbackClass(): boolean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjQ1NzEwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMToxMFrOHkhf1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMToxMFrOHkhf1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTYwNw==", "bodyText": "See above", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508059607", "createdAt": "2020-10-19T21:01:10Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -17,24 +18,38 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n     @Output() feedbackChange = new EventEmitter<Feedback>();\n     @Output() close = new EventEmitter<void>();\n     @Output() onFocus = new EventEmitter<void>();\n+    @Output() onConflictsClicked = new EventEmitter<number>();\n     @ViewChild('detailText') textareaRef: ElementRef;\n     @ViewChild(ConfirmIconComponent) confirmIconComponent: ConfirmIconComponent;\n     @Input() disableEditScore = false;\n     @Input() readOnly: boolean;\n+    @Input() isConflictingFeedback: boolean;\n+    @Input() conflictMode: boolean;\n+    @Input() conflictType?: FeedbackConflictType;\n+    @Input() isLeftConflictingFeedback: boolean;\n+    @Input() isSelectedConflict: boolean;\n     private textareaElement: HTMLTextAreaElement;\n \n     @HostBinding('class.alert') @HostBinding('class.alert-dismissible') readonly classes = true;\n \n-    @HostBinding('class.alert-secondary') get neutralFeedbackClass(): boolean {\n-        return this.feedback.credits === 0;\n+    @HostBinding('class.alert-secondary') get setNeutralFeedbackClass(): boolean {\n+        return (this.feedback.credits === 0 && !this.conflictMode) || (this.conflictMode && !this.isConflictingFeedback);\n     }\n \n-    @HostBinding('class.alert-success') get positiveFeedbackClass(): boolean {\n-        return this.feedback.credits !== undefined && this.feedback.credits > 0;\n+    @HostBinding('class.alert-success') get setPositiveFeedbackClass(): boolean {\n+        return this.feedback.credits! > 0 && !this.conflictMode;\n     }\n \n-    @HostBinding('class.alert-danger') get negativeFeedbackClass(): boolean {\n-        return this.feedback.credits !== undefined && this.feedback.credits! < 0;\n+    @HostBinding('class.alert-danger') get setNegativeFeedbackClass(): boolean {\n+        return this.feedback.credits! < 0 && !this.conflictMode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjQ1Nzg1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMToyN1rOHkhgUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMToyN1rOHkhgUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTczMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @HostBinding('class.alert-warning') get setConflictingFeedbackClass(): boolean {\n          \n          \n            \n                @HostBinding('class.alert-warning') get conflictingFeedbackClass(): boolean {", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508059730", "createdAt": "2020-10-19T21:01:27Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -17,24 +18,38 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n     @Output() feedbackChange = new EventEmitter<Feedback>();\n     @Output() close = new EventEmitter<void>();\n     @Output() onFocus = new EventEmitter<void>();\n+    @Output() onConflictsClicked = new EventEmitter<number>();\n     @ViewChild('detailText') textareaRef: ElementRef;\n     @ViewChild(ConfirmIconComponent) confirmIconComponent: ConfirmIconComponent;\n     @Input() disableEditScore = false;\n     @Input() readOnly: boolean;\n+    @Input() isConflictingFeedback: boolean;\n+    @Input() conflictMode: boolean;\n+    @Input() conflictType?: FeedbackConflictType;\n+    @Input() isLeftConflictingFeedback: boolean;\n+    @Input() isSelectedConflict: boolean;\n     private textareaElement: HTMLTextAreaElement;\n \n     @HostBinding('class.alert') @HostBinding('class.alert-dismissible') readonly classes = true;\n \n-    @HostBinding('class.alert-secondary') get neutralFeedbackClass(): boolean {\n-        return this.feedback.credits === 0;\n+    @HostBinding('class.alert-secondary') get setNeutralFeedbackClass(): boolean {\n+        return (this.feedback.credits === 0 && !this.conflictMode) || (this.conflictMode && !this.isConflictingFeedback);\n     }\n \n-    @HostBinding('class.alert-success') get positiveFeedbackClass(): boolean {\n-        return this.feedback.credits !== undefined && this.feedback.credits > 0;\n+    @HostBinding('class.alert-success') get setPositiveFeedbackClass(): boolean {\n+        return this.feedback.credits! > 0 && !this.conflictMode;\n     }\n \n-    @HostBinding('class.alert-danger') get negativeFeedbackClass(): boolean {\n-        return this.feedback.credits !== undefined && this.feedback.credits! < 0;\n+    @HostBinding('class.alert-danger') get setNegativeFeedbackClass(): boolean {\n+        return this.feedback.credits! < 0 && !this.conflictMode;\n+    }\n+\n+    @HostBinding('class.alert-warning') get setConflictingFeedbackClass(): boolean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjQ1ODQ1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMTozOVrOHkhgrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMTozOVrOHkhgrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1OTgyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @HostBinding('class.alert-info') get setSelectedConflictingFeedbackClass(): boolean {\n          \n          \n            \n                @HostBinding('class.alert-info') get selectedConflictingFeedbackClass(): boolean {", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508059823", "createdAt": "2020-10-19T21:01:39Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -17,24 +18,38 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n     @Output() feedbackChange = new EventEmitter<Feedback>();\n     @Output() close = new EventEmitter<void>();\n     @Output() onFocus = new EventEmitter<void>();\n+    @Output() onConflictsClicked = new EventEmitter<number>();\n     @ViewChild('detailText') textareaRef: ElementRef;\n     @ViewChild(ConfirmIconComponent) confirmIconComponent: ConfirmIconComponent;\n     @Input() disableEditScore = false;\n     @Input() readOnly: boolean;\n+    @Input() isConflictingFeedback: boolean;\n+    @Input() conflictMode: boolean;\n+    @Input() conflictType?: FeedbackConflictType;\n+    @Input() isLeftConflictingFeedback: boolean;\n+    @Input() isSelectedConflict: boolean;\n     private textareaElement: HTMLTextAreaElement;\n \n     @HostBinding('class.alert') @HostBinding('class.alert-dismissible') readonly classes = true;\n \n-    @HostBinding('class.alert-secondary') get neutralFeedbackClass(): boolean {\n-        return this.feedback.credits === 0;\n+    @HostBinding('class.alert-secondary') get setNeutralFeedbackClass(): boolean {\n+        return (this.feedback.credits === 0 && !this.conflictMode) || (this.conflictMode && !this.isConflictingFeedback);\n     }\n \n-    @HostBinding('class.alert-success') get positiveFeedbackClass(): boolean {\n-        return this.feedback.credits !== undefined && this.feedback.credits > 0;\n+    @HostBinding('class.alert-success') get setPositiveFeedbackClass(): boolean {\n+        return this.feedback.credits! > 0 && !this.conflictMode;\n     }\n \n-    @HostBinding('class.alert-danger') get negativeFeedbackClass(): boolean {\n-        return this.feedback.credits !== undefined && this.feedback.credits! < 0;\n+    @HostBinding('class.alert-danger') get setNegativeFeedbackClass(): boolean {\n+        return this.feedback.credits! < 0 && !this.conflictMode;\n+    }\n+\n+    @HostBinding('class.alert-warning') get setConflictingFeedbackClass(): boolean {\n+        return this.isConflictingFeedback && this.conflictMode && !this.isSelectedConflict;\n+    }\n+\n+    @HostBinding('class.alert-info') get setSelectedConflictingFeedbackClass(): boolean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjQ2Mjk3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowMjo1NlrOHkhjVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo0NToyOFrOHkz4WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA2MDUwMw==", "bodyText": "What is this input? Is this the same as conflictType === undefined?", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508060503", "createdAt": "2020-10-19T21:02:56Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -17,24 +18,38 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n     @Output() feedbackChange = new EventEmitter<Feedback>();\n     @Output() close = new EventEmitter<void>();\n     @Output() onFocus = new EventEmitter<void>();\n+    @Output() onConflictsClicked = new EventEmitter<number>();\n     @ViewChild('detailText') textareaRef: ElementRef;\n     @ViewChild(ConfirmIconComponent) confirmIconComponent: ConfirmIconComponent;\n     @Input() disableEditScore = false;\n     @Input() readOnly: boolean;\n+    @Input() isConflictingFeedback: boolean;\n+    @Input() conflictMode: boolean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2MDc5Mg==", "bodyText": "There are two submissions side by side\nThere is one conflicting feedback on the left side (that is selected in the previous page)\nThere could be more than one conflicting feedback on the right side\nAll conflicting feedback have a yellowish background and all the others are greyed out\nYou can't edit any feedback except the one conflicting feedback on the left\nYou can see the conflict types only on the conflicting feedback on the right\nYou can't delete any feedback\nYou can select only one conflicting feedback on the right\nBoth text-submission-assessment.component and text-feedback-conflicts.component are using the same sub components\n\nI also don't like this many boolean fields, they all seem like the same thing but I couldn't do in any other way.", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508360792", "createdAt": "2020-10-20T09:45:28Z", "author": {"login": "bigultekin"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-feedback-editor/textblock-feedback-editor.component.ts", "diffHunk": "@@ -17,24 +18,38 @@ export class TextblockFeedbackEditorComponent implements AfterViewInit {\n     @Output() feedbackChange = new EventEmitter<Feedback>();\n     @Output() close = new EventEmitter<void>();\n     @Output() onFocus = new EventEmitter<void>();\n+    @Output() onConflictsClicked = new EventEmitter<number>();\n     @ViewChild('detailText') textareaRef: ElementRef;\n     @ViewChild(ConfirmIconComponent) confirmIconComponent: ConfirmIconComponent;\n     @Input() disableEditScore = false;\n     @Input() readOnly: boolean;\n+    @Input() isConflictingFeedback: boolean;\n+    @Input() conflictMode: boolean;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA2MDUwMw=="}, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjQ2NjcwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/textblock-assessment-card/textblock-assessment-card.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowNDowOVrOHkhlpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowNDowOVrOHkhlpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA2MTA5Mg==", "bodyText": "Same question as in textblock-feedback-editor.component.ts", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508061092", "createdAt": "2020-10-19T21:04:09Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-assessment-card/textblock-assessment-card.component.ts", "diffHunk": "@@ -15,19 +16,38 @@ export class TextblockAssessmentCardComponent {\n     @Input() textBlockRef: TextBlockRef;\n     @Input() selected = false;\n     @Input() readOnly: boolean;\n+    @Input() isConflictingFeedback: boolean;\n+    @Input() conflictMode: boolean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjQ3NDExOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/textblock-assessment-card/textblock-assessment-card.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowNjoxNlrOHkhqCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowNjoxNlrOHkhqCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA2MjIxNw==", "bodyText": "Should this negate conflictMode?\n    [class.neutral-feedback]=\"(textBlockRef.feedback?.credits === 0 && !conflictMode) || (conflictMode && !isConflictingFeedback)\"\n\nCan this be simplified like so?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                [class.neutral-feedback]=\"(textBlockRef.feedback?.credits === 0 && conflictMode) || (conflictMode && !isConflictingFeedback)\"\n          \n          \n            \n                [class.neutral-feedback]=\" !conflictMode ? textBlockRef.feedback?.credits === 0 : !isConflictingFeedback\"", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508062217", "createdAt": "2020-10-19T21:06:16Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/textblock-assessment-card/textblock-assessment-card.component.html", "diffHunk": "@@ -7,9 +7,10 @@\n     (click)=\"select()\"\n     [class.text-with-feedback]=\"!!textBlockRef.feedback\"\n     [class.active]=\"selected\"\n-    [class.positive-feedback]=\"textBlockRef.feedback?.credits! > 0\"\n-    [class.negative-feedback]=\"textBlockRef.feedback?.credits! < 0\"\n-    [class.neutral-feedback]=\"textBlockRef.feedback?.credits === 0\"\n+    [class.positive-feedback]=\"textBlockRef.feedback?.credits! > 0 && !conflictMode\"\n+    [class.negative-feedback]=\"textBlockRef.feedback?.credits! < 0 && !conflictMode\"\n+    [class.neutral-feedback]=\"(textBlockRef.feedback?.credits === 0 && conflictMode) || (conflictMode && !isConflictingFeedback)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjQ4NDExOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/text-assessment-base.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTowOTozMlrOHkhwPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo0ODo1MVrOHk0BUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA2MzgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Component({\n          \n          \n            \n                template: '',\n          \n          \n            \n            })", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508063806", "createdAt": "2020-10-19T21:09:32Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/text-assessment-base.component.ts", "diffHunk": "@@ -0,0 +1,135 @@\n+import { Component, OnInit } from '@angular/core';\n+import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n+import { TextBlockRef } from 'app/entities/text-block-ref.model';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextBlockType } from 'app/entities/text-block.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { Result } from 'app/entities/result.model';\n+import { Course } from 'app/entities/course.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+import { StructuredGradingCriterionService } from 'app/exercises/shared/structured-grading-criterion/structured-grading-criterion.service';\n+import { JhiAlertService } from 'ng-jhipster';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Feedback } from 'app/entities/feedback.model';\n+import { Authority } from 'app/shared/constants/authority.constants';\n+\n+@Component({\n+    template: '',\n+})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2MzA4OA==", "bodyText": "Error without it  error NG2007: Class is using Angular features but is not decorated. Please add an explicit Angular decorator.", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508363088", "createdAt": "2020-10-20T09:48:51Z", "author": {"login": "bigultekin"}, "path": "src/main/webapp/app/exercises/text/assess-new/text-assessment-base.component.ts", "diffHunk": "@@ -0,0 +1,135 @@\n+import { Component, OnInit } from '@angular/core';\n+import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n+import { TextBlockRef } from 'app/entities/text-block-ref.model';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextBlockType } from 'app/entities/text-block.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { Result } from 'app/entities/result.model';\n+import { Course } from 'app/entities/course.model';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+import { StructuredGradingCriterionService } from 'app/exercises/shared/structured-grading-criterion/structured-grading-criterion.service';\n+import { JhiAlertService } from 'ng-jhipster';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Feedback } from 'app/entities/feedback.model';\n+import { Authority } from 'app/shared/constants/authority.constants';\n+\n+@Component({\n+    template: '',\n+})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA2MzgwNg=="}, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjQ5ODE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/repository/FeedbackConflictRepository.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMToxMzozOVrOHkh4fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMToxMzozOVrOHkh4fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA2NTkxOQ==", "bodyText": "Make fetching more explicit in method name\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                List<FeedbackConflict> findAllByFeedbackId(@Param(\"feedbackId\") Long feedbackId);\n          \n          \n            \n                List<FeedbackConflict> findAllWithEagerFeedbackResultAndSubmissionByFeedbackId(@Param(\"feedbackId\") Long feedbackId);", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508065919", "createdAt": "2020-10-19T21:13:39Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/FeedbackConflictRepository.java", "diffHunk": "@@ -15,12 +16,25 @@\n @Repository\n public interface FeedbackConflictRepository extends JpaRepository<FeedbackConflict, Long> {\n \n+    @Query(\"select distinct conflict from FeedbackConflict conflict \"\n+            + \"left join fetch conflict.firstFeedback f1 left join fetch f1.result r1 left join fetch r1.submission left join fetch r1.feedbacks left join fetch r1.assessor \"\n+            + \"left join fetch conflict.secondFeedback f2 left join fetch f2.result r2 left join fetch r2.submission left join fetch r2.feedbacks left join fetch r2.assessor \"\n+            + \"where conflict.conflict = true and (conflict.firstFeedback.id = :feedbackId or conflict.secondFeedback.id = :feedbackId)\")\n+    List<FeedbackConflict> findAllByFeedbackId(@Param(\"feedbackId\") Long feedbackId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjU2NDEyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/entities/feedback-conflict.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTozNDoyNVrOHkigKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTozNDoyNVrOHkigKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA3NjA3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                INCONSISTENT_COMMENT = 'INCONSISTENT COMMENT',\n          \n          \n            \n                INCONSISTENT_SCORE = 'INCONSISTENT SCORE',\n          \n          \n            \n                INCONSISTENT_FEEDBACK = 'INCONSISTENT FEEDBACK',\n          \n          \n            \n                INCONSISTENT_COMMENT = 'INCONSISTENT_COMMENT',\n          \n          \n            \n                INCONSISTENT_SCORE = 'INCONSISTENT_SCORE',\n          \n          \n            \n                INCONSISTENT_FEEDBACK = 'INCONSISTENT_FEEDBACK',", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508076075", "createdAt": "2020-10-19T21:34:25Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/entities/feedback-conflict.ts", "diffHunk": "@@ -0,0 +1,20 @@\n+import { BaseEntity } from 'app/shared/model/base-entity';\n+import { Moment } from 'moment';\n+\n+export enum FeedbackConflictType {\n+    INCONSISTENT_COMMENT = 'INCONSISTENT COMMENT',\n+    INCONSISTENT_SCORE = 'INCONSISTENT SCORE',\n+    INCONSISTENT_FEEDBACK = 'INCONSISTENT FEEDBACK',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjYwMzI2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/text-assessment-area/text-assessment-area.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0NzoxNlrOHki3Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0NzoxNlrOHki3Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4MTk0Mw==", "bodyText": "This gets called constantly from change detection. It is probably better to compute this once and store it in a map for future reference.", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508081943", "createdAt": "2020-10-19T21:47:16Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/text-assessment-area/text-assessment-area.component.ts", "diffHunk": "@@ -53,14 +62,59 @@ export class TextAssessmentAreaComponent implements OnChanges {\n         this.textBlockRefsChange.emit(this.textBlockRefs);\n     }\n \n+    /**\n+     * It is called if a text block is added manually.\n+     * @param ref - added text block\n+     */\n     addTextBlockRef(ref: TextBlockRef): void {\n         this.textBlockRefs.push(ref);\n         this.textBlockRefsAddedRemoved.emit();\n     }\n \n+    /**\n+     * It is called if the assessment for a text block is deleted. So, textBlockRef is deleted\n+     * @param ref - TextBlockRef that has a deleted assessment(feedback).\n+     */\n     removeTextBlockRef(ref: TextBlockRef): void {\n         const index = this.textBlockRefs.findIndex((elem) => elem.block!.id! === ref.block!.id!);\n         this.textBlockRefs.splice(index, 1);\n         this.textBlockRefsAddedRemoved.emit();\n     }\n+\n+    /**\n+     * Checks if the passed TextBlockRef has a conflicting feedback.\n+     * If this is the left assessment checks the left conflicting feedback id otherwise searches the feedback id inside the conflicts array.\n+     * Returns false for text-submission-assessment component\n+     * @param ref - TextBlockRef to check if its feedback is conflicting.\n+     */\n+    getIsConflictingFeedback(ref: TextBlockRef): boolean {\n+        if (this.isLeftConflictingFeedback && this.selectedFeedbackIdWithConflicts) {\n+            return this.selectedFeedbackIdWithConflicts === ref.feedback?.id;\n+        }\n+        return this.feedbackConflicts?.some((feedbackConflict) => feedbackConflict.conflictingFeedbackId === ref.feedback?.id);\n+    }\n+\n+    /**\n+     * Gets FeedbackConflictType from conflicting feedback. Returns undefined for non conflicts.\n+     * @param ref - TextBlockRef to get FeedbackConflictType of its conflicting feedback.\n+     */\n+    getConflictType(ref: TextBlockRef): FeedbackConflictType | undefined {\n+        const conflict = this.feedbackConflicts?.find((feedbackConflict) => feedbackConflict.conflictingFeedbackId === ref.feedback?.id);\n+        if (conflict) {\n+            return conflict.type!;\n+        }\n+        return undefined;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjYwNTE1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/text-assessment-area/text-assessment-area.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0Nzo1OFrOHki4Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo0Nzo1OFrOHki4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4MjIzMA==", "bodyText": "Same", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508082230", "createdAt": "2020-10-19T21:47:58Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/text-assessment-area/text-assessment-area.component.ts", "diffHunk": "@@ -53,14 +62,59 @@ export class TextAssessmentAreaComponent implements OnChanges {\n         this.textBlockRefsChange.emit(this.textBlockRefs);\n     }\n \n+    /**\n+     * It is called if a text block is added manually.\n+     * @param ref - added text block\n+     */\n     addTextBlockRef(ref: TextBlockRef): void {\n         this.textBlockRefs.push(ref);\n         this.textBlockRefsAddedRemoved.emit();\n     }\n \n+    /**\n+     * It is called if the assessment for a text block is deleted. So, textBlockRef is deleted\n+     * @param ref - TextBlockRef that has a deleted assessment(feedback).\n+     */\n     removeTextBlockRef(ref: TextBlockRef): void {\n         const index = this.textBlockRefs.findIndex((elem) => elem.block!.id! === ref.block!.id!);\n         this.textBlockRefs.splice(index, 1);\n         this.textBlockRefsAddedRemoved.emit();\n     }\n+\n+    /**\n+     * Checks if the passed TextBlockRef has a conflicting feedback.\n+     * If this is the left assessment checks the left conflicting feedback id otherwise searches the feedback id inside the conflicts array.\n+     * Returns false for text-submission-assessment component\n+     * @param ref - TextBlockRef to check if its feedback is conflicting.\n+     */\n+    getIsConflictingFeedback(ref: TextBlockRef): boolean {\n+        if (this.isLeftConflictingFeedback && this.selectedFeedbackIdWithConflicts) {\n+            return this.selectedFeedbackIdWithConflicts === ref.feedback?.id;\n+        }\n+        return this.feedbackConflicts?.some((feedbackConflict) => feedbackConflict.conflictingFeedbackId === ref.feedback?.id);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzYzNTQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/AutomaticTextAssessmentConflictService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjoyMDoyM1rOHksQYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjoyMDoyM1rOHksQYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIzNTg3NA==", "bodyText": "How many submissions are we talking about here? As this is a DB query in a loop, this could be a performance bottleneck.\nIt would be preferred to fetch all blocks in one query and only do the mapping using loops.", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508235874", "createdAt": "2020-10-20T06:20:23Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/service/AutomaticTextAssessmentConflictService.java", "diffHunk": "@@ -111,16 +120,49 @@ public void asyncCheckFeedbackConsistency(List<TextBlock> textBlocks, List<Feedb\n                 feedbackConflict.setSecondFeedback(secondFeedback.get());\n                 feedbackConflict.setType(conflict.getType());\n                 feedbackConflict.setCreatedAt(ZonedDateTime.now());\n+                feedbackConflict.setDiscard(false);\n                 feedbackConflicts.add(feedbackConflict);\n             }\n         });\n \n         // find solved conflicts and add them to list\n-        feedbackConflicts.addAll(this.findSolvedConflicts(textFeedbackConflictRequestDTOS, feedbackConflictResponseDTOS));\n+        feedbackConflicts.addAll(this.findSolvedConflictsInResponse(textFeedbackConflictRequestDTOS, feedbackConflictResponseDTOS));\n \n         feedbackConflictRepository.saveAll(feedbackConflicts);\n     }\n \n+    /**\n+     * Finds and returns the submissions which have the conflicting feedback with the passed feedback\n+     *\n+     * @param feedbackId - passed feedback id\n+     * @return Set of text submissions\n+     */\n+    public Set<TextSubmission> getConflictingSubmissions(long feedbackId) {\n+        List<FeedbackConflict> feedbackConflicts = this.feedbackConflictRepository.findAllByFeedbackId(feedbackId);\n+        Set<TextSubmission> textSubmissionSet = feedbackConflicts.stream().map(conflict -> {\n+            if (conflict.getFirstFeedback().getId() == feedbackId) {\n+                return (TextSubmission) conflict.getSecondFeedback().getResult().getSubmission();\n+            }\n+            else {\n+                return (TextSubmission) conflict.getFirstFeedback().getResult().getSubmission();\n+            }\n+        }).collect(toSet());\n+        textSubmissionSet.forEach(textSubmission -> textSubmission.setBlocks(this.textBlockRepository.findAllBySubmissionId(textSubmission.getId())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mzc2Nzg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/TextAssessmentService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzowNDo0OFrOHktflg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo1MjoyNVrOHk0KRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI1NjE1MA==", "bodyText": "This can be one DB query.", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508256150", "createdAt": "2020-10-20T07:04:48Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/service/TextAssessmentService.java", "diffHunk": "@@ -159,4 +163,13 @@ public void prepareSubmissionForAssessment(TextSubmission textSubmission) {\n             textBlockService.computeTextBlocksForSubmissionBasedOnSyntax(textSubmission);\n         }\n     }\n+\n+    private List<Feedback> getAssessmentsForResultWithConflicts(Result result) {\n+        List<Feedback> feedbackList = this.feedbackRepository.findByResult(result);\n+        feedbackList.forEach(feedback -> {\n+            feedback.setFirstConflicts(this.feedbackConflictRepository.findByFirstFeedbackIdAndConflict(feedback.getId(), true));\n+            feedback.setSecondConflicts(this.feedbackConflictRepository.findBySecondFeedbackIdAndConflict(feedback.getId(), true));\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NTM4Mw==", "bodyText": "How?", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508365383", "createdAt": "2020-10-20T09:52:25Z", "author": {"login": "bigultekin"}, "path": "src/main/java/de/tum/in/www1/artemis/service/TextAssessmentService.java", "diffHunk": "@@ -159,4 +163,13 @@ public void prepareSubmissionForAssessment(TextSubmission textSubmission) {\n             textBlockService.computeTextBlocksForSubmissionBasedOnSyntax(textSubmission);\n         }\n     }\n+\n+    private List<Feedback> getAssessmentsForResultWithConflicts(Result result) {\n+        List<Feedback> feedbackList = this.feedbackRepository.findByResult(result);\n+        feedbackList.forEach(feedback -> {\n+            feedback.setFirstConflicts(this.feedbackConflictRepository.findByFirstFeedbackIdAndConflict(feedback.getId(), true));\n+            feedback.setSecondConflicts(this.feedbackConflictRepository.findBySecondFeedbackIdAndConflict(feedback.getId(), true));\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI1NjE1MA=="}, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzgyMjYwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/text-assessment-area/text-assessment-area.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxOTo1MFrOHkt_1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDowNDozNFrOHk0pVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NDQwNg==", "bodyText": "This is not needed. I think this can be replaced everywhere by feedbackConflicts  === undefined?", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508264406", "createdAt": "2020-10-20T07:19:50Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/text-assessment-area/text-assessment-area.component.ts", "diffHunk": "@@ -18,20 +19,28 @@ export class TextAssessmentAreaComponent implements OnChanges {\n     @Input() submission: TextSubmission;\n     @Input() textBlockRefs: TextBlockRef[];\n     @Input() readOnly: boolean;\n+    @Input() selectedFeedbackIdWithConflicts?: number;\n+    @Input() conflictMode: boolean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3MzMzMw==", "bodyText": "So in the text-submission-assessment.component you might have multiple feedback with conflicts. You select one of them to see its conflicts. selectedFeedbackIdWithConflicts  indicates which feedback with conflicts is selected.", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508373333", "createdAt": "2020-10-20T10:04:34Z", "author": {"login": "bigultekin"}, "path": "src/main/webapp/app/exercises/text/assess-new/text-assessment-area/text-assessment-area.component.ts", "diffHunk": "@@ -18,20 +19,28 @@ export class TextAssessmentAreaComponent implements OnChanges {\n     @Input() submission: TextSubmission;\n     @Input() textBlockRefs: TextBlockRef[];\n     @Input() readOnly: boolean;\n+    @Input() selectedFeedbackIdWithConflicts?: number;\n+    @Input() conflictMode: boolean;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NDQwNg=="}, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzgyNjgwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/text-assessment-area/text-assessment-area.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyMDo1N1rOHkuCSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyMDo1N1rOHkuCSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NTAzNA==", "bodyText": "This is called a lot due to change detection.", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508265034", "createdAt": "2020-10-20T07:20:57Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/text-assessment-area/text-assessment-area.component.html", "diffHunk": "@@ -4,9 +4,14 @@\n         [textBlockRef]=\"ref\"\n         [selected]=\"selectedRef === ref\"\n         [readOnly]=\"readOnly\"\n-        (didSelect)=\"selectedRef = $event\"\n+        [isConflictingFeedback]=\"getIsConflictingFeedback(ref)\"\n+        [conflictType]=\"getConflictType(ref)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzgzMTUwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/conflicts/text-feedback-conflicts.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyMjowOVrOHkuFKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoxMjozM1rOHk09IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NTc3MA==", "bodyText": "Why is [class.p-0]=\"false\" needed?", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508265770", "createdAt": "2020-10-20T07:22:09Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/conflicts/text-feedback-conflicts.component.html", "diffHunk": "@@ -0,0 +1,81 @@\n+<jhi-text-feedback-conflicts-header\n+    [numberOfConflicts]=\"conflictingSubmissions?.length\"\n+    (didChangeConflictIndex)=\"didChangeConflictIndex($event)\"\n+    [haveRights]=\"canOverride(this.leftSubmission?.result)\"\n+    [overrideBusy]=\"overrideBusy\"\n+    [markBusy]=\"markBusy\"\n+    [isOverrideDisabled]=\"isOverrideDisabled\"\n+    [isMarkingDisabled]=\"isMarkingDisabled\"\n+    (overrideLeftSubmission)=\"overrideLeftSubmission()\"\n+    (discardConflict)=\"discardConflict()\"\n+></jhi-text-feedback-conflicts-header>\n+\n+<ng-container *ngIf=\"conflictingSubmissions && conflictingSubmissions.length > 0; then conflict; else noConflict\"></ng-container>\n+\n+<ng-template #conflict>\n+    <div class=\"conflict-container\">\n+        <div class=\"left card\" [class.border-0]=\"false\">\n+            <div class=\"card-header bg-primary text-white\">\n+                <div class=\"flew-grow-1\">\n+                    <span *ngIf=\"isAssessor(this.leftSubmission?.result); else otherAssessorLeftCard\" jhiTranslate=\"artemisApp.textAssessment.conflict.assessor\"></span>\n+                    <ng-template #otherAssessorLeftCard>\n+                        <span\n+                            jhiTranslate=\"artemisApp.textAssessment.conflict.otherAssessor\"\n+                            [translateValues]=\"{ otherUser: this.leftSubmission?.result?.assessor?.name + ' (' + this.leftSubmission?.result?.assessor?.login + ')' }\"\n+                        ></span>\n+                    </ng-template>\n+                </div>\n+                <jhi-score-display [maxScore]=\"exercise?.maxScore\" [score]=\"leftTotalScore\"></jhi-score-display>\n+            </div>\n+            <div class=\"left-body card-body\" [class.p-0]=\"false\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3ODQwMQ==", "bodyText": "so it is false by default. All are removed \ud83d\udc4d", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508378401", "createdAt": "2020-10-20T10:12:33Z", "author": {"login": "bigultekin"}, "path": "src/main/webapp/app/exercises/text/assess-new/conflicts/text-feedback-conflicts.component.html", "diffHunk": "@@ -0,0 +1,81 @@\n+<jhi-text-feedback-conflicts-header\n+    [numberOfConflicts]=\"conflictingSubmissions?.length\"\n+    (didChangeConflictIndex)=\"didChangeConflictIndex($event)\"\n+    [haveRights]=\"canOverride(this.leftSubmission?.result)\"\n+    [overrideBusy]=\"overrideBusy\"\n+    [markBusy]=\"markBusy\"\n+    [isOverrideDisabled]=\"isOverrideDisabled\"\n+    [isMarkingDisabled]=\"isMarkingDisabled\"\n+    (overrideLeftSubmission)=\"overrideLeftSubmission()\"\n+    (discardConflict)=\"discardConflict()\"\n+></jhi-text-feedback-conflicts-header>\n+\n+<ng-container *ngIf=\"conflictingSubmissions && conflictingSubmissions.length > 0; then conflict; else noConflict\"></ng-container>\n+\n+<ng-template #conflict>\n+    <div class=\"conflict-container\">\n+        <div class=\"left card\" [class.border-0]=\"false\">\n+            <div class=\"card-header bg-primary text-white\">\n+                <div class=\"flew-grow-1\">\n+                    <span *ngIf=\"isAssessor(this.leftSubmission?.result); else otherAssessorLeftCard\" jhiTranslate=\"artemisApp.textAssessment.conflict.assessor\"></span>\n+                    <ng-template #otherAssessorLeftCard>\n+                        <span\n+                            jhiTranslate=\"artemisApp.textAssessment.conflict.otherAssessor\"\n+                            [translateValues]=\"{ otherUser: this.leftSubmission?.result?.assessor?.name + ' (' + this.leftSubmission?.result?.assessor?.login + ')' }\"\n+                        ></span>\n+                    </ng-template>\n+                </div>\n+                <jhi-score-display [maxScore]=\"exercise?.maxScore\" [score]=\"leftTotalScore\"></jhi-score-display>\n+            </div>\n+            <div class=\"left-body card-body\" [class.p-0]=\"false\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NTc3MA=="}, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzgzMjEyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/conflicts/text-feedback-conflicts.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyMjoxN1rOHkuFjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyMjoxN1rOHkuFjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NTg2OA==", "bodyText": "Why is [class.p-0]=\"false\" needed?", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508265868", "createdAt": "2020-10-20T07:22:17Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/conflicts/text-feedback-conflicts.component.html", "diffHunk": "@@ -0,0 +1,81 @@\n+<jhi-text-feedback-conflicts-header\n+    [numberOfConflicts]=\"conflictingSubmissions?.length\"\n+    (didChangeConflictIndex)=\"didChangeConflictIndex($event)\"\n+    [haveRights]=\"canOverride(this.leftSubmission?.result)\"\n+    [overrideBusy]=\"overrideBusy\"\n+    [markBusy]=\"markBusy\"\n+    [isOverrideDisabled]=\"isOverrideDisabled\"\n+    [isMarkingDisabled]=\"isMarkingDisabled\"\n+    (overrideLeftSubmission)=\"overrideLeftSubmission()\"\n+    (discardConflict)=\"discardConflict()\"\n+></jhi-text-feedback-conflicts-header>\n+\n+<ng-container *ngIf=\"conflictingSubmissions && conflictingSubmissions.length > 0; then conflict; else noConflict\"></ng-container>\n+\n+<ng-template #conflict>\n+    <div class=\"conflict-container\">\n+        <div class=\"left card\" [class.border-0]=\"false\">\n+            <div class=\"card-header bg-primary text-white\">\n+                <div class=\"flew-grow-1\">\n+                    <span *ngIf=\"isAssessor(this.leftSubmission?.result); else otherAssessorLeftCard\" jhiTranslate=\"artemisApp.textAssessment.conflict.assessor\"></span>\n+                    <ng-template #otherAssessorLeftCard>\n+                        <span\n+                            jhiTranslate=\"artemisApp.textAssessment.conflict.otherAssessor\"\n+                            [translateValues]=\"{ otherUser: this.leftSubmission?.result?.assessor?.name + ' (' + this.leftSubmission?.result?.assessor?.login + ')' }\"\n+                        ></span>\n+                    </ng-template>\n+                </div>\n+                <jhi-score-display [maxScore]=\"exercise?.maxScore\" [score]=\"leftTotalScore\"></jhi-score-display>\n+            </div>\n+            <div class=\"left-body card-body\" [class.p-0]=\"false\">\n+                <jhi-text-assessment-area\n+                    [submission]=\"leftSubmission\"\n+                    [(textBlockRefs)]=\"leftTextBlockRefs\"\n+                    (textBlockRefsChange)=\"leftTextBlockRefsChange()\"\n+                    [readOnly]=\"true\"\n+                    [conflictMode]=\"true\"\n+                    [isLeftConflictingFeedback]=\"true\"\n+                    [selectedFeedbackIdWithConflicts]=\"leftFeedbackId\"\n+                ></jhi-text-assessment-area>\n+            </div>\n+        </div>\n+        <div class=\"movable right\">\n+            <div class=\"draggable-left\">\n+                <fa-icon [icon]=\"'grip-lines-vertical'\"></fa-icon>\n+            </div>\n+            <div class=\"right card\" [class.border-0]=\"false\">\n+                <div class=\"card-header bg-primary text-white\">\n+                    <div class=\"flew-grow-1\">\n+                        <span *ngIf=\"isAssessor(this.rightSubmission?.result); else otherAssessorRightCard\" jhiTranslate=\"artemisApp.textAssessment.conflict.assessor\"></span>\n+                        <ng-template #otherAssessorRightCard>\n+                            <span\n+                                jhiTranslate=\"artemisApp.textAssessment.conflict.otherAssessor\"\n+                                [translateValues]=\"{ otherUser: this.rightSubmission?.result?.assessor?.name + ' (' + this.rightSubmission?.result?.assessor?.login + ')' }\"\n+                            ></span>\n+                        </ng-template>\n+                    </div>\n+                    <jhi-score-display [maxScore]=\"exercise?.maxScore\" [score]=\"rightTotalScore\"></jhi-score-display>\n+                </div>\n+                <div class=\"right-body card-body\" [class.p-0]=\"false\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzgzMjc3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/conflicts/text-feedback-conflicts.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyMjozMFrOHkuF_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyMjozMFrOHkuF_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NTk4MA==", "bodyText": "Why is [class.border-0]=\"false\" needed?", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508265980", "createdAt": "2020-10-20T07:22:30Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/conflicts/text-feedback-conflicts.component.html", "diffHunk": "@@ -0,0 +1,81 @@\n+<jhi-text-feedback-conflicts-header\n+    [numberOfConflicts]=\"conflictingSubmissions?.length\"\n+    (didChangeConflictIndex)=\"didChangeConflictIndex($event)\"\n+    [haveRights]=\"canOverride(this.leftSubmission?.result)\"\n+    [overrideBusy]=\"overrideBusy\"\n+    [markBusy]=\"markBusy\"\n+    [isOverrideDisabled]=\"isOverrideDisabled\"\n+    [isMarkingDisabled]=\"isMarkingDisabled\"\n+    (overrideLeftSubmission)=\"overrideLeftSubmission()\"\n+    (discardConflict)=\"discardConflict()\"\n+></jhi-text-feedback-conflicts-header>\n+\n+<ng-container *ngIf=\"conflictingSubmissions && conflictingSubmissions.length > 0; then conflict; else noConflict\"></ng-container>\n+\n+<ng-template #conflict>\n+    <div class=\"conflict-container\">\n+        <div class=\"left card\" [class.border-0]=\"false\">\n+            <div class=\"card-header bg-primary text-white\">\n+                <div class=\"flew-grow-1\">\n+                    <span *ngIf=\"isAssessor(this.leftSubmission?.result); else otherAssessorLeftCard\" jhiTranslate=\"artemisApp.textAssessment.conflict.assessor\"></span>\n+                    <ng-template #otherAssessorLeftCard>\n+                        <span\n+                            jhiTranslate=\"artemisApp.textAssessment.conflict.otherAssessor\"\n+                            [translateValues]=\"{ otherUser: this.leftSubmission?.result?.assessor?.name + ' (' + this.leftSubmission?.result?.assessor?.login + ')' }\"\n+                        ></span>\n+                    </ng-template>\n+                </div>\n+                <jhi-score-display [maxScore]=\"exercise?.maxScore\" [score]=\"leftTotalScore\"></jhi-score-display>\n+            </div>\n+            <div class=\"left-body card-body\" [class.p-0]=\"false\">\n+                <jhi-text-assessment-area\n+                    [submission]=\"leftSubmission\"\n+                    [(textBlockRefs)]=\"leftTextBlockRefs\"\n+                    (textBlockRefsChange)=\"leftTextBlockRefsChange()\"\n+                    [readOnly]=\"true\"\n+                    [conflictMode]=\"true\"\n+                    [isLeftConflictingFeedback]=\"true\"\n+                    [selectedFeedbackIdWithConflicts]=\"leftFeedbackId\"\n+                ></jhi-text-assessment-area>\n+            </div>\n+        </div>\n+        <div class=\"movable right\">\n+            <div class=\"draggable-left\">\n+                <fa-icon [icon]=\"'grip-lines-vertical'\"></fa-icon>\n+            </div>\n+            <div class=\"right card\" [class.border-0]=\"false\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mzg0MjU4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/text/assess-new/conflicts/text-feedback-conflicts.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyNTowNFrOHkuL4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyNTowNFrOHkuL4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NzQ4OQ==", "bodyText": "I think we discussed this before: If this is not defined, we should fetch this over the network so this page can be reloaded also.", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508267489", "createdAt": "2020-10-20T07:25:04Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/text/assess-new/conflicts/text-feedback-conflicts.component.ts", "diffHunk": "@@ -0,0 +1,265 @@\n+import { Component, OnInit, AfterViewInit } from '@angular/core';\n+import { ActivatedRoute, Router } from '@angular/router';\n+import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n+import { JhiAlertService } from 'ng-jhipster';\n+import { TranslateService } from '@ngx-translate/core';\n+import { Location } from '@angular/common';\n+\n+import { TextAssessmentBaseComponent } from 'app/exercises/text/assess-new/text-assessment-base.component';\n+import { TextSubmission } from 'app/entities/text-submission.model';\n+import { TextAssessmentsService } from 'app/exercises/text/assess/text-assessments.service';\n+import { TextBlockRef } from 'app/entities/text-block-ref.model';\n+import { TextBlock, TextBlockType } from 'app/entities/text-block.model';\n+import { TextExercise } from 'app/entities/text-exercise.model';\n+import { Result } from 'app/entities/result.model';\n+import { FeedbackConflict } from 'app/entities/feedback-conflict';\n+import { AccountService } from 'app/core/auth/account.service';\n+import { StructuredGradingCriterionService } from 'app/exercises/shared/structured-grading-criterion/structured-grading-criterion.service';\n+\n+import interact from 'interactjs';\n+import * as moment from 'moment';\n+\n+@Component({\n+    selector: 'jhi-text-feedback-conflicts',\n+    templateUrl: './text-feedback-conflicts.component.html',\n+    styleUrls: ['./text-feedback-conflicts.component.scss'],\n+})\n+export class TextFeedbackConflictsComponent extends TextAssessmentBaseComponent implements OnInit, AfterViewInit {\n+    conflictingSubmissions?: TextSubmission[];\n+    leftSubmission?: TextSubmission;\n+    leftTextBlockRefs: TextBlockRef[];\n+    leftUnusedTextBlockRefs: TextBlockRef[];\n+    leftTotalScore: number;\n+    leftFeedbackId: number;\n+    rightSubmission?: TextSubmission;\n+    rightTextBlockRefs: TextBlockRef[];\n+    rightUnusedTextBlockRefs: TextBlockRef[];\n+    rightTotalScore: number;\n+    feedbackConflicts: FeedbackConflict[];\n+    overrideBusy = false;\n+    markBusy = false;\n+    isOverrideDisabled = true;\n+    isMarkingDisabled = true;\n+    selectedRightFeedbackId?: number;\n+\n+    private get textBlocksWithFeedbackForLeftSubmission(): TextBlock[] {\n+        return [...this.leftTextBlockRefs, ...this.leftUnusedTextBlockRefs]\n+            .filter(({ block, feedback }) => block?.type === TextBlockType.AUTOMATIC || !!feedback)\n+            .map(({ block }) => block!);\n+    }\n+\n+    constructor(\n+        private activatedRoute: ActivatedRoute,\n+        private router: Router,\n+        private location: Location,\n+        protected accountService: AccountService,\n+        protected assessmentsService: TextAssessmentsService,\n+        protected jhiAlertService: JhiAlertService,\n+        translateService: TranslateService,\n+        protected structuredGradingCriterionService: StructuredGradingCriterionService,\n+    ) {\n+        super(jhiAlertService, accountService, assessmentsService, translateService, structuredGradingCriterionService);\n+        const state = router.getCurrentNavigation()?.extras.state as { submission: TextSubmission };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8afcf71d07374338de25ee4135af526663e9d6cd"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Njk0OTI1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/config/liquibase/changelog/20200926154829_changelog.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODo1MTo0MVrOHlMfOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODo1MTo0MVrOHlMfOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc2Mzk2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <changeSet author=\"birtan (generated)\" id=\"1601128130627-42\">\n          \n          \n            \n                <changeSet author=\"birtan\" id=\"20200908112330\">", "url": "https://github.com/ls1intum/Artemis/pull/2132#discussion_r508763960", "createdAt": "2020-10-20T18:51:41Z", "author": {"login": "krusche"}, "path": "src/main/resources/config/liquibase/changelog/20200926154829_changelog.xml", "diffHunk": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.1\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\" xmlns:pro=\"http://www.liquibase.org/xml/ns/pro\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.9.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <changeSet author=\"birtan (generated)\" id=\"1601128130627-42\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42c7f159b5585a401c3098d28eb5ac2cbc2f5728"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4717, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}