{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NjY5ODQ1", "number": 4256, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDoxNjo0OFrOEW8svw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDoxODoxM1rOEW8xFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDk4NjIzOnYy", "diffSide": "LEFT", "path": "utils/src/test/java/com/cloud/utils/TernaryTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDoxNjo0OFrOG-eOpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDo1ODowNlrOG-fjwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE2MDE2Ng==", "bodyText": "You do not need to remove the equals here. In this very specific use case, there is no null pointer that can happen here.", "url": "https://github.com/apache/cloudstack/pull/4256#discussion_r468160166", "createdAt": "2020-08-10T20:16:48Z", "author": {"login": "rafaelweingartner"}, "path": "utils/src/test/java/com/cloud/utils/TernaryTest.java", "diffHunk": "@@ -28,7 +28,7 @@ public void testEquals() {\n         Assert.assertEquals(new Ternary<String, String, String>(\"a\", \"b\", \"c\"), new Ternary<String, String, String>(\"a\", \"b\", \"c\"));\n         Assert.assertFalse(new Ternary<String, String, String>(\"a\", \"b\", \"c\").equals(new Ternary<String, String, String>(\"a\", \"b\", \"d\")));\n         Assert.assertFalse(new Ternary<String, String, String>(\"a\", \"b\", \"c\").equals(\"\"));\n-        Assert.assertFalse(new Ternary<String, String, String>(\"a\", \"b\", \"c\").equals(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f22d1ee39b7ab33e0b139e8c5936c849d76c2269"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE4MTk1NA==", "bodyText": "thanks for the hint, I did not know about this other specific use case.", "url": "https://github.com/apache/cloudstack/pull/4256#discussion_r468181954", "createdAt": "2020-08-10T20:58:06Z", "author": {"login": "RodrigoDLopez"}, "path": "utils/src/test/java/com/cloud/utils/TernaryTest.java", "diffHunk": "@@ -28,7 +28,7 @@ public void testEquals() {\n         Assert.assertEquals(new Ternary<String, String, String>(\"a\", \"b\", \"c\"), new Ternary<String, String, String>(\"a\", \"b\", \"c\"));\n         Assert.assertFalse(new Ternary<String, String, String>(\"a\", \"b\", \"c\").equals(new Ternary<String, String, String>(\"a\", \"b\", \"d\")));\n         Assert.assertFalse(new Ternary<String, String, String>(\"a\", \"b\", \"c\").equals(\"\"));\n-        Assert.assertFalse(new Ternary<String, String, String>(\"a\", \"b\", \"c\").equals(null));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE2MDE2Ng=="}, "originalCommit": {"oid": "f22d1ee39b7ab33e0b139e8c5936c849d76c2269"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDk5NDcyOnYy", "diffSide": "LEFT", "path": "engine/orchestration/src/test/java/com/cloud/agent/manager/ConnectedAgentAttacheTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDoxNzo0N1rOG-eUTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDoxNzo0N1rOG-eUTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE2MTYxNA==", "bodyText": "The same here. I do not understand why people coded this check, but it does not cause a null pointer. Moreover, if you change the equals to == here, you are changing the test case.", "url": "https://github.com/apache/cloudstack/pull/4256#discussion_r468161614", "createdAt": "2020-08-10T20:17:47Z", "author": {"login": "rafaelweingartner"}, "path": "engine/orchestration/src/test/java/com/cloud/agent/manager/ConnectedAgentAttacheTest.java", "diffHunk": "@@ -44,7 +44,7 @@ public void testEqualsFalseNull() throws Exception {\n \n         ConnectedAgentAttache agentAttache1 = new ConnectedAgentAttache(null, 0, null, link, false);\n \n-        assertFalse(agentAttache1.equals(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f22d1ee39b7ab33e0b139e8c5936c849d76c2269"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDk5NzMzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDoxODoxM1rOG-eV2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDoxODoxM1rOG-eV2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE2MjAxMA==", "bodyText": "This is the only one that makes sense to change.", "url": "https://github.com/apache/cloudstack/pull/4256#discussion_r468162010", "createdAt": "2020-08-10T20:18:13Z", "author": {"login": "rafaelweingartner"}, "path": "server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java", "diffHunk": "@@ -2199,7 +2199,7 @@ public Volume migrateVolume(MigrateVolumeCmd cmd) {\n         // OfflineVmwareMigration: check storage tags on disk(offering)s in comparison to destination storage pool\n         // OfflineVmwareMigration: if no match return a proper error now\n         DiskOfferingVO diskOffering = _diskOfferingDao.findById(vol.getDiskOfferingId());\n-        if (diskOffering.equals(null)) {\n+        if (diskOffering == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f22d1ee39b7ab33e0b139e8c5936c849d76c2269"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3779, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}