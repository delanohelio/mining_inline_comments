{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3OTgwODg3", "number": 4228, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzo0NjowMlrOETXDTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwODo0Njo1M1rOEezcWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzM2MDc5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzo0NjowMlrOG5DWqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTowMDoxOFrOG5F-aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ3Njk3MQ==", "bodyText": "this is not really saying it. what did we fail at for what reason with (and this part is there) what message.", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r462476971", "createdAt": "2020-07-29T17:46:02Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "diffHunk": "@@ -348,11 +362,19 @@ private void setupAgentSecurity(final Connection sshConnection, final String age\n             _hostDao.saveDetails(connectedHost);\n             return resources;\n         } catch (DiscoveredWithErrorException e) {\n+            s_logger.error(\"Exception: \"+ e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87c2cb621e59794f1bdee19690aeca73629f6005"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxNDc4NA==", "bodyText": "I have no idea why it's there in first place. So I'm displaying message whatever we catch", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r462514784", "createdAt": "2020-07-29T18:51:06Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "diffHunk": "@@ -348,11 +362,19 @@ private void setupAgentSecurity(final Connection sshConnection, final String age\n             _hostDao.saveDetails(connectedHost);\n             return resources;\n         } catch (DiscoveredWithErrorException e) {\n+            s_logger.error(\"Exception: \"+ e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ3Njk3MQ=="}, "originalCommit": {"oid": "87c2cb621e59794f1bdee19690aeca73629f6005"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxOTkxNQ==", "bodyText": "ok, than let's at least make the text describing our course of action:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        s_logger.error(\"Exception: \"+ e.getMessage());\n          \n          \n            \n                        s_logger.error(\"DiscoveredWithErrorException caught and rethrowing, message; \" + e.getMessage());", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r462519915", "createdAt": "2020-07-29T19:00:18Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "diffHunk": "@@ -348,11 +362,19 @@ private void setupAgentSecurity(final Connection sshConnection, final String age\n             _hostDao.saveDetails(connectedHost);\n             return resources;\n         } catch (DiscoveredWithErrorException e) {\n+            s_logger.error(\"Exception: \"+ e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ3Njk3MQ=="}, "originalCommit": {"oid": "87c2cb621e59794f1bdee19690aeca73629f6005"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzM5MjQ1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzo1NDoyMVrOG5DqVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMzowNDowOVrOG64rXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4MjAwNg==", "bodyText": "is this comment correct? initialGuid might have a value other than null.", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r462482006", "createdAt": "2020-07-29T17:54:21Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "diffHunk": "@@ -348,11 +362,19 @@ private void setupAgentSecurity(final Connection sshConnection, final String age\n             _hostDao.saveDetails(connectedHost);\n             return resources;\n         } catch (DiscoveredWithErrorException e) {\n+            s_logger.error(\"Exception: \"+ e.getMessage());\n             throw e;\n         } catch (Exception e) {\n             String msg = \" can't setup agent, due to \" + e.toString() + \" - \" + e.getMessage();\n             s_logger.warn(msg);\n         } finally {\n+            // set guid to null once host is added", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87c2cb621e59794f1bdee19690aeca73629f6005"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxNTM4Ng==", "bodyText": "Initialguid will always beer null since I'm fetching the value for a removed host. For non removed hosts it will be non null", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r462515386", "createdAt": "2020-07-29T18:52:10Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "diffHunk": "@@ -348,11 +362,19 @@ private void setupAgentSecurity(final Connection sshConnection, final String age\n             _hostDao.saveDetails(connectedHost);\n             return resources;\n         } catch (DiscoveredWithErrorException e) {\n+            s_logger.error(\"Exception: \"+ e.getMessage());\n             throw e;\n         } catch (Exception e) {\n             String msg = \" can't setup agent, due to \" + e.toString() + \" - \" + e.getMessage();\n             s_logger.warn(msg);\n         } finally {\n+            // set guid to null once host is added", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4MjAwNg=="}, "originalCommit": {"oid": "87c2cb621e59794f1bdee19690aeca73629f6005"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxNzk4OA==", "bodyText": "exactly. it is not necessarily null. I think you'd better remove this comment, it is confusing.", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r462517988", "createdAt": "2020-07-29T18:56:46Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "diffHunk": "@@ -348,11 +362,19 @@ private void setupAgentSecurity(final Connection sshConnection, final String age\n             _hostDao.saveDetails(connectedHost);\n             return resources;\n         } catch (DiscoveredWithErrorException e) {\n+            s_logger.error(\"Exception: \"+ e.getMessage());\n             throw e;\n         } catch (Exception e) {\n             String msg = \" can't setup agent, due to \" + e.toString() + \" - \" + e.getMessage();\n             s_logger.warn(msg);\n         } finally {\n+            // set guid to null once host is added", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4MjAwNg=="}, "originalCommit": {"oid": "87c2cb621e59794f1bdee19690aeca73629f6005"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM5OTE5Ng==", "bodyText": "@DaanHoogland this code is executed only for the newly added hosts. When the host is removed previously, the guid is set to null. So the initial value of guid will always be null in this case.\nBefore adding the host, I set the guid to a temporary value and at the end I set it back to null which is the original value.\nI hope to have cleared your confusion", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r464399196", "createdAt": "2020-08-03T13:04:09Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "diffHunk": "@@ -348,11 +362,19 @@ private void setupAgentSecurity(final Connection sshConnection, final String age\n             _hostDao.saveDetails(connectedHost);\n             return resources;\n         } catch (DiscoveredWithErrorException e) {\n+            s_logger.error(\"Exception: \"+ e.getMessage());\n             throw e;\n         } catch (Exception e) {\n             String msg = \" can't setup agent, due to \" + e.toString() + \" - \" + e.getMessage();\n             s_logger.warn(msg);\n         } finally {\n+            // set guid to null once host is added", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ4MjAwNg=="}, "originalCommit": {"oid": "87c2cb621e59794f1bdee19690aeca73629f6005"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwODUxNTIxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMTo0NTowN1rOG8GF4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMTo0NTowN1rOG8GF4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2NzU1NA==", "bodyText": "general jist looks good, i'd rather have the tristate operator in the parameter passing then the whole contructor invocation ? note the ?)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ShutdownCommand cmd = AddHostOnServiceRestart.value() ? new ShutdownCommand(ShutdownCommand.DeleteHost, null, false) :\n          \n          \n            \n                                new ShutdownCommand(ShutdownCommand.DeleteHost, \"Cleaning up zone/pod/cluster details for host\", true);\n          \n          \n            \n                        ShutdownCommand cmd = new ShutdownCommand(ShutdownCommand.DeleteHost, null, AddHostOnServiceRestart.value() ? false : true);", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r465667554", "createdAt": "2020-08-05T11:45:07Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/hypervisor/kvm/discoverer/LibvirtServerDiscoverer.java", "diffHunk": "@@ -474,7 +477,8 @@ public DeleteHostAnswer deleteHost(HostVO host, boolean isForced, boolean isForc\n \n         _resourceMgr.deleteRoutingHost(host, isForced, isForceDeleteStorage);\n         try {\n-            ShutdownCommand cmd = new ShutdownCommand(ShutdownCommand.DeleteHost, null);\n+            ShutdownCommand cmd = AddHostOnServiceRestart.value() ? new ShutdownCommand(ShutdownCommand.DeleteHost, null, false) :\n+                    new ShutdownCommand(ShutdownCommand.DeleteHost, \"Cleaning up zone/pod/cluster details for host\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a714b996a396001126a71aefaee6b9460a249b98"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjIzODI4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNjoxMjoxOVrOG-ptiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwODoyNTo0MlrOG-tjhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0ODI5OQ==", "bodyText": "Considering that this is defined as a static final, I would recommend keeping the code convention such as described on Oracle Java Naming Conventions.\nIn this case AddHostOnServiceRestart should be changed to something as ADD_HOST_ON_SERVICE_RESTART.", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r468348299", "createdAt": "2020-08-11T06:12:19Z", "author": {"login": "GabrielBrascher"}, "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "diffHunk": "@@ -410,6 +410,10 @@\n     public final static ConfigKey<Long> IOPS_MAX_WRITE_LENGTH = new ConfigKey<Long>(Long.class, \"vm.disk.iops.maximum.write.length\", \"Advanced\", \"0\",\n             \"Maximum IOPS write burst duration (seconds). If '0' (zero) then does not check for maximum burst length.\", true, ConfigKey.Scope.Global, null);\n \n+    public static final ConfigKey<Boolean> AddHostOnServiceRestart = new ConfigKey<Boolean>(Boolean.class, \"add.host.on.service.restart\", \"Advanced\", \"true\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f06a04f21564d00c8cd6953fec74ef1e2aa10e0f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQxMTI2OQ==", "bodyText": "@GabrielBrascher I made the necessary changes. Please review again", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r468411269", "createdAt": "2020-08-11T08:25:42Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "diffHunk": "@@ -410,6 +410,10 @@\n     public final static ConfigKey<Long> IOPS_MAX_WRITE_LENGTH = new ConfigKey<Long>(Long.class, \"vm.disk.iops.maximum.write.length\", \"Advanced\", \"0\",\n             \"Maximum IOPS write burst duration (seconds). If '0' (zero) then does not check for maximum burst length.\", true, ConfigKey.Scope.Global, null);\n \n+    public static final ConfigKey<Boolean> AddHostOnServiceRestart = new ConfigKey<Boolean>(Boolean.class, \"add.host.on.service.restart\", \"Advanced\", \"true\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0ODI5OQ=="}, "originalCommit": {"oid": "f06a04f21564d00c8cd6953fec74ef1e2aa10e0f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjI0NjAxOnYy", "diffSide": "RIGHT", "path": "agent/src/main/java/com/cloud/agent/Agent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNjoxNTo0NFrOG-px_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNjoxNTo0NFrOG-px_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM0OTQzOA==", "bodyText": "These commented lines could be a nice Javadoc for the method; what do you think of moving them to a Javadoc block?", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r468349438", "createdAt": "2020-08-11T06:15:44Z", "author": {"login": "GabrielBrascher"}, "path": "agent/src/main/java/com/cloud/agent/Agent.java", "diffHunk": "@@ -419,6 +419,15 @@ protected void cancelTasks() {\n         }\n     }\n \n+    protected void cleanupAgentZoneProperties() {\n+        // Unset zone, cluster and pod values so that host is not added back\n+        // when service is restarted. This will be set to proper values\n+        // when host is added back", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f06a04f21564d00c8cd6953fec74ef1e2aa10e0f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzM1NTc5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwODo0Njo1M1rOHKsY5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjozNTo0M1rOHLs9rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk3NTA3OQ==", "bodyText": "If this is KVM specific can we add kvm in the global setting name @ravening ?", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r480975079", "createdAt": "2020-09-01T08:46:53Z", "author": {"login": "rhtyd"}, "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "diffHunk": "@@ -410,6 +410,10 @@\n     public final static ConfigKey<Long> IOPS_MAX_WRITE_LENGTH = new ConfigKey<Long>(Long.class, \"vm.disk.iops.maximum.write.length\", \"Advanced\", \"0\",\n             \"Maximum IOPS write burst duration (seconds). If '0' (zero) then does not check for maximum burst length.\", true, ConfigKey.Scope.Global, null);\n \n+    public static final ConfigKey<Boolean> ADD_HOST_ON_SERVICE_RESTART = new ConfigKey<Boolean>(Boolean.class, \"add.host.on.service.restart\", \"Advanced\", \"true\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bad37509e0c9cd7ec9ead0f644ded4db6a523665"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk4NzE3NQ==", "bodyText": "@rhtyd i don't think this is KVM specific. The code path is same for all HV's I guess. Didn't test it on other Hv types.", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r480987175", "createdAt": "2020-09-01T09:07:03Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "diffHunk": "@@ -410,6 +410,10 @@\n     public final static ConfigKey<Long> IOPS_MAX_WRITE_LENGTH = new ConfigKey<Long>(Long.class, \"vm.disk.iops.maximum.write.length\", \"Advanced\", \"0\",\n             \"Maximum IOPS write burst duration (seconds). If '0' (zero) then does not check for maximum burst length.\", true, ConfigKey.Scope.Global, null);\n \n+    public static final ConfigKey<Boolean> ADD_HOST_ON_SERVICE_RESTART = new ConfigKey<Boolean>(Boolean.class, \"add.host.on.service.restart\", \"Advanced\", \"true\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk3NTA3OQ=="}, "originalCommit": {"oid": "bad37509e0c9cd7ec9ead0f644ded4db6a523665"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzNzg0NA==", "bodyText": "The agent only runs on KVM host, for the other two major hypervisors (VMware and XenServer) we don't run an agent on them.", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r481037844", "createdAt": "2020-09-01T10:28:57Z", "author": {"login": "rhtyd"}, "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "diffHunk": "@@ -410,6 +410,10 @@\n     public final static ConfigKey<Long> IOPS_MAX_WRITE_LENGTH = new ConfigKey<Long>(Long.class, \"vm.disk.iops.maximum.write.length\", \"Advanced\", \"0\",\n             \"Maximum IOPS write burst duration (seconds). If '0' (zero) then does not check for maximum burst length.\", true, ConfigKey.Scope.Global, null);\n \n+    public static final ConfigKey<Boolean> ADD_HOST_ON_SERVICE_RESTART = new ConfigKey<Boolean>(Boolean.class, \"add.host.on.service.restart\", \"Advanced\", \"true\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk3NTA3OQ=="}, "originalCommit": {"oid": "bad37509e0c9cd7ec9ead0f644ded4db6a523665"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI3NzkyMQ==", "bodyText": "Didnt know that :P will add KVM in the name", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r481277921", "createdAt": "2020-09-01T16:28:45Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "diffHunk": "@@ -410,6 +410,10 @@\n     public final static ConfigKey<Long> IOPS_MAX_WRITE_LENGTH = new ConfigKey<Long>(Long.class, \"vm.disk.iops.maximum.write.length\", \"Advanced\", \"0\",\n             \"Maximum IOPS write burst duration (seconds). If '0' (zero) then does not check for maximum burst length.\", true, ConfigKey.Scope.Global, null);\n \n+    public static final ConfigKey<Boolean> ADD_HOST_ON_SERVICE_RESTART = new ConfigKey<Boolean>(Boolean.class, \"add.host.on.service.restart\", \"Advanced\", \"true\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk3NTA3OQ=="}, "originalCommit": {"oid": "bad37509e0c9cd7ec9ead0f644ded4db6a523665"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAzMzA3MQ==", "bodyText": "@rhtyd made the change", "url": "https://github.com/apache/cloudstack/pull/4228#discussion_r482033071", "createdAt": "2020-09-02T12:35:43Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/configuration/ConfigurationManagerImpl.java", "diffHunk": "@@ -410,6 +410,10 @@\n     public final static ConfigKey<Long> IOPS_MAX_WRITE_LENGTH = new ConfigKey<Long>(Long.class, \"vm.disk.iops.maximum.write.length\", \"Advanced\", \"0\",\n             \"Maximum IOPS write burst duration (seconds). If '0' (zero) then does not check for maximum burst length.\", true, ConfigKey.Scope.Global, null);\n \n+    public static final ConfigKey<Boolean> ADD_HOST_ON_SERVICE_RESTART = new ConfigKey<Boolean>(Boolean.class, \"add.host.on.service.restart\", \"Advanced\", \"true\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk3NTA3OQ=="}, "originalCommit": {"oid": "bad37509e0c9cd7ec9ead0f644ded4db6a523665"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3762, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}