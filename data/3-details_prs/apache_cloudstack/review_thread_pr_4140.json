{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNDA2NzI0", "number": 4140, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwMzowMDowOVrOEFX_xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjowNjo1NFrOEGKwRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDcxNDk1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/cloudstack/api/command/user/template/ListTemplatesCmd.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwMzowMDowOVrOGjh2Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMDo0MDo0OVrOGkHU1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkwNzg0Mw==", "bodyText": "@davidjumani add version 4.15", "url": "https://github.com/apache/cloudstack/pull/4140#discussion_r439907843", "createdAt": "2020-06-15T03:00:09Z", "author": {"login": "rhtyd"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/user/template/ListTemplatesCmd.java", "diffHunk": "@@ -78,6 +78,9 @@\n     @Parameter(name = ApiConstants.PARENT_TEMPLATE_ID, type = CommandType.UUID, entityType = TemplateResponse.class, description = \"list datadisk templates by parent template id\", since = \"4.4\")\n     private Long parentTemplateId;\n \n+    @Parameter(name = ApiConstants.SHOW_UNIQUE, type = CommandType.BOOLEAN, description = \"If set to true, list only unique templates across zones\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c702dcd98b033572a24d284d3d25af34a047e179"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyMTk0Mg==", "bodyText": "@rhtyd this PR is aiming 4.13 branch. Considering the version 4.15, shouldn`t it aim master?", "url": "https://github.com/apache/cloudstack/pull/4140#discussion_r440521942", "createdAt": "2020-06-16T00:40:49Z", "author": {"login": "GabrielBrascher"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/user/template/ListTemplatesCmd.java", "diffHunk": "@@ -78,6 +78,9 @@\n     @Parameter(name = ApiConstants.PARENT_TEMPLATE_ID, type = CommandType.UUID, entityType = TemplateResponse.class, description = \"list datadisk templates by parent template id\", since = \"4.4\")\n     private Long parentTemplateId;\n \n+    @Parameter(name = ApiConstants.SHOW_UNIQUE, type = CommandType.BOOLEAN, description = \"If set to true, list only unique templates across zones\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkwNzg0Mw=="}, "originalCommit": {"oid": "c702dcd98b033572a24d284d3d25af34a047e179"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDcxNjI2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/cloudstack/api/command/user/iso/ListIsosCmd.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwMzowMDo1M1rOGjh2uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwMzowMDo1M1rOGjh2uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkwODAyNw==", "bodyText": "Can be simplified as return showUnique != null && showUnique;", "url": "https://github.com/apache/cloudstack/pull/4140#discussion_r439908027", "createdAt": "2020-06-15T03:00:53Z", "author": {"login": "rhtyd"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/user/iso/ListIsosCmd.java", "diffHunk": "@@ -118,6 +121,10 @@ public Boolean getShowRemoved() {\n         return (showRemoved != null ? showRemoved : false);\n     }\n \n+    public Boolean getShowUnique() {\n+        return (showUnique != null ? showUnique : false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c702dcd98b033572a24d284d3d25af34a047e179"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDcxNzE3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/api/query/QueryManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwMzowMToyOVrOGjh3NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwMzowMToyOVrOGjh3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkwODE0OQ==", "bodyText": "Please explore if you can simplify the code", "url": "https://github.com/apache/cloudstack/pull/4140#discussion_r439908149", "createdAt": "2020-06-15T03:01:29Z", "author": {"login": "rhtyd"}, "path": "server/src/main/java/com/cloud/api/query/QueryManagerImpl.java", "diffHunk": "@@ -3423,12 +3432,32 @@ else if (!template.isPublicTemplate() && caller.getType() != Account.ACCOUNT_TYP\n             return uniqueTmplPair;\n         }\n         List<TemplateJoinVO> uniqueTmpls = uniqueTmplPair.first();\n-        String[] tzIds = new String[uniqueTmpls.size()];\n         int i = 0;\n-        for (TemplateJoinVO v : uniqueTmpls) {\n-            tzIds[i++] = v.getTempZonePair();\n+        List<TemplateJoinVO> vrs = null;\n+        if (showUnique) {\n+            Long[] tzIds = new Long[uniqueTmpls.size()];\n+            for (TemplateJoinVO v : uniqueTmpls) {\n+                tzIds[i++] = v.getId();\n+            }\n+            vrs = _templateJoinDao.findByIds(tzIds);\n+\n+            // Get only unique id rows\n+            Long lastId = null;\n+            for(i = vrs.size() - 1; i >= 0; i--) {\n+                if (new Long(vrs.get(i).getId()).equals(lastId)) {\n+                    vrs.remove(i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c702dcd98b033572a24d284d3d25af34a047e179"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjUyNjM3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/api/query/QueryManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzowODoyMFrOGkab8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzowODoyMFrOGkab8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzNTA1OQ==", "bodyText": "Unit testing for such a huge/complex method is not easy. However, it would be great to address small pieces.\nWith that said, lines 3436 - 3448 could be extracted into a method that would allow testing this specific piece of code.", "url": "https://github.com/apache/cloudstack/pull/4140#discussion_r440835059", "createdAt": "2020-06-16T13:08:20Z", "author": {"login": "GabrielBrascher"}, "path": "server/src/main/java/com/cloud/api/query/QueryManagerImpl.java", "diffHunk": "@@ -3423,12 +3432,22 @@ else if (!template.isPublicTemplate() && caller.getType() != Account.ACCOUNT_TYP\n             return uniqueTmplPair;\n         }\n         List<TemplateJoinVO> uniqueTmpls = uniqueTmplPair.first();\n-        String[] tzIds = new String[uniqueTmpls.size()];\n         int i = 0;\n-        for (TemplateJoinVO v : uniqueTmpls) {\n-            tzIds[i++] = v.getTempZonePair();\n+        List<TemplateJoinVO> vrs = null;\n+        if (showUnique) {\n+            Long[] tzIds = new Long[uniqueTmpls.size()];\n+            for (TemplateJoinVO v : uniqueTmpls) {\n+                tzIds[i++] = v.getId();\n+            }\n+            vrs = _templateJoinDao.findByDistinctIds(tzIds);\n+        } else {\n+            String[] tzIds = new String[uniqueTmpls.size()];\n+            for (TemplateJoinVO v : uniqueTmpls) {\n+                tzIds[i++] = v.getTempZonePair();\n+            }\n+            vrs = _templateJoinDao.searchByTemplateZonePair(showRemovedTmpl, tzIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c580555c27e87f59a12e52ac868df8df19fd48ff"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTAwMjc5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/api/query/dao/TemplateJoinDaoImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMTo0OTo1N1rOGky1pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMTo0OTo1N1rOGky1pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIzNDg1NA==", "bodyText": "@davidjumani make it defensive, for example do a null check on ids", "url": "https://github.com/apache/cloudstack/pull/4140#discussion_r441234854", "createdAt": "2020-06-17T01:49:57Z", "author": {"login": "rhtyd"}, "path": "server/src/main/java/com/cloud/api/query/dao/TemplateJoinDaoImpl.java", "diffHunk": "@@ -481,4 +488,14 @@ public TemplateResponse newIsoResponse(TemplateJoinVO iso) {\n         return new Pair<List<TemplateJoinVO>, Integer>(objects, count);\n     }\n \n+    @Override\n+    public List<TemplateJoinVO> findByDistinctIds(Long... ids) {\n+        if (ids.length == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c580555c27e87f59a12e52ac868df8df19fd48ff"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTAzMTA4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/api/query/QueryManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjowNjo1NFrOGkzG9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjowNjo1NFrOGkzG9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIzOTI4Ng==", "bodyText": "@davidjumani nit - let's refactor and use a more modern form of writing code, the current code looks less like Java, more like C/C++; can be written as:\nLong[] templateIds = uniqueTmpls.stream().map(template -> template.getId()).toArray(Long[]::new);", "url": "https://github.com/apache/cloudstack/pull/4140#discussion_r441239286", "createdAt": "2020-06-17T02:06:54Z", "author": {"login": "rhtyd"}, "path": "server/src/main/java/com/cloud/api/query/QueryManagerImpl.java", "diffHunk": "@@ -3423,12 +3432,22 @@ else if (!template.isPublicTemplate() && caller.getType() != Account.ACCOUNT_TYP\n             return uniqueTmplPair;\n         }\n         List<TemplateJoinVO> uniqueTmpls = uniqueTmplPair.first();\n-        String[] tzIds = new String[uniqueTmpls.size()];\n         int i = 0;\n-        for (TemplateJoinVO v : uniqueTmpls) {\n-            tzIds[i++] = v.getTempZonePair();\n+        List<TemplateJoinVO> vrs = null;\n+        if (showUnique) {\n+            Long[] tzIds = new Long[uniqueTmpls.size()];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c580555c27e87f59a12e52ac868df8df19fd48ff"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3926, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}