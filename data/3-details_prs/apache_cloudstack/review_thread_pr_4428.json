{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNjUwNTUx", "number": 4428, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjoyNjozMFrOEyU6sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo0OToyNVrOE6dYGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMjA2OTYyOnYy", "diffSide": "RIGHT", "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjoyNjozMFrOHo5qMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNzozOToyMVrOHpdPLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0OTc3OA==", "bodyText": "if we randomise and limit to one result, what does it matter what the ordering of the set is?", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r512649778", "createdAt": "2020-10-27T12:26:30Z", "author": {"login": "DaanHoogland"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +131,15 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        for (Long hostId: dedicatedHosts){ // put dedicated hosts at the end of the result set\n+            sbuilder.append(\"field(t.id, '\" + hostId +\"'),\" );\n+        }\n+        sbuilder.append(\" rand() limit 1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c417131154b873eddf0ac89ed5d6264076cd476"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY1NzA5Mw==", "bodyText": "The limit is only applied after the ordering and the dedicated hosts are not part of the randomization.", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r512657093", "createdAt": "2020-10-27T12:38:51Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +131,15 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        for (Long hostId: dedicatedHosts){ // put dedicated hosts at the end of the result set\n+            sbuilder.append(\"field(t.id, '\" + hostId +\"'),\" );\n+        }\n+        sbuilder.append(\" rand() limit 1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0OTc3OA=="}, "originalCommit": {"oid": "2c417131154b873eddf0ac89ed5d6264076cd476"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcxNTgxOA==", "bodyText": "ok, really not very clear code than. What would the resulting sql of this be?", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r512715818", "createdAt": "2020-10-27T13:59:54Z", "author": {"login": "DaanHoogland"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +131,15 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        for (Long hostId: dedicatedHosts){ // put dedicated hosts at the end of the result set\n+            sbuilder.append(\"field(t.id, '\" + hostId +\"'),\" );\n+        }\n+        sbuilder.append(\" rand() limit 1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0OTc3OA=="}, "originalCommit": {"oid": "2c417131154b873eddf0ac89ed5d6264076cd476"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcxOTY4Mg==", "bodyText": "select t.id from (\n    select h.id, cd.value \n    from host h \n    join storage_pool_host_ref s on h.id = s.host_id  \n    join cluster c on c.id=h.cluster_id \n    left join cluster_details cd on c.id=cd.cluster_id \n    and cd.name='cluster.storage.operations.exclude' \n    where h.status = 'Up' \n    and h.type = 'Routing' \n    and h.resource_state = 'Enabled' \n    and s.pool_id = 1\n    and h.data_center_id = 1\n) t \nwhere t.value<>'true' \nor t.value is null \nORDER BY field(t.id, '2'), field(t.id, '5'), rand() limit 1", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r512719682", "createdAt": "2020-10-27T14:04:46Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +131,15 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        for (Long hostId: dedicatedHosts){ // put dedicated hosts at the end of the result set\n+            sbuilder.append(\"field(t.id, '\" + hostId +\"'),\" );\n+        }\n+        sbuilder.append(\" rand() limit 1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0OTc3OA=="}, "originalCommit": {"oid": "2c417131154b873eddf0ac89ed5d6264076cd476"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcyODE5Mg==", "bodyText": "so why this complicated way to filter out specific values? It isn't very readible and we can add tham to the where clause as not t.id in (<hostID>, ...)", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r512728192", "createdAt": "2020-10-27T14:15:03Z", "author": {"login": "DaanHoogland"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +131,15 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        for (Long hostId: dedicatedHosts){ // put dedicated hosts at the end of the result set\n+            sbuilder.append(\"field(t.id, '\" + hostId +\"'),\" );\n+        }\n+        sbuilder.append(\" rand() limit 1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0OTc3OA=="}, "originalCommit": {"oid": "2c417131154b873eddf0ac89ed5d6264076cd476"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc1NDEyMA==", "bodyText": "We don't want to filter them out, just reorder because there can be the case of all hosts being dedicated.", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r512754120", "createdAt": "2020-10-27T14:45:02Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +131,15 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        for (Long hostId: dedicatedHosts){ // put dedicated hosts at the end of the result set\n+            sbuilder.append(\"field(t.id, '\" + hostId +\"'),\" );\n+        }\n+        sbuilder.append(\" rand() limit 1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0OTc3OA=="}, "originalCommit": {"oid": "2c417131154b873eddf0ac89ed5d6264076cd476"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc3MjI5Mw==", "bodyText": "ok, next question, why two separate field() calls and not a combined one?", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r512772293", "createdAt": "2020-10-27T15:06:15Z", "author": {"login": "DaanHoogland"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +131,15 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        for (Long hostId: dedicatedHosts){ // put dedicated hosts at the end of the result set\n+            sbuilder.append(\"field(t.id, '\" + hostId +\"'),\" );\n+        }\n+        sbuilder.append(\" rand() limit 1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0OTc3OA=="}, "originalCommit": {"oid": "2c417131154b873eddf0ac89ed5d6264076cd476"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIzMjY4Nw==", "bodyText": "Yes, I have been thinking about that, I may be able to combine this into 1 field call. - I'll see what I can do.", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r513232687", "createdAt": "2020-10-28T07:39:21Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +131,15 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        for (Long hostId: dedicatedHosts){ // put dedicated hosts at the end of the result set\n+            sbuilder.append(\"field(t.id, '\" + hostId +\"'),\" );\n+        }\n+        sbuilder.append(\" rand() limit 1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0OTc3OA=="}, "originalCommit": {"oid": "2c417131154b873eddf0ac89ed5d6264076cd476"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTIwNjk1OnYy", "diffSide": "RIGHT", "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODo0OTo0OFrOHqRwNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwODo0NTozOFrOHvkMcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA5MzExMQ==", "bodyText": "can this be a separate method (i.e. moveDedicatedHostsToBackForExclusion(sbuilder,dedicatedHosts);) ?", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r514093111", "createdAt": "2020-10-29T08:49:48Z", "author": {"login": "DaanHoogland"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        if (dedicatedHosts.size() > 0) {\n+            Collections.shuffle(dedicatedHosts); // Randomize dedicated hosts as well.\n+            sbuilder.append(\"field(t.id, \");\n+            Iterator<Long> hostIt = dedicatedHosts.iterator();\n+            while (hostIt.hasNext()) { // put dedicated hosts at the end of the result set\n+                sbuilder.append(\"'\" + hostIt.next() + \"'\");\n+                if (hostIt.hasNext()) {\n+                    sbuilder.append(\",\");\n+                }\n+            }\n+            sbuilder.append(\"),\" );\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY2NTk3Mw==", "bodyText": "pretty please, @Spaceman1984", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r518665973", "createdAt": "2020-11-06T10:40:00Z", "author": {"login": "DaanHoogland"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        if (dedicatedHosts.size() > 0) {\n+            Collections.shuffle(dedicatedHosts); // Randomize dedicated hosts as well.\n+            sbuilder.append(\"field(t.id, \");\n+            Iterator<Long> hostIt = dedicatedHosts.iterator();\n+            while (hostIt.hasNext()) { // put dedicated hosts at the end of the result set\n+                sbuilder.append(\"'\" + hostIt.next() + \"'\");\n+                if (hostIt.hasNext()) {\n+                    sbuilder.append(\",\");\n+                }\n+            }\n+            sbuilder.append(\"),\" );\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA5MzExMQ=="}, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY3NDQ4Mg==", "bodyText": "I'll see what I can do @DaanHoogland", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r518674482", "createdAt": "2020-11-06T10:55:30Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        if (dedicatedHosts.size() > 0) {\n+            Collections.shuffle(dedicatedHosts); // Randomize dedicated hosts as well.\n+            sbuilder.append(\"field(t.id, \");\n+            Iterator<Long> hostIt = dedicatedHosts.iterator();\n+            while (hostIt.hasNext()) { // put dedicated hosts at the end of the result set\n+                sbuilder.append(\"'\" + hostIt.next() + \"'\");\n+                if (hostIt.hasNext()) {\n+                    sbuilder.append(\",\");\n+                }\n+            }\n+            sbuilder.append(\"),\" );\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA5MzExMQ=="}, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYzODEyOQ==", "bodyText": "Done", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r519638129", "createdAt": "2020-11-09T08:45:38Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        if (dedicatedHosts.size() > 0) {\n+            Collections.shuffle(dedicatedHosts); // Randomize dedicated hosts as well.\n+            sbuilder.append(\"field(t.id, \");\n+            Iterator<Long> hostIt = dedicatedHosts.iterator();\n+            while (hostIt.hasNext()) { // put dedicated hosts at the end of the result set\n+                sbuilder.append(\"'\" + hostIt.next() + \"'\");\n+                if (hostIt.hasNext()) {\n+                    sbuilder.append(\",\");\n+                }\n+            }\n+            sbuilder.append(\"),\" );\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA5MzExMQ=="}, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NzEwMDA1OnYy", "diffSide": "RIGHT", "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNjozNTo1NVrOHvgicw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwOTo1Mjo0MFrOHwUgyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU3ODIyNw==", "bodyText": "@Spaceman1984 get the dedicated hosts list based on the scope here, instead all hosts. not required to iterate through all hosts for the given scope.", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r519578227", "createdAt": "2020-11-09T06:35:55Z", "author": {"login": "sureshanaparti"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTcxMjA5MA==", "bodyText": "This call doesn't get all hosts, it gets all dedicated hosts, which is then used to build up a random list of dedicated hosts to move to the back of the result set. To remove some of the entries I will have to iterate through another list of hosts from another resultset which I think would cause more overhead than doing it this way. Or am I misunderstanding your intention?", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r519712090", "createdAt": "2020-11-09T10:42:53Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU3ODIyNw=="}, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM5MDYxMA==", "bodyText": "This call doesn't get all hosts, it gets all dedicated hosts, which is then used to build up a random list of dedicated hosts to move to the back of the result set. To remove some of the entries I will have to iterate through another list of hosts from another resultset which I think would cause more overhead than doing it this way. Or am I misunderstanding your intention?\n\n@Spaceman1984 I mean to say, pick only the dedicated hosts based on the scope. For example, whenever the pool scope is Cluster, pick all the dedicated hosts in that cluster only, not the entire list of dedicated hosts. Got it?", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r520390610", "createdAt": "2020-11-10T08:54:12Z", "author": {"login": "sureshanaparti"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU3ODIyNw=="}, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM5Njg0MQ==", "bodyText": "Yes, I understand. Making this change is not going to reduce the size of the result set, it will reduce the number of ids to order against. I don't think adding this complexity is worth the effort as this functionality is not available in the DAO, I will have to write a few more functions to make that happen. If you feel that we need this, then I will go ahead.", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r520396841", "createdAt": "2020-11-10T09:04:02Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU3ODIyNw=="}, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM5OTYxOQ==", "bodyText": "I mean, if a host is not in the order list it gets ignored.", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r520399619", "createdAt": "2020-11-10T09:08:24Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU3ODIyNw=="}, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyOTc3MQ==", "bodyText": "@Spaceman1984 New method in dao would be better. Consider a case with 2 clusters, one has 'N' dedicated hosts and the other has None. When you process the pool with second cluster, you have to iterate over the 'N' dedicated hosts (belongs to first cluster) without any use go them. and also, you are passing them to the sql knowingly that these host ids doesn't exist in the result set.", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r520429771", "createdAt": "2020-11-10T09:52:40Z", "author": {"login": "sureshanaparti"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU3ODIyNw=="}, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NzExNDIzOnYy", "diffSide": "RIGHT", "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNjo0MzowOFrOHvgqow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTozNToyM1rOHvmDkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU4MDMyMw==", "bodyText": "@Spaceman1984 the ordering based on the dedicated host ids here would put them on the top, can you confirm the result here?", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r519580323", "createdAt": "2020-11-09T06:43:08Z", "author": {"login": "sureshanaparti"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        if (dedicatedHosts.size() > 0) {\n+            Collections.shuffle(dedicatedHosts); // Randomize dedicated hosts as well.\n+            sbuilder.append(\"field(t.id, \");\n+            Iterator<Long> hostIt = dedicatedHosts.iterator();\n+            while (hostIt.hasNext()) { // put dedicated hosts at the end of the result set", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYzNzg3Nw==", "bodyText": "@sureshanaparti  I ran the SQL multiple times, the dedicated hosts were always at the end of the result set.", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r519637877", "createdAt": "2020-11-09T08:45:12Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        if (dedicatedHosts.size() > 0) {\n+            Collections.shuffle(dedicatedHosts); // Randomize dedicated hosts as well.\n+            sbuilder.append(\"field(t.id, \");\n+            Iterator<Long> hostIt = dedicatedHosts.iterator();\n+            while (hostIt.hasNext()) { // put dedicated hosts at the end of the result set", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU4MDMyMw=="}, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY0MTMyMg==", "bodyText": "@sureshanaparti I ran the SQL multiple times, the dedicated hosts were always at the end of the result set.\n\nLet's consider host ids: 3, 4 are dedicated, then the query does \" ORDER by field(t.id, '3','4'), rand() limit 1\". Am I correct?", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r519641322", "createdAt": "2020-11-09T08:51:14Z", "author": {"login": "sureshanaparti"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        if (dedicatedHosts.size() > 0) {\n+            Collections.shuffle(dedicatedHosts); // Randomize dedicated hosts as well.\n+            sbuilder.append(\"field(t.id, \");\n+            Iterator<Long> hostIt = dedicatedHosts.iterator();\n+            while (hostIt.hasNext()) { // put dedicated hosts at the end of the result set", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU4MDMyMw=="}, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY0MzMyOA==", "bodyText": "Yes @sureshanaparti", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r519643328", "createdAt": "2020-11-09T08:54:38Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        if (dedicatedHosts.size() > 0) {\n+            Collections.shuffle(dedicatedHosts); // Randomize dedicated hosts as well.\n+            sbuilder.append(\"field(t.id, \");\n+            Iterator<Long> hostIt = dedicatedHosts.iterator();\n+            while (hostIt.hasNext()) { // put dedicated hosts at the end of the result set", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU4MDMyMw=="}, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY2ODYyNg==", "bodyText": "thanks for the confirmation @Spaceman1984", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r519668626", "createdAt": "2020-11-09T09:35:23Z", "author": {"login": "sureshanaparti"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -128,9 +132,24 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n             }\n         }\n \n+        List<Long> dedicatedHosts = dedicatedResourceDao.listAllHosts();\n+\n         // TODO: order by rand() is slow if there are lot of hosts\n         sbuilder.append(\") t where t.value<>'true' or t.value is null\");    //Added for exclude cluster's subquery\n-        sbuilder.append(\" ORDER by rand() limit 1\");\n+        sbuilder.append(\" ORDER by \");\n+        if (dedicatedHosts.size() > 0) {\n+            Collections.shuffle(dedicatedHosts); // Randomize dedicated hosts as well.\n+            sbuilder.append(\"field(t.id, \");\n+            Iterator<Long> hostIt = dedicatedHosts.iterator();\n+            while (hostIt.hasNext()) { // put dedicated hosts at the end of the result set", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU4MDMyMw=="}, "originalCommit": {"oid": "dfd956745ca7ab9b4892fc07966d9f983f97c2f6"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NTM4NDYyOnYy", "diffSide": "RIGHT", "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODozOTo1OFrOHzszbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODo0NToxN1rOHzs_hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3MzQ4Ng==", "bodyText": "@Spaceman1984 scope id in this case is zone id, and the hosts are found using cluster id method, please check.", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r523973486", "createdAt": "2020-11-16T08:39:58Z", "author": {"login": "sureshanaparti"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -115,22 +123,46 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n         StringBuilder sbuilder = new StringBuilder();\n         sbuilder.append(sqlBase);\n \n+        List<Long> dedicatedHosts = new ArrayList<Long>();\n+\n         if (scope != null) {\n             if (scope.getScopeType() == ScopeType.HOST) {\n                 sbuilder.append(\" and h.id = \");\n                 sbuilder.append(scope.getScopeId());\n             } else if (scope.getScopeType() == ScopeType.CLUSTER) {\n                 sbuilder.append(\" and h.cluster_id = \");\n                 sbuilder.append(scope.getScopeId());\n+                DedicatedResourceVO dedicatedHost = dedicatedResourceDao.findByClusterId(scope.getScopeId());\n+                if (dedicatedHost != null){\n+                    List<HostVO> clusterHosts = hostDao.findByClusterId(scope.getScopeId());\n+                    for (HostVO hostVO: clusterHosts){\n+                        dedicatedHosts.add(hostVO.getId());\n+                    }\n+                }\n             } else if (scope.getScopeType() == ScopeType.ZONE) {\n                 sbuilder.append(\" and h.data_center_id = \");\n                 sbuilder.append(scope.getScopeId());\n+                DedicatedResourceVO dedicatedHost = dedicatedResourceDao.findByZoneId(scope.getScopeId());\n+                if (dedicatedHost != null){\n+                    List<HostVO> zoneHosts = hostDao.findByClusterId(scope.getScopeId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "033c66bef4a711808fca22a347b27c4fcb64e498"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3NTI5Mw==", "bodyText": "Right, copy-paste error. I'll fix it.", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r523975293", "createdAt": "2020-11-16T08:43:05Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -115,22 +123,46 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n         StringBuilder sbuilder = new StringBuilder();\n         sbuilder.append(sqlBase);\n \n+        List<Long> dedicatedHosts = new ArrayList<Long>();\n+\n         if (scope != null) {\n             if (scope.getScopeType() == ScopeType.HOST) {\n                 sbuilder.append(\" and h.id = \");\n                 sbuilder.append(scope.getScopeId());\n             } else if (scope.getScopeType() == ScopeType.CLUSTER) {\n                 sbuilder.append(\" and h.cluster_id = \");\n                 sbuilder.append(scope.getScopeId());\n+                DedicatedResourceVO dedicatedHost = dedicatedResourceDao.findByClusterId(scope.getScopeId());\n+                if (dedicatedHost != null){\n+                    List<HostVO> clusterHosts = hostDao.findByClusterId(scope.getScopeId());\n+                    for (HostVO hostVO: clusterHosts){\n+                        dedicatedHosts.add(hostVO.getId());\n+                    }\n+                }\n             } else if (scope.getScopeType() == ScopeType.ZONE) {\n                 sbuilder.append(\" and h.data_center_id = \");\n                 sbuilder.append(scope.getScopeId());\n+                DedicatedResourceVO dedicatedHost = dedicatedResourceDao.findByZoneId(scope.getScopeId());\n+                if (dedicatedHost != null){\n+                    List<HostVO> zoneHosts = hostDao.findByClusterId(scope.getScopeId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3MzQ4Ng=="}, "originalCommit": {"oid": "033c66bef4a711808fca22a347b27c4fcb64e498"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3NjU4MQ==", "bodyText": "good catch @sureshanaparti . guess my squared-eyes filtered this out \ud83d\udc4d", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r523976581", "createdAt": "2020-11-16T08:45:17Z", "author": {"login": "DaanHoogland"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -115,22 +123,46 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n         StringBuilder sbuilder = new StringBuilder();\n         sbuilder.append(sqlBase);\n \n+        List<Long> dedicatedHosts = new ArrayList<Long>();\n+\n         if (scope != null) {\n             if (scope.getScopeType() == ScopeType.HOST) {\n                 sbuilder.append(\" and h.id = \");\n                 sbuilder.append(scope.getScopeId());\n             } else if (scope.getScopeType() == ScopeType.CLUSTER) {\n                 sbuilder.append(\" and h.cluster_id = \");\n                 sbuilder.append(scope.getScopeId());\n+                DedicatedResourceVO dedicatedHost = dedicatedResourceDao.findByClusterId(scope.getScopeId());\n+                if (dedicatedHost != null){\n+                    List<HostVO> clusterHosts = hostDao.findByClusterId(scope.getScopeId());\n+                    for (HostVO hostVO: clusterHosts){\n+                        dedicatedHosts.add(hostVO.getId());\n+                    }\n+                }\n             } else if (scope.getScopeType() == ScopeType.ZONE) {\n                 sbuilder.append(\" and h.data_center_id = \");\n                 sbuilder.append(scope.getScopeId());\n+                DedicatedResourceVO dedicatedHost = dedicatedResourceDao.findByZoneId(scope.getScopeId());\n+                if (dedicatedHost != null){\n+                    List<HostVO> zoneHosts = hostDao.findByClusterId(scope.getScopeId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3MzQ4Ng=="}, "originalCommit": {"oid": "033c66bef4a711808fca22a347b27c4fcb64e498"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NTQ1MTg1OnYy", "diffSide": "RIGHT", "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODo1NDo0MlrOHztcTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODo1ODoyNlrOHztsSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk4Mzk0OA==", "bodyText": "@Spaceman1984 what if cluster is not dedicated, but some hosts in that cluster are dedicated?", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r523983948", "createdAt": "2020-11-16T08:54:42Z", "author": {"login": "sureshanaparti"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -115,22 +123,46 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n         StringBuilder sbuilder = new StringBuilder();\n         sbuilder.append(sqlBase);\n \n+        List<Long> dedicatedHosts = new ArrayList<Long>();\n+\n         if (scope != null) {\n             if (scope.getScopeType() == ScopeType.HOST) {\n                 sbuilder.append(\" and h.id = \");\n                 sbuilder.append(scope.getScopeId());\n             } else if (scope.getScopeType() == ScopeType.CLUSTER) {\n                 sbuilder.append(\" and h.cluster_id = \");\n                 sbuilder.append(scope.getScopeId());\n+                DedicatedResourceVO dedicatedHost = dedicatedResourceDao.findByClusterId(scope.getScopeId());\n+                if (dedicatedHost != null){\n+                    List<HostVO> clusterHosts = hostDao.findByClusterId(scope.getScopeId());\n+                    for (HostVO hostVO: clusterHosts){\n+                        dedicatedHosts.add(hostVO.getId());\n+                    }\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "033c66bef4a711808fca22a347b27c4fcb64e498"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk4ODA0MA==", "bodyText": "This is handled on line 155", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r523988040", "createdAt": "2020-11-16T08:58:26Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -115,22 +123,46 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n         StringBuilder sbuilder = new StringBuilder();\n         sbuilder.append(sqlBase);\n \n+        List<Long> dedicatedHosts = new ArrayList<Long>();\n+\n         if (scope != null) {\n             if (scope.getScopeType() == ScopeType.HOST) {\n                 sbuilder.append(\" and h.id = \");\n                 sbuilder.append(scope.getScopeId());\n             } else if (scope.getScopeType() == ScopeType.CLUSTER) {\n                 sbuilder.append(\" and h.cluster_id = \");\n                 sbuilder.append(scope.getScopeId());\n+                DedicatedResourceVO dedicatedHost = dedicatedResourceDao.findByClusterId(scope.getScopeId());\n+                if (dedicatedHost != null){\n+                    List<HostVO> clusterHosts = hostDao.findByClusterId(scope.getScopeId());\n+                    for (HostVO hostVO: clusterHosts){\n+                        dedicatedHosts.add(hostVO.getId());\n+                    }\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk4Mzk0OA=="}, "originalCommit": {"oid": "033c66bef4a711808fca22a347b27c4fcb64e498"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NTUwNDgyOnYy", "diffSide": "RIGHT", "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwOTowMjo0M1rOHzt-fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwOTo1NDoxOFrOHzxfLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk5MjcwMA==", "bodyText": "@Spaceman1984  the scope is not considered here, this returns all the dedicated hosts same as the earlier case.\nIf the cluster is not dedicated and some hosts in that cluster are dedicated, then get the dedicated hosts in that cluster only, which you can move to the end of the result set. Got me? Didn't see any dao method for this?", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r523992700", "createdAt": "2020-11-16T09:02:43Z", "author": {"login": "sureshanaparti"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -115,22 +123,46 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n         StringBuilder sbuilder = new StringBuilder();\n         sbuilder.append(sqlBase);\n \n+        List<Long> dedicatedHosts = new ArrayList<Long>();\n+\n         if (scope != null) {\n             if (scope.getScopeType() == ScopeType.HOST) {\n                 sbuilder.append(\" and h.id = \");\n                 sbuilder.append(scope.getScopeId());\n             } else if (scope.getScopeType() == ScopeType.CLUSTER) {\n                 sbuilder.append(\" and h.cluster_id = \");\n                 sbuilder.append(scope.getScopeId());\n+                DedicatedResourceVO dedicatedHost = dedicatedResourceDao.findByClusterId(scope.getScopeId());\n+                if (dedicatedHost != null){\n+                    List<HostVO> clusterHosts = hostDao.findByClusterId(scope.getScopeId());\n+                    for (HostVO hostVO: clusterHosts){\n+                        dedicatedHosts.add(hostVO.getId());\n+                    }\n+                }\n             } else if (scope.getScopeType() == ScopeType.ZONE) {\n                 sbuilder.append(\" and h.data_center_id = \");\n                 sbuilder.append(scope.getScopeId());\n+                DedicatedResourceVO dedicatedHost = dedicatedResourceDao.findByZoneId(scope.getScopeId());\n+                if (dedicatedHost != null){\n+                    List<HostVO> zoneHosts = hostDao.findByDataCenterId(scope.getScopeId());\n+                    for (HostVO hostVO: zoneHosts){\n+                        dedicatedHosts.add(hostVO.getId());\n+                    }\n+                }\n             }\n         }\n+        // We didn't find any hosts specifically dedicated to a zone or cluster\n+        if (dedicatedHosts.size() == 0) {\n+            dedicatedHosts = dedicatedResourceDao.listAllHosts();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0103724a9b71a37afa283da516720bff750572d9"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA1MDIyMg==", "bodyText": "Ok, I'll make some changes.", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r524050222", "createdAt": "2020-11-16T09:54:18Z", "author": {"login": "Spaceman1984"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/endpoint/DefaultEndPointSelector.java", "diffHunk": "@@ -115,22 +123,46 @@ protected EndPoint findEndPointInScope(Scope scope, String sqlBase, Long poolId)\n         StringBuilder sbuilder = new StringBuilder();\n         sbuilder.append(sqlBase);\n \n+        List<Long> dedicatedHosts = new ArrayList<Long>();\n+\n         if (scope != null) {\n             if (scope.getScopeType() == ScopeType.HOST) {\n                 sbuilder.append(\" and h.id = \");\n                 sbuilder.append(scope.getScopeId());\n             } else if (scope.getScopeType() == ScopeType.CLUSTER) {\n                 sbuilder.append(\" and h.cluster_id = \");\n                 sbuilder.append(scope.getScopeId());\n+                DedicatedResourceVO dedicatedHost = dedicatedResourceDao.findByClusterId(scope.getScopeId());\n+                if (dedicatedHost != null){\n+                    List<HostVO> clusterHosts = hostDao.findByClusterId(scope.getScopeId());\n+                    for (HostVO hostVO: clusterHosts){\n+                        dedicatedHosts.add(hostVO.getId());\n+                    }\n+                }\n             } else if (scope.getScopeType() == ScopeType.ZONE) {\n                 sbuilder.append(\" and h.data_center_id = \");\n                 sbuilder.append(scope.getScopeId());\n+                DedicatedResourceVO dedicatedHost = dedicatedResourceDao.findByZoneId(scope.getScopeId());\n+                if (dedicatedHost != null){\n+                    List<HostVO> zoneHosts = hostDao.findByDataCenterId(scope.getScopeId());\n+                    for (HostVO hostVO: zoneHosts){\n+                        dedicatedHosts.add(hostVO.getId());\n+                    }\n+                }\n             }\n         }\n+        // We didn't find any hosts specifically dedicated to a zone or cluster\n+        if (dedicatedHosts.size() == 0) {\n+            dedicatedHosts = dedicatedResourceDao.listAllHosts();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk5MjcwMA=="}, "originalCommit": {"oid": "0103724a9b71a37afa283da516720bff750572d9"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzM0MTcwOnYy", "diffSide": "RIGHT", "path": "engine/orchestration/src/main/java/com/cloud/vm/VirtualMachineManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwODo0OToyNVrOH1jACg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwOTowNDo1MFrOH1jnZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkxMDAyNg==", "bodyText": "@Spaceman1984 these changes are part of your fix?", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r525910026", "createdAt": "2020-11-18T08:49:25Z", "author": {"login": "sureshanaparti"}, "path": "engine/orchestration/src/main/java/com/cloud/vm/VirtualMachineManagerImpl.java", "diffHunk": "@@ -1672,10 +1672,13 @@ protected boolean sendStop(final VirtualMachineGuru guru, final VirtualMachinePr\n                 }\n \n                 guru.finalizeStop(profile, answer);\n+\n+                final UserVmVO userVm = _userVmDao.findById(vm.getId());\n                 if (vm.getType() == VirtualMachine.Type.User) {\n-                    final UserVmVO userVm = _userVmDao.findById(vm.getId());\n-                    userVm.setPowerState(PowerState.PowerOff);\n-                    _userVmDao.update(userVm.getId(), userVm);\n+                    if (userVm != null){\n+                        userVm.setPowerState(PowerState.PowerOff);\n+                        _userVmDao.update(userVm.getId(), userVm);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e9d86caeacf882d4fe9e9c02bd102a046a8171a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkyMDEwMA==", "bodyText": "Unrelated, just a missed null pointer check I picked up while testing.", "url": "https://github.com/apache/cloudstack/pull/4428#discussion_r525920100", "createdAt": "2020-11-18T09:04:50Z", "author": {"login": "Spaceman1984"}, "path": "engine/orchestration/src/main/java/com/cloud/vm/VirtualMachineManagerImpl.java", "diffHunk": "@@ -1672,10 +1672,13 @@ protected boolean sendStop(final VirtualMachineGuru guru, final VirtualMachinePr\n                 }\n \n                 guru.finalizeStop(profile, answer);\n+\n+                final UserVmVO userVm = _userVmDao.findById(vm.getId());\n                 if (vm.getType() == VirtualMachine.Type.User) {\n-                    final UserVmVO userVm = _userVmDao.findById(vm.getId());\n-                    userVm.setPowerState(PowerState.PowerOff);\n-                    _userVmDao.update(userVm.getId(), userVm);\n+                    if (userVm != null){\n+                        userVm.setPowerState(PowerState.PowerOff);\n+                        _userVmDao.update(userVm.getId(), userVm);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTkxMDAyNg=="}, "originalCommit": {"oid": "0e9d86caeacf882d4fe9e9c02bd102a046a8171a"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4106, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}