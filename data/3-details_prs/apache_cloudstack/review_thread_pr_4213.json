{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwNzc1MTA4", "number": 4213, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOTozMDoxNlrOEQV3Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxOTo1MzozMlrOES95yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTcwODM4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOTozMDoxNlrOG0cRhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOTozMDoxNlrOG0cRhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0MjM3Mg==", "bodyText": "Can you please use MapUtils.isNotEmpty(tags);?\nMapUtils.isNotEmpty is a null-safe check that verifies if the specified map is not empty.", "url": "https://github.com/apache/cloudstack/pull/4213#discussion_r457642372", "createdAt": "2020-07-20T19:30:16Z", "author": {"login": "GabrielBrascher"}, "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "diffHunk": "@@ -229,11 +236,32 @@ public boolean stop() {\n         sb.and(\"idIN\", sb.entity().getId(), SearchCriteria.Op.IN);\n         sb.and(\"display_name\", sb.entity().getDisplayName(), SearchCriteria.Op.EQ);\n         sb.and(\"account_id\", sb.entity().getAccountId(), SearchCriteria.Op.EQ);\n-        sb.done();\n+\n+        if (tags != null && !tags.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a5b5332ff9e2ba0114c7da694aa0c08853356aa"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjUxMzcwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMDoyOToyNFrOG0jzqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMDoyOToyNFrOG0jzqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NTgwMQ==", "bodyText": "MapUtils.isNotEmpty would fit nicely here", "url": "https://github.com/apache/cloudstack/pull/4213#discussion_r457765801", "createdAt": "2020-07-21T00:29:24Z", "author": {"login": "GabrielBrascher"}, "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "diffHunk": "@@ -229,11 +236,32 @@ public boolean stop() {\n         sb.and(\"idIN\", sb.entity().getId(), SearchCriteria.Op.IN);\n         sb.and(\"display_name\", sb.entity().getDisplayName(), SearchCriteria.Op.EQ);\n         sb.and(\"account_id\", sb.entity().getAccountId(), SearchCriteria.Op.EQ);\n-        sb.done();\n+\n+        if (tags != null && !tags.isEmpty()) {\n+            SearchBuilder<ResourceTagVO> tagSearch = _resourceTagDao.createSearchBuilder();\n+            for (int count = 0; count < tags.size(); count++) {\n+                tagSearch.or().op(\"key\" + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);\n+                tagSearch.and(\"value\" + String.valueOf(count), tagSearch.entity().getValue(), SearchCriteria.Op.EQ);\n+                tagSearch.cp();\n+            }\n+            tagSearch.and(\"resourceType\", tagSearch.entity().getResourceType(), SearchCriteria.Op.EQ);\n+            sb.groupBy(sb.entity().getId());\n+            sb.join(\"tagSearch\", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);\n+        }\n \n         SearchCriteria<VMSnapshotVO> sc = sb.create();\n         _accountMgr.buildACLSearchCriteria(sc, domainId, isRecursive, permittedAccounts, listProjectResourcesCriteria);\n \n+        if (tags != null && !tags.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a5b5332ff9e2ba0114c7da694aa0c08853356aa"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjUxNjM1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMDozMDo1MVrOG0j1IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMDozMDo1MVrOG0j1IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NjE3Ng==", "bodyText": "A few values can be extracted to constants, especially considering that they are being used more than once, for instance \"key\".", "url": "https://github.com/apache/cloudstack/pull/4213#discussion_r457766176", "createdAt": "2020-07-21T00:30:51Z", "author": {"login": "GabrielBrascher"}, "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "diffHunk": "@@ -229,11 +236,32 @@ public boolean stop() {\n         sb.and(\"idIN\", sb.entity().getId(), SearchCriteria.Op.IN);\n         sb.and(\"display_name\", sb.entity().getDisplayName(), SearchCriteria.Op.EQ);\n         sb.and(\"account_id\", sb.entity().getAccountId(), SearchCriteria.Op.EQ);\n-        sb.done();\n+\n+        if (tags != null && !tags.isEmpty()) {\n+            SearchBuilder<ResourceTagVO> tagSearch = _resourceTagDao.createSearchBuilder();\n+            for (int count = 0; count < tags.size(); count++) {\n+                tagSearch.or().op(\"key\" + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a5b5332ff9e2ba0114c7da694aa0c08853356aa"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzIzNjc1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxOTo1MjoyNlrOG4cUGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxOTo1MjoyNlrOG4cUGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgzNzMzNw==", "bodyText": "Could you please extract this to a method, add documentation to what this method do and why.\nAlso can you please create unit tests to cover those method", "url": "https://github.com/apache/cloudstack/pull/4213#discussion_r461837337", "createdAt": "2020-07-28T19:52:26Z", "author": {"login": "RodrigoDLopez"}, "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "diffHunk": "@@ -229,11 +238,32 @@ public boolean stop() {\n         sb.and(\"idIN\", sb.entity().getId(), SearchCriteria.Op.IN);\n         sb.and(\"display_name\", sb.entity().getDisplayName(), SearchCriteria.Op.EQ);\n         sb.and(\"account_id\", sb.entity().getAccountId(), SearchCriteria.Op.EQ);\n-        sb.done();\n+\n+        if (MapUtils.isNotEmpty(tags)) {\n+            SearchBuilder<ResourceTagVO> tagSearch = _resourceTagDao.createSearchBuilder();\n+            for (int count = 0; count < tags.size(); count++) {\n+                tagSearch.or().op(ApiConstants.KEY + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);\n+                tagSearch.and(ApiConstants.VALUE + String.valueOf(count), tagSearch.entity().getValue(), SearchCriteria.Op.EQ);\n+                tagSearch.cp();\n+            }\n+            tagSearch.and(ApiConstants.RESOURCE_TYPE, tagSearch.entity().getResourceType(), SearchCriteria.Op.EQ);\n+            sb.groupBy(sb.entity().getId());\n+            sb.join(\"tagSearch\", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f01c8bb5681c2c9800227092e7bd04e51d01e39"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzI0MDQxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxOTo1MzozMlrOG4cWfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxOTo1MzozMlrOG4cWfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgzNzk0OA==", "bodyText": "cloud you do the same here please,\nextract to a new method, add documentation and unit tests.", "url": "https://github.com/apache/cloudstack/pull/4213#discussion_r461837948", "createdAt": "2020-07-28T19:53:32Z", "author": {"login": "RodrigoDLopez"}, "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "diffHunk": "@@ -229,11 +238,32 @@ public boolean stop() {\n         sb.and(\"idIN\", sb.entity().getId(), SearchCriteria.Op.IN);\n         sb.and(\"display_name\", sb.entity().getDisplayName(), SearchCriteria.Op.EQ);\n         sb.and(\"account_id\", sb.entity().getAccountId(), SearchCriteria.Op.EQ);\n-        sb.done();\n+\n+        if (MapUtils.isNotEmpty(tags)) {\n+            SearchBuilder<ResourceTagVO> tagSearch = _resourceTagDao.createSearchBuilder();\n+            for (int count = 0; count < tags.size(); count++) {\n+                tagSearch.or().op(ApiConstants.KEY + String.valueOf(count), tagSearch.entity().getKey(), SearchCriteria.Op.EQ);\n+                tagSearch.and(ApiConstants.VALUE + String.valueOf(count), tagSearch.entity().getValue(), SearchCriteria.Op.EQ);\n+                tagSearch.cp();\n+            }\n+            tagSearch.and(ApiConstants.RESOURCE_TYPE, tagSearch.entity().getResourceType(), SearchCriteria.Op.EQ);\n+            sb.groupBy(sb.entity().getId());\n+            sb.join(\"tagSearch\", tagSearch, sb.entity().getId(), tagSearch.entity().getResourceId(), JoinBuilder.JoinType.INNER);\n+        }\n \n         SearchCriteria<VMSnapshotVO> sc = sb.create();\n         _accountMgr.buildACLSearchCriteria(sc, domainId, isRecursive, permittedAccounts, listProjectResourcesCriteria);\n \n+        if (MapUtils.isNotEmpty(tags)) {\n+            int count = 0;\n+            sc.setJoinParameters(\"tagSearch\", ApiConstants.RESOURCE_TYPE, ResourceTag.ResourceObjectType.VMSnapshot.toString());\n+            for (String key : tags.keySet()) {\n+                sc.setJoinParameters(\"tagSearch\", ApiConstants.KEY + String.valueOf(count), key);\n+                sc.setJoinParameters(\"tagSearch\", ApiConstants.VALUE + String.valueOf(count), tags.get(key));\n+                count++;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f01c8bb5681c2c9800227092e7bd04e51d01e39"}, "originalPosition": 79}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3745, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}