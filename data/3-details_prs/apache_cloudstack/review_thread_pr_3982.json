{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMDE4NjQ0", "number": 3982, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDozOTowNlrODrJ1sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDozOTo1OVrODrJ3EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTc2NTYzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/cloudstack/vm/VmImportManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDozOTowNlrOF7VGxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDozOTowNlrOF7VGxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc1NjEwMQ==", "bodyText": "Can you please remove the extra blank space at CPU cores %d  and VM", "url": "https://github.com/apache/cloudstack/pull/3982#discussion_r397756101", "createdAt": "2020-03-25T10:39:06Z", "author": {"login": "GabrielBrascher"}, "path": "server/src/main/java/org/apache/cloudstack/vm/VmImportManagerImpl.java", "diffHunk": "@@ -428,13 +428,13 @@ private ServiceOfferingVO getUnmanagedInstanceServiceOffering(final UnmanagedIns\n             serviceOffering = serviceOfferingDao.getComputeOffering(serviceOffering, parameters);\n         } else {\n             if (!cpu.equals(serviceOffering.getCpu()) && !instance.getPowerState().equals(UnmanagedInstanceTO.PowerState.PowerOff)) {\n-                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, String.format(\"Service offering (%s) %d CPU cores does not matches VM CPU cores %d  and VM is not in powered off state (Power state: %s)\", serviceOffering.getUuid(), serviceOffering.getCpu(), cpu, instance.getPowerState()));\n+                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, String.format(\"Service offering (%s) %d CPU cores does not match VM CPU cores %d  and VM is not in powered off state (Power state: %s)\", serviceOffering.getUuid(), serviceOffering.getCpu(), cpu, instance.getPowerState()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39cb76585330e008831aa6035d35d559c09fa435"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NTc2OTEzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/cloudstack/vm/VmImportManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDozOTo1OVrOF7VI4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjozOTo1OVrOF7kImg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc1NjY0Mg==", "bodyText": "Additionally, considering the fact that CPU cores is plural (of a CPU core) it should be \"CPU cores do not match\"", "url": "https://github.com/apache/cloudstack/pull/3982#discussion_r397756642", "createdAt": "2020-03-25T10:39:59Z", "author": {"login": "GabrielBrascher"}, "path": "server/src/main/java/org/apache/cloudstack/vm/VmImportManagerImpl.java", "diffHunk": "@@ -428,13 +428,13 @@ private ServiceOfferingVO getUnmanagedInstanceServiceOffering(final UnmanagedIns\n             serviceOffering = serviceOfferingDao.getComputeOffering(serviceOffering, parameters);\n         } else {\n             if (!cpu.equals(serviceOffering.getCpu()) && !instance.getPowerState().equals(UnmanagedInstanceTO.PowerState.PowerOff)) {\n-                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, String.format(\"Service offering (%s) %d CPU cores does not matches VM CPU cores %d  and VM is not in powered off state (Power state: %s)\", serviceOffering.getUuid(), serviceOffering.getCpu(), cpu, instance.getPowerState()));\n+                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, String.format(\"Service offering (%s) %d CPU cores does not match VM CPU cores %d  and VM is not in powered off state (Power state: %s)\", serviceOffering.getUuid(), serviceOffering.getCpu(), cpu, instance.getPowerState()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39cb76585330e008831aa6035d35d559c09fa435"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAwMjMzMA==", "bodyText": "Hi Gabriel,  Thank you very much for the review. I made the 2 changes as per the review. I will submit the pull request shortly.", "url": "https://github.com/apache/cloudstack/pull/3982#discussion_r398002330", "createdAt": "2020-03-25T16:39:59Z", "author": {"login": "deargopinath"}, "path": "server/src/main/java/org/apache/cloudstack/vm/VmImportManagerImpl.java", "diffHunk": "@@ -428,13 +428,13 @@ private ServiceOfferingVO getUnmanagedInstanceServiceOffering(final UnmanagedIns\n             serviceOffering = serviceOfferingDao.getComputeOffering(serviceOffering, parameters);\n         } else {\n             if (!cpu.equals(serviceOffering.getCpu()) && !instance.getPowerState().equals(UnmanagedInstanceTO.PowerState.PowerOff)) {\n-                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, String.format(\"Service offering (%s) %d CPU cores does not matches VM CPU cores %d  and VM is not in powered off state (Power state: %s)\", serviceOffering.getUuid(), serviceOffering.getCpu(), cpu, instance.getPowerState()));\n+                throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR, String.format(\"Service offering (%s) %d CPU cores does not match VM CPU cores %d  and VM is not in powered off state (Power state: %s)\", serviceOffering.getUuid(), serviceOffering.getCpu(), cpu, instance.getPowerState()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc1NjY0Mg=="}, "originalCommit": {"oid": "39cb76585330e008831aa6035d35d559c09fa435"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3982, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}