{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4OTQxMTI5", "number": 3913, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowNjoyMlrODjHMcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowNzoxMVrODjHNxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTQ0NjI1OnYy", "diffSide": "RIGHT", "path": "systemvm/debian/opt/cloud/bin/cs/CsDhcp.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowNjoyMlrOFuvK-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowNjoyMlrOFuvK-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1MTY3NA==", "bodyText": "pylint is not accepting this, @andrijapanicsb", "url": "https://github.com/apache/cloudstack/pull/3913#discussion_r384551674", "createdAt": "2020-02-26T15:06:22Z", "author": {"login": "DaanHoogland"}, "path": "systemvm/debian/opt/cloud/bin/cs/CsDhcp.py", "diffHunk": "@@ -174,18 +174,15 @@ def write_hosts(self):\n \n     def add(self, entry):\n         self.add_host(entry['ipv4_address'], entry['host_name'])\n-        # Lease time set to effectively infinite (36000+ days) since we properly control all DHCP/DNS config via CloudStack.\n+        # Lease time set to \"infinite\" since we properly control all DHCP/DNS config via CloudStack.\n         # Infinite time helps avoid some edge cases which could cause DHCPNAK being sent to VMs since\n         # (RHEL) system lose routes when they receive DHCPNAK.\n         # When VM is expunged, its active lease and DHCP/DNS config is properly removed from related files in VR,\n         # so the infinite duration of lease does not cause any issues or garbage.\n-        # There will be soon a PR which also regenerates the /var/lib/misc/dnsmasq.leases (active lease DB file)\n-        # in the new VR (when restarting network with cleanup), which will help around RHEL edge cases (described above)\n-        # for the VMs who are already running in productions systems with 30d lease time.\n-        lease = randint(870000, 870010)\n+        lease = 'infinite'\n \n         if entry['default_entry']:\n-            self.cloud.add(\"%s,%s,%s,%sh\" % (entry['mac_address'],\n+            self.cloud.add(\"%s,%s,%s,%s\" % (entry['mac_address'],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "781d2ab08a25b62d53f80b8ef37d0f81ad0481a5"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTQ0OTY1OnYy", "diffSide": "RIGHT", "path": "systemvm/debian/opt/cloud/bin/cs/CsDhcp.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowNzoxMVrOFuvNKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowNzoxMVrOFuvNKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU1MjIzMw==", "bodyText": "you need to unindent by one space as you made the base statement one char shorter as well. :P", "url": "https://github.com/apache/cloudstack/pull/3913#discussion_r384552233", "createdAt": "2020-02-26T15:07:11Z", "author": {"login": "DaanHoogland"}, "path": "systemvm/debian/opt/cloud/bin/cs/CsDhcp.py", "diffHunk": "@@ -174,18 +174,15 @@ def write_hosts(self):\n \n     def add(self, entry):\n         self.add_host(entry['ipv4_address'], entry['host_name'])\n-        # Lease time set to effectively infinite (36000+ days) since we properly control all DHCP/DNS config via CloudStack.\n+        # Lease time set to \"infinite\" since we properly control all DHCP/DNS config via CloudStack.\n         # Infinite time helps avoid some edge cases which could cause DHCPNAK being sent to VMs since\n         # (RHEL) system lose routes when they receive DHCPNAK.\n         # When VM is expunged, its active lease and DHCP/DNS config is properly removed from related files in VR,\n         # so the infinite duration of lease does not cause any issues or garbage.\n-        # There will be soon a PR which also regenerates the /var/lib/misc/dnsmasq.leases (active lease DB file)\n-        # in the new VR (when restarting network with cleanup), which will help around RHEL edge cases (described above)\n-        # for the VMs who are already running in productions systems with 30d lease time.\n-        lease = randint(870000, 870010)\n+        lease = 'infinite'\n \n         if entry['default_entry']:\n-            self.cloud.add(\"%s,%s,%s,%sh\" % (entry['mac_address'],\n+            self.cloud.add(\"%s,%s,%s,%s\" % (entry['mac_address'],\n                                              entry['ipv4_address'],\n                                              entry['host_name'],\n                                              lease))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "781d2ab08a25b62d53f80b8ef37d0f81ad0481a5"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3952, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}