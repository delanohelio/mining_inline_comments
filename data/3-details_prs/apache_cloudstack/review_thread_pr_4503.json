{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3MjY4Njg5", "number": 4503, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDo0NToxM1rOE98sFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNjowMToxN1rOE-9l3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzkyOTE4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/cloudstack/api/command/admin/network/CreateNetworkCmdByAdmin.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDo0NToxM1rOH65pqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjo0MjozM1rOH69Gbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyNDAwOQ==", "bodyText": "can add validator \"ApiArgValidator.NotNullOrEmpty\" for both args ?", "url": "https://github.com/apache/cloudstack/pull/4503#discussion_r531524009", "createdAt": "2020-11-27T10:45:13Z", "author": {"login": "sureshanaparti"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/admin/network/CreateNetworkCmdByAdmin.java", "diffHunk": "@@ -42,6 +42,12 @@\n     @Parameter(name=ApiConstants.HIDE_IP_ADDRESS_USAGE, type=CommandType.BOOLEAN, description=\"when true ip address usage for the network will not be exported by the listUsageRecords API\")\n     private Boolean hideIpAddressUsage;\n \n+    @Parameter(name = ApiConstants.ROUTER_IP, type = CommandType.STRING, description = \"IPV4 address to be assigned to a router in a shared network\", since = \"4.16\")\n+    private String routerIp;\n+\n+    @Parameter(name = ApiConstants.ROUTER_IPV6, type = CommandType.STRING, description = \"IPV6 address to be assigned to a router in a shared network\", since = \"4.16\")\n+    private String routerIpv6;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e987ec3cb9661dee0c9a5ba327a6081962e3f60c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3NjIzMA==", "bodyText": "Wouldn't  adding such a validator make the field/ parameter mandatory?", "url": "https://github.com/apache/cloudstack/pull/4503#discussion_r531576230", "createdAt": "2020-11-27T12:33:04Z", "author": {"login": "Pearl1594"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/admin/network/CreateNetworkCmdByAdmin.java", "diffHunk": "@@ -42,6 +42,12 @@\n     @Parameter(name=ApiConstants.HIDE_IP_ADDRESS_USAGE, type=CommandType.BOOLEAN, description=\"when true ip address usage for the network will not be exported by the listUsageRecords API\")\n     private Boolean hideIpAddressUsage;\n \n+    @Parameter(name = ApiConstants.ROUTER_IP, type = CommandType.STRING, description = \"IPV4 address to be assigned to a router in a shared network\", since = \"4.16\")\n+    private String routerIp;\n+\n+    @Parameter(name = ApiConstants.ROUTER_IPV6, type = CommandType.STRING, description = \"IPV6 address to be assigned to a router in a shared network\", since = \"4.16\")\n+    private String routerIpv6;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyNDAwOQ=="}, "originalCommit": {"oid": "e987ec3cb9661dee0c9a5ba327a6081962e3f60c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU4MDUyNw==", "bodyText": "Wouldn't adding such a validator make the field/ parameter mandatory?\n\nI think it is for validating the parameter value when it is specified in the cmd, nothing to do with required - true/false.", "url": "https://github.com/apache/cloudstack/pull/4503#discussion_r531580527", "createdAt": "2020-11-27T12:42:33Z", "author": {"login": "sureshanaparti"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/admin/network/CreateNetworkCmdByAdmin.java", "diffHunk": "@@ -42,6 +42,12 @@\n     @Parameter(name=ApiConstants.HIDE_IP_ADDRESS_USAGE, type=CommandType.BOOLEAN, description=\"when true ip address usage for the network will not be exported by the listUsageRecords API\")\n     private Boolean hideIpAddressUsage;\n \n+    @Parameter(name = ApiConstants.ROUTER_IP, type = CommandType.STRING, description = \"IPV4 address to be assigned to a router in a shared network\", since = \"4.16\")\n+    private String routerIp;\n+\n+    @Parameter(name = ApiConstants.ROUTER_IPV6, type = CommandType.STRING, description = \"IPV6 address to be assigned to a router in a shared network\", since = \"4.16\")\n+    private String routerIpv6;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyNDAwOQ=="}, "originalCommit": {"oid": "e987ec3cb9661dee0c9a5ba327a6081962e3f60c"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzk0MDQ3OnYy", "diffSide": "RIGHT", "path": "engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/NetworkOrchestrator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDo0ODozNlrOH65wig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDo0ODozNlrOH65wig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyNTc3MA==", "bodyText": "extra tab space, may be not required.", "url": "https://github.com/apache/cloudstack/pull/4503#discussion_r531525770", "createdAt": "2020-11-27T10:48:36Z", "author": {"login": "sureshanaparti"}, "path": "engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/NetworkOrchestrator.java", "diffHunk": "@@ -718,10 +731,12 @@ public void doInTransactionWithoutResult(final TransactionStatus status) {\n                         networks.add(networkPersisted);\n \n                         if (network.getPvlanType() != null) {\n-                            NetworkDetailVO detailVO = new NetworkDetailVO(networkPersisted.getId(), ApiConstants.ISOLATED_PVLAN_TYPE, network.getPvlanType().toString(), true);\n+                                NetworkDetailVO detailVO = new NetworkDetailVO(networkPersisted.getId(), ApiConstants.ISOLATED_PVLAN_TYPE, network.getPvlanType().toString(), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e987ec3cb9661dee0c9a5ba327a6081962e3f60c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzk1NzA5OnYy", "diffSide": "RIGHT", "path": "engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/NetworkOrchestrator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDo1MzozMVrOH656pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDo1MzozMVrOH656pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyODM1OA==", "bodyText": "may be updateRouterIpInNetworkDetails(networkId, routerIp, routerIpv6) , not required to pass entire network object.", "url": "https://github.com/apache/cloudstack/pull/4503#discussion_r531528358", "createdAt": "2020-11-27T10:53:31Z", "author": {"login": "sureshanaparti"}, "path": "engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/NetworkOrchestrator.java", "diffHunk": "@@ -640,6 +640,19 @@ protected NetworkOrchestrator() {\n         setStateMachine();\n     }\n \n+    private void updateNetworkDetails(NetworkVO networkPersisted, Network network) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e987ec3cb9661dee0c9a5ba327a6081962e3f60c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzk2Nzk2OnYy", "diffSide": "RIGHT", "path": "engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/NetworkOrchestrator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDo1Njo0NVrOH66BXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjozMjo1OFrOH681hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUzMDA3OA==", "bodyText": "this will override the above networkDetailVO , as per the code when both are not blank and always the latest one is persisted. I understand, at any given point, IPv4 or IPv6 is used, not both. From code perspective, either keep if-else for IPv4 & IPv6, or move the network details persist to respective if block.", "url": "https://github.com/apache/cloudstack/pull/4503#discussion_r531530078", "createdAt": "2020-11-27T10:56:45Z", "author": {"login": "sureshanaparti"}, "path": "engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/NetworkOrchestrator.java", "diffHunk": "@@ -640,6 +640,19 @@ protected NetworkOrchestrator() {\n         setStateMachine();\n     }\n \n+    private void updateNetworkDetails(NetworkVO networkPersisted, Network network) {\n+        NetworkDetailVO networkDetailVO = null;\n+        if (isNotBlank(network.getRouterIp())) {\n+            networkDetailVO = new NetworkDetailVO(networkPersisted.getId(), ApiConstants.ROUTER_IP, network.getRouterIp().toString(), true);\n+        }\n+        if (isNotBlank(network.getRouterIpv6())) {\n+            networkDetailVO = new NetworkDetailVO(networkPersisted.getId(), ApiConstants.ROUTER_IPV6, network.getRouterIpv6().toString(), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e987ec3cb9661dee0c9a5ba327a6081962e3f60c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3NjE5OA==", "bodyText": "But based on the code for persisting placeholder record, it seems like one can specify both ipv4 and ipv6 details:\nhttps://github.com/apache/cloudstack/blob/master/server/src/main/java/com/cloud/network/router/NetworkHelperImpl.java#L715\n(and L732)", "url": "https://github.com/apache/cloudstack/pull/4503#discussion_r531576198", "createdAt": "2020-11-27T12:32:58Z", "author": {"login": "Pearl1594"}, "path": "engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/NetworkOrchestrator.java", "diffHunk": "@@ -640,6 +640,19 @@ protected NetworkOrchestrator() {\n         setStateMachine();\n     }\n \n+    private void updateNetworkDetails(NetworkVO networkPersisted, Network network) {\n+        NetworkDetailVO networkDetailVO = null;\n+        if (isNotBlank(network.getRouterIp())) {\n+            networkDetailVO = new NetworkDetailVO(networkPersisted.getId(), ApiConstants.ROUTER_IP, network.getRouterIp().toString(), true);\n+        }\n+        if (isNotBlank(network.getRouterIpv6())) {\n+            networkDetailVO = new NetworkDetailVO(networkPersisted.getId(), ApiConstants.ROUTER_IPV6, network.getRouterIpv6().toString(), true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUzMDA3OA=="}, "originalCommit": {"oid": "e987ec3cb9661dee0c9a5ba327a6081962e3f60c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDI2Nzk4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjozMzo1N1rOH683Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMjozMzo1N1rOH683Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU3NjU4Mg==", "bodyText": "I see most of the calls, routerips are passed null , can you add another public method with routerip params and use it wherever required ?", "url": "https://github.com/apache/cloudstack/pull/4503#discussion_r531576582", "createdAt": "2020-11-27T12:33:57Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -3471,7 +3471,7 @@ private NetworkVO createDefaultNetworkForAccount(DataCenter zone, Account owner,\n         s_logger.debug(\"Creating network for account \" + owner + \" from the network offering id=\" + requiredOfferings.get(0).getId() + \" as a part of deployVM process\");\n         Network newNetwork = _networkMgr.createGuestNetwork(requiredOfferings.get(0).getId(), owner.getAccountName() + \"-network\", owner.getAccountName() + \"-network\",\n                 null, null, null, false, null, owner, null, physicalNetwork, zone.getId(), ACLType.Account, null, null, null, null, true, null, null,\n-                null);\n+                null, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e987ec3cb9661dee0c9a5ba327a6081962e3f60c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDUwMzY2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/network/NetworkServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMzo0OToxMlrOH6_ERA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMzo0OToxMlrOH6_ERA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYxMjc0MA==", "bodyText": "routerIp => routerIpv6", "url": "https://github.com/apache/cloudstack/pull/4503#discussion_r531612740", "createdAt": "2020-11-27T13:49:12Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/network/NetworkServiceImpl.java", "diffHunk": "@@ -1029,6 +1029,26 @@ private void checkSharedNetworkCidrOverlap(Long zoneId, long physicalNetworkId,\n         }\n     }\n \n+    private void validateRouterIps(String routerIp, String routerIpv6, String startIp, String endIp, String startIpv6, String endIpv6) {\n+        if (isNotBlank(routerIp)) {\n+            if (!NetUtils.isValidIp4(routerIp)) {\n+                throw new CloudRuntimeException(\"Router IPv4 IP provided is of incorrect format\");\n+            }\n+            if (!NetUtils.isIpInRange(routerIp, startIp, endIp)) {\n+                throw new CloudRuntimeException(\"Router IPv4 IP provided is not within the specified range: \" + startIp + \" - \" + endIp);\n+            }\n+        }\n+        if (isNotBlank(routerIpv6)) {\n+            String ipv6Range = startIpv6 + \"-\" + endIpv6;\n+            if (!NetUtils.isValidIp6(routerIpv6)) {\n+                throw new CloudRuntimeException(\"Router IPv6 IP provided is of incorrect format\");\n+            }\n+            if (!NetUtils.isIp6InRange(routerIp, ipv6Range)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa3b786d8daf7c1fff49da82128f35022845d3ff"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDUwNjE0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/network/NetworkServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMzo0OTo1OVrOH6_Fvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMzo0OTo1OVrOH6_Fvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYxMzExOQ==", "bodyText": "IPv4 => IPv6  and same for start/end ip", "url": "https://github.com/apache/cloudstack/pull/4503#discussion_r531613119", "createdAt": "2020-11-27T13:49:59Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/network/NetworkServiceImpl.java", "diffHunk": "@@ -1029,6 +1029,26 @@ private void checkSharedNetworkCidrOverlap(Long zoneId, long physicalNetworkId,\n         }\n     }\n \n+    private void validateRouterIps(String routerIp, String routerIpv6, String startIp, String endIp, String startIpv6, String endIpv6) {\n+        if (isNotBlank(routerIp)) {\n+            if (!NetUtils.isValidIp4(routerIp)) {\n+                throw new CloudRuntimeException(\"Router IPv4 IP provided is of incorrect format\");\n+            }\n+            if (!NetUtils.isIpInRange(routerIp, startIp, endIp)) {\n+                throw new CloudRuntimeException(\"Router IPv4 IP provided is not within the specified range: \" + startIp + \" - \" + endIp);\n+            }\n+        }\n+        if (isNotBlank(routerIpv6)) {\n+            String ipv6Range = startIpv6 + \"-\" + endIpv6;\n+            if (!NetUtils.isValidIp6(routerIpv6)) {\n+                throw new CloudRuntimeException(\"Router IPv6 IP provided is of incorrect format\");\n+            }\n+            if (!NetUtils.isIp6InRange(routerIp, ipv6Range)) {\n+                throw new CloudRuntimeException(\"Router IPv4 IP provided is not within the specified range: \" + startIp + \" - \" + endIp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa3b786d8daf7c1fff49da82128f35022845d3ff"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDU2Mjg1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/network/NetworkServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNjowMToxN1rOH8ZUCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNjowMToxN1rOH8ZUCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA5MTMzOQ==", "bodyText": "IPv4 => IPv6  in the message string", "url": "https://github.com/apache/cloudstack/pull/4503#discussion_r533091339", "createdAt": "2020-12-01T06:01:17Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/network/NetworkServiceImpl.java", "diffHunk": "@@ -1029,6 +1029,26 @@ private void checkSharedNetworkCidrOverlap(Long zoneId, long physicalNetworkId,\n         }\n     }\n \n+    private void validateRouterIps(String routerIp, String routerIpv6, String startIp, String endIp, String startIpv6, String endIpv6) {\n+        if (isNotBlank(routerIp)) {\n+            if (!NetUtils.isValidIp4(routerIp)) {\n+                throw new CloudRuntimeException(\"Router IPv4 IP provided is of incorrect format\");\n+            }\n+            if (!NetUtils.isIpInRange(routerIp, startIp, endIp)) {\n+                throw new CloudRuntimeException(\"Router IPv4 IP provided is not within the specified range: \" + startIp + \" - \" + endIp);\n+            }\n+        }\n+        if (isNotBlank(routerIpv6)) {\n+            String ipv6Range = startIpv6 + \"-\" + endIpv6;\n+            if (!NetUtils.isValidIp6(routerIpv6)) {\n+                throw new CloudRuntimeException(\"Router IPv6 IP provided is of incorrect format\");\n+            }\n+            if (!NetUtils.isIp6InRange(routerIpv6, ipv6Range)) {\n+                throw new CloudRuntimeException(\"Router IPv4 IP provided is not within the specified range: \" + startIpv6 + \" - \" + endIpv6);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e505f6dcb13e81c374036554133ac95339392f70"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4158, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}