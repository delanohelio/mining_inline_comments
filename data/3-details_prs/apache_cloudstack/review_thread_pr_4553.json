{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyOTY3NDE0", "number": 4553, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODoxNjoxOFrOFHs5mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzo0NDozOFrOFIKa4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjE5OTk0OnYy", "diffSide": "RIGHT", "path": "utils/src/main/java/com/cloud/utils/StringUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODoxNjoxOFrOIJPupw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwOToyMjozMVrOIJRiUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2NTc5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (y <= x && y <= z)\n          \n          \n            \n                    if (y <= z)", "url": "https://github.com/apache/cloudstack/pull/4553#discussion_r546565799", "createdAt": "2020-12-21T08:16:18Z", "author": {"login": "DaanHoogland"}, "path": "utils/src/main/java/com/cloud/utils/StringUtils.java", "diffHunk": "@@ -313,4 +313,42 @@ public static String mapToString(final Map<String, String> map) {\n     public static String toCSVList(final List<String> csvList) {\n         return join(csvList, \",\");\n     }\n+\n+    public static int min(int x, int y, int z)\n+    {\n+        if (x <= y && x <= z)\n+            return x;\n+        if (y <= x && y <= z)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e88f526afbc22c51b53fc7c61d166e43b7cdb418"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5NTQxMQ==", "bodyText": "I've taken out minimum method and used min(min(x,y),z)", "url": "https://github.com/apache/cloudstack/pull/4553#discussion_r546595411", "createdAt": "2020-12-21T09:22:31Z", "author": {"login": "harikrishna-patnala"}, "path": "utils/src/main/java/com/cloud/utils/StringUtils.java", "diffHunk": "@@ -313,4 +313,42 @@ public static String mapToString(final Map<String, String> map) {\n     public static String toCSVList(final List<String> csvList) {\n         return join(csvList, \",\");\n     }\n+\n+    public static int min(int x, int y, int z)\n+    {\n+        if (x <= y && x <= z)\n+            return x;\n+        if (y <= x && y <= z)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2NTc5OQ=="}, "originalCommit": {"oid": "e88f526afbc22c51b53fc7c61d166e43b7cdb418"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjIyODI3OnYy", "diffSide": "RIGHT", "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/image/deployasis/DeployAsIsHelperImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODoyNjoxMFrOIJP-jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODoyNjoxMFrOIJP-jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2OTg3MQ==", "bodyText": "some small worry here. I'm not sure it applies to guestos names, but linguistically this can yield false positives easily;\n\n\"van os\"\n\"vanos\"\n\"fan nos\"\n\"vamos\"\n\"fam. os\"\nwith the bare eye the last one is the proper replacement of the first. Would this algorithm yield this?", "url": "https://github.com/apache/cloudstack/pull/4553#discussion_r546569871", "createdAt": "2020-12-21T08:26:10Z", "author": {"login": "DaanHoogland"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/image/deployasis/DeployAsIsHelperImpl.java", "diffHunk": "@@ -174,8 +174,26 @@ private void handleGuestOsFromOVFDescriptor(long templateId, String guestOsType,\n                 hypervisor.toString(), minimumHypervisorVersion);\n \n         if (CollectionUtils.isNotEmpty(guestOsMappings)) {\n-            GuestOSHypervisorVO mapping = guestOsMappings.get(0);\n-            long guestOsId = mapping.getGuestOsId();\n+            Long guestOsId = null;\n+            if (guestOsMappings.size() == 1) {\n+                GuestOSHypervisorVO mapping = guestOsMappings.get(0);\n+                guestOsId = mapping.getGuestOsId();\n+            } else {\n+                if (!StringUtils.isEmpty(guestOsDescription)) {\n+                    int minimumEdits = Integer.MAX_VALUE;\n+                    for (GuestOSHypervisorVO guestOSHypervisorVO : guestOsMappings) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e88f526afbc22c51b53fc7c61d166e43b7cdb418"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjIzMzkxOnYy", "diffSide": "RIGHT", "path": "utils/src/main/java/com/cloud/utils/StringUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODoyODowM1rOIJQByA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTo1OToxNFrOIJdO1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3MDY5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param str1\n          \n          \n            \n                 *      String that needs editing\n          \n          \n            \n                 * @param str2\n          \n          \n            \n                 *      Target string that needs after editing\n          \n          \n            \n                 * @param str1     String that needs editing\n          \n          \n            \n                 * @param str2     Target string that is required/expected after editing", "url": "https://github.com/apache/cloudstack/pull/4553#discussion_r546570696", "createdAt": "2020-12-21T08:28:03Z", "author": {"login": "DaanHoogland"}, "path": "utils/src/main/java/com/cloud/utils/StringUtils.java", "diffHunk": "@@ -313,4 +313,42 @@ public static String mapToString(final Map<String, String> map) {\n     public static String toCSVList(final List<String> csvList) {\n         return join(csvList, \",\");\n     }\n+\n+    public static int min(int x, int y, int z)\n+    {\n+        if (x <= y && x <= z)\n+            return x;\n+        if (y <= x && y <= z)\n+            return y;\n+        else\n+            return z;\n+    }\n+\n+    /**\n+     * Calculates minimum number of edits required to convert from one string to another string.\n+     * @param str1\n+     *      String that needs editing\n+     * @param str2\n+     *      Target string that needs after editing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e88f526afbc22c51b53fc7c61d166e43b7cdb418"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4NzAzMA==", "bodyText": "Updated this section with suggested changes", "url": "https://github.com/apache/cloudstack/pull/4553#discussion_r546787030", "createdAt": "2020-12-21T15:59:14Z", "author": {"login": "harikrishna-patnala"}, "path": "utils/src/main/java/com/cloud/utils/StringUtils.java", "diffHunk": "@@ -313,4 +313,42 @@ public static String mapToString(final Map<String, String> map) {\n     public static String toCSVList(final List<String> csvList) {\n         return join(csvList, \",\");\n     }\n+\n+    public static int min(int x, int y, int z)\n+    {\n+        if (x <= y && x <= z)\n+            return x;\n+        if (y <= x && y <= z)\n+            return y;\n+        else\n+            return z;\n+    }\n+\n+    /**\n+     * Calculates minimum number of edits required to convert from one string to another string.\n+     * @param str1\n+     *      String that needs editing\n+     * @param str2\n+     *      Target string that needs after editing", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3MDY5Ng=="}, "originalCommit": {"oid": "e88f526afbc22c51b53fc7c61d166e43b7cdb418"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjI1MjY3OnYy", "diffSide": "RIGHT", "path": "utils/src/main/java/com/cloud/utils/StringUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODozNDo0MlrOIJQM0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwOToyNTozMVrOIJRoQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3MzUyMw==", "bodyText": "can we have some unit tests for this, please?\nI think it assumes a definition of what an edit is, that we need to make explicit as well.", "url": "https://github.com/apache/cloudstack/pull/4553#discussion_r546573523", "createdAt": "2020-12-21T08:34:42Z", "author": {"login": "DaanHoogland"}, "path": "utils/src/main/java/com/cloud/utils/StringUtils.java", "diffHunk": "@@ -313,4 +313,42 @@ public static String mapToString(final Map<String, String> map) {\n     public static String toCSVList(final List<String> csvList) {\n         return join(csvList, \",\");\n     }\n+\n+    public static int min(int x, int y, int z)\n+    {\n+        if (x <= y && x <= z)\n+            return x;\n+        if (y <= x && y <= z)\n+            return y;\n+        else\n+            return z;\n+    }\n+\n+    /**\n+     * Calculates minimum number of edits required to convert from one string to another string.\n+     * @param str1\n+     *      String that needs editing\n+     * @param str2\n+     *      Target string that needs after editing\n+     * @return minimum number of edits required to convert str1 to str2\n+     */\n+    public static int minimumEditDistance(String str1, String str2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e88f526afbc22c51b53fc7c61d166e43b7cdb418"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5NjkzMA==", "bodyText": "Added unit tests in new commit.", "url": "https://github.com/apache/cloudstack/pull/4553#discussion_r546596930", "createdAt": "2020-12-21T09:25:31Z", "author": {"login": "harikrishna-patnala"}, "path": "utils/src/main/java/com/cloud/utils/StringUtils.java", "diffHunk": "@@ -313,4 +313,42 @@ public static String mapToString(final Map<String, String> map) {\n     public static String toCSVList(final List<String> csvList) {\n         return join(csvList, \",\");\n     }\n+\n+    public static int min(int x, int y, int z)\n+    {\n+        if (x <= y && x <= z)\n+            return x;\n+        if (y <= x && y <= z)\n+            return y;\n+        else\n+            return z;\n+    }\n+\n+    /**\n+     * Calculates minimum number of edits required to convert from one string to another string.\n+     * @param str1\n+     *      String that needs editing\n+     * @param str2\n+     *      Target string that needs after editing\n+     * @return minimum number of edits required to convert str1 to str2\n+     */\n+    public static int minimumEditDistance(String str1, String str2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3MzUyMw=="}, "originalCommit": {"oid": "e88f526afbc22c51b53fc7c61d166e43b7cdb418"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNjg0MTQ0OnYy", "diffSide": "RIGHT", "path": "utils/src/test/java/com/cloud/utils/StringUtilsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMTo0NToyN1rOIJVlOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMTo0NToyN1rOIJVlOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY2MTY5MA==", "bodyText": "maybe not here but as extra:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testBestMatchStringWithEditDistance() {\n          \n          \n            \n                    String str1 = \"FreeBSD 11 (32bit)\";\n          \n          \n            \n                    String str2 = \"FreeBSD 12 (64bit)\";\n          \n          \n            \n                    String targetString = \"FreeBSD 64bit\";\n          \n          \n            \n                public void testBestFreeBSDWithEditDistance() {\n          \n          \n            \n                    String str1 = \"FreeBSD 11 (32bit)\";\n          \n          \n            \n                    String str2 = \"FreeBSD 22 (64bit)\";\n          \n          \n            \n                    String targetString = \"FreeBSD 11 (64bit)\";\n          \n      \n    \n    \n  \n\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testBestMatchStringWithEditDistance() {\n          \n          \n            \n                    String str1 = \"FreeBSD 11 (32bit)\";\n          \n          \n            \n                    String str2 = \"FreeBSD 12 (64bit)\";\n          \n          \n            \n                    String targetString = \"FreeBSD 64bit\";\n          \n          \n            \n                public void testBestFedoraWithEditDistance() {\n          \n          \n            \n                    String str1 = \"Fedora 29 (32bit)\";\n          \n          \n            \n                    String str2 = \"FreeBSD 32 (64bit)\";\n          \n          \n            \n                    String targetString = \"FreeBSD 33 (32bit)\";\n          \n      \n    \n    \n  \n\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testBestMatchStringWithEditDistance() {\n          \n          \n            \n                    String str1 = \"FreeBSD 11 (32bit)\";\n          \n          \n            \n                    String str2 = \"FreeBSD 12 (64bit)\";\n          \n          \n            \n                    String targetString = \"FreeBSD 64bit\";\n          \n          \n            \n                public void testBestUbuntuWithEditDistance() {\n          \n          \n            \n                    String str1 = \"ubuntu 14.04 (32bit)\";\n          \n          \n            \n                    String str2 = \"ubuntu 20.10 (64bit)\";\n          \n          \n            \n                    String targetString = \"ubuntu 18.04 (64bit)\";", "url": "https://github.com/apache/cloudstack/pull/4553#discussion_r546661690", "createdAt": "2020-12-21T11:45:27Z", "author": {"login": "DaanHoogland"}, "path": "utils/src/test/java/com/cloud/utils/StringUtilsTest.java", "diffHunk": "@@ -258,4 +258,34 @@ public void testToCSVList() {\n         String output = StringUtils.toCSVList(Arrays.asList(input.split(\",\")));\n         assertTrue(input.equals(output));\n     }\n+\n+    @Test\n+    public void testZeroEditDistance() {\n+        String str1 = \"Other 32-bit\";\n+        String str2 = \"Other 32-bit\";\n+        int minDistance = StringUtils.minimumEditDistance(str1, str2);\n+        assertEquals(minDistance, 0);\n+    }\n+\n+    @Test\n+    public void testBestMatchStringWithEditDistance() {\n+        String str1 = \"FreeBSD 11 (32bit)\";\n+        String str2 = \"FreeBSD 12 (64bit)\";\n+        String targetString = \"FreeBSD 64bit\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "103d95e7cec17aa236c3dfed2b29368834991889"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MTAzNjUxOnYy", "diffSide": "RIGHT", "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/image/deployasis/DeployAsIsHelperImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzo0NDozOFrOIJ7pBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNjoxMToyMFrOIKUhYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NTI1NA==", "bodyText": "Minor nit - I think variable == null maybe more readable, but as I said that's not picking", "url": "https://github.com/apache/cloudstack/pull/4553#discussion_r547285254", "createdAt": "2020-12-22T13:44:38Z", "author": {"login": "rhtyd"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/image/deployasis/DeployAsIsHelperImpl.java", "diffHunk": "@@ -174,8 +174,25 @@ private void handleGuestOsFromOVFDescriptor(long templateId, String guestOsType,\n                 hypervisor.toString(), minimumHypervisorVersion);\n \n         if (CollectionUtils.isNotEmpty(guestOsMappings)) {\n-            GuestOSHypervisorVO mapping = guestOsMappings.get(0);\n-            long guestOsId = mapping.getGuestOsId();\n+            Long guestOsId = null;\n+            if (guestOsMappings.size() == 1) {\n+                GuestOSHypervisorVO mapping = guestOsMappings.get(0);\n+                guestOsId = mapping.getGuestOsId();\n+            } else {\n+                if (!StringUtils.isEmpty(guestOsDescription)) {\n+                    for (GuestOSHypervisorVO guestOSHypervisorVO : guestOsMappings) {\n+                        GuestOSVO guestOSVO = guestOSDao.findById(guestOSHypervisorVO.getGuestOsId());\n+                        if (guestOsDescription.equalsIgnoreCase(guestOSVO.getDisplayName())) {\n+                            guestOsId = guestOSHypervisorVO.getGuestOsId();\n+                            break;\n+                        }\n+                    }\n+                }\n+                if (null == guestOsId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2815d01d4e953ec5468ddf930f593f99da8abb72"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI5Mjk4NQ==", "bodyText": "depends on how accustomed you are in right to left reading ;)", "url": "https://github.com/apache/cloudstack/pull/4553#discussion_r547292985", "createdAt": "2020-12-22T13:59:40Z", "author": {"login": "DaanHoogland"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/image/deployasis/DeployAsIsHelperImpl.java", "diffHunk": "@@ -174,8 +174,25 @@ private void handleGuestOsFromOVFDescriptor(long templateId, String guestOsType,\n                 hypervisor.toString(), minimumHypervisorVersion);\n \n         if (CollectionUtils.isNotEmpty(guestOsMappings)) {\n-            GuestOSHypervisorVO mapping = guestOsMappings.get(0);\n-            long guestOsId = mapping.getGuestOsId();\n+            Long guestOsId = null;\n+            if (guestOsMappings.size() == 1) {\n+                GuestOSHypervisorVO mapping = guestOsMappings.get(0);\n+                guestOsId = mapping.getGuestOsId();\n+            } else {\n+                if (!StringUtils.isEmpty(guestOsDescription)) {\n+                    for (GuestOSHypervisorVO guestOSHypervisorVO : guestOsMappings) {\n+                        GuestOSVO guestOSVO = guestOSDao.findById(guestOSHypervisorVO.getGuestOsId());\n+                        if (guestOsDescription.equalsIgnoreCase(guestOSVO.getDisplayName())) {\n+                            guestOsId = guestOSHypervisorVO.getGuestOsId();\n+                            break;\n+                        }\n+                    }\n+                }\n+                if (null == guestOsId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NTI1NA=="}, "originalCommit": {"oid": "2815d01d4e953ec5468ddf930f593f99da8abb72"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzY5Mjg5OA==", "bodyText": "making habit of this to avoid setting null to the variable by mistake, in that case IDE also don't know if it is logically wrong \"if (guestOsId = null)\" :p", "url": "https://github.com/apache/cloudstack/pull/4553#discussion_r547692898", "createdAt": "2020-12-23T06:11:20Z", "author": {"login": "harikrishna-patnala"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/image/deployasis/DeployAsIsHelperImpl.java", "diffHunk": "@@ -174,8 +174,25 @@ private void handleGuestOsFromOVFDescriptor(long templateId, String guestOsType,\n                 hypervisor.toString(), minimumHypervisorVersion);\n \n         if (CollectionUtils.isNotEmpty(guestOsMappings)) {\n-            GuestOSHypervisorVO mapping = guestOsMappings.get(0);\n-            long guestOsId = mapping.getGuestOsId();\n+            Long guestOsId = null;\n+            if (guestOsMappings.size() == 1) {\n+                GuestOSHypervisorVO mapping = guestOsMappings.get(0);\n+                guestOsId = mapping.getGuestOsId();\n+            } else {\n+                if (!StringUtils.isEmpty(guestOsDescription)) {\n+                    for (GuestOSHypervisorVO guestOSHypervisorVO : guestOsMappings) {\n+                        GuestOSVO guestOSVO = guestOSDao.findById(guestOSHypervisorVO.getGuestOsId());\n+                        if (guestOsDescription.equalsIgnoreCase(guestOSVO.getDisplayName())) {\n+                            guestOsId = guestOSHypervisorVO.getGuestOsId();\n+                            break;\n+                        }\n+                    }\n+                }\n+                if (null == guestOsId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI4NTI1NA=="}, "originalCommit": {"oid": "2815d01d4e953ec5468ddf930f593f99da8abb72"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4042, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}