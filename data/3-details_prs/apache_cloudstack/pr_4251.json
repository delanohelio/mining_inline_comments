{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0Nzg0MTcw", "number": 4251, "title": "Handle with VM snapshot events", "bodyText": "Description\n\nOn these days, when a VM snapshot is deleted, the cloudstack-usage still seeing that snapshot as active and continues billing this deleted snapshot. This PR proposes new methods to handle with vm_snapshot_create and vm_snapshot_delete events.\nAlso, add some unit tests to cover those new methods.\n\n\n\n\n\nTypes of changes\n\n\n Breaking change (fix or feature that would cause existing functionality to change)\n New feature (non-breaking change which adds functionality)\n Bug fix (non-breaking change which fixes an issue)\n Enhancement (improves an existing feature and functionality)\n Cleanup (Code refactoring and cleanup, that may add test cases)\n\n\nHow Has This Been Tested?\n\n\n\nI don't know why the cloudstack-usage duplicate entries for vm_snapshot. I think this is a bug and I'll fix it in a future PR.\nTo run tests,  I create a VM snapshot and used the cloudmonkey to list usageRecords type=25.\nCreated at 14:12\n() \ud83d\udc31 > list usagerecords startdate=2020-08-08 enddate=2020-08-08 type=25\n{\n  \"count\": 2,\n  \"usagerecord\": [\n    {\n      \"account\": \"admin\",\n      \"description\": \"VMSnapshot usage Id: 1 (7b63f2f0-61fc-4034-8438-26e8989e3503)  for VM VM-ccb8b3d9-18aa-40c3-8e13-adde2de9b34b (ccb8b3d9-18aa-40c3-8e13-adde2de9b34b)\",\n      \"enddate\": \"2020-08-08'T'14:13:31+00:00\",\n      \"name\": \"i-2-5-VM_VS_20200808141157\",\n      \"rawusage\": \"0.025106\",\n      \"size\": 214749184,\n      \"startdate\": \"2020-08-08'T'14:12:01+00:00\",\n      \"usage\": \"0.025106 Hrs\",\n      \"usagetype\": 25,\n      \"virtualmachineid\": \"ccb8b3d9-18aa-40c3-8e13-adde2de9b34b\",\n    },\n    {\n      \"account\": \"admin\",\n      \"description\": \"VMSnapshot usage Id: 1 (7b63f2f0-61fc-4034-8438-26e8989e3503)  for VM VM-ccb8b3d9-18aa-40c3-8e13-adde2de9b34b (ccb8b3d9-18aa-40c3-8e13-adde2de9b34b)\",\n      \"enddate\": \"2020-08-08'T'14:13:31+00:00\",\n      \"name\": \"i-2-5-VM_VS_20200808141157\",\n      \"rawusage\": \"0.025106\",\n      \"size\": 214749184,\n      \"startdate\": \"2020-08-08'T'14:12:01+00:00\",\n      \"usage\": \"0.025106 Hrs\",\n      \"usagetype\": 25,\n      \"virtualmachineid\": \"ccb8b3d9-18aa-40c3-8e13-adde2de9b34b\",\n    }\n  ]\n}\n\nDeleted at 14:18\n() \ud83d\udc31 > list usagerecords startdate=2020-08-08 enddate=2020-08-08 type=25\n{\n  \"count\": 4,\n  \"usagerecord\": [\n    {\n      \"account\": \"admin\",\n      \"description\": \"VMSnapshot usage Id: 1 (7b63f2f0-61fc-4034-8438-26e8989e3503)  for VM VM-ccb8b3d9-18aa-40c3-8e13-adde2de9b34b (ccb8b3d9-18aa-40c3-8e13-adde2de9b34b)\",\n      \"enddate\": \"2020-08-08'T'14:13:31+00:00\",\n      \"name\": \"i-2-5-VM_VS_20200808141157\",\n      \"rawusage\": \"0.025106\",\n      \"size\": 214749184,\n      \"startdate\": \"2020-08-08'T'14:12:01+00:00\",\n      \"usage\": \"0.025106 Hrs\",\n      \"usagetype\": 25,\n      \"virtualmachineid\": \"ccb8b3d9-18aa-40c3-8e13-adde2de9b34b\",\n    },\n    {\n      \"account\": \"admin\",\n      \"description\": \"VMSnapshot usage Id: 1 (7b63f2f0-61fc-4034-8438-26e8989e3503)  for VM VM-ccb8b3d9-18aa-40c3-8e13-adde2de9b34b (ccb8b3d9-18aa-40c3-8e13-adde2de9b34b)\",\n      \"enddate\": \"2020-08-08'T'14:13:31+00:00\",\n      \"name\": \"i-2-5-VM_VS_20200808141157\",\n      \"rawusage\": \"0.025106\",\n      \"size\": 214749184,\n      \"startdate\": \"2020-08-08'T'14:12:01+00:00\",\n      \"usage\": \"0.025106 Hrs\",\n      \"usagetype\": 25,\n      \"virtualmachineid\": \"ccb8b3d9-18aa-40c3-8e13-adde2de9b34b\",\n    },\n    {\n      \"account\": \"admin\",\n      \"description\": \"VMSnapshot usage Id: 1 (7b63f2f0-61fc-4034-8438-26e8989e3503)  for VM VM-ccb8b3d9-18aa-40c3-8e13-adde2de9b34b (ccb8b3d9-18aa-40c3-8e13-adde2de9b34b)\",\n      \"enddate\": \"2020-08-08'T'14:18:31+00:00\",\n      \"name\": \"i-2-5-VM_VS_20200808141157\",\n      \"rawusage\": \"0.083337\",\n      \"size\": 214749184,\n      \"startdate\": \"2020-08-08'T'14:13:31+00:00\",\n      \"usage\": \"0.083337 Hrs\",\n      \"usagetype\": 25,\n      \"virtualmachineid\": \"ccb8b3d9-18aa-40c3-8e13-adde2de9b34b\",\n    },\n    {\n      \"account\": \"admin\",\n      \"description\": \"VMSnapshot usage Id: 1 (7b63f2f0-61fc-4034-8438-26e8989e3503)  for VM VM-ccb8b3d9-18aa-40c3-8e13-adde2de9b34b (ccb8b3d9-18aa-40c3-8e13-adde2de9b34b)\",\n      \"enddate\": \"2020-08-08'T'14:18:31+00:00\",\n      \"name\": \"i-2-5-VM_VS_20200808141157\",\n      \"rawusage\": \"0.083337\",\n      \"size\": 214749184,\n      \"startdate\": \"2020-08-08'T'14:13:31+00:00\",\n      \"usage\": \"0.083337 Hrs\",\n      \"usagetype\": 25,\n      \"virtualmachineid\": \"ccb8b3d9-18aa-40c3-8e13-adde2de9b34b\",\n    }\n  ]\n}", "createdAt": "2020-08-07T19:35:56Z", "url": "https://github.com/apache/cloudstack/pull/4251", "merged": true, "mergeCommit": {"oid": "d676ffa0a02ee0aac083c9957e0b8f95277de5f4"}, "closed": true, "closedAt": "2020-10-16T07:19:45Z", "author": {"login": "RodrigoDLopez"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8Av__AH2gAyNDY0Nzg0MTcwOjk3ZjAyY2Q1YmNhODI3MWUyNTA0NzM4NGI4Y2FiMDlmYjkzNzA1NjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSh_3jAH2gAyNDY0Nzg0MTcwOjcyNGNkNTEwZGRlNDM3NDZmNDBlZjQyNjkxODEwZDlkNGNlZGYwYWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "97f02cd5bca8271e25047384b8cab09fb9370563", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/97f02cd5bca8271e25047384b8cab09fb9370563", "committedDate": "2020-08-05T19:53:58Z", "message": "Handle with VM snapshot events\n\nCreate methods to handle with VM snapshot create and delete events\nAdd unit tests to cover new code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NTA2Njg5", "url": "https://github.com/apache/cloudstack/pull/4251#pullrequestreview-479506689", "createdAt": "2020-09-01T08:20:29Z", "commit": {"oid": "97f02cd5bca8271e25047384b8cab09fb9370563"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MjczODQw", "url": "https://github.com/apache/cloudstack/pull/4251#pullrequestreview-498273840", "createdAt": "2020-09-29T09:19:29Z", "commit": {"oid": "97f02cd5bca8271e25047384b8cab09fb9370563"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NTAzOTAw", "url": "https://github.com/apache/cloudstack/pull/4251#pullrequestreview-499503900", "createdAt": "2020-09-30T14:38:55Z", "commit": {"oid": "97f02cd5bca8271e25047384b8cab09fb9370563"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NDIwOTM0", "url": "https://github.com/apache/cloudstack/pull/4251#pullrequestreview-507420934", "createdAt": "2020-10-13T13:14:54Z", "commit": {"oid": "97f02cd5bca8271e25047384b8cab09fb9370563"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMzoxNDo1NFrOHgmD3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMzoxNDo1NFrOHgmD3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk0MDA2Mw==", "bodyText": "This if statement got nested inside the isEmpty check - needs to be outside", "url": "https://github.com/apache/cloudstack/pull/4251#discussion_r503940063", "createdAt": "2020-10-13T13:14:54Z", "author": {"login": "nvazquez"}, "path": "usage/src/main/java/com/cloud/usage/UsageManagerImpl.java", "diffHunk": "@@ -1889,29 +1889,93 @@ private void createSecurityGroupEvent(UsageEventVO event) {\n         }\n     }\n \n-    private void createVMSnapshotEvent(UsageEventVO event) {\n-        Long vmId = event.getResourceId();\n-        Long volumeId = event.getTemplateId();\n+    /**\n+     * Handles Vm Snapshot create and delete events:\n+     * <ul>\n+     *     <li>EventTypes#EVENT_VM_SNAPSHOT_CREATE</li>\n+     *     <li>EventTypes#EVENT_VM_SNAPSHOT_DELETE</li>\n+     * </ul>\n+     * if the event received by this method is neither add nor remove, we ignore it.\n+     */\n+    protected void handleVMSnapshotEvent(UsageEventVO event) {\n+        switch (event.getType()) {\n+            case EventTypes.EVENT_VM_SNAPSHOT_CREATE:\n+                createUsageVMSnapshot(event);\n+                break;\n+            case EventTypes.EVENT_VM_SNAPSHOT_DELETE:\n+                deleteUsageVMSnapshot(event);\n+                break;\n+            default:\n+                s_logger.debug(String.format(\"The event [type=%s, zoneId=%s, accountId=%s, resourceName=%s, diskOfferingId=%s, createDate=%s] is neither of type [%s] nor [%s]\",\n+                        event.getType(), event.getZoneId(), event.getAccountId(), event.getResourceName(), event.getOfferingId(), event.getCreateDate(), EventTypes.EVENT_VM_SNAPSHOT_CREATE, EventTypes.EVENT_VM_SNAPSHOT_DELETE));\n+        }\n+    }\n+\n+    /**\n+     * Creates an entry for the Usage VM Snapshot.\n+     */\n+    protected void createUsageVMSnapshot(UsageEventVO event) {\n+        long accountId = event.getAccountId();\n+        Account acct = _accountDao.findByIdIncludingRemoved(event.getAccountId());\n+        long domainId = acct.getDomainId();\n         Long offeringId = event.getOfferingId();\n-        Long zoneId = event.getZoneId();\n-        Long accountId = event.getAccountId();\n-        //Size could be null for VM snapshot delete events\n-        long size = (event.getSize() == null) ? 0 : event.getSize();\n+        long vmId = event.getResourceId();\n+        long volumeId = event.getTemplateId();\n+        long zoneId = event.getZoneId();\n         Date created = event.getCreateDate();\n-        Account acct = _accountDao.findByIdIncludingRemoved(event.getAccountId());\n-        Long domainId = acct.getDomainId();\n+        long size = (event.getSize() == null) ? 0 : event.getSize();\n \n         UsageEventDetailsVO detailVO = _usageEventDetailsDao.findDetail(event.getId(), UsageEventVO.DynamicParameters.vmSnapshotId.name());\n         Long vmSnapshotId = null;\n         if (detailVO != null) {\n             String snapId = detailVO.getValue();\n-             vmSnapshotId = Long.valueOf(snapId);\n+            vmSnapshotId = Long.valueOf(snapId);\n         }\n+        s_logger.debug(String.format(\"Creating usage VM Snapshot for VM id [%s] assigned to account [%s] domain [%s], zone [%s], and created at [%s]\", vmId, accountId, domainId, zoneId,\n+                event.getCreateDate()));\n         UsageVMSnapshotVO vsVO = new UsageVMSnapshotVO(volumeId, zoneId, accountId, domainId, vmId, offeringId, size, created, null);\n         vsVO.setVmSnapshotId(vmSnapshotId);\n         _usageVMSnapshotDao.persist(vsVO);\n     }\n \n+    /**\n+     * Find and delete, if exists, usage VM Snapshots entries\n+     */\n+    protected void deleteUsageVMSnapshot(UsageEventVO event) {\n+        long accountId = event.getAccountId();\n+        Account acct = _accountDao.findByIdIncludingRemoved(event.getAccountId());\n+        Long domainId = acct.getDomainId();\n+        Long diskOfferingId = event.getOfferingId();\n+        long vmId = event.getResourceId();\n+        long zoneId = event.getZoneId();\n+        List<UsageVMSnapshotVO> usageVMSnapshots = findUsageVMSnapshots(accountId, zoneId, domainId, vmId, diskOfferingId);\n+        if (CollectionUtils.isEmpty(usageVMSnapshots)){\n+            s_logger.warn(String.format(\"No usage entry for VM snapshot for VM id [%s] assigned to account [%s] domain [%s] and zone [%s] was found.\",\n+                    vmId, accountId, domainId, zoneId));\n+            if (usageVMSnapshots.size() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f02cd5bca8271e25047384b8cab09fb9370563"}, "originalPosition": 86}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "724cd510dde43746f40ef42691810d9d4cedf0ac", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/724cd510dde43746f40ef42691810d9d4cedf0ac", "committedDate": "2020-10-14T19:04:30Z", "message": "move if statement to be outside"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4029, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}