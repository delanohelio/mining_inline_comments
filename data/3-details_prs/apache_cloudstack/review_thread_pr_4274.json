{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5OTk0NTEw", "number": 4274, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTo1NzowM1rOEZ54Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTo1NzowM1rOEZ54Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTk4MTAzOnYy", "diffSide": "RIGHT", "path": "engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/NetworkOrchestrator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTo1NzowM1rOHDAGEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTo1OTowN1rOHDAKUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkwOTMyOQ==", "bodyText": "the condition is getting more complex this way. would\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return bypassVlanOverlapCheck && (ntwkOff.getGuestType() == GuestType.Shared || ntwkOff.getGuestType() == GuestType.L2 || isPrivateNetwork);\n          \n          \n            \n                return bypassVlanOverlapCheck && (ntwkOff.getGuestType() != GuestType.Isolated || isPrivateNetwork);\n          \n      \n    \n    \n  \n\nbe a good alternative?", "url": "https://github.com/apache/cloudstack/pull/4274#discussion_r472909329", "createdAt": "2020-08-19T09:57:03Z", "author": {"login": "DaanHoogland"}, "path": "engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/NetworkOrchestrator.java", "diffHunk": "@@ -2529,7 +2529,7 @@ public Network doInTransaction(final TransactionStatus status) {\n    * @param ntwkOff network offering\n    */\n   private boolean hasGuestBypassVlanOverlapCheck(final boolean bypassVlanOverlapCheck, final NetworkOfferingVO ntwkOff, final boolean isPrivateNetwork) {\n-    return bypassVlanOverlapCheck && (ntwkOff.getGuestType() == GuestType.Shared || isPrivateNetwork);\n+    return bypassVlanOverlapCheck && (ntwkOff.getGuestType() == GuestType.Shared || ntwkOff.getGuestType() == GuestType.L2 || isPrivateNetwork);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de84c1cd69bb477813453d6c6bfc6dbd7ff6331e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkxMDQxNg==", "bodyText": "Yes that works as well", "url": "https://github.com/apache/cloudstack/pull/4274#discussion_r472910416", "createdAt": "2020-08-19T09:59:07Z", "author": {"login": "rhtyd"}, "path": "engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/NetworkOrchestrator.java", "diffHunk": "@@ -2529,7 +2529,7 @@ public Network doInTransaction(final TransactionStatus status) {\n    * @param ntwkOff network offering\n    */\n   private boolean hasGuestBypassVlanOverlapCheck(final boolean bypassVlanOverlapCheck, final NetworkOfferingVO ntwkOff, final boolean isPrivateNetwork) {\n-    return bypassVlanOverlapCheck && (ntwkOff.getGuestType() == GuestType.Shared || isPrivateNetwork);\n+    return bypassVlanOverlapCheck && (ntwkOff.getGuestType() == GuestType.Shared || ntwkOff.getGuestType() == GuestType.L2 || isPrivateNetwork);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkwOTMyOQ=="}, "originalCommit": {"oid": "de84c1cd69bb477813453d6c6bfc6dbd7ff6331e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3791, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}