{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1Njc0ODYw", "number": 3828, "title": "[KVM] Direct download agnostic of the storage provider", "bodyText": "Description\nThis FR proposes the extension of the direct download support to primary storage pools using the most commonly used protocols/storage types:\n\nNFS \u2013 already supported\nLocal storage\nSharedMountpoint\n\nOther storage providers support can be extended in future by interface implementation on the KVM storage provider depending on the storage adaptor.\nThe KVM storage processor is extended to achieve the direct template downloads in a storage agnostic way, including the supported storage providers implementations and allowing future implementations for different storage providers:\n\nA new check of the available free space on the downloading host local storage is added before attempting to download a template. As on registration, a CheckUrlCommand is sent to a random KVM host, this host performs a HEAD command to the template URL. In case the server provides the remote file size of the template, this size is passed as part of the DirectDownloadCommand and used to check against the available free space.\nThe template file is downloaded to a scratch space in the local storage system within the host. This location can be explicitly set by the administrator via agent.properties file on the property: direct.download.temporary.download.location, and in case it is not set the default location var/lib/libvirt/images is used.\nAfter the template file is downloaded to the scratch space location, it is extracted (or copied) to the primary storage pool selected by the CloudStack planner.\nThe implementation of the extract/copy method is extended to invoke the different StorageAdaptors implementations for different storage providers. These implementations include local storage, shared mount point and NFS in the scope of this PR.\nAfter the template is extracted/copied to the destination storage pool, the downloaded file is removed from the scratch space location in the host.\n\nTypes of changes\n\n Breaking change (fix or feature that would cause existing functionality to change)\n New feature (non-breaking change which adds functionality)\n Bug fix (non-breaking change which fixes an issue)\n Enhancement (improves an existing feature and functionality)\n Cleanup (Code refactoring and cleanup, that may add test cases)\n\nScreenshots (if appropriate):\nHow Has This Been Tested?\nUbuntu based management server\nTest zone with local storage for user VMs enabled\n2 x CentOS7 based KVM hosts\n1 NFS storage pool\n1 Shared mount point across the 2 hosts", "createdAt": "2020-01-22T05:41:59Z", "url": "https://github.com/apache/cloudstack/pull/3828", "merged": true, "mergeCommit": {"oid": "73122fd0a93a5588c69eed1ae8454c09c8e87039"}, "closed": true, "closedAt": "2020-03-06T18:56:55Z", "author": {"login": "nvazquez"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8yNVOAFqTM0NjQzOTY0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKq0RdAH2gAyMzY1Njc0ODYwOmVlZjRjNjM3YjU3YzY3YzVlMWFiMWExMjM0OGI4NDZhYjliZDgxNTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NDM5NjQ3", "url": "https://github.com/apache/cloudstack/pull/3828#pullrequestreview-346439647", "createdAt": "2020-01-22T09:20:12Z", "commit": {"oid": "0881b2073f30e55f71f82cb8612d892c7b6b6880"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NDUxNjMy", "url": "https://github.com/apache/cloudstack/pull/3828#pullrequestreview-346451632", "createdAt": "2020-01-22T09:39:19Z", "commit": {"oid": "0881b2073f30e55f71f82cb8612d892c7b6b6880"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwOTozOToxOVrOFgVsxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwOTo0MjoxMFrOFgVyIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ1NDI3OQ==", "bodyText": "seems like a debug message to me. Why does the operator want to see this?", "url": "https://github.com/apache/cloudstack/pull/3828#discussion_r369454279", "createdAt": "2020-01-22T09:39:19Z", "author": {"login": "DaanHoogland"}, "path": "plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/storage/KVMStorageProcessor.java", "diffHunk": "@@ -1693,38 +1696,77 @@ private DirectTemplateDownloader getDirectTemplateDownloaderFromCommand(DirectDo\n     @Override\n     public Answer handleDownloadTemplateToPrimaryStorage(DirectDownloadCommand cmd) {\n         final PrimaryDataStoreTO pool = cmd.getDestPool();\n-        if (!pool.getPoolType().equals(StoragePoolType.NetworkFilesystem)) {\n-            return new DirectDownloadAnswer(false, \"Unsupported pool type \" + pool.getPoolType().toString(), true);\n-        }\n-        KVMStoragePool destPool = storagePoolMgr.getStoragePool(pool.getPoolType(), pool.getUuid());\n         DirectTemplateDownloader downloader;\n+        KVMPhysicalDisk template;\n \n         try {\n-            downloader = getDirectTemplateDownloaderFromCommand(cmd, destPool);\n-        } catch (IllegalArgumentException e) {\n-            return new DirectDownloadAnswer(false, \"Unable to create direct downloader: \" + e.getMessage(), true);\n-        }\n+            s_logger.info(\"Verifying temporary location for downloading the template exists on the host\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0881b2073f30e55f71f82cb8612d892c7b6b6880"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ1NDk2NA==", "bodyText": "in this case i would say that if the operator wants info it would be the actual size found and not an announcement that it is going to be calculated. also seems debug to me.", "url": "https://github.com/apache/cloudstack/pull/3828#discussion_r369454964", "createdAt": "2020-01-22T09:40:42Z", "author": {"login": "DaanHoogland"}, "path": "plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/storage/KVMStorageProcessor.java", "diffHunk": "@@ -1693,38 +1696,77 @@ private DirectTemplateDownloader getDirectTemplateDownloaderFromCommand(DirectDo\n     @Override\n     public Answer handleDownloadTemplateToPrimaryStorage(DirectDownloadCommand cmd) {\n         final PrimaryDataStoreTO pool = cmd.getDestPool();\n-        if (!pool.getPoolType().equals(StoragePoolType.NetworkFilesystem)) {\n-            return new DirectDownloadAnswer(false, \"Unsupported pool type \" + pool.getPoolType().toString(), true);\n-        }\n-        KVMStoragePool destPool = storagePoolMgr.getStoragePool(pool.getPoolType(), pool.getUuid());\n         DirectTemplateDownloader downloader;\n+        KVMPhysicalDisk template;\n \n         try {\n-            downloader = getDirectTemplateDownloaderFromCommand(cmd, destPool);\n-        } catch (IllegalArgumentException e) {\n-            return new DirectDownloadAnswer(false, \"Unable to create direct downloader: \" + e.getMessage(), true);\n-        }\n+            s_logger.info(\"Verifying temporary location for downloading the template exists on the host\");\n+            String temporaryDownloadPath = resource.getDirectDownloadTemporaryDownloadPath();\n+            if (!isLocationAccessible(temporaryDownloadPath)) {\n+                String msg = \"The temporary location path for downloading templates does not exist: \" +\n+                        temporaryDownloadPath + \" on this host\";\n+                s_logger.error(msg);\n+                return new DirectDownloadAnswer(false, msg, true);\n+            }\n \n-        try {\n+            s_logger.info(\"Checking for free space on the host for downloading the template\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0881b2073f30e55f71f82cb8612d892c7b6b6880"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ1NTM1MQ==", "bodyText": "maybe change this one to debug as well, or move and add the resulting path to the message", "url": "https://github.com/apache/cloudstack/pull/3828#discussion_r369455351", "createdAt": "2020-01-22T09:41:31Z", "author": {"login": "DaanHoogland"}, "path": "plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/storage/KVMStorageProcessor.java", "diffHunk": "@@ -1693,38 +1696,77 @@ private DirectTemplateDownloader getDirectTemplateDownloaderFromCommand(DirectDo\n     @Override\n     public Answer handleDownloadTemplateToPrimaryStorage(DirectDownloadCommand cmd) {\n         final PrimaryDataStoreTO pool = cmd.getDestPool();\n-        if (!pool.getPoolType().equals(StoragePoolType.NetworkFilesystem)) {\n-            return new DirectDownloadAnswer(false, \"Unsupported pool type \" + pool.getPoolType().toString(), true);\n-        }\n-        KVMStoragePool destPool = storagePoolMgr.getStoragePool(pool.getPoolType(), pool.getUuid());\n         DirectTemplateDownloader downloader;\n+        KVMPhysicalDisk template;\n \n         try {\n-            downloader = getDirectTemplateDownloaderFromCommand(cmd, destPool);\n-        } catch (IllegalArgumentException e) {\n-            return new DirectDownloadAnswer(false, \"Unable to create direct downloader: \" + e.getMessage(), true);\n-        }\n+            s_logger.info(\"Verifying temporary location for downloading the template exists on the host\");\n+            String temporaryDownloadPath = resource.getDirectDownloadTemporaryDownloadPath();\n+            if (!isLocationAccessible(temporaryDownloadPath)) {\n+                String msg = \"The temporary location path for downloading templates does not exist: \" +\n+                        temporaryDownloadPath + \" on this host\";\n+                s_logger.error(msg);\n+                return new DirectDownloadAnswer(false, msg, true);\n+            }\n \n-        try {\n+            s_logger.info(\"Checking for free space on the host for downloading the template\");\n+            if (!isEnoughSpaceForDownloadTemplateOnTemporaryLocation(cmd.getTemplateSize())) {\n+                String msg = \"Not enough space on the defined temporary location to download the template \" + cmd.getTemplateId();\n+                s_logger.error(msg);\n+                return new DirectDownloadAnswer(false, msg, true);\n+            }\n+\n+            KVMStoragePool destPool = storagePoolMgr.getStoragePool(pool.getPoolType(), pool.getUuid());\n+            downloader = getDirectTemplateDownloaderFromCommand(cmd, destPool, temporaryDownloadPath);\n             s_logger.info(\"Trying to download template\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0881b2073f30e55f71f82cb8612d892c7b6b6880"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ1NTY1MA==", "bodyText": "\ud83d\udc4d this one I agree is good for the operator to have.", "url": "https://github.com/apache/cloudstack/pull/3828#discussion_r369455650", "createdAt": "2020-01-22T09:42:10Z", "author": {"login": "DaanHoogland"}, "path": "plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/storage/KVMStorageProcessor.java", "diffHunk": "@@ -1693,38 +1696,77 @@ private DirectTemplateDownloader getDirectTemplateDownloaderFromCommand(DirectDo\n     @Override\n     public Answer handleDownloadTemplateToPrimaryStorage(DirectDownloadCommand cmd) {\n         final PrimaryDataStoreTO pool = cmd.getDestPool();\n-        if (!pool.getPoolType().equals(StoragePoolType.NetworkFilesystem)) {\n-            return new DirectDownloadAnswer(false, \"Unsupported pool type \" + pool.getPoolType().toString(), true);\n-        }\n-        KVMStoragePool destPool = storagePoolMgr.getStoragePool(pool.getPoolType(), pool.getUuid());\n         DirectTemplateDownloader downloader;\n+        KVMPhysicalDisk template;\n \n         try {\n-            downloader = getDirectTemplateDownloaderFromCommand(cmd, destPool);\n-        } catch (IllegalArgumentException e) {\n-            return new DirectDownloadAnswer(false, \"Unable to create direct downloader: \" + e.getMessage(), true);\n-        }\n+            s_logger.info(\"Verifying temporary location for downloading the template exists on the host\");\n+            String temporaryDownloadPath = resource.getDirectDownloadTemporaryDownloadPath();\n+            if (!isLocationAccessible(temporaryDownloadPath)) {\n+                String msg = \"The temporary location path for downloading templates does not exist: \" +\n+                        temporaryDownloadPath + \" on this host\";\n+                s_logger.error(msg);\n+                return new DirectDownloadAnswer(false, msg, true);\n+            }\n \n-        try {\n+            s_logger.info(\"Checking for free space on the host for downloading the template\");\n+            if (!isEnoughSpaceForDownloadTemplateOnTemporaryLocation(cmd.getTemplateSize())) {\n+                String msg = \"Not enough space on the defined temporary location to download the template \" + cmd.getTemplateId();\n+                s_logger.error(msg);\n+                return new DirectDownloadAnswer(false, msg, true);\n+            }\n+\n+            KVMStoragePool destPool = storagePoolMgr.getStoragePool(pool.getPoolType(), pool.getUuid());\n+            downloader = getDirectTemplateDownloaderFromCommand(cmd, destPool, temporaryDownloadPath);\n             s_logger.info(\"Trying to download template\");\n-            if (!downloader.downloadTemplate()) {\n+            Pair<Boolean, String> result = downloader.downloadTemplate();\n+            if (!result.first()) {\n                 s_logger.warn(\"Couldn't download template\");\n                 return new DirectDownloadAnswer(false, \"Unable to download template\", true);\n             }\n+            String tempFilePath = result.second();\n             if (!downloader.validateChecksum()) {\n                 s_logger.warn(\"Couldn't validate template checksum\");\n                 return new DirectDownloadAnswer(false, \"Checksum validation failed\", false);\n             }\n-            if (!downloader.extractAndInstallDownloadedTemplate()) {\n-                s_logger.warn(\"Couldn't extract and install template\");\n-                return new DirectDownloadAnswer(false, \"Extraction and installation failed\", false);\n-            }\n+            template = storagePoolMgr.createPhysicalDiskFromDirectDownloadTemplate(tempFilePath, destPool, 100);\n         } catch (CloudRuntimeException e) {\n             s_logger.warn(\"Error downloading template \" + cmd.getTemplateId() + \" due to: \" + e.getMessage());\n             return new DirectDownloadAnswer(false, \"Unable to download template: \" + e.getMessage(), true);\n+        } catch (IllegalArgumentException e) {\n+            return new DirectDownloadAnswer(false, \"Unable to create direct downloader: \" + e.getMessage(), true);\n         }\n \n-        DirectTemplateInformation info = downloader.getTemplateInformation();\n-        return new DirectDownloadAnswer(true, info.getSize(), info.getInstallPath());\n+        return new DirectDownloadAnswer(true, template.getSize(), template.getName());\n+    }\n+\n+    /**\n+     * True if location exists\n+     */\n+    private boolean isLocationAccessible(String temporaryDownloadPath) {\n+        File dir = new File(temporaryDownloadPath);\n+        return dir.exists();\n+    }\n+\n+    /**\n+     * Perform a free space check on the host for downloading the direct download templates\n+     * @param templateSize template size obtained from remote server when registering the template (in bytes)\n+     */\n+    protected boolean isEnoughSpaceForDownloadTemplateOnTemporaryLocation(Long templateSize) {\n+        if (templateSize == null || templateSize == 0L) {\n+            s_logger.info(\"The server did not provide the template size, assuming there is enough space to download it\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0881b2073f30e55f71f82cb8612d892c7b6b6880"}, "originalPosition": 118}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e7d9b1dc76a9e6afdaf051295c3408eeffe058a1", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/e7d9b1dc76a9e6afdaf051295c3408eeffe058a1", "committedDate": "2020-01-29T04:24:53Z", "message": "Change default path for direct download"}, "afterCommit": {"oid": "d48518330d282c8a147dcbd75d4fe0a857db92ce", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/d48518330d282c8a147dcbd75d4fe0a857db92ce", "committedDate": "2020-01-29T04:30:07Z", "message": "Change default path for direct download"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9aa8f1044d966b2d7e85b14c76253cd95b93916d", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/9aa8f1044d966b2d7e85b14c76253cd95b93916d", "committedDate": "2020-01-29T04:41:12Z", "message": "Fix upload certificate"}, "afterCommit": {"oid": "6e499e1e3b1ea39173105f1552967a8cfa905568", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/6e499e1e3b1ea39173105f1552967a8cfa905568", "committedDate": "2020-02-20T12:45:28Z", "message": "Fix ISO failure after retry"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e480e561a9181131352553d5c005765ec4f5b491", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/e480e561a9181131352553d5c005765ec4f5b491", "committedDate": "2020-02-21T06:01:16Z", "message": "Fix iso direct download"}, "afterCommit": {"oid": "73570af55ca1182af5f0deda5827add3ab0a1e93", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/73570af55ca1182af5f0deda5827add3ab0a1e93", "committedDate": "2020-02-21T11:17:48Z", "message": "Fix iso direct download"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "73570af55ca1182af5f0deda5827add3ab0a1e93", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/73570af55ca1182af5f0deda5827add3ab0a1e93", "committedDate": "2020-02-21T11:17:48Z", "message": "Fix iso direct download"}, "afterCommit": {"oid": "0308c4dad41478124e1c0ed316074cf21149e891", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/0308c4dad41478124e1c0ed316074cf21149e891", "committedDate": "2020-02-27T03:59:06Z", "message": "Fix iso direct download"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NzMzMzcy", "url": "https://github.com/apache/cloudstack/pull/3828#pullrequestreview-367733372", "createdAt": "2020-03-03T06:43:59Z", "commit": {"oid": "6cdffba669e73b81ee741e6dffaf3dcee915d8bd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6cdffba669e73b81ee741e6dffaf3dcee915d8bd", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/6cdffba669e73b81ee741e6dffaf3dcee915d8bd", "committedDate": "2020-03-02T13:39:47Z", "message": "Fix failing test"}, "afterCommit": {"oid": "62d99cf3486fb1a7797ddf9c8980389b58800124", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/62d99cf3486fb1a7797ddf9c8980389b58800124", "committedDate": "2020-03-04T04:49:19Z", "message": "Refactor volume migration to remove secondary storage intermediate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "caf6b100b698f3491f749e5dbb192c8909d16e3c", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/caf6b100b698f3491f749e5dbb192c8909d16e3c", "committedDate": "2020-03-04T15:03:55Z", "message": "Remove constraint for NFS storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "033d4f7bc62a59154dc88a5517a962617ec621fe", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/033d4f7bc62a59154dc88a5517a962617ec621fe", "committedDate": "2020-03-04T15:03:55Z", "message": "Add new property on agent.properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e69cd3da2880bd82d3fa9c5f1735a0eb2f2985d7", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/e69cd3da2880bd82d3fa9c5f1735a0eb2f2985d7", "committedDate": "2020-03-04T15:03:55Z", "message": "Add free disk space on the host prior template download"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e11bf255265ea0b629edfbe473351255a77234c", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/8e11bf255265ea0b629edfbe473351255a77234c", "committedDate": "2020-03-04T15:03:55Z", "message": "Add unit tests for the free space check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb2ee6f5e168197fe8ed8de3411e70558f780025", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/cb2ee6f5e168197fe8ed8de3411e70558f780025", "committedDate": "2020-03-04T15:03:55Z", "message": "Fix free space check - retrieve avaiable size in bytes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc989e423b4e8997aa90fa7fc9ec59e8428a5e2c", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/bc989e423b4e8997aa90fa7fc9ec59e8428a5e2c", "committedDate": "2020-03-04T15:03:55Z", "message": "Update default location for direct download"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "989e3b8b5196353046f11b035d3d00b2d6852121", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/989e3b8b5196353046f11b035d3d00b2d6852121", "committedDate": "2020-03-04T15:03:55Z", "message": "Improve the method to retrieve hosts to retry on depending on the destination pool type and scope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfe19ab9bea17cda54302eb172c7026a97689649", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/cfe19ab9bea17cda54302eb172c7026a97689649", "committedDate": "2020-03-04T15:03:55Z", "message": "Verify location for temporary download exists before checking free space"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "453bb895cce0cf40bbcee9c19a6eee53da555e8c", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/453bb895cce0cf40bbcee9c19a6eee53da555e8c", "committedDate": "2020-03-04T15:03:55Z", "message": "In progress - refactor and extension"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ce0a47aaab5cc88a3d3741d1b9f6be7b8aa760a", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/6ce0a47aaab5cc88a3d3741d1b9f6be7b8aa760a", "committedDate": "2020-03-04T15:03:55Z", "message": "Refactor and fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba5596851858e2682a37f4b5ad3058c47ca41704", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/ba5596851858e2682a37f4b5ad3058c47ca41704", "committedDate": "2020-03-04T15:03:55Z", "message": "Last fixes and marvin tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83930c899b4aedfce4f8018bda417949b342d26f", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/83930c899b4aedfce4f8018bda417949b342d26f", "committedDate": "2020-03-04T15:03:55Z", "message": "Remove unused test file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8264584c3f0e612bbf50c3da5d7ccfa32098e2f", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/c8264584c3f0e612bbf50c3da5d7ccfa32098e2f", "committedDate": "2020-03-04T15:03:55Z", "message": "Improve logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8a20d684dc85075184ba03f3a160489e54a21ce", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/e8a20d684dc85075184ba03f3a160489e54a21ce", "committedDate": "2020-03-04T15:03:55Z", "message": "Change default path for direct download"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef7f626ce3cd9cc47fb827ed32530fe393f1aec7", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/ef7f626ce3cd9cc47fb827ed32530fe393f1aec7", "committedDate": "2020-03-04T15:03:55Z", "message": "Fix upload certificate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09c2636a75adb0a6f9bc939e0d9275a524e894d2", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/09c2636a75adb0a6f9bc939e0d9275a524e894d2", "committedDate": "2020-03-04T15:03:55Z", "message": "Fix ISO failure after retry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba202a3827acc42a2b9ac6b9706e61a12b056712", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/ba202a3827acc42a2b9ac6b9706e61a12b056712", "committedDate": "2020-03-04T15:03:55Z", "message": "Fix metalink filename mismatch error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2923518fe01808eb79a5034a8f5de78daf9598d9", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/2923518fe01808eb79a5034a8f5de78daf9598d9", "committedDate": "2020-03-04T15:03:55Z", "message": "Fix iso direct download"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f7a27176a57eed5c383205eec7ed8b5bb183fcc", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/4f7a27176a57eed5c383205eec7ed8b5bb183fcc", "committedDate": "2020-03-04T15:03:55Z", "message": "Fix for direct download ISOs on local storage and shared mount point"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3d814d8992f5caf7a243063f5a9a67873e0bfbc", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/f3d814d8992f5caf7a243063f5a9a67873e0bfbc", "committedDate": "2020-03-04T15:03:55Z", "message": "Last fix iso"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2102864e8a57ae39a71d4839928923e43554bdff", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/2102864e8a57ae39a71d4839928923e43554bdff", "committedDate": "2020-03-04T15:03:55Z", "message": "Fix VM migration with ISO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9034a8a0b658cb6a1906a8b6e5701b71b314fe01", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/9034a8a0b658cb6a1906a8b6e5701b71b314fe01", "committedDate": "2020-03-04T15:03:55Z", "message": "Refactor volume migration to remove secondary storage intermediate"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "62d99cf3486fb1a7797ddf9c8980389b58800124", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/62d99cf3486fb1a7797ddf9c8980389b58800124", "committedDate": "2020-03-04T04:49:19Z", "message": "Refactor volume migration to remove secondary storage intermediate"}, "afterCommit": {"oid": "9034a8a0b658cb6a1906a8b6e5701b71b314fe01", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/9034a8a0b658cb6a1906a8b6e5701b71b314fe01", "committedDate": "2020-03-04T15:03:55Z", "message": "Refactor volume migration to remove secondary storage intermediate"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NTE4MTY1", "url": "https://github.com/apache/cloudstack/pull/3828#pullrequestreview-369518165", "createdAt": "2020-03-05T12:12:12Z", "commit": {"oid": "9034a8a0b658cb6a1906a8b6e5701b71b314fe01"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eef4c637b57c67c5e1ab1a12348b846ab9bd8159", "author": {"user": {"login": "nvazquez", "name": "Nicolas Vazquez"}}, "url": "https://github.com/apache/cloudstack/commit/eef4c637b57c67c5e1ab1a12348b846ab9bd8159", "committedDate": "2020-03-05T12:38:26Z", "message": "Fix simulator issue"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4552, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}