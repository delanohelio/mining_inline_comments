{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2ODg3OTc0", "number": 4534, "title": "Migrate vm across clusters", "bodyText": "Description\nThis PR adds a global setting migrate.vm.across.clusters to indicate whether vm can be live migrated to other clusters.\nIf vm is running on the last host in a cluster and vm cannot be migrated to other clusters, put host to maintenance will fail.\nThis is based on pr #4378\nThis fixes #3707 #3720\nSome rules\n(1) for vmware, across-cluster migration of vms with cluster-scoped pools is supported\n(2) for other hypervisors except vmware, vm can be live migrated to other clusters (with same hypervisor type), if all volumes are in zone-wide storage pool.\n(3) migration of systemvms (CPVM, SSVM) is only possible across clusters in same pod to avoid potential network issues.\n\n\n\n\n\n\n\n\n\n\nTypes of changes\n\n Breaking change (fix or feature that would cause existing functionality to change)\n New feature (non-breaking change which adds functionality)\n Bug fix (non-breaking change which fixes an issue)\n Enhancement (improves an existing feature and functionality)\n Cleanup (Code refactoring and cleanup, that may add test cases)\n\nFeature/Enhancement Scale or Bug Severity\nFeature/Enhancement Scale\n\n Major\n Minor\n\nScreenshots (if appropriate):\nHow Has This Been Tested?", "createdAt": "2020-12-11T13:14:43Z", "url": "https://github.com/apache/cloudstack/pull/4534", "merged": true, "mergeCommit": {"oid": "a755ecfce857cdf525f3d2895d68917ea6f905f3"}, "closed": true, "closedAt": "2021-09-08T00:50:29Z", "author": {"login": "ustcweizhou"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlJ2S4gFqTU1MDE5NDQyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABe8LiQYgFqTc0ODUzNjA4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMTk0NDI1", "url": "https://github.com/apache/cloudstack/pull/4534#pullrequestreview-550194425", "createdAt": "2020-12-11T15:23:56Z", "commit": {"oid": "2687ffd9b9ebf590a18adc6d36962a367530cb7a"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNToyMzo1NlrOID9hqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNTozODowOFrOID-KYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyNDY4MQ==", "bodyText": "I know i sound like a broken record , but I see four methods here. Can you extract these pieces of code please?", "url": "https://github.com/apache/cloudstack/pull/4534#discussion_r541024681", "createdAt": "2020-12-11T15:23:56Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -5787,6 +5789,50 @@ public VirtualMachine migrateVirtualMachine(Long vmId, Host destinationHost) thr\n \n         // check if migrating to same host\n         long srcHostId = vm.getHostId();\n+\n+        DeployDestination dest = null;\n+        if (destinationHost == null) {\n+            vm.setLastHostId(null); // Do not check last host\n+            final VirtualMachineProfile profile = new VirtualMachineProfileImpl(vm);\n+            final Host host = _hostDao.findById(srcHostId);\n+            final DataCenterDeployment plan = new DataCenterDeployment(host.getDataCenterId(), null, null, null, null, null);\n+            ExcludeList excludes = new ExcludeList();\n+            excludes.addHost(srcHostId);\n+            try {\n+                dest = _planningMgr.planDeployment(profile, plan, excludes, null);\n+            } catch (final AffinityConflictException e2) {\n+                s_logger.warn(\"Unable to create deployment, affinity rules associted to the VM conflict\", e2);\n+                throw new CloudRuntimeException(\"Unable to create deployment, affinity rules associted to the VM conflict\");\n+            } catch (final InsufficientServerCapacityException e3) {\n+                throw new CloudRuntimeException(\"Unable to find a server to migrate the vm to\");\n+            }\n+        } else {\n+            dest = checkVmMigrationDestination(vm, srcHostId, destinationHost);\n+        }\n+\n+        // If no suitable destination found then throw exception\n+        if (dest == null) {\n+            throw new RuntimeException(\"Unable to find suitable destination to migrate VM \" + vm.getInstanceName());\n+        }\n+\n+        UserVmVO uservm = _vmDao.findById(vmId);\n+        if (uservm != null) {\n+            collectVmDiskStatistics(uservm);\n+            collectVmNetworkStatistics(uservm);\n+        }\n+        _itMgr.migrate(vm.getUuid(), srcHostId, dest);\n+        VMInstanceVO vmInstance = _vmInstanceDao.findById(vmId);\n+        if (vmInstance.getType().equals(VirtualMachine.Type.User)) {\n+            return _vmDao.findById(vmId);\n+        } else {\n+            return vmInstance;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2687ffd9b9ebf590a18adc6d36962a367530cb7a"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyNjMxMw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/cloudstack/pull/4534#discussion_r541026313", "createdAt": "2020-12-11T15:26:09Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -5812,7 +5814,7 @@ public VirtualMachine migrateVirtualMachine(Long vmId, Host destinationHost) thr\n \n         // If no suitable destination found then throw exception\n         if (dest == null) {\n-            throw new RuntimeException(\"Unable to find suitable destination to migrate VM \" + vm.getInstanceName());\n+            throw new CloudRuntimeException(\"Unable to find suitable destination to migrate VM \" + vm.getInstanceName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2266e85299f708413bf077c48e755769203cea5"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAzMzYyNw==", "bodyText": "sugestion:\nif (! clusterWideMigrationSupported(...)) return false;\nand extract this code to\nboolean clusterWideMigrationSupported(...)", "url": "https://github.com/apache/cloudstack/pull/4534#discussion_r541033627", "createdAt": "2020-12-11T15:36:11Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1262,7 +1263,29 @@ private boolean doMaintain(final long hostId) {\n                 return true;\n             }\n \n-            final List<HostVO> hosts = listAllUpAndEnabledHosts(Host.Type.Routing, host.getClusterId(), host.getPodId(), host.getDataCenterId());\n+            List<HostVO> hosts = listAllUpAndEnabledHosts(Host.Type.Routing, host.getClusterId(), host.getPodId(), host.getDataCenterId());\n+            if (hosts == null || hosts.isEmpty()) {\n+                s_logger.warn(\"Unable to find a host for vm migration in cluster: \" + host.getClusterId());\n+                if (MIGRATE_VM_ACROSS_CLUSTERS.value()) {\n+                    s_logger.info(\"Looking for hosts across different clusters in zone: \" + host.getDataCenterId());\n+                    hosts = listAllUpAndEnabledHosts(Host.Type.Routing, null, null, host.getDataCenterId());\n+                    if (hosts == null || hosts.isEmpty()) {\n+                        s_logger.warn(\"Unable to find a host for vm migration in zone: \" + host.getDataCenterId());\n+                        return false;\n+                    }\n+                    // Dont migrate vm if it has volumes on cluster-wide pool\n+                    for (final VMInstanceVO vm : vms) {\n+                        if (_vmMgr.checkIfVmHasClusterWideVolumes(vm.getId())) {\n+                            s_logger.warn(\"Unable to migrate vm \" + vm.getInstanceName() + \" as it has volumes on cluster-wide pool\");\n+                            return false;\n+                        }\n+                    }\n+                } else {\n+                    s_logger.warn(\"Not migrating VM across cluster since \" + MIGRATE_VM_ACROSS_CLUSTERS.key() + \" is false\");\n+                    return false;\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecb2808d4c0e5b81e7c0c861b94513d55c490569"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAzNTEwNA==", "bodyText": "sugest you name this clustersToExclude without the d on the end", "url": "https://github.com/apache/cloudstack/pull/4534#discussion_r541035104", "createdAt": "2020-12-11T15:38:08Z", "author": {"login": "DaanHoogland"}, "path": "engine/orchestration/src/main/java/com/cloud/vm/VirtualMachineManagerImpl.java", "diffHunk": "@@ -3268,6 +3226,22 @@ public boolean checkIfVmHasClusterWideVolumes(Long vmId) {\n \n     }\n \n+    private DataCenterDeployment getMigrationDeployment(final Long vmId, final Host host, final Long poolId, final ExcludeList excludes) {\n+        if (MIGRATE_VM_ACROSS_CLUSTERS.value() && !checkIfVmHasClusterWideVolumes(vmId)) {\n+            s_logger.info(\"Searching for hosts in the zone for vm migration\");\n+            List<Long> clustersToExcluded = _clusterDao.listAllClusters(host.getDataCenterId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "267fcd4936c31bd42cacef705fefaddfd79d84b7"}, "originalPosition": 86}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4773f5a29c8175544fe57efbe65b1c62be48ba6", "author": {"user": {"login": "soreana", "name": "Sina Kashipazha"}}, "url": "https://github.com/apache/cloudstack/commit/d4773f5a29c8175544fe57efbe65b1c62be48ba6", "committedDate": "2021-01-15T08:11:23Z", "message": " #4534 Fix Vms are migrated to same clusters in CloudStack caused by dedicated resources."}, "afterCommit": {"oid": "2bfeed083c2ff65dd7d1acebd862ef5666297621", "author": {"user": {"login": "soreana", "name": "Sina Kashipazha"}}, "url": "https://github.com/apache/cloudstack/commit/2bfeed083c2ff65dd7d1acebd862ef5666297621", "committedDate": "2021-01-26T13:36:10Z", "message": " #4534 Fix Vms are migrated to same clusters in CloudStack caused by dedicated resources."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce44bc7be184aa3820de56bd32c9d30bf2863566", "author": {"user": {"login": "ustcweizhou", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/ce44bc7be184aa3820de56bd32c9d30bf2863566", "committedDate": "2021-01-26T14:28:52Z", "message": " #4534 extract some codes to methods"}, "afterCommit": {"oid": "a54284c07a51d62fec82a1e45279075b211cd5b1", "author": {"user": {"login": "ustcweizhou", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/a54284c07a51d62fec82a1e45279075b211cd5b1", "committedDate": "2021-02-18T22:27:59Z", "message": "Check MIGRATE_VM_ACROSS_CLUSTERS in zone setting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51ea345a076a72cfeefecbf12ef7bc7b84569a0f", "author": {"user": {"login": "ustcweizhou", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/51ea345a076a72cfeefecbf12ef7bc7b84569a0f", "committedDate": "2021-03-15T13:37:40Z", "message": "server: Optional destination host when migrate a vm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bdc324d860acfc074fa94707467f9131bdbc88a", "author": {"user": {"login": "ustcweizhou", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/9bdc324d860acfc074fa94707467f9131bdbc88a", "committedDate": "2021-03-15T13:44:25Z", "message": " #4378: migrate systemvms/routers with optional host"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6c444969d999bb3c21dceab52fc61fc26fefd9f", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/b6c444969d999bb3c21dceab52fc61fc26fefd9f", "committedDate": "2021-03-15T13:49:45Z", "message": "Migrate vms across clusters\n\nAfter enabling maintenance mode on host, if no suitable hosts\nare found in the same cluster then search for hosts in\ndifferent clusters having the same hypervisor type\n\nset global setting migrate.vm.across.clusters to true"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e85f028982e004deeb54b4ece1a0ff8425138f3", "author": {"user": {"login": "ustcweizhou", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/8e85f028982e004deeb54b4ece1a0ff8425138f3", "committedDate": "2021-03-15T13:50:27Z", "message": "search all clusters in zone when migrate vm across clusters if applicable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e36c02d6d92789d1255506d04552235828abfd3", "author": {"user": {"login": "ustcweizhou", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/8e36c02d6d92789d1255506d04552235828abfd3", "committedDate": "2021-03-15T13:50:28Z", "message": "Honor migrate.vm.across.clusters when migrate vm without destination"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6f8cfc6f7a58a636512c7334c5b5b4dfa081174", "author": {"user": {"login": "ustcweizhou", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/f6f8cfc6f7a58a636512c7334c5b5b4dfa081174", "committedDate": "2021-03-15T13:50:28Z", "message": "Check MIGRATE_VM_ACROSS_CLUSTERS in zone setting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4d80807681993c9090e8b024deb973bdcc7f1ee", "author": {"user": {"login": "soreana", "name": "Sina Kashipazha"}}, "url": "https://github.com/apache/cloudstack/commit/d4d80807681993c9090e8b024deb973bdcc7f1ee", "committedDate": "2021-03-15T13:50:28Z", "message": " #4534 Fix Vms are migrated to same clusters in CloudStack caused by dedicated resources."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3250cf9da7853de0689ed8c298e78e6608c0af3a", "author": {"user": {"login": "ustcweizhou", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/3250cf9da7853de0689ed8c298e78e6608c0af3a", "committedDate": "2021-03-15T13:52:41Z", "message": " #4534 extract some codes to methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a54284c07a51d62fec82a1e45279075b211cd5b1", "author": {"user": {"login": "ustcweizhou", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/a54284c07a51d62fec82a1e45279075b211cd5b1", "committedDate": "2021-02-18T22:27:59Z", "message": "Check MIGRATE_VM_ACROSS_CLUSTERS in zone setting"}, "afterCommit": {"oid": "3250cf9da7853de0689ed8c298e78e6608c0af3a", "author": {"user": {"login": "ustcweizhou", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/3250cf9da7853de0689ed8c298e78e6608c0af3a", "committedDate": "2021-03-15T13:52:41Z", "message": " #4534 extract some codes to methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5633d301ea2865678ef36ab7c8c824cd5ba8ff12", "author": {"user": {"login": "weizhouapache", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/5633d301ea2865678ef36ab7c8c824cd5ba8ff12", "committedDate": "2021-08-19T07:07:18Z", "message": "Merge remote-tracking branch 'apache/main' into 4.15-migrate-vm-across-cluster"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddfd602e75099c416f3bd8bb2191846118423d3d", "author": {"user": {"login": "soreana", "name": "Sina Kashipazha"}}, "url": "https://github.com/apache/cloudstack/commit/ddfd602e75099c416f3bd8bb2191846118423d3d", "committedDate": "2021-08-23T08:07:17Z", "message": "Merge branch 'main' into 4.15-migrate-vm-across-cluster"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ1NjgzOTYz", "url": "https://github.com/apache/cloudstack/pull/4534#pullrequestreview-745683963", "createdAt": "2021-09-03T03:50:50Z", "commit": {"oid": "ddfd602e75099c416f3bd8bb2191846118423d3d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0wM1QwMzo1MDo1MFrOKdEJaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0wM1QwMzo1MDo1MFrOKdEJaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTU2NTI4OQ==", "bodyText": "@weizhouapache these methods are not used?", "url": "https://github.com/apache/cloudstack/pull/4534#discussion_r701565289", "createdAt": "2021-09-03T03:50:50Z", "author": {"login": "shwstppr"}, "path": "server/src/main/java/com/cloud/deploy/FirstFitPlanner.java", "diffHunk": "@@ -441,7 +441,22 @@ protected void removeClustersCrossingThreshold(List<Long> clusterListForVmAlloca\n         return podIdsByCapacity;\n     }\n \n-    protected Pair<List<Long>, Map<Long, Double>> listClustersByCapacity(long id, int requiredCpu, long requiredRam, ExcludeList avoid, boolean isZone) {\n+    private List<Long> listDisabledClusters(long zoneId, Long podId) {\n+        List<Long> disabledClusters = clusterDao.listDisabledClusters(zoneId, podId);\n+        if (podId == null) {\n+            //list all disabled clusters under this zone + clusters under any disabled pod of this zone\n+            List<Long> clustersWithDisabledPods = clusterDao.listClustersWithDisabledPods(zoneId);\n+            disabledClusters.addAll(clustersWithDisabledPods);\n+        }\n+        return disabledClusters;\n+    }\n+\n+    private List<Long> listDisabledPods(long zoneId) {\n+        List<Long> disabledPods = podDao.listDisabledPods(zoneId);\n+        return disabledPods;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddfd602e75099c416f3bd8bb2191846118423d3d"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ1NzYwMzM5", "url": "https://github.com/apache/cloudstack/pull/4534#pullrequestreview-745760339", "createdAt": "2021-09-03T06:51:52Z", "commit": {"oid": "ddfd602e75099c416f3bd8bb2191846118423d3d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0wM1QwNjo1MTo1M1rOKdH_wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0wM1QwNjo1Mzo1OFrOKdIDzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTYyODM1Mg==", "bodyText": "Are you deliberately trying to change hosts arg here to have the new list available to the caller?", "url": "https://github.com/apache/cloudstack/pull/4534#discussion_r701628352", "createdAt": "2021-09-03T06:51:53Z", "author": {"login": "shwstppr"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1336,6 +1344,28 @@ private boolean doMaintain(final long hostId) {\n         return true;\n     }\n \n+    private boolean isClusterWideMigrationSupported(Host host, List<VMInstanceVO> vms, List<HostVO> hosts) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddfd602e75099c416f3bd8bb2191846118423d3d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTYyOTM5MQ==", "bodyText": "@weizhouapache do we need to re-list hosts here for getting hosts from other clusters else VM will be stopped instead of migration.\nI've tested on KVM with one host each in two different clusters and the VM just stops and doesn't migrate. Global setting was set to true.\nI was able to get it working with some changes though\ndiff --git a/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java b/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java\nindex 6a4509cefb..ef3585650a 100755\n--- a/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java\n+++ b/server/src/main/java/com/cloud/resource/ResourceManagerImpl.java\n@@ -33,18 +33,6 @@ import java.util.Random;\n import javax.inject.Inject;\n import javax.naming.ConfigurationException;\n \n-import com.cloud.deploy.DataCenterDeployment;\n-import com.cloud.deploy.DeployDestination;\n-import com.cloud.deploy.DeploymentPlanner;\n-import com.cloud.deploy.DeploymentPlanningManager;\n-import com.cloud.exception.InsufficientServerCapacityException;\n-import com.cloud.exception.ResourceUnavailableException;\n-import com.cloud.service.ServiceOfferingVO;\n-import com.cloud.service.dao.ServiceOfferingDao;\n-import com.cloud.storage.dao.DiskOfferingDao;\n-import com.cloud.vm.UserVmManager;\n-import com.cloud.vm.VirtualMachineProfile;\n-import com.cloud.vm.VirtualMachineProfileImpl;\n import org.apache.cloudstack.api.ApiConstants;\n import org.apache.cloudstack.api.command.admin.cluster.AddClusterCmd;\n import org.apache.cloudstack.api.command.admin.cluster.DeleteClusterCmd;\n@@ -53,12 +41,11 @@ import org.apache.cloudstack.api.command.admin.host.AddHostCmd;\n import org.apache.cloudstack.api.command.admin.host.AddSecondaryStorageCmd;\n import org.apache.cloudstack.api.command.admin.host.CancelHostAsDegradedCmd;\n import org.apache.cloudstack.api.command.admin.host.CancelMaintenanceCmd;\n-import org.apache.cloudstack.api.command.admin.host.PrepareForMaintenanceCmd;\n import org.apache.cloudstack.api.command.admin.host.DeclareHostAsDegradedCmd;\n+import org.apache.cloudstack.api.command.admin.host.PrepareForMaintenanceCmd;\n import org.apache.cloudstack.api.command.admin.host.ReconnectHostCmd;\n import org.apache.cloudstack.api.command.admin.host.UpdateHostCmd;\n import org.apache.cloudstack.api.command.admin.host.UpdateHostPasswordCmd;\n-\n import org.apache.cloudstack.context.CallContext;\n import org.apache.cloudstack.framework.config.ConfigKey;\n import org.apache.cloudstack.framework.config.dao.ConfigurationDao;\n@@ -113,6 +100,10 @@ import com.cloud.dc.dao.DataCenterDao;\n import com.cloud.dc.dao.DataCenterIpAddressDao;\n import com.cloud.dc.dao.DedicatedResourceDao;\n import com.cloud.dc.dao.HostPodDao;\n+import com.cloud.deploy.DataCenterDeployment;\n+import com.cloud.deploy.DeployDestination;\n+import com.cloud.deploy.DeploymentPlanner;\n+import com.cloud.deploy.DeploymentPlanningManager;\n import com.cloud.deploy.PlannerHostReservationVO;\n import com.cloud.deploy.dao.PlannerHostReservationDao;\n import com.cloud.event.ActionEvent;\n@@ -121,9 +112,11 @@ import com.cloud.event.EventTypes;\n import com.cloud.event.EventVO;\n import com.cloud.exception.AgentUnavailableException;\n import com.cloud.exception.DiscoveryException;\n+import com.cloud.exception.InsufficientServerCapacityException;\n import com.cloud.exception.InvalidParameterValueException;\n import com.cloud.exception.PermissionDeniedException;\n import com.cloud.exception.ResourceInUseException;\n+import com.cloud.exception.ResourceUnavailableException;\n import com.cloud.gpu.GPU;\n import com.cloud.gpu.HostGpuGroupsVO;\n import com.cloud.gpu.VGPUTypesVO;\n@@ -150,6 +143,8 @@ import com.cloud.org.Cluster;\n import com.cloud.org.Grouping;\n import com.cloud.org.Managed;\n import com.cloud.serializer.GsonHelper;\n+import com.cloud.service.ServiceOfferingVO;\n+import com.cloud.service.dao.ServiceOfferingDao;\n import com.cloud.service.dao.ServiceOfferingDetailsDao;\n import com.cloud.storage.GuestOSCategoryVO;\n import com.cloud.storage.StorageManager;\n@@ -158,6 +153,7 @@ import com.cloud.storage.StoragePoolHostVO;\n import com.cloud.storage.StoragePoolStatus;\n import com.cloud.storage.StorageService;\n import com.cloud.storage.VMTemplateVO;\n+import com.cloud.storage.dao.DiskOfferingDao;\n import com.cloud.storage.dao.GuestOSCategoryDao;\n import com.cloud.storage.dao.StoragePoolHostDao;\n import com.cloud.storage.dao.VMTemplateDao;\n@@ -189,10 +185,13 @@ import com.cloud.utils.net.Ip;\n import com.cloud.utils.net.NetUtils;\n import com.cloud.utils.ssh.SSHCmdHelper;\n import com.cloud.utils.ssh.SshException;\n+import com.cloud.vm.UserVmManager;\n import com.cloud.vm.VMInstanceVO;\n import com.cloud.vm.VirtualMachine;\n import com.cloud.vm.VirtualMachine.State;\n import com.cloud.vm.VirtualMachineManager;\n+import com.cloud.vm.VirtualMachineProfile;\n+import com.cloud.vm.VirtualMachineProfileImpl;\n import com.cloud.vm.VmDetailConstants;\n import com.cloud.vm.dao.UserVmDetailsDao;\n import com.cloud.vm.dao.VMInstanceDao;\n@@ -1307,12 +1306,18 @@ public class ResourceManagerImpl extends ManagerBase implements ResourceManager,\n                 return true;\n             }\n \n-            List<HostVO> hosts = listAllUpAndEnabledHosts(Host.Type.Routing, host.getClusterId(), host.getPodId(), host.getDataCenterId());\n-            if (hosts == null || hosts.isEmpty()) {\n-                s_logger.warn(\"Unable to find a host for vm migration in cluster: \" + host.getClusterId());\n-                if (! isClusterWideMigrationSupported(host, vms, hosts)) {\n-                    return false;\n-                }\n+\n+            List<HostVO> hosts;\n+            Long clusterId = null;\n+            if (isClusterWideMigrationPossible(host.getDataCenterId(), vms)) {\n+                s_logger.info(String.format(\"Looking for hosts for VM migration across different clusters in pod ID: %d\", host.getPodId()));\n+            } else {\n+                clusterId = host.getClusterId();\n+                s_logger.info(String.format(\"Looking for hosts for VM migration in cluster ID: %d\", clusterId));\n+            }\n+            hosts = listAllUpAndEnabledHosts(Host.Type.Routing, clusterId, host.getPodId(), host.getDataCenterId());\n+            if (CollectionUtils.isEmpty(hosts)) {\n+                s_logger.warn(String.format(\"Unable to find a host for VM migration away from host: %s\", host));\n             }\n \n             for (final VMInstanceVO vm : vms) {\n@@ -1344,23 +1349,17 @@ public class ResourceManagerImpl extends ManagerBase implements ResourceManager,\n         return true;\n     }\n \n-    private boolean isClusterWideMigrationSupported(Host host, List<VMInstanceVO> vms, List<HostVO> hosts) {\n-        if (MIGRATE_VM_ACROSS_CLUSTERS.valueIn(host.getDataCenterId())) {\n-            s_logger.info(\"Looking for hosts across different clusters in zone: \" + host.getDataCenterId());\n-            hosts = listAllUpAndEnabledHosts(Host.Type.Routing, null, null, host.getDataCenterId());\n-            if (hosts == null || hosts.isEmpty()) {\n-                s_logger.warn(\"Unable to find a host for vm migration in zone: \" + host.getDataCenterId());\n-                return false;\n-            }\n-            // Dont migrate vm if it has volumes on cluster-wide pool\n+    private boolean isClusterWideMigrationPossible(long zoneId, List<VMInstanceVO> vms) {\n+        if (MIGRATE_VM_ACROSS_CLUSTERS.valueIn(zoneId)) {\n+            // Don't migrate vm if it has volumes on cluster-wide pool\n             for (final VMInstanceVO vm : vms) {\n                 if (_vmMgr.checkIfVmHasClusterWideVolumes(vm.getId())) {\n-                    s_logger.warn(\"Unable to migrate vm \" + vm.getInstanceName() + \" as it has volumes on cluster-wide pool\");\n+                    s_logger.warn(String.format(\"VM %s cannot be migrated across cluster as it has volumes on cluster-wide pool\", vm));\n                     return false;\n                 }\n             }\n         } else {\n-            s_logger.warn(\"Not migrating VM across cluster since \" + MIGRATE_VM_ACROSS_CLUSTERS.key() + \" is false\");\n+            s_logger.warn(String.format(\"VMs cannot be migrated across cluster since %s is false for zone ID: %d\", MIGRATE_VM_ACROSS_CLUSTERS.key(), zoneId));\n             return false;\n         }\n         return true;", "url": "https://github.com/apache/cloudstack/pull/4534#discussion_r701629391", "createdAt": "2021-09-03T06:53:58Z", "author": {"login": "shwstppr"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1306,7 +1307,14 @@ private boolean doMaintain(final long hostId) {\n                 return true;\n             }\n \n-            final List<HostVO> hosts = listAllUpAndEnabledHosts(Host.Type.Routing, host.getClusterId(), host.getPodId(), host.getDataCenterId());\n+            List<HostVO> hosts = listAllUpAndEnabledHosts(Host.Type.Routing, host.getClusterId(), host.getPodId(), host.getDataCenterId());\n+            if (hosts == null || hosts.isEmpty()) {\n+                s_logger.warn(\"Unable to find a host for vm migration in cluster: \" + host.getClusterId());\n+                if (! isClusterWideMigrationSupported(host, vms, hosts)) {\n+                    return false;\n+                }\n+            }\n+\n             for (final VMInstanceVO vm : vms) {\n                 if (hosts == null || hosts.isEmpty() || !answer.getMigrate()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddfd602e75099c416f3bd8bb2191846118423d3d"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "404cd34c15644c600ff3f55e39bfec82bc302b6a", "author": {"user": {"login": "weizhouapache", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/404cd34c15644c600ff3f55e39bfec82bc302b6a", "committedDate": "2021-09-06T06:32:38Z", "message": "fix #4534: an error in 'git merge'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca3d0cc510683ede46aa9956ea030839a8961201", "author": {"user": {"login": "weizhouapache", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/ca3d0cc510683ede46aa9956ea030839a8961201", "committedDate": "2021-09-06T06:32:58Z", "message": "fix #4534: remove useless methods in FirstFitPlanner.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a31e24e68a9f212d1d26e7982f72dba3e8f14ed8", "author": {"user": {"login": "weizhouapache", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/a31e24e68a9f212d1d26e7982f72dba3e8f14ed8", "committedDate": "2021-09-06T06:33:07Z", "message": "fix #4534: vms are stopped in host maintenance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "beeee5e2931fc20ae904e73e23776324e9aa5cc9", "author": {"user": {"login": "weizhouapache", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/beeee5e2931fc20ae904e73e23776324e9aa5cc9", "committedDate": "2021-09-06T06:38:00Z", "message": "fix #4534: across-cluster migration of vms with cluster-scoped pools is supported by vmware vmotion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75a8b0dcc9028b56b633065f36e62e2274ff13a7", "author": {"user": {"login": "weizhouapache", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/75a8b0dcc9028b56b633065f36e62e2274ff13a7", "committedDate": "2021-09-06T06:40:12Z", "message": "fix #4534: migrate systemvms is only possible across clusters in same pod to avoid potential network errors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "708bd73b90943349844d6cc89ff82d5bb14b9879", "author": {"user": {"login": "weizhouapache", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/708bd73b90943349844d6cc89ff82d5bb14b9879", "committedDate": "2021-09-06T06:42:05Z", "message": "Merge remote-tracking branch 'apache/main' into 4.15-migrate-vm-across-cluster"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ3MDk2ODgx", "url": "https://github.com/apache/cloudstack/pull/4534#pullrequestreview-747096881", "createdAt": "2021-09-06T10:55:37Z", "commit": {"oid": "708bd73b90943349844d6cc89ff82d5bb14b9879"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0wNlQxMDo1NTozN1rOKeQDyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0wNlQxMDo1NTozN1rOKeQDyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMjgwOTAzNA==", "bodyText": "Minor nit: this block can be moved to start of if to fail early", "url": "https://github.com/apache/cloudstack/pull/4534#discussion_r702809034", "createdAt": "2021-09-06T10:55:37Z", "author": {"login": "shwstppr"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1345,6 +1353,37 @@ private boolean doMaintain(final long hostId) {\n         return true;\n     }\n \n+    private boolean isClusterWideMigrationPossible(Host host, List<VMInstanceVO> vms, List<HostVO> hosts) {\n+        if (MIGRATE_VM_ACROSS_CLUSTERS.valueIn(host.getDataCenterId())) {\n+            s_logger.info(\"Looking for hosts across different clusters in zone: \" + host.getDataCenterId());\n+            Long podId = null;\n+            for (final VMInstanceVO vm : vms) {\n+                if (VirtualMachine.systemVMs.contains(vm.getType())) {\n+                    // SystemVMs can only be migrated to same pod\n+                    podId = host.getPodId();\n+                    break;\n+                }\n+            }\n+            hosts.addAll(listAllUpAndEnabledHosts(Host.Type.Routing, null, podId, host.getDataCenterId()));\n+            if (CollectionUtils.isEmpty(hosts)) {\n+                s_logger.warn(\"Unable to find a host for vm migration in zone: \" + host.getDataCenterId());\n+                return false;\n+            }\n+            s_logger.info(\"Found hosts in the zone for vm migration: \" + hosts);\n+            // Don't migrate vm if it has volumes on cluster-wide pool\n+            for (final VMInstanceVO vm : vms) {\n+                if (! HypervisorType.VMware.equals(host.getHypervisorType()) && _vmMgr.checkIfVmHasClusterWideVolumes(vm.getId())) {\n+                    s_logger.warn(String.format(\"VM %s cannot be migrated across cluster as it has volumes on cluster-wide pool\", vm));\n+                    return false;\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "708bd73b90943349844d6cc89ff82d5bb14b9879"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13086b1b9f16224aae1a7da003837f2b0b8eeecf", "author": {"user": {"login": "weizhouapache", "name": "Wei Zhou"}}, "url": "https://github.com/apache/cloudstack/commit/13086b1b9f16224aae1a7da003837f2b0b8eeecf", "committedDate": "2021-09-06T13:00:58Z", "message": "fix #4534: code optimization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ4NTM2MDgz", "url": "https://github.com/apache/cloudstack/pull/4534#pullrequestreview-748536083", "createdAt": "2021-09-08T00:50:14Z", "commit": {"oid": "13086b1b9f16224aae1a7da003837f2b0b8eeecf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4614, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}