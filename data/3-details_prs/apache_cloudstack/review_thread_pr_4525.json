{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0OTg5OTg0", "number": 4525, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoyNjo1NVrOFCy3OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzowNTozNVrOFC6gHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDc0ODA4OnYy", "diffSide": "RIGHT", "path": "plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/CitrixResourceBase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODoyNjo1NVrOICINFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwODo0MToxMFrOICIwsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEwMjQ4Nw==", "bodyText": "@rhtyd Makes sense to eject only when ISO is inserted. Verified that this is being handled in all cases before ejecting vdb, except here.", "url": "https://github.com/apache/cloudstack/pull/4525#discussion_r539102487", "createdAt": "2020-12-09T08:26:55Z", "author": {"login": "sureshanaparti"}, "path": "plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/CitrixResourceBase.java", "diffHunk": "@@ -1499,7 +1499,10 @@ public void destroyPatchVbd(final Connection conn, final String vmName) throws X\n                 final Set<VBD> vbds = vm.getVBDs(conn);\n                 for (final VBD vbd : vbds) {\n                     if (vbd.getType(conn) == Types.VbdType.CD) {\n-                        vbd.eject(conn);\n+                        if (!vbd.getEmpty(conn)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cb9b300ad19408be9d6a50f96d86b864f9880a1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTExMTYwMw==", "bodyText": "agree that it makes sense, but I don't see why this yields the bug @vladimirpetrov saw. However if this fixes it for him, i'm all \ud83d\udc4d", "url": "https://github.com/apache/cloudstack/pull/4525#discussion_r539111603", "createdAt": "2020-12-09T08:41:10Z", "author": {"login": "DaanHoogland"}, "path": "plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/CitrixResourceBase.java", "diffHunk": "@@ -1499,7 +1499,10 @@ public void destroyPatchVbd(final Connection conn, final String vmName) throws X\n                 final Set<VBD> vbds = vm.getVBDs(conn);\n                 for (final VBD vbd : vbds) {\n                     if (vbd.getType(conn) == Types.VbdType.CD) {\n-                        vbd.eject(conn);\n+                        if (!vbd.getEmpty(conn)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEwMjQ4Nw=="}, "originalCommit": {"oid": "6cb9b300ad19408be9d6a50f96d86b864f9880a1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTYyMTg4OnYy", "diffSide": "RIGHT", "path": "plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/CitrixResourceBase.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMTozNzoyN1rOICQNdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjowMzo0N1rOICRNZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzMzY1Mg==", "bodyText": "@sureshanaparti @DaanHoogland @vladimirpetrov this confirms that this is a XS issue, the fix was to eject and then insert the new systemvm.iso and then eject is again \ud83e\udd26", "url": "https://github.com/apache/cloudstack/pull/4525#discussion_r539233652", "createdAt": "2020-12-09T11:37:27Z", "author": {"login": "rhtyd"}, "path": "plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/CitrixResourceBase.java", "diffHunk": "@@ -1489,24 +1502,33 @@ protected String deleteSnapshotBackup(final Connection conn, final Long dcId, fi\n         return result;\n     }\n \n-    public void destroyPatchVbd(final Connection conn, final String vmName) throws XmlRpcException, XenAPIException {\n-        try {\n-            if (!vmName.startsWith(\"r-\") && !vmName.startsWith(\"s-\") && !vmName.startsWith(\"v-\")) {\n-                return;\n-            }\n-            final Set<VM> vms = VM.getByNameLabel(conn, vmName);\n-            for (final VM vm : vms) {\n+    public void destroyPatchVbd(final Connection conn, final Set<VM> vms) throws XmlRpcException, XenAPIException {\n+        final SR sr = findPatchIsoSR(conn);\n+        final VDI patchVDI = findPatchIsoVDI(conn, sr);\n+        for (final VM vm : vms) {\n+            final String vmName = vm.getNameLabel(conn);\n+            try {\n+                if (!vmName.startsWith(\"r-\") && !vmName.startsWith(\"s-\") && !vmName.startsWith(\"v-\")) {\n+                    return;\n+                }\n                 final Set<VBD> vbds = vm.getVBDs(conn);\n                 for (final VBD vbd : vbds) {\n-                    if (vbd.getType(conn) == Types.VbdType.CD) {\n-                        vbd.eject(conn);\n+                    if (Types.VbdType.CD.equals(vbd.getType(conn))) {\n+                        if (!vbd.getEmpty(conn)) {\n+                            vbd.eject(conn);\n+                        }\n+                        // Workaround for any file descriptor caching issue\n+                        if (patchVDI != null) {\n+                            vbd.insert(conn, patchVDI);\n+                            vbd.eject(conn);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe57cf25bde54c1793aafee80f2647d78301077"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI0MDU4OA==", "bodyText": "@sureshanaparti @DaanHoogland @vladimirpetrov this confirms that this is a XS issue, the fix was to eject and then insert the new systemvm.iso and then eject is again \ud83e\udd26\n\nany specific version of XS?", "url": "https://github.com/apache/cloudstack/pull/4525#discussion_r539240588", "createdAt": "2020-12-09T11:48:33Z", "author": {"login": "sureshanaparti"}, "path": "plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/CitrixResourceBase.java", "diffHunk": "@@ -1489,24 +1502,33 @@ protected String deleteSnapshotBackup(final Connection conn, final Long dcId, fi\n         return result;\n     }\n \n-    public void destroyPatchVbd(final Connection conn, final String vmName) throws XmlRpcException, XenAPIException {\n-        try {\n-            if (!vmName.startsWith(\"r-\") && !vmName.startsWith(\"s-\") && !vmName.startsWith(\"v-\")) {\n-                return;\n-            }\n-            final Set<VM> vms = VM.getByNameLabel(conn, vmName);\n-            for (final VM vm : vms) {\n+    public void destroyPatchVbd(final Connection conn, final Set<VM> vms) throws XmlRpcException, XenAPIException {\n+        final SR sr = findPatchIsoSR(conn);\n+        final VDI patchVDI = findPatchIsoVDI(conn, sr);\n+        for (final VM vm : vms) {\n+            final String vmName = vm.getNameLabel(conn);\n+            try {\n+                if (!vmName.startsWith(\"r-\") && !vmName.startsWith(\"s-\") && !vmName.startsWith(\"v-\")) {\n+                    return;\n+                }\n                 final Set<VBD> vbds = vm.getVBDs(conn);\n                 for (final VBD vbd : vbds) {\n-                    if (vbd.getType(conn) == Types.VbdType.CD) {\n-                        vbd.eject(conn);\n+                    if (Types.VbdType.CD.equals(vbd.getType(conn))) {\n+                        if (!vbd.getEmpty(conn)) {\n+                            vbd.eject(conn);\n+                        }\n+                        // Workaround for any file descriptor caching issue\n+                        if (patchVDI != null) {\n+                            vbd.insert(conn, patchVDI);\n+                            vbd.eject(conn);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzMzY1Mg=="}, "originalCommit": {"oid": "7fe57cf25bde54c1793aafee80f2647d78301077"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI1MDAyMQ==", "bodyText": "We've tested/reproduced this on XS7.1", "url": "https://github.com/apache/cloudstack/pull/4525#discussion_r539250021", "createdAt": "2020-12-09T12:03:47Z", "author": {"login": "rhtyd"}, "path": "plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/CitrixResourceBase.java", "diffHunk": "@@ -1489,24 +1502,33 @@ protected String deleteSnapshotBackup(final Connection conn, final Long dcId, fi\n         return result;\n     }\n \n-    public void destroyPatchVbd(final Connection conn, final String vmName) throws XmlRpcException, XenAPIException {\n-        try {\n-            if (!vmName.startsWith(\"r-\") && !vmName.startsWith(\"s-\") && !vmName.startsWith(\"v-\")) {\n-                return;\n-            }\n-            final Set<VM> vms = VM.getByNameLabel(conn, vmName);\n-            for (final VM vm : vms) {\n+    public void destroyPatchVbd(final Connection conn, final Set<VM> vms) throws XmlRpcException, XenAPIException {\n+        final SR sr = findPatchIsoSR(conn);\n+        final VDI patchVDI = findPatchIsoVDI(conn, sr);\n+        for (final VM vm : vms) {\n+            final String vmName = vm.getNameLabel(conn);\n+            try {\n+                if (!vmName.startsWith(\"r-\") && !vmName.startsWith(\"s-\") && !vmName.startsWith(\"v-\")) {\n+                    return;\n+                }\n                 final Set<VBD> vbds = vm.getVBDs(conn);\n                 for (final VBD vbd : vbds) {\n-                    if (vbd.getType(conn) == Types.VbdType.CD) {\n-                        vbd.eject(conn);\n+                    if (Types.VbdType.CD.equals(vbd.getType(conn))) {\n+                        if (!vbd.getEmpty(conn)) {\n+                            vbd.eject(conn);\n+                        }\n+                        // Workaround for any file descriptor caching issue\n+                        if (patchVDI != null) {\n+                            vbd.insert(conn, patchVDI);\n+                            vbd.eject(conn);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIzMzY1Mg=="}, "originalCommit": {"oid": "7fe57cf25bde54c1793aafee80f2647d78301077"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTk5NTU2OnYy", "diffSide": "RIGHT", "path": "plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/CitrixResourceBase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzowNDo0MlrOICTmZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzoyNjo1M1rOICUg2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4OTE5MA==", "bodyText": "is thsi a bedug message or maybe error or warn?", "url": "https://github.com/apache/cloudstack/pull/4525#discussion_r539289190", "createdAt": "2020-12-09T13:04:42Z", "author": {"login": "DaanHoogland"}, "path": "plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/CitrixResourceBase.java", "diffHunk": "@@ -1489,27 +1489,31 @@ protected String deleteSnapshotBackup(final Connection conn, final Long dcId, fi\n         return result;\n     }\n \n-    public void destroyPatchVbd(final Connection conn, final String vmName) throws XmlRpcException, XenAPIException {\n+    public void ejectPatchVbd(final Connection conn, final Host host) {\n+        try {\n+            final Set<VM> vms = host.getResidentVMs(conn);\n+            for (final VM vm : vms) {\n+                destroyPatchVbd(conn, vm);\n+            }\n+        } catch (XenAPIException | XmlRpcException ignored) {}\n+    }\n+\n+    public void destroyPatchVbd(final Connection conn, final VM vm) throws XmlRpcException, XenAPIException {\n+        final String vmName = vm.getNameLabel(conn);\n         try {\n             if (!vmName.startsWith(\"r-\") && !vmName.startsWith(\"s-\") && !vmName.startsWith(\"v-\")) {\n                 return;\n             }\n-            final Set<VM> vms = VM.getByNameLabel(conn, vmName);\n-            for (final VM vm : vms) {\n-                final Set<VBD> vbds = vm.getVBDs(conn);\n-                for (final VBD vbd : vbds) {\n-                    if (vbd.getType(conn) == Types.VbdType.CD) {\n-                        if (!vbd.getEmpty(conn)) {\n-                            vbd.eject(conn);\n-                        }\n-                        vbd.unplug(conn);\n-                        vbd.destroy(conn);\n-                        break;\n-                    }\n+            final Set<VBD> vbds = vm.getVBDs(conn);\n+            for (final VBD vbd : vbds) {\n+                if (Types.VbdType.CD.equals(vbd.getType(conn))) {\n+                    vbd.eject(conn);\n+                    vbd.destroy(conn);\n+                    break;\n                 }\n             }\n         } catch (final Exception e) {\n-            s_logger.debug(\"Cannot destory CD-ROM device for VM \" + vmName + \" due to \" + e.toString(), e);\n+            s_logger.debug(\"Cannot destroy CD-ROM device for VM \" + vmName + \" due to \" + e.toString(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8615f8fdd9fa3926cd0f051bc37e6ae9942103"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwNDE1NQ==", "bodyText": "Yes the action failure is ignorable", "url": "https://github.com/apache/cloudstack/pull/4525#discussion_r539304155", "createdAt": "2020-12-09T13:26:53Z", "author": {"login": "rhtyd"}, "path": "plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/CitrixResourceBase.java", "diffHunk": "@@ -1489,27 +1489,31 @@ protected String deleteSnapshotBackup(final Connection conn, final Long dcId, fi\n         return result;\n     }\n \n-    public void destroyPatchVbd(final Connection conn, final String vmName) throws XmlRpcException, XenAPIException {\n+    public void ejectPatchVbd(final Connection conn, final Host host) {\n+        try {\n+            final Set<VM> vms = host.getResidentVMs(conn);\n+            for (final VM vm : vms) {\n+                destroyPatchVbd(conn, vm);\n+            }\n+        } catch (XenAPIException | XmlRpcException ignored) {}\n+    }\n+\n+    public void destroyPatchVbd(final Connection conn, final VM vm) throws XmlRpcException, XenAPIException {\n+        final String vmName = vm.getNameLabel(conn);\n         try {\n             if (!vmName.startsWith(\"r-\") && !vmName.startsWith(\"s-\") && !vmName.startsWith(\"v-\")) {\n                 return;\n             }\n-            final Set<VM> vms = VM.getByNameLabel(conn, vmName);\n-            for (final VM vm : vms) {\n-                final Set<VBD> vbds = vm.getVBDs(conn);\n-                for (final VBD vbd : vbds) {\n-                    if (vbd.getType(conn) == Types.VbdType.CD) {\n-                        if (!vbd.getEmpty(conn)) {\n-                            vbd.eject(conn);\n-                        }\n-                        vbd.unplug(conn);\n-                        vbd.destroy(conn);\n-                        break;\n-                    }\n+            final Set<VBD> vbds = vm.getVBDs(conn);\n+            for (final VBD vbd : vbds) {\n+                if (Types.VbdType.CD.equals(vbd.getType(conn))) {\n+                    vbd.eject(conn);\n+                    vbd.destroy(conn);\n+                    break;\n                 }\n             }\n         } catch (final Exception e) {\n-            s_logger.debug(\"Cannot destory CD-ROM device for VM \" + vmName + \" due to \" + e.toString(), e);\n+            s_logger.debug(\"Cannot destroy CD-ROM device for VM \" + vmName + \" due to \" + e.toString(), e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4OTE5MA=="}, "originalCommit": {"oid": "8f8615f8fdd9fa3926cd0f051bc37e6ae9942103"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTk5OTY3OnYy", "diffSide": "RIGHT", "path": "plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/CitrixResourceBase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzowNTozNVrOICTovg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzoyNzoxNFrOICUiHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4OTc5MA==", "bodyText": "can we ignore this completely (without at least diagnostic debug message)?", "url": "https://github.com/apache/cloudstack/pull/4525#discussion_r539289790", "createdAt": "2020-12-09T13:05:35Z", "author": {"login": "DaanHoogland"}, "path": "plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/CitrixResourceBase.java", "diffHunk": "@@ -1489,27 +1489,31 @@ protected String deleteSnapshotBackup(final Connection conn, final Long dcId, fi\n         return result;\n     }\n \n-    public void destroyPatchVbd(final Connection conn, final String vmName) throws XmlRpcException, XenAPIException {\n+    public void ejectPatchVbd(final Connection conn, final Host host) {\n+        try {\n+            final Set<VM> vms = host.getResidentVMs(conn);\n+            for (final VM vm : vms) {\n+                destroyPatchVbd(conn, vm);\n+            }\n+        } catch (XenAPIException | XmlRpcException ignored) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8615f8fdd9fa3926cd0f051bc37e6ae9942103"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwNDQ3Ng==", "bodyText": "Ignorable I think", "url": "https://github.com/apache/cloudstack/pull/4525#discussion_r539304476", "createdAt": "2020-12-09T13:27:14Z", "author": {"login": "rhtyd"}, "path": "plugins/hypervisors/xenserver/src/main/java/com/cloud/hypervisor/xenserver/resource/CitrixResourceBase.java", "diffHunk": "@@ -1489,27 +1489,31 @@ protected String deleteSnapshotBackup(final Connection conn, final Long dcId, fi\n         return result;\n     }\n \n-    public void destroyPatchVbd(final Connection conn, final String vmName) throws XmlRpcException, XenAPIException {\n+    public void ejectPatchVbd(final Connection conn, final Host host) {\n+        try {\n+            final Set<VM> vms = host.getResidentVMs(conn);\n+            for (final VM vm : vms) {\n+                destroyPatchVbd(conn, vm);\n+            }\n+        } catch (XenAPIException | XmlRpcException ignored) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4OTc5MA=="}, "originalCommit": {"oid": "8f8615f8fdd9fa3926cd0f051bc37e6ae9942103"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4028, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}