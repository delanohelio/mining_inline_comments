{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4OTkxNjIw", "number": 4388, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjoyODo1MlrOErlwjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODowNDo0NFrOEzLsdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTQyODYyOnYy", "diffSide": "LEFT", "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjoyODo1M1rOHecJeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMDo0NDoyN1rOHggk-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4MDUwNg==", "bodyText": "@slavkap what is the impact on volume stats for managed / local storage pool ? can this cause regression?", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r501680506", "createdAt": "2020-10-08T12:28:53Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1930,18 +1931,13 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n     public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType, List<String> volumeLocators, int timeout) {\n         List<HostVO> neighbors = _resourceMgr.listHostsInClusterByStatus(clusterId, Status.Up);\n         StoragePoolVO storagePool = _storagePoolDao.findPoolByUUID(poolUuid);\n-        for (HostVO neighbor : neighbors) {\n-            // apply filters:\n-            // - managed storage\n-            // - local storage\n-            if (storagePool.isManaged() || storagePool.isLocal()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55f084dee293d0899ee0f145d3ccf57acc05e69e"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjIwNTE1OQ==", "bodyText": "The logic was correct for managed/local storages, but for unmanaged I've descried in the description what is happening. I have tested with NFS unmanaged storage and StorPool as well, and it should get the volumes only on the current host", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r502205159", "createdAt": "2020-10-09T06:00:01Z", "author": {"login": "slavkap"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1930,18 +1931,13 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n     public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType, List<String> volumeLocators, int timeout) {\n         List<HostVO> neighbors = _resourceMgr.listHostsInClusterByStatus(clusterId, Status.Up);\n         StoragePoolVO storagePool = _storagePoolDao.findPoolByUUID(poolUuid);\n-        for (HostVO neighbor : neighbors) {\n-            // apply filters:\n-            // - managed storage\n-            // - local storage\n-            if (storagePool.isManaged() || storagePool.isLocal()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4MDUwNg=="}, "originalCommit": {"oid": "55f084dee293d0899ee0f145d3ccf57acc05e69e"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2Nzg3Mw==", "bodyText": "@slavkap For non-managed & shared pools, the volumeLocators passed to the method is directly used earlier, instead from the host(s). Now, volumeLocators in the method arg, is not used anymore. You can remove the arg if not required. Please check and update accordingly.", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r502267873", "createdAt": "2020-10-09T08:23:39Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1930,18 +1931,13 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n     public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType, List<String> volumeLocators, int timeout) {\n         List<HostVO> neighbors = _resourceMgr.listHostsInClusterByStatus(clusterId, Status.Up);\n         StoragePoolVO storagePool = _storagePoolDao.findPoolByUUID(poolUuid);\n-        for (HostVO neighbor : neighbors) {\n-            // apply filters:\n-            // - managed storage\n-            // - local storage\n-            if (storagePool.isManaged() || storagePool.isLocal()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4MDUwNg=="}, "originalCommit": {"oid": "55f084dee293d0899ee0f145d3ccf57acc05e69e"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg1MDIzNQ==", "bodyText": "removed volumeLocators", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r503850235", "createdAt": "2020-10-13T10:44:27Z", "author": {"login": "slavkap"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1930,18 +1931,13 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n     public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType, List<String> volumeLocators, int timeout) {\n         List<HostVO> neighbors = _resourceMgr.listHostsInClusterByStatus(clusterId, Status.Up);\n         StoragePoolVO storagePool = _storagePoolDao.findPoolByUUID(poolUuid);\n-        for (HostVO neighbor : neighbors) {\n-            // apply filters:\n-            // - managed storage\n-            // - local storage\n-            if (storagePool.isManaged() || storagePool.isLocal()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4MDUwNg=="}, "originalCommit": {"oid": "55f084dee293d0899ee0f145d3ccf57acc05e69e"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTQzMzg4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/api/query/ViewResponseHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjoyOTo1OFrOHecMdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjoyOTo1OFrOHecMdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY4MTI3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (vr.getFormat() == ImageFormat.VHD || vr.getFormat() == ImageFormat.QCOW2){\n          \n          \n            \n                        if (vr.getFormat() == ImageFormat.VHD || vr.getFormat() == ImageFormat.QCOW2) {", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r501681271", "createdAt": "2020-10-08T12:29:58Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/api/query/ViewResponseHelper.java", "diffHunk": "@@ -287,10 +287,7 @@\n             vrDataList.put(vr.getId(), vrData);\n \n             VolumeStats vs = null;\n-            if (vr.getFormat() == ImageFormat.QCOW2) {\n-                vs = ApiDBUtils.getVolumeStatistics(vrData.getId());\n-            }\n-            else if (vr.getFormat() == ImageFormat.VHD){\n+            if (vr.getFormat() == ImageFormat.VHD || vr.getFormat() == ImageFormat.QCOW2){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55f084dee293d0899ee0f145d3ccf57acc05e69e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTUxNjY4OnYy", "diffSide": "LEFT", "path": "engine/schema/src/main/java/com/cloud/dc/dao/ClusterDaoImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo1MTowMlrOHec_gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoyMDozMlrOHe_5gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5NDMzOQ==", "bodyText": "@slavkap check if this can cause regression, for listing hypervisors for zone.", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r501694339", "createdAt": "2020-10-08T12:51:02Z", "author": {"login": "sureshanaparti"}, "path": "engine/schema/src/main/java/com/cloud/dc/dao/ClusterDaoImpl.java", "diffHunk": "@@ -81,7 +81,6 @@ public ClusterDaoImpl() {\n \n         ZoneSearch = createSearchBuilder();\n         ZoneSearch.and(\"dataCenterId\", ZoneSearch.entity().getDataCenterId(), SearchCriteria.Op.EQ);\n-        ZoneSearch.groupBy(ZoneSearch.entity().getHypervisorType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55f084dee293d0899ee0f145d3ccf57acc05e69e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjIwOTAxNQ==", "bodyText": "@sureshanaparti I have tested it. My setup is 2 KVM cluster with 2 hosts on each. Before the change when listing hypervisors:\n\nlist hypervisors zoneid=307c2b69-86eb-451e-8517-6113c59648c4\n{ \"count\": 1,  \"hypervisor\": [ { \"name\": \"KVM\" } ] }\n\nwith the change when listing hypervisors:\n\nlist hypervisors zoneid=307c2b69-86eb-451e-8517-6113c59648c4\n{ \"count\": 2,  \"hypervisor\": [  { \"name\": \"KVM\"  },   {  \"name\": \"KVM\"  } ] }", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r502209015", "createdAt": "2020-10-09T06:12:49Z", "author": {"login": "slavkap"}, "path": "engine/schema/src/main/java/com/cloud/dc/dao/ClusterDaoImpl.java", "diffHunk": "@@ -81,7 +81,6 @@ public ClusterDaoImpl() {\n \n         ZoneSearch = createSearchBuilder();\n         ZoneSearch.and(\"dataCenterId\", ZoneSearch.entity().getDataCenterId(), SearchCriteria.Op.EQ);\n-        ZoneSearch.groupBy(ZoneSearch.entity().getHypervisorType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5NDMzOQ=="}, "originalCommit": {"oid": "55f084dee293d0899ee0f145d3ccf57acc05e69e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI1ODQxOQ==", "bodyText": "@slavkap list hypervisors should return only 1 KVM, that is the reason for group by.", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r502258419", "createdAt": "2020-10-09T08:07:27Z", "author": {"login": "sureshanaparti"}, "path": "engine/schema/src/main/java/com/cloud/dc/dao/ClusterDaoImpl.java", "diffHunk": "@@ -81,7 +81,6 @@ public ClusterDaoImpl() {\n \n         ZoneSearch = createSearchBuilder();\n         ZoneSearch.and(\"dataCenterId\", ZoneSearch.entity().getDataCenterId(), SearchCriteria.Op.EQ);\n-        ZoneSearch.groupBy(ZoneSearch.entity().getHypervisorType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5NDMzOQ=="}, "originalCommit": {"oid": "55f084dee293d0899ee0f145d3ccf57acc05e69e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2NjI0Mg==", "bodyText": "ok than, I wasn't sure that it should return only 1 KVM if we have for example 3 clusters of them. I will implement another method, which gets all clusters in the zone. It's needed for StatsCollector to list all clusters in the zone, otherwise we get only one cluster of a hypervisor type.", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r502266242", "createdAt": "2020-10-09T08:20:32Z", "author": {"login": "slavkap"}, "path": "engine/schema/src/main/java/com/cloud/dc/dao/ClusterDaoImpl.java", "diffHunk": "@@ -81,7 +81,6 @@ public ClusterDaoImpl() {\n \n         ZoneSearch = createSearchBuilder();\n         ZoneSearch.and(\"dataCenterId\", ZoneSearch.entity().getDataCenterId(), SearchCriteria.Op.EQ);\n-        ZoneSearch.groupBy(ZoneSearch.entity().getHypervisorType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5NDMzOQ=="}, "originalCommit": {"oid": "55f084dee293d0899ee0f145d3ccf57acc05e69e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTU2MzQwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzowMjozMlrOHedcmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoyMTo1MFrOHe_8LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcwMTc4Ng==", "bodyText": "@slavkap volume path is not the locator for OVA format, update with chain info ?", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r501701786", "createdAt": "2020-10-08T13:02:32Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1956,16 +1952,16 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n \n             if (answer instanceof GetVolumeStatsAnswer){\n                 GetVolumeStatsAnswer volstats = (GetVolumeStatsAnswer)answer;\n-                return volstats.getVolumeStats();\n+                volumeStatsByUuid.putAll(volstats.getVolumeStats());\n             }\n         }\n-        return null;\n+        return volumeStatsByUuid.size() > 0 ? volumeStatsByUuid : null;\n     }\n \n     private List<String> getVolumesByHost(HostVO host, StoragePool pool){\n-        List<UserVmVO> vmsPerHost = _vmDao.listByHostId(host.getId());\n+        List<VMInstanceVO> vmsPerHost = _vmInstanceDao.listByHostId(host.getId());\n         return vmsPerHost.stream()\n-                .flatMap(vm -> _volsDao.findByInstanceIdAndPoolId(vm.getId(),pool.getId()).stream().map(vol -> vol.getPath()))\n+                .flatMap(vm -> _volsDao.findByInstanceIdAndPoolId(vm.getId(),pool.getId()).stream().map(vol -> vol.getState() == Volume.State.Ready ? vol.getPath() : null).filter(Objects::nonNull))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55f084dee293d0899ee0f145d3ccf57acc05e69e"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjIwMzg3Ng==", "bodyText": "@sureshanaparti I was just follow the original logic and just added to get only the volumes with status \"Ready\". I will check for the rest of the formats, but I will be not able to do tests for them", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r502203876", "createdAt": "2020-10-09T05:55:30Z", "author": {"login": "slavkap"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1956,16 +1952,16 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n \n             if (answer instanceof GetVolumeStatsAnswer){\n                 GetVolumeStatsAnswer volstats = (GetVolumeStatsAnswer)answer;\n-                return volstats.getVolumeStats();\n+                volumeStatsByUuid.putAll(volstats.getVolumeStats());\n             }\n         }\n-        return null;\n+        return volumeStatsByUuid.size() > 0 ? volumeStatsByUuid : null;\n     }\n \n     private List<String> getVolumesByHost(HostVO host, StoragePool pool){\n-        List<UserVmVO> vmsPerHost = _vmDao.listByHostId(host.getId());\n+        List<VMInstanceVO> vmsPerHost = _vmInstanceDao.listByHostId(host.getId());\n         return vmsPerHost.stream()\n-                .flatMap(vm -> _volsDao.findByInstanceIdAndPoolId(vm.getId(),pool.getId()).stream().map(vol -> vol.getPath()))\n+                .flatMap(vm -> _volsDao.findByInstanceIdAndPoolId(vm.getId(),pool.getId()).stream().map(vol -> vol.getState() == Volume.State.Ready ? vol.getPath() : null).filter(Objects::nonNull))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcwMTc4Ng=="}, "originalCommit": {"oid": "55f084dee293d0899ee0f145d3ccf57acc05e69e"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2MDg3Nw==", "bodyText": "ok @slavkap  you have corrected the volume locator for QCOW2 in the response helper, this would be similar change for OVA here.", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r502260877", "createdAt": "2020-10-09T08:11:55Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1956,16 +1952,16 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n \n             if (answer instanceof GetVolumeStatsAnswer){\n                 GetVolumeStatsAnswer volstats = (GetVolumeStatsAnswer)answer;\n-                return volstats.getVolumeStats();\n+                volumeStatsByUuid.putAll(volstats.getVolumeStats());\n             }\n         }\n-        return null;\n+        return volumeStatsByUuid.size() > 0 ? volumeStatsByUuid : null;\n     }\n \n     private List<String> getVolumesByHost(HostVO host, StoragePool pool){\n-        List<UserVmVO> vmsPerHost = _vmDao.listByHostId(host.getId());\n+        List<VMInstanceVO> vmsPerHost = _vmInstanceDao.listByHostId(host.getId());\n         return vmsPerHost.stream()\n-                .flatMap(vm -> _volsDao.findByInstanceIdAndPoolId(vm.getId(),pool.getId()).stream().map(vol -> vol.getPath()))\n+                .flatMap(vm -> _volsDao.findByInstanceIdAndPoolId(vm.getId(),pool.getId()).stream().map(vol -> vol.getState() == Volume.State.Ready ? vol.getPath() : null).filter(Objects::nonNull))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcwMTc4Ng=="}, "originalCommit": {"oid": "55f084dee293d0899ee0f145d3ccf57acc05e69e"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2NjkyNQ==", "bodyText": "yes, I will add to check if it's OVA", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r502266925", "createdAt": "2020-10-09T08:21:50Z", "author": {"login": "slavkap"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1956,16 +1952,16 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n \n             if (answer instanceof GetVolumeStatsAnswer){\n                 GetVolumeStatsAnswer volstats = (GetVolumeStatsAnswer)answer;\n-                return volstats.getVolumeStats();\n+                volumeStatsByUuid.putAll(volstats.getVolumeStats());\n             }\n         }\n-        return null;\n+        return volumeStatsByUuid.size() > 0 ? volumeStatsByUuid : null;\n     }\n \n     private List<String> getVolumesByHost(HostVO host, StoragePool pool){\n-        List<UserVmVO> vmsPerHost = _vmDao.listByHostId(host.getId());\n+        List<VMInstanceVO> vmsPerHost = _vmInstanceDao.listByHostId(host.getId());\n         return vmsPerHost.stream()\n-                .flatMap(vm -> _volsDao.findByInstanceIdAndPoolId(vm.getId(),pool.getId()).stream().map(vol -> vol.getPath()))\n+                .flatMap(vm -> _volsDao.findByInstanceIdAndPoolId(vm.getId(),pool.getId()).stream().map(vol -> vol.getState() == Volume.State.Ready ? vol.getPath() : null).filter(Objects::nonNull))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcwMTc4Ng=="}, "originalCommit": {"oid": "55f084dee293d0899ee0f145d3ccf57acc05e69e"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTA0NDM5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODowNDo0NFrOHqQOmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMTo1NTo0M1rOHqYY4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2ODEyMg==", "bodyText": "@slavkap move this condition check (ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType() before getting volume locators.\nand use CollectionUtils for volumeLocators\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if ((ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) || (volumeLocators == null || volumeLocators.size() == 0)) {\n          \n          \n            \n                        if (CollectionUtils.isEmpty(volumeLocators)) {", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r514068122", "createdAt": "2020-10-29T08:04:44Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1954,21 +1955,16 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n     }\n \n     @Override\n-    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType, List<String> volumeLocators, int timeout) {\n+    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType,  int timeout) {\n         List<HostVO> neighbors = _resourceMgr.listHostsInClusterByStatus(clusterId, Status.Up);\n         StoragePoolVO storagePool = _storagePoolDao.findPoolByUUID(poolUuid);\n-        for (HostVO neighbor : neighbors) {\n-            // apply filters:\n-            // - managed storage\n-            // - local storage\n-            if (storagePool.isManaged() || storagePool.isLocal()) {\n+        HashMap<String, VolumeStatsEntry> volumeStatsByUuid = new HashMap<>();\n \n-                volumeLocators = getVolumesByHost(neighbor, storagePool);\n-\n-            }\n+        for (HostVO neighbor : neighbors) {\n+            List<String> volumeLocators = getVolumesByHost(neighbor, storagePool);\n \n             // - zone wide storage for specific hypervisortypes\n-            if (ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) {\n+            if ((ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) || (volumeLocators == null || volumeLocators.size() == 0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fa9f6374cab948217392eec9bbfaecde05ff573"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEwMDc1MA==", "bodyText": "Thanks @sureshanaparti ! I'll do the change suggestion, but may I ask is it appropriate if I push this PR in earlier version of CS for example 4.13.2.0?", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r514100750", "createdAt": "2020-10-29T09:02:20Z", "author": {"login": "slavkap"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1954,21 +1955,16 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n     }\n \n     @Override\n-    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType, List<String> volumeLocators, int timeout) {\n+    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType,  int timeout) {\n         List<HostVO> neighbors = _resourceMgr.listHostsInClusterByStatus(clusterId, Status.Up);\n         StoragePoolVO storagePool = _storagePoolDao.findPoolByUUID(poolUuid);\n-        for (HostVO neighbor : neighbors) {\n-            // apply filters:\n-            // - managed storage\n-            // - local storage\n-            if (storagePool.isManaged() || storagePool.isLocal()) {\n+        HashMap<String, VolumeStatsEntry> volumeStatsByUuid = new HashMap<>();\n \n-                volumeLocators = getVolumesByHost(neighbor, storagePool);\n-\n-            }\n+        for (HostVO neighbor : neighbors) {\n+            List<String> volumeLocators = getVolumesByHost(neighbor, storagePool);\n \n             // - zone wide storage for specific hypervisortypes\n-            if (ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) {\n+            if ((ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) || (volumeLocators == null || volumeLocators.size() == 0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2ODEyMg=="}, "originalCommit": {"oid": "4fa9f6374cab948217392eec9bbfaecde05ff573"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEwMjU3OA==", "bodyText": "@slavkap yes, we will then merge forward, no problem (except maybe a conflict to resolve)", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r514102578", "createdAt": "2020-10-29T09:05:23Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1954,21 +1955,16 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n     }\n \n     @Override\n-    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType, List<String> volumeLocators, int timeout) {\n+    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType,  int timeout) {\n         List<HostVO> neighbors = _resourceMgr.listHostsInClusterByStatus(clusterId, Status.Up);\n         StoragePoolVO storagePool = _storagePoolDao.findPoolByUUID(poolUuid);\n-        for (HostVO neighbor : neighbors) {\n-            // apply filters:\n-            // - managed storage\n-            // - local storage\n-            if (storagePool.isManaged() || storagePool.isLocal()) {\n+        HashMap<String, VolumeStatsEntry> volumeStatsByUuid = new HashMap<>();\n \n-                volumeLocators = getVolumesByHost(neighbor, storagePool);\n-\n-            }\n+        for (HostVO neighbor : neighbors) {\n+            List<String> volumeLocators = getVolumesByHost(neighbor, storagePool);\n \n             // - zone wide storage for specific hypervisortypes\n-            if (ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) {\n+            if ((ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) || (volumeLocators == null || volumeLocators.size() == 0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2ODEyMg=="}, "originalCommit": {"oid": "4fa9f6374cab948217392eec9bbfaecde05ff573"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEwNTQ2Nw==", "bodyText": "Thanks @DaanHoogland! I'll fix the conflicts and will push it against 4.13.2.0", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r514105467", "createdAt": "2020-10-29T09:10:16Z", "author": {"login": "slavkap"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1954,21 +1955,16 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n     }\n \n     @Override\n-    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType, List<String> volumeLocators, int timeout) {\n+    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType,  int timeout) {\n         List<HostVO> neighbors = _resourceMgr.listHostsInClusterByStatus(clusterId, Status.Up);\n         StoragePoolVO storagePool = _storagePoolDao.findPoolByUUID(poolUuid);\n-        for (HostVO neighbor : neighbors) {\n-            // apply filters:\n-            // - managed storage\n-            // - local storage\n-            if (storagePool.isManaged() || storagePool.isLocal()) {\n+        HashMap<String, VolumeStatsEntry> volumeStatsByUuid = new HashMap<>();\n \n-                volumeLocators = getVolumesByHost(neighbor, storagePool);\n-\n-            }\n+        for (HostVO neighbor : neighbors) {\n+            List<String> volumeLocators = getVolumesByHost(neighbor, storagePool);\n \n             // - zone wide storage for specific hypervisortypes\n-            if (ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) {\n+            if ((ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) || (volumeLocators == null || volumeLocators.size() == 0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2ODEyMg=="}, "originalCommit": {"oid": "4fa9f6374cab948217392eec9bbfaecde05ff573"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE2ODA5MQ==", "bodyText": "may I ask for advice, because I'm not sure how to proceed? I've never changed the branch of a PR, so what is the right action - to edit this PR branch or to checkout to a branch which is on top of 4.13, to cherry-pick the changes (resolve conflicts) and to create new pull request?", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r514168091", "createdAt": "2020-10-29T10:52:34Z", "author": {"login": "slavkap"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1954,21 +1955,16 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n     }\n \n     @Override\n-    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType, List<String> volumeLocators, int timeout) {\n+    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType,  int timeout) {\n         List<HostVO> neighbors = _resourceMgr.listHostsInClusterByStatus(clusterId, Status.Up);\n         StoragePoolVO storagePool = _storagePoolDao.findPoolByUUID(poolUuid);\n-        for (HostVO neighbor : neighbors) {\n-            // apply filters:\n-            // - managed storage\n-            // - local storage\n-            if (storagePool.isManaged() || storagePool.isLocal()) {\n+        HashMap<String, VolumeStatsEntry> volumeStatsByUuid = new HashMap<>();\n \n-                volumeLocators = getVolumesByHost(neighbor, storagePool);\n-\n-            }\n+        for (HostVO neighbor : neighbors) {\n+            List<String> volumeLocators = getVolumesByHost(neighbor, storagePool);\n \n             // - zone wide storage for specific hypervisortypes\n-            if (ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) {\n+            if ((ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) || (volumeLocators == null || volumeLocators.size() == 0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2ODEyMg=="}, "originalCommit": {"oid": "4fa9f6374cab948217392eec9bbfaecde05ff573"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE5NzIxOQ==", "bodyText": "you can try and rebase the range of your commit on top of 4.13, or you can cherrypinck. when done you should force push and you can then change the base branch.", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r514197219", "createdAt": "2020-10-29T11:47:02Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1954,21 +1955,16 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n     }\n \n     @Override\n-    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType, List<String> volumeLocators, int timeout) {\n+    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType,  int timeout) {\n         List<HostVO> neighbors = _resourceMgr.listHostsInClusterByStatus(clusterId, Status.Up);\n         StoragePoolVO storagePool = _storagePoolDao.findPoolByUUID(poolUuid);\n-        for (HostVO neighbor : neighbors) {\n-            // apply filters:\n-            // - managed storage\n-            // - local storage\n-            if (storagePool.isManaged() || storagePool.isLocal()) {\n+        HashMap<String, VolumeStatsEntry> volumeStatsByUuid = new HashMap<>();\n \n-                volumeLocators = getVolumesByHost(neighbor, storagePool);\n-\n-            }\n+        for (HostVO neighbor : neighbors) {\n+            List<String> volumeLocators = getVolumesByHost(neighbor, storagePool);\n \n             // - zone wide storage for specific hypervisortypes\n-            if (ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) {\n+            if ((ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) || (volumeLocators == null || volumeLocators.size() == 0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2ODEyMg=="}, "originalCommit": {"oid": "4fa9f6374cab948217392eec9bbfaecde05ff573"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIwMTgyNw==", "bodyText": "thanks again @DaanHoogland !", "url": "https://github.com/apache/cloudstack/pull/4388#discussion_r514201827", "createdAt": "2020-10-29T11:55:43Z", "author": {"login": "slavkap"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1954,21 +1955,16 @@ private boolean upgradeRunningVirtualMachine(Long vmId, Long newServiceOfferingI\n     }\n \n     @Override\n-    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType, List<String> volumeLocators, int timeout) {\n+    public HashMap<String, VolumeStatsEntry> getVolumeStatistics(long clusterId, String poolUuid, StoragePoolType poolType,  int timeout) {\n         List<HostVO> neighbors = _resourceMgr.listHostsInClusterByStatus(clusterId, Status.Up);\n         StoragePoolVO storagePool = _storagePoolDao.findPoolByUUID(poolUuid);\n-        for (HostVO neighbor : neighbors) {\n-            // apply filters:\n-            // - managed storage\n-            // - local storage\n-            if (storagePool.isManaged() || storagePool.isLocal()) {\n+        HashMap<String, VolumeStatsEntry> volumeStatsByUuid = new HashMap<>();\n \n-                volumeLocators = getVolumesByHost(neighbor, storagePool);\n-\n-            }\n+        for (HostVO neighbor : neighbors) {\n+            List<String> volumeLocators = getVolumesByHost(neighbor, storagePool);\n \n             // - zone wide storage for specific hypervisortypes\n-            if (ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) {\n+            if ((ScopeType.ZONE.equals(storagePool.getScope()) && storagePool.getHypervisor() != neighbor.getHypervisorType()) || (volumeLocators == null || volumeLocators.size() == 0)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2ODEyMg=="}, "originalCommit": {"oid": "4fa9f6374cab948217392eec9bbfaecde05ff573"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4063, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}