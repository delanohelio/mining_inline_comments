{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4Nzg4NDkz", "number": 4304, "title": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)", "bodyText": "Description\n\nStorage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)\n\nAdded support for PowerFlex/ScaleIO (v3.5 onwards) storage pool as a primary storage in CloudStack (for KVM hypervisor) and enabled VM/Volume operations on that pool (using pool tag).\n\nPlease find more details in the FS here:\nhttps://cwiki.apache.org/confluence/x/cDl4CQ\nDocumentation PR: apache/cloudstack-documentation#169\nPrimate UI: apache/cloudstack-primate#863\n\n\n\n\n\nTypes of changes\n\n\n Breaking change (fix or feature that would cause existing functionality to change)\n New feature (non-breaking change which adds functionality)\n Bug fix (non-breaking change which fixes an issue)\n Enhancement (improves an existing feature and functionality)\n Cleanup (Code refactoring and cleanup, that may add test cases)\n\nScreenshots (if appropriate):\nHow Has This Been Tested?\n\n\n\nManual tests:\n\nDeploy VM, with qcow2/raw images (with data disk)\nStop / Start / Restart / Reinstall / Destroy VM(s)\nAttach / Detach / Resize / Destroy disk(s)\nCreate/Revert/Delete volume snapshots (on primary storage)\nCreate / Delete VM Snapshots (for Running & Stopped VMs)\nRevert VM Snapshots (Stopped VMs)\nCreate template from Volume / Snapshot in ScaleIO pool and Deploy VM using that template\nMigrate VM (with PowerFlex volumes) within/across Clusters\nMigrate Volume (Volume Tree or V-Tree, along with snapshots) to other PowerFlex pool on the same PowerFlex/ScaleIO cluster\nMigrate Volume (with no snapshots) to other PowerFlex pool on different PowerFlex/ScaleIO cluster\n\nMarvin tests:\n=== TestName: test_01_create_vm_with_volume | Status : SUCCESS ===\n=== TestName: test_02_attach_new_volume_to_stopped_vm | Status : SUCCESS ===\n=== TestName: test_03_attach_detach_attach_volume_to_vm | Status : SUCCESS ===\n=== TestName: test_04_detach_vol_stopped_vm_start | Status : SUCCESS ===\n=== TestName: test_05_attach_volume_to_stopped_vm | Status : SUCCESS ===\n=== TestName: test_06_attached_volume_reboot_vm | Status : SUCCESS ===\n=== TestName: test_07_detach_volume_reboot_vm | Status : SUCCESS ===\n=== TestName: test_08_delete_volume_was_attached | Status : SUCCESS ===\n=== TestName: test_09_migrate_volume_to_same_instance_pool | Status : SUCCESS ===\n=== TestName: test_10_migrate_volume_to_distinct_instance_pool | Status : SUCCESS ===", "createdAt": "2020-09-03T17:47:30Z", "url": "https://github.com/apache/cloudstack/pull/4304", "merged": true, "mergeCommit": {"oid": "eba186aa40f16911c019bf06cd33d7d0cbbc303b"}, "closed": true, "closedAt": "2021-02-24T09:28:34Z", "author": {"login": "sureshanaparti"}, "timelineItems": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHJpOogBqjM3NDUxMzkyMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd87ab_AFqTU4NzQxNjAzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abbca5e923b6d3f6585121222388232f2b5a9257", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/abbca5e923b6d3f6585121222388232f2b5a9257", "committedDate": "2020-09-03T17:41:04Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}, "afterCommit": {"oid": "4e77f6870c194c7beee396e877686a7a082e4ec3", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/4e77f6870c194c7beee396e877686a7a082e4ec3", "committedDate": "2020-09-09T10:28:07Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e77f6870c194c7beee396e877686a7a082e4ec3", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/4e77f6870c194c7beee396e877686a7a082e4ec3", "committedDate": "2020-09-09T10:28:07Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}, "afterCommit": {"oid": "aa3b9bcb3d0f91dd055df4c5149aaf53e1a2b1aa", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/aa3b9bcb3d0f91dd055df4c5149aaf53e1a2b1aa", "committedDate": "2020-10-15T23:58:58Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa3b9bcb3d0f91dd055df4c5149aaf53e1a2b1aa", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/aa3b9bcb3d0f91dd055df4c5149aaf53e1a2b1aa", "committedDate": "2020-10-15T23:58:58Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}, "afterCommit": {"oid": "0129ddeb153ce57c08c54d409e2ee7cafc9a4008", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/0129ddeb153ce57c08c54d409e2ee7cafc9a4008", "committedDate": "2020-10-16T04:15:42Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0129ddeb153ce57c08c54d409e2ee7cafc9a4008", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/0129ddeb153ce57c08c54d409e2ee7cafc9a4008", "committedDate": "2020-10-16T04:15:42Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}, "afterCommit": {"oid": "02e5647f2e63ccc6b360502ada224d695b26c1af", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/02e5647f2e63ccc6b360502ada224d695b26c1af", "committedDate": "2020-10-19T20:40:55Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02e5647f2e63ccc6b360502ada224d695b26c1af", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/02e5647f2e63ccc6b360502ada224d695b26c1af", "committedDate": "2020-10-19T20:40:55Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}, "afterCommit": {"oid": "3b061e8054d8256ec8fdc606057ded982de21804", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/3b061e8054d8256ec8fdc606057ded982de21804", "committedDate": "2020-10-29T12:06:40Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b061e8054d8256ec8fdc606057ded982de21804", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/3b061e8054d8256ec8fdc606057ded982de21804", "committedDate": "2020-10-29T12:06:40Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}, "afterCommit": {"oid": "ad50a8de67a6737579bdd9f249ed010d15820229", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/ad50a8de67a6737579bdd9f249ed010d15820229", "committedDate": "2020-11-02T18:43:14Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad50a8de67a6737579bdd9f249ed010d15820229", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/ad50a8de67a6737579bdd9f249ed010d15820229", "committedDate": "2020-11-02T18:43:14Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}, "afterCommit": {"oid": "0185a0f3f4464e741e21f16f46fc7f951250e8a1", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/0185a0f3f4464e741e21f16f46fc7f951250e8a1", "committedDate": "2020-11-03T10:39:01Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTgyMTMw", "url": "https://github.com/apache/cloudstack/pull/4304#pullrequestreview-526982130", "createdAt": "2020-11-10T08:56:44Z", "commit": {"oid": "0185a0f3f4464e741e21f16f46fc7f951250e8a1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MDkyMzUy", "url": "https://github.com/apache/cloudstack/pull/4304#pullrequestreview-528092352", "createdAt": "2020-11-11T11:33:43Z", "commit": {"oid": "0185a0f3f4464e741e21f16f46fc7f951250e8a1"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMTozMzo0M1rOHxJYdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzozOTozOVrOHxNiYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5NTk5MQ==", "bodyText": "will be good to add a since tag here\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Parameter(name = ApiConstants.DETAILS, type = CommandType.MAP, description = \"details to specify disk offering parameters\")\n          \n          \n            \n                @Parameter(name = ApiConstants.DETAILS, type = CommandType.MAP, description = \"details to specify disk offering parameters\", since=\"4.16)", "url": "https://github.com/apache/cloudstack/pull/4304#discussion_r521295991", "createdAt": "2020-11-11T11:33:43Z", "author": {"login": "shwstppr"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/admin/offering/CreateDiskOfferingCmd.java", "diffHunk": "@@ -152,6 +156,9 @@\n             since = \"4.14\")\n     private String cacheMode;\n \n+    @Parameter(name = ApiConstants.DETAILS, type = CommandType.MAP, description = \"details to specify disk offering parameters\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0185a0f3f4464e741e21f16f46fc7f951250e8a1"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5Njc4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Param(description = \"the pool type of the virtual machine\")\n          \n          \n            \n                @Param(description = \"the pool type of the virtual machine\", since=\"4.16)", "url": "https://github.com/apache/cloudstack/pull/4304#discussion_r521296782", "createdAt": "2020-11-11T11:35:17Z", "author": {"login": "shwstppr"}, "path": "api/src/main/java/org/apache/cloudstack/api/response/UserVmResponse.java", "diffHunk": "@@ -310,6 +310,10 @@\n     @Param(description = \"Guest vm Boot Type\")\n     private String bootType;\n \n+    @SerializedName(ApiConstants.POOL_TYPE)\n+    @Param(description = \"the pool type of the virtual machine\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0185a0f3f4464e741e21f16f46fc7f951250e8a1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMxMjU2NQ==", "bodyText": "@sureshanaparti this config is changed from global scope to zone. Will that affect the existing setup in any way?", "url": "https://github.com/apache/cloudstack/pull/4304#discussion_r521312565", "createdAt": "2020-11-11T12:06:48Z", "author": {"login": "shwstppr"}, "path": "engine/api/src/main/java/com/cloud/vm/VirtualMachineManager.java", "diffHunk": "@@ -59,7 +59,13 @@\n             \"The default label name for the config drive\", false);\n \n     ConfigKey<Boolean> VmConfigDriveOnPrimaryPool = new ConfigKey<>(\"Advanced\", Boolean.class, \"vm.configdrive.primarypool.enabled\", \"false\",\n-            \"If config drive need to be created and hosted on primary storage pool. Currently only supported for KVM.\", true);\n+            \"If config drive need to be created and hosted on primary storage pool. Currently only supported for KVM.\", true, ConfigKey.Scope.Zone);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0185a0f3f4464e741e21f16f46fc7f951250e8a1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2MDA5NQ==", "bodyText": "Curious, why we need to catch all Exception here? And we are not even logging it then", "url": "https://github.com/apache/cloudstack/pull/4304#discussion_r521360095", "createdAt": "2020-11-11T13:32:59Z", "author": {"login": "shwstppr"}, "path": "engine/orchestration/src/main/java/org/apache/cloudstack/engine/orchestration/VolumeOrchestrator.java", "diffHunk": "@@ -1465,11 +1543,17 @@ public void prepareForMigration(VirtualMachineProfile vm, DeployDestination dest\n                     long hostId = vm.getVirtualMachine().getHostId();\n                     Host host = _hostDao.findById(hostId);\n \n-                    volService.grantAccess(volFactory.getVolume(newVol.getId()), host, destPool);\n+                    try {\n+                        volService.grantAccess(volFactory.getVolume(newVol.getId()), host, destPool);\n+                    } catch (Exception e) {\n+                        throw new StorageAccessException(\"Unable to grant access to volume: \" + newVol.getId() + \" on host: \" + host.getId());\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0185a0f3f4464e741e21f16f46fc7f951250e8a1"}, "originalPosition": 199}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2MTU5Mg==", "bodyText": "Is this message in-line with the fact that we support PowerFlex only for KVM right now?", "url": "https://github.com/apache/cloudstack/pull/4304#discussion_r521361592", "createdAt": "2020-11-11T13:35:31Z", "author": {"login": "shwstppr"}, "path": "engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/StorageSystemDataMotionStrategy.java", "diffHunk": "@@ -574,6 +574,14 @@ private void handleVolumeMigrationFromManagedStorageToNonManagedStorage(VolumeIn\n         }\n     }\n \n+    private void verifyFormatWithPoolType(ImageFormat imageFormat, StoragePoolType poolType) {\n+        if (imageFormat != ImageFormat.VHD && imageFormat != ImageFormat.OVA && imageFormat != ImageFormat.QCOW2 &&\n+                !(imageFormat == ImageFormat.RAW && StoragePoolType.PowerFlex == poolType)) {\n+            throw new CloudRuntimeException(\"Only the following image types are currently supported: \" +\n+                    ImageFormat.VHD.toString() + \", \" + ImageFormat.OVA.toString() + \", \" + ImageFormat.QCOW2.toString() + \", and \" + ImageFormat.RAW.toString() + \"(for PowerFlex)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0185a0f3f4464e741e21f16f46fc7f951250e8a1"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2Mjk1Mg==", "bodyText": "We listed couple of more image formats with powerflex support", "url": "https://github.com/apache/cloudstack/pull/4304#discussion_r521362952", "createdAt": "2020-11-11T13:37:49Z", "author": {"login": "shwstppr"}, "path": "engine/storage/datamotion/src/main/java/org/apache/cloudstack/storage/motion/StorageSystemDataMotionStrategy.java", "diffHunk": "@@ -2301,7 +2325,9 @@ private void handleCreateTemplateFromManagedVolume(VolumeInfo volumeInfo, Templa\n         CopyCmdAnswer copyCmdAnswer = null;\n \n         try {\n-            if (!ImageFormat.QCOW2.equals(volumeInfo.getFormat())) {\n+            StoragePoolVO storagePoolVO = _storagePoolDao.findById(volumeInfo.getPoolId());\n+\n+            if (!ImageFormat.QCOW2.equals(volumeInfo.getFormat()) && !(ImageFormat.RAW.equals(volumeInfo.getFormat()) && StoragePoolType.PowerFlex == storagePoolVO.getPoolType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0185a0f3f4464e741e21f16f46fc7f951250e8a1"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2NDA2NQ==", "bodyText": "@sureshanaparti do we need a Primate change for this or is it already handled there?", "url": "https://github.com/apache/cloudstack/pull/4304#discussion_r521364065", "createdAt": "2020-11-11T13:39:39Z", "author": {"login": "shwstppr"}, "path": "ui/scripts/instances.js", "diffHunk": "@@ -4189,6 +4189,10 @@\n                 allowedActions.push(\"storageSnapshot\");\n             }\n \n+            if (jsonObj.hypervisor == 'KVM' && jsonObj.pooltype == 'PowerFlex') {\n+                allowedActions.push(\"snapshot\");\n+            }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0185a0f3f4464e741e21f16f46fc7f951250e8a1"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMjQ3NDE4", "url": "https://github.com/apache/cloudstack/pull/4304#pullrequestreview-532247418", "createdAt": "2020-11-17T11:00:03Z", "commit": {"oid": "0185a0f3f4464e741e21f16f46fc7f951250e8a1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0185a0f3f4464e741e21f16f46fc7f951250e8a1", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/0185a0f3f4464e741e21f16f46fc7f951250e8a1", "committedDate": "2020-11-03T10:39:01Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)"}, "afterCommit": {"oid": "62c918d1121d22ba5bb6310180c1b7a146ef7120", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/62c918d1121d22ba5bb6310180c1b7a146ef7120", "committedDate": "2020-11-23T07:24:37Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)\n\nThis enables support for PowerFlex/ScaleIO (v3.5 onwards) storage pool as a primary storage in CloudStack\n\nOther improvements addressed in addition to PowerFlex/ScaleIO support:\n\n- Added support for config drives in host cache for KVM\n\t=> Changed configuration \"vm.configdrive.primarypool.enabled\" scope from Global to Zone level\n\t=> Introduced new zone level configuration \"vm.configdrive.force.host.cache.use\" (default: false) to force host cache for config drives\n\t=> Introduced new zone level configuration \"vm.configdrive.use.host.cache.on.unsupported.pool\" (default: true) to use host cache for config drives when storage pool doesn't support config drive\n\t=> Added new parameter \"host.cache.location\" (default: /var/cache/cloud) in KVM agent.properties for specifying the host cache path and create config drives on the \"/config\" directory on the host cache path\n\t=> Maintain the config drive location and use it when required on any config drive operation (migrate, delete)\n\n- Detect virtual size from the template URL while registering direct download qcow2 (of KVM hypervisor) templates\n\n- Updated full deployment destination for preparing the network(s) on VM start\n\n- Propagate the direct download certificates uploaded to the newly added KVM hosts\n\n- Discover the template size for direct download templates using any available host from the zones specified on template registration\n\t=> When zones are not specified while registering template, template size discovery is performed using any available host, which is picked up randomly from one of the available zones\n\n- Release the VM resources when VM is sync-ed to Stopped state on PowerReportMissing (after graceful period)\n\n- Retry VM deployment/start when the host cannot grant access to volume/template\n\n- Mark never-used or downloaded templates as Destroyed on deletion, without sending any DeleteCommand\n\t=> Do not trigger any DeleteCommand for never-used or downloaded templates as these doesn't exist and cannot be deleted from the datastore\n\n- Check the router filesystem is writable or not, before performing health checks\n\t=> Introduce a new test \"filesystem.writable.test\" to check the filesystem is writable or not\n\t=> The router health checks keeps the config info at \"/var/cache/cloud\" and updates the monitor results at \"/root\" for health checks, both are different partitions. So, test at both the locations.\n\t=> Added new script: \"filesystem_writable_check.py\" at /opt/cloud/bin/ to check the filesystem is writable or not\n\n- Fixed NPE issue, template is null for DATA disks. Copy template to target storage for ROOT disk (with template id), skip DATA disk(s)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "62c918d1121d22ba5bb6310180c1b7a146ef7120", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/62c918d1121d22ba5bb6310180c1b7a146ef7120", "committedDate": "2020-11-23T07:24:37Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)\n\nThis enables support for PowerFlex/ScaleIO (v3.5 onwards) storage pool as a primary storage in CloudStack\n\nOther improvements addressed in addition to PowerFlex/ScaleIO support:\n\n- Added support for config drives in host cache for KVM\n\t=> Changed configuration \"vm.configdrive.primarypool.enabled\" scope from Global to Zone level\n\t=> Introduced new zone level configuration \"vm.configdrive.force.host.cache.use\" (default: false) to force host cache for config drives\n\t=> Introduced new zone level configuration \"vm.configdrive.use.host.cache.on.unsupported.pool\" (default: true) to use host cache for config drives when storage pool doesn't support config drive\n\t=> Added new parameter \"host.cache.location\" (default: /var/cache/cloud) in KVM agent.properties for specifying the host cache path and create config drives on the \"/config\" directory on the host cache path\n\t=> Maintain the config drive location and use it when required on any config drive operation (migrate, delete)\n\n- Detect virtual size from the template URL while registering direct download qcow2 (of KVM hypervisor) templates\n\n- Updated full deployment destination for preparing the network(s) on VM start\n\n- Propagate the direct download certificates uploaded to the newly added KVM hosts\n\n- Discover the template size for direct download templates using any available host from the zones specified on template registration\n\t=> When zones are not specified while registering template, template size discovery is performed using any available host, which is picked up randomly from one of the available zones\n\n- Release the VM resources when VM is sync-ed to Stopped state on PowerReportMissing (after graceful period)\n\n- Retry VM deployment/start when the host cannot grant access to volume/template\n\n- Mark never-used or downloaded templates as Destroyed on deletion, without sending any DeleteCommand\n\t=> Do not trigger any DeleteCommand for never-used or downloaded templates as these doesn't exist and cannot be deleted from the datastore\n\n- Check the router filesystem is writable or not, before performing health checks\n\t=> Introduce a new test \"filesystem.writable.test\" to check the filesystem is writable or not\n\t=> The router health checks keeps the config info at \"/var/cache/cloud\" and updates the monitor results at \"/root\" for health checks, both are different partitions. So, test at both the locations.\n\t=> Added new script: \"filesystem_writable_check.py\" at /opt/cloud/bin/ to check the filesystem is writable or not\n\n- Fixed NPE issue, template is null for DATA disks. Copy template to target storage for ROOT disk (with template id), skip DATA disk(s)"}, "afterCommit": {"oid": "0628aaf9d63d6dbf1c90f35552e10d8a77f7befa", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/0628aaf9d63d6dbf1c90f35552e10d8a77f7befa", "committedDate": "2020-12-15T16:24:35Z", "message": "Addressed some issues for few operations on PowerFlex storage pool.\n\n- Updated migration volume operation to sync the status and wait for migration to complete.\n\n- Updated VM Snapshot naming, for uniqueness in ScaleIO volume name when more than one volume exists in the VM.\n\n- Added sync lock while spooling managed storage template before volume creation from the template (non-direct download).\n\n- Updated resize volume error message string.\n\n- Blocked the below operations on PowerFlex storage pool:\n  -> Extract Volume\n  -> Create Snapshot for VMSnapshot"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0628aaf9d63d6dbf1c90f35552e10d8a77f7befa", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/0628aaf9d63d6dbf1c90f35552e10d8a77f7befa", "committedDate": "2020-12-15T16:24:35Z", "message": "Addressed some issues for few operations on PowerFlex storage pool.\n\n- Updated migration volume operation to sync the status and wait for migration to complete.\n\n- Updated VM Snapshot naming, for uniqueness in ScaleIO volume name when more than one volume exists in the VM.\n\n- Added sync lock while spooling managed storage template before volume creation from the template (non-direct download).\n\n- Updated resize volume error message string.\n\n- Blocked the below operations on PowerFlex storage pool:\n  -> Extract Volume\n  -> Create Snapshot for VMSnapshot"}, "afterCommit": {"oid": "dbaa2e70e342ad6a7c45edfef6715cc7029055d5", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/dbaa2e70e342ad6a7c45edfef6715cc7029055d5", "committedDate": "2021-01-12T13:06:14Z", "message": "Added the PowerFlex/ScaleIO client connection pool to manage the ScaleIO gateway clients, which uses a single gateway client per Powerflex/ScaleIO storage pool and renews it when the session token expires.\n\n- The token is valid for 8 hours from the time it was created, unless there has been no activity for 10 minutes.\n  Reference: https://cpsdocs.dellemc.com/bundle/PF_REST_API_RG/page/GUID-92430F19-9F44-42B6-B898-87D5307AE59B.html\n\nOther fixes included:\n\n- Fail the VM deployment when the host specified in the deployVirtualMachine cmd is not in the right state (i.e. either Resource State is not Enabled or Status is not Up)\n\n- Use the physical file size of the template to check the free space availability on the host, while downloading the direct download templates.\n\n- Perform basic tests (for connectivity and file system) on router before updating the health check config data\n\t=> Validate the basic tests (connectivity and file system check) on router\n\t=> Cleanup the health check results when router is destroyed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c7b84a9b7b9460877a03ed617c3acade4dc991a", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/1c7b84a9b7b9460877a03ed617c3acade4dc991a", "committedDate": "2021-01-12T13:37:40Z", "message": "Updated PowerFlex/ScaleIO storage plugin version to 4.16.0.0"}, "afterCommit": {"oid": "a7e1e9e2ddd8b419924f696a6614a5ec39f7280e", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/a7e1e9e2ddd8b419924f696a6614a5ec39f7280e", "committedDate": "2021-01-25T12:15:19Z", "message": "Added support for PowerFlex/ScaleIO volume migration across different PowerFlex storage instances.\n\n- findStoragePoolsForMigration API returns PowerFlex pool(s) of different instance as suitable pool(s), for volume(s) on PowerFlex storage pool.\n- Volume(s) with snapshots are not allowed to migrate to different PowerFlex instance.\n- Volume(s) of running VM are not allowed to migrate to other PowerFlex storage pools.\n- Volume migration from PowerFlex pool to Non-PowerFlex pool, and vice versa are not supported."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a7e1e9e2ddd8b419924f696a6614a5ec39f7280e", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/a7e1e9e2ddd8b419924f696a6614a5ec39f7280e", "committedDate": "2021-01-25T12:15:19Z", "message": "Added support for PowerFlex/ScaleIO volume migration across different PowerFlex storage instances.\n\n- findStoragePoolsForMigration API returns PowerFlex pool(s) of different instance as suitable pool(s), for volume(s) on PowerFlex storage pool.\n- Volume(s) with snapshots are not allowed to migrate to different PowerFlex instance.\n- Volume(s) of running VM are not allowed to migrate to other PowerFlex storage pools.\n- Volume migration from PowerFlex pool to Non-PowerFlex pool, and vice versa are not supported."}, "afterCommit": {"oid": "76986b71a7740a4b3a1d31190eb9896b5ea195e3", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/76986b71a7740a4b3a1d31190eb9896b5ea195e3", "committedDate": "2021-02-01T07:15:14Z", "message": "Added support for PowerFlex/ScaleIO volume migration across different PowerFlex storage instances.\n\n- findStoragePoolsForMigration API returns PowerFlex pool(s) of different instance as suitable pool(s), for volume(s) on PowerFlex storage pool.\n- Volume(s) with snapshots are not allowed to migrate to different PowerFlex instance.\n- Volume(s) of running VM are not allowed to migrate to other PowerFlex storage pools.\n- Volume migration from PowerFlex pool to Non-PowerFlex pool, and vice versa are not supported."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "76986b71a7740a4b3a1d31190eb9896b5ea195e3", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/76986b71a7740a4b3a1d31190eb9896b5ea195e3", "committedDate": "2021-02-01T07:15:14Z", "message": "Added support for PowerFlex/ScaleIO volume migration across different PowerFlex storage instances.\n\n- findStoragePoolsForMigration API returns PowerFlex pool(s) of different instance as suitable pool(s), for volume(s) on PowerFlex storage pool.\n- Volume(s) with snapshots are not allowed to migrate to different PowerFlex instance.\n- Volume(s) of running VM are not allowed to migrate to other PowerFlex storage pools.\n- Volume migration from PowerFlex pool to Non-PowerFlex pool, and vice versa are not supported."}, "afterCommit": {"oid": "a0a793dea03ea61cd7ea8d38e06c22aef1d63aaa", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/a0a793dea03ea61cd7ea8d38e06c22aef1d63aaa", "committedDate": "2021-02-02T05:39:52Z", "message": "Added support for PowerFlex/ScaleIO volume migration across different PowerFlex storage instances.\n\n- findStoragePoolsForMigration API returns PowerFlex pool(s) of different instance as suitable pool(s), for volume(s) on PowerFlex storage pool.\n- Volume(s) with snapshots are not allowed to migrate to different PowerFlex instance.\n- Volume(s) of running VM are not allowed to migrate to other PowerFlex storage pools.\n- Volume migration from PowerFlex pool to Non-PowerFlex pool, and vice versa are not supported."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0a793dea03ea61cd7ea8d38e06c22aef1d63aaa", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/a0a793dea03ea61cd7ea8d38e06c22aef1d63aaa", "committedDate": "2021-02-02T05:39:52Z", "message": "Added support for PowerFlex/ScaleIO volume migration across different PowerFlex storage instances.\n\n- findStoragePoolsForMigration API returns PowerFlex pool(s) of different instance as suitable pool(s), for volume(s) on PowerFlex storage pool.\n- Volume(s) with snapshots are not allowed to migrate to different PowerFlex instance.\n- Volume(s) of running VM are not allowed to migrate to other PowerFlex storage pools.\n- Volume migration from PowerFlex pool to Non-PowerFlex pool, and vice versa are not supported."}, "afterCommit": {"oid": "2d05a143207843103f4384bc9e497c19b58eae58", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/2d05a143207843103f4384bc9e497c19b58eae58", "committedDate": "2021-02-02T13:11:11Z", "message": "Added support for PowerFlex/ScaleIO volume migration across different PowerFlex storage instances.\n\n- findStoragePoolsForMigration API returns PowerFlex pool(s) of different instance as suitable pool(s), for volume(s) on PowerFlex storage pool.\n- Volume(s) with snapshots are not allowed to migrate to different PowerFlex instance.\n- Volume(s) of running VM are not allowed to migrate to other PowerFlex storage pools.\n- Volume migration from PowerFlex pool to Non-PowerFlex pool, and vice versa are not supported."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgyNTU0NDM3", "url": "https://github.com/apache/cloudstack/pull/4304#pullrequestreview-582554437", "createdAt": "2021-02-03T16:28:42Z", "commit": {"oid": "2d05a143207843103f4384bc9e497c19b58eae58"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzMTQ3NDI3", "url": "https://github.com/apache/cloudstack/pull/4304#pullrequestreview-583147427", "createdAt": "2021-02-04T08:39:35Z", "commit": {"oid": "2d05a143207843103f4384bc9e497c19b58eae58"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "84c160fb5d2fefd13c4f635adb58c90fb432b36f", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/84c160fb5d2fefd13c4f635adb58c90fb432b36f", "committedDate": "2021-02-04T09:40:11Z", "message": "Fixed service offering test"}, "afterCommit": {"oid": "455b0b6e034334afa5996c05e7cf109dbf311e74", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/455b0b6e034334afa5996c05e7cf109dbf311e74", "committedDate": "2021-02-05T08:46:50Z", "message": "Fixed change service offering smoke tests in test_service_offerings.py, test_vm_snapshots.py"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "463245959c3e8add443f517f18dbd8745446de16", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/463245959c3e8add443f517f18dbd8745446de16", "committedDate": "2021-02-08T06:26:43Z", "message": "Added new response parameter \u201csupportsStorageSnapshot\u201d (true/false) to volume response, and Updated UI to hide the async backup option while taking snapshot for volume(s) with storage snapshot support."}, "afterCommit": {"oid": "24a0261c8cc909d4a0a517b0cfebaf106fb35830", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/24a0261c8cc909d4a0a517b0cfebaf106fb35830", "committedDate": "2021-02-10T04:37:42Z", "message": "Added new response parameter \u201csupportsStorageSnapshot\u201d (true/false) to volume response, and Updated UI to hide the async backup option while taking snapshot for volume(s) with storage snapshot support."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "24a0261c8cc909d4a0a517b0cfebaf106fb35830", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/24a0261c8cc909d4a0a517b0cfebaf106fb35830", "committedDate": "2021-02-10T04:37:42Z", "message": "Added new response parameter \u201csupportsStorageSnapshot\u201d (true/false) to volume response, and Updated UI to hide the async backup option while taking snapshot for volume(s) with storage snapshot support."}, "afterCommit": {"oid": "bc4bce2737ee97e91c5e0fc478e85c6cbe925e3b", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/bc4bce2737ee97e91c5e0fc478e85c6cbe925e3b", "committedDate": "2021-02-12T12:44:54Z", "message": "Fix to remove the duplicate zone wide pools listed while finding storage pools for migration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5OTU3OTE1", "url": "https://github.com/apache/cloudstack/pull/4304#pullrequestreview-589957915", "createdAt": "2021-02-13T10:01:47Z", "commit": {"oid": "bc4bce2737ee97e91c5e0fc478e85c6cbe925e3b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xM1QxMDowMTo0N1rOIk-xiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xM1QxMDowMTo0N1rOIk-xiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTY0ODEzOQ==", "bodyText": "Hi @sureshanaparti, may I suggest here to get the VMSnapshotStrategy instead of checking which is the storage pool type? If it's an instance of DefaultVMSnapshotStrategy to get into the statement. In this case, the other storage plugins could implement their own VM snapshot strategy, without checking here which is the storage pool type. I saw that Solidfire's API has a group snapshot (maybe and others have it). We at StorPool also have this functionality (but for now we have a workaround for this). I guess someday it will be easier for the plugins to adopt this functionality", "url": "https://github.com/apache/cloudstack/pull/4304#discussion_r575648139", "createdAt": "2021-02-13T10:01:47Z", "author": {"login": "slavkap"}, "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "diffHunk": "@@ -358,9 +363,33 @@ public VMSnapshot allocVMSnapshot(Long vmId, String vsDisplayName, String vsDesc\n             throw new InvalidParameterValueException(\"Can not snapshot memory when VM is not in Running state\");\n         }\n \n+        List<VolumeVO> rootVolumes = _volumeDao.findReadyRootVolumesByInstance(userVmVo.getId());\n+        if (rootVolumes == null || rootVolumes.isEmpty()) {\n+            throw new CloudRuntimeException(\"Unable to find root volume for the user vm:\" + userVmVo.getUuid());\n+        }\n+\n+        VolumeVO rootVolume = rootVolumes.get(0);\n+        StoragePoolVO rootVolumePool = _storagePoolDao.findById(rootVolume.getPoolId());\n+        if (rootVolumePool == null) {\n+            throw new CloudRuntimeException(\"Unable to find root volume storage pool for the user vm:\" + userVmVo.getUuid());\n+        }\n+\n         // for KVM, only allow snapshot with memory when VM is in running state\n-        if (userVmVo.getHypervisorType() == HypervisorType.KVM && userVmVo.getState() == State.Running && !snapshotMemory) {\n-            throw new InvalidParameterValueException(\"KVM VM does not allow to take a disk-only snapshot when VM is in running state\");\n+        if (userVmVo.getHypervisorType() == HypervisorType.KVM) {\n+            if (rootVolumePool.getPoolType() != Storage.StoragePoolType.PowerFlex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc4bce2737ee97e91c5e0fc478e85c6cbe925e3b"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5OTczNTkw", "url": "https://github.com/apache/cloudstack/pull/4304#pullrequestreview-589973590", "createdAt": "2021-02-13T15:09:48Z", "commit": {"oid": "bc4bce2737ee97e91c5e0fc478e85c6cbe925e3b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xM1QxNTowOTo0OFrOIlAieg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xM1QxNTowOTo0OFrOIlAieg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTY3NzA1MA==", "bodyText": "If you consider using VMSnapshotStrategy, this check won't be needed because you're checking in ScaleIOVMSnapshotStrategy.canHandle() that all volumes are on PowerFlex. Also, this PR #3724 (if it gets in someday) will handle snapshots of the volumes with different storage pool types", "url": "https://github.com/apache/cloudstack/pull/4304#discussion_r575677050", "createdAt": "2021-02-13T15:09:48Z", "author": {"login": "slavkap"}, "path": "server/src/main/java/com/cloud/vm/snapshot/VMSnapshotManagerImpl.java", "diffHunk": "@@ -358,9 +363,33 @@ public VMSnapshot allocVMSnapshot(Long vmId, String vsDisplayName, String vsDesc\n             throw new InvalidParameterValueException(\"Can not snapshot memory when VM is not in Running state\");\n         }\n \n+        List<VolumeVO> rootVolumes = _volumeDao.findReadyRootVolumesByInstance(userVmVo.getId());\n+        if (rootVolumes == null || rootVolumes.isEmpty()) {\n+            throw new CloudRuntimeException(\"Unable to find root volume for the user vm:\" + userVmVo.getUuid());\n+        }\n+\n+        VolumeVO rootVolume = rootVolumes.get(0);\n+        StoragePoolVO rootVolumePool = _storagePoolDao.findById(rootVolume.getPoolId());\n+        if (rootVolumePool == null) {\n+            throw new CloudRuntimeException(\"Unable to find root volume storage pool for the user vm:\" + userVmVo.getUuid());\n+        }\n+\n         // for KVM, only allow snapshot with memory when VM is in running state\n-        if (userVmVo.getHypervisorType() == HypervisorType.KVM && userVmVo.getState() == State.Running && !snapshotMemory) {\n-            throw new InvalidParameterValueException(\"KVM VM does not allow to take a disk-only snapshot when VM is in running state\");\n+        if (userVmVo.getHypervisorType() == HypervisorType.KVM) {\n+            if (rootVolumePool.getPoolType() != Storage.StoragePoolType.PowerFlex) {\n+                if (userVmVo.getState() == State.Running && !snapshotMemory) {\n+                    throw new InvalidParameterValueException(\"KVM VM does not allow to take a disk-only snapshot when VM is in running state\");\n+                }\n+            } else {\n+                if (snapshotMemory) {\n+                    throw new InvalidParameterValueException(\"Can not snapshot memory for PowerFlex storage pool\");\n+                }\n+\n+                // All volumes should be on the same PowerFlex storage pool for VM Snapshot\n+                if (!isVolumesOfUserVmOnSameStoragePool(userVmVo.getId(), rootVolumePool.getId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc4bce2737ee97e91c5e0fc478e85c6cbe925e3b"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11c81b09a49d45136c342accc28c50ca279ce5a5", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/11c81b09a49d45136c342accc28c50ca279ce5a5", "committedDate": "2021-02-18T16:02:51Z", "message": "Storage plugin for Dell EMC PowerFlex/ScaleIO (formerly VxFlexOS)\n\nThis enables support for PowerFlex/ScaleIO (v3.5 onwards) storage pool as a primary storage in CloudStack\n\nOther improvements addressed in addition to PowerFlex/ScaleIO support:\n\n- Added support for config drives in host cache for KVM\n\t=> Changed configuration \"vm.configdrive.primarypool.enabled\" scope from Global to Zone level\n\t=> Introduced new zone level configuration \"vm.configdrive.force.host.cache.use\" (default: false) to force host cache for config drives\n\t=> Introduced new zone level configuration \"vm.configdrive.use.host.cache.on.unsupported.pool\" (default: true) to use host cache for config drives when storage pool doesn't support config drive\n\t=> Added new parameter \"host.cache.location\" (default: /var/cache/cloud) in KVM agent.properties for specifying the host cache path and create config drives on the \"/config\" directory on the host cache path\n\t=> Maintain the config drive location and use it when required on any config drive operation (migrate, delete)\n\n- Detect virtual size from the template URL while registering direct download qcow2 (of KVM hypervisor) templates\n\n- Updated full deployment destination for preparing the network(s) on VM start\n\n- Propagate the direct download certificates uploaded to the newly added KVM hosts\n\n- Discover the template size for direct download templates using any available host from the zones specified on template registration\n\t=> When zones are not specified while registering template, template size discovery is performed using any available host, which is picked up randomly from one of the available zones\n\n- Release the VM resources when VM is sync-ed to Stopped state on PowerReportMissing (after graceful period)\n\n- Retry VM deployment/start when the host cannot grant access to volume/template\n\n- Mark never-used or downloaded templates as Destroyed on deletion, without sending any DeleteCommand\n\t=> Do not trigger any DeleteCommand for never-used or downloaded templates as these doesn't exist and cannot be deleted from the datastore\n\n- Check the router filesystem is writable or not, before performing health checks\n\t=> Introduce a new test \"filesystem.writable.test\" to check the filesystem is writable or not\n\t=> The router health checks keeps the config info at \"/var/cache/cloud\" and updates the monitor results at \"/root\" for health checks, both are different partitions. So, test at both the locations.\n\t=> Added new script: \"filesystem_writable_check.py\" at /opt/cloud/bin/ to check the filesystem is writable or not\n\n- Fixed NPE issue, template is null for DATA disks. Copy template to target storage for ROOT disk (with template id), skip DATA disk(s)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6085c064c1f6dbf5f5d828fc2d5ca166ed2e2a9e", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/6085c064c1f6dbf5f5d828fc2d5ca166ed2e2a9e", "committedDate": "2021-02-18T16:02:51Z", "message": "Addressed some issues for few operations on PowerFlex storage pool.\n\n- Updated migration volume operation to sync the status and wait for migration to complete.\n\n- Updated VM Snapshot naming, for uniqueness in ScaleIO volume name when more than one volume exists in the VM.\n\n- Added sync lock while spooling managed storage template before volume creation from the template (non-direct download).\n\n- Updated resize volume error message string.\n\n- Blocked the below operations on PowerFlex storage pool:\n  -> Extract Volume\n  -> Create Snapshot for VMSnapshot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cce9623e7f352f018a351eef1c744ac753709ef", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/5cce9623e7f352f018a351eef1c744ac753709ef", "committedDate": "2021-02-18T16:07:15Z", "message": "Added the PowerFlex/ScaleIO client connection pool to manage the ScaleIO gateway clients, which uses a single gateway client per Powerflex/ScaleIO storage pool and renews it when the session token expires.\n\n- The token is valid for 8 hours from the time it was created, unless there has been no activity for 10 minutes.\n  Reference: https://cpsdocs.dellemc.com/bundle/PF_REST_API_RG/page/GUID-92430F19-9F44-42B6-B898-87D5307AE59B.html\n\nOther fixes included:\n\n- Fail the VM deployment when the host specified in the deployVirtualMachine cmd is not in the right state (i.e. either Resource State is not Enabled or Status is not Up)\n\n- Use the physical file size of the template to check the free space availability on the host, while downloading the direct download templates.\n\n- Perform basic tests (for connectivity and file system) on router before updating the health check config data\n\t=> Validate the basic tests (connectivity and file system check) on router\n\t=> Cleanup the health check results when router is destroyed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2de8944bc31f907c85527b5bfbec3616cf1f67cf", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/2de8944bc31f907c85527b5bfbec3616cf1f67cf", "committedDate": "2021-02-18T16:07:15Z", "message": "Updated PowerFlex/ScaleIO storage plugin version to 4.16.0.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a7c3db72fa49fd3b78a65581452dd9062639c85", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/3a7c3db72fa49fd3b78a65581452dd9062639c85", "committedDate": "2021-02-18T16:07:15Z", "message": "UI Changes to support storage plugin for PowerFlex/ScaleIO storage pool.\n- PowerFlex pool URL generated from the UI inputs(Gateway, Username, Password, Storage Pool) when adding \"PowerFlex\" Primary Storage\n- Updated protocol to \"custom\" for PowerFlex provider\n- Allow VM Snapshot for stopped VM on KVM hypervisor and PowerFlex/ScaleIO storage pool\n\nand Minor improvements in PowerFlex/ScaleIO storage plugin code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71252ea387914d3d917ba72f30fb0ad25e0d38f1", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/71252ea387914d3d917ba72f30fb0ad25e0d38f1", "committedDate": "2021-02-18T16:07:16Z", "message": "Added support for PowerFlex/ScaleIO volume migration across different PowerFlex storage instances.\n\n- findStoragePoolsForMigration API returns PowerFlex pool(s) of different instance as suitable pool(s), for volume(s) on PowerFlex storage pool.\n- Volume(s) with snapshots are not allowed to migrate to different PowerFlex instance.\n- Volume(s) of running VM are not allowed to migrate to other PowerFlex storage pools.\n- Volume migration from PowerFlex pool to Non-PowerFlex pool, and vice versa are not supported."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "602a708662f2ab50aa633cbd122df5098d491eba", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/602a708662f2ab50aa633cbd122df5098d491eba", "committedDate": "2021-02-18T16:07:16Z", "message": "Fixed change service offering smoke tests in test_service_offerings.py, test_vm_snapshots.py"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e92647210268c21ec2f1769816da28505f718f4", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/9e92647210268c21ec2f1769816da28505f718f4", "committedDate": "2021-02-18T16:07:16Z", "message": "Added the PowerFlex/ScaleIO volume/snapshot name to the paths of respective CloudStack resources (Templates, Volumes, Snapshots and VM Snapshots)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c16a1f97e499def2c50ba63aaaad3b867d8fbc2", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/1c16a1f97e499def2c50ba63aaaad3b867d8fbc2", "committedDate": "2021-02-18T16:07:16Z", "message": "Added new response parameter \u201csupportsStorageSnapshot\u201d (true/false) to volume response, and Updated UI to hide the async backup option while taking snapshot for volume(s) with storage snapshot support."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea6f7f1f4affa5419fbb57a2e084656e83fa74bc", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/ea6f7f1f4affa5419fbb57a2e084656e83fa74bc", "committedDate": "2021-02-18T16:07:16Z", "message": "Fix to remove the duplicate zone wide pools listed while finding storage pools for migration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc91003e987b3c9a89db99792f54758608ac44c3", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/dc91003e987b3c9a89db99792f54758608ac44c3", "committedDate": "2021-02-18T16:07:16Z", "message": "Updated PowerFlex/ScaleIO volume migration checks and rollback migration on failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "010dfeef1bfd6f26e58724d998833f7657b29e6e", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/010dfeef1bfd6f26e58724d998833f7657b29e6e", "committedDate": "2021-02-18T16:07:16Z", "message": "Fixed the PowerFlex/ScaleIO volume name inconsistency issue in the volume path after migration, due to rename failure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c23d5b74614123de99c0f53bb2eb78cec9c1b21f", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/c23d5b74614123de99c0f53bb2eb78cec9c1b21f", "committedDate": "2021-02-18T13:09:25Z", "message": "Fixed the PowerFlex/ScaleIO volume name inconsistency issue in the volume path after migration, due to rename failure"}, "afterCommit": {"oid": "010dfeef1bfd6f26e58724d998833f7657b29e6e", "author": {"user": {"login": "sureshanaparti", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/010dfeef1bfd6f26e58724d998833f7657b29e6e", "committedDate": "2021-02-18T16:07:16Z", "message": "Fixed the PowerFlex/ScaleIO volume name inconsistency issue in the volume path after migration, due to rename failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3NDE2MDM3", "url": "https://github.com/apache/cloudstack/pull/4304#pullrequestreview-587416037", "createdAt": "2021-02-10T09:40:35Z", "commit": {"oid": "24a0261c8cc909d4a0a517b0cfebaf106fb35830"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4110, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}