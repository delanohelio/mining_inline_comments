{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNjgyNTcz", "number": 4555, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNjoxNToxN1rOFICZzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNTo1OToyMlrOFINZmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTcyMzAxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/cloudstack/api/command/user/template/GetUploadParamsForTemplateCmd.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNjoxNToxN1rOIJvquw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMjoyNjoxMVrOIJ5cHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4OTA4Mw==", "bodyText": "Should we simply ignore for VMware, even if ostypeid is provided?", "url": "https://github.com/apache/cloudstack/pull/4555#discussion_r547089083", "createdAt": "2020-12-22T06:15:17Z", "author": {"login": "rhtyd"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/user/template/GetUploadParamsForTemplateCmd.java", "diffHunk": "@@ -168,6 +170,12 @@ private void validateRequest() {\n         if (getZoneId() <= 0) {\n             throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"invalid zoneid\");\n         }\n+        if (!hypervisor.equalsIgnoreCase(Hypervisor.HypervisorType.VMware.toString()) && osTypeId == null) {\n+            throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"Missing parameter ostypeid\");\n+        }\n+        if (hypervisor.equalsIgnoreCase(Hypervisor.HypervisorType.VMware.toString()) && osTypeId != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a0ad02e6acdf62c64f6fb1cccaa559d23b50c43"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4OTUwMQ==", "bodyText": "... read the code down below, looks like we want the ostypeid to be null so we can get  it from getDefaultDeployAsIsGuestOsId", "url": "https://github.com/apache/cloudstack/pull/4555#discussion_r547089501", "createdAt": "2020-12-22T06:16:40Z", "author": {"login": "rhtyd"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/user/template/GetUploadParamsForTemplateCmd.java", "diffHunk": "@@ -168,6 +170,12 @@ private void validateRequest() {\n         if (getZoneId() <= 0) {\n             throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"invalid zoneid\");\n         }\n+        if (!hypervisor.equalsIgnoreCase(Hypervisor.HypervisorType.VMware.toString()) && osTypeId == null) {\n+            throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"Missing parameter ostypeid\");\n+        }\n+        if (hypervisor.equalsIgnoreCase(Hypervisor.HypervisorType.VMware.toString()) && osTypeId != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4OTA4Mw=="}, "originalCommit": {"oid": "9a0ad02e6acdf62c64f6fb1cccaa559d23b50c43"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIxNjEwNA==", "bodyText": "should we really refuse the parameter as opposed to just ignore it? being this strict may crash operator scripts unnecessarily.", "url": "https://github.com/apache/cloudstack/pull/4555#discussion_r547216104", "createdAt": "2020-12-22T11:09:04Z", "author": {"login": "DaanHoogland"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/user/template/GetUploadParamsForTemplateCmd.java", "diffHunk": "@@ -168,6 +170,12 @@ private void validateRequest() {\n         if (getZoneId() <= 0) {\n             throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"invalid zoneid\");\n         }\n+        if (!hypervisor.equalsIgnoreCase(Hypervisor.HypervisorType.VMware.toString()) && osTypeId == null) {\n+            throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"Missing parameter ostypeid\");\n+        }\n+        if (hypervisor.equalsIgnoreCase(Hypervisor.HypervisorType.VMware.toString()) && osTypeId != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4OTA4Mw=="}, "originalCommit": {"oid": "9a0ad02e6acdf62c64f6fb1cccaa559d23b50c43"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIxNjgzOQ==", "bodyText": "guess I'm late too the party. see ^^", "url": "https://github.com/apache/cloudstack/pull/4555#discussion_r547216839", "createdAt": "2020-12-22T11:10:43Z", "author": {"login": "DaanHoogland"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/user/template/GetUploadParamsForTemplateCmd.java", "diffHunk": "@@ -168,6 +170,12 @@ private void validateRequest() {\n         if (getZoneId() <= 0) {\n             throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"invalid zoneid\");\n         }\n+        if (!hypervisor.equalsIgnoreCase(Hypervisor.HypervisorType.VMware.toString()) && osTypeId == null) {\n+            throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"Missing parameter ostypeid\");\n+        }\n+        if (hypervisor.equalsIgnoreCase(Hypervisor.HypervisorType.VMware.toString()) && osTypeId != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4OTA4Mw=="}, "originalCommit": {"oid": "9a0ad02e6acdf62c64f6fb1cccaa559d23b50c43"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI0OTE4MA==", "bodyText": "This change is in line with the changes we have done with the registerTemplate API. We are informing the user in case they provide the 'ostypeid' parameter that it is not used anymore and failing", "url": "https://github.com/apache/cloudstack/pull/4555#discussion_r547249180", "createdAt": "2020-12-22T12:26:11Z", "author": {"login": "nvazquez"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/user/template/GetUploadParamsForTemplateCmd.java", "diffHunk": "@@ -168,6 +170,12 @@ private void validateRequest() {\n         if (getZoneId() <= 0) {\n             throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"invalid zoneid\");\n         }\n+        if (!hypervisor.equalsIgnoreCase(Hypervisor.HypervisorType.VMware.toString()) && osTypeId == null) {\n+            throw new ServerApiException(ApiErrorCode.PARAM_ERROR, \"Missing parameter ostypeid\");\n+        }\n+        if (hypervisor.equalsIgnoreCase(Hypervisor.HypervisorType.VMware.toString()) && osTypeId != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA4OTA4Mw=="}, "originalCommit": {"oid": "9a0ad02e6acdf62c64f6fb1cccaa559d23b50c43"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MTUyNDc1OnYy", "diffSide": "RIGHT", "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/image/deployasis/DeployAsIsHelperImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNTo1OToyMlrOIKAIow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNTo1OToyMlrOIKAIow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM1ODg4Mw==", "bodyText": "very significant review comment:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Roll back actions in case of unexpected erros\n          \n          \n            \n                 * Roll back actions in case of unexpected errors", "url": "https://github.com/apache/cloudstack/pull/4555#discussion_r547358883", "createdAt": "2020-12-22T15:59:22Z", "author": {"login": "DaanHoogland"}, "path": "engine/storage/src/main/java/org/apache/cloudstack/storage/image/deployasis/DeployAsIsHelperImpl.java", "diffHunk": "@@ -175,14 +168,27 @@ private void handleGuestOsFromOVFDescriptor(long templateId, String guestOsType,\n \n         if (CollectionUtils.isNotEmpty(guestOsMappings)) {\n             GuestOSHypervisorVO mapping = guestOsMappings.get(0);\n-            long guestOsId = mapping.getGuestOsId();\n-            LOGGER.info(\"Updating deploy-as-is template guest OS to \" + guestOsType);\n-            updateTemplateGuestOsId(template, guestOsId);\n+            return mapping.getGuestOsId();\n         } else {\n             throw new CloudRuntimeException(\"Did not find a guest OS with type \" + guestOsType);\n         }\n     }\n \n+    /**\n+     * Handle the guest OS read from the OVF and try to match it to an existing guest OS in DB.\n+     * If the guest OS cannot be mapped to an existing guest OS in DB, then create it and create support for hypervisor versions.\n+     * Roll back actions in case of unexpected erros", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c747c9b985010b45543ba6c1f05727eb4c9f0e73"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4046, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}