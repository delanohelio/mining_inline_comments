{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NzQxMjE4", "number": 3794, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTo0Mjo1OFrODbiuhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMjo0NzozMVrODcFetA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMjA3MTExOnYy", "diffSide": "RIGHT", "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTo0Mjo1OFrOFjFhVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTo0Mjo1OFrOFjFhVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzNDkzNQ==", "bodyText": "can you make this a method with a good descriptive name?", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r372334935", "createdAt": "2020-01-29T11:42:58Z", "author": {"login": "DaanHoogland"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -513,12 +513,18 @@ public static void hostAddedToCluster(long hostId, long clusterId, String storag\n     // creating a new VAG won't exceed 4 VAGs for the computer cluster).\n     // If none of the hosts in the cluster are in a VAG, then leave this host out of a VAG.\n     // Place applicable volume IDs in VAG, if need be (account of volume starts with SF_CS_ACCOUNT_PREFIX).\n-    private static void handleVagForHost(SolidFireUtil.SolidFireConnection sfConnection, List<SolidFireUtil.SolidFireVag> sfVags, Host host, HostDao hostDao) {\n+    private static void handleVagForHost(SolidFireUtil.SolidFireConnection sfConnection, List<SolidFireUtil.SolidFireVag> sfVags, Host host, HostDao hostDao, ClusterDao clusterDao) {\n         List<HostVO> hostVOs = hostDao.findByClusterId(host.getClusterId());\n \n         if (hostVOs != null) {\n             int numVags = 0;\n \n+            String clusterUuId = clusterDao.findById(host.getClusterId()).getUuid();\n+            SolidFireVag sfVagMatchingClusterId = sfVags.stream().filter(vag -> vag.getName().equals(\"CloudStack-\"+clusterUuId)).findFirst().orElse(null);\n+            if (sfVagMatchingClusterId != null && sfVagMatchingClusterId.getInitiators().length < MAX_NUM_INITIATORS_PER_VAG) {\n+                addInitiatorsToSolidFireVag(sfConnection, sfVagMatchingClusterId.getId(), new String[]{host.getStorageUrl()});\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d0ce73047b8fb9c18ddf1b97d147cfdd4ce982"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMjA3NDk4OnYy", "diffSide": "RIGHT", "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTo0NDoxOFrOFjFjqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTo0NDoxOFrOFjFjqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzNTUzMQ==", "bodyText": "\"Create cluster VAG if doesnt exist\", would make for a nice method name ;) CreateClusterVAGIfDoesntExist(); ;)", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r372335531", "createdAt": "2020-01-29T11:44:18Z", "author": {"login": "DaanHoogland"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -692,39 +699,63 @@ public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnect\n             throw new CloudRuntimeException(errMsg);\n         }\n \n+        // Get list of VAGs from solidfire\n         List<SolidFireUtil.SolidFireVag> sfVags = SolidFireUtil.getAllVags(sfConnection);\n \n-        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = new HashMap<>();\n+        // Populate vag to iqn(host) map\n+        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = buildVagtoIQNMap(hosts, sfVags);\n \n-        for (HostVO hostVO : hosts) {\n-            String iqn = hostVO.getStorageUrl();\n+        // throw exception if more than 4 VAGs\n+        if (sfVagToIqnsMap.size() > MAX_NUM_VAGS_PER_VOLUME) {\n+            throw new CloudRuntimeException(\"A SolidFire volume can be in at most four volume access groups simultaneously.\");\n+        }\n \n-            SolidFireUtil.SolidFireVag sfVag = getVolumeAccessGroup(iqn, sfVags);\n+        if (sfVagToIqnsMap.containsKey(null)) {\n \n-            List<String> iqnsInVag = sfVagToIqnsMap.computeIfAbsent(sfVag, k -> new ArrayList<>());\n+            //Check if cluster VAG exists\n+            SolidFireVag sfVagMatchingClusterId = sfVags.stream().filter(vag -> vag.getName().equals(\"CloudStack-\"+clusterUuId)).findFirst().orElse(null);\n \n-            iqnsInVag.add(iqn);\n-        }\n+            if (sfVagMatchingClusterId == null) {\n+                // Create cluster VAG if doesnt exist\n+                LOGGER.info(\"Creating volume access group CloudStack-\"+clusterUuId);\n+                SolidFireUtil.createVag(sfConnection, \"CloudStack-\"+clusterUuId, sfVagToIqnsMap.get(null).toArray(new String[0]), new long[] { sfVolumeId });\n+                sfVags = SolidFireUtil.getAllVags(sfConnection);\n+                sfVagMatchingClusterId = sfVags.stream().filter(vag -> vag.getName().equals(\"CloudStack-\"+clusterUuId)).findFirst().orElse(null);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d0ce73047b8fb9c18ddf1b97d147cfdd4ce982"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMjA3NzQyOnYy", "diffSide": "RIGHT", "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTo0NToxMVrOFjFlDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTo0NToxMVrOFjFlDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzNTg4Nw==", "bodyText": "This comment is a good reason to factor the next bit code out for cleanup.", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r372335887", "createdAt": "2020-01-29T11:45:11Z", "author": {"login": "DaanHoogland"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -692,39 +699,63 @@ public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnect\n             throw new CloudRuntimeException(errMsg);\n         }\n \n+        // Get list of VAGs from solidfire\n         List<SolidFireUtil.SolidFireVag> sfVags = SolidFireUtil.getAllVags(sfConnection);\n \n-        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = new HashMap<>();\n+        // Populate vag to iqn(host) map\n+        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = buildVagtoIQNMap(hosts, sfVags);\n \n-        for (HostVO hostVO : hosts) {\n-            String iqn = hostVO.getStorageUrl();\n+        // throw exception if more than 4 VAGs\n+        if (sfVagToIqnsMap.size() > MAX_NUM_VAGS_PER_VOLUME) {\n+            throw new CloudRuntimeException(\"A SolidFire volume can be in at most four volume access groups simultaneously.\");\n+        }\n \n-            SolidFireUtil.SolidFireVag sfVag = getVolumeAccessGroup(iqn, sfVags);\n+        if (sfVagToIqnsMap.containsKey(null)) {\n \n-            List<String> iqnsInVag = sfVagToIqnsMap.computeIfAbsent(sfVag, k -> new ArrayList<>());\n+            //Check if cluster VAG exists\n+            SolidFireVag sfVagMatchingClusterId = sfVags.stream().filter(vag -> vag.getName().equals(\"CloudStack-\"+clusterUuId)).findFirst().orElse(null);\n \n-            iqnsInVag.add(iqn);\n-        }\n+            if (sfVagMatchingClusterId == null) {\n+                // Create cluster VAG if doesnt exist\n+                LOGGER.info(\"Creating volume access group CloudStack-\"+clusterUuId);\n+                SolidFireUtil.createVag(sfConnection, \"CloudStack-\"+clusterUuId, sfVagToIqnsMap.get(null).toArray(new String[0]), new long[] { sfVolumeId });\n+                sfVags = SolidFireUtil.getAllVags(sfConnection);\n+                sfVagMatchingClusterId = sfVags.stream().filter(vag -> vag.getName().equals(\"CloudStack-\"+clusterUuId)).findFirst().orElse(null);\n+            }\n \n-        if (sfVagToIqnsMap.size() > MAX_NUM_VAGS_PER_VOLUME) {\n-            throw new CloudRuntimeException(\"A SolidFire volume can be in at most four volume access groups simultaneously.\");\n+            //update null entry in vag to IQN Map\n+            sfVagToIqnsMap.put(sfVagMatchingClusterId,sfVagToIqnsMap.get(null));\n+            sfVagToIqnsMap.remove(null);\n         }\n \n+\n+        // add volumeId to each VAG if not already present", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d0ce73047b8fb9c18ddf1b97d147cfdd4ce982"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMjExMTAxOnYy", "diffSide": "RIGHT", "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTo1NzozOVrOFjF5XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTo1NzozOVrOFjF5XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM0MTA4NA==", "bodyText": "great name of method call below makes this comment obsolete", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r372341084", "createdAt": "2020-01-29T11:57:39Z", "author": {"login": "DaanHoogland"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -692,39 +699,63 @@ public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnect\n             throw new CloudRuntimeException(errMsg);\n         }\n \n+        // Get list of VAGs from solidfire\n         List<SolidFireUtil.SolidFireVag> sfVags = SolidFireUtil.getAllVags(sfConnection);\n \n-        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = new HashMap<>();\n+        // Populate vag to iqn(host) map", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d0ce73047b8fb9c18ddf1b97d147cfdd4ce982"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMjEyMzY0OnYy", "diffSide": "RIGHT", "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMjowMjoyMFrOFjGBHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMjowMjoyMFrOFjGBHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM0MzA2OQ==", "bodyText": "in this case the code below is more descriptive than the comment above.", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r372343069", "createdAt": "2020-01-29T12:02:20Z", "author": {"login": "DaanHoogland"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -692,39 +699,63 @@ public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnect\n             throw new CloudRuntimeException(errMsg);\n         }\n \n+        // Get list of VAGs from solidfire\n         List<SolidFireUtil.SolidFireVag> sfVags = SolidFireUtil.getAllVags(sfConnection);\n \n-        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = new HashMap<>();\n+        // Populate vag to iqn(host) map\n+        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = buildVagtoIQNMap(hosts, sfVags);\n \n-        for (HostVO hostVO : hosts) {\n-            String iqn = hostVO.getStorageUrl();\n+        // throw exception if more than 4 VAGs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d0ce73047b8fb9c18ddf1b97d147cfdd4ce982"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzc1ODMzOnYy", "diffSide": "RIGHT", "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMjo0NDoxNVrOFj8aRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMjo0NDoxNVrOFj8aRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIzNDI0NA==", "bodyText": "\"Voulumes\" should be \"Volumes\"", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r373234244", "createdAt": "2020-01-30T22:44:15Z", "author": {"login": "mike-tutkowski"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -683,19 +694,58 @@ private static SolidFireVag getVagForRandomHostInCluster(List<SolidFireUtil.Soli\n         return null;\n     }\n \n-    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts) {\n+    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts, String clusterUuId) {\n         if (!SolidFireUtil.hostsSupport_iScsi(hosts)) {\n             String errMsg = \"Not all hosts in the compute cluster support iSCSI.\";\n \n             LOGGER.warn(errMsg);\n \n             throw new CloudRuntimeException(errMsg);\n         }\n-\n         List<SolidFireUtil.SolidFireVag> sfVags = SolidFireUtil.getAllVags(sfConnection);\n+        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = buildVagToIQNMap(hosts, sfVags);\n+        if (sfVagToIqnsMap.size() > MAX_NUM_VAGS_PER_VOLUME) {\n+            throw new CloudRuntimeException(\"A SolidFire volume can be in at most four volume access groups simultaneously.\");\n+        }\n+        if (sfVagToIqnsMap.containsKey(null)) {\n+            sfVagToIqnsMap = updateNullKeyInsfVagToIqnsMap(sfVagToIqnsMap, sfVags, sfConnection, clusterUuId, sfVolumeId);\n+        }\n+        addVoulumestoVagIfNotPresent(sfVagToIqnsMap.keySet(), sfVolumeId, sfConnection);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f77ea000048071089222313ba23d95813a53b7b"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzc2MDU5OnYy", "diffSide": "RIGHT", "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMjo0NTozMFrOFj8b5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMzozNToyM1rOFlDsnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIzNDY2Mw==", "bodyText": "Do we want to pass in a List still if we can now retrieve that info from the cluster DAO using the cluster UUID?", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r373234663", "createdAt": "2020-01-30T22:45:30Z", "author": {"login": "mike-tutkowski"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -683,19 +694,58 @@ private static SolidFireVag getVagForRandomHostInCluster(List<SolidFireUtil.Soli\n         return null;\n     }\n \n-    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts) {\n+    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts, String clusterUuId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f77ea000048071089222313ba23d95813a53b7b"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE2NDkxOQ==", "bodyText": "we need the list of hosts to build the vag to iqn map, we need the hostDao to get the list of hosts. I think it is better to just pass the list of hosts in this case.", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r374164919", "createdAt": "2020-02-03T15:24:28Z", "author": {"login": "skattoju4"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -683,19 +694,58 @@ private static SolidFireVag getVagForRandomHostInCluster(List<SolidFireUtil.Soli\n         return null;\n     }\n \n-    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts) {\n+    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts, String clusterUuId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIzNDY2Mw=="}, "originalCommit": {"oid": "9f77ea000048071089222313ba23d95813a53b7b"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQwMjIwNA==", "bodyText": "Either way...my initial thoughts were that you could derive the list of hosts from using the cluster ID with the cluster DAO.", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r374402204", "createdAt": "2020-02-03T23:35:23Z", "author": {"login": "mike-tutkowski"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -683,19 +694,58 @@ private static SolidFireVag getVagForRandomHostInCluster(List<SolidFireUtil.Soli\n         return null;\n     }\n \n-    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts) {\n+    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts, String clusterUuId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIzNDY2Mw=="}, "originalCommit": {"oid": "9f77ea000048071089222313ba23d95813a53b7b"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzc2NTAwOnYy", "diffSide": "RIGHT", "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMjo0NzozMVrOFj8ezA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMjo0NzozMVrOFj8ezA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIzNTQwNA==", "bodyText": "Might want to maintain camel case here:\n\"updateNullKeyInsfVagToIqnsMap\" -> \"updateNullKeyInSfVagToIqnsMap\"", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r373235404", "createdAt": "2020-01-30T22:47:31Z", "author": {"login": "mike-tutkowski"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -683,19 +694,58 @@ private static SolidFireVag getVagForRandomHostInCluster(List<SolidFireUtil.Soli\n         return null;\n     }\n \n-    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts) {\n+    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts, String clusterUuId) {\n         if (!SolidFireUtil.hostsSupport_iScsi(hosts)) {\n             String errMsg = \"Not all hosts in the compute cluster support iSCSI.\";\n \n             LOGGER.warn(errMsg);\n \n             throw new CloudRuntimeException(errMsg);\n         }\n-\n         List<SolidFireUtil.SolidFireVag> sfVags = SolidFireUtil.getAllVags(sfConnection);\n+        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = buildVagToIQNMap(hosts, sfVags);\n+        if (sfVagToIqnsMap.size() > MAX_NUM_VAGS_PER_VOLUME) {\n+            throw new CloudRuntimeException(\"A SolidFire volume can be in at most four volume access groups simultaneously.\");\n+        }\n+        if (sfVagToIqnsMap.containsKey(null)) {\n+            sfVagToIqnsMap = updateNullKeyInsfVagToIqnsMap(sfVagToIqnsMap, sfVags, sfConnection, clusterUuId, sfVolumeId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f77ea000048071089222313ba23d95813a53b7b"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3986, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}