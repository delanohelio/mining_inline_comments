{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1Nzg2NTMw", "number": 4442, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDoyMTozM1rOE2BxbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDoyMTozM1rOE2BxbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDg3NTk2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDoyMTozM1rOHuoPTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMjo1NjowMVrOHus_Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1NTgyMQ==", "bodyText": "can you factor 53 out as DNS_PORT?", "url": "https://github.com/apache/cloudstack/pull/4442#discussion_r518655821", "createdAt": "2020-11-06T10:21:33Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java", "diffHunk": "@@ -1598,65 +1602,73 @@ public LoadBalancer createPublicLoadBalancerRule(String xId, String name, String\n         // LoadBalancer result = _elbMgr.handleCreateLoadBalancerRule(lb,\n         // lbOwner, lb.getNetworkId());\n         LoadBalancer result = null;\n-        if (result == null) {\n-            IpAddress systemIp = null;\n-            NetworkOffering off = _entityMgr.findById(NetworkOffering.class, network.getNetworkOfferingId());\n-            if (off.isElasticLb() && ipVO == null && network.getVpcId() == null) {\n-                systemIp = _ipAddrMgr.assignSystemIp(networkId, lbOwner, true, false);\n-                if (systemIp != null) {\n-                    ipVO = _ipAddressDao.findById(systemIp.getId());\n+        IpAddress systemIp = null;\n+        NetworkOffering off = _entityMgr.findById(NetworkOffering.class, network.getNetworkOfferingId());\n+\n+        if (srcPortStart == 53 && ipVO.isSourceNat()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07836a2db4c1dc8e27dbba98b9cc1bfced9a3989"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY2NjY2Mg==", "bodyText": "Sure @DaanHoogland", "url": "https://github.com/apache/cloudstack/pull/4442#discussion_r518666662", "createdAt": "2020-11-06T10:41:17Z", "author": {"login": "Spaceman1984"}, "path": "server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java", "diffHunk": "@@ -1598,65 +1602,73 @@ public LoadBalancer createPublicLoadBalancerRule(String xId, String name, String\n         // LoadBalancer result = _elbMgr.handleCreateLoadBalancerRule(lb,\n         // lbOwner, lb.getNetworkId());\n         LoadBalancer result = null;\n-        if (result == null) {\n-            IpAddress systemIp = null;\n-            NetworkOffering off = _entityMgr.findById(NetworkOffering.class, network.getNetworkOfferingId());\n-            if (off.isElasticLb() && ipVO == null && network.getVpcId() == null) {\n-                systemIp = _ipAddrMgr.assignSystemIp(networkId, lbOwner, true, false);\n-                if (systemIp != null) {\n-                    ipVO = _ipAddressDao.findById(systemIp.getId());\n+        IpAddress systemIp = null;\n+        NetworkOffering off = _entityMgr.findById(NetworkOffering.class, network.getNetworkOfferingId());\n+\n+        if (srcPortStart == 53 && ipVO.isSourceNat()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1NTgyMQ=="}, "originalCommit": {"oid": "07836a2db4c1dc8e27dbba98b9cc1bfced9a3989"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODczMzYzNA==", "bodyText": "Done", "url": "https://github.com/apache/cloudstack/pull/4442#discussion_r518733634", "createdAt": "2020-11-06T12:56:01Z", "author": {"login": "Spaceman1984"}, "path": "server/src/main/java/com/cloud/network/lb/LoadBalancingRulesManagerImpl.java", "diffHunk": "@@ -1598,65 +1602,73 @@ public LoadBalancer createPublicLoadBalancerRule(String xId, String name, String\n         // LoadBalancer result = _elbMgr.handleCreateLoadBalancerRule(lb,\n         // lbOwner, lb.getNetworkId());\n         LoadBalancer result = null;\n-        if (result == null) {\n-            IpAddress systemIp = null;\n-            NetworkOffering off = _entityMgr.findById(NetworkOffering.class, network.getNetworkOfferingId());\n-            if (off.isElasticLb() && ipVO == null && network.getVpcId() == null) {\n-                systemIp = _ipAddrMgr.assignSystemIp(networkId, lbOwner, true, false);\n-                if (systemIp != null) {\n-                    ipVO = _ipAddressDao.findById(systemIp.getId());\n+        IpAddress systemIp = null;\n+        NetworkOffering off = _entityMgr.findById(NetworkOffering.class, network.getNetworkOfferingId());\n+\n+        if (srcPortStart == 53 && ipVO.isSourceNat()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1NTgyMQ=="}, "originalCommit": {"oid": "07836a2db4c1dc8e27dbba98b9cc1bfced9a3989"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4112, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}