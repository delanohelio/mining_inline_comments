{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMzE4NTQ1", "number": 4186, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMDo0NjoyMlrOEJ0w_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMDo0NjoyMlrOEJ0w_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzM3MTQ5OnYy", "diffSide": "RIGHT", "path": "engine/schema/src/main/java/com/cloud/user/dao/AccountDaoImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMDo0NjoyMlrOGqhlaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwODozMzo0NlrOGsC71w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI0MzYyNA==", "bodyText": "Why not use Optional instead of null?", "url": "https://github.com/apache/cloudstack/pull/4186#discussion_r447243624", "createdAt": "2020-06-29T20:46:22Z", "author": {"login": "ravening"}, "path": "engine/schema/src/main/java/com/cloud/user/dao/AccountDaoImpl.java", "diffHunk": "@@ -157,9 +157,16 @@ public AccountDaoImpl() {\n \n     @Override\n     public List<AccountVO> findAccountsLike(String accountName) {\n+        return findAccountsLike(accountName, null);\n+    }\n+\n+    @Override\n+    public List<AccountVO> findAccountsLike(String accountName, Filter filter) {\n         SearchCriteria<AccountVO> sc = createSearchCriteria();\n-        sc.addAnd(\"accountName\", SearchCriteria.Op.LIKE, \"%\" + accountName + \"%\");\n-        return listBy(sc);\n+        if (accountName != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f4ce6caaf88ac6d4e5be6442404e085100b884"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ0NDQ0MA==", "bodyText": "Doesn't it inherently do the same thing ?", "url": "https://github.com/apache/cloudstack/pull/4186#discussion_r447444440", "createdAt": "2020-06-30T06:39:58Z", "author": {"login": "davidjumani"}, "path": "engine/schema/src/main/java/com/cloud/user/dao/AccountDaoImpl.java", "diffHunk": "@@ -157,9 +157,16 @@ public AccountDaoImpl() {\n \n     @Override\n     public List<AccountVO> findAccountsLike(String accountName) {\n+        return findAccountsLike(accountName, null);\n+    }\n+\n+    @Override\n+    public List<AccountVO> findAccountsLike(String accountName, Filter filter) {\n         SearchCriteria<AccountVO> sc = createSearchCriteria();\n-        sc.addAnd(\"accountName\", SearchCriteria.Op.LIKE, \"%\" + accountName + \"%\");\n-        return listBy(sc);\n+        if (accountName != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI0MzYyNA=="}, "originalCommit": {"oid": "89f4ce6caaf88ac6d4e5be6442404e085100b884"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA5MDMxNA==", "bodyText": "@davidjumani Optional [1] allows avoiding NPEs while gives a way to check if say a String is present, null etc. Your check is okay, but maybe add a Strings.isNullOrEmpty instead to avoid search criteria clause for empty accountName.\n[1] https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html", "url": "https://github.com/apache/cloudstack/pull/4186#discussion_r448090314", "createdAt": "2020-07-01T03:08:25Z", "author": {"login": "rhtyd"}, "path": "engine/schema/src/main/java/com/cloud/user/dao/AccountDaoImpl.java", "diffHunk": "@@ -157,9 +157,16 @@ public AccountDaoImpl() {\n \n     @Override\n     public List<AccountVO> findAccountsLike(String accountName) {\n+        return findAccountsLike(accountName, null);\n+    }\n+\n+    @Override\n+    public List<AccountVO> findAccountsLike(String accountName, Filter filter) {\n         SearchCriteria<AccountVO> sc = createSearchCriteria();\n-        sc.addAnd(\"accountName\", SearchCriteria.Op.LIKE, \"%\" + accountName + \"%\");\n-        return listBy(sc);\n+        if (accountName != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI0MzYyNA=="}, "originalCommit": {"oid": "89f4ce6caaf88ac6d4e5be6442404e085100b884"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgzODYxNQ==", "bodyText": "Doesn't it inherently do the same thing ?\n\nIt inherently does the same thing but using optionals is preferred over checking explicitly for null", "url": "https://github.com/apache/cloudstack/pull/4186#discussion_r448838615", "createdAt": "2020-07-02T08:33:46Z", "author": {"login": "ravening"}, "path": "engine/schema/src/main/java/com/cloud/user/dao/AccountDaoImpl.java", "diffHunk": "@@ -157,9 +157,16 @@ public AccountDaoImpl() {\n \n     @Override\n     public List<AccountVO> findAccountsLike(String accountName) {\n+        return findAccountsLike(accountName, null);\n+    }\n+\n+    @Override\n+    public List<AccountVO> findAccountsLike(String accountName, Filter filter) {\n         SearchCriteria<AccountVO> sc = createSearchCriteria();\n-        sc.addAnd(\"accountName\", SearchCriteria.Op.LIKE, \"%\" + accountName + \"%\");\n-        return listBy(sc);\n+        if (accountName != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI0MzYyNA=="}, "originalCommit": {"oid": "89f4ce6caaf88ac6d4e5be6442404e085100b884"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3727, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}