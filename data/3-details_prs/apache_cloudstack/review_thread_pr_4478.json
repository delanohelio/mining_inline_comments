{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMDc5OTE1", "number": 4478, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzoxMTo1MVrOE6zivQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzoxMTo1MVrOE6zivQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDk3MzQxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/api/query/dao/HostJoinDaoImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzoxMTo1MVrOH2GEYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNjowOToyMFrOH2OEQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NDU3OQ==", "bodyText": "Will this cause regression?", "url": "https://github.com/apache/cloudstack/pull/4478#discussion_r526484579", "createdAt": "2020-11-18T23:11:51Z", "author": {"login": "rhtyd"}, "path": "server/src/main/java/com/cloud/api/query/dao/HostJoinDaoImpl.java", "diffHunk": "@@ -321,7 +321,7 @@ public HostForMigrationResponse newHostForMigrationResponse(HostJoinVO host, Enu\n                 hostResponse.setMemoryTotal(host.getTotalMemory());\n                 Float memWithOverprovisioning = host.getTotalMemory() * ApiDBUtils.getMemOverprovisioningFactor(host.getClusterId());\n                 hostResponse.setMemWithOverprovisioning(decimalFormat.format(memWithOverprovisioning));\n-                hostResponse.setMemoryAllocated(decimalFormat.format((float) mem / memWithOverprovisioning * 100.0f) +\"%\");\n+                hostResponse.setMemoryAllocated(mem);\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c938d99c5a55076c4deb1329616baae6a8c9e3b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYxNTYxNw==", "bodyText": "It will but we can introduce two new fields memoryallocaedpercentage & cpuallocaedpercentage to compensate.\nThis will ensure that the response for both HostResponse and HostForMigrationResponse will be the same. Sounds good @rhtyd ?", "url": "https://github.com/apache/cloudstack/pull/4478#discussion_r526615617", "createdAt": "2020-11-19T06:09:20Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/api/query/dao/HostJoinDaoImpl.java", "diffHunk": "@@ -321,7 +321,7 @@ public HostForMigrationResponse newHostForMigrationResponse(HostJoinVO host, Enu\n                 hostResponse.setMemoryTotal(host.getTotalMemory());\n                 Float memWithOverprovisioning = host.getTotalMemory() * ApiDBUtils.getMemOverprovisioningFactor(host.getClusterId());\n                 hostResponse.setMemWithOverprovisioning(decimalFormat.format(memWithOverprovisioning));\n-                hostResponse.setMemoryAllocated(decimalFormat.format((float) mem / memWithOverprovisioning * 100.0f) +\"%\");\n+                hostResponse.setMemoryAllocated(mem);\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NDU3OQ=="}, "originalCommit": {"oid": "1c938d99c5a55076c4deb1329616baae6a8c9e3b"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4135, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}