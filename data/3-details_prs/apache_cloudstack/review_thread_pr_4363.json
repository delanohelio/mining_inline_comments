{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1ODY1MjQw", "number": 4363, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOTowMzoyN1rOEsvwbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNDozNjowOFrOEs3KAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzU1MjQ2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOTowMzoyN1rOHgKARg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOTowMzoyN1rOHgKARg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ4MDM5MA==", "bodyText": "@ravening what do you think of extracting lines 1308 - 1318 to a method? With that, it would be possible to cover these cases with JUnit test methods?", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503480390", "createdAt": "2020-10-12T19:03:27Z", "author": {"login": "GabrielBrascher"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDc1MDU3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNDoyNzo0NVrOHgU9mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo1Mjo1N1rOHnaAww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ==", "bodyText": "@ravening consider the value in zone, as the config scope is specified as Zone.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n          \n          \n            \n                    if (SET_HOST_DOWN_TO_MAINTENANCE.valueIn(host.getDataCenterId()) && (host.getStatus() == Status.Down)) {", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503659931", "createdAt": "2020-10-13T04:27:45Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5ODM5NQ==", "bodyText": "@ravening consider the value in zone, as the config scope is specified as Zone.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n          \n          \n            \n            \n          \n          \n            \n                    if (SET_HOST_DOWN_TO_MAINTENANCE.valueIn(host.getDataCenterId()) && (host.getStatus() == Status.Down)) {\n          \n          \n            \n            \n          \n      \n    \n    \n  \n\n\n@sureshanaparti i don't think we need that because the host can exist only in one zone at any time but I can change the setting to zone scope instead of global scope", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503698395", "createdAt": "2020-10-13T06:34:57Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ=="}, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcxMDg2Nw==", "bodyText": "@ravening Currently, the config scope is Zone, do you want to mark that as Global scope?", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503710867", "createdAt": "2020-10-13T07:01:33Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ=="}, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzczNzMyMQ==", "bodyText": "@sureshanaparti I dont think I need to make changes here as config is at zone level..setting in one zone doesnt mess up setting in other zones", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503737321", "createdAt": "2020-10-13T07:47:50Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ=="}, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgwNDMzMQ==", "bodyText": "@ravening May be some confusion here. My point is, use the config value specified at the scope defined in the config parameter, else update the config scope accordingly.\nThe config \"SET_HOST_DOWN_TO_MAINTENANCE\" defined above uses Zone Scope. So, In order to pick the Zone specific value of that config, you have to use \"valueIn()\", not value() (this picks the global config value). If your use case is to set the config at Cloud level, then change Scope to Global.", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503804331", "createdAt": "2020-10-13T09:28:46Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ=="}, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4MjY5MQ==", "bodyText": "This observation makes sense. Can you please take a look at org.apache.cloudstack.framework.config.ConfigKey.valueIn() @ravening?", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r511082691", "createdAt": "2020-10-23T18:52:57Z", "author": {"login": "GabrielBrascher"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ=="}, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDc2NDgyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNDozNjowOFrOHgVFnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNzoxMzoyM1rOHgYa7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2MTk4Mw==", "bodyText": "@ravening can also consider state \"ResourceState.ErrorInPrepareForMaintenance\" ?", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503661983", "createdAt": "2020-10-13T04:36:08Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n+            if (host.getResourceState() == ResourceState.Enabled) {\n+                _hostDao.updateResourceState(ResourceState.Enabled, ResourceState.Event.AdminAskMaintenance, ResourceState.PrepareForMaintenance, host);\n+                _hostDao.updateResourceState(ResourceState.PrepareForMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            } else if (host.getResourceState() == ResourceState.ErrorInMaintenance) {\n+                _hostDao.updateResourceState(ResourceState.ErrorInMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5OTAyNg==", "bodyText": "@ravening can also consider state \"ResourceState.ErrorInPrepareForMaintenance\" ?\n\n@sureshanaparti no. This is applicable only for hosts in maintenance state", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503699026", "createdAt": "2020-10-13T06:36:32Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n+            if (host.getResourceState() == ResourceState.Enabled) {\n+                _hostDao.updateResourceState(ResourceState.Enabled, ResourceState.Event.AdminAskMaintenance, ResourceState.PrepareForMaintenance, host);\n+                _hostDao.updateResourceState(ResourceState.PrepareForMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            } else if (host.getResourceState() == ResourceState.ErrorInMaintenance) {\n+                _hostDao.updateResourceState(ResourceState.ErrorInMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2MTk4Mw=="}, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwOTA4OQ==", "bodyText": "@ravening any specific reason to skip \"ResourceState.ErrorInPrepareForMaintenance\", and consider \"ResourceState.ErrorInMaintenance\", to put the host in maintenance? What if the host is back Up when the resource state is \"ErrorInPrepareForMaintenance\" ?", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503709089", "createdAt": "2020-10-13T06:58:07Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n+            if (host.getResourceState() == ResourceState.Enabled) {\n+                _hostDao.updateResourceState(ResourceState.Enabled, ResourceState.Event.AdminAskMaintenance, ResourceState.PrepareForMaintenance, host);\n+                _hostDao.updateResourceState(ResourceState.PrepareForMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            } else if (host.getResourceState() == ResourceState.ErrorInMaintenance) {\n+                _hostDao.updateResourceState(ResourceState.ErrorInMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2MTk4Mw=="}, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcxMjMwMQ==", "bodyText": "@ravening any specific reason to skip \"ResourceState.ErrorInPrepareForMaintenance\", and consider \"ResourceState.ErrorInMaintenance\", to put the host in maintenance? What if the host is back Up when the resource state is \"ErrorInPrepareForMaintenance\" ?\n\n@sureshanaparti  this code doesn't take care of that... This is only for hosts already in maintenance mode", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503712301", "createdAt": "2020-10-13T07:04:31Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n+            if (host.getResourceState() == ResourceState.Enabled) {\n+                _hostDao.updateResourceState(ResourceState.Enabled, ResourceState.Event.AdminAskMaintenance, ResourceState.PrepareForMaintenance, host);\n+                _hostDao.updateResourceState(ResourceState.PrepareForMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            } else if (host.getResourceState() == ResourceState.ErrorInMaintenance) {\n+                _hostDao.updateResourceState(ResourceState.ErrorInMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2MTk4Mw=="}, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcxNjU5MQ==", "bodyText": "ok @ravening", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503716591", "createdAt": "2020-10-13T07:13:23Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n+            if (host.getResourceState() == ResourceState.Enabled) {\n+                _hostDao.updateResourceState(ResourceState.Enabled, ResourceState.Event.AdminAskMaintenance, ResourceState.PrepareForMaintenance, host);\n+                _hostDao.updateResourceState(ResourceState.PrepareForMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            } else if (host.getResourceState() == ResourceState.ErrorInMaintenance) {\n+                _hostDao.updateResourceState(ResourceState.ErrorInMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2MTk4Mw=="}, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4207, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}