{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3OTU0OTI2", "number": 4375, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNToyMDoyMFrOEqkbwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODozMjoxM1rOEt392w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMDcyNTc4OnYy", "diffSide": "LEFT", "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNToyMDoyMFrOHc2Rzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMjowNjoyMVrOHhPtyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxMTQ3MQ==", "bodyText": "@davidjumani any reason, why unsuitable hosts are not removed from the hosts list ?", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r500011471", "createdAt": "2020-10-06T05:20:20Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1278,33 +1277,24 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Map<Host, Boolean> requiresStorageMotion = new HashMap<Host, Boolean>();\n         DataCenterDeployment plan = null;\n         if (canMigrateWithStorage) {\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword, null, null, srcHost.getHypervisorType(),\n-                    srcHost.getHypervisorVersion());\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword,\n+                null, null, srcHost.getHypervisorType(), srcHost.getHypervisorVersion(), srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n \n             for (final VolumeVO volume : volumes) {\n                 StoragePool storagePool = _poolDao.findById(volume.getPoolId());\n                 Long volClusterId = storagePool.getClusterId();\n \n-                for (Iterator<HostVO> iterator = allHosts.iterator(); iterator.hasNext();) {\n-                    final Host host = iterator.next();\n-\n+                for (HostVO host : allHosts) {\n                     if (volClusterId != null) {\n                         if (storagePool.isLocal() || !host.getClusterId().equals(volClusterId) || usesLocal) {\n-                            if (storagePool.isManaged()) {\n-                                // At the time being, we do not support storage migration of a volume from managed storage unless the managed storage\n-                                // is at the zone level and the source and target storage pool is the same.\n-                                // If the source and target storage pool is the same and it is managed, then we still have to perform a storage migration\n-                                // because we need to create a new target volume and copy the contents of the source volume into it before deleting the\n-                                // source volume.\n-                                iterator.remove();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9668193a016dc9a97714102c2be4d10832595d7d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxMzIxMA==", "bodyText": "This is so that the total count and hosts returned remain the same. Rather than removing them, they're marked as not suitable\nhttps://github.com/apache/cloudstack/blob/master/api/src/main/java/org/apache/cloudstack/api/command/admin/host/FindHostsForMigrationCmd.java#L94", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r500013210", "createdAt": "2020-10-06T05:27:03Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1278,33 +1277,24 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Map<Host, Boolean> requiresStorageMotion = new HashMap<Host, Boolean>();\n         DataCenterDeployment plan = null;\n         if (canMigrateWithStorage) {\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword, null, null, srcHost.getHypervisorType(),\n-                    srcHost.getHypervisorVersion());\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword,\n+                null, null, srcHost.getHypervisorType(), srcHost.getHypervisorVersion(), srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n \n             for (final VolumeVO volume : volumes) {\n                 StoragePool storagePool = _poolDao.findById(volume.getPoolId());\n                 Long volClusterId = storagePool.getClusterId();\n \n-                for (Iterator<HostVO> iterator = allHosts.iterator(); iterator.hasNext();) {\n-                    final Host host = iterator.next();\n-\n+                for (HostVO host : allHosts) {\n                     if (volClusterId != null) {\n                         if (storagePool.isLocal() || !host.getClusterId().equals(volClusterId) || usesLocal) {\n-                            if (storagePool.isManaged()) {\n-                                // At the time being, we do not support storage migration of a volume from managed storage unless the managed storage\n-                                // is at the zone level and the source and target storage pool is the same.\n-                                // If the source and target storage pool is the same and it is managed, then we still have to perform a storage migration\n-                                // because we need to create a new target volume and copy the contents of the source volume into it before deleting the\n-                                // source volume.\n-                                iterator.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxMTQ3MQ=="}, "originalCommit": {"oid": "9668193a016dc9a97714102c2be4d10832595d7d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxNTk3Mw==", "bodyText": "in actual production, there can be lot of unsuitable hosts. say 60 out of 100 are unsuitable, in this case, list all these and marking unsuitable doesn't sound good. thoughts?", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r500015973", "createdAt": "2020-10-06T05:36:53Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1278,33 +1277,24 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Map<Host, Boolean> requiresStorageMotion = new HashMap<Host, Boolean>();\n         DataCenterDeployment plan = null;\n         if (canMigrateWithStorage) {\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword, null, null, srcHost.getHypervisorType(),\n-                    srcHost.getHypervisorVersion());\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword,\n+                null, null, srcHost.getHypervisorType(), srcHost.getHypervisorVersion(), srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n \n             for (final VolumeVO volume : volumes) {\n                 StoragePool storagePool = _poolDao.findById(volume.getPoolId());\n                 Long volClusterId = storagePool.getClusterId();\n \n-                for (Iterator<HostVO> iterator = allHosts.iterator(); iterator.hasNext();) {\n-                    final Host host = iterator.next();\n-\n+                for (HostVO host : allHosts) {\n                     if (volClusterId != null) {\n                         if (storagePool.isLocal() || !host.getClusterId().equals(volClusterId) || usesLocal) {\n-                            if (storagePool.isManaged()) {\n-                                // At the time being, we do not support storage migration of a volume from managed storage unless the managed storage\n-                                // is at the zone level and the source and target storage pool is the same.\n-                                // If the source and target storage pool is the same and it is managed, then we still have to perform a storage migration\n-                                // because we need to create a new target volume and copy the contents of the source volume into it before deleting the\n-                                // source volume.\n-                                iterator.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxMTQ3MQ=="}, "originalCommit": {"oid": "9668193a016dc9a97714102c2be4d10832595d7d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyMDQxOQ==", "bodyText": "@davidjumani better to update the count result from searchForServers(), when unsuitable hosts are removed, instead changing the existing code for suitable hosts, can cause regression.", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r500020419", "createdAt": "2020-10-06T05:51:34Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1278,33 +1277,24 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Map<Host, Boolean> requiresStorageMotion = new HashMap<Host, Boolean>();\n         DataCenterDeployment plan = null;\n         if (canMigrateWithStorage) {\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword, null, null, srcHost.getHypervisorType(),\n-                    srcHost.getHypervisorVersion());\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword,\n+                null, null, srcHost.getHypervisorType(), srcHost.getHypervisorVersion(), srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n \n             for (final VolumeVO volume : volumes) {\n                 StoragePool storagePool = _poolDao.findById(volume.getPoolId());\n                 Long volClusterId = storagePool.getClusterId();\n \n-                for (Iterator<HostVO> iterator = allHosts.iterator(); iterator.hasNext();) {\n-                    final Host host = iterator.next();\n-\n+                for (HostVO host : allHosts) {\n                     if (volClusterId != null) {\n                         if (storagePool.isLocal() || !host.getClusterId().equals(volClusterId) || usesLocal) {\n-                            if (storagePool.isManaged()) {\n-                                // At the time being, we do not support storage migration of a volume from managed storage unless the managed storage\n-                                // is at the zone level and the source and target storage pool is the same.\n-                                // If the source and target storage pool is the same and it is managed, then we still have to perform a storage migration\n-                                // because we need to create a new target volume and copy the contents of the source volume into it before deleting the\n-                                // source volume.\n-                                iterator.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxMTQ3MQ=="}, "originalCommit": {"oid": "9668193a016dc9a97714102c2be4d10832595d7d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyMDc1MQ==", "bodyText": "Agreed, but since we're paginating the result, we can not remove the hosts in page 2 when we've only fetched the ones in page 1. So marking it as not compatible so that the total count is not broken", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r500020751", "createdAt": "2020-10-06T05:52:38Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1278,33 +1277,24 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Map<Host, Boolean> requiresStorageMotion = new HashMap<Host, Boolean>();\n         DataCenterDeployment plan = null;\n         if (canMigrateWithStorage) {\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword, null, null, srcHost.getHypervisorType(),\n-                    srcHost.getHypervisorVersion());\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword,\n+                null, null, srcHost.getHypervisorType(), srcHost.getHypervisorVersion(), srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n \n             for (final VolumeVO volume : volumes) {\n                 StoragePool storagePool = _poolDao.findById(volume.getPoolId());\n                 Long volClusterId = storagePool.getClusterId();\n \n-                for (Iterator<HostVO> iterator = allHosts.iterator(); iterator.hasNext();) {\n-                    final Host host = iterator.next();\n-\n+                for (HostVO host : allHosts) {\n                     if (volClusterId != null) {\n                         if (storagePool.isLocal() || !host.getClusterId().equals(volClusterId) || usesLocal) {\n-                            if (storagePool.isManaged()) {\n-                                // At the time being, we do not support storage migration of a volume from managed storage unless the managed storage\n-                                // is at the zone level and the source and target storage pool is the same.\n-                                // If the source and target storage pool is the same and it is managed, then we still have to perform a storage migration\n-                                // because we need to create a new target volume and copy the contents of the source volume into it before deleting the\n-                                // source volume.\n-                                iterator.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxMTQ3MQ=="}, "originalCommit": {"oid": "9668193a016dc9a97714102c2be4d10832595d7d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAzMjE4MA==", "bodyText": "Pagination is the UI thing, may be some other alternative that can be worked upon. If someone uses the API, doesn't look good to return all hosts, marking suitable & unsuitable.", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r500032180", "createdAt": "2020-10-06T06:26:08Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1278,33 +1277,24 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Map<Host, Boolean> requiresStorageMotion = new HashMap<Host, Boolean>();\n         DataCenterDeployment plan = null;\n         if (canMigrateWithStorage) {\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword, null, null, srcHost.getHypervisorType(),\n-                    srcHost.getHypervisorVersion());\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword,\n+                null, null, srcHost.getHypervisorType(), srcHost.getHypervisorVersion(), srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n \n             for (final VolumeVO volume : volumes) {\n                 StoragePool storagePool = _poolDao.findById(volume.getPoolId());\n                 Long volClusterId = storagePool.getClusterId();\n \n-                for (Iterator<HostVO> iterator = allHosts.iterator(); iterator.hasNext();) {\n-                    final Host host = iterator.next();\n-\n+                for (HostVO host : allHosts) {\n                     if (volClusterId != null) {\n                         if (storagePool.isLocal() || !host.getClusterId().equals(volClusterId) || usesLocal) {\n-                            if (storagePool.isManaged()) {\n-                                // At the time being, we do not support storage migration of a volume from managed storage unless the managed storage\n-                                // is at the zone level and the source and target storage pool is the same.\n-                                // If the source and target storage pool is the same and it is managed, then we still have to perform a storage migration\n-                                // because we need to create a new target volume and copy the contents of the source volume into it before deleting the\n-                                // source volume.\n-                                iterator.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxMTQ3MQ=="}, "originalCommit": {"oid": "9668193a016dc9a97714102c2be4d10832595d7d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAzNjczOQ==", "bodyText": "Again I agree, but that's the way it's already being done, so just fixing the count\nhttps://github.com/apache/cloudstack/blob/master/api/src/main/java/org/apache/cloudstack/api/command/admin/host/FindHostsForMigrationCmd.java#L92", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r500036739", "createdAt": "2020-10-06T06:37:38Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1278,33 +1277,24 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Map<Host, Boolean> requiresStorageMotion = new HashMap<Host, Boolean>();\n         DataCenterDeployment plan = null;\n         if (canMigrateWithStorage) {\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword, null, null, srcHost.getHypervisorType(),\n-                    srcHost.getHypervisorVersion());\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword,\n+                null, null, srcHost.getHypervisorType(), srcHost.getHypervisorVersion(), srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n \n             for (final VolumeVO volume : volumes) {\n                 StoragePool storagePool = _poolDao.findById(volume.getPoolId());\n                 Long volClusterId = storagePool.getClusterId();\n \n-                for (Iterator<HostVO> iterator = allHosts.iterator(); iterator.hasNext();) {\n-                    final Host host = iterator.next();\n-\n+                for (HostVO host : allHosts) {\n                     if (volClusterId != null) {\n                         if (storagePool.isLocal() || !host.getClusterId().equals(volClusterId) || usesLocal) {\n-                            if (storagePool.isManaged()) {\n-                                // At the time being, we do not support storage migration of a volume from managed storage unless the managed storage\n-                                // is at the zone level and the source and target storage pool is the same.\n-                                // If the source and target storage pool is the same and it is managed, then we still have to perform a storage migration\n-                                // because we need to create a new target volume and copy the contents of the source volume into it before deleting the\n-                                // source volume.\n-                                iterator.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxMTQ3MQ=="}, "originalCommit": {"oid": "9668193a016dc9a97714102c2be4d10832595d7d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkxNjIwMw==", "bodyText": "ok @davidjumani if possible, display the suitable hosts first in the UI.", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r503916203", "createdAt": "2020-10-13T12:39:20Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1278,33 +1277,24 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Map<Host, Boolean> requiresStorageMotion = new HashMap<Host, Boolean>();\n         DataCenterDeployment plan = null;\n         if (canMigrateWithStorage) {\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword, null, null, srcHost.getHypervisorType(),\n-                    srcHost.getHypervisorVersion());\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword,\n+                null, null, srcHost.getHypervisorType(), srcHost.getHypervisorVersion(), srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n \n             for (final VolumeVO volume : volumes) {\n                 StoragePool storagePool = _poolDao.findById(volume.getPoolId());\n                 Long volClusterId = storagePool.getClusterId();\n \n-                for (Iterator<HostVO> iterator = allHosts.iterator(); iterator.hasNext();) {\n-                    final Host host = iterator.next();\n-\n+                for (HostVO host : allHosts) {\n                     if (volClusterId != null) {\n                         if (storagePool.isLocal() || !host.getClusterId().equals(volClusterId) || usesLocal) {\n-                            if (storagePool.isManaged()) {\n-                                // At the time being, we do not support storage migration of a volume from managed storage unless the managed storage\n-                                // is at the zone level and the source and target storage pool is the same.\n-                                // If the source and target storage pool is the same and it is managed, then we still have to perform a storage migration\n-                                // because we need to create a new target volume and copy the contents of the source volume into it before deleting the\n-                                // source volume.\n-                                iterator.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxMTQ3MQ=="}, "originalCommit": {"oid": "9668193a016dc9a97714102c2be4d10832595d7d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYyMjUzOA==", "bodyText": "@sureshanaparti Sorted in the UI via apache/cloudstack-primate@a4732a3", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r504622538", "createdAt": "2020-10-14T12:06:21Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1278,33 +1277,24 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Map<Host, Boolean> requiresStorageMotion = new HashMap<Host, Boolean>();\n         DataCenterDeployment plan = null;\n         if (canMigrateWithStorage) {\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword, null, null, srcHost.getHypervisorType(),\n-                    srcHost.getHypervisorVersion());\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword,\n+                null, null, srcHost.getHypervisorType(), srcHost.getHypervisorVersion(), srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n \n             for (final VolumeVO volume : volumes) {\n                 StoragePool storagePool = _poolDao.findById(volume.getPoolId());\n                 Long volClusterId = storagePool.getClusterId();\n \n-                for (Iterator<HostVO> iterator = allHosts.iterator(); iterator.hasNext();) {\n-                    final Host host = iterator.next();\n-\n+                for (HostVO host : allHosts) {\n                     if (volClusterId != null) {\n                         if (storagePool.isLocal() || !host.getClusterId().equals(volClusterId) || usesLocal) {\n-                            if (storagePool.isManaged()) {\n-                                // At the time being, we do not support storage migration of a volume from managed storage unless the managed storage\n-                                // is at the zone level and the source and target storage pool is the same.\n-                                // If the source and target storage pool is the same and it is managed, then we still have to perform a storage migration\n-                                // because we need to create a new target volume and copy the contents of the source volume into it before deleting the\n-                                // source volume.\n-                                iterator.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAxMTQ3MQ=="}, "originalCommit": {"oid": "9668193a016dc9a97714102c2be4d10832595d7d"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDU2Mzk1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxNjoyNFrOHhMIAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMTozNDoxNVrOHhOpuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MzcxNA==", "bodyText": "My only concern here is that now that we're not removing hosts, what is those hosts which are not removed now as shown as suitable, would that cause any regression?", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r504563714", "createdAt": "2020-10-14T10:16:24Z", "author": {"login": "rhtyd"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1278,33 +1277,24 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Map<Host, Boolean> requiresStorageMotion = new HashMap<Host, Boolean>();\n         DataCenterDeployment plan = null;\n         if (canMigrateWithStorage) {\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword, null, null, srcHost.getHypervisorType(),\n-                    srcHost.getHypervisorVersion());\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword,\n+                null, null, srcHost.getHypervisorType(), srcHost.getHypervisorVersion(), srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n \n             for (final VolumeVO volume : volumes) {\n                 StoragePool storagePool = _poolDao.findById(volume.getPoolId());\n                 Long volClusterId = storagePool.getClusterId();\n \n-                for (Iterator<HostVO> iterator = allHosts.iterator(); iterator.hasNext();) {\n-                    final Host host = iterator.next();\n-\n+                for (HostVO host : allHosts) {\n                     if (volClusterId != null) {\n                         if (storagePool.isLocal() || !host.getClusterId().equals(volClusterId) || usesLocal) {\n-                            if (storagePool.isManaged()) {\n-                                // At the time being, we do not support storage migration of a volume from managed storage unless the managed storage\n-                                // is at the zone level and the source and target storage pool is the same.\n-                                // If the source and target storage pool is the same and it is managed, then we still have to perform a storage migration\n-                                // because we need to create a new target volume and copy the contents of the source volume into it before deleting the\n-                                // source volume.\n-                                iterator.remove();\n-                            } else {\n-                                if (hasSuitablePoolsForVolume(volume, host, vmProfile)) {\n-                                    requiresStorageMotion.put(host, true);\n-                                } else {\n-                                    iterator.remove();\n-                                }\n+                            // At the time being, we do not support storage migration of a volume from managed storage unless the managed storage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9668193a016dc9a97714102c2be4d10832595d7d"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYwNTExMg==", "bodyText": "Changed to use a cloned list hostsWithStorageMigration instead, but reutrning the original allHosts list to not mess up the pagination", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r504605112", "createdAt": "2020-10-14T11:34:15Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1278,33 +1277,24 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Map<Host, Boolean> requiresStorageMotion = new HashMap<Host, Boolean>();\n         DataCenterDeployment plan = null;\n         if (canMigrateWithStorage) {\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword, null, null, srcHost.getHypervisorType(),\n-                    srcHost.getHypervisorVersion());\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, srcHost.getDataCenterId(), null, null, null, keyword,\n+                null, null, srcHost.getHypervisorType(), srcHost.getHypervisorVersion(), srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n \n             for (final VolumeVO volume : volumes) {\n                 StoragePool storagePool = _poolDao.findById(volume.getPoolId());\n                 Long volClusterId = storagePool.getClusterId();\n \n-                for (Iterator<HostVO> iterator = allHosts.iterator(); iterator.hasNext();) {\n-                    final Host host = iterator.next();\n-\n+                for (HostVO host : allHosts) {\n                     if (volClusterId != null) {\n                         if (storagePool.isLocal() || !host.getClusterId().equals(volClusterId) || usesLocal) {\n-                            if (storagePool.isManaged()) {\n-                                // At the time being, we do not support storage migration of a volume from managed storage unless the managed storage\n-                                // is at the zone level and the source and target storage pool is the same.\n-                                // If the source and target storage pool is the same and it is managed, then we still have to perform a storage migration\n-                                // because we need to create a new target volume and copy the contents of the source volume into it before deleting the\n-                                // source volume.\n-                                iterator.remove();\n-                            } else {\n-                                if (hasSuitablePoolsForVolume(volume, host, vmProfile)) {\n-                                    requiresStorageMotion.put(host, true);\n-                                } else {\n-                                    iterator.remove();\n-                                }\n+                            // At the time being, we do not support storage migration of a volume from managed storage unless the managed storage", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MzcxNA=="}, "originalCommit": {"oid": "9668193a016dc9a97714102c2be4d10832595d7d"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDcwNTM3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo1MToyMFrOHh0PJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODoyNzowMFrOHh7IWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIyMDkwMQ==", "bodyText": "@davidjumani do you mean hosts for migration with storage? why another list is required here?", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r505220901", "createdAt": "2020-10-15T06:51:20Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1275,19 +1275,20 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Type hostType = srcHost.getType();\n         Pair<List<HostVO>, Integer> allHostsPair = null;\n         List<HostVO> allHosts = null;\n+        List<HostVO> hostsWithStorageMigration = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db90a848485e91a4295daddce96d996fc74dbb76"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIzMTYwNg==", "bodyText": "Previously the allHosts list was altered (if storage migration was required) and then used to find the suitable hosts. Instead, now it's being cloned into hostsWithStorageMigration and using the cloned list to find the suitable hosts so that the original list is not altered.", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r505231606", "createdAt": "2020-10-15T06:59:36Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1275,19 +1275,20 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Type hostType = srcHost.getType();\n         Pair<List<HostVO>, Integer> allHostsPair = null;\n         List<HostVO> allHosts = null;\n+        List<HostVO> hostsWithStorageMigration = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIyMDkwMQ=="}, "originalCommit": {"oid": "db90a848485e91a4295daddce96d996fc74dbb76"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMzMzg0OQ==", "bodyText": "Ok @davidjumani\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<HostVO> hostsWithStorageMigration = null;\n          \n          \n            \n                    List<HostVO> hostsForMigrationWithStorage = null;", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r505333849", "createdAt": "2020-10-15T08:27:00Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1275,19 +1275,20 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n         final Type hostType = srcHost.getType();\n         Pair<List<HostVO>, Integer> allHostsPair = null;\n         List<HostVO> allHosts = null;\n+        List<HostVO> hostsWithStorageMigration = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIyMDkwMQ=="}, "originalCommit": {"oid": "db90a848485e91a4295daddce96d996fc74dbb76"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDc0NTAxOnYy", "diffSide": "LEFT", "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo1NzowNFrOHh0reA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzowMTo0MFrOHh1DVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIyODE1Mg==", "bodyText": "@davidjumani didn't see any change with respect to hosts count, does these changes fix the count issue?", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r505228152", "createdAt": "2020-10-15T06:57:04Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1326,10 +1327,9 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n             if (s_logger.isDebugEnabled()) {\n                 s_logger.debug(\"Searching for all hosts in cluster \" + cluster + \" for migrating VM \" + vm);\n             }\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, null, null, cluster, null, keyword, null, null, null, null);\n-            // Filter out the current host.\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, null, null, cluster, null, keyword, null, null, null,\n+                null, srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db90a848485e91a4295daddce96d996fc74dbb76"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIzNDI2MQ==", "bodyText": "It does since I've added an excludes param in the searchForServers method and passing the source host ID to it. This excludes the source host in the query, as well as ensures that the allHosts list is never altered. So the count remains consistant but unsuitable hosts are marked accordingly", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r505234261", "createdAt": "2020-10-15T07:01:40Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1326,10 +1327,9 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n             if (s_logger.isDebugEnabled()) {\n                 s_logger.debug(\"Searching for all hosts in cluster \" + cluster + \" for migrating VM \" + vm);\n             }\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, null, null, cluster, null, keyword, null, null, null, null);\n-            // Filter out the current host.\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, null, null, cluster, null, keyword, null, null, null,\n+                null, srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIyODE1Mg=="}, "originalCommit": {"oid": "db90a848485e91a4295daddce96d996fc74dbb76"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTM4MzMxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODozMjoxM1rOHh7c0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzowMDo0NlrOHjIs8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMzOTA4OQ==", "bodyText": "@davidjumani can you check if otherHosts here is not required as there is no change in the allHosts & its count, which you can return as it is (as a List), instead of Pair (with count). You can use use the allHosts count wherever applicable.", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r505339089", "createdAt": "2020-10-15T08:32:13Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1326,10 +1327,9 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n             if (s_logger.isDebugEnabled()) {\n                 s_logger.debug(\"Searching for all hosts in cluster \" + cluster + \" for migrating VM \" + vm);\n             }\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, null, null, cluster, null, keyword, null, null, null, null);\n-            // Filter out the current host.\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, null, null, cluster, null, keyword, null, null, null,\n+                null, srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n             plan = new DataCenterDeployment(srcHost.getDataCenterId(), srcHost.getPodId(), srcHost.getClusterId(), null, null, null);\n         }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db90a848485e91a4295daddce96d996fc74dbb76"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4NzkwMQ==", "bodyText": "It's needed here since the data type is different Pair<List<HostVO>, Integer> vs Pair<List<? extends Host>, Integer>. Also the allHostsPair contains the total count of servers whereas the allHosts lists contains only those in the specified page / pagesize", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r506587901", "createdAt": "2020-10-16T16:29:10Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1326,10 +1327,9 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n             if (s_logger.isDebugEnabled()) {\n                 s_logger.debug(\"Searching for all hosts in cluster \" + cluster + \" for migrating VM \" + vm);\n             }\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, null, null, cluster, null, keyword, null, null, null, null);\n-            // Filter out the current host.\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, null, null, cluster, null, keyword, null, null, null,\n+                null, srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n             plan = new DataCenterDeployment(srcHost.getDataCenterId(), srcHost.getPodId(), srcHost.getClusterId(), null, null, null);\n         }\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMzOTA4OQ=="}, "originalCommit": {"oid": "db90a848485e91a4295daddce96d996fc74dbb76"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYwNDc4NA==", "bodyText": "thanks for confirming that @davidjumani", "url": "https://github.com/apache/cloudstack/pull/4375#discussion_r506604784", "createdAt": "2020-10-16T17:00:46Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -1326,10 +1327,9 @@ private HypervisorType getHypervisorType(VMInstanceVO vm, StoragePool srcVolumeP\n             if (s_logger.isDebugEnabled()) {\n                 s_logger.debug(\"Searching for all hosts in cluster \" + cluster + \" for migrating VM \" + vm);\n             }\n-            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, null, null, cluster, null, keyword, null, null, null, null);\n-            // Filter out the current host.\n+            allHostsPair = searchForServers(startIndex, pageSize, null, hostType, null, null, null, cluster, null, keyword, null, null, null,\n+                null, srcHost.getId());\n             allHosts = allHostsPair.first();\n-            allHosts.remove(srcHost);\n             plan = new DataCenterDeployment(srcHost.getDataCenterId(), srcHost.getPodId(), srcHost.getClusterId(), null, null, null);\n         }\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMzOTA4OQ=="}, "originalCommit": {"oid": "db90a848485e91a4295daddce96d996fc74dbb76"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4216, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}