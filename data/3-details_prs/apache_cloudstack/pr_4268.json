{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MzU2MTM1", "number": 4268, "title": "Prevent NullPointerException on GenericDaoBase", "bodyText": "Description\n\nRecently I had a few DB connection/transaction issues on a test environment and one of the log messages was the following NullPointerException:\n2020-08-12 22:48:33,250 WARN  [c.c.a.m.AgentManagerImpl] (AgentManager-Handler-1:null) (logid:) Caught: \njava.lang.NullPointerException\n        at com.cloud.utils.db.GenericDaoBase.update(GenericDaoBase.java:853)\n        at com.cloud.utils.db.GenericDaoBase.update(GenericDaoBase.java:809)\n        at com.cloud.utils.db.GenericDaoBase.update(GenericDaoBase.java:1365)\n\nLooking further we can see that the null pointer was caused due to a null Object calling equals method. A simple fix would be to use the static final not-null Object calling the Object.equals method.\nThis PR also extracted the duplicated code that could cause NullPointerException and added unit tests to ensure that no NullPointerException will be thrown.\nTypes of changes\n\n Breaking change (fix or feature that would cause existing functionality to change)\n New feature (non-breaking change which adds functionality)\n Bug fix (non-breaking change which fixes an issue)\n Enhancement (improves an existing feature and functionality)\n Cleanup (Code refactoring and cleanup, that may add test cases)", "createdAt": "2020-08-15T19:25:16Z", "url": "https://github.com/apache/cloudstack/pull/4268", "merged": true, "mergeCommit": {"oid": "3fe724bd3214cc572b54390d72474bc800b82843"}, "closed": true, "closedAt": "2020-08-17T10:43:47Z", "author": {"login": "GabrielBrascher"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_OPJ0AH2gAyNDY4MzU2MTM1OmZkMmFiZDFhNDMzNDRlMDliMjc3YjQ1YmVjODViMmJlOGEyZTE3MmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_uZePAFqTQ2ODI3ODYzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fd2abd1a43344e09b277b45bec85b2be8a2e172c", "author": {"user": {"login": "GabrielBrascher", "name": "Gabriel Beims Br\u00e4scher"}}, "url": "https://github.com/apache/cloudstack/commit/fd2abd1a43344e09b277b45bec85b2be8a2e172c", "committedDate": "2020-08-15T19:18:32Z", "message": "Prevent NullPointerException on GenericDaoBase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDEzMTQ3", "url": "https://github.com/apache/cloudstack/pull/4268#pullrequestreview-468013147", "createdAt": "2020-08-15T19:26:04Z", "commit": {"oid": "fd2abd1a43344e09b277b45bec85b2be8a2e172c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxOToyNjowNFrOHBNKZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQxOToyOTo0NFrOHBNLWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAyNjI3Nw==", "bodyText": "Previous  MockitoJUnitRunner got Deprecated; changed to a non-deprecated one.", "url": "https://github.com/apache/cloudstack/pull/4268#discussion_r471026277", "createdAt": "2020-08-15T19:26:04Z", "author": {"login": "GabrielBrascher"}, "path": "framework/db/src/test/java/com/cloud/utils/db/GenericDaoBaseTest.java", "diffHunk": "@@ -20,132 +20,166 @@\n import java.sql.SQLException;\n \n import org.junit.Assert;\n+import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.mockito.Mock;\n import org.mockito.Mockito;\n-import org.mockito.runners.MockitoJUnitRunner;\n+import org.mockito.junit.MockitoJUnitRunner;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd2abd1a43344e09b277b45bec85b2be8a2e172c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAyNjUyMQ==", "bodyText": "Despite all tests pass, the Process finished with exit code 255 due to unnecessary stubbings.\nI fixed this issue by extracting all into a @Before method and tests are looking good.\nThe output of tests before this PR:\nProcess finished with exit code 255\n\norg.mockito.exceptions.misusing.UnnecessaryStubbingException: \nUnnecessary stubbings detected in test class: GenericDaoBaseTest\nClean & maintainable test code requires zero unnecessary code.\nFollowing stubbings are unnecessary (click to navigate to relevant line of code):\n  1. -> at com.cloud.utils.db.GenericDaoBaseTest.getObjectPrimitiveByte(GenericDaoBaseTest.java:144)\n  2. -> at com.cloud.utils.db.GenericDaoBaseTest.getObjectPrimitiveLong(GenericDaoBaseTest.java:117)\n  3. -> at com.cloud.utils.db.GenericDaoBaseTest.getObjectPrimitiveInt(GenericDaoBaseTest.java:126)\n  4. -> at com.cloud.utils.db.GenericDaoBaseTest.getObjectPrimitiveDouble(GenericDaoBaseTest.java:90)\n  5. -> at com.cloud.utils.db.GenericDaoBaseTest.getObjectPrimitiveFloat(GenericDaoBaseTest.java:81)\n  6. -> at com.cloud.utils.db.GenericDaoBaseTest.getObjectPrimitiveShort(GenericDaoBaseTest.java:54)\n  7. -> at com.cloud.utils.db.GenericDaoBaseTest.getObjectPrimitiveBoolean(GenericDaoBaseTest.java:45)\nPlease remove unnecessary stubbings or use 'lenient' strictness. More info: javadoc for UnnecessaryStubbingException class.\n\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:49)\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n\tat org.mockito.runners.MockitoJUnitRunner.run(MockitoJUnitRunner.java:54)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)", "url": "https://github.com/apache/cloudstack/pull/4268#discussion_r471026521", "createdAt": "2020-08-15T19:29:44Z", "author": {"login": "GabrielBrascher"}, "path": "framework/db/src/test/java/com/cloud/utils/db/GenericDaoBaseTest.java", "diffHunk": "@@ -20,132 +20,166 @@\n import java.sql.SQLException;\n \n import org.junit.Assert;\n+import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.mockito.Mock;\n import org.mockito.Mockito;\n-import org.mockito.runners.MockitoJUnitRunner;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import javax.persistence.EntityExistsException;\n \n @RunWith(MockitoJUnitRunner.class)\n public class GenericDaoBaseTest {\n     @Mock\n     ResultSet resultSet;\n+    @Mock\n+    SQLException mockedSQLException;\n \n-    @Test\n-    public void getObjectBoolean() throws SQLException {\n+    private static final String INTEGRITY_CONSTRAINT_VIOLATION = \"23000\";\n+    private static final int DUPLICATE_ENTRY_ERRO_CODE = 1062;\n+\n+    @Before\n+    public void prepareTests() throws SQLException {\n         Mockito.when(resultSet.getObject(1)).thenReturn(false);\n         Mockito.when(resultSet.getBoolean(1)).thenReturn(false);\n+        Mockito.when(resultSet.getObject(1)).thenReturn((short) 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd2abd1a43344e09b277b45bec85b2be8a2e172c"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "576021bb97a4b42793351178019b92a6753363d5", "author": {"user": {"login": "GabrielBrascher", "name": "Gabriel Beims Br\u00e4scher"}}, "url": "https://github.com/apache/cloudstack/commit/576021bb97a4b42793351178019b92a6753363d5", "committedDate": "2020-08-15T19:41:10Z", "message": "Fix checkstyle: remove unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDE2MTgw", "url": "https://github.com/apache/cloudstack/pull/4268#pullrequestreview-468016180", "createdAt": "2020-08-15T20:33:55Z", "commit": {"oid": "576021bb97a4b42793351178019b92a6753363d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMDozMzo1NVrOHBNeOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQyMDozMzo1NVrOHBNeOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTAzMTM1NQ==", "bodyText": "+1 to this pattern to check contant.equals(potentially-nullable-obj)", "url": "https://github.com/apache/cloudstack/pull/4268#discussion_r471031355", "createdAt": "2020-08-15T20:33:55Z", "author": {"login": "rhtyd"}, "path": "framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java", "diffHunk": "@@ -850,13 +853,23 @@ public int update(UpdateBuilder ub, final SearchCriteria<?> sc, Integer rows) {\n             ub.clear();\n             return result;\n         } catch (final SQLException e) {\n-            if (e.getSQLState().equals(\"23000\") && e.getErrorCode() == 1062) {\n-                throw new EntityExistsException(\"Entity already exists \", e);\n-            }\n+            handleEntityExistsException(e);\n             throw new CloudRuntimeException(\"DB Exception on: \" + pstmt, e);\n         }\n     }\n \n+    /**\n+     * If the SQLException.getSQLState is of 23000 (Integrity Constraint Violation), and the Error Code is 1062 (Duplicate Entry), throws EntityExistsException.\n+     * @throws EntityExistsException\n+     */\n+    protected static void handleEntityExistsException(SQLException e) throws EntityExistsException {\n+        boolean isIntegrityConstantViolation = INTEGRITY_CONSTRAINT_VIOLATION.equals(e.getSQLState());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "576021bb97a4b42793351178019b92a6753363d5"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDE2MjAw", "url": "https://github.com/apache/cloudstack/pull/4268#pullrequestreview-468016200", "createdAt": "2020-08-15T20:34:13Z", "commit": {"oid": "576021bb97a4b42793351178019b92a6753363d5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4Mjc4NjM1", "url": "https://github.com/apache/cloudstack/pull/4268#pullrequestreview-468278635", "createdAt": "2020-08-17T08:46:46Z", "commit": {"oid": "576021bb97a4b42793351178019b92a6753363d5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4059, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}