{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MTk1Nzc4", "number": 4501, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODo0ODowMVrOE9HukQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODo0OTo0NlrOE9Hxgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTI1MjAxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/cloudstack/api/command/user/loadbalancer/CreateLoadBalancerRuleCmd.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODo0ODowMVrOH5ouIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODo0ODowMVrOH5ouIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE5ODA1MQ==", "bodyText": "@davidjumani as far as I remember, 'ssl' is also a valid protocol", "url": "https://github.com/apache/cloudstack/pull/4501#discussion_r530198051", "createdAt": "2020-11-25T08:48:01Z", "author": {"login": "weizhouapache"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/user/loadbalancer/CreateLoadBalancerRuleCmd.java", "diffHunk": "@@ -255,6 +255,12 @@ public Boolean getOpenFirewall() {\n     }\n \n     public String getLbProtocol() {\n+        if (lbProtocol != null) {\n+            lbProtocol = lbProtocol.toLowerCase();\n+            if (!lbProtocol.equals(NetUtils.TCP_PROTO) && !lbProtocol.equals(NetUtils.TCP_PROXY_PROTO)) {\n+                throw new InvalidParameterValueException(\"Invalid protocool. Supported protocols are tcp and tcp-proxy\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5f43014c9dded01d199d55a84fd6cdc4d10c90b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTI1OTU1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/cloudstack/api/command/user/loadbalancer/CreateLoadBalancerRuleCmd.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODo0OTo0NlrOH5oyjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMToxOTo0OFrOH5u0Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE5OTE4MQ==", "bodyText": "@davidjumani might 'udp' be supportd by some lb hardware devices ?", "url": "https://github.com/apache/cloudstack/pull/4501#discussion_r530199181", "createdAt": "2020-11-25T08:49:46Z", "author": {"login": "weizhouapache"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/user/loadbalancer/CreateLoadBalancerRuleCmd.java", "diffHunk": "@@ -114,7 +114,7 @@\n         + \"rule will be created for. Required when public Ip address is not associated with any Guest network yet (VPC case)\")\n     private Long networkId;\n \n-    @Parameter(name = ApiConstants.PROTOCOL, type = CommandType.STRING, description = \"The protocol for the LB such as tcp, udp or tcp-proxy.\")\n+    @Parameter(name = ApiConstants.PROTOCOL, type = CommandType.STRING, description = \"The protocol for the LB such as tcp or tcp-proxy.\")\n     private String lbProtocol;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5f43014c9dded01d199d55a84fd6cdc4d10c90b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI5Nzg4Nw==", "bodyText": "@weizhouapache good point, I'll move the check to the NetworkHelperImpl.java", "url": "https://github.com/apache/cloudstack/pull/4501#discussion_r530297887", "createdAt": "2020-11-25T11:19:48Z", "author": {"login": "davidjumani"}, "path": "api/src/main/java/org/apache/cloudstack/api/command/user/loadbalancer/CreateLoadBalancerRuleCmd.java", "diffHunk": "@@ -114,7 +114,7 @@\n         + \"rule will be created for. Required when public Ip address is not associated with any Guest network yet (VPC case)\")\n     private Long networkId;\n \n-    @Parameter(name = ApiConstants.PROTOCOL, type = CommandType.STRING, description = \"The protocol for the LB such as tcp, udp or tcp-proxy.\")\n+    @Parameter(name = ApiConstants.PROTOCOL, type = CommandType.STRING, description = \"The protocol for the LB such as tcp or tcp-proxy.\")\n     private String lbProtocol;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE5OTE4MQ=="}, "originalCommit": {"oid": "a5f43014c9dded01d199d55a84fd6cdc4d10c90b"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4154, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}