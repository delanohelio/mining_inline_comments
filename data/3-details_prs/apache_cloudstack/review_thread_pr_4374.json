{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3OTE3MzUw", "number": 4374, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzoxMTowNVrOEqmBsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzoyMToyMFrOEqmOmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMDk4Njc1OnYy", "diffSide": "RIGHT", "path": "framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzoxMTowNVrOHc4vkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzozNjozM1rOHc5ksA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1MTg1Nw==", "bodyText": "can use checkAndSetRemovedIsNull() here ?", "url": "https://github.com/apache/cloudstack/pull/4374#discussion_r500051857", "createdAt": "2020-10-06T07:11:05Z", "author": {"login": "sureshanaparti"}, "path": "framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java", "diffHunk": "@@ -519,7 +509,6 @@ public T lockOneRandomRow(final SearchCriteria<T> sc, final boolean exclusive) {\n         if (_removed != null) {\n             sc.addAnd(_removed.second().field.getName(), SearchCriteria.Op.NULL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120ee250364a4333fe77dad6dedb8297ee12b669"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1OTE1MQ==", "bodyText": "Makes it a bit difficult since it is of a different type M not T", "url": "https://github.com/apache/cloudstack/pull/4374#discussion_r500059151", "createdAt": "2020-10-06T07:25:19Z", "author": {"login": "davidjumani"}, "path": "framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java", "diffHunk": "@@ -519,7 +509,6 @@ public T lockOneRandomRow(final SearchCriteria<T> sc, final boolean exclusive) {\n         if (_removed != null) {\n             sc.addAnd(_removed.second().field.getName(), SearchCriteria.Op.NULL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1MTg1Nw=="}, "originalCommit": {"oid": "120ee250364a4333fe77dad6dedb8297ee12b669"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA2NTQ1Ng==", "bodyText": "ok @davidjumani", "url": "https://github.com/apache/cloudstack/pull/4374#discussion_r500065456", "createdAt": "2020-10-06T07:36:33Z", "author": {"login": "sureshanaparti"}, "path": "framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java", "diffHunk": "@@ -519,7 +509,6 @@ public T lockOneRandomRow(final SearchCriteria<T> sc, final boolean exclusive) {\n         if (_removed != null) {\n             sc.addAnd(_removed.second().field.getName(), SearchCriteria.Op.NULL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1MTg1Nw=="}, "originalCommit": {"oid": "120ee250364a4333fe77dad6dedb8297ee12b669"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTAxOTc2OnYy", "diffSide": "RIGHT", "path": "framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzoyMToyMFrOHc5D0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODoxOTowMVrOHc7F3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1NzA0Mw==", "bodyText": "removed & _removed seems to be redundant here & wherever used in similar way, can you directly set / unset _removed as per its usage ? If the purpose is to include / exclude removed records, you can use methods with naming *IncludingRemovedBy() [for ex: getDistinctCountIncludingRemovedBy()] to be in sync with the other methods.", "url": "https://github.com/apache/cloudstack/pull/4374#discussion_r500057043", "createdAt": "2020-10-06T07:21:20Z", "author": {"login": "sureshanaparti"}, "path": "framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java", "diffHunk": "@@ -1935,6 +1918,23 @@ public boolean configure(final String name, final Map<String, Object> params) th\n         return builder.create();\n     }\n \n+    private SearchCriteria<T> checkAndSetRemovedIsNull(SearchCriteria<T> sc) {\n+        if (_removed != null) {\n+            if (sc == null) {\n+                sc = createSearchCriteria();\n+            }\n+            sc.addAnd(_removed.second().field.getName(), SearchCriteria.Op.NULL);\n+        }\n+        return sc;\n+    }\n+\n+    public Integer getDistinctCount(SearchCriteria<T> sc, boolean removed) {\n+        if (!removed) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120ee250364a4333fe77dad6dedb8297ee12b669"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA2MDM2NA==", "bodyText": "As of now getDistinctCount returns including removed so changing it would require changing where it's been referenced, would it be better to create getDistinctCountExcludingRemoved  ?\nEdit : Nevermind. Isn't used much elsewhere. Will make the changes", "url": "https://github.com/apache/cloudstack/pull/4374#discussion_r500060364", "createdAt": "2020-10-06T07:27:35Z", "author": {"login": "davidjumani"}, "path": "framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java", "diffHunk": "@@ -1935,6 +1918,23 @@ public boolean configure(final String name, final Map<String, Object> params) th\n         return builder.create();\n     }\n \n+    private SearchCriteria<T> checkAndSetRemovedIsNull(SearchCriteria<T> sc) {\n+        if (_removed != null) {\n+            if (sc == null) {\n+                sc = createSearchCriteria();\n+            }\n+            sc.addAnd(_removed.second().field.getName(), SearchCriteria.Op.NULL);\n+        }\n+        return sc;\n+    }\n+\n+    public Integer getDistinctCount(SearchCriteria<T> sc, boolean removed) {\n+        if (!removed) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1NzA0Mw=="}, "originalCommit": {"oid": "120ee250364a4333fe77dad6dedb8297ee12b669"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA2NjczNA==", "bodyText": "getDistinctCountExcludingRemoved is not in line with other methods, so I do not recommend.", "url": "https://github.com/apache/cloudstack/pull/4374#discussion_r500066734", "createdAt": "2020-10-06T07:38:54Z", "author": {"login": "sureshanaparti"}, "path": "framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java", "diffHunk": "@@ -1935,6 +1918,23 @@ public boolean configure(final String name, final Map<String, Object> params) th\n         return builder.create();\n     }\n \n+    private SearchCriteria<T> checkAndSetRemovedIsNull(SearchCriteria<T> sc) {\n+        if (_removed != null) {\n+            if (sc == null) {\n+                sc = createSearchCriteria();\n+            }\n+            sc.addAnd(_removed.second().field.getName(), SearchCriteria.Op.NULL);\n+        }\n+        return sc;\n+    }\n+\n+    public Integer getDistinctCount(SearchCriteria<T> sc, boolean removed) {\n+        if (!removed) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1NzA0Mw=="}, "originalCommit": {"oid": "120ee250364a4333fe77dad6dedb8297ee12b669"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA2ODk3MQ==", "bodyText": "Default method should not include removed records, explicitly mentioned methods \"*IncludingRemovedBy()\" should. so, may be you can change current method to \"*IncludingRemovedBy()\" and add other method with current name.", "url": "https://github.com/apache/cloudstack/pull/4374#discussion_r500068971", "createdAt": "2020-10-06T07:42:44Z", "author": {"login": "sureshanaparti"}, "path": "framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java", "diffHunk": "@@ -1935,6 +1918,23 @@ public boolean configure(final String name, final Map<String, Object> params) th\n         return builder.create();\n     }\n \n+    private SearchCriteria<T> checkAndSetRemovedIsNull(SearchCriteria<T> sc) {\n+        if (_removed != null) {\n+            if (sc == null) {\n+                sc = createSearchCriteria();\n+            }\n+            sc.addAnd(_removed.second().field.getName(), SearchCriteria.Op.NULL);\n+        }\n+        return sc;\n+    }\n+\n+    public Integer getDistinctCount(SearchCriteria<T> sc, boolean removed) {\n+        if (!removed) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1NzA0Mw=="}, "originalCommit": {"oid": "120ee250364a4333fe77dad6dedb8297ee12b669"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3MzAwMQ==", "bodyText": "Added! Thanks @sureshanaparti", "url": "https://github.com/apache/cloudstack/pull/4374#discussion_r500073001", "createdAt": "2020-10-06T07:49:48Z", "author": {"login": "davidjumani"}, "path": "framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java", "diffHunk": "@@ -1935,6 +1918,23 @@ public boolean configure(final String name, final Map<String, Object> params) th\n         return builder.create();\n     }\n \n+    private SearchCriteria<T> checkAndSetRemovedIsNull(SearchCriteria<T> sc) {\n+        if (_removed != null) {\n+            if (sc == null) {\n+                sc = createSearchCriteria();\n+            }\n+            sc.addAnd(_removed.second().field.getName(), SearchCriteria.Op.NULL);\n+        }\n+        return sc;\n+    }\n+\n+    public Integer getDistinctCount(SearchCriteria<T> sc, boolean removed) {\n+        if (!removed) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1NzA0Mw=="}, "originalCommit": {"oid": "120ee250364a4333fe77dad6dedb8297ee12b669"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA5MDMzMg==", "bodyText": "Perfect, changes LGTM.", "url": "https://github.com/apache/cloudstack/pull/4374#discussion_r500090332", "createdAt": "2020-10-06T08:19:01Z", "author": {"login": "sureshanaparti"}, "path": "framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java", "diffHunk": "@@ -1935,6 +1918,23 @@ public boolean configure(final String name, final Map<String, Object> params) th\n         return builder.create();\n     }\n \n+    private SearchCriteria<T> checkAndSetRemovedIsNull(SearchCriteria<T> sc) {\n+        if (_removed != null) {\n+            if (sc == null) {\n+                sc = createSearchCriteria();\n+            }\n+            sc.addAnd(_removed.second().field.getName(), SearchCriteria.Op.NULL);\n+        }\n+        return sc;\n+    }\n+\n+    public Integer getDistinctCount(SearchCriteria<T> sc, boolean removed) {\n+        if (!removed) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1NzA0Mw=="}, "originalCommit": {"oid": "120ee250364a4333fe77dad6dedb8297ee12b669"}, "originalPosition": 109}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4211, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}