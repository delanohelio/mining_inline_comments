{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NzQxMjE4", "number": 3794, "title": "create Volume Access Groups per cluster instead of CloudStack-RandomUUID()", "bodyText": "Description\nPreviously, volume access groups were assigned with the convention Cloudstack-RandomUUID. This change proposes that that we use Cloudstack-clusterUuId instead.\nThe problem addressed by this PR is that under some conditions multiple volume access groups with random uuids are created. This is illustrated in the screenshot below:\n\nOne of the scenarios in which this occurs is when upgrades are done to the hypervisor hosts by removing, re-provisioning them and re-adding them.\n\n\n\n\n\nTypes of changes\n\n\n Breaking change (fix or feature that would cause existing functionality to change)\n New feature (non-breaking change which adds functionality)\n Bug fix (non-breaking change which fixes an issue)\n Enhancement (improves an existing feature and functionality)\n Cleanup (Code refactoring and cleanup, that may add test cases)\n\nScreenshots (if appropriate):\nHow Has This Been Tested?\n\n\n\nScenario where new random volume access groups are created\nSteps to reproduce in test environment with two hosts:\n\n\n\nCreate VMs\n\n\n\n\nRemove all hosts\n\n\n\n\nRe-Add hosts\n\n\n\n\nStart VMs\n\n\n\nOutcome before applying this patch:\nA new volume access group is created with the convention CloudStack-RandomUUID\nAfter applying this patch:\nIf an existing volume access group with the naming convention CloudStack-clusterUuId exists, it will be used otherwise a volume access group with this naming convention will be created.\nBackward Compatibility test\n\n\n\ninitial scenario old code, two hosts, volume access group name with random-uuid\n\n\n\n\nswitch to new code\n\n\n\n\nremove one host\n\n\n\n\nre-add host\n\n\n\nOutcome before applying this patch:\nno new volume access group created, existing volume access group with random-uuid is used.\nAfter applying this patch:\nno new volume access group created, existing volume access group with random-uuid is used.\nA scenario with one host in the new group and one in the old does not occur for the above tests", "createdAt": "2020-01-02T17:55:24Z", "url": "https://github.com/apache/cloudstack/pull/3794", "merged": true, "mergeCommit": {"oid": "8dd6cef9a6d395a2b8d876e358077bd150cdc9f1"}, "closed": true, "closedAt": "2020-06-02T18:58:21Z", "author": {"login": "skattoju4"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2ckk8AH2gAyMzU4NzQxMjE4OmE5Yzg1NzQ3YTI4MWJjNjQ1ZTFjYTA0ZjdhNGQwYTliNjI0NDUwZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmEf_ZAFqTQyMTA3NTk0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a9c85747a281bc645e1ca04f7a4d0a9b624450ec", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/a9c85747a281bc645e1ca04f7a4d0a9b624450ec", "committedDate": "2020-01-02T16:44:08Z", "message": "create vags per cluster"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdfe871c9a7225bf0e6f51c1e24faaa7ad90db25", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/fdfe871c9a7225bf0e6f51c1e24faaa7ad90db25", "committedDate": "2020-01-02T20:22:39Z", "message": "vagname in solidfire utils vag object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2b4b91cb1e82487d493ac4300745a83d1fa5ed6", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/b2b4b91cb1e82487d493ac4300745a83d1fa5ed6", "committedDate": "2020-01-06T15:28:09Z", "message": "fix string compare"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3eec7d0472f9fd196fd0ff8e74762a73d7df89b6", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/3eec7d0472f9fd196fd0ff8e74762a73d7df89b6", "committedDate": "2020-01-09T19:24:34Z", "message": "refactor to make use of existing map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "550cb3bbcefe3b7f8aff8e6852b481be79e31663", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/550cb3bbcefe3b7f8aff8e6852b481be79e31663", "committedDate": "2020-01-09T20:03:36Z", "message": "fix typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "849ef467a8828a4a225063140d5f2bcef8aea4b4", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/849ef467a8828a4a225063140d5f2bcef8aea4b4", "committedDate": "2020-01-09T22:05:57Z", "message": "rebuild vag to iqn map after creating cluster vag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cce1cf24bf28f056be93f0bfe1da4cd28fe58af6", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/cce1cf24bf28f056be93f0bfe1da4cd28fe58af6", "committedDate": "2020-01-09T22:19:23Z", "message": "refactor loop using java 8 stream api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef939abc108ff1f3ef3c8e9a5f13363fe2addfab", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/ef939abc108ff1f3ef3c8e9a5f13363fe2addfab", "committedDate": "2020-01-13T16:27:04Z", "message": "update null entry in vag to iqn map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb89f26c5266e15335b93ee34904f50022e664e6", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/fb89f26c5266e15335b93ee34904f50022e664e6", "committedDate": "2020-01-13T18:48:24Z", "message": "remove null vag to iqn mapping when creating cluster id vag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e657f867ef1f8f3f9b7b511f0f70cb6dff1f8b6c", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/e657f867ef1f8f3f9b7b511f0f70cb6dff1f8b6c", "committedDate": "2020-01-13T20:35:59Z", "message": "add initiator to sf vag when adding hosts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42af5ebf42969bc54b6895778fb410ed9eda4c91", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/42af5ebf42969bc54b6895778fb410ed9eda4c91", "committedDate": "2020-01-14T22:01:25Z", "message": "use cluster uuid instead of cluster id and refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1383f636661d97c2634d257f26f00e5b5859571", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/d1383f636661d97c2634d257f26f00e5b5859571", "committedDate": "2020-01-16T15:38:14Z", "message": "update null entry in vagtoiqnmap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a0f917aed2c503cc47e10d7cf3e4d4c8cf5b313", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/6a0f917aed2c503cc47e10d7cf3e4d4c8cf5b313", "committedDate": "2020-01-16T16:54:44Z", "message": "update sfvag list after creating new vag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dfd308f70d07c3b2330c1cc7fe2abc1886d5139", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/8dfd308f70d07c3b2330c1cc7fe2abc1886d5139", "committedDate": "2020-01-16T17:53:55Z", "message": "pass clusterDao to handleVagForHost"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99d0ce73047b8fb9c18ddf1b97d147cfdd4ce982", "author": {"user": {"login": "skattoju", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/99d0ce73047b8fb9c18ddf1b97d147cfdd4ce982", "committedDate": "2020-01-16T18:54:34Z", "message": "check if initiator is not already added to the vag"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMDQ0MzY5", "url": "https://github.com/apache/cloudstack/pull/3794#pullrequestreview-350044369", "createdAt": "2020-01-29T11:42:58Z", "commit": {"oid": "99d0ce73047b8fb9c18ddf1b97d147cfdd4ce982"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMTo0Mjo1OFrOFjFhVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMjowMjoyMFrOFjGBHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzNDkzNQ==", "bodyText": "can you make this a method with a good descriptive name?", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r372334935", "createdAt": "2020-01-29T11:42:58Z", "author": {"login": "DaanHoogland"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -513,12 +513,18 @@ public static void hostAddedToCluster(long hostId, long clusterId, String storag\n     // creating a new VAG won't exceed 4 VAGs for the computer cluster).\n     // If none of the hosts in the cluster are in a VAG, then leave this host out of a VAG.\n     // Place applicable volume IDs in VAG, if need be (account of volume starts with SF_CS_ACCOUNT_PREFIX).\n-    private static void handleVagForHost(SolidFireUtil.SolidFireConnection sfConnection, List<SolidFireUtil.SolidFireVag> sfVags, Host host, HostDao hostDao) {\n+    private static void handleVagForHost(SolidFireUtil.SolidFireConnection sfConnection, List<SolidFireUtil.SolidFireVag> sfVags, Host host, HostDao hostDao, ClusterDao clusterDao) {\n         List<HostVO> hostVOs = hostDao.findByClusterId(host.getClusterId());\n \n         if (hostVOs != null) {\n             int numVags = 0;\n \n+            String clusterUuId = clusterDao.findById(host.getClusterId()).getUuid();\n+            SolidFireVag sfVagMatchingClusterId = sfVags.stream().filter(vag -> vag.getName().equals(\"CloudStack-\"+clusterUuId)).findFirst().orElse(null);\n+            if (sfVagMatchingClusterId != null && sfVagMatchingClusterId.getInitiators().length < MAX_NUM_INITIATORS_PER_VAG) {\n+                addInitiatorsToSolidFireVag(sfConnection, sfVagMatchingClusterId.getId(), new String[]{host.getStorageUrl()});\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d0ce73047b8fb9c18ddf1b97d147cfdd4ce982"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzNTUzMQ==", "bodyText": "\"Create cluster VAG if doesnt exist\", would make for a nice method name ;) CreateClusterVAGIfDoesntExist(); ;)", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r372335531", "createdAt": "2020-01-29T11:44:18Z", "author": {"login": "DaanHoogland"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -692,39 +699,63 @@ public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnect\n             throw new CloudRuntimeException(errMsg);\n         }\n \n+        // Get list of VAGs from solidfire\n         List<SolidFireUtil.SolidFireVag> sfVags = SolidFireUtil.getAllVags(sfConnection);\n \n-        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = new HashMap<>();\n+        // Populate vag to iqn(host) map\n+        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = buildVagtoIQNMap(hosts, sfVags);\n \n-        for (HostVO hostVO : hosts) {\n-            String iqn = hostVO.getStorageUrl();\n+        // throw exception if more than 4 VAGs\n+        if (sfVagToIqnsMap.size() > MAX_NUM_VAGS_PER_VOLUME) {\n+            throw new CloudRuntimeException(\"A SolidFire volume can be in at most four volume access groups simultaneously.\");\n+        }\n \n-            SolidFireUtil.SolidFireVag sfVag = getVolumeAccessGroup(iqn, sfVags);\n+        if (sfVagToIqnsMap.containsKey(null)) {\n \n-            List<String> iqnsInVag = sfVagToIqnsMap.computeIfAbsent(sfVag, k -> new ArrayList<>());\n+            //Check if cluster VAG exists\n+            SolidFireVag sfVagMatchingClusterId = sfVags.stream().filter(vag -> vag.getName().equals(\"CloudStack-\"+clusterUuId)).findFirst().orElse(null);\n \n-            iqnsInVag.add(iqn);\n-        }\n+            if (sfVagMatchingClusterId == null) {\n+                // Create cluster VAG if doesnt exist\n+                LOGGER.info(\"Creating volume access group CloudStack-\"+clusterUuId);\n+                SolidFireUtil.createVag(sfConnection, \"CloudStack-\"+clusterUuId, sfVagToIqnsMap.get(null).toArray(new String[0]), new long[] { sfVolumeId });\n+                sfVags = SolidFireUtil.getAllVags(sfConnection);\n+                sfVagMatchingClusterId = sfVags.stream().filter(vag -> vag.getName().equals(\"CloudStack-\"+clusterUuId)).findFirst().orElse(null);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d0ce73047b8fb9c18ddf1b97d147cfdd4ce982"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzNTg4Nw==", "bodyText": "This comment is a good reason to factor the next bit code out for cleanup.", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r372335887", "createdAt": "2020-01-29T11:45:11Z", "author": {"login": "DaanHoogland"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -692,39 +699,63 @@ public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnect\n             throw new CloudRuntimeException(errMsg);\n         }\n \n+        // Get list of VAGs from solidfire\n         List<SolidFireUtil.SolidFireVag> sfVags = SolidFireUtil.getAllVags(sfConnection);\n \n-        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = new HashMap<>();\n+        // Populate vag to iqn(host) map\n+        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = buildVagtoIQNMap(hosts, sfVags);\n \n-        for (HostVO hostVO : hosts) {\n-            String iqn = hostVO.getStorageUrl();\n+        // throw exception if more than 4 VAGs\n+        if (sfVagToIqnsMap.size() > MAX_NUM_VAGS_PER_VOLUME) {\n+            throw new CloudRuntimeException(\"A SolidFire volume can be in at most four volume access groups simultaneously.\");\n+        }\n \n-            SolidFireUtil.SolidFireVag sfVag = getVolumeAccessGroup(iqn, sfVags);\n+        if (sfVagToIqnsMap.containsKey(null)) {\n \n-            List<String> iqnsInVag = sfVagToIqnsMap.computeIfAbsent(sfVag, k -> new ArrayList<>());\n+            //Check if cluster VAG exists\n+            SolidFireVag sfVagMatchingClusterId = sfVags.stream().filter(vag -> vag.getName().equals(\"CloudStack-\"+clusterUuId)).findFirst().orElse(null);\n \n-            iqnsInVag.add(iqn);\n-        }\n+            if (sfVagMatchingClusterId == null) {\n+                // Create cluster VAG if doesnt exist\n+                LOGGER.info(\"Creating volume access group CloudStack-\"+clusterUuId);\n+                SolidFireUtil.createVag(sfConnection, \"CloudStack-\"+clusterUuId, sfVagToIqnsMap.get(null).toArray(new String[0]), new long[] { sfVolumeId });\n+                sfVags = SolidFireUtil.getAllVags(sfConnection);\n+                sfVagMatchingClusterId = sfVags.stream().filter(vag -> vag.getName().equals(\"CloudStack-\"+clusterUuId)).findFirst().orElse(null);\n+            }\n \n-        if (sfVagToIqnsMap.size() > MAX_NUM_VAGS_PER_VOLUME) {\n-            throw new CloudRuntimeException(\"A SolidFire volume can be in at most four volume access groups simultaneously.\");\n+            //update null entry in vag to IQN Map\n+            sfVagToIqnsMap.put(sfVagMatchingClusterId,sfVagToIqnsMap.get(null));\n+            sfVagToIqnsMap.remove(null);\n         }\n \n+\n+        // add volumeId to each VAG if not already present", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d0ce73047b8fb9c18ddf1b97d147cfdd4ce982"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM0MTA4NA==", "bodyText": "great name of method call below makes this comment obsolete", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r372341084", "createdAt": "2020-01-29T11:57:39Z", "author": {"login": "DaanHoogland"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -692,39 +699,63 @@ public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnect\n             throw new CloudRuntimeException(errMsg);\n         }\n \n+        // Get list of VAGs from solidfire\n         List<SolidFireUtil.SolidFireVag> sfVags = SolidFireUtil.getAllVags(sfConnection);\n \n-        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = new HashMap<>();\n+        // Populate vag to iqn(host) map", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d0ce73047b8fb9c18ddf1b97d147cfdd4ce982"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM0MzA2OQ==", "bodyText": "in this case the code below is more descriptive than the comment above.", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r372343069", "createdAt": "2020-01-29T12:02:20Z", "author": {"login": "DaanHoogland"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -692,39 +699,63 @@ public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnect\n             throw new CloudRuntimeException(errMsg);\n         }\n \n+        // Get list of VAGs from solidfire\n         List<SolidFireUtil.SolidFireVag> sfVags = SolidFireUtil.getAllVags(sfConnection);\n \n-        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = new HashMap<>();\n+        // Populate vag to iqn(host) map\n+        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = buildVagtoIQNMap(hosts, sfVags);\n \n-        for (HostVO hostVO : hosts) {\n-            String iqn = hostVO.getStorageUrl();\n+        // throw exception if more than 4 VAGs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99d0ce73047b8fb9c18ddf1b97d147cfdd4ce982"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f77ea000048071089222313ba23d95813a53b7b", "author": {"user": {"login": "skattoju4", "name": "Sid Kattoju"}}, "url": "https://github.com/apache/cloudstack/commit/9f77ea000048071089222313ba23d95813a53b7b", "committedDate": "2020-01-29T19:16:26Z", "message": "factor logic into methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTk0MTIw", "url": "https://github.com/apache/cloudstack/pull/3794#pullrequestreview-351194120", "createdAt": "2020-01-30T22:44:15Z", "commit": {"oid": "9f77ea000048071089222313ba23d95813a53b7b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMjo0NDoxNVrOFj8aRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMjo0NDoxNVrOFj8aRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIzNDI0NA==", "bodyText": "\"Voulumes\" should be \"Volumes\"", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r373234244", "createdAt": "2020-01-30T22:44:15Z", "author": {"login": "mike-tutkowski"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -683,19 +694,58 @@ private static SolidFireVag getVagForRandomHostInCluster(List<SolidFireUtil.Soli\n         return null;\n     }\n \n-    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts) {\n+    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts, String clusterUuId) {\n         if (!SolidFireUtil.hostsSupport_iScsi(hosts)) {\n             String errMsg = \"Not all hosts in the compute cluster support iSCSI.\";\n \n             LOGGER.warn(errMsg);\n \n             throw new CloudRuntimeException(errMsg);\n         }\n-\n         List<SolidFireUtil.SolidFireVag> sfVags = SolidFireUtil.getAllVags(sfConnection);\n+        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = buildVagToIQNMap(hosts, sfVags);\n+        if (sfVagToIqnsMap.size() > MAX_NUM_VAGS_PER_VOLUME) {\n+            throw new CloudRuntimeException(\"A SolidFire volume can be in at most four volume access groups simultaneously.\");\n+        }\n+        if (sfVagToIqnsMap.containsKey(null)) {\n+            sfVagToIqnsMap = updateNullKeyInsfVagToIqnsMap(sfVagToIqnsMap, sfVags, sfConnection, clusterUuId, sfVolumeId);\n+        }\n+        addVoulumestoVagIfNotPresent(sfVagToIqnsMap.keySet(), sfVolumeId, sfConnection);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f77ea000048071089222313ba23d95813a53b7b"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTk0Njkz", "url": "https://github.com/apache/cloudstack/pull/3794#pullrequestreview-351194693", "createdAt": "2020-01-30T22:45:30Z", "commit": {"oid": "9f77ea000048071089222313ba23d95813a53b7b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMjo0NTozMFrOFj8b5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMjo0NTozMFrOFj8b5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIzNDY2Mw==", "bodyText": "Do we want to pass in a List still if we can now retrieve that info from the cluster DAO using the cluster UUID?", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r373234663", "createdAt": "2020-01-30T22:45:30Z", "author": {"login": "mike-tutkowski"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -683,19 +694,58 @@ private static SolidFireVag getVagForRandomHostInCluster(List<SolidFireUtil.Soli\n         return null;\n     }\n \n-    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts) {\n+    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts, String clusterUuId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f77ea000048071089222313ba23d95813a53b7b"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTk1NjQx", "url": "https://github.com/apache/cloudstack/pull/3794#pullrequestreview-351195641", "createdAt": "2020-01-30T22:47:31Z", "commit": {"oid": "9f77ea000048071089222313ba23d95813a53b7b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMjo0NzozMVrOFj8ezA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMjo0NzozMVrOFj8ezA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIzNTQwNA==", "bodyText": "Might want to maintain camel case here:\n\"updateNullKeyInsfVagToIqnsMap\" -> \"updateNullKeyInSfVagToIqnsMap\"", "url": "https://github.com/apache/cloudstack/pull/3794#discussion_r373235404", "createdAt": "2020-01-30T22:47:31Z", "author": {"login": "mike-tutkowski"}, "path": "plugins/storage/volume/solidfire/src/main/java/org/apache/cloudstack/storage/datastore/util/SolidFireUtil.java", "diffHunk": "@@ -683,19 +694,58 @@ private static SolidFireVag getVagForRandomHostInCluster(List<SolidFireUtil.Soli\n         return null;\n     }\n \n-    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts) {\n+    public static void placeVolumeInVolumeAccessGroups(SolidFireConnection sfConnection, long sfVolumeId, List<HostVO> hosts, String clusterUuId) {\n         if (!SolidFireUtil.hostsSupport_iScsi(hosts)) {\n             String errMsg = \"Not all hosts in the compute cluster support iSCSI.\";\n \n             LOGGER.warn(errMsg);\n \n             throw new CloudRuntimeException(errMsg);\n         }\n-\n         List<SolidFireUtil.SolidFireVag> sfVags = SolidFireUtil.getAllVags(sfConnection);\n+        Map<SolidFireUtil.SolidFireVag, List<String>> sfVagToIqnsMap = buildVagToIQNMap(hosts, sfVags);\n+        if (sfVagToIqnsMap.size() > MAX_NUM_VAGS_PER_VOLUME) {\n+            throw new CloudRuntimeException(\"A SolidFire volume can be in at most four volume access groups simultaneously.\");\n+        }\n+        if (sfVagToIqnsMap.containsKey(null)) {\n+            sfVagToIqnsMap = updateNullKeyInsfVagToIqnsMap(sfVagToIqnsMap, sfVags, sfConnection, clusterUuId, sfVolumeId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f77ea000048071089222313ba23d95813a53b7b"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31cc8af1db475682ca9cffd42f647e776ba3f3e8", "author": {"user": {"login": "skattoju4", "name": "Sid Kattoju"}}, "url": "https://github.com/apache/cloudstack/commit/31cc8af1db475682ca9cffd42f647e776ba3f3e8", "committedDate": "2020-02-03T15:26:11Z", "message": "fix typo and camel case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6714714ca68677f6d452163325c6adb31460c6f", "author": {"user": {"login": "skattoju4", "name": "Sid Kattoju"}}, "url": "https://github.com/apache/cloudstack/commit/e6714714ca68677f6d452163325c6adb31460c6f", "committedDate": "2020-05-15T17:57:40Z", "message": "fix listing clusters by zone id"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3ODgyMTc4", "url": "https://github.com/apache/cloudstack/pull/3794#pullrequestreview-417882178", "createdAt": "2020-05-25T21:34:18Z", "commit": {"oid": "e6714714ca68677f6d452163325c6adb31460c6f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDc1OTQz", "url": "https://github.com/apache/cloudstack/pull/3794#pullrequestreview-421075943", "createdAt": "2020-05-29T15:49:46Z", "commit": {"oid": "e6714714ca68677f6d452163325c6adb31460c6f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4515, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}