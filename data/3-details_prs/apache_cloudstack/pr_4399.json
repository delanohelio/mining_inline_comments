{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMDI4NjY1", "number": 4399, "title": "PR multi tags in compute offering [#4398]", "bodyText": "Description\n\nonly changed HostDaoImpl.java to handle with comma separated multi host string\nold behavior with one tag works like the old implementation\n\nTypes of changes\n\n\n Breaking change (fix or feature that would cause existing functionality to change)\n New feature (non-breaking change which adds functionality)\n Bug fix (non-breaking change which fixes an issue)\n Enhancement (improves an existing feature and functionality)\n Cleanup (Code refactoring and cleanup, that may add test cases)\n\nHow Has This Been Tested?\nmanually tested (run cloudstack in my vmware environment)\nPR: #4399", "createdAt": "2020-10-13T06:42:42Z", "url": "https://github.com/apache/cloudstack/pull/4399", "merged": true, "mergeCommit": {"oid": "664a46a525847feeef2500c292c8f9e2a47337de"}, "closed": true, "closedAt": "2021-08-16T15:08:41Z", "author": {"login": "DK101010"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSCn9sAH2gAyNTAyMDI4NjY1OmFiNGViOWI5NGQ1OTBmY2JhZTk4OTE2YjYwNjhmY2FiMTcwZjMxNzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABe0-BkugFqTczMDgyODg0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ab4eb9b94d590fcbae98916b6068fcab170f3177", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/ab4eb9b94d590fcbae98916b6068fcab170f3177", "committedDate": "2020-10-13T06:31:20Z", "message": "[#4398] adapt code to handle multi tag string with commas"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NDY5MDUy", "url": "https://github.com/apache/cloudstack/pull/4399#pullrequestreview-507469052", "createdAt": "2020-10-13T14:01:27Z", "commit": {"oid": "ab4eb9b94d590fcbae98916b6068fcab170f3177"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDowMToyOFrOHgoVtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDowMjoxMlrOHgoX2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3NzM5OA==", "bodyText": "trailing white spce on these lines\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        while (rs.next()) {     \n          \n          \n            \n                            result.add(rs.getLong(1));             \n          \n          \n            \n                        }        \n          \n          \n            \n                        while (rs.next()) {\n          \n          \n            \n                            result.add(rs.getLong(1));\n          \n          \n            \n                        }", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r503977398", "createdAt": "2020-10-13T14:01:28Z", "author": {"login": "DaanHoogland"}, "path": "engine/schema/src/main/java/com/cloud/host/dao/HostDaoImpl.java", "diffHunk": "@@ -1147,27 +1155,68 @@ public HostVO findByIp(final String ipAddress) {\n     }\n \n     @Override\n-    public List<Long> listClustersByHostTag(String hostTagOnOffering) {\n+    public List<Long> listClustersByHostTag(String computeOfferingTags) {\n         TransactionLegacy txn = TransactionLegacy.currentTxn();\n+        String sql = this.LIST_CLUSTERID_FOR_HOST_TAG;\n         PreparedStatement pstmt = null;\n-        List<Long> result = new ArrayList<Long>();\n-        StringBuilder sql = new StringBuilder(LIST_CLUSTERID_FOR_HOST_TAG);\n-        // during listing the clusters that cross the threshold\n-        // we need to check with disabled thresholds of each cluster if not defined at cluster consider the global value\n+        List<Long> result = new ArrayList();\n+        List<String> tags = Arrays.asList(computeOfferingTags.split(this.SEPARATOR));\n+        String subselect = getHostIdsByComputeTags(tags);\n+        sql = String.format(sql, subselect);\n+        \n         try {\n-            pstmt = txn.prepareAutoCloseStatement(sql.toString());\n-            pstmt.setString(1, hostTagOnOffering);\n+            pstmt = txn.prepareStatement(sql);\n+            \n+            for(int i = 0; i < tags.size(); i++){\n+                pstmt.setString(i+1, tags.get(i));\n+            }\n+            //pstmt = txn.prepareAutoCloseStatement();\n             ResultSet rs = pstmt.executeQuery();\n-            while (rs.next()) {\n-                result.add(rs.getLong(1));\n+            while (rs.next()) {     \n+                result.add(rs.getLong(1));             \n+            }        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab4eb9b94d590fcbae98916b6068fcab170f3177"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3Nzk0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        while (rs.next()) {     \n          \n          \n            \n                            result.add(rs.getLong(1));             \n          \n          \n            \n                        while (rs.next()) {\n          \n          \n            \n                            result.add(rs.getLong(1));", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r503977946", "createdAt": "2020-10-13T14:02:12Z", "author": {"login": "DaanHoogland"}, "path": "engine/schema/src/main/java/com/cloud/host/dao/HostDaoImpl.java", "diffHunk": "@@ -1147,27 +1155,68 @@ public HostVO findByIp(final String ipAddress) {\n     }\n \n     @Override\n-    public List<Long> listClustersByHostTag(String hostTagOnOffering) {\n+    public List<Long> listClustersByHostTag(String computeOfferingTags) {\n         TransactionLegacy txn = TransactionLegacy.currentTxn();\n+        String sql = this.LIST_CLUSTERID_FOR_HOST_TAG;\n         PreparedStatement pstmt = null;\n-        List<Long> result = new ArrayList<Long>();\n-        StringBuilder sql = new StringBuilder(LIST_CLUSTERID_FOR_HOST_TAG);\n-        // during listing the clusters that cross the threshold\n-        // we need to check with disabled thresholds of each cluster if not defined at cluster consider the global value\n+        List<Long> result = new ArrayList();\n+        List<String> tags = Arrays.asList(computeOfferingTags.split(this.SEPARATOR));\n+        String subselect = getHostIdsByComputeTags(tags);\n+        sql = String.format(sql, subselect);\n+        \n         try {\n-            pstmt = txn.prepareAutoCloseStatement(sql.toString());\n-            pstmt.setString(1, hostTagOnOffering);\n+            pstmt = txn.prepareStatement(sql);\n+            \n+            for(int i = 0; i < tags.size(); i++){\n+                pstmt.setString(i+1, tags.get(i));\n+            }\n+            //pstmt = txn.prepareAutoCloseStatement();\n             ResultSet rs = pstmt.executeQuery();\n-            while (rs.next()) {\n-                result.add(rs.getLong(1));\n+            while (rs.next()) {     \n+                result.add(rs.getLong(1));             \n+            }        \n+            pstmt.close();\n+            if(result.isEmpty()){\n+                throw new CloudRuntimeException(\"No suitable host found for follow compute offering tags: \" + computeOfferingTags);\n             }\n             return result;\n         } catch (SQLException e) {\n             throw new CloudRuntimeException(\"DB Exception on: \" + sql, e);\n-        } catch (Throwable e) {\n-            throw new CloudRuntimeException(\"Caught: \" + sql, e);\n         }\n     }\n+    \n+    private List<Long> findHostByComputeOfferings(String computeOfferingTags){\n+        TransactionLegacy txn = TransactionLegacy.currentTxn();\n+        PreparedStatement pstmt = null;\n+        List<Long> result = new ArrayList();\n+        List<String> tags = Arrays.asList(computeOfferingTags.split(this.SEPARATOR));\n+        String select = getHostIdsByComputeTags(tags);\n+        try {\n+            pstmt = txn.prepareStatement(select);\n+            \n+            for(int i = 0; i < tags.size(); i++){\n+                pstmt.setString(i+1, tags.get(i));\n+            }\n+            \n+            ResultSet rs = pstmt.executeQuery();\n+            while (rs.next()) {     \n+                result.add(rs.getLong(1));             ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab4eb9b94d590fcbae98916b6068fcab170f3177"}, "originalPosition": 124}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2957af8beabfb826ded102c6a8c7f07b551ba237", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/2957af8beabfb826ded102c6a8c7f07b551ba237", "committedDate": "2020-10-14T07:37:15Z", "message": "[#4398] remove trailing spaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c43684cda8b0784334aef5c4db7f3d3927cd763a", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/c43684cda8b0784334aef5c4db7f3d3927cd763a", "committedDate": "2020-11-12T11:22:49Z", "message": "[#4398] add multi host tag support for ingest process"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "611fc43e1d9a9dea186e7e3adfd17cd7ae01390f", "author": {"user": {"login": "DK101010", "name": null}}, "url": "https://github.com/apache/cloudstack/commit/611fc43e1d9a9dea186e7e3adfd17cd7ae01390f", "committedDate": "2020-11-16T15:18:35Z", "message": "Merge pull request #1 from apache/master\n\nUpdate Fork"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea3072fb95ebb48868f8e27a5eeea5b9804654fc", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/ea3072fb95ebb48868f8e27a5eeea5b9804654fc", "committedDate": "2020-11-16T15:21:22Z", "message": "Merge branch 'master' into feat/multihost_tag_support_compute_offerings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c93714110bff328abb5d1c2a70e9e9712cb88fc", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/4c93714110bff328abb5d1c2a70e9e9712cb88fc", "committedDate": "2020-12-04T12:35:41Z", "message": "[#4398] add test for multi tag support in offerings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3a709cec78cd83b3b10afc07453ca25722a1bc5", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/f3a709cec78cd83b3b10afc07453ca25722a1bc5", "committedDate": "2020-12-09T14:13:52Z", "message": "[#4398]  update multitag support for DeploymentPlanningManagerImpl\n\nencapsulate multi tag check from Ingest Feature, DepolymentPlanningManager into\nHostDaoImpl to prevent code duplicates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4OTUzODQ0", "url": "https://github.com/apache/cloudstack/pull/4399#pullrequestreview-548953844", "createdAt": "2020-12-10T08:30:39Z", "commit": {"oid": "f3a709cec78cd83b3b10afc07453ca25722a1bc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwODozMDozOVrOIC9KnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwODozMDozOVrOIC9KnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk3MDIwNQ==", "bodyText": "trying to isolate this check is fine but the DAO is for DB interaction, and this is really business logic. personally I would make it a default method for the Host interface, but a member of HostVO could also be.\nCan you (shortly) explain why you put it here, @DK101010 ?", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r539970205", "createdAt": "2020-12-10T08:30:39Z", "author": {"login": "DaanHoogland"}, "path": "engine/schema/src/main/java/com/cloud/host/dao/HostDaoImpl.java", "diffHunk": "@@ -480,6 +482,25 @@ public Integer countAllByTypeInZone(long zoneId, Type type) {\n         return listBy(sc);\n     }\n \n+    @Override\n+    public boolean checkHostServiceOfferingTags(HostVO host, ServiceOffering serviceOffering){\n+        if (host == null) {\n+            return false;\n+        }\n+        if (serviceOffering == null) {\n+            return false;\n+        }\n+        if (Strings.isNullOrEmpty(serviceOffering.getHostTag())) {\n+            return true;\n+        }\n+\n+        List<String> serviceOfferingTags = Arrays.asList(serviceOffering.getHostTag().split(\",\"));\n+        if(host.getHostTags() != null && host.getHostTags().containsAll(serviceOfferingTags)){\n+            return true;\n+        }\n+        return false;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a709cec78cd83b3b10afc07453ca25722a1bc5"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a652c6a435784538dc7cb1c073a1ef602b2352f7", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/a652c6a435784538dc7cb1c073a1ef602b2352f7", "committedDate": "2020-12-14T12:55:49Z", "message": "[#4398] move logic to HostVO and add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "562818a48804e8d170d5d9816123da9173caef50", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/562818a48804e8d170d5d9816123da9173caef50", "committedDate": "2020-12-14T13:01:31Z", "message": "rename test method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMzg3Mzcx", "url": "https://github.com/apache/cloudstack/pull/4399#pullrequestreview-551387371", "createdAt": "2020-12-14T13:55:11Z", "commit": {"oid": "562818a48804e8d170d5d9816123da9173caef50"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMzo1NToxMlrOIFRivw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMzo1NToxMlrOIFRivw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQwMTIxNQ==", "bodyText": "sorry to keep nagging you, but we have a string utils proxy class in place. It has an isEmpty() that does the same check. if for some reason you need this one anyway , please add it there if the functioonality doesn't suffice.", "url": "https://github.com/apache/cloudstack/pull/4399#discussion_r542401215", "createdAt": "2020-12-14T13:55:12Z", "author": {"login": "DaanHoogland"}, "path": "engine/schema/src/main/java/com/cloud/host/HostVO.java", "diffHunk": "@@ -740,6 +743,18 @@ public void setUuid(String uuid) {\n         this.uuid = uuid;\n     }\n \n+    public boolean checkHostServiceOfferingTags(ServiceOffering serviceOffering){\n+        if (serviceOffering == null) {\n+            return false;\n+        }\n+        if (Strings.isNullOrEmpty(serviceOffering.getHostTag())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "562818a48804e8d170d5d9816123da9173caef50"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b3255996d45cb20f368e62e8019fb7ed6ec3f04", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/8b3255996d45cb20f368e62e8019fb7ed6ec3f04", "committedDate": "2020-12-14T14:30:51Z", "message": "[#4398] Change string method to apaches StringUtils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f54380b520cacbf91bf22d396769816a0ad73cdf", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/f54380b520cacbf91bf22d396769816a0ad73cdf", "committedDate": "2020-12-15T13:16:03Z", "message": "[#4398] modify test for multi tag support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNDM3OTY1", "url": "https://github.com/apache/cloudstack/pull/4399#pullrequestreview-553437965", "createdAt": "2020-12-16T08:05:49Z", "commit": {"oid": "f54380b520cacbf91bf22d396769816a0ad73cdf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEyNDUxNTYx", "url": "https://github.com/apache/cloudstack/pull/4399#pullrequestreview-712451561", "createdAt": "2021-07-22T07:49:22Z", "commit": {"oid": "f54380b520cacbf91bf22d396769816a0ad73cdf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8258de08ebf160e8ee6d8798d726a3c43e32f258", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/8258de08ebf160e8ee6d8798d726a3c43e32f258", "committedDate": "2021-08-02T07:13:17Z", "message": "adapt sql for double tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ad259d45abf48c4578769214651ac79211f8af1", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/4ad259d45abf48c4578769214651ac79211f8af1", "committedDate": "2021-08-04T06:59:45Z", "message": "merge main"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzIyMTk5MTIw", "url": "https://github.com/apache/cloudstack/pull/4399#pullrequestreview-722199120", "createdAt": "2021-08-04T12:05:37Z", "commit": {"oid": "4ad259d45abf48c4578769214651ac79211f8af1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMwODI4ODQ4", "url": "https://github.com/apache/cloudstack/pull/4399#pullrequestreview-730828848", "createdAt": "2021-08-16T15:08:17Z", "commit": {"oid": "4ad259d45abf48c4578769214651ac79211f8af1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4691, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}