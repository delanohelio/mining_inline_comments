{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MTU1MjM3", "number": 4294, "title": "Create template from detached data-disks on VMWare", "bodyText": "Description\nCreation of templates from detached data disks results in a Null Pointer Exception on VMWare, as it expects the volume to be attached to a VM.\nTo fix this behavior and make it consistent with other hypervisors, creation of the template from the volume in case not attached to a VM is facilitated by creating a worker VM, attaching the disk to the worker VM, creating the template from it, and then destroying the VM.\nSteps to reproduce the issue:\n\nCreate / Upload a volume\nAttach the volume to a VM\nDetach the volume\nInitiate template creation from the volume\n\nFails with following exception:\n2020-08-14 07:05:00,157 DEBUG [c.c.r.ResourceLimitManagerImpl] (API-Job-Executor-15:ctx-691a4a4c job-86 ctx-54b7bef5) (logid:4a57991e) Updating resource Type = template count for Account = 2 Operation = decreasing Amount = 1\n2020-08-14 07:05:00,159 DEBUG [c.c.r.ResourceLimitManagerImpl] (API-Job-Executor-15:ctx-691a4a4c job-86 ctx-54b7bef5) (logid:4a57991e) Updating resource Type = secondary_storage count for Account = 2 Operation = decreasing Amount = (5.00 GB) 5368709120\n2020-08-14 07:05:00,168 ERROR [c.c.a.ApiAsyncJobDispatcher] (API-Job-Executor-15:ctx-691a4a4c job-86) (logid:4a57991e) Unexpected exception while executing org.apache.cloudstack.api.command.admin.template.CreateTemplateCmdByAdmin\ncom.cloud.utils.exception.CloudRuntimeException: Failed to create templatecreate template from volume exception: Exception: java.lang.NullPointerException\nMessage: null\n\n    at com.cloud.template.TemplateManagerImpl.createPrivateTemplate(TemplateManagerImpl.java:1699)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.base/java.lang.reflect.Method.invoke(Method.java:566)\n    at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n    at org.apache.cloudstack.network.contrail.management.EventUtils$EventInterceptor.invoke(EventUtils.java:107)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n    at com.cloud.event.ActionEventInterceptor.invoke(ActionEventInterceptor.java:51)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n    at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n    at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)\n    at com.sun.proxy.$Proxy197.createPrivateTemplate(Unknown Source)\n    at org.apache.cloudstack.api.command.user.template.CreateTemplateCmd.execute(CreateTemplateCmd.java:305)\n    at com.cloud.api.ApiDispatcher.dispatch(ApiDispatcher.java:156)\n    at com.cloud.api.ApiAsyncJobDispatcher.runJob(ApiAsyncJobDispatcher.java:108)\n    at org.apache.cloudstack.framework.jobs.impl.AsyncJobManagerImpl$5.runInContext(AsyncJobManagerImpl.java:615)\n    at org.apache.cloudstack.managed.context.ManagedContextRunnable$1.run(ManagedContextRunnable.java:48)\n    at org.apache.cloudstack.managed.context.impl.DefaultManagedContext$1.call(DefaultManagedContext.java:55)\n    at org.apache.cloudstack.managed.context.impl.DefaultManagedContext.callWithContext(DefaultManagedContext.java:102)\n    at org.apache.cloudstack.managed.context.impl.DefaultManagedContext.runWithContext(DefaultManagedContext.java:52)\n    at org.apache.cloudstack.managed.context.ManagedContextRunnable.run(ManagedContextRunnable.java:45)\n    at org.apache.cloudstack.framework.jobs.impl.AsyncJobManagerImpl$5.run(AsyncJobManagerImpl.java:563)\n    at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n    at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n    at java.base/java.lang.Thread.run(Thread.java:834)\n2020-08-14 07:05:00,172 DEBUG [o.a.c.f.j.i.AsyncJobManagerImpl] (API-Job-Executor-15:ctx-691a4a4c job-86) (logid:4a57991e) Complete async job-86, jobStatus: FAILED, resultCode: 530, result: org.apache.cloudstack.api.response.ExceptionResponse/null/{\"uuidList\":[],\"errorcode\":\"530\",\"errortext\":\"Failed to create templatecreate template from volume exception: Exception: java.lang.NullPointerException\nMessage: null\n\"}\n\nSSVM logs:\n2020-08-21 05:07:00,160 INFO  [vmware.mo.HostMO] (agentRequest-Handler-10:job-417, cmd: CopyCommand) VM null not found in host cache\n2020-08-21 05:07:00,230 ERROR [storage.resource.VmwareStorageProcessor] (agentRequest-Handler-10:job-417, cmd: CopyCommand) Unexpecpted exception\njava.lang.NullPointerException\n        at com.cloud.hypervisor.vmware.mo.HypervisorHostHelper.findVmFromObjectContent(HypervisorHostHelper.java:160)\n        at com.cloud.hypervisor.vmware.mo.ClusterMO.findVmOnHyperHost(ClusterMO.java:242)\n        at com.cloud.hypervisor.vmware.mo.HostMO.findVmOnPeerHyperHost(HostMO.java:591)\n        at com.cloud.storage.resource.VmwareStorageProcessor.createTemplateFromVolume(VmwareStorageProcessor.java:1209)\n        at com.cloud.storage.resource.StorageSubsystemCommandHandlerBase.execute(StorageSubsystemCommandHandlerBase.java:107)\n        at com.cloud.storage.resource.VmwareStorageSubsystemCommandHandler.execute(VmwareStorageSubsystemCommandHandler.java:197)\n        at com.cloud.storage.resource.StorageSubsystemCommandHandlerBase.handleStorageCommands(StorageSubsystemCommandHandlerBase.java:58)\n        at com.cloud.storage.resource.VmwareSecondaryStorageResourceHandler.executeRequest(VmwareSecondaryStorageResourceHandler.java:115)\n        at com.cloud.storage.resource.PremiumSecondaryStorageResource.executeRequest(PremiumSecondaryStorageResource.java:57)\n        at com.cloud.agent.Agent.processRequest(Agent.java:645)\n        at com.cloud.agent.Agent$AgentRequestHandler.doTask(Agent.java:1060)\n\n\n\n\nTypes of changes\n\n\n Breaking change (fix or feature that would cause existing functionality to change)\n New feature (non-breaking change which adds functionality)\n Bug fix (non-breaking change which fixes an issue)\n Enhancement (improves an existing feature and functionality)\n Cleanup (Code refactoring and cleanup, that may add test cases)\n\nHow Has This Been Tested?\nTested by following the above steps mentioned (for reproducing the error) and resulted in successful creation of template from the detached volume. Also tested creation of template of Root volume of a stopped VM, to ensure no regression.", "createdAt": "2020-08-28T06:23:23Z", "url": "https://github.com/apache/cloudstack/pull/4294", "merged": true, "mergeCommit": {"oid": "90e72b1e408fa3a398de795a1cced4ff37f2be20"}, "closed": true, "closedAt": "2020-09-18T02:55:17Z", "author": {"login": "Pearl1594"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDOyyQgH2gAyNDc1MTU1MjM3OjVmNjYxOTRkMjg0Y2UwNGE2MzcyOTExMmJmOTZmN2RlMjE1YTUxYjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJpM_XgH2gAyNDc1MTU1MjM3Ojg1Mjc0NjE0ZWMwMGViZTdlNGUwMjY3NTY3ZjVmMDYxNjdhNWNlMjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5f66194d284ce04a63729112bf96f7de215a51b8", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/5f66194d284ce04a63729112bf96f7de215a51b8", "committedDate": "2020-08-28T06:13:09Z", "message": "Create template from detached data-disks on VMWare"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3Mjc1MTc0", "url": "https://github.com/apache/cloudstack/pull/4294#pullrequestreview-477275174", "createdAt": "2020-08-28T06:32:14Z", "commit": {"oid": "5f66194d284ce04a63729112bf96f7de215a51b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNjozMjoxNFrOHIrPaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNjozMjoxNFrOHIrPaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg1OTExMg==", "bodyText": "@Pearl1594 where are we destroying the worker VM?", "url": "https://github.com/apache/cloudstack/pull/4294#discussion_r478859112", "createdAt": "2020-08-28T06:32:14Z", "author": {"login": "rhtyd"}, "path": "plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java", "diffHunk": "@@ -1186,31 +1186,42 @@ public Answer createTemplateFromVolume(CopyCommand cmd) {\n         String volumePath = volume.getPath();\n \n         String details = null;\n-\n+        VirtualMachineMO vmMo = null;\n         VmwareContext context = hostService.getServiceContext(cmd);\n         try {\n             VmwareHypervisorHost hyperHost = hostService.getHyperHost(context, cmd);\n-\n-            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(volume.getVmName());\n-            if (vmMo == null) {\n-                if (s_logger.isDebugEnabled()) {\n-                    s_logger.debug(\"Unable to find the owner VM for CreatePrivateTemplateFromVolumeCommand on host \" + hyperHost.getHyperHostName() +\n-                            \", try within datacenter\");\n-                }\n-                vmMo = hyperHost.findVmOnPeerHyperHost(volume.getVmName());\n-\n+            if (volume.getVmName() == null) {\n+                ManagedObjectReference secMorDs = HypervisorHostHelper.findDatastoreWithBackwardsCompatibility(hyperHost, volume.getDataStore().getUuid());\n+                DatastoreMO dsMo = new DatastoreMO(hyperHost.getContext(), secMorDs);\n+                VirtualMachineMO workerVmMo = HypervisorHostHelper.createWorkerVM(hyperHost, dsMo, \"workervm\"+volume.getUuid());\n+                if (workerVmMo == null) {\n+                    throw new Exception(\"Unable to find created worker VM\");\n+                }\n+                vmMo = workerVmMo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f66194d284ce04a63729112bf96f7de215a51b8"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3Mjc1NDk3", "url": "https://github.com/apache/cloudstack/pull/4294#pullrequestreview-477275497", "createdAt": "2020-08-28T06:32:57Z", "commit": {"oid": "5f66194d284ce04a63729112bf96f7de215a51b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNjozMjo1N1rOHIrQVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNjozMjo1N1rOHIrQVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg1OTM0OA==", "bodyText": "Ah nevermind, worker VM will be destroyed here. Should we explictly set workerVmMo above and use that to destroy in finally? To avoid any regressions?", "url": "https://github.com/apache/cloudstack/pull/4294#discussion_r478859348", "createdAt": "2020-08-28T06:32:57Z", "author": {"login": "rhtyd"}, "path": "plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java", "diffHunk": "@@ -1234,6 +1245,15 @@ public Answer createTemplateFromVolume(CopyCommand cmd) {\n \n             details = \"create template from volume exception: \" + VmwareHelper.getExceptionMessage(e);\n             return new CopyCmdAnswer(details);\n+        } finally {\n+            try {\n+                if (volume.getVmName() == null && vmMo != null) {\n+                    vmMo.detachAllDisks();\n+                    vmMo.destroy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f66194d284ce04a63729112bf96f7de215a51b8"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3Mjc1Njg3", "url": "https://github.com/apache/cloudstack/pull/4294#pullrequestreview-477275687", "createdAt": "2020-08-28T06:33:20Z", "commit": {"oid": "5f66194d284ce04a63729112bf96f7de215a51b8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f02268844edea9cd8dc1de357730a977912d8fdb", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/f02268844edea9cd8dc1de357730a977912d8fdb", "committedDate": "2020-08-28T07:45:53Z", "message": "Refactor code - delete workerVM"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NTgyNjE3", "url": "https://github.com/apache/cloudstack/pull/4294#pullrequestreview-477582617", "createdAt": "2020-08-28T09:27:49Z", "commit": {"oid": "f02268844edea9cd8dc1de357730a977912d8fdb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDYxOTI3", "url": "https://github.com/apache/cloudstack/pull/4294#pullrequestreview-488461927", "createdAt": "2020-09-15T08:46:58Z", "commit": {"oid": "f02268844edea9cd8dc1de357730a977912d8fdb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo0Njo1OFrOHR3YOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo0Njo1OFrOHR3YOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5NTE2Mg==", "bodyText": "@Pearl1594 will it be better to log the exception here as it could be during detach operation as well?", "url": "https://github.com/apache/cloudstack/pull/4294#discussion_r488495162", "createdAt": "2020-09-15T08:46:58Z", "author": {"login": "shwstppr"}, "path": "plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java", "diffHunk": "@@ -1234,6 +1246,15 @@ public Answer createTemplateFromVolume(CopyCommand cmd) {\n \n             details = \"create template from volume exception: \" + VmwareHelper.getExceptionMessage(e);\n             return new CopyCmdAnswer(details);\n+        } finally {\n+            try {\n+                if (volume.getVmName() == null && workerVmMo != null) {\n+                    workerVmMo.detachAllDisks();\n+                    workerVmMo.destroy();\n+                }\n+            } catch (Throwable e) {\n+                s_logger.warn(\"Failed to destroy worker VM created for detached volume\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f02268844edea9cd8dc1de357730a977912d8fdb"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDY4MDA5", "url": "https://github.com/apache/cloudstack/pull/4294#pullrequestreview-488468009", "createdAt": "2020-09-15T08:54:19Z", "commit": {"oid": "f02268844edea9cd8dc1de357730a977912d8fdb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1NDoyMFrOHR3qjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1NDoyMFrOHR3qjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5OTg1Mg==", "bodyText": "Don't think it matters where we find the VM on datacenter but it is fine unless we want to lot of refactoring", "url": "https://github.com/apache/cloudstack/pull/4294#discussion_r488499852", "createdAt": "2020-09-15T08:54:20Z", "author": {"login": "shwstppr"}, "path": "plugins/hypervisors/vmware/src/main/java/com/cloud/storage/resource/VmwareStorageProcessor.java", "diffHunk": "@@ -1186,31 +1186,43 @@ public Answer createTemplateFromVolume(CopyCommand cmd) {\n         String volumePath = volume.getPath();\n \n         String details = null;\n-\n+        VirtualMachineMO vmMo = null;\n+        VirtualMachineMO workerVmMo = null;\n         VmwareContext context = hostService.getServiceContext(cmd);\n         try {\n             VmwareHypervisorHost hyperHost = hostService.getHyperHost(context, cmd);\n-\n-            VirtualMachineMO vmMo = hyperHost.findVmOnHyperHost(volume.getVmName());\n-            if (vmMo == null) {\n-                if (s_logger.isDebugEnabled()) {\n-                    s_logger.debug(\"Unable to find the owner VM for CreatePrivateTemplateFromVolumeCommand on host \" + hyperHost.getHyperHostName() +\n-                            \", try within datacenter\");\n-                }\n-                vmMo = hyperHost.findVmOnPeerHyperHost(volume.getVmName());\n-\n+            if (volume.getVmName() == null) {\n+                ManagedObjectReference secMorDs = HypervisorHostHelper.findDatastoreWithBackwardsCompatibility(hyperHost, volume.getDataStore().getUuid());\n+                DatastoreMO dsMo = new DatastoreMO(hyperHost.getContext(), secMorDs);\n+                workerVmMo = HypervisorHostHelper.createWorkerVM(hyperHost, dsMo, \"workervm\"+volume.getUuid());\n+                if (workerVmMo == null) {\n+                    throw new Exception(\"Unable to find created worker VM\");\n+                }\n+                vmMo = workerVmMo;\n+                String vmdkDataStorePath = VmwareStorageLayoutHelper.getLegacyDatastorePathFromVmdkFileName(dsMo, volumePath + \".vmdk\");\n+                vmMo.attachDisk(new String[] {vmdkDataStorePath}, secMorDs);\n+            } else {\n+                vmMo = hyperHost.findVmOnHyperHost(volume.getVmName());\n                 if (vmMo == null) {\n-                    // This means either the volume is on a zone wide storage pool or VM is deleted by external entity.\n-                    // Look for the VM in the datacenter.\n-                    ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n-                    DatacenterMO dcMo = new DatacenterMO(context, dcMor);\n-                    vmMo = dcMo.findVm(volume.getVmName());\n-                }\n+                    if (s_logger.isDebugEnabled()) {\n+                        s_logger.debug(\"Unable to find the owner VM for CreatePrivateTemplateFromVolumeCommand on host \" + hyperHost.getHyperHostName() +\n+                                \", try within datacenter\");\n+                    }\n+                    vmMo = hyperHost.findVmOnPeerHyperHost(volume.getVmName());\n \n-                if (vmMo == null) {\n-                    String msg = \"Unable to find the owner VM for volume operation. vm: \" + volume.getVmName();\n-                    s_logger.error(msg);\n-                    throw new Exception(msg);\n+                    if (vmMo == null) {\n+                        // This means either the volume is on a zone wide storage pool or VM is deleted by external entity.\n+                        // Look for the VM in the datacenter.\n+                        ManagedObjectReference dcMor = hyperHost.getHyperHostDatacenter();\n+                        DatacenterMO dcMo = new DatacenterMO(context, dcMor);\n+                        vmMo = dcMo.findVm(volume.getVmName());\n+                    }\n+\n+                    if (vmMo == null) {\n+                        String msg = \"Unable to find the owner VM for volume operation. vm: \" + volume.getVmName();\n+                        s_logger.error(msg);\n+                        throw new Exception(msg);\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f02268844edea9cd8dc1de357730a977912d8fdb"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDY4MzAz", "url": "https://github.com/apache/cloudstack/pull/4294#pullrequestreview-488468303", "createdAt": "2020-09-15T08:54:41Z", "commit": {"oid": "f02268844edea9cd8dc1de357730a977912d8fdb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "259d21f2055c51f886976b73ea38a1381c995c9e", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/259d21f2055c51f886976b73ea38a1381c995c9e", "committedDate": "2020-09-17T04:21:10Z", "message": "Merge branch 'master' of https://github.com/apache/cloudstack into template_detachedDisks_vmware"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85274614ec00ebe7e4e0267567f5f06167a5ce22", "author": {"user": null}, "url": "https://github.com/apache/cloudstack/commit/85274614ec00ebe7e4e0267567f5f06167a5ce22", "committedDate": "2020-09-17T04:22:51Z", "message": "Changed log level from warn to error"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4089, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}