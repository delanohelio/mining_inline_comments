{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0MzYxOTU2", "number": 4522, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjoyMToxNVrOFCTEIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwNzoyNTowOVrOFEWjFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3OTUzODI0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjoyMToxNVrOIBXi_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxMjoyMToxNVrOIBXi_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODMwNTI3OQ==", "bodyText": "is a good check but i'd like to see it in a separate method.", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r538305279", "createdAt": "2020-12-08T12:21:15Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2198,6 +2202,21 @@ private VMTemplateVO updateTemplateOrIso(BaseUpdateTemplateOrIsoCmd cmd) {\n             template.setDynamicallyScalable(isDynamicallyScalable);\n         }\n \n+        if (templateType != null && templateType == TemplateType.SYSTEM) {\n+            s_logger.info(\"Copying template to all zones since it will be a system template\");\n+            List<DataCenterVO> zones = _dcDao.listEnabledZones();\n+            if (zones != null) {\n+                List<Long> zoneIds = zones.stream().map(zone -> zone.getId()).collect(Collectors.toList());\n+                try {\n+                    copyTemplate(id, null, zoneIds);\n+                } catch (StorageUnavailableException e) {\n+                    throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);\n+                } catch (ResourceAllocationException e) {\n+                    throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665e951af007023537436ca53354371de9489fb0"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MDQ3NjQ1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNDo1MToxOFrOIBg1_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTo0NDo1MVrOIBkgCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ1NzU5OA==", "bodyText": "Should we skip the zone on which the template is already in?", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r538457598", "createdAt": "2020-12-08T14:51:18Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2224,6 +2232,21 @@ else if (details != null && !details.isEmpty()) {\n         return _tmpltDao.findById(id);\n     }\n \n+    private void copyTemplateToAllZones(Long id) {\n+        s_logger.info(\"Copying template to all zones since it will be a system template\");\n+        List<DataCenterVO> zones = _dcDao.listEnabledZones();\n+        if (zones != null) {\n+            List<Long> zoneIds = zones.stream().map(zone -> zone.getId()).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c59d0c82137f2294c67d4dd77dd1f4a69b2edb09"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxNzUxNQ==", "bodyText": "this seems to be handled by \n  \n    \n      cloudstack/server/src/main/java/com/cloud/template/TemplateManagerImpl.java\n    \n    \n        Lines 931 to 936\n      in\n      c59d0c8\n    \n    \n    \n    \n\n        \n          \n           DataStore dstSecStore = getImageStore(destZoneId, templateId); \n        \n\n        \n          \n           if (dstSecStore != null) { \n        \n\n        \n          \n               s_logger.debug(\"There is template \" + templateId + \" in secondary storage \" + dstSecStore.getName() + \n        \n\n        \n          \n                       \" in zone \" + destZoneId + \" , don't need to copy\"); \n        \n\n        \n          \n               continue; \n        \n\n        \n          \n           }", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r538517515", "createdAt": "2020-12-08T15:44:51Z", "author": {"login": "weizhouapache"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2224,6 +2232,21 @@ else if (details != null && !details.isEmpty()) {\n         return _tmpltDao.findById(id);\n     }\n \n+    private void copyTemplateToAllZones(Long id) {\n+        s_logger.info(\"Copying template to all zones since it will be a system template\");\n+        List<DataCenterVO> zones = _dcDao.listEnabledZones();\n+        if (zones != null) {\n+            List<Long> zoneIds = zones.stream().map(zone -> zone.getId()).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ1NzU5OA=="}, "originalCommit": {"oid": "c59d0c82137f2294c67d4dd77dd1f4a69b2edb09"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MDQ3ODEzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNDo1MTozMlrOIBg27w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNDo1MTozMlrOIBg27w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ1NzgzOQ==", "bodyText": "Better to display the template name?", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r538457839", "createdAt": "2020-12-08T14:51:32Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2224,6 +2232,21 @@ else if (details != null && !details.isEmpty()) {\n         return _tmpltDao.findById(id);\n     }\n \n+    private void copyTemplateToAllZones(Long id) {\n+        s_logger.info(\"Copying template to all zones since it will be a system template\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c59d0c82137f2294c67d4dd77dd1f4a69b2edb09"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MDQ4NDk0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNDo1MjozNFrOIBg7Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNDo1MjozNFrOIBg7Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ1ODk3MA==", "bodyText": "Extract the message to string?", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r538458970", "createdAt": "2020-12-08T14:52:34Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2224,6 +2232,21 @@ else if (details != null && !details.isEmpty()) {\n         return _tmpltDao.findById(id);\n     }\n \n+    private void copyTemplateToAllZones(Long id) {\n+        s_logger.info(\"Copying template to all zones since it will be a system template\");\n+        List<DataCenterVO> zones = _dcDao.listEnabledZones();\n+        if (zones != null) {\n+            List<Long> zoneIds = zones.stream().map(zone -> zone.getId()).collect(Collectors.toList());\n+            try {\n+                copyTemplate(id, null, zoneIds);\n+            } catch (StorageUnavailableException e) {\n+                throw new CloudRuntimeException(\"Unable to copy template to other zones : \", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c59d0c82137f2294c67d4dd77dd1f4a69b2edb09"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MDg2MDIwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTo0NzoxMFrOIBkpYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNToxNDoyNFrOICCpXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxOTkwNA==", "bodyText": "@davidjumani should the template be changed to cross-zone when it is done ?", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r538519904", "createdAt": "2020-12-08T15:47:10Z", "author": {"login": "weizhouapache"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2198,6 +2202,10 @@ private VMTemplateVO updateTemplateOrIso(BaseUpdateTemplateOrIsoCmd cmd) {\n             template.setDynamicallyScalable(isDynamicallyScalable);\n         }\n \n+        if (templateType != null && templateType == TemplateType.SYSTEM) {\n+            copyTemplateToAllZones(id);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c59d0c82137f2294c67d4dd77dd1f4a69b2edb09"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAxMTQyMw==", "bodyText": "Makes sense. Added the change", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r539011423", "createdAt": "2020-12-09T05:14:24Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2198,6 +2202,10 @@ private VMTemplateVO updateTemplateOrIso(BaseUpdateTemplateOrIsoCmd cmd) {\n             template.setDynamicallyScalable(isDynamicallyScalable);\n         }\n \n+        if (templateType != null && templateType == TemplateType.SYSTEM) {\n+            copyTemplateToAllZones(id);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUxOTkwNA=="}, "originalCommit": {"oid": "c59d0c82137f2294c67d4dd77dd1f4a69b2edb09"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMTA4MDIzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwNzoyNDo0OVrOIEb8HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjoyMDo0N1rOIFBfJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMjk3Mw==", "bodyText": "why is this changed?", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r541522973", "createdAt": "2020-12-12T07:24:49Z", "author": {"login": "rhtyd"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2130,7 +2129,7 @@ private VMTemplateVO updateTemplateOrIso(BaseUpdateTemplateOrIsoCmd cmd) {\n             return template;\n         }\n \n-        template = _tmpltDao.createForUpdate(id);\n+        template = _tmpltDao.findById(id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f68cfb909cf8f605b3fc494131bdcb85495ec"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU0NDYyNg==", "bodyText": "createForUpdate creates an empty object with just the id https://github.com/apache/cloudstack/blob/master/framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java#L295 , whereas a template object read from the db needed to check whether it's cross zone", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r541544626", "createdAt": "2020-12-12T09:55:16Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2130,7 +2129,7 @@ private VMTemplateVO updateTemplateOrIso(BaseUpdateTemplateOrIsoCmd cmd) {\n             return template;\n         }\n \n-        template = _tmpltDao.createForUpdate(id);\n+        template = _tmpltDao.findById(id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMjk3Mw=="}, "originalCommit": {"oid": "ab2f68cfb909cf8f605b3fc494131bdcb85495ec"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzODE0OQ==", "bodyText": "Line 2075 already has that, we need to check why createForUpdate was used in the first place.", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r542138149", "createdAt": "2020-12-14T06:20:47Z", "author": {"login": "rhtyd"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2130,7 +2129,7 @@ private VMTemplateVO updateTemplateOrIso(BaseUpdateTemplateOrIsoCmd cmd) {\n             return template;\n         }\n \n-        template = _tmpltDao.createForUpdate(id);\n+        template = _tmpltDao.findById(id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMjk3Mw=="}, "originalCommit": {"oid": "ab2f68cfb909cf8f605b3fc494131bdcb85495ec"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMTA4MDUzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwNzoyNTowOVrOIEb8Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNjo1ODo1OVrOIFCWDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMzAwNg==", "bodyText": "Here too?", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r541523006", "createdAt": "2020-12-12T07:25:09Z", "author": {"login": "rhtyd"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2219,7 +2222,7 @@ else if (details != null && !details.isEmpty()) {\n             _tmpltDao.saveDetails(template);\n         }\n \n-        _tmpltDao.update(id, template);\n+        _tmpltDao.persist(template);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab2f68cfb909cf8f605b3fc494131bdcb85495ec"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU0NDYzNQ==", "bodyText": "Required since it's changed from createForUpdate to findById", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r541544635", "createdAt": "2020-12-12T09:55:25Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2219,7 +2222,7 @@ else if (details != null && !details.isEmpty()) {\n             _tmpltDao.saveDetails(template);\n         }\n \n-        _tmpltDao.update(id, template);\n+        _tmpltDao.persist(template);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMzAwNg=="}, "originalCommit": {"oid": "ab2f68cfb909cf8f605b3fc494131bdcb85495ec"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjEzODUxOA==", "bodyText": "Persist is usually used for a new record, I'm concerned if this causes any regression or duplicates in DB.", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r542138518", "createdAt": "2020-12-14T06:21:48Z", "author": {"login": "rhtyd"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2219,7 +2222,7 @@ else if (details != null && !details.isEmpty()) {\n             _tmpltDao.saveDetails(template);\n         }\n \n-        _tmpltDao.update(id, template);\n+        _tmpltDao.persist(template);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMzAwNg=="}, "originalCommit": {"oid": "ab2f68cfb909cf8f605b3fc494131bdcb85495ec"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0MDcwOQ==", "bodyText": "There are several instances where findById has been used prior to persist. Tested and no duplicate DB entries were created. Also persist internally uses update : https://github.com/apache/cloudstack/blob/master/framework/db/src/main/java/com/cloud/utils/db/GenericDaoBase.java#L1389", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r542140709", "createdAt": "2020-12-14T06:28:09Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2219,7 +2222,7 @@ else if (details != null && !details.isEmpty()) {\n             _tmpltDao.saveDetails(template);\n         }\n \n-        _tmpltDao.update(id, template);\n+        _tmpltDao.persist(template);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMzAwNg=="}, "originalCommit": {"oid": "ab2f68cfb909cf8f605b3fc494131bdcb85495ec"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE0NTkyOA==", "bodyText": "I was considering getting this towards 4.15RC2 but the additional changes don't give us confidence - only the conditional check was enough to handle the issue.", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r542145928", "createdAt": "2020-12-14T06:42:24Z", "author": {"login": "rhtyd"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2219,7 +2222,7 @@ else if (details != null && !details.isEmpty()) {\n             _tmpltDao.saveDetails(template);\n         }\n \n-        _tmpltDao.update(id, template);\n+        _tmpltDao.persist(template);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMzAwNg=="}, "originalCommit": {"oid": "ab2f68cfb909cf8f605b3fc494131bdcb85495ec"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE1MjIwNA==", "bodyText": "Makes sense, moving the check up", "url": "https://github.com/apache/cloudstack/pull/4522#discussion_r542152204", "createdAt": "2020-12-14T06:58:59Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/template/TemplateManagerImpl.java", "diffHunk": "@@ -2219,7 +2222,7 @@ else if (details != null && !details.isEmpty()) {\n             _tmpltDao.saveDetails(template);\n         }\n \n-        _tmpltDao.update(id, template);\n+        _tmpltDao.persist(template);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTUyMzAwNg=="}, "originalCommit": {"oid": "ab2f68cfb909cf8f605b3fc494131bdcb85495ec"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4168, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}