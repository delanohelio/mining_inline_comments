{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MzAyNzkz", "number": 3839, "title": "FEATURE-3823: kvm agent hooks", "bodyText": "Description\n\nThe PR introduces the new KVM agent extension interface in the form of hooks. Every hook is implemented in Groovy like\npackage groovy\n\nclass BaseTransform {\n\tString transform(Object logger, String xml) {\n\t\tFile file = new File(\"/tmp/hooks.txt\")\n\t\tfile.append(\"------------------------------------------------------------------------\\n\")\n\t\tfile.append(xml)\n\t\treturn xml\n\t}\n}\n\nnew BaseTransform()\n\nThere are 3 hooks are implemented now:\n\n\nXML transformer which is called right before VM is launched and it allows modifying XML somehow (example above)\n\n\nonStart and onStop hooks which are called right after VM state changes to started/stopped.\n\n\npackage groovy\n\nclass StateHandler {\n\tObject onStart(Object logger, String vmName) {\n\t\tFile file = new File(\"/tmp/hooks-start.txt\")\n\t\tfile.append(vmName)\n\t\treturn null\n\t}\n\n        Object onStop(Object logger, String vmName) {\n\t\tFile file = new File(\"/tmp/hooks-stop.txt\")\n\t\tfile.append(vmName)\n                return null\n        }\n}\n\nnew StateHandler()\n\nEvery hook is run inside try {} catch (Exception e) {}, so it can not cause agent misbehavior. If hooks are not defined, they are skipped.\nAlso, the PR adds initial support for GitLab CICD for those, who does WIPs with GitLab, not in GitHub.\n\n\nInitial RFC/Proposal: #3823\n\n\n\nTypes of changes\n\n\n Breaking change (fix or feature that would cause existing functionality to change)\n New feature (non-breaking change which adds functionality)\n Bug fix (non-breaking change which fixes an issue)\n Enhancement (improves an existing feature and functionality)\n Cleanup (Code refactoring and cleanup, that may add test cases)\n\nScreenshots (if appropriate):\nHow Has This Been Tested?\n\n\n\nTested in unit tests and manually for master.", "createdAt": "2020-01-27T03:55:30Z", "url": "https://github.com/apache/cloudstack/pull/3839", "merged": true, "mergeCommit": {"oid": "750abf355171303f3f9edc8dd464b166f270b812"}, "closed": true, "closedAt": "2020-03-14T08:22:09Z", "author": {"login": "bwsw"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-c4NJAFqTM0ODY2NTIyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNX2y_AH2gAyMzY3MzAyNzkzOjRmNzJlMmExYjQ4YzE1YjEwMTRiNzkzNzYzNjZiMDE3MTlkZjNkYmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NjY1MjI0", "url": "https://github.com/apache/cloudstack/pull/3839#pullrequestreview-348665224", "createdAt": "2020-01-27T13:36:58Z", "commit": {"oid": "4a923209e535a10c52b2eb3910c7b9929027709f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMzozNjo1OFrOFiC2zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxMzozNjo1OFrOFiC2zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI0MjcwMw==", "bodyText": "I previously saw code like this in https://github.com/apache/cloudstack/pull/3759/files. Does this belong into this PR?", "url": "https://github.com/apache/cloudstack/pull/3839#discussion_r371242703", "createdAt": "2020-01-27T13:36:58Z", "author": {"login": "DennisKonrad"}, "path": "server/src/main/java/com/cloud/vm/UserVmManagerImpl.java", "diffHunk": "@@ -1015,11 +1015,12 @@ public UserVm upgradeVirtualMachine(UpgradeVMCmd cmd) throws ResourceAllocationE\n         int currentCpu = currentServiceOffering.getCpu();\n         int currentMemory = currentServiceOffering.getRamSize();\n \n+        Account owner = _accountMgr.getActiveAccountById(vmInstance.getAccountId());\n         if (newCpu > currentCpu) {\n-            _resourceLimitMgr.checkResourceLimit(caller, ResourceType.cpu, newCpu - currentCpu);\n+            _resourceLimitMgr.checkResourceLimit(owner, ResourceType.cpu, newCpu - currentCpu);\n         }\n         if (newMemory > currentMemory) {\n-            _resourceLimitMgr.checkResourceLimit(caller, ResourceType.memory, newMemory - currentMemory);\n+            _resourceLimitMgr.checkResourceLimit(owner, ResourceType.memory, newMemory - currentMemory);\n         }\n \n         // Check that the specified service offering ID is valid", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a923209e535a10c52b2eb3910c7b9929027709f"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4a923209e535a10c52b2eb3910c7b9929027709f", "author": {"user": {"login": "bwsw", "name": "Bitworks LLC"}}, "url": "https://github.com/apache/cloudstack/commit/4a923209e535a10c52b2eb3910c7b9929027709f", "committedDate": "2020-01-27T04:15:42Z", "message": "Merge branch 'feature/3823-kvm-agent-hooks' of github.com:bwsw/cloudstack into feature/3823-kvm-agent-hooks"}, "afterCommit": {"oid": "5cb058858008d7f62f101471e9ef6dfb31ddf669", "author": {"user": {"login": "bwsw", "name": "Bitworks LLC"}}, "url": "https://github.com/apache/cloudstack/commit/5cb058858008d7f62f101471e9ef6dfb31ddf669", "committedDate": "2020-01-28T06:36:16Z", "message": "Implemented KVM hooks."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MDk2ODMw", "url": "https://github.com/apache/cloudstack/pull/3839#pullrequestreview-364096830", "createdAt": "2020-02-25T12:18:35Z", "commit": {"oid": "934552b79101ca02622fc4a799d02b188532d1bc"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMjoxODozNVrOFuD9_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMjoyMTowMFrOFuECOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg0MzgzNg==", "bodyText": "can you add a call configureAgentHooks()?", "url": "https://github.com/apache/cloudstack/pull/3839#discussion_r383843836", "createdAt": "2020-02-25T12:18:35Z", "author": {"login": "DaanHoogland"}, "path": "plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResource.java", "diffHunk": "@@ -1065,6 +1089,48 @@ public boolean configure(final String name, final Map<String, Object> params) th\n         value = (String) params.get(\"vm.migrate.pauseafter\");\n         _migratePauseAfter = NumbersUtil.parseInt(value, -1);\n \n+        value = (String) params.get(\"agent.hooks.basedir\");\n+        if (null != value) {\n+            _agentHooksBasedir = value;\n+        }\n+        s_logger.debug(\"agent.hooks.basedir is \" + _agentHooksBasedir);\n+\n+        value = (String) params.get(\"agent.hooks.libvirt_vm_xml_transformer.script\");\n+        if (null != value) {\n+            _agentHooksLibvirtXmlScript = value;\n+        }\n+        s_logger.debug(\"agent.hooks.libvirt_vm_xml_transformer.script is \" + _agentHooksLibvirtXmlScript);\n+\n+        value = (String) params.get(\"agent.hooks.libvirt_vm_xml_transformer.method\");\n+        if (null != value) {\n+            _agentHooksLibvirtXmlMethod = value;\n+        }\n+        s_logger.debug(\"agent.hooks.libvirt_vm_xml_transformer.method is \" + _agentHooksLibvirtXmlMethod);\n+\n+        value = (String) params.get(\"agent.hooks.libvirt_vm_on_start.script\");\n+        if (null != value) {\n+            _agentHooksVmOnStartScript = value;\n+        }\n+        s_logger.debug(\"agent.hooks.libvirt_vm_on_start.script is \" + _agentHooksVmOnStartScript);\n+\n+        value = (String) params.get(\"agent.hooks.libvirt_vm_on_start.method\");\n+        if (null != value) {\n+            _agentHooksVmOnStartMethod = value;\n+        }\n+        s_logger.debug(\"agent.hooks.libvirt_vm_on_start.method is \" + _agentHooksVmOnStartMethod);\n+\n+        value = (String) params.get(\"agent.hooks.libvirt_vm_on_stop.script\");\n+        if (null != value) {\n+            _agentHooksVmOnStopScript = value;\n+        }\n+        s_logger.debug(\"agent.hooks.libvirt_vm_on_stop.script is \" + _agentHooksVmOnStopScript);\n+\n+        value = (String) params.get(\"agent.hooks.libvirt_vm_on_stop.method\");\n+        if (null != value) {\n+            _agentHooksVmOnStopMethod = value;\n+        }\n+        s_logger.debug(\"agent.hooks.libvirt_vm_on_stop.method is \" + _agentHooksVmOnStopMethod);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934552b79101ca02622fc4a799d02b188532d1bc"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg0NDI5Mg==", "bodyText": "can you add a call performAgentTransformHook(..) here?", "url": "https://github.com/apache/cloudstack/pull/3839#discussion_r383844292", "createdAt": "2020-02-25T12:19:36Z", "author": {"login": "DaanHoogland"}, "path": "plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/wrapper/LibvirtStartCommandWrapper.java", "diffHunk": "@@ -79,7 +79,28 @@ public Answer execute(final StartCommand command, final LibvirtComputingResource\n             libvirtComputingResource.createVifs(vmSpec, vm);\n \n             s_logger.debug(\"starting \" + vmName + \": \" + vm.toString());\n-            libvirtComputingResource.startVM(conn, vmName, vm.toString());\n+            String vmInitialSpecification = vm.toString();\n+            String vmFinalSpecification;\n+            try {\n+                // if transformer fails, everything must go as it's just skipped.\n+                LibvirtKvmAgentHook t = libvirtComputingResource.getTransformer();\n+                vmFinalSpecification = (String) t.handle(vmInitialSpecification);\n+                if (null == vmFinalSpecification) {\n+                    s_logger.warn(\"Libvirt XML transformer returned NULL, will use XML specification unchanged.\");\n+                    vmFinalSpecification = vmInitialSpecification;\n+                }\n+            } catch(Exception e) {\n+                s_logger.warn(\"Exception occured when handling LibVirt XML transformer hook: {}\", e);\n+                vmFinalSpecification = vmInitialSpecification;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934552b79101ca02622fc4a799d02b188532d1bc"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg0NDQzNA==", "bodyText": "and performAgentStartHook(..) here?", "url": "https://github.com/apache/cloudstack/pull/3839#discussion_r383844434", "createdAt": "2020-02-25T12:19:58Z", "author": {"login": "DaanHoogland"}, "path": "plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/wrapper/LibvirtStartCommandWrapper.java", "diffHunk": "@@ -79,7 +79,28 @@ public Answer execute(final StartCommand command, final LibvirtComputingResource\n             libvirtComputingResource.createVifs(vmSpec, vm);\n \n             s_logger.debug(\"starting \" + vmName + \": \" + vm.toString());\n-            libvirtComputingResource.startVM(conn, vmName, vm.toString());\n+            String vmInitialSpecification = vm.toString();\n+            String vmFinalSpecification;\n+            try {\n+                // if transformer fails, everything must go as it's just skipped.\n+                LibvirtKvmAgentHook t = libvirtComputingResource.getTransformer();\n+                vmFinalSpecification = (String) t.handle(vmInitialSpecification);\n+                if (null == vmFinalSpecification) {\n+                    s_logger.warn(\"Libvirt XML transformer returned NULL, will use XML specification unchanged.\");\n+                    vmFinalSpecification = vmInitialSpecification;\n+                }\n+            } catch(Exception e) {\n+                s_logger.warn(\"Exception occured when handling LibVirt XML transformer hook: {}\", e);\n+                vmFinalSpecification = vmInitialSpecification;\n+            }\n+            libvirtComputingResource.startVM(conn, vmName, vmFinalSpecification);\n+\n+            try {\n+                LibvirtKvmAgentHook onStartHook = libvirtComputingResource.getStartHook();\n+                onStartHook.handle(vmName);\n+            } catch (Exception e) {\n+                s_logger.warn(\"Exception occured when handling LibVirt VM onStart hook: {}\", e);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934552b79101ca02622fc4a799d02b188532d1bc"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg0NDkyMg==", "bodyText": "can you put this in a separate method?", "url": "https://github.com/apache/cloudstack/pull/3839#discussion_r383844922", "createdAt": "2020-02-25T12:21:00Z", "author": {"login": "DaanHoogland"}, "path": "plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/wrapper/LibvirtStopCommandWrapper.java", "diffHunk": "@@ -92,6 +93,13 @@ public Answer execute(final StopCommand command, final LibvirtComputingResource\n             libvirtComputingResource.destroyNetworkRulesForVM(conn, vmName);\n             final String result = libvirtComputingResource.stopVM(conn, vmName, command.isForceStop());\n \n+            try {\n+                LibvirtKvmAgentHook onStopHook = libvirtComputingResource.getStopHook();\n+                onStopHook.handle(vmName);\n+            } catch (Exception e) {\n+                s_logger.warn(\"Exception occured when handling LibVirt VM onStop hook: {}\", e);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934552b79101ca02622fc4a799d02b188532d1bc"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MjQ0NjY3", "url": "https://github.com/apache/cloudstack/pull/3839#pullrequestreview-366244667", "createdAt": "2020-02-28T09:01:14Z", "commit": {"oid": "934552b79101ca02622fc4a799d02b188532d1bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwOTowMToxNFrOFvtxwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwOTowMToxNFrOFvtxwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU3NzQwOQ==", "bodyText": "@bwsw I did not review the whole PR, is it related or similar to http://docs.cloudstack.apache.org/en/latest/adminguide/hosts.html#kvm-libvirt-hook-script-include ?", "url": "https://github.com/apache/cloudstack/pull/3839#discussion_r385577409", "createdAt": "2020-02-28T09:01:14Z", "author": {"login": "rhtyd"}, "path": "plugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/LibvirtComputingResource.java", "diffHunk": "@@ -284,6 +284,18 @@\n     protected String _rngPath = \"/dev/random\";\n     protected int _rngRatePeriod = 1000;\n     protected int _rngRateBytes = 2048;\n+    protected String _agentHooksBasedir = \"/etc/cloudstack/agent/hooks\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934552b79101ca02622fc4a799d02b188532d1bc"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNzYyNDEx", "url": "https://github.com/apache/cloudstack/pull/3839#pullrequestreview-371762411", "createdAt": "2020-03-10T08:44:44Z", "commit": {"oid": "934552b79101ca02622fc4a799d02b188532d1bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwODo0NDo0NFrOF0FofQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwODo0NDo0NFrOF0FofQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE2MjU1Nw==", "bodyText": "@bwsw could you explain what this file is used for and how to use it ?", "url": "https://github.com/apache/cloudstack/pull/3839#discussion_r390162557", "createdAt": "2020-03-10T08:44:44Z", "author": {"login": "weizhouapache"}, "path": ".gitlab-ci.yml", "diffHunk": "@@ -0,0 +1,46 @@\n+# Licensed to the Apache Software Foundation (ASF) under one", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "934552b79101ca02622fc4a799d02b188532d1bc"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxOTI3NzA0", "url": "https://github.com/apache/cloudstack/pull/3839#pullrequestreview-371927704", "createdAt": "2020-03-10T13:01:22Z", "commit": {"oid": "934552b79101ca02622fc4a799d02b188532d1bc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24a1298e5979455f90e322d534364ba9ef571d49", "author": {"user": {"login": "bwsw", "name": "Bitworks LLC"}}, "url": "https://github.com/apache/cloudstack/commit/24a1298e5979455f90e322d534364ba9ef571d49", "committedDate": "2020-03-12T10:05:00Z", "message": "Implemented KVM hooks."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "934552b79101ca02622fc4a799d02b188532d1bc", "author": {"user": {"login": "DaanHoogland", "name": "dahn"}}, "url": "https://github.com/apache/cloudstack/commit/934552b79101ca02622fc4a799d02b188532d1bc", "committedDate": "2020-02-20T12:49:17Z", "message": "unused import removed"}, "afterCommit": {"oid": "24a1298e5979455f90e322d534364ba9ef571d49", "author": {"user": {"login": "bwsw", "name": "Bitworks LLC"}}, "url": "https://github.com/apache/cloudstack/commit/24a1298e5979455f90e322d534364ba9ef571d49", "committedDate": "2020-03-12T10:05:00Z", "message": "Implemented KVM hooks."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9068dba1cda8034ce2256de2172169637dc94222", "author": {"user": {"login": "bwsw", "name": "Bitworks LLC"}}, "url": "https://github.com/apache/cloudstack/commit/9068dba1cda8034ce2256de2172169637dc94222", "committedDate": "2020-03-12T10:14:32Z", "message": "Merge branch 'master' of https://github.com/apache/cloudstack into feature/3823-kvm-agent-hooks\n\n\u0001 Conflicts:\n\u0001\tplugins/hypervisors/kvm/src/main/java/com/cloud/hypervisor/kvm/resource/wrapper/LibvirtStartCommandWrapper.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a6c54a1ac4a0cb328369b1c2439e7f1662e1361", "author": {"user": {"login": "bwsw", "name": "Bitworks LLC"}}, "url": "https://github.com/apache/cloudstack/commit/5a6c54a1ac4a0cb328369b1c2439e7f1662e1361", "committedDate": "2020-03-13T09:29:26Z", "message": "Fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MTgyNzU1", "url": "https://github.com/apache/cloudstack/pull/3839#pullrequestreview-374182755", "createdAt": "2020-03-13T10:12:27Z", "commit": {"oid": "5a6c54a1ac4a0cb328369b1c2439e7f1662e1361"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f72e2a1b48c15b1014b79376366b01719df3dbd", "author": {"user": {"login": "DaanHoogland", "name": "dahn"}}, "url": "https://github.com/apache/cloudstack/commit/4f72e2a1b48c15b1014b79376366b01719df3dbd", "committedDate": "2020-03-13T22:14:46Z", "message": "Merge branch 'master' into feature/3823-kvm-agent-hooks"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4561, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}