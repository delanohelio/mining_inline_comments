{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1ODY1MjQw", "number": 4363, "title": "Ability to put a server in Down state to maintenance", "bodyText": "Description\n\nAdds a new global setting set.host.down.to.maintenance which when set\nto true will allow setting a host in downstate into maintenance mode\nso that when the host comes back up, it will be automatically set to\nmaintenance mode and the resource state will not be set to Enabled.\nTypes of changes\n\n\n Breaking change (fix or feature that would cause existing functionality to change)\n New feature (non-breaking change which adds functionality)\n Bug fix (non-breaking change which fixes an issue)\n Enhancement (improves an existing feature and functionality)\n Cleanup (Code refactoring and cleanup, that may add test cases)\n\nScreenshots (if appropriate):\nHow Has This Been Tested?\n\n\n\n1, Power off one hypervisor so that it enters DOWN state\n2. set the global setting set.host.down.to.maintenance to true\n3. Enable maintenance mode on that host\n4. Start the hypervisor\n5. When it comes back up, it will be in maintenance mode", "createdAt": "2020-10-01T00:01:59Z", "url": "https://github.com/apache/cloudstack/pull/4363", "merged": true, "mergeCommit": {"oid": "e1dd07a30c0d67da356b59f3491b2c7c1eef2221"}, "closed": true, "closedAt": "2020-10-28T08:59:43Z", "author": {"login": "ravening"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdON9A1gFqTUwMDE2NTgwNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWqMQRABqjM5MjYzODUyMTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMTY1ODA0", "url": "https://github.com/apache/cloudstack/pull/4363#pullrequestreview-500165804", "createdAt": "2020-10-01T09:27:35Z", "commit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2ODUxODI1", "url": "https://github.com/apache/cloudstack/pull/4363#pullrequestreview-506851825", "createdAt": "2020-10-12T19:03:27Z", "commit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOTowMzoyN1rOHgKARg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOTowMzoyN1rOHgKARg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ4MDM5MA==", "bodyText": "@ravening what do you think of extracting lines 1308 - 1318 to a method? With that, it would be possible to cover these cases with JUnit test methods?", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503480390", "createdAt": "2020-10-12T19:03:27Z", "author": {"login": "GabrielBrascher"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MDYwNjMy", "url": "https://github.com/apache/cloudstack/pull/4363#pullrequestreview-507060632", "createdAt": "2020-10-13T04:27:45Z", "commit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNDoyNzo0NVrOHgU9mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNDoyNzo0NVrOHgU9mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ==", "bodyText": "@ravening consider the value in zone, as the config scope is specified as Zone.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n          \n          \n            \n                    if (SET_HOST_DOWN_TO_MAINTENANCE.valueIn(host.getDataCenterId()) && (host.getStatus() == Status.Down)) {", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503659931", "createdAt": "2020-10-13T04:27:45Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MDYzMDI5", "url": "https://github.com/apache/cloudstack/pull/4363#pullrequestreview-507063029", "createdAt": "2020-10-13T04:36:08Z", "commit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNDozNjowOFrOHgVFnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNDozNjowOFrOHgVFnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY2MTk4Mw==", "bodyText": "@ravening can also consider state \"ResourceState.ErrorInPrepareForMaintenance\" ?", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r503661983", "createdAt": "2020-10-13T04:36:08Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {\n+            if (host.getResourceState() == ResourceState.Enabled) {\n+                _hostDao.updateResourceState(ResourceState.Enabled, ResourceState.Event.AdminAskMaintenance, ResourceState.PrepareForMaintenance, host);\n+                _hostDao.updateResourceState(ResourceState.PrepareForMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            } else if (host.getResourceState() == ResourceState.ErrorInMaintenance) {\n+                _hostDao.updateResourceState(ResourceState.ErrorInMaintenance, ResourceState.Event.InternalEnterMaintenance, ResourceState.Maintenance, host);\n+                return _hostDao.findById(hostId);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1OTI3Nzg5", "url": "https://github.com/apache/cloudstack/pull/4363#pullrequestreview-515927789", "createdAt": "2020-10-23T18:52:57Z", "commit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo1Mjo1N1rOHnaAww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo1Mjo1N1rOHnaAww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4MjY5MQ==", "bodyText": "This observation makes sense. Can you please take a look at org.apache.cloudstack.framework.config.ConfigKey.valueIn() @ravening?", "url": "https://github.com/apache/cloudstack/pull/4363#discussion_r511082691", "createdAt": "2020-10-23T18:52:57Z", "author": {"login": "GabrielBrascher"}, "path": "server/src/main/java/com/cloud/resource/ResourceManagerImpl.java", "diffHunk": "@@ -1302,6 +1305,17 @@ public Host maintain(final PrepareForMaintenanceCmd cmd) {\n             throw new CloudRuntimeException(\"Host is already in state \" + host.getResourceState() + \". Cannot recall for maintenance until resolved.\");\n         }\n \n+        if (SET_HOST_DOWN_TO_MAINTENANCE.value() && (host.getStatus() == Status.Down)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY1OTkzMQ=="}, "originalCommit": {"oid": "580a3a717a7e87c018867607ff0e8dc5a538e1b6"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0c8b81a0bd27369eefb20c46c3d6e169cdd3c0a", "author": {"user": {"login": "ravening", "name": "Rakesh"}}, "url": "https://github.com/apache/cloudstack/commit/b0c8b81a0bd27369eefb20c46c3d6e169cdd3c0a", "committedDate": "2020-10-27T14:48:14Z", "message": "Ability to put a server in Down state to maintenance\n\nAdds a new global setting set.host.down.to.maintenance which when set\nto true will allow setting a host in down state into maintenance mode\nso that when the host comes back up, it will be automatically set to\nmaintenance mode and the resource state will not be set to Enabled."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49069758c8f0abe2ede94348105b4a01dfd38ec2", "author": {"user": {"login": "ravening", "name": "Rakesh"}}, "url": "https://github.com/apache/cloudstack/commit/49069758c8f0abe2ede94348105b4a01dfd38ec2", "committedDate": "2020-10-27T14:52:41Z", "message": "consider zone level value"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "13850a64437a04146bd15f756d09b4e81a048fbf", "author": {"user": {"login": "ravening", "name": "Rakesh"}}, "url": "https://github.com/apache/cloudstack/commit/13850a64437a04146bd15f756d09b4e81a048fbf", "committedDate": "2020-10-27T14:32:26Z", "message": "Merge branch 'master' into host-down-maintenance"}, "afterCommit": {"oid": "49069758c8f0abe2ede94348105b4a01dfd38ec2", "author": {"user": {"login": "ravening", "name": "Rakesh"}}, "url": "https://github.com/apache/cloudstack/commit/49069758c8f0abe2ede94348105b4a01dfd38ec2", "committedDate": "2020-10-27T14:52:41Z", "message": "consider zone level value"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4935, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}