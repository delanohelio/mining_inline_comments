{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTQ5ODk5", "number": 4092, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDowMjo0MlrOD_m0fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDowMjo0MlrOD_m0fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDIyOTA4OnYy", "diffSide": "RIGHT", "path": "engine/schema/src/main/java/com/cloud/upgrade/dao/Upgrade41400to41500.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDowMjo0MlrOGaXWCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNToxOTowNVrOGajQOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5ODYzMw==", "bodyText": "@shwstppr can you remove any similar check in the previous upgrade path 4.13->4.14 for example? We don't want multiple instances of systemvm migration code in older upgrade paths.", "url": "https://github.com/apache/cloudstack/pull/4092#discussion_r430298633", "createdAt": "2020-05-26T10:02:42Z", "author": {"login": "rhtyd"}, "path": "engine/schema/src/main/java/com/cloud/upgrade/dao/Upgrade41400to41500.java", "diffHunk": "@@ -0,0 +1,248 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package com.cloud.upgrade.dao;\n+\n+import java.io.InputStream;\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.apache.log4j.Logger;\n+\n+import com.cloud.hypervisor.Hypervisor;\n+import com.cloud.utils.exception.CloudRuntimeException;\n+\n+public class Upgrade41400to41500 implements DbUpgrade {\n+\n+    final static Logger LOG = Logger.getLogger(Upgrade41400to41500.class);\n+\n+    @Override\n+    public String[] getUpgradableVersionRange() {\n+        return new String[] {\"4.14.0.0\", \"4.15.0.0\"};\n+    }\n+\n+    @Override\n+    public String getUpgradedVersion() {\n+        return \"4.15.0.0\";\n+    }\n+\n+    @Override\n+    public boolean supportsRollingUpgrade() {\n+        return false;\n+    }\n+\n+    @Override\n+    public InputStream[] getPrepareScripts() {\n+        final String scriptFile = \"META-INF/db/schema-41400to41500.sql\";\n+        final InputStream script = Thread.currentThread().getContextClassLoader().getResourceAsStream(scriptFile);\n+        if (script == null) {\n+            throw new CloudRuntimeException(\"Unable to find \" + scriptFile);\n+        }\n+\n+        return new InputStream[] {script};\n+    }\n+\n+    @Override\n+    public void performDataMigration(Connection conn) {\n+        updateSystemVmTemplates(conn);\n+    }\n+\n+    @SuppressWarnings(\"serial\")\n+    private void updateSystemVmTemplates(final Connection conn) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1daf94358017eab37950181029c850c31c38d0f"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5Mzc1Mg==", "bodyText": "@rhtyd removed the systemvm code from 41310to41400. Please confirm if it is fine now", "url": "https://github.com/apache/cloudstack/pull/4092#discussion_r430493752", "createdAt": "2020-05-26T15:19:05Z", "author": {"login": "shwstppr"}, "path": "engine/schema/src/main/java/com/cloud/upgrade/dao/Upgrade41400to41500.java", "diffHunk": "@@ -0,0 +1,248 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+package com.cloud.upgrade.dao;\n+\n+import java.io.InputStream;\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import org.apache.log4j.Logger;\n+\n+import com.cloud.hypervisor.Hypervisor;\n+import com.cloud.utils.exception.CloudRuntimeException;\n+\n+public class Upgrade41400to41500 implements DbUpgrade {\n+\n+    final static Logger LOG = Logger.getLogger(Upgrade41400to41500.class);\n+\n+    @Override\n+    public String[] getUpgradableVersionRange() {\n+        return new String[] {\"4.14.0.0\", \"4.15.0.0\"};\n+    }\n+\n+    @Override\n+    public String getUpgradedVersion() {\n+        return \"4.15.0.0\";\n+    }\n+\n+    @Override\n+    public boolean supportsRollingUpgrade() {\n+        return false;\n+    }\n+\n+    @Override\n+    public InputStream[] getPrepareScripts() {\n+        final String scriptFile = \"META-INF/db/schema-41400to41500.sql\";\n+        final InputStream script = Thread.currentThread().getContextClassLoader().getResourceAsStream(scriptFile);\n+        if (script == null) {\n+            throw new CloudRuntimeException(\"Unable to find \" + scriptFile);\n+        }\n+\n+        return new InputStream[] {script};\n+    }\n+\n+    @Override\n+    public void performDataMigration(Connection conn) {\n+        updateSystemVmTemplates(conn);\n+    }\n+\n+    @SuppressWarnings(\"serial\")\n+    private void updateSystemVmTemplates(final Connection conn) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI5ODYzMw=="}, "originalCommit": {"oid": "d1daf94358017eab37950181029c850c31c38d0f"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3906, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}