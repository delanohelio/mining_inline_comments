{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MDY5NjUz", "number": 4078, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjozMjo0M1rOD8dQXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMTozMToxM1rOE5bL_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzIwNDc2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjozMjo0M1rOGVaBrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMToyMDowMVrOHz3SUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5OTY5Mg==", "bodyText": "@ravening DatacenterId should be ok here, to cleanup urls as per the method implementation. But, in case of multiple SSVMs in the zone, this would delete all the download urls in that zone. May be better to cleanup by SSVM's public ip in that zone.", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r425099692", "createdAt": "2020-05-14T12:32:43Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -3237,13 +3245,29 @@ protected void runInContext() {\n         }\n     }\n \n+    private void cleanupDownloadUrls(VMInstanceVO systemVm) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b475c25302a53bcd5acc392c698240fbe390e6a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwMTk2OQ==", "bodyText": "Yes but I didnt pass it purposefully because in case in future we need to do further processing with the systemvm, we will have entire data. If I just pass data center id, we dont have reference to systemvm", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r426501969", "createdAt": "2020-05-18T09:46:21Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -3237,13 +3245,29 @@ protected void runInContext() {\n         }\n     }\n \n+    private void cleanupDownloadUrls(VMInstanceVO systemVm) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5OTY5Mg=="}, "originalCommit": {"oid": "2b475c25302a53bcd5acc392c698240fbe390e6a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwNDYzOA==", "bodyText": "@ravening in case, any data is required for further processing in future in this method, the method definition/implementation can be updated based on the requirement in future. As the datacenter is only being used to cleanup the urls, so better use the datacenter id for the cleanup purpose here, and update the method name accordingly (suggestion below).\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void cleanupDownloadUrls(VMInstanceVO systemVm) {\n          \n          \n            \n                private void cleanupDownloadUrlsInZone(long zoneId) {", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r524004638", "createdAt": "2020-11-16T09:13:48Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -3237,13 +3245,29 @@ protected void runInContext() {\n         }\n     }\n \n+    private void cleanupDownloadUrls(VMInstanceVO systemVm) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5OTY5Mg=="}, "originalCommit": {"oid": "2b475c25302a53bcd5acc392c698240fbe390e6a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEyNjEzMA==", "bodyText": "ping @ravening. Can you answer @sureshanaparti here?", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r524126130", "createdAt": "2020-11-16T11:02:32Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -3237,13 +3245,29 @@ protected void runInContext() {\n         }\n     }\n \n+    private void cleanupDownloadUrls(VMInstanceVO systemVm) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5OTY5Mg=="}, "originalCommit": {"oid": "2b475c25302a53bcd5acc392c698240fbe390e6a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEyNjE4OA==", "bodyText": "ping @ravening , please update on this. thanks.", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r524126188", "createdAt": "2020-11-16T11:02:35Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -3237,13 +3245,29 @@ protected void runInContext() {\n         }\n     }\n \n+    private void cleanupDownloadUrls(VMInstanceVO systemVm) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5OTY5Mg=="}, "originalCommit": {"oid": "2b475c25302a53bcd5acc392c698240fbe390e6a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEzNjI2Ng==", "bodyText": "ping @ravening , please update on this. thanks.\n\n@sureshanaparti i would rather prefer to keep the method definition as is rather than changing it again future which I double work", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r524136266", "createdAt": "2020-11-16T11:11:45Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -3237,13 +3245,29 @@ protected void runInContext() {\n         }\n     }\n \n+    private void cleanupDownloadUrls(VMInstanceVO systemVm) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5OTY5Mg=="}, "originalCommit": {"oid": "2b475c25302a53bcd5acc392c698240fbe390e6a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE0NTIzNQ==", "bodyText": "@ravening the download urls are related to zone, so I recommend to go with zone id, which is relavent. Passing systemVm (VMInstanceVO of SSVM) is irrelevant here. Not sure what will be the future double work you are pointing to.", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r524145235", "createdAt": "2020-11-16T11:20:01Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -3237,13 +3245,29 @@ protected void runInContext() {\n         }\n     }\n \n+    private void cleanupDownloadUrls(VMInstanceVO systemVm) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5OTY5Mg=="}, "originalCommit": {"oid": "2b475c25302a53bcd5acc392c698240fbe390e6a"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTczMDkwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzo1NTozMFrOG4NxBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzo1NTozMFrOG4NxBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU5ODk4MQ==", "bodyText": "can you extract these two blocks in methods with good descriptive names please?", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r461598981", "createdAt": "2020-07-28T13:55:30Z", "author": {"login": "DaanHoogland"}, "path": "server/src/main/java/com/cloud/storage/VolumeApiServiceImpl.java", "diffHunk": "@@ -2698,9 +2701,40 @@ public String extractVolume(ExtractVolumeCmd cmd) {\n         }\n \n         // Check if the url already exists\n-        VolumeDataStoreVO volumeStoreRef = _volumeStoreDao.findByVolume(volumeId);\n+        SearchCriteria<VolumeDataStoreVO> sc = _volumeStoreDao.createSearchCriteria();\n+        sc.addAnd(\"state\", SearchCriteria.Op.EQ, ObjectInDataStoreStateMachine.State.Ready.toString());\n+        sc.addAnd(\"volumeId\", SearchCriteria.Op.EQ, volumeId);\n+        sc.addAnd(\"destroyed\", SearchCriteria.Op.EQ, false);\n+        // the volume should not change (attached/detached, vm not updated) after created\n+        if (volume.getVolumeType() == Volume.Type.ROOT) { // for ROOT disk\n+            VMInstanceVO vm = _vmInstanceDao.findById(volume.getInstanceId());\n+            sc.addAnd(\"updated\", SearchCriteria.Op.GTEQ, vm.getUpdateTime());\n+        } else if (volume.getVolumeType() == Volume.Type.DATADISK && volume.getInstanceId() == null) { // for not attached DATADISK\n+            sc.addAnd(\"updated\", SearchCriteria.Op.GTEQ, volume.getUpdated());\n+        } else { // for attached DATA DISK\n+            VMInstanceVO vm = _vmInstanceDao.findById(volume.getInstanceId());\n+            sc.addAnd(\"updated\", SearchCriteria.Op.GTEQ, vm.getUpdateTime());\n+            sc.addAnd(\"updated\", SearchCriteria.Op.GTEQ, volume.getUpdated());\n+        }\n+        Filter filter = new Filter(VolumeDataStoreVO.class, \"created\", false, 0L, 1L);\n+        List<VolumeDataStoreVO> volumeStoreRefs = _volumeStoreDao.search(sc, filter);\n+        VolumeDataStoreVO volumeStoreRef = null;\n+        if (volumeStoreRefs != null && !volumeStoreRefs.isEmpty()) {\n+            volumeStoreRef = volumeStoreRefs.get(0);\n+        }\n         if (volumeStoreRef != null && volumeStoreRef.getExtractUrl() != null) {\n             return volumeStoreRef.getExtractUrl();\n+        } else if (volumeStoreRef != null) {\n+            s_logger.debug(\"volume \" + volumeId + \" is already installed on secondary storage, install path is \" +\n+                                    volumeStoreRef.getInstallPath());\n+            ImageStoreEntity secStore = (ImageStoreEntity) dataStoreMgr.getDataStore(volumeStoreRef.getDataStoreId(), DataStoreRole.Image);\n+            String extractUrl = secStore.createEntityExtractUrl(volumeStoreRef.getInstallPath(), volume.getFormat(), null);\n+            volumeStoreRef = _volumeStoreDao.findByVolume(volumeId);\n+            volumeStoreRef.setExtractUrl(extractUrl);\n+            volumeStoreRef.setExtractUrlCreated(DateUtil.now());\n+            _volumeStoreDao.update(volumeStoreRef.getId(), volumeStoreRef);\n+            return extractUrl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b475c25302a53bcd5acc392c698240fbe390e6a"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTc0MTI0OnYy", "diffSide": "RIGHT", "path": "services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/UploadManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzo1NzozN1rOG4N3XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzo1NzozN1rOG4N3XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYwMDYwNQ==", "bodyText": "hm, that would be an easy check, wonder if that is all.", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r461600605", "createdAt": "2020-07-28T13:57:37Z", "author": {"login": "DaanHoogland"}, "path": "services/secondary-storage/server/src/main/java/org/apache/cloudstack/storage/template/UploadManagerImpl.java", "diffHunk": "@@ -307,12 +307,15 @@ public Answer handleDeleteEntityDownloadURLCommand(DeleteEntityDownloadURLComman\n \n         //We just need to remove the UUID.vhd\n         String extractUrl = cmd.getExtractUrl();\n-        command.add(\"unlink /var/www/html/userdata/\" + extractUrl.substring(extractUrl.lastIndexOf(File.separator) + 1));\n-        String result = command.execute();\n-        if (result != null) {\n-            // FIXME - Ideally should bail out if you cant delete symlink. Not doing it right now.\n-            // This is because the ssvm might already be destroyed and the symlinks do not exist.\n-            s_logger.warn(\"Error in deleting symlink :\" + result);\n+        String result;\n+        if (extractUrl != null) {\n+            command.add(\"unlink /var/www/html/userdata/\" + extractUrl.substring(extractUrl.lastIndexOf(File.separator) + 1));\n+            result = command.execute();\n+            if (result != null) {\n+                // FIXME - Ideally should bail out if you cant delete symlink. Not doing it right now.\n+                // This is because the ssvm might already be destroyed and the symlinks do not exist.\n+                s_logger.warn(\"Error in deleting symlink :\" + result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b475c25302a53bcd5acc392c698240fbe390e6a"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Njc0MjM3OnYy", "diffSide": "LEFT", "path": "services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNToyNjoyOVrOHWW3og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMDo0NzozMFrOH1nzxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIwNTQxMA==", "bodyText": "@ravening would that cause a regression, to not expunge uploaded volumes?", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r493205410", "createdAt": "2020-09-23T05:26:29Z", "author": {"login": "rhtyd"}, "path": "services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java", "diffHunk": "@@ -744,9 +743,6 @@ private void allocCapacity(long dataCenterId, SecondaryStorageVm.Role role) {\n                 if (_allocLock.lock(ACQUIRE_GLOBAL_LOCK_TIMEOUT_FOR_SYNC)) {\n                     try {\n                         secStorageVm = startNew(dataCenterId, role);\n-                        for (UploadVO upload : _uploadDao.listAll()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b475c25302a53bcd5acc392c698240fbe390e6a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA4ODM0NQ==", "bodyText": "@ravening can you answer this question, please?", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r514088345", "createdAt": "2020-10-29T08:41:42Z", "author": {"login": "DaanHoogland"}, "path": "services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java", "diffHunk": "@@ -744,9 +743,6 @@ private void allocCapacity(long dataCenterId, SecondaryStorageVm.Role role) {\n                 if (_allocLock.lock(ACQUIRE_GLOBAL_LOCK_TIMEOUT_FOR_SYNC)) {\n                     try {\n                         secStorageVm = startNew(dataCenterId, role);\n-                        for (UploadVO upload : _uploadDao.listAll()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIwNTQxMA=="}, "originalCommit": {"oid": "2b475c25302a53bcd5acc392c698240fbe390e6a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk4ODgwNA==", "bodyText": "@rhtyd @DaanHoogland I tested by uploading volumes from local as well as from url but upload tables were still empty. So looks like uploaded volume/template entries are not stored in this table.", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r525988804", "createdAt": "2020-11-18T10:47:30Z", "author": {"login": "ravening"}, "path": "services/secondary-storage/controller/src/main/java/org/apache/cloudstack/secondarystorage/SecondaryStorageManagerImpl.java", "diffHunk": "@@ -744,9 +743,6 @@ private void allocCapacity(long dataCenterId, SecondaryStorageVm.Role role) {\n                 if (_allocLock.lock(ACQUIRE_GLOBAL_LOCK_TIMEOUT_FOR_SYNC)) {\n                     try {\n                         secStorageVm = startNew(dataCenterId, role);\n-                        for (UploadVO upload : _uploadDao.listAll()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIwNTQxMA=="}, "originalCommit": {"oid": "2b475c25302a53bcd5acc392c698240fbe390e6a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NjQ5NzI2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMTozMToxM1rOHz4C5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMjoyNToyOVrOH1rV0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE1NzY3MA==", "bodyText": "@ravening What if when one of the SSVM is destroyed (multiple SSVMs are created for a zone), which is created to meet the storage command sessions.", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r524157670", "createdAt": "2020-11-16T11:31:13Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -3286,13 +3294,29 @@ protected void runInContext() {\n         }\n     }\n \n+    private void cleanupDownloadUrls(VMInstanceVO systemVm) {\n+        // clean download URLs when destroying ssvm\n+        // clean only the volumes and templates of the zone\n+        // to which ssvm belongs to\n+        for (VolumeDataStoreVO volume :_volumeStoreDao.listVolumeDownloadUrlsByZoneId(systemVm.getDataCenterId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28efc8354e244b914d2b62bcaa7ba743f059c557"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk5MDUzNQ==", "bodyText": "then the entries will be cleared.", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r525990535", "createdAt": "2020-11-18T10:50:13Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -3286,13 +3294,29 @@ protected void runInContext() {\n         }\n     }\n \n+    private void cleanupDownloadUrls(VMInstanceVO systemVm) {\n+        // clean download URLs when destroying ssvm\n+        // clean only the volumes and templates of the zone\n+        // to which ssvm belongs to\n+        for (VolumeDataStoreVO volume :_volumeStoreDao.listVolumeDownloadUrlsByZoneId(systemVm.getDataCenterId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE1NzY3MA=="}, "originalCommit": {"oid": "28efc8354e244b914d2b62bcaa7ba743f059c557"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjAyNzUwMg==", "bodyText": "then the entries will be cleared.\n\nok @ravening, so all the zone url entries are deleted irrespective of the SSVM ip in the url, and a new url is generated whenever user/operator requests download. am i correct?", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r526027502", "createdAt": "2020-11-18T11:51:27Z", "author": {"login": "sureshanaparti"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -3286,13 +3294,29 @@ protected void runInContext() {\n         }\n     }\n \n+    private void cleanupDownloadUrls(VMInstanceVO systemVm) {\n+        // clean download URLs when destroying ssvm\n+        // clean only the volumes and templates of the zone\n+        // to which ssvm belongs to\n+        for (VolumeDataStoreVO volume :_volumeStoreDao.listVolumeDownloadUrlsByZoneId(systemVm.getDataCenterId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE1NzY3MA=="}, "originalCommit": {"oid": "28efc8354e244b914d2b62bcaa7ba743f059c557"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjA0NjY3NQ==", "bodyText": "@sureshanaparti yes", "url": "https://github.com/apache/cloudstack/pull/4078#discussion_r526046675", "createdAt": "2020-11-18T12:25:29Z", "author": {"login": "ravening"}, "path": "server/src/main/java/com/cloud/server/ManagementServerImpl.java", "diffHunk": "@@ -3286,13 +3294,29 @@ protected void runInContext() {\n         }\n     }\n \n+    private void cleanupDownloadUrls(VMInstanceVO systemVm) {\n+        // clean download URLs when destroying ssvm\n+        // clean only the volumes and templates of the zone\n+        // to which ssvm belongs to\n+        for (VolumeDataStoreVO volume :_volumeStoreDao.listVolumeDownloadUrlsByZoneId(systemVm.getDataCenterId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDE1NzY3MA=="}, "originalCommit": {"oid": "28efc8354e244b914d2b62bcaa7ba743f059c557"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3903, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}