{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MzEzNTcy", "number": 4154, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMjoyMzoxOVrOEHGOGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMjoyMzoxOVrOEHGOGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1ODc3NDAzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/cloud/api/query/QueryManagerImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMjoyMzoxOVrOGmS5oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwNToxMjoyOFrOGmk1QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgwODczNg==", "bodyText": "Could this return Ids that are already there in affinityGroups ?", "url": "https://github.com/apache/cloudstack/pull/4154#discussion_r442808736", "createdAt": "2020-06-19T12:23:19Z", "author": {"login": "davidjumani"}, "path": "server/src/main/java/com/cloud/api/query/QueryManagerImpl.java", "diffHunk": "@@ -3624,25 +3624,30 @@ private void fillVMOrTemplateDetailOptions(final Map<String, List<String>> optio\n             if (domainId != null) {\n                 SearchCriteria<AffinityGroupJoinVO> scDomain = buildAffinityGroupSearchCriteria(null, isRecursive, new ArrayList<Long>(), listProjectResourcesCriteria, affinityGroupId,\n                         affinityGroupName, affinityGroupType, keyword);\n-                affinityGroups.addAll(listDomainLevelAffinityGroups(scDomain, searchFilter, domainId));\n+                List<AffinityGroupJoinVO> groups = listDomainLevelAffinityGroups(scDomain, searchFilter, domainId);\n+                affinityGroups.addAll(groups);\n+                count += groups.size();\n             } else {\n \n                 for (Long permAcctId : permittedAccounts) {\n                     Account permittedAcct = _accountDao.findById(permAcctId);\n                     SearchCriteria<AffinityGroupJoinVO> scDomain = buildAffinityGroupSearchCriteria(null, isRecursive, new ArrayList<Long>(), listProjectResourcesCriteria, affinityGroupId,\n                             affinityGroupName, affinityGroupType, keyword);\n-\n-                    affinityGroups.addAll(listDomainLevelAffinityGroups(scDomain, searchFilter, permittedAcct.getDomainId()));\n+                    List<AffinityGroupJoinVO> groups = listDomainLevelAffinityGroups(scDomain, searchFilter, permittedAcct.getDomainId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f538db3949166bc11d9b7324e8028ca9e48bf489"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEwMjM4MA==", "bodyText": "@shwstppr ?", "url": "https://github.com/apache/cloudstack/pull/4154#discussion_r443102380", "createdAt": "2020-06-20T05:10:14Z", "author": {"login": "rhtyd"}, "path": "server/src/main/java/com/cloud/api/query/QueryManagerImpl.java", "diffHunk": "@@ -3624,25 +3624,30 @@ private void fillVMOrTemplateDetailOptions(final Map<String, List<String>> optio\n             if (domainId != null) {\n                 SearchCriteria<AffinityGroupJoinVO> scDomain = buildAffinityGroupSearchCriteria(null, isRecursive, new ArrayList<Long>(), listProjectResourcesCriteria, affinityGroupId,\n                         affinityGroupName, affinityGroupType, keyword);\n-                affinityGroups.addAll(listDomainLevelAffinityGroups(scDomain, searchFilter, domainId));\n+                List<AffinityGroupJoinVO> groups = listDomainLevelAffinityGroups(scDomain, searchFilter, domainId);\n+                affinityGroups.addAll(groups);\n+                count += groups.size();\n             } else {\n \n                 for (Long permAcctId : permittedAccounts) {\n                     Account permittedAcct = _accountDao.findById(permAcctId);\n                     SearchCriteria<AffinityGroupJoinVO> scDomain = buildAffinityGroupSearchCriteria(null, isRecursive, new ArrayList<Long>(), listProjectResourcesCriteria, affinityGroupId,\n                             affinityGroupName, affinityGroupType, keyword);\n-\n-                    affinityGroups.addAll(listDomainLevelAffinityGroups(scDomain, searchFilter, permittedAcct.getDomainId()));\n+                    List<AffinityGroupJoinVO> groups = listDomainLevelAffinityGroups(scDomain, searchFilter, permittedAcct.getDomainId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgwODczNg=="}, "originalCommit": {"oid": "f538db3949166bc11d9b7324e8028ca9e48bf489"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEwMjUyOA==", "bodyText": "@davidjumani I think it might. Will check and fix if needed cc @rhtyd", "url": "https://github.com/apache/cloudstack/pull/4154#discussion_r443102528", "createdAt": "2020-06-20T05:12:28Z", "author": {"login": "shwstppr"}, "path": "server/src/main/java/com/cloud/api/query/QueryManagerImpl.java", "diffHunk": "@@ -3624,25 +3624,30 @@ private void fillVMOrTemplateDetailOptions(final Map<String, List<String>> optio\n             if (domainId != null) {\n                 SearchCriteria<AffinityGroupJoinVO> scDomain = buildAffinityGroupSearchCriteria(null, isRecursive, new ArrayList<Long>(), listProjectResourcesCriteria, affinityGroupId,\n                         affinityGroupName, affinityGroupType, keyword);\n-                affinityGroups.addAll(listDomainLevelAffinityGroups(scDomain, searchFilter, domainId));\n+                List<AffinityGroupJoinVO> groups = listDomainLevelAffinityGroups(scDomain, searchFilter, domainId);\n+                affinityGroups.addAll(groups);\n+                count += groups.size();\n             } else {\n \n                 for (Long permAcctId : permittedAccounts) {\n                     Account permittedAcct = _accountDao.findById(permAcctId);\n                     SearchCriteria<AffinityGroupJoinVO> scDomain = buildAffinityGroupSearchCriteria(null, isRecursive, new ArrayList<Long>(), listProjectResourcesCriteria, affinityGroupId,\n                             affinityGroupName, affinityGroupType, keyword);\n-\n-                    affinityGroups.addAll(listDomainLevelAffinityGroups(scDomain, searchFilter, permittedAcct.getDomainId()));\n+                    List<AffinityGroupJoinVO> groups = listDomainLevelAffinityGroups(scDomain, searchFilter, permittedAcct.getDomainId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgwODczNg=="}, "originalCommit": {"oid": "f538db3949166bc11d9b7324e8028ca9e48bf489"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3707, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}