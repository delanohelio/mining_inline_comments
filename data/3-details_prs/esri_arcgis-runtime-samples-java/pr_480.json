{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NjM3NjI1", "number": 480, "title": "Update readmes to match common design (Scene category) 1/5", "bodyText": "", "createdAt": "2020-04-21T12:18:29Z", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480", "merged": true, "mergeCommit": {"oid": "ba164ea1346722f22c912e70578f3a4349352d99"}, "closed": true, "closedAt": "2020-04-24T13:49:21Z", "author": {"login": "JonLavi"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZxOoTgH2gAyNDA2NjM3NjI1Ojk3YzEzMTM3MjQzNmVkNDk0YmIyNjRhYjRmODhkZmMxN2ZhM2Y2M2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaxx2vgFqTM5OTk2MTg4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "97c131372436ed494bb264ab4f88dfc17fa3f63a", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/97c131372436ed494bb264ab4f88dfc17fa3f63a", "committedDate": "2020-04-21T10:35:31Z", "message": "update readmes to match common design"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MTU5NDIx", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480#pullrequestreview-399159421", "createdAt": "2020-04-23T14:32:51Z", "commit": {"oid": "97c131372436ed494bb264ab4f88dfc17fa3f63a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDozMjo1MlrOGKrRwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDozNjozNVrOGKrePg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0ODAwMg==", "bodyText": "heading format update\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #### Tags\n          \n          \n            \n            ## Tags", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480#discussion_r413848002", "createdAt": "2020-04-23T14:32:52Z", "author": {"login": "Rachael-E"}, "path": "scene/animate-3d-graphic/README.md", "diffHunk": "@@ -1,66 +1,51 @@\n-# Animate 3D Graphic\n+# Animate 3D graphic\n \n-Animate a graphic's position and orientation and follow it with the camera.\n+A camera follows a graphic while the graphic's position and rotation are animated.\n \n-![](Animate3dGraphic.png)\n+![Image of animate 3D graphic](Animate3dGraphic.png)\n \n ## How to use the sample\n \n Animation Controls (Top Left Corner):\n \n * Select a mission -- selects a location with a route for plane to fly.\n * Mission progress -- shows how far along the route the plane is. Slide to change keyframe in animation.\n-* Play -- toggles playing and stopping the animation.\n-* Follow -- toggles camera following plane\n+* Play/Stop -- toggles playing and stopping the animation.\n+* Follow/Free Cam -- toggles camera following plane.\n \n Speed Slider (Top Right Corner):\n \n-* controls speed of animation\n+* Controls speed of animation.\n \n-Map Controls (Bottom Left Corner):\n+2D Map Controls (Bottom Left Corner):\n \n-* Plus and Minus -- controls distance of 2D view from ground level\n-\n-Moving the Camera:\n-\n-* Simply use regular zoom and pan interactions with the mouse. When in follow mode, the `OrbitGeoElementCameraController` being used will keep the camera locked to the plane.\n+* Plus and Minus -- controls distance of 2D view from ground level.\n \n ## How it works\n \n-To animate a `Graphic` by updating it's `Geometry`s, heading, pitch, and roll:\n-\n-1. Create a `GraphicsOverlay` and attach it to the `SceneView`.\n-2. Create a `ModelSceneSymbol` with `AnchorPosition.CENTER`.\n-3. Create a `Graphic(Geometry, Symbol)`.\n-    * set geometry to a point where graphic will be located in scene view\n-    * set symbol to the one we made above\n-4. Add Attributes to graphic.\n-    * Get attributes from graphic, `Graphic.getAttributes()`.\n-    * Add heading, pitch, and roll attribute, `attributes.put(\"[HEADING]\", heading)`;\n-5. Create a `SimpleRenderer` to access and set it's expression properties.\n-    * access properties with `Renderer.getSceneProperties()`\n-    * set heading, pitch, and roll expressions, `SceneProperties.setHeadingExpression(\"[HEADING]\")`.\n-6. Add graphic to the graphics overlay.\n-7. Set renderer to graphics overlay, `GraphicsOverlay.setRenderer(Renderer)`\n-8. Update graphic's location, `Graphic.setGeometry(Point)`.\n-9. Update symbol's heading, pitch, and roll, `attributes.replace(\"[HEADING]\", heading)`.\n+1. Create a `ModelSceneSymbol` object.\n+2. Create a `Graphic` object and set its geometry to a `Point`.\n+3. Set the `ModelSceneSymbol` object to the graphic.\n+4. Add heading, pitch, and roll attributes to the graphic. Get the attributes from the graphic with `Graphic.getAttributes()`.\n+5. Create a `SimpleRenderer` object and set its expression properties.\n+6. Add graphic and a renderer to the graphics overlay.\n+7. Create a `OrbitGeoElementCameraController` which is set to target the graphic.\n+8. Assign the camera controller to the `SceneView`.\n+9. Update the graphic's location, heading, pitch, and roll.\n \n ## Relevant API\n \n-* 3D\n-* ArcGISMap\n * ArcGISScene\n * Camera\n * GlobeCameraController\n * Graphic\n * GraphicsOverlay\n-* LayerSceneProperties.SurfacePlacement\n-* MapView\n * ModelSceneSymbol\n * OrbitGeoElementCameraController\n-* Point\n-* Polyline\n * Renderer\n-* Renderer.SceneProperties\n+* SceneProperties\n * SceneView\n-* Viewpoint\n+* SurfacePlacement\n+\n+#### Tags", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97c131372436ed494bb264ab4f88dfc17fa3f63a"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0ODc4NA==", "bodyText": "replacing with asterisks like our other samples\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - ArcGISScene\n          \n          \n            \n            - AtmosphereEffect\n          \n          \n            \n            - SceneView\n          \n          \n            \n            * ArcGISScene\n          \n          \n            \n            * AtmosphereEffect\n          \n          \n            \n            * SceneView", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480#discussion_r413848784", "createdAt": "2020-04-23T14:33:45Z", "author": {"login": "Rachael-E"}, "path": "scene/change-atmosphere-effect/README.md", "diffHunk": "@@ -1,34 +1,36 @@\n-# Change Atmosphere Effect\n+# Change atmosphere effect\n \n-Change the appearance of the atmosphere in a scene.\n+Changes the appearance of the atmosphere in a scene.\n \n-![](ChangeAtmosphereEffect.gif)\n+![Image of change atmosphere effect](ChangeAtmosphereEffect.gif)\n+\n+## Use case\n+\n+Atmospheric effects can be used to make the scene view look more realistic.\n \n ## How to use the sample\n \n Select one of the three available atmosphere effects. The sky will change to display the selected atmosphere effect.\n \n ## How it works\n \n-To change the atmosphere effect:\n-\n 1. Create an `ArcGISScene` and display it in a `SceneView`.\n 2. Change the atmosphere effect with `sceneView.setAtmosphereEffect(atmosphereEffect)`.\n \n ## Relevant API\n \n-* ArcGISScene\n-* AtmosphereEffect\n-* SceneView\n+- ArcGISScene\n+- AtmosphereEffect\n+- SceneView", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97c131372436ed494bb264ab4f88dfc17fa3f63a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0OTg5Nw==", "bodyText": "additional spaces crept in here\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *   ArcGISScene\n          \n          \n            \n            *   Camera\n          \n          \n            \n            *   GlobeCameraController\n          \n          \n            \n            *   OrbitGeoElementCameraController\n          \n          \n            \n            *   OrbitLocationCameraController\n          \n          \n            \n            *   SceneView\n          \n          \n            \n            * ArcGISScene\n          \n          \n            \n            * Camera\n          \n          \n            \n            * GlobeCameraController\n          \n          \n            \n            * OrbitGeoElementCameraController\n          \n          \n            \n            * OrbitLocationCameraController\n          \n          \n            \n            * SceneView", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480#discussion_r413849897", "createdAt": "2020-04-23T14:35:05Z", "author": {"login": "Rachael-E"}, "path": "scene/choose-camera-controller/README.md", "diffHunk": "@@ -14,18 +14,18 @@ The application loads with the default globe camera controller. To rotate and fi\n \n ## How it works\n \n-1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`\n+1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`.\n 2. Set the scene view's camera controller with `sceneView.setCameraController(cameraController)`.\n \n ## Relevant API\n \n-* ArcGISScene\n-* Camera\n-* GlobeCameraController\n-* OrbitGeoElementCameraController\n-* OrbitLocationCameraController\n-* SceneView\n+*   ArcGISScene\n+*   Camera\n+*   GlobeCameraController\n+*   OrbitGeoElementCameraController\n+*   OrbitLocationCameraController\n+*   SceneView", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97c131372436ed494bb264ab4f88dfc17fa3f63a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg1MTE5OA==", "bodyText": "I'm not too sure about this description, since our sample class doesn't extend Camera controller: we instantiate a new instance of each within the class.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480#discussion_r413851198", "createdAt": "2020-04-23T14:36:35Z", "author": {"login": "Rachael-E"}, "path": "scene/choose-camera-controller/README.md", "diffHunk": "@@ -14,18 +14,18 @@ The application loads with the default globe camera controller. To rotate and fi\n \n ## How it works\n \n-1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`\n+1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97c131372436ed494bb264ab4f88dfc17fa3f63a"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "203ed04d97bd6fea032674bac5ed9be37bd80689", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/203ed04d97bd6fea032674bac5ed9be37bd80689", "committedDate": "2020-04-23T16:39:15Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: Rachael Ellen <36415565+Rachael-E@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2325be2786c48bdaa4babe586b4485343bd14c4", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/e2325be2786c48bdaa4babe586b4485343bd14c4", "committedDate": "2020-04-24T13:42:03Z", "message": "Update README.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5OTYxODgw", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480#pullrequestreview-399961880", "createdAt": "2020-04-24T13:47:55Z", "commit": {"oid": "e2325be2786c48bdaa4babe586b4485343bd14c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3326, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}