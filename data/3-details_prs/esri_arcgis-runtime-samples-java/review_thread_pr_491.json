{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MTYzNjQw", "number": 491, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNjo1NzoxMFrOD1YIYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzowNTozNlrOD1YXiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Mjk2NDgzOnYy", "diffSide": "RIGHT", "path": "symbology/graphics-overlay-dictionary-renderer-3D/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNjo1NzoxMFrOGKyaiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNjo1NzoxMFrOGKyaiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk2NDkzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. Create a `SymbolDicitonary` from a dictionary (stylx) file.\n          \n          \n            \n            1. Create a `SymbolDictionary` from a dictionary (stylx) file.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/491#discussion_r413964939", "createdAt": "2020-04-23T16:57:10Z", "author": {"login": "Rachael-E"}, "path": "symbology/graphics-overlay-dictionary-renderer-3D/README.md", "diffHunk": "@@ -2,15 +2,19 @@\n \n Display MIL-STD-2525. military symbology in 3D.\n \n-The dictionary renderer creates these graphics using a local mil2525d style file included in the SDK's resources/symbols directory plus an XML file with key-value attributes for each graphic.\n+![Image of graphics overlay dictionary renderer 3D](GraphicsOverlayDictionaryRenderer3D.png)\n \n-![](GraphicsOverlayDictionaryRenderer3D.png)\n+## Use case\n \n-## How it works\n+Use a dictionary renderer on a graphics overlay to display more transient data, such as military messages coming through a local tactical network.\n+\n+## How to use the sample\n+\n+When launched, this sample displays a scene with a dictionary renderer. Pan and zoom to explore the scene.\n \n-To apply a `DictionaryRenderer` and display mil2525d graphics in 3D:\n+## How it works\n \n-1. Create a `SymbolDicitonary` with the \"mil2525d\" specification type: `SymbolDictionary(\"mil2525d\")`.\n+1. Create a `SymbolDicitonary` from a dictionary (stylx) file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8fc498c6cfc322cb0f78d3453254078df0c4a56"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Mjk3MDY0OnYy", "diffSide": "RIGHT", "path": "symbology/picture-marker-symbol/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNjo1ODoyOFrOGKyeAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNjo1ODoyOFrOGKyeAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk2NTgyNQ==", "bodyText": "some excess spaces here\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *   PictureMarkerSymbol\n          \n          \n            \n            * PictureMarkerSymbol", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/491#discussion_r413965825", "createdAt": "2020-04-23T16:58:28Z", "author": {"login": "Rachael-E"}, "path": "symbology/picture-marker-symbol/README.md", "diffHunk": "@@ -1,32 +1,33 @@\n-# Picture Marker Symbol\n+# Picture marker symbol\n \n Use pictures for markers.\n \n-![](PictureMarkerSymbol.png)\n+![Image of picture marker symbol](PictureMarkerSymbol.png)\n+\n+## Use case\n+\n+When marking geoelements on a map, using custom, unique symbols can be helpful for highlighting and differentiating between locations. For example, a tourism office may use pictures of landmarks as symbols on an online map or app, to help prospective visitors to orient themselves more easily around a city.\n \n ## How to use the sample\n \n-The picture marker symbols that you see in the app are all constructed from different types of resources:\n-  - campsite, constructed from a URL\n-  - blue pin with a star, stored in the resource folder that comes with the application\n-  - orange pin, created from a file path on disk (which is written to disk when the app starts and cleaned up when the app closes)\n+When launched, this sample displays a map with three picture marker symbols. Pan and zoom to explore the map.\n \n ## How it works\n \n-To display a `PictureMarkerSymbol`:\n-\n-1. Create the `ArcGISMap`'s with `Basemap`.\n-2. Create the `GraphicsOverlay` and add it to the `MapView` using `MapView.getGraphicsOverlays().add()`.\n-3. Add the map to the view, `MapView.setMap()`.\n-4. Use the constructor `PictureMarkerSymbol(String uri)` to create a symbol from a specified URI (URL, a web page, or from an absolute path to a file that is stored locally).\n-5. Use the constructor `PictureMarkerSymbol(Image)` to create a symbol from a local image.\n-6. Lastly once a symbol is created it will need to be added to a `Graphic`. Set the graphic to the graphics overlay using the `GraphicsOverlay.getGraphics().add()` method indicating the location `Point`.\n+1. Create a `PictureMarkerSymbol` using the URI to an online or local image.\n+2. Create a `Graphic` and set its symbol to the `PictureMarkerSymbol`.\n \n ## Relevant API\n \n-* ArcGISMap\n-* Graphic\n-* GraphicsOverlay\n-* MapView\n-* PictureMarkerSymbol\n-* Point\n+*   PictureMarkerSymbol", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8fc498c6cfc322cb0f78d3453254078df0c4a56"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Mjk3NjM2OnYy", "diffSide": "RIGHT", "path": "symbology/picture-marker-symbol/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNjo1OTo0MFrOGKyhXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNjo1OTo0MFrOGKyhXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk2NjY4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Blue pin with a star stored in the resource folder that comes with the application\n          \n          \n            \n             * Blue pin with a star and orange pin stored in the resources folder that comes with the application", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/491#discussion_r413966687", "createdAt": "2020-04-23T16:59:40Z", "author": {"login": "Rachael-E"}, "path": "symbology/picture-marker-symbol/README.md", "diffHunk": "@@ -1,32 +1,33 @@\n-# Picture Marker Symbol\n+# Picture marker symbol\n \n Use pictures for markers.\n \n-![](PictureMarkerSymbol.png)\n+![Image of picture marker symbol](PictureMarkerSymbol.png)\n+\n+## Use case\n+\n+When marking geoelements on a map, using custom, unique symbols can be helpful for highlighting and differentiating between locations. For example, a tourism office may use pictures of landmarks as symbols on an online map or app, to help prospective visitors to orient themselves more easily around a city.\n \n ## How to use the sample\n \n-The picture marker symbols that you see in the app are all constructed from different types of resources:\n-  - campsite, constructed from a URL\n-  - blue pin with a star, stored in the resource folder that comes with the application\n-  - orange pin, created from a file path on disk (which is written to disk when the app starts and cleaned up when the app closes)\n+When launched, this sample displays a map with three picture marker symbols. Pan and zoom to explore the map.\n \n ## How it works\n \n-To display a `PictureMarkerSymbol`:\n-\n-1. Create the `ArcGISMap`'s with `Basemap`.\n-2. Create the `GraphicsOverlay` and add it to the `MapView` using `MapView.getGraphicsOverlays().add()`.\n-3. Add the map to the view, `MapView.setMap()`.\n-4. Use the constructor `PictureMarkerSymbol(String uri)` to create a symbol from a specified URI (URL, a web page, or from an absolute path to a file that is stored locally).\n-5. Use the constructor `PictureMarkerSymbol(Image)` to create a symbol from a local image.\n-6. Lastly once a symbol is created it will need to be added to a `Graphic`. Set the graphic to the graphics overlay using the `GraphicsOverlay.getGraphics().add()` method indicating the location `Point`.\n+1. Create a `PictureMarkerSymbol` using the URI to an online or local image.\n+2. Create a `Graphic` and set its symbol to the `PictureMarkerSymbol`.\n \n ## Relevant API\n \n-* ArcGISMap\n-* Graphic\n-* GraphicsOverlay\n-* MapView\n-* PictureMarkerSymbol\n-* Point\n+*   PictureMarkerSymbol\n+\n+## About the data\n+\n+The picture marker symbols in this sample are all constructed from different types of resources:\n+ * [Campsite symbol constructed from a URL](http://sampleserver6.arcgisonline.com/arcgis/rest/services/Recreation/FeatureServer/0/images/e82f744ebb069bb35b234b3fea46deae)\n+ * Blue pin with a star stored in the resource folder that comes with the application", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8fc498c6cfc322cb0f78d3453254078df0c4a56"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Mjk3ODI3OnYy", "diffSide": "RIGHT", "path": "symbology/picture-marker-symbol/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzowMDowNlrOGKyiiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzowMDowNlrOGKyiiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk2Njk4Nw==", "bodyText": "can delete this part as we don't do this with Java", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/491#discussion_r413966987", "createdAt": "2020-04-23T17:00:06Z", "author": {"login": "Rachael-E"}, "path": "symbology/picture-marker-symbol/README.md", "diffHunk": "@@ -1,32 +1,33 @@\n-# Picture Marker Symbol\n+# Picture marker symbol\n \n Use pictures for markers.\n \n-![](PictureMarkerSymbol.png)\n+![Image of picture marker symbol](PictureMarkerSymbol.png)\n+\n+## Use case\n+\n+When marking geoelements on a map, using custom, unique symbols can be helpful for highlighting and differentiating between locations. For example, a tourism office may use pictures of landmarks as symbols on an online map or app, to help prospective visitors to orient themselves more easily around a city.\n \n ## How to use the sample\n \n-The picture marker symbols that you see in the app are all constructed from different types of resources:\n-  - campsite, constructed from a URL\n-  - blue pin with a star, stored in the resource folder that comes with the application\n-  - orange pin, created from a file path on disk (which is written to disk when the app starts and cleaned up when the app closes)\n+When launched, this sample displays a map with three picture marker symbols. Pan and zoom to explore the map.\n \n ## How it works\n \n-To display a `PictureMarkerSymbol`:\n-\n-1. Create the `ArcGISMap`'s with `Basemap`.\n-2. Create the `GraphicsOverlay` and add it to the `MapView` using `MapView.getGraphicsOverlays().add()`.\n-3. Add the map to the view, `MapView.setMap()`.\n-4. Use the constructor `PictureMarkerSymbol(String uri)` to create a symbol from a specified URI (URL, a web page, or from an absolute path to a file that is stored locally).\n-5. Use the constructor `PictureMarkerSymbol(Image)` to create a symbol from a local image.\n-6. Lastly once a symbol is created it will need to be added to a `Graphic`. Set the graphic to the graphics overlay using the `GraphicsOverlay.getGraphics().add()` method indicating the location `Point`.\n+1. Create a `PictureMarkerSymbol` using the URI to an online or local image.\n+2. Create a `Graphic` and set its symbol to the `PictureMarkerSymbol`.\n \n ## Relevant API\n \n-* ArcGISMap\n-* Graphic\n-* GraphicsOverlay\n-* MapView\n-* PictureMarkerSymbol\n-* Point\n+*   PictureMarkerSymbol\n+\n+## About the data\n+\n+The picture marker symbols in this sample are all constructed from different types of resources:\n+ * [Campsite symbol constructed from a URL](http://sampleserver6.arcgisonline.com/arcgis/rest/services/Recreation/FeatureServer/0/images/e82f744ebb069bb35b234b3fea46deae)\n+ * Blue pin with a star stored in the resource folder that comes with the application\n+ * Orange pin created from a file path on disk (which is written to disk when the app starts and cleaned up when the app closes).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8fc498c6cfc322cb0f78d3453254078df0c4a56"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Mjk5Mzc5OnYy", "diffSide": "RIGHT", "path": "symbology/simple-fill-symbol/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzowMzoyNVrOGKyrqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzowMzoyNVrOGKyrqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk2OTMyMw==", "bodyText": "strictly speaking, the symbol is applied to a Graphic's fill colour etc. The graphic is built using the polygon: and therefore a graphic with a polygon geometry is styled.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Change a polygon's fill color, outline color, and fill style properties.\n          \n          \n            \n            Change a graphic's fill color, outline color, and fill style properties.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/491#discussion_r413969323", "createdAt": "2020-04-23T17:03:25Z", "author": {"login": "Rachael-E"}, "path": "symbology/simple-fill-symbol/README.md", "diffHunk": "@@ -1,37 +1,38 @@\n-# Simple Fill Symbol\n+# Simple fill symbol\n \n-Change a graphic's fill color, outline, and style properties.\n+Change a polygon's fill color, outline color, and fill style properties.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8fc498c6cfc322cb0f78d3453254078df0c4a56"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Mjk5NDUzOnYy", "diffSide": "RIGHT", "path": "symbology/simple-fill-symbol/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzowMzozOVrOGKysKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzowMzozOVrOGKysKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk2OTQ0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Customize the appearance of a polygon with a color and style scheme suitable for the data. For example, a polygon with a brown 'forward-diagonal' fill style could represent an area of artificial ground mapped on a geological map.  \n          \n          \n            \n            Customize the appearance of a graphic with a color and style scheme suitable for the data. For example, a polygon with a brown 'forward-diagonal' fill style could represent an area of artificial ground mapped on a geological map.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/491#discussion_r413969448", "createdAt": "2020-04-23T17:03:39Z", "author": {"login": "Rachael-E"}, "path": "symbology/simple-fill-symbol/README.md", "diffHunk": "@@ -1,37 +1,38 @@\n-# Simple Fill Symbol\n+# Simple fill symbol\n \n-Change a graphic's fill color, outline, and style properties.\n+Change a polygon's fill color, outline color, and fill style properties.\n \n-![](SimpleFillSymbol.png)\n+![Image of simple fill symbol](SimpleFillSymbol.png)\n+\n+## Use case\n+\n+Customize the appearance of a polygon with a color and style scheme suitable for the data. For example, a polygon with a brown 'forward-diagonal' fill style could represent an area of artificial ground mapped on a geological map.  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8fc498c6cfc322cb0f78d3453254078df0c4a56"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzAwMDE3OnYy", "diffSide": "RIGHT", "path": "symbology/simple-fill-symbol/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzowNDo0OVrOGKyvgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzowNDo0OVrOGKyvgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk3MDMwNw==", "bodyText": "removing extra spaces\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *   Graphic\n          \n          \n            \n            *   GraphicsOverlay\n          \n          \n            \n            *   PointCollection\n          \n          \n            \n            *   Polygon\n          \n          \n            \n            *   SimpleFillSymbol\n          \n          \n            \n            *   SimpleLineSymbol\n          \n          \n            \n            * Graphic\n          \n          \n            \n            * GraphicsOverlay\n          \n          \n            \n            * PointCollection\n          \n          \n            \n            * Polygon\n          \n          \n            \n            * SimpleFillSymbol\n          \n          \n            \n            * SimpleLineSymbol", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/491#discussion_r413970307", "createdAt": "2020-04-23T17:04:49Z", "author": {"login": "Rachael-E"}, "path": "symbology/simple-fill-symbol/README.md", "diffHunk": "@@ -1,37 +1,38 @@\n-# Simple Fill Symbol\n+# Simple fill symbol\n \n-Change a graphic's fill color, outline, and style properties.\n+Change a polygon's fill color, outline color, and fill style properties.\n \n-![](SimpleFillSymbol.png)\n+![Image of simple fill symbol](SimpleFillSymbol.png)\n+\n+## Use case\n+\n+Customize the appearance of a polygon with a color and style scheme suitable for the data. For example, a polygon with a brown 'forward-diagonal' fill style could represent an area of artificial ground mapped on a geological map.  \n \n ## How to use the sample\n \n-Change Fill color: - change the color that makes up the area of the polygon\n-Change Outline Color: - adds a border color to the polygon\n-Change Fill Style: - changes the pattern that makes up the area of the polygon\n+Use the drop down menus in the control panel to change the fill color, outline color and fill style of the polygon.\n \n ## How it works\n \n-To create a `SimpleFillSymbol`:\n-\n-1. Create the `ArcGISMap`'s with `Basemap`.\n-2. Create the `GraphicsOverlay` and add it to the `MapView`, `MapView.getGraphicsOverlays().add()`.\n-3. Add the map to the `MapView`, `MapView.setMap()`.\n-4. Create a `Polygon` using a `PointCollection` to indicate the boundaries of the `Graphic`.\n-5. Create a `SimpleFillSymbol(SimpleMarkerSymbol.Style, color, outline)`.\n-    * style, pattern that makes up the area of the geometry\n-    * color, color the symbol will be displayed\n-    * outline, `SimpleLineSymbol` that make up the border of the symbol\n-6. Lately, create a `Graphic(Geometry, Symbol)` and add it to the graphics overlay.\n+1.  Create a `Polygon` using a `PointCollection` to define its boundaries. \n+2.  Create a `SimpleLineSymbol(SimpleLineSymbol.Style, color, width)`.\n+3.  Create a `SimpleFillSymbol(SimpleFillSymbol.Style, color, outline)`.\n+4.  Set the color, outline and style of the simple fill symbol object with:\n+\t* `setColor()`;\n+\t* `setOutline(simpleLineSymbol)`;\n+\t* `setStyle()`;\n+5.  Create a new `Graphic` object, passing in the polygon and simple fill symbol as parameters, and add the graphic to the graphics overlay with `graphicsOverlay.getGraphics().add(new Graphic(polygon, fillSymbol))`.\n \n ## Relevant API\n \n-* ArcGISMap\n-* Graphic\n-* GraphicsOverlay\n-* MapView\n-* Polygon\n-* PointCollection\n-* SimpleFillSymbol\n-* SimpleFillSymbol.Style\n-* SimpleLineSymbol\n+*   Graphic\n+*   GraphicsOverlay\n+*   PointCollection\n+*   Polygon\n+*   SimpleFillSymbol\n+*   SimpleLineSymbol", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8fc498c6cfc322cb0f78d3453254078df0c4a56"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzAwMzYwOnYy", "diffSide": "RIGHT", "path": "symbology/simple-line-symbol/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzowNTozNlrOGKyxoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzowNTozNlrOGKyxoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk3MDg0OA==", "bodyText": "removing excess spaces\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *   Graphic\n          \n          \n            \n            *   GraphicsOverlay\n          \n          \n            \n            *   PointCollection\n          \n          \n            \n            *   Polyline\n          \n          \n            \n            *   SimpleLineSymbol\n          \n          \n            \n            * Graphic\n          \n          \n            \n            * GraphicsOverlay\n          \n          \n            \n            * PointCollection\n          \n          \n            \n            * Polyline\n          \n          \n            \n            * SimpleLineSymbol", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/491#discussion_r413970848", "createdAt": "2020-04-23T17:05:36Z", "author": {"login": "Rachael-E"}, "path": "symbology/simple-line-symbol/README.md", "diffHunk": "@@ -1,36 +1,36 @@\n-# Simple Line Symbol\n+# Simple line symbol\n \n-Change a line graphic's color and style.\n+Change a line graphic's color, width and style.\n \n-![](SimpleLineSymbol.png)\n+![Image of simple line symbol](SimpleLineSymbol.png)\n+\n+## Use case\n+\n+Customize the appearance of a line with a color, width and style scheme suitable for the data. For example, a red line with a dashed style could represent a geological fault mapped on a geological map. \n \n ## How to use the sample\n \n-Change Line Color: - changes the color of the line symbol\n-Change Line Width: - change the width of the line symbol\n-Change Line Style: - changes the pattern of the line symbol\n+Use the drop down menus in the control panel to change the line color, width and style.\n \n ## How it works\n \n-To display a `SimpleLineSymbol`:\n-\n-1. Create a `ArcGISMap`'s with `Basemap`.\n-2. Create a `GraphicsOverlay` and add it to the `MapView`, `MapView.getGraphicsOverlays().add()`.\n-3. Add the map to the view, `MapView.setMap()`.\n-4. Create a `Polyline` using a `PointCollection` to indicate the boundaries of the `Graphic`.\n-5. Create a `SimpleLineSymbol(SimpleLineSymbol.Style, color, width)`.\n-    * style, pattern that makes up this symbol\n-    * color, color to display this symbol as\n-    * width, size of this symbol\n-6. Lately, create a `Graphic(Geometry, Symbol)` and add it to the graphics overlay.\n+1.  Create a `Polyline` using a `PointCollection` to define its geometry.\n+2.  Create a `SimpleLineSymbol(SimpleLineSymbol.Style, color, width)`.\n+3.  Set the color, width and style of the simple line symbol object with:\n+\t* `setColor()`;\n+\t* `setWidth()`;\n+\t* `setStyle()`;  \n+4.  Create a `Graphic` passing in the polyline and simple line symbol as parameters. \n+5.  Add the graphic to the graphics overlay with `graphicsOverlay.getGraphics().add(new Graphic(line, simpleLineSymbol))`.\n \n ## Relevant API\n \n-* ArcGISMap\n-* Graphic\n-* GraphicsOverlay\n-* MapView\n-* Polyline\n-* PointCollection\n-* SimpleLineSymbol\n-* SimpleLineSymbol.Style\n+*   Graphic\n+*   GraphicsOverlay\n+*   PointCollection\n+*   Polyline\n+*   SimpleLineSymbol", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8fc498c6cfc322cb0f78d3453254078df0c4a56"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4979, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}