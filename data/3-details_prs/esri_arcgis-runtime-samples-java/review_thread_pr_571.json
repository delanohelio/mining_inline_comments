{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMjgxNTI4", "number": 571, "reviewThreads": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTowNzo1MlrOEtiBpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNTo1MTo0NVrOE2I9CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTc4ODU0OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTowNzo1MlrOHhX2Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTowNzo1MlrOHhX2Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc1NTc0Nw==", "bodyText": "I'm thinking it might be nice to show a more zoomed-in map in the screenshot", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r504755747", "createdAt": "2020-10-14T15:07:52Z", "author": {"login": "JonLavi"}, "path": "map_view/display-device-location/README.md", "diffHunk": "@@ -0,0 +1,43 @@\n+# Display device location\n+\n+Display your position on the map and switch between different types of autopan modes.\n+\n+![Image of display device location](DisplayDeviceLocation.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTgxMDgwOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToxMjoyNFrOHhYDtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToxMjoyNFrOHhYDtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc1OTIyMQ==", "bodyText": "I wonder if it might be helpful to mention this is simulated data in the 'how to use', even if it's just clarifying something along the lines:\nClick the checkbox to show the location symbol at a simulated location on the map.\n\nOtherwise it's a bit puzzling where that location comes from, both when using the sample or reading the 'how it works' section", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r504759221", "createdAt": "2020-10-14T15:12:24Z", "author": {"login": "JonLavi"}, "path": "map_view/display-device-location/README.md", "diffHunk": "@@ -0,0 +1,43 @@\n+# Display device location\n+\n+Display your position on the map and switch between different types of autopan modes.\n+\n+![Image of display device location](DisplayDeviceLocation.png)\n+\n+## Use case\n+\n+When using a map within a GIS, it may be helpful for a user to know their own location within a map, whether that's to aid the user's navigation or to provide an easy means of identifying/collecting geospatial information at their location.\n+\n+## How to use the sample\n+\n+Click the checkbox to show the location symbol on the map. Select one of the autopan modes from the drop down box:\n+\n+* Off - Shows the location with no autopan mode set.\n+* Re-Center - In this mode, the map re-centers on the location symbol when the symbol moves outside a \"wander extent\".\n+* Navigation -  This mode is best suited for in-vehicle navigation.\n+* Compass - This mode is better suited for waypoint navigation when the user is walking.\n+\n+## How it works\n+\n+1. Create a `MapView`.\n+2. Get the `LocationDisplay` object by calling `getLocationDisplay()` on the `MapView`.\n+2. Create a `SimulatedLocationDataSource` and call its `setLocations()` method, passing the route `Polyline` and new `SimulationParameters` as parameters. \n+3. Start the `LocationDisplay` with `startAsync()` to begin receiving location updates.\n+5. Use `locationDisplay.setAutoPanMode` to change how the map behaves when location updates are received.\n+\n+## Relevant API\n+\n+* ArcGISMap\n+* LocationDisplay\n+* LocationDisplay.AutoPanMode\n+* MapView\n+* SimulatedLocationDataSource\n+* SimulationParameters\n+\n+## Additional information\n+\n+A custom set of points (provided in JSON format) is used to create a `Polyline` and configure a `SimulatedLocationDataSource`. The simulated location data source enables easier testing and allows the sample to be used on devices without an actively updating GPS signal. To display a user's real position, use `NMEALocationDataSource` instead.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTgxODEzOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location/README.metadata.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToxMzo1OFrOHhYIZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToxMzo1OFrOHhYIZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2MDQyMw==", "bodyText": "@Rachael-E might be able to tell whether enums/method calls are safe to put in this section, as it is used for generating some linkes on the user webpages?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r504760423", "createdAt": "2020-10-14T15:13:58Z", "author": {"login": "JonLavi"}, "path": "map_view/display-device-location/README.metadata.json", "diffHunk": "@@ -0,0 +1,37 @@\n+{\n+    \"category\": \"Map\",\n+    \"description\": \"Display your current position on the map, as well as switch between different types of auto pan modes.\",\n+    \"ignore\": false,\n+    \"images\": [\n+        \"DisplayDeviceLocation.png\"\n+    ],\n+    \"keywords\": [\n+        \"GPS\",\n+        \"compass\",\n+        \"location\",\n+        \"map\",\n+        \"mobile\",\n+        \"navigation\",\n+        \"ArcGISMap\",\n+        \"LocationDisplay\",\n+        \"LocationDisplay.AutoPanMode\",\n+        \"MapView\",\n+        \"SimulatedLocationDataSource\",\n+        \"SimulationParameters\"\n+    ],\n+    \"redirect_from\": [\n+        \"/java/latest/sample-code/display-a-map.htm\"\n+    ],\n+    \"relevant_apis\": [\n+        \"ArcGISMap\",\n+        \"LocationDisplay\",\n+        \"LocationDisplay.AutoPanMode\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTgzMTk3OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationLauncher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToxNjo0M1rOHhYQxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToxNjo0M1rOHhYQxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2MjU2Nw==", "bodyText": "Alan suggested adding a copyright statement to these files in a previous review. Something to consider @Rachael-E @TADraeseke ?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r504762567", "createdAt": "2020-10-14T15:16:43Z", "author": {"login": "JonLavi"}, "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationLauncher.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package com.esri.samples.display_device_location;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTgzNzIzOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToxNzo1MVrOHhYUJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToxNzo1MVrOHhYUJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2MzQyOQ==", "bodyText": "I'm a bit puzzled why in the app, when setting this to compass, the movement seems to switch to a more step-by-step style rather than a fluid movement of the position. Is this on purpose?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r504763429", "createdAt": "2020-10-14T15:17:51Z", "author": {"login": "JonLavi"}, "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add scene to stage\n+      stage.setTitle(\"Display Device Location Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location/style.css\").toExternalForm());\n+\n+      // create ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Off\", \"Recenter\", \"Navigation\", \"Compass\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTg0NjA4OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToxOTo0OVrOHhYZvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToxOTo0OVrOHhYZvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2NDg2MQ==", "bodyText": "@jenmerritt has recently made some of these comments more 'plain english', and I would agree that it makes it a bit nicer:\nhttps://github.com/Esri/arcgis-runtime-samples-java/pull/562/files#diff-233d54d978f8d006706bc3736efd6f05f86d772aff9079b897c9f9fa12c33a88R55\nMight be good to update these here too?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r504764861", "createdAt": "2020-10-14T15:19:49Z", "author": {"login": "JonLavi"}, "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTg3MzA1OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToyNToyNFrOHhYqrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNToyNToyNFrOHhYqrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2OTE5OA==", "bodyText": "I think it'd be nice to start the sample with the box getting ticked and the location showing, and one of the auto-pan modes enabled (as soon as the map is loaded, of course). That way we're going straight into the action, rather than showing no location at all on startup? Personal preference though, so just proceed as designed.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r504769198", "createdAt": "2020-10-14T15:25:24Z", "author": {"login": "JonLavi"}, "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add scene to stage\n+      stage.setTitle(\"Display Device Location Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location/style.css\").toExternalForm());\n+\n+      // create ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Off\", \"Recenter\", \"Navigation\", \"Compass\");\n+      comboBox.setValue(\"Off\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkbox = new CheckBox(\"Show device location\");\n+      checkbox.setDisable(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTkwMjI3OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTozMToyNFrOHhY9Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTozMToyNFrOHhY9Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3MzkyNw==", "bodyText": "I don't think it's necessary to add the listener again every time the checkbox is ticked.\nWe could simply put this block of code on line 147, and then this listener is added to the combobox on startup. When we enable/disable the combobox through the checkbox, we effectively block the user from changing the autopan mode, and there's no extra listener added every time.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r504773927", "createdAt": "2020-10-14T15:31:24Z", "author": {"login": "JonLavi"}, "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add scene to stage\n+      stage.setTitle(\"Display Device Location Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location/style.css\").toExternalForm());\n+\n+      // create ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Off\", \"Recenter\", \"Navigation\", \"Compass\");\n+      comboBox.setValue(\"Off\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkbox = new CheckBox(\"Show device location\");\n+      checkbox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\"/display_device_location/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n+      // set the location of the simulated location data source with simulation parameters to set a consistent velocity\n+      simulatedLocationDataSource.setLocations(\n+        locations, new SimulationParameters(Calendar.getInstance(), 5.0, 0.0, 0.0));\n+\n+      // configure the map view's location display to follow the simulated location data source\n+      LocationDisplay locationDisplay = mapView.getLocationDisplay();\n+      locationDisplay.setLocationDataSource(simulatedLocationDataSource);\n+\n+      // toggle the location display visibility on check\n+      checkbox.setOnAction(event -> {\n+        if (checkbox.isSelected()) {\n+          // enable to combo box interactions\n+          comboBox.setDisable(false);\n+\n+          // start the location display\n+          locationDisplay.startAsync();\n+\n+          // set the autopan mode of the location display based on the mode chosen from the combo box\n+          comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+\n+            // set the scale that the map view will zoom to when the autopan mode is changed\n+            locationDisplay.setInitialZoomScale(1000);\n+\n+            // set the iteration rate to control the time between location updates\n+            simulatedLocationDataSource.setIterationRate(1.0);\n+\n+            switch (comboBox.getSelectionModel().getSelectedItem()) {\n+              case \"Off\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.OFF);\n+                break;\n+              case \"Recenter\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+                break;\n+              case \"Navigation\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.NAVIGATION);\n+                break;\n+              case \"Compass\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.COMPASS_NAVIGATION);\n+                simulatedLocationDataSource.setIterationRate(0.5);\n+                break;\n+            }\n+          });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTkwNzI5OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTozMjozMVrOHhZAWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxODoxNzo0NFrOHiUZ1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3NDc0Ng==", "bodyText": "I see now where the step-by-step movement is coming from. From my perspective this is a little misleading to a user, because they might think using this auto-pan-mode has some sort of effect on how the movement is displayed. Might be worth discussing in a review session, if this design isn't finalised yet?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r504774746", "createdAt": "2020-10-14T15:32:31Z", "author": {"login": "JonLavi"}, "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add scene to stage\n+      stage.setTitle(\"Display Device Location Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location/style.css\").toExternalForm());\n+\n+      // create ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Off\", \"Recenter\", \"Navigation\", \"Compass\");\n+      comboBox.setValue(\"Off\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkbox = new CheckBox(\"Show device location\");\n+      checkbox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\"/display_device_location/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n+      // set the location of the simulated location data source with simulation parameters to set a consistent velocity\n+      simulatedLocationDataSource.setLocations(\n+        locations, new SimulationParameters(Calendar.getInstance(), 5.0, 0.0, 0.0));\n+\n+      // configure the map view's location display to follow the simulated location data source\n+      LocationDisplay locationDisplay = mapView.getLocationDisplay();\n+      locationDisplay.setLocationDataSource(simulatedLocationDataSource);\n+\n+      // toggle the location display visibility on check\n+      checkbox.setOnAction(event -> {\n+        if (checkbox.isSelected()) {\n+          // enable to combo box interactions\n+          comboBox.setDisable(false);\n+\n+          // start the location display\n+          locationDisplay.startAsync();\n+\n+          // set the autopan mode of the location display based on the mode chosen from the combo box\n+          comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+\n+            // set the scale that the map view will zoom to when the autopan mode is changed\n+            locationDisplay.setInitialZoomScale(1000);\n+\n+            // set the iteration rate to control the time between location updates\n+            simulatedLocationDataSource.setIterationRate(1.0);\n+\n+            switch (comboBox.getSelectionModel().getSelectedItem()) {\n+              case \"Off\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.OFF);\n+                break;\n+              case \"Recenter\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+                break;\n+              case \"Navigation\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.NAVIGATION);\n+                break;\n+              case \"Compass\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.COMPASS_NAVIGATION);\n+                simulatedLocationDataSource.setIterationRate(0.5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc0NzkyNw==", "bodyText": "I think this is a good point. I will show this off at the samples review.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r505747927", "createdAt": "2020-10-15T18:17:44Z", "author": {"login": "sclaridge"}, "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add scene to stage\n+      stage.setTitle(\"Display Device Location Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location/style.css\").toExternalForm());\n+\n+      // create ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Off\", \"Recenter\", \"Navigation\", \"Compass\");\n+      comboBox.setValue(\"Off\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkbox = new CheckBox(\"Show device location\");\n+      checkbox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\"/display_device_location/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n+      // set the location of the simulated location data source with simulation parameters to set a consistent velocity\n+      simulatedLocationDataSource.setLocations(\n+        locations, new SimulationParameters(Calendar.getInstance(), 5.0, 0.0, 0.0));\n+\n+      // configure the map view's location display to follow the simulated location data source\n+      LocationDisplay locationDisplay = mapView.getLocationDisplay();\n+      locationDisplay.setLocationDataSource(simulatedLocationDataSource);\n+\n+      // toggle the location display visibility on check\n+      checkbox.setOnAction(event -> {\n+        if (checkbox.isSelected()) {\n+          // enable to combo box interactions\n+          comboBox.setDisable(false);\n+\n+          // start the location display\n+          locationDisplay.startAsync();\n+\n+          // set the autopan mode of the location display based on the mode chosen from the combo box\n+          comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+\n+            // set the scale that the map view will zoom to when the autopan mode is changed\n+            locationDisplay.setInitialZoomScale(1000);\n+\n+            // set the iteration rate to control the time between location updates\n+            simulatedLocationDataSource.setIterationRate(1.0);\n+\n+            switch (comboBox.getSelectionModel().getSelectedItem()) {\n+              case \"Off\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.OFF);\n+                break;\n+              case \"Recenter\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+                break;\n+              case \"Navigation\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.NAVIGATION);\n+                break;\n+              case \"Compass\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.COMPASS_NAVIGATION);\n+                simulatedLocationDataSource.setIterationRate(0.5);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3NDc0Ng=="}, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 137}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTkxODA5OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTozNDo0OFrOHhZHMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwODoxMjowNFrOHh6FOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3NjQ5Nw==", "bodyText": "If you move adding the listener to the combobox outside of the interaction with the checkbox, you could do a little bit of refactoring:\n      // toggle the location display visibility on check\n      checkbox.setOnAction(event -> {\n        if (checkbox.isSelected()) {\n          // start the location display\n          locationDisplay.startAsync();\n\n        } else {\n          // turn off the location display\n          locationDisplay.stop();\n        }\n\n        // toggle the combo box interactions\n        comboBox.setDisable(!checkbox.isSelected());\n      });\n\nSince you always want to toggle the disabled property pf the combobox in line with the is selected property of the checkbox, you can do this outside of the if/else statement:\ncomboBox.setDisable(!checkbox.isSelected());\nMight not be everyone's cup of tea though, so I'll leave that to you and @Rachael-E to decide.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r504776497", "createdAt": "2020-10-14T15:34:48Z", "author": {"login": "JonLavi"}, "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add scene to stage\n+      stage.setTitle(\"Display Device Location Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location/style.css\").toExternalForm());\n+\n+      // create ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Off\", \"Recenter\", \"Navigation\", \"Compass\");\n+      comboBox.setValue(\"Off\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkbox = new CheckBox(\"Show device location\");\n+      checkbox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\"/display_device_location/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n+      // set the location of the simulated location data source with simulation parameters to set a consistent velocity\n+      simulatedLocationDataSource.setLocations(\n+        locations, new SimulationParameters(Calendar.getInstance(), 5.0, 0.0, 0.0));\n+\n+      // configure the map view's location display to follow the simulated location data source\n+      LocationDisplay locationDisplay = mapView.getLocationDisplay();\n+      locationDisplay.setLocationDataSource(simulatedLocationDataSource);\n+\n+      // toggle the location display visibility on check\n+      checkbox.setOnAction(event -> {\n+        if (checkbox.isSelected()) {\n+          // enable to combo box interactions\n+          comboBox.setDisable(false);\n+\n+          // start the location display\n+          locationDisplay.startAsync();\n+\n+          // set the autopan mode of the location display based on the mode chosen from the combo box\n+          comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+\n+            // set the scale that the map view will zoom to when the autopan mode is changed\n+            locationDisplay.setInitialZoomScale(1000);\n+\n+            // set the iteration rate to control the time between location updates\n+            simulatedLocationDataSource.setIterationRate(1.0);\n+\n+            switch (comboBox.getSelectionModel().getSelectedItem()) {\n+              case \"Off\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.OFF);\n+                break;\n+              case \"Recenter\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+                break;\n+              case \"Navigation\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.NAVIGATION);\n+                break;\n+              case \"Compass\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.COMPASS_NAVIGATION);\n+                simulatedLocationDataSource.setIterationRate(0.5);\n+                break;\n+            }\n+          });\n+        } else {\n+          // turn off the location display\n+          locationDisplay.stop();\n+          comboBox.setDisable(true);\n+        }\n+      });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTMxNjY2Nw==", "bodyText": "I'm noticing another thing here, a better variable name would be checkBox.\nAnd another alternative for enabling/disabling the checkbox and combobox in tandem would be to use something called property binding:\n      checkbox.selectedProperty().bindBidirectional(comboBox.disableProperty());\n\nIt's quite a useful concept, so worth looking into a little!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r505316667", "createdAt": "2020-10-15T08:12:04Z", "author": {"login": "JonLavi"}, "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add scene to stage\n+      stage.setTitle(\"Display Device Location Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location/style.css\").toExternalForm());\n+\n+      // create ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Off\", \"Recenter\", \"Navigation\", \"Compass\");\n+      comboBox.setValue(\"Off\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkbox = new CheckBox(\"Show device location\");\n+      checkbox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\"/display_device_location/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n+      // set the location of the simulated location data source with simulation parameters to set a consistent velocity\n+      simulatedLocationDataSource.setLocations(\n+        locations, new SimulationParameters(Calendar.getInstance(), 5.0, 0.0, 0.0));\n+\n+      // configure the map view's location display to follow the simulated location data source\n+      LocationDisplay locationDisplay = mapView.getLocationDisplay();\n+      locationDisplay.setLocationDataSource(simulatedLocationDataSource);\n+\n+      // toggle the location display visibility on check\n+      checkbox.setOnAction(event -> {\n+        if (checkbox.isSelected()) {\n+          // enable to combo box interactions\n+          comboBox.setDisable(false);\n+\n+          // start the location display\n+          locationDisplay.startAsync();\n+\n+          // set the autopan mode of the location display based on the mode chosen from the combo box\n+          comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+\n+            // set the scale that the map view will zoom to when the autopan mode is changed\n+            locationDisplay.setInitialZoomScale(1000);\n+\n+            // set the iteration rate to control the time between location updates\n+            simulatedLocationDataSource.setIterationRate(1.0);\n+\n+            switch (comboBox.getSelectionModel().getSelectedItem()) {\n+              case \"Off\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.OFF);\n+                break;\n+              case \"Recenter\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+                break;\n+              case \"Navigation\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.NAVIGATION);\n+                break;\n+              case \"Compass\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.COMPASS_NAVIGATION);\n+                simulatedLocationDataSource.setIterationRate(0.5);\n+                break;\n+            }\n+          });\n+        } else {\n+          // turn off the location display\n+          locationDisplay.stop();\n+          comboBox.setDisable(true);\n+        }\n+      });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3NjQ5Nw=="}, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTkyNDc2OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTozNjoxN1rOHhZLbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTozNjoxN1rOHhZLbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3NzU4Mw==", "bodyText": "I'd personally have the tickbox ticked here, and put one of the auto-pan-modes on (e.g. recenter), so that the user is taken straight to the action.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r504777583", "createdAt": "2020-10-14T15:36:17Z", "author": {"login": "JonLavi"}, "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add scene to stage\n+      stage.setTitle(\"Display Device Location Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location/style.css\").toExternalForm());\n+\n+      // create ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a map view and set its map\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Off\", \"Recenter\", \"Navigation\", \"Compass\");\n+      comboBox.setValue(\"Off\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkbox = new CheckBox(\"Show device location\");\n+      checkbox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\"/display_device_location/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n+      // set the location of the simulated location data source with simulation parameters to set a consistent velocity\n+      simulatedLocationDataSource.setLocations(\n+        locations, new SimulationParameters(Calendar.getInstance(), 5.0, 0.0, 0.0));\n+\n+      // configure the map view's location display to follow the simulated location data source\n+      LocationDisplay locationDisplay = mapView.getLocationDisplay();\n+      locationDisplay.setLocationDataSource(simulatedLocationDataSource);\n+\n+      // toggle the location display visibility on check\n+      checkbox.setOnAction(event -> {\n+        if (checkbox.isSelected()) {\n+          // enable to combo box interactions\n+          comboBox.setDisable(false);\n+\n+          // start the location display\n+          locationDisplay.startAsync();\n+\n+          // set the autopan mode of the location display based on the mode chosen from the combo box\n+          comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+\n+            // set the scale that the map view will zoom to when the autopan mode is changed\n+            locationDisplay.setInitialZoomScale(1000);\n+\n+            // set the iteration rate to control the time between location updates\n+            simulatedLocationDataSource.setIterationRate(1.0);\n+\n+            switch (comboBox.getSelectionModel().getSelectedItem()) {\n+              case \"Off\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.OFF);\n+                break;\n+              case \"Recenter\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+                break;\n+              case \"Navigation\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.NAVIGATION);\n+                break;\n+              case \"Compass\":\n+                locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.COMPASS_NAVIGATION);\n+                simulatedLocationDataSource.setIterationRate(0.5);\n+                break;\n+            }\n+          });\n+        } else {\n+          // turn off the location display\n+          locationDisplay.stop();\n+          comboBox.setDisable(true);\n+        }\n+      });\n+\n+      // enable the checkbox interactions when the map is loaded\n+      map.addDoneLoadingListener(() -> {\n+        if (map.getLoadStatus() == LoadStatus.LOADED) {\n+          checkbox.setDisable(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 151}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTkzMzkwOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTozODoxN1rOHhZRFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTozODoxN1rOHhZRFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3OTAyOA==", "bodyText": "Personally I find it a bit more intuitive to use a streets basemap for navigation, rather than satellite imagery (because it shows roads and road names more clearly), but that's a matter of preference!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r504779028", "createdAt": "2020-10-14T15:38:17Z", "author": {"login": "JonLavi"}, "path": "map_view/display-device-location/src/main/java/com/esri/samples/display_device_location/DisplayDeviceLocationSample.java", "diffHunk": "@@ -0,0 +1,197 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create stack pane and application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set title, size, and add scene to stage\n+      stage.setTitle(\"Display Device Location Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location/style.css\").toExternalForm());\n+\n+      // create ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077ae8abdc6c7ad784ce8c3987e8965877e25ec7"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzAyODIwOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMTozNDoyNFrOHrLOyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMTozNDoyNFrOHrLOyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTAzNDgyNQ==", "bodyText": "I think a wee gif here would look great: the static image doesn't show a user much about what the sample does other than its UI set up.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515034825", "createdAt": "2020-10-30T11:34:24Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.md", "diffHunk": "@@ -0,0 +1,43 @@\n+# Display device location with autopan modes\n+\n+Display your position on the map and switch between different types of autopan modes.\n+\n+![Image of display device location with autopan modes](DisplayDeviceLocationWithAutopanModes.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzM2NzUwOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzoxMToyNVrOHrOThQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzoxMToyNVrOHrOThQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA4NTE4OQ==", "bodyText": "The sample starts with the checkbox already selected, we can reorder this a little:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Click the checkbox to show the location symbol at a simulated location on the map. Select one of the autopan modes from the drop down box:\n          \n          \n            \n            The sample loads with a symbol marking a simulated location on the map. Explore the available autopan modes by selecting an option from the drop down box :", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515085189", "createdAt": "2020-10-30T13:11:25Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.md", "diffHunk": "@@ -0,0 +1,43 @@\n+# Display device location with autopan modes\n+\n+Display your position on the map and switch between different types of autopan modes.\n+\n+![Image of display device location with autopan modes](DisplayDeviceLocationWithAutopanModes.png)\n+\n+## Use case\n+\n+When using a map within a GIS, it may be helpful for a user to know their own location within a map, whether that's to aid the user's navigation or to provide an easy means of identifying/collecting geospatial information at their location.\n+\n+## How to use the sample\n+\n+Click the checkbox to show the location symbol at a simulated location on the map. Select one of the autopan modes from the drop down box:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzM2OTA2OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzoxMTo1MlrOHrOUdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzoxMTo1MlrOHrOUdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA4NTQzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            Uncheck the box to stop the location display.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515085430", "createdAt": "2020-10-30T13:11:52Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.md", "diffHunk": "@@ -0,0 +1,43 @@\n+# Display device location with autopan modes\n+\n+Display your position on the map and switch between different types of autopan modes.\n+\n+![Image of display device location with autopan modes](DisplayDeviceLocationWithAutopanModes.png)\n+\n+## Use case\n+\n+When using a map within a GIS, it may be helpful for a user to know their own location within a map, whether that's to aid the user's navigation or to provide an easy means of identifying/collecting geospatial information at their location.\n+\n+## How to use the sample\n+\n+Click the checkbox to show the location symbol at a simulated location on the map. Select one of the autopan modes from the drop down box:\n+\n+* Off - Shows the location with no autopan mode set.\n+* Re-Center - In this mode, the map re-centers on the location symbol when the symbol moves outside a \"wander extent\".\n+* Navigation -  This mode is best suited for in-vehicle navigation.\n+* Compass - This mode is better suited for waypoint navigation when the user is walking.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzM3MTMxOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzoxMjozMlrOHrOVyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzoxMjozMlrOHrOVyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA4NTc3MQ==", "bodyText": "since we've already mentioned the class map view above, we can refer to it as plain english afterwards:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2. Get the `LocationDisplay` object by calling `getLocationDisplay()` on the `MapView`.\n          \n          \n            \n            2. Get the `LocationDisplay` object by calling `getLocationDisplay()` on the map view.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515085771", "createdAt": "2020-10-30T13:12:32Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.md", "diffHunk": "@@ -0,0 +1,43 @@\n+# Display device location with autopan modes\n+\n+Display your position on the map and switch between different types of autopan modes.\n+\n+![Image of display device location with autopan modes](DisplayDeviceLocationWithAutopanModes.png)\n+\n+## Use case\n+\n+When using a map within a GIS, it may be helpful for a user to know their own location within a map, whether that's to aid the user's navigation or to provide an easy means of identifying/collecting geospatial information at their location.\n+\n+## How to use the sample\n+\n+Click the checkbox to show the location symbol at a simulated location on the map. Select one of the autopan modes from the drop down box:\n+\n+* Off - Shows the location with no autopan mode set.\n+* Re-Center - In this mode, the map re-centers on the location symbol when the symbol moves outside a \"wander extent\".\n+* Navigation -  This mode is best suited for in-vehicle navigation.\n+* Compass - This mode is better suited for waypoint navigation when the user is walking.\n+\n+## How it works\n+\n+1. Create a `MapView`.\n+2. Get the `LocationDisplay` object by calling `getLocationDisplay()` on the `MapView`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzM3MzE4OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzoxMzowN1rOHrOW7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzoxMzowN1rOHrOW7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA4NjA2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            3. Start the `LocationDisplay` with `startAsync()` to begin receiving location updates.\n          \n          \n            \n            3. Start the location display with `startAsync()` to begin receiving location updates.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515086062", "createdAt": "2020-10-30T13:13:07Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.md", "diffHunk": "@@ -0,0 +1,43 @@\n+# Display device location with autopan modes\n+\n+Display your position on the map and switch between different types of autopan modes.\n+\n+![Image of display device location with autopan modes](DisplayDeviceLocationWithAutopanModes.png)\n+\n+## Use case\n+\n+When using a map within a GIS, it may be helpful for a user to know their own location within a map, whether that's to aid the user's navigation or to provide an easy means of identifying/collecting geospatial information at their location.\n+\n+## How to use the sample\n+\n+Click the checkbox to show the location symbol at a simulated location on the map. Select one of the autopan modes from the drop down box:\n+\n+* Off - Shows the location with no autopan mode set.\n+* Re-Center - In this mode, the map re-centers on the location symbol when the symbol moves outside a \"wander extent\".\n+* Navigation -  This mode is best suited for in-vehicle navigation.\n+* Compass - This mode is better suited for waypoint navigation when the user is walking.\n+\n+## How it works\n+\n+1. Create a `MapView`.\n+2. Get the `LocationDisplay` object by calling `getLocationDisplay()` on the `MapView`.\n+2. Create a `SimulatedLocationDataSource` and call its `setLocations()` method, passing the route `Polyline` and new `SimulationParameters` as parameters. \n+3. Start the `LocationDisplay` with `startAsync()` to begin receiving location updates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzM4NDcyOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzoxNTo1NVrOHrOd8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzoxNTo1NVrOHrOd8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA4Nzg1Ng==", "bodyText": "this behaviour is set on the map view, not the map: let's update this text to reflect that\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            5. Use `locationDisplay.setAutoPanMode` to change how the map behaves when location updates are received.\n          \n          \n            \n            5. Use `locationDisplay.setAutoPanMode()` to change how the map view behaves when location updates are received.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515087856", "createdAt": "2020-10-30T13:15:55Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.md", "diffHunk": "@@ -0,0 +1,43 @@\n+# Display device location with autopan modes\n+\n+Display your position on the map and switch between different types of autopan modes.\n+\n+![Image of display device location with autopan modes](DisplayDeviceLocationWithAutopanModes.png)\n+\n+## Use case\n+\n+When using a map within a GIS, it may be helpful for a user to know their own location within a map, whether that's to aid the user's navigation or to provide an easy means of identifying/collecting geospatial information at their location.\n+\n+## How to use the sample\n+\n+Click the checkbox to show the location symbol at a simulated location on the map. Select one of the autopan modes from the drop down box:\n+\n+* Off - Shows the location with no autopan mode set.\n+* Re-Center - In this mode, the map re-centers on the location symbol when the symbol moves outside a \"wander extent\".\n+* Navigation -  This mode is best suited for in-vehicle navigation.\n+* Compass - This mode is better suited for waypoint navigation when the user is walking.\n+\n+## How it works\n+\n+1. Create a `MapView`.\n+2. Get the `LocationDisplay` object by calling `getLocationDisplay()` on the `MapView`.\n+2. Create a `SimulatedLocationDataSource` and call its `setLocations()` method, passing the route `Polyline` and new `SimulationParameters` as parameters. \n+3. Start the `LocationDisplay` with `startAsync()` to begin receiving location updates.\n+5. Use `locationDisplay.setAutoPanMode` to change how the map behaves when location updates are received.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzg1MTYzOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTowMToxOFrOHrTD4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTowMToxOFrOHrTD4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE2MzEwNg==", "bodyText": "let's rename this in the drop down to match this notation (currently the drop down is \"recenter\")", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515163106", "createdAt": "2020-10-30T15:01:18Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.md", "diffHunk": "@@ -0,0 +1,43 @@\n+# Display device location with autopan modes\n+\n+Display your position on the map and switch between different types of autopan modes.\n+\n+![Image of display device location with autopan modes](DisplayDeviceLocationWithAutopanModes.png)\n+\n+## Use case\n+\n+When using a map within a GIS, it may be helpful for a user to know their own location within a map, whether that's to aid the user's navigation or to provide an easy means of identifying/collecting geospatial information at their location.\n+\n+## How to use the sample\n+\n+Click the checkbox to show the location symbol at a simulated location on the map. Select one of the autopan modes from the drop down box:\n+\n+* Off - Shows the location with no autopan mode set.\n+* Re-Center - In this mode, the map re-centers on the location symbol when the symbol moves outside a \"wander extent\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzkwMTUzOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxMzo0OFrOHrTjqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxMzo0OFrOHrTjqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE3MTI0MA==", "bodyText": "I'd argue this isn't a relevant API for this sample: ArcGISMap is relevant in ALL 2D samples, but unless it's forming the main part of a sample (like \"Display a Map, set zoom scale, set location etc) we don't need to include it.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515171240", "createdAt": "2020-10-30T15:13:48Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.md", "diffHunk": "@@ -0,0 +1,43 @@\n+# Display device location with autopan modes\n+\n+Display your position on the map and switch between different types of autopan modes.\n+\n+![Image of display device location with autopan modes](DisplayDeviceLocationWithAutopanModes.png)\n+\n+## Use case\n+\n+When using a map within a GIS, it may be helpful for a user to know their own location within a map, whether that's to aid the user's navigation or to provide an easy means of identifying/collecting geospatial information at their location.\n+\n+## How to use the sample\n+\n+Click the checkbox to show the location symbol at a simulated location on the map. Select one of the autopan modes from the drop down box:\n+\n+* Off - Shows the location with no autopan mode set.\n+* Re-Center - In this mode, the map re-centers on the location symbol when the symbol moves outside a \"wander extent\".\n+* Navigation -  This mode is best suited for in-vehicle navigation.\n+* Compass - This mode is better suited for waypoint navigation when the user is walking.\n+\n+## How it works\n+\n+1. Create a `MapView`.\n+2. Get the `LocationDisplay` object by calling `getLocationDisplay()` on the `MapView`.\n+2. Create a `SimulatedLocationDataSource` and call its `setLocations()` method, passing the route `Polyline` and new `SimulationParameters` as parameters. \n+3. Start the `LocationDisplay` with `startAsync()` to begin receiving location updates.\n+5. Use `locationDisplay.setAutoPanMode` to change how the map behaves when location updates are received.\n+\n+## Relevant API\n+\n+* ArcGISMap", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzkxMTM5OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxNjoxNFrOHrTp7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxNjoxNFrOHrTp7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE3Mjg0Ng==", "bodyText": "we are in Map view for this sample :) is there a problem with the script?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"category\": \"Map\",\n          \n          \n            \n                \"category\": \"Map view\",", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515172846", "createdAt": "2020-10-30T15:16:14Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "diffHunk": "@@ -0,0 +1,37 @@\n+{\n+    \"category\": \"Map\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzkxMzYxOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxNjo0N1rOHrTrUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxNjo0N1rOHrTrUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE3MzIwMw==", "bodyText": "this doesn't match the description in the above readme?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"description\": \"Display your current position on the map, as well as switch between different types of auto pan modes.\",\n          \n          \n            \n                \"description\": \"Display your position on the map and switch between different types of autopan modes.\",", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515173203", "createdAt": "2020-10-30T15:16:47Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "diffHunk": "@@ -0,0 +1,37 @@\n+{\n+    \"category\": \"Map\",\n+    \"description\": \"Display your current position on the map, as well as switch between different types of auto pan modes.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzkxNzM1OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxNzo1MVrOHrTt3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjo1NTo1NlrOHs3-xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE3Mzg1Mg==", "bodyText": "ok maybe looks like this metadata file hasn't been updated since last review changes? seems to be a few outdated things including the .png. I'll re-review this once it's gone through the script again :)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"DisplayDeviceLocation.png\"\n          \n          \n            \n                    \"DisplayDeviceLocationWithAutopanModes.png\"", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515173852", "createdAt": "2020-10-30T15:17:51Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "diffHunk": "@@ -0,0 +1,37 @@\n+{\n+    \"category\": \"Map\",\n+    \"description\": \"Display your current position on the map, as well as switch between different types of auto pan modes.\",\n+    \"ignore\": false,\n+    \"images\": [\n+        \"DisplayDeviceLocation.png\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgxNjU4MQ==", "bodyText": "Yes, I forgot to run the script again after the rename!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r516816581", "createdAt": "2020-11-03T16:55:56Z", "author": {"login": "sclaridge"}, "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "diffHunk": "@@ -0,0 +1,37 @@\n+{\n+    \"category\": \"Map\",\n+    \"description\": \"Display your current position on the map, as well as switch between different types of auto pan modes.\",\n+    \"ignore\": false,\n+    \"images\": [\n+        \"DisplayDeviceLocation.png\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE3Mzg1Mg=="}, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzkyMTQ1OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxODo0M1rOHrTwgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxODo0M1rOHrTwgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE3NDUzMQ==", "bodyText": "the location display is on the map view not the map, I wonder if map view is better as a tag here. But probably best to go back to the design author for this, and it shouldn't block this sample being merged.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515174531", "createdAt": "2020-10-30T15:18:43Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.md", "diffHunk": "@@ -0,0 +1,43 @@\n+# Display device location with autopan modes\n+\n+Display your position on the map and switch between different types of autopan modes.\n+\n+![Image of display device location with autopan modes](DisplayDeviceLocationWithAutopanModes.png)\n+\n+## Use case\n+\n+When using a map within a GIS, it may be helpful for a user to know their own location within a map, whether that's to aid the user's navigation or to provide an easy means of identifying/collecting geospatial information at their location.\n+\n+## How to use the sample\n+\n+Click the checkbox to show the location symbol at a simulated location on the map. Select one of the autopan modes from the drop down box:\n+\n+* Off - Shows the location with no autopan mode set.\n+* Re-Center - In this mode, the map re-centers on the location symbol when the symbol moves outside a \"wander extent\".\n+* Navigation -  This mode is best suited for in-vehicle navigation.\n+* Compass - This mode is better suited for waypoint navigation when the user is walking.\n+\n+## How it works\n+\n+1. Create a `MapView`.\n+2. Get the `LocationDisplay` object by calling `getLocationDisplay()` on the `MapView`.\n+2. Create a `SimulatedLocationDataSource` and call its `setLocations()` method, passing the route `Polyline` and new `SimulationParameters` as parameters. \n+3. Start the `LocationDisplay` with `startAsync()` to begin receiving location updates.\n+5. Use `locationDisplay.setAutoPanMode` to change how the map behaves when location updates are received.\n+\n+## Relevant API\n+\n+* ArcGISMap\n+* LocationDisplay\n+* LocationDisplay.AutoPanMode\n+* MapView\n+* SimulatedLocationDataSource\n+* SimulationParameters\n+\n+## Additional information\n+\n+A custom set of points (provided in JSON format) is used to create a `Polyline` and configure a `SimulatedLocationDataSource`. The simulated location data source enables easier testing and allows the sample to be used on devices without an actively updating GPS signal. To display a user's real position, use `NMEALocationDataSource` instead.\n+\n+## Tags\n+\n+compass, GPS, location, map, mobile, navigation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzkzODcxOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToyMjozNFrOHrT7Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToyMjozNFrOHrT7Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE3NzIxOA==", "bodyText": "eek definitely not :D\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"redirect_from\": [\n          \n          \n            \n                    \"/java/latest/sample-code/display-a-map.htm\"\n          \n          \n            \n                ],\n          \n          \n            \n                \"redirect_from\":  \"\",", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515177218", "createdAt": "2020-10-30T15:22:34Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "diffHunk": "@@ -0,0 +1,37 @@\n+{\n+    \"category\": \"Map\",\n+    \"description\": \"Display your current position on the map, as well as switch between different types of auto pan modes.\",\n+    \"ignore\": false,\n+    \"images\": [\n+        \"DisplayDeviceLocation.png\"\n+    ],\n+    \"keywords\": [\n+        \"GPS\",\n+        \"compass\",\n+        \"location\",\n+        \"map\",\n+        \"mobile\",\n+        \"navigation\",\n+        \"ArcGISMap\",\n+        \"LocationDisplay\",\n+        \"LocationDisplay.AutoPanMode\",\n+        \"MapView\",\n+        \"SimulatedLocationDataSource\",\n+        \"SimulationParameters\"\n+    ],\n+    \"redirect_from\": [\n+        \"/java/latest/sample-code/display-a-map.htm\"\n+    ],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzk0NjM4OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/settings.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToyMzo1MFrOHrT_7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToyMzo1MFrOHrT_7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE3ODQ3Nw==", "bodyText": "the name for this project is the following no?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            rootProject.name = 'display-device-location'\n          \n          \n            \n            rootProject.name = 'display-device-location-with-autopan-modes'", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515178477", "createdAt": "2020-10-30T15:23:50Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/settings.gradle", "diffHunk": "@@ -0,0 +1 @@\n+rootProject.name = 'display-device-location'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzk1MzQxOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToyNTozNFrOHrUEVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToyNTozNFrOHrUEVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE3OTYwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // create a view and add the ArcGISMap to it\n          \n          \n            \n                  // create a map view and add the map to it", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515179607", "createdAt": "2020-10-30T15:25:34Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "diffHunk": "@@ -0,0 +1,200 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location_with_autopan_modes;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationWithAutopanModesSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create the stack pane and the application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set a title, size, and add the scene to stage\n+      stage.setTitle(\"Display Device Location With Autopan Modes Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location_with_autopan_modes/style.css\").toExternalForm());\n+\n+      // create an ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a view and add the ArcGISMap to it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzk5ODk0OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTozNDowMVrOHrUhtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTozNDowMVrOHrUhtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE4NzEyNA==", "bodyText": "since this is quite a bunch of UI steps up front that aren't directly related to the important API parts of this sample, I'd be happy to move these into a setupUI method.  So the user can get straight to the important bits.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515187124", "createdAt": "2020-10-30T15:34:01Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "diffHunk": "@@ -0,0 +1,200 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location_with_autopan_modes;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationWithAutopanModesSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create the stack pane and the application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set a title, size, and add the scene to stage\n+      stage.setTitle(\"Display Device Location With Autopan Modes Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location_with_autopan_modes/style.css\").toExternalForm());\n+\n+      // create an ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a view and add the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create a combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Recenter\", \"Navigation\", \"Compass\", \"Off\");\n+      comboBox.setValue(\"Recenter\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkBox = new CheckBox(\"Show device location\");\n+      checkBox.setDisable(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODAzNTIxOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTo0MTo0M1rOHrU5Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTo0MTo0M1rOHrU5Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE5MzE1MQ==", "bodyText": "let's try out var again here: there are A LOT of simulatedlocationdatasources here and this is exactly the sort of thing local variable type inference was introduced to help with readability. It's obvious from variable name that it is a simulated location data source so is a good var candidate.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n          \n          \n            \n                  var simulatedLocationDataSource = new SimulatedLocationDataSource();", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515193151", "createdAt": "2020-10-30T15:41:43Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "diffHunk": "@@ -0,0 +1,200 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location_with_autopan_modes;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationWithAutopanModesSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create the stack pane and the application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set a title, size, and add the scene to stage\n+      stage.setTitle(\"Display Device Location With Autopan Modes Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location_with_autopan_modes/style.css\").toExternalForm());\n+\n+      // create an ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a view and add the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create a combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Recenter\", \"Navigation\", \"Compass\", \"Off\");\n+      comboBox.setValue(\"Recenter\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkBox = new CheckBox(\"Show device location\");\n+      checkBox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\n+        \"/display_device_location_with_autopan_modes/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODA0ODI2OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTo0NDo1M1rOHrVBlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTo0NDo1M1rOHrVBlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE5NTI4Nw==", "bodyText": "we could also opt for var here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LocationDisplay locationDisplay = mapView.getLocationDisplay();\n          \n          \n            \n                  var locationDisplay = mapView.getLocationDisplay();", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515195287", "createdAt": "2020-10-30T15:44:53Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "diffHunk": "@@ -0,0 +1,200 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location_with_autopan_modes;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationWithAutopanModesSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create the stack pane and the application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set a title, size, and add the scene to stage\n+      stage.setTitle(\"Display Device Location With Autopan Modes Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location_with_autopan_modes/style.css\").toExternalForm());\n+\n+      // create an ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a view and add the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create a combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Recenter\", \"Navigation\", \"Compass\", \"Off\");\n+      comboBox.setValue(\"Recenter\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkBox = new CheckBox(\"Show device location\");\n+      checkBox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\n+        \"/display_device_location_with_autopan_modes/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n+      // set the location of the simulated location data source with simulation parameters to set a consistent velocity\n+      simulatedLocationDataSource.setLocations(\n+        locations, new SimulationParameters(Calendar.getInstance(), 5.0, 0.0, 0.0));\n+\n+      // configure the map view's location display to follow the simulated location data source\n+      LocationDisplay locationDisplay = mapView.getLocationDisplay();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODExMTY5OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjowMDowN1rOHrVpRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjowMDowN1rOHrVpRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIwNTQ0Ng==", "bodyText": "these comments aren't entirely accurate as to what the API is doing.\nWhilst startAsync() and stop() do indeed show/hide the location display, what it's doing at an API level is initializing and then receiving location data source updates. When stopping, it ceases to receive the location updates.\nI'd therefore suggest the following:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // toggle the location display visibility on check\n          \n          \n            \n                  // control location display updates and visibility", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515205446", "createdAt": "2020-10-30T16:00:07Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "diffHunk": "@@ -0,0 +1,200 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location_with_autopan_modes;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationWithAutopanModesSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create the stack pane and the application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set a title, size, and add the scene to stage\n+      stage.setTitle(\"Display Device Location With Autopan Modes Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location_with_autopan_modes/style.css\").toExternalForm());\n+\n+      // create an ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a view and add the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create a combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Recenter\", \"Navigation\", \"Compass\", \"Off\");\n+      comboBox.setValue(\"Recenter\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkBox = new CheckBox(\"Show device location\");\n+      checkBox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\n+        \"/display_device_location_with_autopan_modes/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n+      // set the location of the simulated location data source with simulation parameters to set a consistent velocity\n+      simulatedLocationDataSource.setLocations(\n+        locations, new SimulationParameters(Calendar.getInstance(), 5.0, 0.0, 0.0));\n+\n+      // configure the map view's location display to follow the simulated location data source\n+      LocationDisplay locationDisplay = mapView.getLocationDisplay();\n+      locationDisplay.setLocationDataSource(simulatedLocationDataSource);\n+      locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+      locationDisplay.setInitialZoomScale(1000);\n+\n+      // toggle the location display visibility on check", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODE1MDE1OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjowOTozN1rOHrWBWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjowOTozN1rOHrWBWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxMTYxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      // start the location display\n          \n          \n            \n                      // start receiving location updates and display the current location with a default round blue symbol", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515211610", "createdAt": "2020-10-30T16:09:37Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "diffHunk": "@@ -0,0 +1,200 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location_with_autopan_modes;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationWithAutopanModesSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create the stack pane and the application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set a title, size, and add the scene to stage\n+      stage.setTitle(\"Display Device Location With Autopan Modes Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location_with_autopan_modes/style.css\").toExternalForm());\n+\n+      // create an ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a view and add the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create a combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Recenter\", \"Navigation\", \"Compass\", \"Off\");\n+      comboBox.setValue(\"Recenter\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkBox = new CheckBox(\"Show device location\");\n+      checkBox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\n+        \"/display_device_location_with_autopan_modes/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n+      // set the location of the simulated location data source with simulation parameters to set a consistent velocity\n+      simulatedLocationDataSource.setLocations(\n+        locations, new SimulationParameters(Calendar.getInstance(), 5.0, 0.0, 0.0));\n+\n+      // configure the map view's location display to follow the simulated location data source\n+      LocationDisplay locationDisplay = mapView.getLocationDisplay();\n+      locationDisplay.setLocationDataSource(simulatedLocationDataSource);\n+      locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+      locationDisplay.setInitialZoomScale(1000);\n+\n+      // toggle the location display visibility on check\n+      checkBox.setOnAction(event -> {\n+        if (checkBox.isSelected()) {\n+          // start the location display", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODE3NTE0OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoxNjozM1rOHrWRNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoxNjozM1rOHrWRNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxNTY3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      // turn off the location display\n          \n          \n            \n                      // stop receiving location updates and displaying location symbol", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515215671", "createdAt": "2020-10-30T16:16:33Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "diffHunk": "@@ -0,0 +1,200 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location_with_autopan_modes;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationWithAutopanModesSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create the stack pane and the application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set a title, size, and add the scene to stage\n+      stage.setTitle(\"Display Device Location With Autopan Modes Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location_with_autopan_modes/style.css\").toExternalForm());\n+\n+      // create an ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a view and add the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create a combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Recenter\", \"Navigation\", \"Compass\", \"Off\");\n+      comboBox.setValue(\"Recenter\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkBox = new CheckBox(\"Show device location\");\n+      checkBox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\n+        \"/display_device_location_with_autopan_modes/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n+      // set the location of the simulated location data source with simulation parameters to set a consistent velocity\n+      simulatedLocationDataSource.setLocations(\n+        locations, new SimulationParameters(Calendar.getInstance(), 5.0, 0.0, 0.0));\n+\n+      // configure the map view's location display to follow the simulated location data source\n+      LocationDisplay locationDisplay = mapView.getLocationDisplay();\n+      locationDisplay.setLocationDataSource(simulatedLocationDataSource);\n+      locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+      locationDisplay.setInitialZoomScale(1000);\n+\n+      // toggle the location display visibility on check\n+      checkBox.setOnAction(event -> {\n+        if (checkBox.isSelected()) {\n+          // start the location display\n+          locationDisplay.startAsync();\n+\n+        } else {\n+          // turn off the location display", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODE5MzEzOnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoyMToyOFrOHrWcxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoyMToyOFrOHrWcxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxODYzMA==", "bodyText": "just to keep this naming in keeping with how the API documentation has it and the readme.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      case \"Recenter\":\n          \n          \n            \n                      case \"Re-center\":", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515218630", "createdAt": "2020-10-30T16:21:28Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "diffHunk": "@@ -0,0 +1,200 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location_with_autopan_modes;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationWithAutopanModesSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create the stack pane and the application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set a title, size, and add the scene to stage\n+      stage.setTitle(\"Display Device Location With Autopan Modes Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location_with_autopan_modes/style.css\").toExternalForm());\n+\n+      // create an ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a view and add the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create a combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Recenter\", \"Navigation\", \"Compass\", \"Off\");\n+      comboBox.setValue(\"Recenter\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkBox = new CheckBox(\"Show device location\");\n+      checkBox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\n+        \"/display_device_location_with_autopan_modes/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n+      // set the location of the simulated location data source with simulation parameters to set a consistent velocity\n+      simulatedLocationDataSource.setLocations(\n+        locations, new SimulationParameters(Calendar.getInstance(), 5.0, 0.0, 0.0));\n+\n+      // configure the map view's location display to follow the simulated location data source\n+      LocationDisplay locationDisplay = mapView.getLocationDisplay();\n+      locationDisplay.setLocationDataSource(simulatedLocationDataSource);\n+      locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+      locationDisplay.setInitialZoomScale(1000);\n+\n+      // toggle the location display visibility on check\n+      checkBox.setOnAction(event -> {\n+        if (checkBox.isSelected()) {\n+          // start the location display\n+          locationDisplay.startAsync();\n+\n+        } else {\n+          // turn off the location display\n+          locationDisplay.stop();\n+        }\n+        // toggle the combo box interactions\n+        comboBox.setDisable(!checkBox.isSelected());\n+      });\n+\n+      // set the autopan mode of the location display based on the mode chosen from the combo box\n+      comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+\n+        // set the scale that the map view will zoom to when the autopan mode is changed\n+        locationDisplay.setInitialZoomScale(1000);\n+\n+        switch (comboBox.getSelectionModel().getSelectedItem()) {\n+          case \"Off\":\n+            locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.OFF);\n+            break;\n+          case \"Recenter\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODIxMDM2OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoyNjowN1rOHrWnew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoyNjowN1rOHrWnew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyMTM3MQ==", "bodyText": "since this is what happens right after loading the sample, it makes sense to move this just after the locationDisplay initializer steps (and before the checkBox on action events).", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515221371", "createdAt": "2020-10-30T16:26:07Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "diffHunk": "@@ -0,0 +1,200 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location_with_autopan_modes;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationWithAutopanModesSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create the stack pane and the application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set a title, size, and add the scene to stage\n+      stage.setTitle(\"Display Device Location With Autopan Modes Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location_with_autopan_modes/style.css\").toExternalForm());\n+\n+      // create an ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a view and add the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create a combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Recenter\", \"Navigation\", \"Compass\", \"Off\");\n+      comboBox.setValue(\"Recenter\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkBox = new CheckBox(\"Show device location\");\n+      checkBox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\n+        \"/display_device_location_with_autopan_modes/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n+      // set the location of the simulated location data source with simulation parameters to set a consistent velocity\n+      simulatedLocationDataSource.setLocations(\n+        locations, new SimulationParameters(Calendar.getInstance(), 5.0, 0.0, 0.0));\n+\n+      // configure the map view's location display to follow the simulated location data source\n+      LocationDisplay locationDisplay = mapView.getLocationDisplay();\n+      locationDisplay.setLocationDataSource(simulatedLocationDataSource);\n+      locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+      locationDisplay.setInitialZoomScale(1000);\n+\n+      // toggle the location display visibility on check\n+      checkBox.setOnAction(event -> {\n+        if (checkBox.isSelected()) {\n+          // start the location display\n+          locationDisplay.startAsync();\n+\n+        } else {\n+          // turn off the location display\n+          locationDisplay.stop();\n+        }\n+        // toggle the combo box interactions\n+        comboBox.setDisable(!checkBox.isSelected());\n+      });\n+\n+      // set the autopan mode of the location display based on the mode chosen from the combo box\n+      comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+\n+        // set the scale that the map view will zoom to when the autopan mode is changed\n+        locationDisplay.setInitialZoomScale(1000);\n+\n+        switch (comboBox.getSelectionModel().getSelectedItem()) {\n+          case \"Off\":\n+            locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.OFF);\n+            break;\n+          case \"Recenter\":\n+            locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+            break;\n+          case \"Navigation\":\n+            locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.NAVIGATION);\n+            break;\n+          case \"Compass\":\n+            locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.COMPASS_NAVIGATION);\n+            break;\n+        }\n+      });\n+\n+      // enable the checkbox and combo box interactions when the map is loaded\n+      map.addDoneLoadingListener(() -> {\n+        if (map.getLoadStatus() == LoadStatus.LOADED) {\n+          checkBox.setDisable(false);\n+          checkBox.setSelected(true);\n+          comboBox.setDisable(false);\n+\n+          // start the location display\n+          locationDisplay.startAsync();\n+        } else {\n+          new Alert(Alert.AlertType.ERROR, \"Map failed to load: \" + map.getLoadError().getCause().getMessage()).show();\n+        }\n+      });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 158}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODIxODc0OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoyODowOVrOHrWsmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoyODowOVrOHrWsmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyMjY4MQ==", "bodyText": "something I noticed is that when clicking and dragging the map, the autopan mode stops but remains stuck on e.g. compass without being able to activate it again without clicking to another mode, and back to compass.\nWe could add in a mapview mouse listener whereby if a user clicks on the map, it will remove the autopan mode by selecting \"Off\" from the combobox with something like follows: open to other suggestions here too if you think there is a better solution!\n      mapView.setOnMousePressed(event -> {\n        if (event.getButton() == MouseButton.PRIMARY) {\n          comboBox.setValue(\"Off\");\n        }\n      });", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r515222681", "createdAt": "2020-10-30T16:28:09Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "diffHunk": "@@ -0,0 +1,200 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.display_device_location_with_autopan_modes;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Calendar;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Insets;\n+import javafx.geometry.Pos;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.CheckBox;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.layout.Background;\n+import javafx.scene.layout.BackgroundFill;\n+import javafx.scene.layout.CornerRadii;\n+import javafx.scene.layout.StackPane;\n+import javafx.scene.layout.VBox;\n+import javafx.scene.paint.Paint;\n+import javafx.stage.Stage;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.Polyline;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.location.SimulatedLocationDataSource;\n+import com.esri.arcgisruntime.location.SimulationParameters;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.view.LocationDisplay;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+public class DisplayDeviceLocationWithAutopanModesSample extends Application {\n+\n+  private MapView mapView;\n+\n+  @Override\n+  public void start(Stage stage) {\n+\n+    try {\n+      // create the stack pane and the application scene\n+      StackPane stackPane = new StackPane();\n+      Scene scene = new Scene(stackPane);\n+\n+      // set a title, size, and add the scene to stage\n+      stage.setTitle(\"Display Device Location With Autopan Modes Sample\");\n+      stage.setWidth(800);\n+      stage.setHeight(700);\n+      stage.setScene(scene);\n+      stage.show();\n+      scene.getStylesheets().add(getClass().getResource(\"/display_device_location_with_autopan_modes/style.css\").toExternalForm());\n+\n+      // create an ArcGISMap with the imagery basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createImagery());\n+\n+      // create a view and add the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // create a combo box\n+      ComboBox<String> comboBox = new ComboBox<>();\n+      comboBox.setMaxWidth(Double.MAX_VALUE);\n+      comboBox.setDisable(true);\n+      // add the autopan modes to the combo box\n+      comboBox.getItems().addAll(\"Recenter\", \"Navigation\", \"Compass\", \"Off\");\n+      comboBox.setValue(\"Recenter\");\n+\n+      // add a label\n+      Label autopanModeLabel = new Label(\"Choose an autopan mode:\");\n+      // add a checkbox that toggles the visibility of the location display\n+      CheckBox checkBox = new CheckBox(\"Show device location\");\n+      checkBox.setDisable(true);\n+\n+      // access the json of the location points\n+      String polylineData = IOUtils.toString(getClass().getResourceAsStream(\n+        \"/display_device_location_with_autopan_modes/polyline_data.json\"), StandardCharsets.UTF_8);\n+      // create a polyline from the location points\n+      Polyline locations = (Polyline) Geometry.fromJson(polylineData, SpatialReferences.getWgs84());\n+\n+      // create a simulated location data source\n+      SimulatedLocationDataSource simulatedLocationDataSource = new SimulatedLocationDataSource();\n+      // set the location of the simulated location data source with simulation parameters to set a consistent velocity\n+      simulatedLocationDataSource.setLocations(\n+        locations, new SimulationParameters(Calendar.getInstance(), 5.0, 0.0, 0.0));\n+\n+      // configure the map view's location display to follow the simulated location data source\n+      LocationDisplay locationDisplay = mapView.getLocationDisplay();\n+      locationDisplay.setLocationDataSource(simulatedLocationDataSource);\n+      locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+      locationDisplay.setInitialZoomScale(1000);\n+\n+      // toggle the location display visibility on check\n+      checkBox.setOnAction(event -> {\n+        if (checkBox.isSelected()) {\n+          // start the location display\n+          locationDisplay.startAsync();\n+\n+        } else {\n+          // turn off the location display\n+          locationDisplay.stop();\n+        }\n+        // toggle the combo box interactions\n+        comboBox.setDisable(!checkBox.isSelected());\n+      });\n+\n+      // set the autopan mode of the location display based on the mode chosen from the combo box\n+      comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+\n+        // set the scale that the map view will zoom to when the autopan mode is changed\n+        locationDisplay.setInitialZoomScale(1000);\n+\n+        switch (comboBox.getSelectionModel().getSelectedItem()) {\n+          case \"Off\":\n+            locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.OFF);\n+            break;\n+          case \"Recenter\":\n+            locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.RECENTER);\n+            break;\n+          case \"Navigation\":\n+            locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.NAVIGATION);\n+            break;\n+          case \"Compass\":\n+            locationDisplay.setAutoPanMode(LocationDisplay.AutoPanMode.COMPASS_NAVIGATION);\n+            break;\n+        }\n+      });\n+\n+      // enable the checkbox and combo box interactions when the map is loaded\n+      map.addDoneLoadingListener(() -> {\n+        if (map.getLoadStatus() == LoadStatus.LOADED) {\n+          checkBox.setDisable(false);\n+          checkBox.setSelected(true);\n+          comboBox.setDisable(false);\n+\n+          // start the location display\n+          locationDisplay.startAsync();\n+        } else {\n+          new Alert(Alert.AlertType.ERROR, \"Map failed to load: \" + map.getLoadError().getCause().getMessage()).show();\n+        }\n+      });\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "caf9f064be95a97bac497e30e8fac14ce47b733a"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODQwMTk4OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODozNzo1MlrOHuRHeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODozODozOVrOHwqI-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI3Njk4NQ==", "bodyText": "map is still showing here: is the script not working?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r518276985", "createdAt": "2020-11-05T18:37:52Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "diffHunk": "@@ -12,26 +12,24 @@\n         \"map\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8c9c7834e47bb5234ad8ffd4e5978edab1bba67"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc4NDEyMw==", "bodyText": "Hey @Rachael-E , it looks like the README.metadata.json has been updated: https://github.com/Esri/arcgis-runtime-samples-java/blob/0570f41115e9efaa8231a7d71dfff529cb065ad7/map_view/display-device-location-with-autopan-modes/README.metadata.json", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r520784123", "createdAt": "2020-11-10T18:38:39Z", "author": {"login": "sclaridge"}, "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "diffHunk": "@@ -12,26 +12,24 @@\n         \"map\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI3Njk4NQ=="}, "originalCommit": {"oid": "c8c9c7834e47bb5234ad8ffd4e5978edab1bba67"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODQyMDU1OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODo0MzowMFrOHuRS4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODo0MzowMFrOHuRS4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI3OTkwNg==", "bodyText": "I wonder if the script for generating this is broken again - can you check please? @JonLavi might be able to help.\nWe must not have an empty string within an array: it will break the website build, so this small change is important. it needs to be:\n\"redirect_from\": \"\",", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r518279906", "createdAt": "2020-11-05T18:43:00Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/README.metadata.json", "diffHunk": "@@ -12,26 +12,24 @@\n         \"map\",\n         \"mobile\",\n         \"navigation\",\n-        \"ArcGISMap\",\n         \"LocationDisplay\",\n         \"LocationDisplay.AutoPanMode\",\n         \"MapView\",\n         \"SimulatedLocationDataSource\",\n         \"SimulationParameters\"\n     ],\n     \"redirect_from\": [\n-        \"/java/latest/sample-code/display-a-map.htm\"\n+        \"\"\n     ],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8c9c7834e47bb5234ad8ffd4e5978edab1bba67"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODQzNDk4OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODo0Njo1OFrOHuRbsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODo0Njo1OFrOHuRbsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4MjE2Mw==", "bodyText": "nearly! With mouse pressed, a user can press and then click away, and the drop down box won't be updated.\nThis is because when the user presses, the locationDisplay mode is still active. When they release (click), the locationDisplay is off but the comboBox still shows the results of the first press. The second press picks up the locationDisplay off, and then the release (click) updates the combobox).\nWe can simply change this to setOnMouseClicked so that when the user clicks, it updates the combobox correctly.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  mapView.setOnMousePressed(event -> {\n          \n          \n            \n                  mapView.setOnMouseClicked(event -> {", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r518282163", "createdAt": "2020-11-05T18:46:58Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/src/main/java/com/esri/samples/display_device_location_with_autopan_modes/DisplayDeviceLocationWithAutopanModesSample.java", "diffHunk": "@@ -143,17 +159,13 @@ public void start(Stage stage) {\n         }\n       });\n \n-      // enable the checkbox and combo box interactions when the map is loaded\n-      map.addDoneLoadingListener(() -> {\n-        if (map.getLoadStatus() == LoadStatus.LOADED) {\n-          checkBox.setDisable(false);\n-          checkBox.setSelected(true);\n-          comboBox.setDisable(false);\n-\n-          // start the location display\n-          locationDisplay.startAsync();\n-        } else {\n-          new Alert(Alert.AlertType.ERROR, \"Map failed to load: \" + map.getLoadError().getCause().getMessage()).show();\n+      mapView.setOnMousePressed(event -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8c9c7834e47bb5234ad8ffd4e5978edab1bba67"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MjA1MjU3OnYy", "diffSide": "RIGHT", "path": "map_view/display-device-location-with-autopan-modes/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNTo1MTo0NVrOHuzgRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNTo1MTo0NVrOHuzgRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg0MDM5MQ==", "bodyText": "just remembered that we should update this gradle script as you are doing on master: to remove deprecated features.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/571#discussion_r518840391", "createdAt": "2020-11-06T15:51:45Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-device-location-with-autopan-modes/build.gradle", "diffHunk": "@@ -0,0 +1,75 @@\n+plugins {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8c9c7834e47bb5234ad8ffd4e5978edab1bba67"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4796, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}