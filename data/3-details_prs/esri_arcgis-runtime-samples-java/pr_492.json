{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MTYzODU5", "number": 492, "title": "Update readmes to match common design (Symbology category) 2/2", "bodyText": "", "createdAt": "2020-04-22T09:25:44Z", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/492", "merged": true, "mergeCommit": {"oid": "30c20a5ff1141a1ef66f16593c5f5af6b8bb5734"}, "closed": true, "closedAt": "2020-04-24T13:45:29Z", "author": {"login": "JonLavi"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaEzi1AH2gAyNDA3MTYzODU5OmY5YzdlNmYwMmIxNmJkZjU0MmM5MjE4MDBiZWQ3Nzg4ZTY4NjE4MjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaxvH8AFqTM5OTk1OTM4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f9c7e6f02b16bdf542c921800bed7788e6861820", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/f9c7e6f02b16bdf542c921800bed7788e6861820", "committedDate": "2020-04-22T09:24:02Z", "message": "update readmes to match common design"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5Nzc0ODg0", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/492#pullrequestreview-399774884", "createdAt": "2020-04-24T09:12:25Z", "commit": {"oid": "f9c7e6f02b16bdf542c921800bed7788e6861820"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToxMjoyNVrOGLOSNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToyMjoyNVrOGLOsYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyMTU1OA==", "bodyText": "excess spaces to be removed\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1.  Create a `GraphicsOverlay`.\n          \n          \n            \n            2.  Create a number of `Point` objects with x, y and spatial reference parameters.\n          \n          \n            \n            3.  Create a `SimpleMarkerSymbol` passing in a `SimpleMarkerSymbol.Style`, color and size as parameters.\n          \n          \n            \n            4.  Create a simple renderer with `SimpleRenderer(simpleMarkerSymbol)`.\n          \n          \n            \n            5.  Set the simple renderer to the graphics overlay using `graphicsOverlay.setRenderer(simpleRenderer)`.\n          \n          \n            \n            6.  Create a number of `Graphic` objects with the points initiated in step 2.\n          \n          \n            \n            7.  Add the graphics to the graphics overlay with `graphicsOverlay.getGraphics().add(graphic)`.\n          \n          \n            \n            1. Create a `GraphicsOverlay`.\n          \n          \n            \n            2. Create a number of `Point` objects with x, y and spatial reference parameters.\n          \n          \n            \n            3. Create a `SimpleMarkerSymbol` passing in a `SimpleMarkerSymbol.Style`, color and size as parameters.\n          \n          \n            \n            4. Create a simple renderer with `SimpleRenderer(simpleMarkerSymbol)`.\n          \n          \n            \n            5. Set the simple renderer to the graphics overlay using `graphicsOverlay.setRenderer(simpleRenderer)`.\n          \n          \n            \n            6. Create a number of `Graphic` objects with the points initiated in step 2.\n          \n          \n            \n            7. Add the graphics to the graphics overlay with `graphicsOverlay.getGraphics().add(graphic)`.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/492#discussion_r414421558", "createdAt": "2020-04-24T09:12:25Z", "author": {"login": "Rachael-E"}, "path": "symbology/simple-renderer/README.md", "diffHunk": "@@ -1,33 +1,39 @@\n-# Simple Renderer\n+# Simple renderer\n \n-Set default symbols for all graphics in an overlay.\n+Display common symbols for all graphics in a graphics overlay with a renderer.\n \n-Renderers are used to display graphics that don't already have a symbol set. A renderer will not override a symbol\n-that is manually set to a graphic.\n+![Image of simple renderer](SimpleRenderer.png)\n \n-![](SimpleRenderer.png)\n+## Use case\n+\n+Graphics are often used to display data that changes location regularly because they are held in memory instead of being persisted to the map. When a number of graphics are required to share the same style, a simple renderer can be applied to the graphics overlay containing the graphics. For example, the location of mobile taxis from a same company could be plotted on a map with each taxi marked by a relevant symbol. \n \n ## How to use the sample\n \n-Starts with a predefined SimpleRenderer that sets a cross SimpleMarkerSymbol as a default symbol for graphics.\n+The sample loads with a predefined simple renderer, which displays a red cross simple marker symbol for the graphics in the graphics overlay.\n \n ## How it works\n \n-How to set a default symbol using a `SimpleRenderer`:\n-\n-1. Create a `ArcGISMap`'s with `Basemap`.\n-2. Create a `GraphicsOverlay` and add it to the `MapView`, `MapView.getGraphicsOverlays().add()`.\n-3. Add the map to the view, `MapView.setMap()`.\n-4. Create a simple renderer using a `SimpleMarkerSymbol`, `SimpleRenderer(Symbol)`.\n-5. Lately, set the renderer to graphics overlay using `GraphicsOverlay.setRenderer(Renderer)`.\n+1.  Create a `GraphicsOverlay`.\n+2.  Create a number of `Point` objects with x, y and spatial reference parameters.\n+3.  Create a `SimpleMarkerSymbol` passing in a `SimpleMarkerSymbol.Style`, color and size as parameters.\n+4.  Create a simple renderer with `SimpleRenderer(simpleMarkerSymbol)`.\n+5.  Set the simple renderer to the graphics overlay using `graphicsOverlay.setRenderer(simpleRenderer)`.\n+6.  Create a number of `Graphic` objects with the points initiated in step 2.\n+7.  Add the graphics to the graphics overlay with `graphicsOverlay.getGraphics().add(graphic)`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c7e6f02b16bdf542c921800bed7788e6861820"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyMjA2Mw==", "bodyText": "removing excess spaces\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *   Graphic\n          \n          \n            \n            *   GraphicsOverlay\n          \n          \n            \n            *   Point\n          \n          \n            \n            *   SimpleMarkerSymbol\n          \n          \n            \n            *   SimpleRenderer\n          \n          \n            \n            * Graphic\n          \n          \n            \n            * GraphicsOverlay\n          \n          \n            \n            * Point\n          \n          \n            \n            * SimpleMarkerSymbol\n          \n          \n            \n            * SimpleRenderer", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/492#discussion_r414422063", "createdAt": "2020-04-24T09:13:12Z", "author": {"login": "Rachael-E"}, "path": "symbology/simple-renderer/README.md", "diffHunk": "@@ -1,33 +1,39 @@\n-# Simple Renderer\n+# Simple renderer\n \n-Set default symbols for all graphics in an overlay.\n+Display common symbols for all graphics in a graphics overlay with a renderer.\n \n-Renderers are used to display graphics that don't already have a symbol set. A renderer will not override a symbol\n-that is manually set to a graphic.\n+![Image of simple renderer](SimpleRenderer.png)\n \n-![](SimpleRenderer.png)\n+## Use case\n+\n+Graphics are often used to display data that changes location regularly because they are held in memory instead of being persisted to the map. When a number of graphics are required to share the same style, a simple renderer can be applied to the graphics overlay containing the graphics. For example, the location of mobile taxis from a same company could be plotted on a map with each taxi marked by a relevant symbol. \n \n ## How to use the sample\n \n-Starts with a predefined SimpleRenderer that sets a cross SimpleMarkerSymbol as a default symbol for graphics.\n+The sample loads with a predefined simple renderer, which displays a red cross simple marker symbol for the graphics in the graphics overlay.\n \n ## How it works\n \n-How to set a default symbol using a `SimpleRenderer`:\n-\n-1. Create a `ArcGISMap`'s with `Basemap`.\n-2. Create a `GraphicsOverlay` and add it to the `MapView`, `MapView.getGraphicsOverlays().add()`.\n-3. Add the map to the view, `MapView.setMap()`.\n-4. Create a simple renderer using a `SimpleMarkerSymbol`, `SimpleRenderer(Symbol)`.\n-5. Lately, set the renderer to graphics overlay using `GraphicsOverlay.setRenderer(Renderer)`.\n+1.  Create a `GraphicsOverlay`.\n+2.  Create a number of `Point` objects with x, y and spatial reference parameters.\n+3.  Create a `SimpleMarkerSymbol` passing in a `SimpleMarkerSymbol.Style`, color and size as parameters.\n+4.  Create a simple renderer with `SimpleRenderer(simpleMarkerSymbol)`.\n+5.  Set the simple renderer to the graphics overlay using `graphicsOverlay.setRenderer(simpleRenderer)`.\n+6.  Create a number of `Graphic` objects with the points initiated in step 2.\n+7.  Add the graphics to the graphics overlay with `graphicsOverlay.getGraphics().add(graphic)`.\n \n ## Relevant API\n \n-* ArcGISMap\n-* Graphic\n-* GraphicsOverlay\n-* MapView\n-* Point\n-* SimpleMarkerSymbol\n-* SimpleMarkerSymbol.Style\n-* SimpleRenderer\n+*   Graphic\n+*   GraphicsOverlay\n+*   Point\n+*   SimpleMarkerSymbol\n+*   SimpleRenderer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c7e6f02b16bdf542c921800bed7788e6861820"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyMjQxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To search for certain symbols, enter text into one or more search boxes and click 'Search for symbols'. Results are shown in a list. Pressing 'Clear' will reset the search.\n          \n          \n            \n            To search for certain symbols, enter text into one or more search boxes and click \"Search for symbols\". Results are shown in a list. Pressing \"Clear\" will reset the search.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/492#discussion_r414422415", "createdAt": "2020-04-24T09:13:46Z", "author": {"login": "Rachael-E"}, "path": "symbology/symbol-dictionary/README.md", "diffHunk": "@@ -1,28 +1,26 @@\n-# Symbol Dictionary\n+# Search symbol dictionary\n \n Find symbols within the mil2525d specification that match a keyword.\n \n-![](SymbolDictionary.png)\n+![Image of search symbol dictionary](SymbolDictionary.png)\n \n ## Use case\n \n You can use support for military symbology to allow users to report changes in the field using the correct military symbols.\n \n ## How to use the sample\n \n-By default, leaving the fields blank and searching will return all symbols.\n+By default, leaving the fields blank and hitting search will find all symbols.\n \n-To filter symbols, enter text into one or multiple seach boxes and click the Search for Symbols button.\n-\n-Click the Clear button to clear previous search results.\n+To search for certain symbols, enter text into one or more search boxes and click 'Search for symbols'. Results are shown in a list. Pressing 'Clear' will reset the search.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c7e6f02b16bdf542c921800bed7788e6861820"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyMzc4OQ==", "bodyText": "removing these backticks since they aren't API refs\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            3. Add members to the `names`, `tags`, `symbolClasses`, `categories`, and `keys` list fields of the search parameters.\n          \n          \n            \n            3. Add members to the names, tags, symbolClasses, categories, and keys list fields of the search parameters.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/492#discussion_r414423789", "createdAt": "2020-04-24T09:15:47Z", "author": {"login": "Rachael-E"}, "path": "symbology/symbol-dictionary/README.md", "diffHunk": "@@ -1,28 +1,26 @@\n-# Symbol Dictionary\n+# Search symbol dictionary\n \n Find symbols within the mil2525d specification that match a keyword.\n \n-![](SymbolDictionary.png)\n+![Image of search symbol dictionary](SymbolDictionary.png)\n \n ## Use case\n \n You can use support for military symbology to allow users to report changes in the field using the correct military symbols.\n \n ## How to use the sample\n \n-By default, leaving the fields blank and searching will return all symbols.\n+By default, leaving the fields blank and hitting search will find all symbols.\n \n-To filter symbols, enter text into one or multiple seach boxes and click the Search for Symbols button.\n-\n-Click the Clear button to clear previous search results.\n+To search for certain symbols, enter text into one or more search boxes and click 'Search for symbols'. Results are shown in a list. Pressing 'Clear' will reset the search.\n \n ## How it works\n \n-1. Create a symbol dictionary with the mil2525d specification by passing the string \"mil2525d\" to the `SymbolDictionary` constructor.\n+1. Create a symbol dictionary with the mil2525d specification by passing the path to a .stylx file to the `SymbolDictionary.createFromFile(path)` constructor.\n 2. Create `StyleSymbolSearchParameters`.\n-3. Add members to the names, tags, symbolClasses, categories, and keys list fields of the search parameters.\n+3. Add members to the `names`, `tags`, `symbolClasses`, `categories`, and `keys` list fields of the search parameters.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c7e6f02b16bdf542c921800bed7788e6861820"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyODI1OQ==", "bodyText": "mixing in some of the original description for how Java implements their sample\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Pan and zoom around the map to view the symbology renderer set to the feature layer created from the shapefile. \n          \n          \n            \n            Press the toggle button to switch between the red and yellow symbology renderer and the default renderer, set to the feature layer created from the shapefile.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/492#discussion_r414428259", "createdAt": "2020-04-24T09:22:25Z", "author": {"login": "Rachael-E"}, "path": "symbology/symbolize-shapefile/README.md", "diffHunk": "@@ -1,23 +1,23 @@\n-# Symbolize Shapefile\n+# Symbolize shapefile\n \n-Override the default rendering of a shapefile.\n+Display a shapefile with custom symbology.\n \n-![](SymbolizeShapefile.png)\n+![Image of symbolize shapefile](SymbolizeShapefile.png)\n+\n+## Use case\n+\n+Feature layers created from shapefiles do not possess any rendering information, and will be assigned with a default symbology. You can apply custom styling to ensure that the content is visible and usable in the context of a specific map. For example, you could use this to visually differentiate between features originating from two different shapefiles, by applying a blue color to one, and a red color to the other.\n \n ## How to use the sample\n \n-Press the toggle button to switch between red and yellow symbols and the default renderer.\n+Pan and zoom around the map to view the symbology renderer set to the feature layer created from the shapefile. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c7e6f02b16bdf542c921800bed7788e6861820"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d19db1b5752cc8798bcfc70c6305cdf514ca3edd", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/d19db1b5752cc8798bcfc70c6305cdf514ca3edd", "committedDate": "2020-04-24T10:08:48Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: Rachael Ellen <36415565+Rachael-E@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5OTU5Mzg5", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/492#pullrequestreview-399959389", "createdAt": "2020-04-24T13:44:56Z", "commit": {"oid": "d19db1b5752cc8798bcfc70c6305cdf514ca3edd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3363, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}