{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NTQzNzQ3", "number": 528, "reviewThreads": {"totalCount": 74, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyMTozN1rOEOvEPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMTo0MzoxN1rOERytew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODg2NjU1OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyMTozN1rOGyDTpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyMTozN1rOGyDTpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEzNjE2Nw==", "bodyText": "The sample titles should be sentence case.\nWe should double check the design to see if it's correct in there as well, just in case.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Realistic Lighting and Shadows\n          \n          \n            \n            # Realistic lighting and shadows", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455136167", "createdAt": "2020-07-15T15:21:37Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/README.md", "diffHunk": "@@ -0,0 +1,32 @@\n+# Realistic Lighting and Shadows", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODg3OTU5OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/README.metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyNDoxN1rOGyDb_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyNDoxN1rOGyDb_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEzODMwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"title\": \"Realistic Lighting and Shadows\"\n          \n          \n            \n              \"title\": \"Realistic lighting and shadows\"", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455138301", "createdAt": "2020-07-15T15:24:17Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/README.metadata.json", "diffHunk": "@@ -0,0 +1,35 @@\n+{\n+  \"category\": \"Scene\",\n+  \"description\": \"Show realistic lighting and shadows for the time of day.\",\n+  \"ignore\": false,\n+  \"images\": [\n+    \"RealisticLightingAndShadows.png\"\n+  ],\n+  \"keywords\": [\n+    \"3D\",\n+    \"lighting\",\n+    \"realism\",\n+    \"realistic\",\n+    \"rendering\",\n+    \"shadows\",\n+    \"sun\",\n+    \"time\",\n+    \"ArcGISScene\",\n+    \"LightingMode\",\n+    \"SceneView.setSunLighting\",\n+    \"SceneView.setSunTime\"\n+  ],\n+  \"redirect_from\": \"\",\n+  \"relevant_apis\": [\n+    \"ArcGISScene\",\n+    \"LightingMode\",\n+    \"SceneView.setSunLighting\",\n+    \"SceneView.setSunTime\"\n+  ],\n+  \"snippets\": [\n+    \"src/main/java/com.esri.samples.realistic_lighting_and_shadows/RealisticLightAndShadowsSample.java\",\n+    \"src/main/java/com.esri.samples.realistic_lighting_and_shadows/RealisticLightAndShadowsController.java\",\n+    \"src/main/resources/realistic_light_and_shadows/main.fxml\"\n+  ],\n+  \"title\": \"Realistic Lighting and Shadows\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODg4NzU4OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyNTo1OFrOGyDg4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyNTo1OFrOGyDg4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEzOTU1Mw==", "bodyText": "We've recently had a discussion about which modules to add here.\nThere's a good argument for not adding all modules, but only the ones necessary for this particular sample, to reduce the amount of data that will be downloaded the first time you run it.\nI think you will only need controls and fxml?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455139553", "createdAt": "2020-07-15T15:25:58Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/build.gradle", "diffHunk": "@@ -0,0 +1,80 @@\n+plugins {\n+    id 'application'\n+    id 'org.openjfx.javafxplugin' version '0.0.5'\n+}\n+\n+group = 'com.esri.samples'\n+\n+ext {\n+    arcgisVersion = '100.9.0-2838'\n+}\n+\n+javafx {\n+    version = \"11.0.2\"\n+    modules = ['javafx.controls',\n+               'javafx.base',\n+               'javafx.graphics',\n+               'javafx.fxml',\n+               'javafx.web',\n+               'javafx.media']", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODg5MDk0OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyNjo0M1rOGyDjCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyNjo0M1rOGyDjCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0MDEwNw==", "bodyText": "We've also recently noticed we can update this to a newer wrapper version:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                gradleVersion = '5.0'\n          \n          \n            \n                gradleVersion = '6.5.1'", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455140107", "createdAt": "2020-07-15T15:26:43Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/build.gradle", "diffHunk": "@@ -0,0 +1,80 @@\n+plugins {\n+    id 'application'\n+    id 'org.openjfx.javafxplugin' version '0.0.5'\n+}\n+\n+group = 'com.esri.samples'\n+\n+ext {\n+    arcgisVersion = '100.9.0-2838'\n+}\n+\n+javafx {\n+    version = \"11.0.2\"\n+    modules = ['javafx.controls',\n+               'javafx.base',\n+               'javafx.graphics',\n+               'javafx.fxml',\n+               'javafx.web',\n+               'javafx.media']\n+\n+}\n+\n+compileJava.options.encoding = 'UTF-8'\n+\n+repositories {\n+    jcenter()\n+    maven {\n+        url 'https://esri.bintray.com/arcgis'\n+    }\n+    maven {\n+        url 'http://olympus.esri.com/artifactory/arcgisruntime-repo'\n+    }\n+}\n+\n+configurations {\n+    natives\n+}\n+\n+dependencies {\n+    compile \"com.esri.arcgisruntime:arcgis-java:$arcgisVersion\"\n+    natives \"com.esri.arcgisruntime:arcgis-java-jnilibs:$arcgisVersion\"\n+    natives \"com.esri.arcgisruntime:arcgis-java-resources:$arcgisVersion\"\n+}\n+\n+task copyNatives(type: Copy) {\n+    description = \"Copies the arcgis native libraries into the project build directory for development.\"\n+    group = \"build\"\n+    configurations.natives.asFileTree.each {\n+        from(zipTree(it))\n+    }\n+    // store native libraries in a common location shared with other samples\n+    into \"${System.properties.getProperty(\"user.home\")}/.arcgis/$arcgisVersion\"\n+}\n+\n+run {\n+    dependsOn copyNatives\n+    mainClassName = 'com.esri.samples.realistic_lighting_and_shadows.RealisticLightingAndShadowsLauncher'\n+}\n+\n+jar {\n+    duplicatesStrategy = DuplicatesStrategy.EXCLUDE\n+    manifest {\n+        attributes(\"Main-Class\": \"$mainClassName\")\n+    }\n+    from {\n+        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }\n+    }\n+}\n+\n+task productionZip(type: Zip) {\n+    group = 'distribution'\n+    from copyNatives\n+    from jar.destinationDir\n+    into(project.name)\n+    baseName = project.name\n+}\n+\n+wrapper {\n+    gradleVersion = '5.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODg5MTc1OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/gradle/wrapper/gradle-wrapper.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyNjo1NlrOGyDjiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyNjo1NlrOGyDjiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0MDIzNQ==", "bodyText": "Another spot we should update the gradle version:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            distributionUrl=https\\://services.gradle.org/distributions/gradle-5.0-bin.zip\n          \n          \n            \n            distributionUrl=https\\://services.gradle.org/distributions/gradle-6.5.1-bin.zip", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455140235", "createdAt": "2020-07-15T15:26:56Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/gradle/wrapper/gradle-wrapper.properties", "diffHunk": "@@ -0,0 +1,5 @@\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-5.0-bin.zip", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODkwMDA0OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/settings.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyODo1MlrOGyDogQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToyODo1MlrOGyDogQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0MTUwNQ==", "bodyText": "We usually have this parameter as the name of the sample's folder. At the same time, we should probably rename the folder this sample sits in to reflect the full sample name realistic-lighting-and-shadows\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            rootProject.name = 'Realistic Lighting and Shadows'\n          \n          \n            \n            rootProject.name = 'realistic-lighting-and-shadows'", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455141505", "createdAt": "2020-07-15T15:28:52Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/settings.gradle", "diffHunk": "@@ -0,0 +1 @@\n+rootProject.name = 'Realistic Lighting and Shadows'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODkyMjM5OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNDoyM1rOGyD2PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNDoyM1rOGyD2PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0NTAyMA==", "bodyText": "There's a particular order we want the imports to be in, and you can set up IntelliJ to do this for you automatically (see the screenshot below, the UI is a bit terrible since the window is not tall enough to show everything. Give me a shout if you get stuck).\nThe order would be:\nimport java.*\n<newline>\nimport javafx.*\n<newline>\nimport com.esri.*\n<newline>\nimport static all other imports", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455145020", "createdAt": "2020-07-15T15:34:23Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODkzMzQxOnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNjo1OFrOGyD8_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNjo1OFrOGyD8_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0Njc0OA==", "bodyText": "In some of our samples we have the @FXML tag on the same line we define the class members. I know the IDE tends to want to put these on different lines, so in some of our samples it's just like you have it here.\nI kind of thing it's neater if they are on one line, but if the IDE formats it this way then it ought to be the 'best practice', so let's see if @Rachael-E has any strong feelings.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455146748", "createdAt": "2020-07-15T15:36:58Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODk0MDMzOnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozODo1MFrOGyEBdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozODo1MFrOGyEBdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0Nzg5NA==", "bodyText": "We don't strictly enforce a line length in samples, so I think we can just write this on one line:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n          \n          \n            \n                    \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n          \n          \n            \n                  ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455147894", "createdAt": "2020-07-15T15:38:50Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODk0OTg0OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0MTowN1rOGyEHOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0MTowN1rOGyEHOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0OTM2OA==", "bodyText": "What's actually happening in the line below is that we're adding the ArcGISScene to our scene view, not the scene view to the stack pane, so let's update this comment:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // add the SceneView to the stack pane\n          \n          \n            \n                  // add the scene to the scene view", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455149368", "createdAt": "2020-07-15T15:41:07Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODk1MjYyOnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0MTo0NFrOGyEI5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0MTo0NFrOGyEI5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0OTc5OQ==", "bodyText": "We can be a tad more specific about where we're adding the base surface to\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // add base surface for elevation data\n          \n          \n            \n                  // add a base surface for elevation data to the scene", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455149799", "createdAt": "2020-07-15T15:41:44Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODk1NTcxOnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0MjozNFrOGyEK8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0MjozNFrOGyEK8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1MDMyMQ==", "bodyText": "Same here, I think we could do this in one line. If the auto-formatting is chopping up lines for you, you can increase the character limit in the settings.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n          \n          \n            \n                    \"/DevA_BuildingShells\" +\n          \n          \n            \n                    \"/SceneServer/layers/0\";\n          \n          \n            \n                  final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455150321", "createdAt": "2020-07-15T15:42:34Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODk1NzIwOnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0Mjo1OFrOGyEL5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0Mjo1OFrOGyEL5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1MDU2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n          \n          \n            \n                    0.0);\n          \n          \n            \n                  Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0, 0.0);", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455150564", "createdAt": "2020-07-15T15:42:58Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODk1ODkwOnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0MzoyNFrOGyENDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0MzoyNFrOGyENDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1MDg2MA==", "bodyText": "Just a wee missing space here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  //set the time label on the control panel\n          \n          \n            \n                  // set the time label on the control panel", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455150860", "createdAt": "2020-07-15T15:43:24Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODk2MTA0OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0NDowMlrOGyEOdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0NDowMlrOGyEOdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1MTIyMg==", "bodyText": "Another missing space:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  //update the atmosphere effect based on the button clicked\n          \n          \n            \n                  // update the atmosphere effect based on the button clicked", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455151222", "createdAt": "2020-07-15T15:44:02Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODk4MjU2OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0OTozMlrOGyEbow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMTo1ODowNVrOGzQOqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NDU5NQ==", "bodyText": "Instead of three distinct buttons, we might be better off using a toggle group with radio buttons (or a drop-down menu). The implication of either of these control elements is that one option always has to be chosen/active at any given time. Buttons on the other hand imply you perform a 'one off' action the moment you click them.\nCheck out how to create a toggle group here:\nhttps://github.com/Esri/arcgis-runtime-samples-java/blob/master/network_analysis/service-area-task/src/main/resources/service_area_task/main.fxml#L38-L43\nI think you can then interrogate the toggle group as to which radio button is selected, and pass that value into your method setSunLighting", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455154595", "createdAt": "2020-07-15T15:49:32Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNDM2OA==", "bodyText": "Would this be the best way to check which radio button has been selected?\n// update the atmosphere effect based on the button clicked\n      toggleGroup.selectedToggleProperty().addListener((observable, oldValue, newValue) -> {\n        if (noSunButton.isSelected()){\n          sceneView.setSunLighting(LightingMode.NO_LIGHT);\n        }\n        else if (sunOnlyButton.isSelected()){\n          sceneView.setSunLighting(LightingMode.LIGHT);\n        }\n        else if (sunAndShadowsButton.isSelected()){\n          sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS);\n        }\n      });", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455924368", "createdAt": "2020-07-16T16:42:32Z", "author": {"login": "sclaridge"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NDU5NQ=="}, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMyNTIwNQ==", "bodyText": "That would certainly work! A perhaps sleeker way would be to set the 'user data' (it's like a readable property) of the toggle button to be a value of the LightingMode enum, and read that out in the listener. The surface placement placement sample does this, so you could borrow from there:\nhttps://github.com/Esri/arcgis-runtime-samples-java/blob/master/scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java#L142-L159\n@jenmerritt will be turning surface placement into a sample using fxml, so you could both check if there's a way to set the user data within the fxml or not (I don't actually know!)", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r456325205", "createdAt": "2020-07-17T09:20:04Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NDU5NQ=="}, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM4OTcwMQ==", "bodyText": "I couldn't find a way to set the user data to the LightMode in FXML. However, does this seem correct?\n// set the lighting mode of the buttons\nnoSunButton.setUserData(LightingMode.NO_LIGHT);\nsunOnlyButton.setUserData(LightingMode.LIGHT);\nsunAndShadowsButton.setUserData(LightingMode.LIGHT_AND_SHADOWS);\n\n// update the atmosphere effect based on the button clicked\ntoggleGroup.selectedToggleProperty().addListener((observable, oldToggle, newToggle) -> {\n\tif (toggleGroup.getSelectedToggle() != null)\n\t  sceneView.setSunLighting((LightingMode) toggleGroup.getSelectedToggle().getUserData());\n  });", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r456389701", "createdAt": "2020-07-17T11:42:10Z", "author": {"login": "sclaridge"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NDU5NQ=="}, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM5NjQ1OA==", "bodyText": "Looks great!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r456396458", "createdAt": "2020-07-17T11:58:05Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NDU5NQ=="}, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODk5MjMyOnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsLauncher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo1MjoxMlrOGyEhkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo1MjoxMlrOGyEhkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NjExNA==", "bodyText": "We're missing a new line in the end of this file. Github is kindly pointing that out \ud83d\ude04", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455156114", "createdAt": "2020-07-15T15:52:12Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsLauncher.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+/**\n+ * Wrapper required for launching a JavaFX 11 app through Gradle or from a jar.\n+ */\n+public class RealisticLightingAndShadowsLauncher {\n+\n+  public static void main(String[] args) {\n+    RealisticLightingAndShadowsSample.main(args);\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODk5NTM1OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo1MzowMFrOGyEjZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo1MzowMFrOGyEjZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NjU4MQ==", "bodyText": "Don't forget to update this to match the new sample's title:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                stage.setTitle(\"Realistic Environmental Atmosphere Sample\");\n          \n          \n            \n                stage.setTitle(\"Realistic Lighting and Shadows Sample\");", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455156581", "createdAt": "2020-07-15T15:53:00Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsSample.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.io.IOException;\n+\n+import javafx.application.Application;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+\n+public class RealisticLightingAndShadowsSample extends Application {\n+\n+  private static RealisticLightingAndShadowsController controller;\n+\n+  @Override\n+  public void start(Stage stage) throws IOException {\n+\n+    // set up the scene\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/realistic_lighting_and_shadows/main.fxml\"));\n+    Parent root = loader.load();\n+    controller = loader.getController();\n+    Scene scene = new Scene(root);\n+\n+    // set title, size, and add JavaFX scene to stage\n+    stage.setTitle(\"Realistic Environmental Atmosphere Sample\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODk5NzU1OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo1MzozN1rOGyEkvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo1MzozN1rOGyEkvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NjkyNw==", "bodyText": "Something slightly odd happened with this JavaDoc:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /**\n          \n          \n            \n               * /**\n          \n          \n            \n               * Stops and releases all resources used in application.\n          \n          \n            \n               */\n          \n          \n            \n              /**\n          \n          \n            \n               * Stops and releases all resources used in application.\n          \n          \n            \n               */", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455156927", "createdAt": "2020-07-15T15:53:37Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsSample.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.io.IOException;\n+\n+import javafx.application.Application;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+\n+public class RealisticLightingAndShadowsSample extends Application {\n+\n+  private static RealisticLightingAndShadowsController controller;\n+\n+  @Override\n+  public void start(Stage stage) throws IOException {\n+\n+    // set up the scene\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/realistic_lighting_and_shadows/main.fxml\"));\n+    Parent root = loader.load();\n+    controller = loader.getController();\n+    Scene scene = new Scene(root);\n+\n+    // set title, size, and add JavaFX scene to stage\n+    stage.setTitle(\"Realistic Environmental Atmosphere Sample\");\n+    stage.setWidth(800);\n+    stage.setHeight(700);\n+    stage.setScene(scene);\n+    stage.show();\n+  }\n+\n+  /**\n+   * /**\n+   * Stops and releases all resources used in application.\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODk5ODkyOnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsSample.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo1NDowMFrOGyElow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo1NDowMFrOGyElow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1NzE1NQ==", "bodyText": "We can remove this extra line:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455157155", "createdAt": "2020-07-15T15:54:00Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsSample.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.io.IOException;\n+\n+import javafx.application.Application;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+\n+public class RealisticLightingAndShadowsSample extends Application {\n+\n+  private static RealisticLightingAndShadowsController controller;\n+\n+  @Override\n+  public void start(Stage stage) throws IOException {\n+\n+    // set up the scene\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/realistic_lighting_and_shadows/main.fxml\"));\n+    Parent root = loader.load();\n+    controller = loader.getController();\n+    Scene scene = new Scene(root);\n+\n+    // set title, size, and add JavaFX scene to stage\n+    stage.setTitle(\"Realistic Environmental Atmosphere Sample\");\n+    stage.setWidth(800);\n+    stage.setHeight(700);\n+    stage.setScene(scene);\n+    stage.show();\n+  }\n+\n+  /**\n+   * /**\n+   * Stops and releases all resources used in application.\n+   */\n+  @Override\n+  public void stop() {\n+    controller.terminate();\n+  }\n+\n+  /**\n+   * Opens and runs application.\n+   *\n+   * @param args arguments passed to this application\n+   */\n+  public static void main(String[] args) {\n+\n+    Application.launch(args);\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTAxMTY4OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/resources/realistic_lighting_and_shadows/main.fxml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo1NzowNVrOGyEtcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo1NzowNVrOGyEtcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1OTE1NA==", "bodyText": "We can refactor a lot of this styling stuff into the CSS file, so that it's easier for the users to focus just on the control elements. Check out these files from animate images with image overlay:\nhttps://github.com/Esri/arcgis-runtime-samples-java/blob/master/scene/animate-images-with-image-overlay/src/main/resources/animate_images_with_image_overlay/style.css\nhttps://github.com/Esri/arcgis-runtime-samples-java/blob/master/scene/animate-images-with-image-overlay/src/main/resources/animate_images_with_image_overlay/main.fxml\nYou could also extract the styling from the VBoxes, Slider, and future RadioButtons.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455159154", "createdAt": "2020-07-15T15:57:05Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/resources/realistic_lighting_and_shadows/main.fxml", "diffHunk": "@@ -0,0 +1,65 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Esri.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy of\n+  ~ the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+  ~ License for the specific language governing permissions and limitations under\n+  ~ the License.\n+  -->\n+\n+<?import javafx.scene.control.Label?>\n+<?import javafx.scene.control.Button?>\n+<?import javafx.scene.control.Slider?>\n+<?import javafx.scene.layout.StackPane?>\n+<?import javafx.scene.layout.VBox?>\n+\n+<?import com.esri.arcgisruntime.mapping.view.SceneView?>\n+\n+<?import javafx.scene.layout.Background?>\n+<?import javafx.scene.layout.BackgroundFill?>\n+<?import javafx.scene.layout.StackPane?>\n+<?import javafx.scene.layout.VBox?>\n+<?import javafx.scene.paint.Color?>\n+<?import javafx.geometry.Insets?>\n+\n+<StackPane fx:controller=\"com.esri.samples.realistic_lighting_and_shadows.RealisticLightingAndShadowsController\"\n+           xmlns=\"http://javafx.com/javafx\"\n+           xmlns:fx=\"http://javafx.com/fxml\" stylesheets=\"/realistic_lighting_and_shadows/style.css\">\n+    <!--SDK SceneView-->\n+    <SceneView fx:id=\"sceneView\"/>\n+    <!--Slider box-->\n+    <VBox StackPane.alignment=\"TOP_RIGHT\" spacing=\"6\" maxWidth=\"265\" maxHeight=\"110\" styleClass=\"panel-region\">\n+        <padding>\n+            <Insets topRightBottomLeft=\"10\"/>\n+        </padding>\n+        <background>\n+            <Background>\n+                <fills>\n+                    <BackgroundFill>\n+                        <fill>\n+                            <Color opacity=\"0.3\"/>\n+                        </fill>\n+                    </BackgroundFill>\n+                </fills>\n+            </Background>\n+        </background>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTA2MjUzOnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjoxMTowMVrOGyFM-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjoxMTowMVrOGyFM-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2NzIyNg==", "bodyText": "I think most newer samples try and use plain english here, so let's add Disposes of...\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Disposes application resources.\n          \n          \n            \n               * Disposes of application resources.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455167226", "createdAt": "2020-07-15T16:11:01Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));\n+      sunOnlyButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT));\n+      sunAndShadowsButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS));\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Update the hour of the day based on the value of the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get value from the slider\n+        Double timeFromSlider = timeSlider.getValue();\n+        // to get minutes from timer value, split double to the two values after decimal place\n+        String timeAsString = timeFromSlider.toString();\n+\n+        // get the hour value from the slider\n+        int hourFromSlider = timeFromSlider.intValue();\n+\n+        if (timeAsString.length() > 4) {\n+          String subString = timeAsString.substring(3, 5);\n+\n+          int minutes = Integer.valueOf(subString);\n+          // convert figures into minutes\n+          float actualMinutes = ((float) minutes / (float) 100) * (float) 60;\n+          // round into an integer\n+          int minuteFromSlider = Math.round(actualMinutes);\n+\n+          // set the calendar for given hour and minute from slider value\n+          calendar.set(2018, 7, 10, hourFromSlider, minuteFromSlider);\n+\n+        } else {\n+          calendar.set(2018, 7, 10, hourFromSlider, 00);\n+        }\n+        // tidy string to just return date and time (hours and minutes)\n+        SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+        dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+        String dynamicDateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+        // update label to reflect current date and time\n+        time.setText(dynamicDateAndTimeTidied);\n+\n+        // set the sun time to calendar\n+        sceneView.setSunTime(calendar);\n+      }\n+    );\n+  }\n+\n+  /**\n+   * Set labels to display on the slider.\n+   */\n+  private void setSliderLabels() {\n+\n+    timeSlider.setLabelFormatter(new StringConverter<Double>() {\n+\n+      @Override\n+      public String toString(Double object) {\n+\n+        if (object == 4) return \"4am\";\n+        if (object == 8) return \"8am\";\n+        if (object == 12) return \"Midday\";\n+        if (object == 16) return \"4pm\";\n+        if (object == 20) return \"8pm\";\n+\n+        return \"Midnight\";\n+      }\n+\n+      @Override\n+      public Double fromString(String string) {\n+        return null;\n+      }\n+    });\n+  }\n+\n+  /**\n+   * Set the time to display in a label.\n+   */\n+  public void setTimeLabel() {\n+\n+    // set a new calendar and add a date and time\n+    calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+    calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+    sceneView.setSunTime(calendar);\n+\n+    // tidy string to just return date and time (hours and minutes)\n+    SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+    dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+    String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+    // set a label to display the tidied date and time\n+    time.setText(dateAndTimeTidied);\n+  }\n+\n+  /**\n+   * Disposes application resources.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 196}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTE0ODQ4OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjozNDowMlrOGyGDFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjozNDowMlrOGyGDFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4MTA3OQ==", "bodyText": "I've noticed the Kotlin sample has the slider represent minutes in int instead of a double:\nhttps://github.com/Esri/arcgis-runtime-samples-android/pull/836/files?file-filters%5B%5D=.gradle&file-filters%5B%5D=.kt&file-filters%5B%5D=.png&file-filters%5B%5D=.pro&file-filters%5B%5D=.xml&file-filters%5B%5D=dotfile#diff-70792a6978609f728c4f1fb8210f44a3R87-R98\nIt looks like it may make the code a little more succinct, with no conversion between strings/substrings and changing the values from Double over String to Int.\nOnce you have the int minutes you can easily convert to hours and update your calendar?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455181079", "createdAt": "2020-07-15T16:34:02Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));\n+      sunOnlyButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT));\n+      sunAndShadowsButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS));\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Update the hour of the day based on the value of the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get value from the slider\n+        Double timeFromSlider = timeSlider.getValue();\n+        // to get minutes from timer value, split double to the two values after decimal place\n+        String timeAsString = timeFromSlider.toString();\n+\n+        // get the hour value from the slider\n+        int hourFromSlider = timeFromSlider.intValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTE3Nzk2OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo0MTozNlrOGyGVLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo0MTozNlrOGyGVLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4NTcxMA==", "bodyText": "We probably don't want to extract this code into a method, but just put it in-line. The reason would be that there's no refactoring value just now. It might be counter-intuitive to write out a long initialize() method, instead of having many helper methods, but it does allow us to more or less read the file top to bottom and have a good idea of what's happening (instead of jumping back and forth between method definitions). Definitely not 'best coding practice', but helpful from a code sample perspective", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455185710", "createdAt": "2020-07-15T16:41:36Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTE4NTg3OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo0Mzo0NFrOGyGaBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo0Mzo0NFrOGyGaBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE4Njk1MQ==", "bodyText": "Once you remove the setTimeLabel() method, you could refactor this block of code by re-using the dateFormat object that will now be in the initialize() method (by making dateFormat a class-member)", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455186951", "createdAt": "2020-07-15T16:43:44Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));\n+      sunOnlyButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT));\n+      sunAndShadowsButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS));\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Update the hour of the day based on the value of the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get value from the slider\n+        Double timeFromSlider = timeSlider.getValue();\n+        // to get minutes from timer value, split double to the two values after decimal place\n+        String timeAsString = timeFromSlider.toString();\n+\n+        // get the hour value from the slider\n+        int hourFromSlider = timeFromSlider.intValue();\n+\n+        if (timeAsString.length() > 4) {\n+          String subString = timeAsString.substring(3, 5);\n+\n+          int minutes = Integer.valueOf(subString);\n+          // convert figures into minutes\n+          float actualMinutes = ((float) minutes / (float) 100) * (float) 60;\n+          // round into an integer\n+          int minuteFromSlider = Math.round(actualMinutes);\n+\n+          // set the calendar for given hour and minute from slider value\n+          calendar.set(2018, 7, 10, hourFromSlider, minuteFromSlider);\n+\n+        } else {\n+          calendar.set(2018, 7, 10, hourFromSlider, 00);\n+        }\n+        // tidy string to just return date and time (hours and minutes)\n+        SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+        dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+        String dynamicDateAndTimeTidied = dateFormat.format(calendar.getTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTIyODQyOnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo1NDo0N1rOGyG0qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMDo1MzoyNVrOGzOnlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5Mzc2OQ==", "bodyText": "I think you could simplify setting the hour/minute by doing:\n            calendar.set(Calendar.HOUR_OF_DAY, hourFromSlider);\n            calendar.set(Calendar.MINUTE, minuteFromSlider);\n\nThat way, you shouldn't have to specify the year/month/day.\nLet me know if that works!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455193769", "createdAt": "2020-07-15T16:54:47Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));\n+      sunOnlyButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT));\n+      sunAndShadowsButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS));\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Update the hour of the day based on the value of the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get value from the slider\n+        Double timeFromSlider = timeSlider.getValue();\n+        // to get minutes from timer value, split double to the two values after decimal place\n+        String timeAsString = timeFromSlider.toString();\n+\n+        // get the hour value from the slider\n+        int hourFromSlider = timeFromSlider.intValue();\n+\n+        if (timeAsString.length() > 4) {\n+          String subString = timeAsString.substring(3, 5);\n+\n+          int minutes = Integer.valueOf(subString);\n+          // convert figures into minutes\n+          float actualMinutes = ((float) minutes / (float) 100) * (float) 60;\n+          // round into an integer\n+          int minuteFromSlider = Math.round(actualMinutes);\n+\n+          // set the calendar for given hour and minute from slider value\n+          calendar.set(2018, 7, 10, hourFromSlider, minuteFromSlider);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM3MDA2OQ==", "bodyText": "This does work!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r456370069", "createdAt": "2020-07-17T10:53:25Z", "author": {"login": "sclaridge"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));\n+      sunOnlyButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT));\n+      sunAndShadowsButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS));\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Update the hour of the day based on the value of the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get value from the slider\n+        Double timeFromSlider = timeSlider.getValue();\n+        // to get minutes from timer value, split double to the two values after decimal place\n+        String timeAsString = timeFromSlider.toString();\n+\n+        // get the hour value from the slider\n+        int hourFromSlider = timeFromSlider.intValue();\n+\n+        if (timeAsString.length() > 4) {\n+          String subString = timeAsString.substring(3, 5);\n+\n+          int minutes = Integer.valueOf(subString);\n+          // convert figures into minutes\n+          float actualMinutes = ((float) minutes / (float) 100) * (float) 60;\n+          // round into an integer\n+          int minuteFromSlider = Math.round(actualMinutes);\n+\n+          // set the calendar for given hour and minute from slider value\n+          calendar.set(2018, 7, 10, hourFromSlider, minuteFromSlider);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5Mzc2OQ=="}, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTIzMzMxOnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo1NTo1NVrOGyG3iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNjo1NTo1NVrOGyG3iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5NDUwNA==", "bodyText": "I think by grabbing the slider value as ints representing minutes, you'd be able to avoid the if/else statement based on the length of the string. Curious to see if it's possible to borrow Kotlin's design!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455194504", "createdAt": "2020-07-15T16:55:55Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));\n+      sunOnlyButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT));\n+      sunAndShadowsButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS));\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Update the hour of the day based on the value of the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get value from the slider\n+        Double timeFromSlider = timeSlider.getValue();\n+        // to get minutes from timer value, split double to the two values after decimal place\n+        String timeAsString = timeFromSlider.toString();\n+\n+        // get the hour value from the slider\n+        int hourFromSlider = timeFromSlider.intValue();\n+\n+        if (timeAsString.length() > 4) {\n+          String subString = timeAsString.substring(3, 5);\n+\n+          int minutes = Integer.valueOf(subString);\n+          // convert figures into minutes\n+          float actualMinutes = ((float) minutes / (float) 100) * (float) 60;\n+          // round into an integer\n+          int minuteFromSlider = Math.round(actualMinutes);\n+\n+          // set the calendar for given hour and minute from slider value\n+          calendar.set(2018, 7, 10, hourFromSlider, minuteFromSlider);\n+\n+        } else {\n+          calendar.set(2018, 7, 10, hourFromSlider, 00);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTI1MDU0OnYy", "diffSide": "RIGHT", "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzowMDoxMVrOGyHCIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNzowMDoxMVrOGyHCIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE5NzIxOQ==", "bodyText": "Even though I suggested getting rid of setTimeLabel() and adding the code within that into initialize(), I'd be happy for this to stay here, as it's mainly UI setup (so less relevant to the sample's logic.\nI've never had to deal with setting custom labels, but a quick search online shows the same pattern. It looks like this is what may be tying the slider to return Double values? Either way, you should be able to get it to return ints that represent minutes quite easily.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r455197219", "createdAt": "2020-07-15T17:00:11Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-light-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import javafx.fxml.FXML;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import javafx.scene.control.Button;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML\n+  private SceneView sceneView;\n+  @FXML\n+  private Label time;\n+  @FXML\n+  private Slider timeSlider;\n+  @FXML\n+  private Button noSunButton;\n+  @FXML\n+  private Button sunOnlyButton;\n+  @FXML\n+  private Button sunAndShadowsButton;\n+  private Surface surface;\n+  private Calendar calendar;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis\" +\n+        \".com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services\" +\n+        \"/DevA_BuildingShells\" +\n+        \"/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,\n+        0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      //set the time label on the control panel\n+      setTimeLabel();\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      //update the atmosphere effect based on the button clicked\n+      noSunButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.NO_LIGHT));\n+      sunOnlyButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT));\n+      sunAndShadowsButton.setOnAction(event -> sceneView.setSunLighting(LightingMode.LIGHT_AND_SHADOWS));\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Update the hour of the day based on the value of the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get value from the slider\n+        Double timeFromSlider = timeSlider.getValue();\n+        // to get minutes from timer value, split double to the two values after decimal place\n+        String timeAsString = timeFromSlider.toString();\n+\n+        // get the hour value from the slider\n+        int hourFromSlider = timeFromSlider.intValue();\n+\n+        if (timeAsString.length() > 4) {\n+          String subString = timeAsString.substring(3, 5);\n+\n+          int minutes = Integer.valueOf(subString);\n+          // convert figures into minutes\n+          float actualMinutes = ((float) minutes / (float) 100) * (float) 60;\n+          // round into an integer\n+          int minuteFromSlider = Math.round(actualMinutes);\n+\n+          // set the calendar for given hour and minute from slider value\n+          calendar.set(2018, 7, 10, hourFromSlider, minuteFromSlider);\n+\n+        } else {\n+          calendar.set(2018, 7, 10, hourFromSlider, 00);\n+        }\n+        // tidy string to just return date and time (hours and minutes)\n+        SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+        dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+        String dynamicDateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+        // update label to reflect current date and time\n+        time.setText(dynamicDateAndTimeTidied);\n+\n+        // set the sun time to calendar\n+        sceneView.setSunTime(calendar);\n+      }\n+    );\n+  }\n+\n+  /**\n+   * Set labels to display on the slider.\n+   */\n+  private void setSliderLabels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e0bf1a32439ea2aa65d7fb6a7e146647262d7a"}, "originalPosition": 153}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDU0MDI5OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1NDowMVrOG0RRJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1NDowMVrOG0RRJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2MjA1NA==", "bodyText": "I don't think we're re-using this URL either, so we can just use it in place.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n          \n          \n            \n                  ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n          \n          \n            \n                  ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457462054", "createdAt": "2020-07-20T14:54:01Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -61,14 +60,12 @@ public void initialize() {\n \n       // add a base surface for elevation data to the scene\n       surface = new Surface();\n-      ArcGISTiledElevationSource elevationSource = new\n-        ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n       surface.getElevationSources().add(elevationSource);\n       scene.setBaseSurface(surface);\n \n       // add a scene layer\n-      final String buildings =\n-        \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n       ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3818693dba1c9271a648f5c65ce04ad592d70823"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDU0OTYxOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1NToyN1rOG0RWmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1NToyN1rOG0RWmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2MzQ0OA==", "bodyText": "Looks like this comment might be out of date now?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457463448", "createdAt": "2020-07-20T14:55:27Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -76,8 +77,20 @@ public void initialize() {\n       // set atmosphere effect to realistic\n       sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n \n+      // set a new calendar and add a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n       // set the time label on the control panel", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e128ff33040be8d2821f8f938e80a293f384277"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDU2MTY0OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1NzoyNVrOG0RdlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1NzoyNVrOG0RdlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2NTIzNg==", "bodyText": "Perhaps we can call this 'format the string'? We should also name the Label object timeLabel, since it helps to identify what kind of class it is.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // tidy string to just return date and time (hours and minutes)\n          \n          \n            \n                  dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n          \n          \n            \n                  dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n          \n          \n            \n                  String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n          \n          \n            \n            \n          \n          \n            \n                  // set a label to display the tidied date and time\n          \n          \n            \n                  time.setText(dateAndTimeTidied);\n          \n          \n            \n                  // format the string to just return date and time (hours and minutes)\n          \n          \n            \n                  dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n          \n          \n            \n                  dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n          \n          \n            \n                  String formattedDateAndTime = dateFormat.format(calendar.getTime());\n          \n          \n            \n            \n          \n          \n            \n                  // set a label to display the tidied date and time\n          \n          \n            \n                  timeLabel.setText(formattedDateAndTime);", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457465236", "createdAt": "2020-07-20T14:57:25Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -76,8 +77,20 @@ public void initialize() {\n       // set atmosphere effect to realistic\n       sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n \n+      // set a new calendar and add a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n       // set the time label on the control panel\n-      setTimeLabel();\n+      sceneView.setSunTime(calendar);\n+\n+      // tidy string to just return date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the tidied date and time\n+      time.setText(dateAndTimeTidied);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e128ff33040be8d2821f8f938e80a293f384277"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDU3MjMzOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1OTowOVrOG0Rj4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDo1OTowOVrOG0Rj4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ2Njg0OA==", "bodyText": "Should we call this formatted as well?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457466848", "createdAt": "2020-07-20T14:59:09Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -119,14 +132,13 @@ public void changeTimeOfDay() {\n           int minuteFromSlider = Math.round(actualMinutes);\n \n           // set the calendar for given hour and minute from slider value\n-          calendar.set(2018, 7, 10, hourFromSlider, minuteFromSlider);\n+          calendar.set(Calendar.HOUR_OF_DAY, hourFromSlider);\n+          calendar.set(Calendar.MINUTE, minuteFromSlider);\n \n         } else {\n           calendar.set(2018, 7, 10, hourFromSlider, 00);\n         }\n         // tidy string to just return date and time (hours and minutes)\n-        SimpleDateFormat dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n-        dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n         String dynamicDateAndTimeTidied = dateFormat.format(calendar.getTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e128ff33040be8d2821f8f938e80a293f384277"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDYyNzI5OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowODowMFrOG0SD0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowODowMFrOG0SD0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3NTAyNg==", "bodyText": "Nice work on using the cell factory here!\nWe often put these new definitions of the ListCell class in their own file. Check out an example here:\nhttps://github.com/Esri/arcgis-runtime-samples-java/blob/master/utility_network/trace-a-utility-network/src/main/java/com/esri/samples/trace_a_utility_network/UtilityTerminalListCell.java\nWith the if/else block you have below, we might be able to get away without the StringConverter above on lines 180- 195 (but I might be wrong). This is because you can shove the values from the LightningMode enum into the combobox, and use the ListCell to customise what is actually displayed in the UI.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457475026", "createdAt": "2020-07-20T15:08:00Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -176,6 +172,43 @@ public Double fromString(String string) {\n     });\n   }\n \n+  /**\n+   * Set labels to display in the combo box.\n+   */\n+  private void setComboBoxLabels() {\n+\n+    comboBox.setConverter(new StringConverter<LightingMode>() {\n+\n+      @Override\n+      public String toString(LightingMode mode) {\n+\n+        if (mode == LightingMode.LIGHT) return \"Light Only\";\n+        if (mode == LightingMode.LIGHT_AND_SHADOWS) return \"Light and Shadows\";\n+        if (mode == LightingMode.NO_LIGHT) return \"No Light\";\n+        else return \"Light only\";\n+      }\n+\n+      @Override\n+      public LightingMode fromString(String string) {\n+        return null;\n+      }\n+    });\n+\n+    comboBox.setCellFactory(comboBox -> new ListCell<LightingMode>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc31d9c409d4fab9ec4dfc5d24dd9877bce72de"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDYzMjAzOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/main.fxml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowODo1MFrOG0SGdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowODo1MFrOG0SGdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3NTcwMQ==", "bodyText": "Great find on this! I didn't know it's possible to populate runtime API values into this using FXML \ud83d\udc4d", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457475701", "createdAt": "2020-07-20T15:08:50Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/main.fxml", "diffHunk": "@@ -33,9 +36,15 @@\n     <!--Slider box-->\n     <VBox styleClass=\"panel-region\">\n         <Label fx:id=\"time\"/>\n-        <Button fx:id=\"noSunButton\" text=\"No sun light effect\" maxWidth=\"Infinity\"/>\n-        <Button fx:id=\"sunOnlyButton\" text=\"Sun light only\" maxWidth=\"Infinity\"/>\n-        <Button fx:id=\"sunAndShadowsButton\" text=\"Sun light with shadows\" maxWidth=\"Infinity\"/>\n+        <ComboBox fx:id=\"comboBox\" maxWidth=\"Infinity\">\n+            <items>\n+                <FXCollections fx:factory=\"observableArrayList\">\n+                    <LightingMode fx:value=\"NO_LIGHT\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc31d9c409d4fab9ec4dfc5d24dd9877bce72de"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDYzNzgzOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowOTo1NFrOG0SJ7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTowOTo1NFrOG0SJ7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3NjU4OQ==", "bodyText": "I think you might not need this any more if you're using the ListCell method to modify the ComboBox display of each entry", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457476589", "createdAt": "2020-07-20T15:09:54Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -95,50 +96,44 @@ public void initialize() {\n       // set the slider to display tick labels as time strings\n       setSliderLabels();\n \n-      \n+      // set the combo box to display the lighting modes as strings\n+      setComboBoxLabels();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDY1OTExOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToxMjo0NlrOG0SVWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToxMjo0NlrOG0SVWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3OTUxMw==", "bodyText": "We should name this timeLabel so that it's easier to tell what Type this object is from the var name", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457479513", "createdAt": "2020-07-20T15:12:46Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,217 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+import static java.lang.StrictMath.floor;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label time;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDY2NTU3OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToxMzozOFrOG0SYxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToxMzozOFrOG0SYxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ4MDM4OQ==", "bodyText": "I don't think the string variable is being re-used so we can just write the URL in line\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n          \n          \n            \n                  ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n          \n          \n            \n                  ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457480389", "createdAt": "2020-07-20T15:13:38Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,217 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+import static java.lang.StrictMath.floor;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label time;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDY3NDM5OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToxNDo1MFrOG0Sdpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToxNDo1MFrOG0Sdpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ4MTYzOA==", "bodyText": "I personally thing 'update' is a bit more fitting for a method name\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void changeTimeOfDay() {\n          \n          \n            \n              public void updateTimeOfDay() {", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457481638", "createdAt": "2020-07-20T15:14:50Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,217 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+import static java.lang.StrictMath.floor;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label time;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a new calendar and add a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n+      // set the time label on the control panel\n+      sceneView.setSunTime(calendar);\n+\n+      // tidy string to just return date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the tidied date and time\n+      time.setText(dateAndTimeTidied);\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      // set the combo box to display the lighting modes as strings\n+      setComboBoxLabels();\n+\n+      // update the atmosphere effect based on the lighting mode chosen from the combo box\n+      comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+        sceneView.setSunLighting(comboBox.getSelectionModel().getSelectedItem());\n+      });\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Set the sun time based on the time from the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDcwMzI1OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToxODo1N1rOG0StUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToxODo1N1rOG0StUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ4NTY1MA==", "bodyText": "We can also say 'format' the string here", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457485650", "createdAt": "2020-07-20T15:18:57Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,217 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+import static java.lang.StrictMath.floor;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label time;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a new calendar and add a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n+      // set the time label on the control panel\n+      sceneView.setSunTime(calendar);\n+\n+      // tidy string to just return date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the tidied date and time\n+      time.setText(dateAndTimeTidied);\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      // set the combo box to display the lighting modes as strings\n+      setComboBoxLabels();\n+\n+      // update the atmosphere effect based on the lighting mode chosen from the combo box\n+      comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+        sceneView.setSunLighting(comboBox.getSelectionModel().getSelectedItem());\n+      });\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Set the sun time based on the time from the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get the hour value from the slider\n+        int hours = newValue.intValue();\n+\n+        // get the minutes from the slider\n+        double afterDecimal = newValue.doubleValue() - floor(newValue.doubleValue());\n+        int minutes = (int) (afterDecimal * 60);\n+\n+        // set the calendar for given hour and minute from slider value\n+        calendar.set(Calendar.HOUR_OF_DAY, hours);\n+        calendar.set(Calendar.MINUTE, minutes);\n+\n+        // tidy string to just return date and time (hours and minutes)\n+        String dateAndTimeTidied = dateFormat.format(calendar.getTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDcyMzc2OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/main.fxml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToyMTo1NFrOG0S45g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToyMTo1NFrOG0S45g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ4ODYxNA==", "bodyText": "If we multiply the min/max values here by 60, we can get the values from the slider represented in minutes. It might make the calculation in changeTimeOfDay a tad simpler by simply doing\nint hours = sliderValue / 60;\nint minutes = sliderValue % 60;\n\nI accept that this is a matter of preference though, so up to you :)", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457488614", "createdAt": "2020-07-20T15:21:54Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/main.fxml", "diffHunk": "@@ -0,0 +1,50 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Esri.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy of\n+  ~ the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+  ~ License for the specific language governing permissions and limitations under\n+  ~ the License.\n+  -->\n+<?import javafx.scene.layout.*?>\n+\n+<?import com.esri.arcgisruntime.mapping.view.SceneView?>\n+<?import com.esri.arcgisruntime.mapping.view.LightingMode?>\n+<?import javafx.geometry.Insets?>\n+<?import javafx.scene.control.Label?>\n+<?import javafx.scene.control.Slider?>\n+<?import javafx.scene.control.ComboBox?>\n+<?import javafx.collections.FXCollections?>\n+<StackPane fx:controller=\"com.esri.samples.realistic_lighting_and_shadows.RealisticLightingAndShadowsController\"\n+           xmlns=\"http://javafx.com/javafx\"\n+           xmlns:fx=\"http://javafx.com/fxml\" stylesheets=\"/realistic_lighting_and_shadows/style.css\">\n+    <!--SDK SceneView-->\n+    <SceneView fx:id=\"sceneView\"/>\n+    <StackPane.margin>\n+        <Insets topRightBottomLeft=\"10\" />\n+    </StackPane.margin>\n+    <!--Slider box-->\n+    <VBox styleClass=\"panel-region\">\n+        <Label fx:id=\"time\"/>\n+        <ComboBox fx:id=\"comboBox\" maxWidth=\"Infinity\">\n+            <items>\n+                <FXCollections fx:factory=\"observableArrayList\">\n+                    <LightingMode fx:value=\"NO_LIGHT\"/>\n+                    <LightingMode fx:value=\"LIGHT\"/>\n+                    <LightingMode fx:value=\"LIGHT_AND_SHADOWS\"/>\n+                </FXCollections>\n+            </items>\n+        </ComboBox>\n+        <Slider fx:id=\"timeSlider\" value=\"12\" max=\"24\" majorTickUnit=\"4\" minorTickCount=\"60\" showTickMarks=\"true\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDc0MDcwOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToyNDozOVrOG0TC3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToyNDozOVrOG0TC3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ5MTE2NQ==", "bodyText": "On second thought, we can also extract this new class definition for StringConverter into a separate file, then just do\ntimeSlider.setLabelFormatter(new CustomStringConverter());\nThat way we can leave this method out and have a single line in the main initialize() method.\nMy thought behind this is that it's more JavaFX/UI setup, and our main goal with the Java samples is to teach people the main concepts of the Runtime API. In this case the 'meat' of this sample is your changeTimeOfDay() method so we want to bring that front and centre", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457491165", "createdAt": "2020-07-20T15:24:39Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,217 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ListCell;\n+import javafx.scene.control.Slider;\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+import static java.lang.StrictMath.floor;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label time;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a new calendar and add a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n+      // set the time label on the control panel\n+      sceneView.setSunTime(calendar);\n+\n+      // tidy string to just return date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the tidied date and time\n+      time.setText(dateAndTimeTidied);\n+\n+      // set the slider to display tick labels as time strings\n+      setSliderLabels();\n+\n+      // set the combo box to display the lighting modes as strings\n+      setComboBoxLabels();\n+\n+      // update the atmosphere effect based on the lighting mode chosen from the combo box\n+      comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+        sceneView.setSunLighting(comboBox.getSelectionModel().getSelectedItem());\n+      });\n+\n+    } catch (Exception e) {\n+      // on any error, display the stack trace.\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Set the sun time based on the time from the slider.\n+   */\n+  @FXML\n+  public void changeTimeOfDay() {\n+    // when the slider changes, update the hour of the day based on the value of the slider\n+    timeSlider.valueProperty().addListener((observable, oldValue, newValue) -> {\n+\n+        // get the hour value from the slider\n+        int hours = newValue.intValue();\n+\n+        // get the minutes from the slider\n+        double afterDecimal = newValue.doubleValue() - floor(newValue.doubleValue());\n+        int minutes = (int) (afterDecimal * 60);\n+\n+        // set the calendar for given hour and minute from slider value\n+        calendar.set(Calendar.HOUR_OF_DAY, hours);\n+        calendar.set(Calendar.MINUTE, minutes);\n+\n+        // tidy string to just return date and time (hours and minutes)\n+        String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+\n+        // update label to reflect current date and time\n+        time.setText(dateAndTimeTidied);\n+\n+        // set the sun time to calendar\n+        sceneView.setSunTime(calendar);\n+      }\n+    );\n+  }\n+\n+  /**\n+   * Set labels to display on the slider.\n+   */\n+  private void setSliderLabels() {\n+\n+    timeSlider.setLabelFormatter(new StringConverter<Double>() {\n+\n+      @Override\n+      public String toString(Double hour) {\n+\n+        if (hour == 4) return \"4am\";\n+        if (hour == 8) return \"8am\";\n+        if (hour == 12) return \"Midday\";\n+        if (hour == 16) return \"4pm\";\n+        if (hour == 20) return \"8pm\";\n+\n+        return \"Midnight\";\n+      }\n+\n+      @Override\n+      public Double fromString(String string) {\n+        return null;\n+      }\n+    });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33"}, "originalPosition": 167}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDc0NTA3OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToyNToyNFrOG0TFeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToyNToyNFrOG0TFeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ5MTgzMw==", "bodyText": "GitHub is telling us there's a missing newline here.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r457491833", "createdAt": "2020-07-20T15:25:24Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsSample.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.io.IOException;\n+\n+import javafx.application.Application;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+\n+public class RealisticLightingAndShadowsSample extends Application {\n+\n+  private static RealisticLightingAndShadowsController controller;\n+\n+  @Override\n+  public void start(Stage stage) throws IOException {\n+\n+    // set up the scene\n+    FXMLLoader loader = new FXMLLoader(getClass().getResource(\"/realistic_lighting_and_shadows/main.fxml\"));\n+    Parent root = loader.load();\n+    controller = loader.getController();\n+    Scene scene = new Scene(root);\n+\n+    // set title, size, and add JavaFX scene to stage\n+    stage.setTitle(\"Realistic Lighting and Shadows Sample\");\n+    stage.setWidth(800);\n+    stage.setHeight(700);\n+    stage.setScene(scene);\n+    stage.show();\n+  }\n+\n+  /**\n+   * Stops and releases all resources used in application.\n+   */\n+  @Override\n+  public void stop() {\n+    controller.terminate();\n+  }\n+\n+  /**\n+   * Opens and runs application.\n+   *\n+   * @param args arguments passed to this application\n+   */\n+  public static void main(String[] args) {\n+\n+    Application.launch(args);\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a67e206e0bb9ee120ae4682854c1d52c0ada9d33"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjM2NzU4OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOTo1Njo0M1rOG1bbQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMDozMDoxMFrOG1chJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY3NzA1Ng==", "bodyText": "Sorry about the confusion @sclaridge ! We generally keep both the PNG and the GIF if there is one. The readme then links the PNG, and the SampleViewer will automatically show the GIF if there is one", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458677056", "createdAt": "2020-07-22T09:56:43Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/README.md", "diffHunk": "@@ -2,7 +2,7 @@\n \n Show realistic lighting and shadows for the time of day.\n \n-![Image of realistic lighting and shadows](RealisticLightingAndShadows.png)\n+![Image of realistic lighting and shadows](RealisticLightingAndShadows.gif)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d60fc5f5216c4cff4d985fc80a401f9931e44f83"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY5NDk1MQ==", "bodyText": "I'm also noticing the GIF looks a little small, it's at 400x200 px I think, and should be 800x400", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458694951", "createdAt": "2020-07-22T10:30:10Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/README.md", "diffHunk": "@@ -2,7 +2,7 @@\n \n Show realistic lighting and shadows for the time of day.\n \n-![Image of realistic lighting and shadows](RealisticLightingAndShadows.png)\n+![Image of realistic lighting and shadows](RealisticLightingAndShadows.gif)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY3NzA1Ng=="}, "originalCommit": {"oid": "d60fc5f5216c4cff4d985fc80a401f9931e44f83"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjM3ODY3OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOTo1OToyOFrOG1bhpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOTo1OToyOFrOG1bhpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY3ODY5Mg==", "bodyText": "This is great. We just need to add a JavaDoc style comment, to explain a little bit what this class does:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ComboBoxStringConverter extends StringConverter<LightingMode> {\n          \n          \n            \n            /**\n          \n          \n            \n             * Converts the LightningMode values to strings to display the selected value in the ComboBox.\n          \n          \n            \n             */\n          \n          \n            \n            public class ComboBoxStringConverter extends StringConverter<LightingMode> {", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458678692", "createdAt": "2020-07-22T09:59:28Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+\n+public class ComboBoxStringConverter extends StringConverter<LightingMode> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d60fc5f5216c4cff4d985fc80a401f9931e44f83"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjM4NzI2OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/LightingModeListCell.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMDowMTo1M1rOG1bnHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMDowMTo1M1rOG1bnHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY4MDA5NA==", "bodyText": "Same here, we just need to give this class a little bit of documentation\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class LightingModeListCell extends ListCell<LightingMode> {\n          \n          \n            \n            /**\n          \n          \n            \n             * Converts the LightningMode values to strings to display in the open ComboBox.\n          \n          \n            \n             */\n          \n          \n            \n            public class LightingModeListCell extends ListCell<LightingMode> {", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458680094", "createdAt": "2020-07-22T10:01:53Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/LightingModeListCell.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.scene.control.ListCell;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+\n+public class LightingModeListCell extends ListCell<LightingMode> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d60fc5f5216c4cff4d985fc80a401f9931e44f83"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjM5MTgxOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMDowMzoxNlrOG1bqGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMDowMzoxNlrOG1bqGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY4MDg1Ng==", "bodyText": "Sorry if I caused any confusion here: I think dateFormat is a good variable name for this object. The comments previously were just to suggest to use the phrasing format the string instead of tidy the string.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458680856", "createdAt": "2020-07-22T10:03:16Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -38,17 +36,15 @@\n import com.esri.arcgisruntime.mapping.view.LightingMode;\n import com.esri.arcgisruntime.mapping.view.SceneView;\n \n-import static java.lang.StrictMath.floor;\n-\n public class RealisticLightingAndShadowsController {\n \n   @FXML private SceneView sceneView;\n-  @FXML private Label time;\n+  @FXML private Label timeLabel;\n   @FXML private Slider timeSlider;\n   @FXML private ComboBox<LightingMode> comboBox;\n   private Surface surface;\n   private Calendar calendar;\n-  private SimpleDateFormat dateFormat;\n+  private SimpleDateFormat formatted;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d60fc5f5216c4cff4d985fc80a401f9931e44f83"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjQwNjkzOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMDowNzozMFrOG1bzhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMDowNzozMFrOG1bzhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY4MzI3MQ==", "bodyText": "Sorry about the confusion here! We should still give the SimpleDateFormat variable a representative name:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // format the string to just return the date and time (hours and minutes)\n          \n          \n            \n                  formatted = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n          \n          \n            \n                  formatted.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n          \n          \n            \n                  String formattedDateAndTime = formatted.format(calendar.getTime());\n          \n          \n            \n                  // format the string to just return the date and time (hours and minutes)\n          \n          \n            \n                  dateFormat= new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n          \n          \n            \n                  dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n          \n          \n            \n                  String formattedDateAndTime = formatted.format(calendar.getTime());", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458683271", "createdAt": "2020-07-22T10:07:30Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -78,26 +73,32 @@ public void initialize() {\n       // set atmosphere effect to realistic\n       sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n \n-      // set a new calendar and add a date and time\n+      // set a calendar with a date and time\n       calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n       calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n \n-      // set the time label on the control panel\n+      // set the sun time to the calendar\n       sceneView.setSunTime(calendar);\n \n-      // tidy string to just return date and time (hours and minutes)\n-      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n-      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n-      String dateAndTimeTidied = dateFormat.format(calendar.getTime());\n+      // format the string to just return the date and time (hours and minutes)\n+      formatted = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      formatted.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String formattedDateAndTime = formatted.format(calendar.getTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d60fc5f5216c4cff4d985fc80a401f9931e44f83"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjQxNTQ1OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/SliderStringConverter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMDoxMDowM1rOG1b4tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMDoxMDowM1rOG1b4tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY4NDU5Ng==", "bodyText": "Let's give this a bit of documentation as well. Feel free to just follow the examples I gave at the top", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458684596", "createdAt": "2020-07-22T10:10:03Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/SliderStringConverter.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.util.StringConverter;\n+\n+public class SliderStringConverter extends StringConverter<Double> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d60fc5f5216c4cff4d985fc80a401f9931e44f83"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjQyMTI2OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/main.fxml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMDoxMTo1MlrOG1b8Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMDoxNTozMVrOG1cECQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY4NTUyNw==", "bodyText": "Nice work on updating the Slider. Remember you don't need an opening and closing tag if there's nothing between them. You could just write <Slider />. Same goes for the ComboBox above now that the values are added in the Controller class\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    <Slider fx:id=\"timeSlider\" max=\"1440\" majorTickUnit=\"240\" minorTickCount=\"3600\" value=\"720\" showTickMarks=\"true\"\n          \n          \n            \n                            showTickLabels=\"true\" onMouseDragged=\"#updateTimeOfDay\">\n          \n          \n            \n                    </Slider>\n          \n          \n            \n                    <Slider fx:id=\"timeSlider\" max=\"1440\" majorTickUnit=\"240\" minorTickCount=\"3600\" value=\"720\" showTickMarks=\"true\"\n          \n          \n            \n                            showTickLabels=\"true\" onMouseDragged=\"#updateTimeOfDay\" />", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458685527", "createdAt": "2020-07-22T10:11:52Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/main.fxml", "diffHunk": "@@ -17,34 +17,25 @@\n <?import javafx.scene.layout.*?>\n \n <?import com.esri.arcgisruntime.mapping.view.SceneView?>\n-<?import com.esri.arcgisruntime.mapping.view.LightingMode?>\n <?import javafx.geometry.Insets?>\n <?import javafx.scene.control.Label?>\n <?import javafx.scene.control.Slider?>\n <?import javafx.scene.control.ComboBox?>\n-<?import javafx.collections.FXCollections?>\n <StackPane fx:controller=\"com.esri.samples.realistic_lighting_and_shadows.RealisticLightingAndShadowsController\"\n            xmlns=\"http://javafx.com/javafx\"\n            xmlns:fx=\"http://javafx.com/fxml\" stylesheets=\"/realistic_lighting_and_shadows/style.css\">\n     <!--SDK SceneView-->\n     <SceneView fx:id=\"sceneView\"/>\n     <StackPane.margin>\n-        <Insets topRightBottomLeft=\"10\" />\n+        <Insets topRightBottomLeft=\"10\"/>\n     </StackPane.margin>\n     <!--Slider box-->\n     <VBox styleClass=\"panel-region\">\n-        <Label fx:id=\"time\"/>\n+        <Label fx:id=\"timeLabel\"/>\n         <ComboBox fx:id=\"comboBox\" maxWidth=\"Infinity\">\n-            <items>\n-                <FXCollections fx:factory=\"observableArrayList\">\n-                    <LightingMode fx:value=\"NO_LIGHT\"/>\n-                    <LightingMode fx:value=\"LIGHT\"/>\n-                    <LightingMode fx:value=\"LIGHT_AND_SHADOWS\"/>\n-                </FXCollections>\n-            </items>\n         </ComboBox>\n-        <Slider fx:id=\"timeSlider\" value=\"12\" max=\"24\" majorTickUnit=\"4\" minorTickCount=\"60\" showTickMarks=\"true\"\n-                showTickLabels=\"true\" onMouseDragged=\"#changeTimeOfDay\">\n+        <Slider fx:id=\"timeSlider\" max=\"1440\" majorTickUnit=\"240\" minorTickCount=\"3600\" value=\"720\" showTickMarks=\"true\"\n+                showTickLabels=\"true\" onMouseDragged=\"#updateTimeOfDay\">\n         </Slider>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d60fc5f5216c4cff4d985fc80a401f9931e44f83"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY4NzQ5Nw==", "bodyText": "It also looks like you could move some of the styling of the slider into the CSS by adding the following to the .slider rule, and removing the respective params here:\n  -fx-show-tick-labels: true;\n  -fx-show-tick-marks: true;\n  -fx-major-tick-unit: 240;\n  -fx-major-tick-unit: 3600;\n\nBetter test it out though, since CSS can be a bit iffy with FXML. If it doesn't work easily happy to just leave this styling in the FXML", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r458687497", "createdAt": "2020-07-22T10:15:31Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/main.fxml", "diffHunk": "@@ -17,34 +17,25 @@\n <?import javafx.scene.layout.*?>\n \n <?import com.esri.arcgisruntime.mapping.view.SceneView?>\n-<?import com.esri.arcgisruntime.mapping.view.LightingMode?>\n <?import javafx.geometry.Insets?>\n <?import javafx.scene.control.Label?>\n <?import javafx.scene.control.Slider?>\n <?import javafx.scene.control.ComboBox?>\n-<?import javafx.collections.FXCollections?>\n <StackPane fx:controller=\"com.esri.samples.realistic_lighting_and_shadows.RealisticLightingAndShadowsController\"\n            xmlns=\"http://javafx.com/javafx\"\n            xmlns:fx=\"http://javafx.com/fxml\" stylesheets=\"/realistic_lighting_and_shadows/style.css\">\n     <!--SDK SceneView-->\n     <SceneView fx:id=\"sceneView\"/>\n     <StackPane.margin>\n-        <Insets topRightBottomLeft=\"10\" />\n+        <Insets topRightBottomLeft=\"10\"/>\n     </StackPane.margin>\n     <!--Slider box-->\n     <VBox styleClass=\"panel-region\">\n-        <Label fx:id=\"time\"/>\n+        <Label fx:id=\"timeLabel\"/>\n         <ComboBox fx:id=\"comboBox\" maxWidth=\"Infinity\">\n-            <items>\n-                <FXCollections fx:factory=\"observableArrayList\">\n-                    <LightingMode fx:value=\"NO_LIGHT\"/>\n-                    <LightingMode fx:value=\"LIGHT\"/>\n-                    <LightingMode fx:value=\"LIGHT_AND_SHADOWS\"/>\n-                </FXCollections>\n-            </items>\n         </ComboBox>\n-        <Slider fx:id=\"timeSlider\" value=\"12\" max=\"24\" majorTickUnit=\"4\" minorTickCount=\"60\" showTickMarks=\"true\"\n-                showTickLabels=\"true\" onMouseDragged=\"#changeTimeOfDay\">\n+        <Slider fx:id=\"timeSlider\" max=\"1440\" majorTickUnit=\"240\" minorTickCount=\"3600\" value=\"720\" showTickMarks=\"true\"\n+                showTickLabels=\"true\" onMouseDragged=\"#updateTimeOfDay\">\n         </Slider>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY4NTUyNw=="}, "originalCommit": {"oid": "d60fc5f5216c4cff4d985fc80a401f9931e44f83"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Njk2MzU3OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTo1MTo0OFrOG2HGjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTo1MTo0OFrOG2HGjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5MjY1Mg==", "bodyText": "in the \"How to use the sample\" we avoid directly referencing any API classes since the focus is on how a user interacts with a sample. I'd suggest the following:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Select one of the three lighting options to show that lighting effect on the SceneView. Select a time of day from the slider (based on a 24hr clock) to show the lighting for that time of day in the SceneView.\n          \n          \n            \n            Select one of the three available lighting options to display that lighting effect. Adjust the slider to show the lighting effect for a particular time of day. The 3D buildings will display shadows when \"Sun light with shadows\" is selected.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459392652", "createdAt": "2020-07-23T11:51:48Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/README.md", "diffHunk": "@@ -0,0 +1,32 @@\n+# Realistic lighting and shadows\n+\n+Show realistic lighting and shadows for the time of day.\n+\n+![Image of realistic lighting and shadows](RealisticLightingAndShadows.png)\n+\n+## Use case\n+\n+You can use realistic lighting to evaluate the shadow impact of buildings and utility infrastructure on the surrounding community. This could be useful for civil engineers and urban planners, or for events management assessing the impact of building shadows during an outdoor event.\n+\n+## How to use the sample\n+\n+Select one of the three lighting options to show that lighting effect on the SceneView. Select a time of day from the slider (based on a 24hr clock) to show the lighting for that time of day in the SceneView.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Njk3MDkzOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTo1NDoxOVrOG2HK-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMTo1NDoxOVrOG2HK-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5Mzc4Nw==", "bodyText": "during earlier README formats, we kept a sentence like this in to lead the reader into the steps. However a decision was reached last year to remove any introductory sentences and jump straight into the steps. So we can remove this sentence.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To add realistic lighting and shadows to the SceneView:", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459393787", "createdAt": "2020-07-23T11:54:19Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/README.md", "diffHunk": "@@ -0,0 +1,32 @@\n+# Realistic lighting and shadows\n+\n+Show realistic lighting and shadows for the time of day.\n+\n+![Image of realistic lighting and shadows](RealisticLightingAndShadows.png)\n+\n+## Use case\n+\n+You can use realistic lighting to evaluate the shadow impact of buildings and utility infrastructure on the surrounding community. This could be useful for civil engineers and urban planners, or for events management assessing the impact of building shadows during an outdoor event.\n+\n+## How to use the sample\n+\n+Select one of the three lighting options to show that lighting effect on the SceneView. Select a time of day from the slider (based on a 24hr clock) to show the lighting for that time of day in the SceneView.\n+\n+## How it works\n+To add realistic lighting and shadows to the SceneView:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzAwOTg1OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjowNjo0MVrOG2HiFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjowNjo0MVrOG2HiFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTM5OTcwMA==", "bodyText": "since we use enums to define the lighting mode, we should refer to them as such here, along with referring to lighting mode as a class (since it's the first time we're referring to lighting mode) and SceneView as scene view (since we've already described it as a class in step 1, and can therefore refer to it in plain english after that first usage) e.g.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            4. Set the lighting mode of the SceneView to **no light**, **light**, or **light and shadows** with `sceneView.setSunLighting(LightingMode)`.\n          \n          \n            \n            4. Set the `LightingMode` of the scene view to `NO_LIGHT`, `LIGHT`, or `LIGHT_AND_SHADOWS` with `sceneView.setSunLighting(LightingMode)`.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459399700", "createdAt": "2020-07-23T12:06:41Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/README.md", "diffHunk": "@@ -0,0 +1,32 @@\n+# Realistic lighting and shadows\n+\n+Show realistic lighting and shadows for the time of day.\n+\n+![Image of realistic lighting and shadows](RealisticLightingAndShadows.png)\n+\n+## Use case\n+\n+You can use realistic lighting to evaluate the shadow impact of buildings and utility infrastructure on the surrounding community. This could be useful for civil engineers and urban planners, or for events management assessing the impact of building shadows during an outdoor event.\n+\n+## How to use the sample\n+\n+Select one of the three lighting options to show that lighting effect on the SceneView. Select a time of day from the slider (based on a 24hr clock) to show the lighting for that time of day in the SceneView.\n+\n+## How it works\n+To add realistic lighting and shadows to the SceneView:\n+\n+1. Create an `ArcGISScene` and display it in a `SceneView`.\n+2. Create a `Calendar` to define the time of day.\n+3. Set the sun time to that calendar with `sceneView.setSunTime(calendar)`.\n+4. Set the lighting mode of the SceneView to **no light**, **light**, or **light and shadows** with `sceneView.setSunLighting(LightingMode)`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzAyMzg4OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoxMTowOFrOG2HqtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoxMTowOFrOG2HqtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwMTkwOA==", "bodyText": "this can be simplified with the following, since it's not only displaying the string when the combobox is opened. Also corrected the typo here!\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Converts the LightningMode values to strings to display in the open ComboBox.\n          \n          \n            \n             * Converts the LightingMode values to strings to display in the ComboBox.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459401908", "createdAt": "2020-07-23T12:11:08Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+/**\n+ * Converts the LightningMode values to strings to display in the open ComboBox.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzAyNzEwOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/LightingModeListCell.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoxMTo1N1rOG2Hsig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoxMTo1N1rOG2Hsig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwMjM3OA==", "bodyText": "Lightning mode would be really cool though!\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Converts the LightningMode values to strings to display in the open ComboBox.\n          \n          \n            \n             * Converts the LightingMode values to strings to display in the open ComboBox.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459402378", "createdAt": "2020-07-23T12:11:57Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/LightingModeListCell.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.scene.control.ListCell;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+/**\n+ * Converts the LightningMode values to strings to display in the open ComboBox.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzA1MDA2OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoxODo0OVrOG2H6VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoxODo0OVrOG2H6VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNTkwOA==", "bodyText": "this can be converted to a local variable on line 60, since it's only being referenced within the initialize method.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459405908", "createdAt": "2020-07-23T12:18:49Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzA1NTIyOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyMDoxNVrOG2H9Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyMDoxNVrOG2H9Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNjY3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // add a base surface for elevation data to the scene\n          \n          \n            \n                  // add a base surface with an elevation source to the scene", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459406679", "createdAt": "2020-07-23T12:20:15Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzA2NTY1OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyMzoxOFrOG2IDcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyMzoxOFrOG2IDcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwODI0MQ==", "bodyText": "we could include a little more info here to help a new user understand that it is the scene layer that is showing the 3D buildings\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // add a scene layer\n          \n          \n            \n                  // add 3D building shells with a scene layer", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459408241", "createdAt": "2020-07-23T12:23:18Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzA2OTI5OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyNDoyNVrOG2IFpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyNDoyNVrOG2IFpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwODgwNg==", "bodyText": "we can be a little more concise with the comment here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // add a camera and initial camera position\n          \n          \n            \n                  // add a camera and set the scene view's viewpoint to it", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459408806", "createdAt": "2020-07-23T12:24:25Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzA3NjczOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyNjozMVrOG2IKPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyNjozMVrOG2IKPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwOTk4MA==", "bodyText": "I got two IDE tips appearing for this constructor. minute can be replaced with \"0\" and the integer reflecting the month should be replaced with an enum e.g.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n          \n          \n            \n                  calendar = new GregorianCalendar(2018, Calendar.AUGUST, 10, 12, 0, 0);", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459409980", "createdAt": "2020-07-23T12:26:31Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a calendar with a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzA4MzIyOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyODoyNFrOG2IODw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyODoyNFrOG2IODw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQxMDk1OQ==", "bodyText": "you can reduce the number of lines here by using addAll:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  comboBox.getItems().add(LightingMode.NO_LIGHT);\n          \n          \n            \n                  comboBox.getItems().add(LightingMode.LIGHT);\n          \n          \n            \n                  comboBox.getItems().add(LightingMode.LIGHT_AND_SHADOWS);\n          \n          \n            \n                  comboBox.getItems().addAll(LightingMode.LIGHT, LightingMode.LIGHT_AND_SHADOWS, LightingMode.NO_LIGHT);", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459410959", "createdAt": "2020-07-23T12:28:24Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a calendar with a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n+      // set the sun time to the calendar\n+      sceneView.setSunTime(calendar);\n+\n+      // format the string to just return the date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String formattedDateAndTime = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the formatted date and time\n+      timeLabel.setText(formattedDateAndTime);\n+\n+      // set the slider to display tick labels as time strings\n+      timeSlider.setLabelFormatter(new SliderStringConverter());\n+\n+      // add the lighting modes to the combo box\n+      comboBox.getItems().add(LightingMode.NO_LIGHT);\n+      comboBox.getItems().add(LightingMode.LIGHT);\n+      comboBox.getItems().add(LightingMode.LIGHT_AND_SHADOWS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzA5MDU2OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjozMDoyOVrOG2ISig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjozMDoyOVrOG2ISig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQxMjEwNg==", "bodyText": "atmosphere effect is a separate part of our API (e.g. sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);), so we should be specific to the API that we are showcasing in this sample with the following:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // update the atmosphere effect based on the lighting mode chosen from the combo box\n          \n          \n            \n                  // update the sun lighting based on the lighting mode chosen from the combo box", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459412106", "createdAt": "2020-07-23T12:30:29Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a calendar with a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n+      // set the sun time to the calendar\n+      sceneView.setSunTime(calendar);\n+\n+      // format the string to just return the date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String formattedDateAndTime = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the formatted date and time\n+      timeLabel.setText(formattedDateAndTime);\n+\n+      // set the slider to display tick labels as time strings\n+      timeSlider.setLabelFormatter(new SliderStringConverter());\n+\n+      // add the lighting modes to the combo box\n+      comboBox.getItems().add(LightingMode.NO_LIGHT);\n+      comboBox.getItems().add(LightingMode.LIGHT);\n+      comboBox.getItems().add(LightingMode.LIGHT_AND_SHADOWS);\n+\n+      // show the name of the lighting modes in the combo box\n+      comboBox.setConverter(new ComboBoxStringConverter());\n+      comboBox.setCellFactory(comboBox -> new LightingModeListCell());\n+\n+      // update the atmosphere effect based on the lighting mode chosen from the combo box", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzEwMTQ3OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/main.fxml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjozMzozM1rOG2IZHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjozMzozM1rOG2IZHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQxMzc5MQ==", "bodyText": "we don't need \"SDK\" in here, just our API class name is clear enough.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <!--SDK SceneView-->\n          \n          \n            \n                <!--SceneView-->", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459413791", "createdAt": "2020-07-23T12:33:33Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/main.fxml", "diffHunk": "@@ -0,0 +1,39 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2020 Esri.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy of\n+  ~ the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+  ~ License for the specific language governing permissions and limitations under\n+  ~ the License.\n+  -->\n+<?import javafx.scene.layout.*?>\n+\n+<?import com.esri.arcgisruntime.mapping.view.SceneView?>\n+<?import javafx.geometry.Insets?>\n+<?import javafx.scene.control.Label?>\n+<?import javafx.scene.control.Slider?>\n+<?import javafx.scene.control.ComboBox?>\n+<StackPane fx:controller=\"com.esri.samples.realistic_lighting_and_shadows.RealisticLightingAndShadowsController\"\n+           xmlns=\"http://javafx.com/javafx\"\n+           xmlns:fx=\"http://javafx.com/fxml\" stylesheets=\"/realistic_lighting_and_shadows/style.css\">\n+    <!--SDK SceneView-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzU1ODc5OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/style.css", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDoyMDowNlrOG2MzIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDoyMDowNlrOG2MzIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ4NTk4Nw==", "bodyText": "our sample viewer seems to have some problems with this styling specifically. it's an issue we need to work out but for now, please can you move this styling back into main.fxml?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459485987", "createdAt": "2020-07-23T14:20:06Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/style.css", "diffHunk": "@@ -0,0 +1,28 @@\n+StackPane {\n+  -fx-alignment: top-right\n+}\n+\n+VBox {\n+    -fx-background-color: rgba(0, 0, 0, 0.3);\n+    -fx-padding: 10;\n+    -fx-max-width: 265;\n+    -fx-max-height: 110;\n+    -fx-spacing: 6;\n+    -fx-alignment: top-left\n+}\n+\n+.panel-region .label {\n+  -fx-text-fill: white;\n+}\n+\n+.slider {\n+  -fx-padding: 10;\n+  -fx-show-tick-labels: true;\n+  -fx-show-tick-marks: true;\n+  -fx-major-tick-unit: 240;\n+  -fx-minor-tick-count: 60;\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Nzc1NjY3OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTowMjo0MVrOG2OwAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTowMjo0MVrOG2OwAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUxNzk1NA==", "bodyText": "from a naming perspective, always best err on the side of super clear if there is space for it: let's change \"mode\" for \"lightingMode\"\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public String toString(LightingMode mode) {\n          \n          \n            \n              public String toString(LightingMode lightingMode) {", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459517954", "createdAt": "2020-07-23T15:02:41Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+/**\n+ * Converts the LightningMode values to strings to display in the open ComboBox.\n+ */\n+public class ComboBoxStringConverter extends StringConverter<LightingMode> {\n+\n+  @Override\n+  public String toString(LightingMode mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Nzc2MjE4OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/LightingModeListCell.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTowNDowNVrOG2OzzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTowNDowNVrOG2OzzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUxODkyNQ==", "bodyText": "as above, let's make the following change:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              protected void updateItem(LightingMode mode, boolean empty) {\n          \n          \n            \n              protected void updateItem(LightingMode lightingMode, boolean empty) {", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459518925", "createdAt": "2020-07-23T15:04:05Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/LightingModeListCell.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.scene.control.ListCell;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+/**\n+ * Converts the LightningMode values to strings to display in the open ComboBox.\n+ */\n+public class LightingModeListCell extends ListCell<LightingMode> {\n+\n+  @Override\n+  protected void updateItem(LightingMode mode, boolean empty) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzkwNzQ1OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/LightingModeListCell.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTozNjowM1rOG2QOTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTozNjowM1rOG2QOTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0MjA5NA==", "bodyText": "A couple of things here.\n\n\nI remembered a sample discussion about the naming in the drop down boxes. I checked with Hudson and he said a decision had been made to go with the enum names for the drop boxes, but in plain english. See suggestion below.\n\n\nWith this code the way it is, it's wired up so that when the application is launched, it's setting the combobox to say \"Sun light only\" without listening in to what LightingMode the combobox is actually set to. For example, if for whatever reason the LightingMode came back as null, then the text would display \"Sun light only\" which wouldn't be accurate.\n\n\nTo get over this, we can simply add a null check in both this class and ComboBoxStringConverter to be on the safe side, e.g.\n   super.updateItem(lightingMode, empty);\n   if (lightingMode != null) {\n     if (lightingMode == LightingMode.LIGHT) setText(\"Light\");\n     else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) setText(\"Light and shadows\");\n     else if (lightingMode == LightingMode.NO_LIGHT) setText(\"No light\");\n   }\n\nIn addition to this, in the controller, we can add in logic there to select the appropriate enum from the drop down (assuming we want the sample to launch on \"no light\"): see my suggestion there.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459542094", "createdAt": "2020-07-23T15:36:03Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/LightingModeListCell.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.scene.control.ListCell;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+/**\n+ * Converts the LightningMode values to strings to display in the open ComboBox.\n+ */\n+public class LightingModeListCell extends ListCell<LightingMode> {\n+\n+  @Override\n+  protected void updateItem(LightingMode mode, boolean empty) {\n+\n+    super.updateItem(mode, empty);\n+    if (mode == LightingMode.LIGHT) setText(\"Sun light only\");\n+    else if (mode == LightingMode.LIGHT_AND_SHADOWS) setText(\"Sun light with shadows\");\n+    else if (mode == LightingMode.NO_LIGHT) setText(\"No sun light effect\");\n+\n+    else setText(\"Sun light only\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzkyNjk0OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTo0MDo0M1rOG2Qajw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTo0MDo0M1rOG2Qajw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0NTIzMQ==", "bodyText": "to ensure the option chosen in the drop box is reflecting the lighting mode shown in the app, we can add the following here (assuming we want the sample to launch on no light) :\n      // launch the app with lighting mode set to NO_LIGHT\n      comboBox.getSelectionModel().select(0);", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459545231", "createdAt": "2020-07-23T15:40:43Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.GregorianCalendar;\n+import java.util.TimeZone;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.ComboBox;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.Slider;\n+\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.AtmosphereEffect;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+\n+public class RealisticLightingAndShadowsController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Label timeLabel;\n+  @FXML private Slider timeSlider;\n+  @FXML private ComboBox<LightingMode> comboBox;\n+  private Surface surface;\n+  private Calendar calendar;\n+  private SimpleDateFormat dateFormat;\n+\n+  public void initialize() {\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene();\n+      scene.setBasemap(Basemap.createTopographic());\n+\n+      // add the scene to the scene view\n+      sceneView.setArcGISScene(scene);\n+\n+      // add a base surface for elevation data to the scene\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\"http://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/DevA_BuildingShells/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      Camera camera = new Camera(45.54605153789073, -122.69033380511073, 941.0002111233771, 162.58544227544266, 60.0,0.0);\n+      sceneView.setViewpointCamera(camera);\n+\n+      // set atmosphere effect to realistic\n+      sceneView.setAtmosphereEffect(AtmosphereEffect.REALISTIC);\n+\n+      // set a calendar with a date and time\n+      calendar = new GregorianCalendar(2018, 7, 10, 12, 00, 0);\n+      calendar.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+\n+      // set the sun time to the calendar\n+      sceneView.setSunTime(calendar);\n+\n+      // format the string to just return the date and time (hours and minutes)\n+      dateFormat = new SimpleDateFormat(\"EEE MMM dd HH:mm\");\n+      dateFormat.setTimeZone(TimeZone.getTimeZone(\"PST\"));\n+      String formattedDateAndTime = dateFormat.format(calendar.getTime());\n+\n+      // set a label to display the formatted date and time\n+      timeLabel.setText(formattedDateAndTime);\n+\n+      // set the slider to display tick labels as time strings\n+      timeSlider.setLabelFormatter(new SliderStringConverter());\n+\n+      // add the lighting modes to the combo box\n+      comboBox.getItems().add(LightingMode.NO_LIGHT);\n+      comboBox.getItems().add(LightingMode.LIGHT);\n+      comboBox.getItems().add(LightingMode.LIGHT_AND_SHADOWS);\n+\n+      // show the name of the lighting modes in the combo box\n+      comboBox.setConverter(new ComboBoxStringConverter());\n+      comboBox.setCellFactory(comboBox -> new LightingModeListCell());\n+\n+      // update the atmosphere effect based on the lighting mode chosen from the combo box\n+      comboBox.getSelectionModel().selectedItemProperty().addListener(e -> {\n+        sceneView.setSunLighting(comboBox.getSelectionModel().getSelectedItem());\n+      });\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzkzMjg3OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTo0MjowMlrOG2QeOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTo0MjowMlrOG2QeOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0NjE2OQ==", "bodyText": "similar to my comments in LightingModeListCell.java: we should ensure we put in a null check here, and update the strings to the enum plain-english names.\n  @Override\n  public String toString(LightingMode lightingMode) {\n    if (lightingMode != null) {\n      if (lightingMode == LightingMode.LIGHT) return \"Light\";\n      else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) return \"Light and shadows\";\n      else if (lightingMode == LightingMode.NO_LIGHT) return \"No light\";\n    }\n    return \"\";\n  }", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459546169", "createdAt": "2020-07-23T15:42:02Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.esri.samples.realistic_lighting_and_shadows;\n+\n+import javafx.util.StringConverter;\n+\n+import com.esri.arcgisruntime.mapping.view.LightingMode;\n+/**\n+ * Converts the LightningMode values to strings to display in the open ComboBox.\n+ */\n+public class ComboBoxStringConverter extends StringConverter<LightingMode> {\n+\n+  @Override\n+  public String toString(LightingMode mode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Nzk1ODUyOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTo0ODowN1rOG2Queg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMDoyNzoxMlrOG2qhfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU1MDMzMA==", "bodyText": "Just a tidy up suggestion.\nFor both this class and the LightingModeListCell class: since these have a small amount of content, these can live at the bottom of the RealisticLightingAndShadowsController class, as we do in some of our other samples (see e.g. \n  \n    \n      arcgis-runtime-samples-java/map/create-and-save-map/src/main/java/com/esri/samples/create_and_save_map/CreateAndSaveMapController.java\n    \n    \n         Line 176\n      in\n      e75be37\n    \n    \n    \n    \n\n        \n          \n           private class BasemapCell extends ListCell<Basemap> { \n        \n    \n  \n\n).\nThis ensures our samples remain clean (as you've done a great job doing separating out these converters), but also that there isn't a large amount of classes sitting within the sample package. It also shows our MVC pattern more clearly with the converter classes hidden within the controller class.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459550330", "createdAt": "2020-07-23T15:48:07Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg5MzgwNA==", "bodyText": "@Rachael-E if this is the way forward, then there should be an issue to change up the samples where these are separated to their own files. Since I've started, all the samples using ListCell have had these in their individual files.\nI personally think that's the correct way to do it, since essencially ListCell is UI code unrelated to the controller, so putting it in it's own class reduces clutter in the controller and puts the Runtime code in the focus of what's going on there. After all, if we could do this easily, we'd probably do this in the FXML file as well.\nEither way, there should at least be a clear guidance in the contribution guidelines, I think", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459893804", "createdAt": "2020-07-24T07:30:31Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU1MDMzMA=="}, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk3Mjk5MA==", "bodyText": "thanks @JonLavi, you're right, we currently don't have a consistent way this is handled in the samples and it would be good to reach a design pattern agreement. Either approach works: it's just a matter of deciding what is the best practice pattern! We should get feedback on that during a Java catch up meeting. I'm of the opinion in the instance where it's a standard converter it is fine to \"hide\" at the bottom of the controller class (in super basic cases may not even need to be in Class format at all). This then focusses the user on our Controller class and our API. If however there was a more \"involved\" conversion (such as that of GroupLayer sample) then it merits its own abstracted class.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459972990", "createdAt": "2020-07-24T10:27:12Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/ComboBoxStringConverter.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU1MDMzMA=="}, "originalCommit": {"oid": "352228b77f30d2e7a6a01e4e50e3088087b2cebd"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDg4MzcyOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/README.metadata.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMToyODo1MVrOG2r_rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMTo1NDowM1rOG2sm0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk5NzEwMA==", "bodyText": "it looks like the script has made an array with an empty string here: @JonLavi this was one of the formats that breaks the website. Is there something in the script that needs to be updated to catch this? The correct format to use in the instance of there not being a redirect from is just an empty string:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"redirect_from\": [\n          \n          \n            \n                    \"\"\n          \n          \n            \n                ],\n          \n          \n            \n                \"redirect_from\": \"\",", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r459997100", "createdAt": "2020-07-24T11:28:51Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/README.metadata.json", "diffHunk": "@@ -1,35 +1,38 @@\n {\n-  \"category\": \"Scene\",\n-  \"description\": \"Show realistic lighting and shadows for the time of day.\",\n-  \"ignore\": false,\n-  \"images\": [\n-    \"RealisticLightingAndShadows.png\"\n-  ],\n-  \"keywords\": [\n-    \"3D\",\n-    \"lighting\",\n-    \"realism\",\n-    \"realistic\",\n-    \"rendering\",\n-    \"shadows\",\n-    \"sun\",\n-    \"time\",\n-    \"ArcGISScene\",\n-    \"LightingMode\",\n-    \"SceneView.setSunLighting\",\n-    \"SceneView.setSunTime\"\n-  ],\n-  \"redirect_from\": \"\",\n-  \"relevant_apis\": [\n-    \"ArcGISScene\",\n-    \"LightingMode\",\n-    \"SceneView.setSunLighting\",\n-    \"SceneView.setSunTime\"\n-  ],\n-  \"snippets\": [\n-    \"src/main/java/com.esri.samples.realistic_lighting_and_shadows/RealisticLightAndShadowsSample.java\",\n-    \"src/main/java/com.esri.samples.realistic_lighting_and_shadows/RealisticLightAndShadowsController.java\",\n-    \"src/main/resources/realistic_light_and_shadows/main.fxml\"\n-  ],\n-  \"title\": \"Realistic lighting and shadows\"\n+    \"category\": \"Scene\",\n+    \"description\": \"Show realistic lighting and shadows for the time of day.\",\n+    \"ignore\": false,\n+    \"images\": [\n+        \"RealisticLightingAndShadows.png\"\n+    ],\n+    \"keywords\": [\n+        \"3D\",\n+        \"lighting\",\n+        \"realism\",\n+        \"realistic\",\n+        \"rendering\",\n+        \"shadows\",\n+        \"sun\",\n+        \"time\",\n+        \"ArcGISScene\",\n+        \"LightingMode\",\n+        \"SceneView.setSunLighting\",\n+        \"SceneView.setSunTime\"\n+    ],\n+    \"redirect_from\": [\n+        \"\"\n+    ],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eca7a75ac2b8412202b6aa833a1f80479419a61d"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwNzEyMQ==", "bodyText": "Yep the \"redirect from\": [\"\"] shouldn't be happening and I am not entirely sure why it did.\nPossibly because the previous file had \"\" for this value, and the script decided to shove it in an array.\nI'll investigate when I get a chance.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r460007121", "createdAt": "2020-07-24T11:54:03Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/README.metadata.json", "diffHunk": "@@ -1,35 +1,38 @@\n {\n-  \"category\": \"Scene\",\n-  \"description\": \"Show realistic lighting and shadows for the time of day.\",\n-  \"ignore\": false,\n-  \"images\": [\n-    \"RealisticLightingAndShadows.png\"\n-  ],\n-  \"keywords\": [\n-    \"3D\",\n-    \"lighting\",\n-    \"realism\",\n-    \"realistic\",\n-    \"rendering\",\n-    \"shadows\",\n-    \"sun\",\n-    \"time\",\n-    \"ArcGISScene\",\n-    \"LightingMode\",\n-    \"SceneView.setSunLighting\",\n-    \"SceneView.setSunTime\"\n-  ],\n-  \"redirect_from\": \"\",\n-  \"relevant_apis\": [\n-    \"ArcGISScene\",\n-    \"LightingMode\",\n-    \"SceneView.setSunLighting\",\n-    \"SceneView.setSunTime\"\n-  ],\n-  \"snippets\": [\n-    \"src/main/java/com.esri.samples.realistic_lighting_and_shadows/RealisticLightAndShadowsSample.java\",\n-    \"src/main/java/com.esri.samples.realistic_lighting_and_shadows/RealisticLightAndShadowsController.java\",\n-    \"src/main/resources/realistic_light_and_shadows/main.fxml\"\n-  ],\n-  \"title\": \"Realistic lighting and shadows\"\n+    \"category\": \"Scene\",\n+    \"description\": \"Show realistic lighting and shadows for the time of day.\",\n+    \"ignore\": false,\n+    \"images\": [\n+        \"RealisticLightingAndShadows.png\"\n+    ],\n+    \"keywords\": [\n+        \"3D\",\n+        \"lighting\",\n+        \"realism\",\n+        \"realistic\",\n+        \"rendering\",\n+        \"shadows\",\n+        \"sun\",\n+        \"time\",\n+        \"ArcGISScene\",\n+        \"LightingMode\",\n+        \"SceneView.setSunLighting\",\n+        \"SceneView.setSunTime\"\n+    ],\n+    \"redirect_from\": [\n+        \"\"\n+    ],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk5NzEwMA=="}, "originalCommit": {"oid": "eca7a75ac2b8412202b6aa833a1f80479419a61d"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDkxMzE3OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMTo0MDoxNFrOG2sREw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMTo0MDoxNFrOG2sREw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwMTU1NQ==", "bodyText": "mark as private", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r460001555", "createdAt": "2020-07-24T11:40:14Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -146,6 +148,66 @@ public void updateTimeOfDay() {\n     );\n   }\n \n+  /**\n+   * Converts the LightingMode values to strings to display in the open ComboBox.\n+   */\n+  public class LightingModeListCell extends ListCell<LightingMode> {\n+\n+    @Override\n+    protected void updateItem(LightingMode lightingMode, boolean empty) {\n+\n+      super.updateItem(lightingMode, empty);\n+      if (lightingMode != null) {\n+        if (lightingMode == LightingMode.LIGHT) setText(\"Light\");\n+        else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) setText(\"Light and shadows\");\n+        else if (lightingMode == LightingMode.NO_LIGHT) setText(\"No light\");\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Converts the LightingMode values to strings to display in the ComboBox.\n+   */\n+  public class ComboBoxStringConverter extends StringConverter<LightingMode> {\n+\n+    @Override\n+    public String toString(LightingMode lightingMode) {\n+      if (lightingMode != null) {\n+        if (lightingMode == LightingMode.LIGHT) return \"Light\";\n+        else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) return \"Light and shadows\";\n+        else if (lightingMode == LightingMode.NO_LIGHT) return \"No light\";\n+      }\n+      return \"\";\n+    }\n+\n+    @Override\n+    public LightingMode fromString(String string) {\n+      return null;\n+    }\n+  }\n+\n+  /**\n+   * Converts time values to strings to display on the slider.\n+   */\n+  public class SliderStringConverter extends StringConverter<Double> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eca7a75ac2b8412202b6aa833a1f80479419a61d"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDkxMzQ0OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMTo0MDoxN1rOG2sROA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMTo0MDoxN1rOG2sROA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwMTU5Mg==", "bodyText": "these should be marked as private classes so that they are only accessible within the Controller.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r460001592", "createdAt": "2020-07-24T11:40:17Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -146,6 +148,66 @@ public void updateTimeOfDay() {\n     );\n   }\n \n+  /**\n+   * Converts the LightingMode values to strings to display in the open ComboBox.\n+   */\n+  public class LightingModeListCell extends ListCell<LightingMode> {\n+\n+    @Override\n+    protected void updateItem(LightingMode lightingMode, boolean empty) {\n+\n+      super.updateItem(lightingMode, empty);\n+      if (lightingMode != null) {\n+        if (lightingMode == LightingMode.LIGHT) setText(\"Light\");\n+        else if (lightingMode == LightingMode.LIGHT_AND_SHADOWS) setText(\"Light and shadows\");\n+        else if (lightingMode == LightingMode.NO_LIGHT) setText(\"No light\");\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Converts the LightingMode values to strings to display in the ComboBox.\n+   */\n+  public class ComboBoxStringConverter extends StringConverter<LightingMode> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eca7a75ac2b8412202b6aa833a1f80479419a61d"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDkxNDQ3OnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMTo0MDo0MlrOG2sR0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMTo0MDo0MlrOG2sR0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwMTc0NA==", "bodyText": "mark as private", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r460001744", "createdAt": "2020-07-24T11:40:42Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/java/com/esri/samples/realistic_lighting_and_shadows/RealisticLightingAndShadowsController.java", "diffHunk": "@@ -146,6 +148,66 @@ public void updateTimeOfDay() {\n     );\n   }\n \n+  /**\n+   * Converts the LightingMode values to strings to display in the open ComboBox.\n+   */\n+  public class LightingModeListCell extends ListCell<LightingMode> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eca7a75ac2b8412202b6aa833a1f80479419a61d"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDkyMDkxOnYy", "diffSide": "RIGHT", "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/style.css", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMTo0MzoxN1rOG2sVtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMTo1NjoyMlrOG2sqmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwMjc0MQ==", "bodyText": "we're still working out the sample viewer details: I'm not sure if leaving the padding in here will work ok in there. To be on the safe side, let's also move that into FXML (@JonLavi unless you have experience of the padding here having worked before?). Sorry for the uncertainty around this for now: still a work in progress for us to figure out!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r460002741", "createdAt": "2020-07-24T11:43:17Z", "author": {"login": "Rachael-E"}, "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/style.css", "diffHunk": "@@ -17,10 +17,6 @@ VBox {\n \n .slider {\n   -fx-padding: 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eca7a75ac2b8412202b6aa833a1f80479419a61d"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwODA5MA==", "bodyText": "I haven't noticed this in the SV before, but to be fair it's all new territory, as you said. The easy way would be to leave it in the FXML, yes", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/528#discussion_r460008090", "createdAt": "2020-07-24T11:56:22Z", "author": {"login": "JonLavi"}, "path": "scene/realistic-lighting-and-shadows/src/main/resources/realistic_lighting_and_shadows/style.css", "diffHunk": "@@ -17,10 +17,6 @@ VBox {\n \n .slider {\n   -fx-padding: 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAwMjc0MQ=="}, "originalCommit": {"oid": "eca7a75ac2b8412202b6aa833a1f80479419a61d"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 54, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}