{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MTU0OTQ0", "number": 456, "title": "Update readmes to match common design (Geometry category) 2/x", "bodyText": "", "createdAt": "2020-03-16T11:03:11Z", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/456", "merged": true, "mergeCommit": {"oid": "cf02e6a8a7c9994c1c4b029fef5d2e6e9d61eac9"}, "closed": true, "closedAt": "2020-03-27T09:25:25Z", "author": {"login": "JonLavi"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOLoKpgH2gAyMzg5MTU0OTQ0OmRhMjg5NTA5MjdlODE1M2VhNmMzOTFhYzIyZWJiZDBlZTcxYTI0MDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQ05xPAH2gAyMzg5MTU0OTQ0OmIzMDU3ZmVmNTczNzg3MGI0NDI0YmQwMTkzZWY5MTJhYmYyZTJjNzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "da28950927e8153ea6c391ac22ebbd0ee71a2404", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/da28950927e8153ea6c391ac22ebbd0ee71a2404", "committedDate": "2020-03-16T10:33:51Z", "message": "update readmes to match common design"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "513f39e29745705501cea81725cf2e54b8b6d08d", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/513f39e29745705501cea81725cf2e54b8b6d08d", "committedDate": "2020-03-18T15:48:22Z", "message": "Update 'Relevant API'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b65799da39693dfb5618e7b3f4d378f4768a2eb", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/9b65799da39693dfb5618e7b3f4d378f4768a2eb", "committedDate": "2020-03-18T15:49:14Z", "message": "Update README.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MzA3MTMx", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/456#pullrequestreview-379307131", "createdAt": "2020-03-23T10:37:32Z", "commit": {"oid": "9b65799da39693dfb5618e7b3f4d378f4768a2eb"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDozNzozMlrOF5_ijA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDo1MToyMlrOF6AB4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM1NDE4OA==", "bodyText": "We should keep in the part about the \"Show result\" part of the UI", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/456#discussion_r396354188", "createdAt": "2020-03-23T10:37:32Z", "author": {"login": "Rachael-E"}, "path": "geometry/densify-and-generalize/README.md", "diffHunk": "@@ -1,35 +1,35 @@\n-# Densify and Generalize\n+# Densify and generalize \n \n-Modify a polyline while preserving its general shape.\n+A multipart geometry can be densified by adding interpolated points at regular intervals. Generalizing multipart geometry simplifies it while preserving its general shape. Densifying a multipart geometry adds more vertices at regular intervals.\n \n-In this example, points representing a ships location are shown at irregular intervals. One can densify the polyline connecting these lines to interpolate points along the line at regular intervals. Generalizing the polyline can also simplify the geometry while preserving its general shape.\n+![Image of densify and generalize](DensifyAndGeneralize.gif)\n \n-![](DensifyAndGeneralize.gif)\n+## Use case\n \n-## How to use the sample\n+The sample shows a polyline representing a ship's location at irregular intervals. The density of vertices along the ship's route is appropriate to represent the path of the ship at the sample map view's initial scale. However, that level of detail may be too great if you wanted to show a polyline of the ship's movement down the whole of the Willamette river. Then, you might consider generalizing the polyline to still faithfully represent the ship's passage on the river without having an overly complicated geometry.\n \n-Use the sliders to control the parameters of the densify and generalize methods. You can deselect the checkboxes for either method to remove its effect from the result polyline. You can also hide the result to only see the original by deselecting the \"Show result\" checkbox.\n+Densifying a multipart geometry can be used to more accurately represent curved lines or to add more regularity to the vertices making up a multipart geometry.\n \n-## How it works\n+## How to use the sample \n+\n+Use the sliders to control the parameters of the densify and generalize methods. You can deselect the checkboxes for either method to remove its effect from the result polyline.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b65799da39693dfb5618e7b3f4d378f4768a2eb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM2MjIxMA==", "bodyText": "I made a comment here for Android too that we don't need to be so specific about where the point is: we removed the reference to NYC.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/456#discussion_r396362210", "createdAt": "2020-03-23T10:51:22Z", "author": {"login": "Rachael-E"}, "path": "geometry/geodesic-operations/README.md", "diffHunk": "@@ -1,35 +1,33 @@\n-# Geodesic Operations\n+# Geodesic operations\n \n-Calculate the geodesic path and distance between two points.\n+Calculate a geodesic path between two points and measure its distance.\n \n-![](GeodesicOperations.png)\n+![Image of geodesic operations](GeodesicOperations.png)\n+\n+## Use case\n+\n+A geodesic distance provides an accurate, real-world distance between two points. Visualizing flight paths between cities is a common example of a geodesic operation since the flight path between two airports takes into account the curvature of the earth, rather than following the planar path between those points, which appears as a straight line on a projected map.\n \n ## How to use the sample\n \n-Click on the map to select a path destination. The geodesic path between the two points will update.\n+Click anywhere on the map. A line graphic will display the geodesic line between the two points. In addition, text that indicates the geodesic distance between the two points will be updated. Click elsewhere and a new line will be created.\n \n ## How it works\n \n-To create a geodesic path between two points:\n-\n-1. Create a `Polyline` using two points.\n-2. Pass this polyline to: `GeometryEngine.densifyGeodetic(polyline, segmentLength, unitOfMeasurement, GeodeticCurveType.GEODESIC)`. This will create a new polyline with segments of length `segmentLength` and `LinearUnit` set to `unitOfMeasurement`. The curve will be geodesic.\n-3. You can set this geometry to a `Graphic` to display the curve in a `GraphicsOverlay`.\n-4. To get the distance, use `GeometryEngine.lengthGeodetic(pathGeometry, unitOfMeasurement, GeodeticCurveType.GEODESIC)`\n+1. Create a `Point` in New York City and display it as a `Graphic`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b65799da39693dfb5618e7b3f4d378f4768a2eb"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3057fef5737870b4424bd0193ef912abf2e2c76", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/b3057fef5737870b4424bd0193ef912abf2e2c76", "committedDate": "2020-03-24T15:47:02Z", "message": "apply review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3551, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}