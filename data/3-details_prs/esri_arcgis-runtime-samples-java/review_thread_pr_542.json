{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMjU2NzI4", "number": 542, "reviewThreads": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNzozOTo1NVrOEU4g5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDoxMzoxNVrOEdxCWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzMyOTAxOnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNzozOTo1NVrOG7UyHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNzozOTo1NVrOG7UyHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg1OTY3OA==", "bodyText": "I'm a bit puzzled why we're using view status in this description, but the sample is called view state. Just pointing it out, no need to change anything since this looks like what's in the design.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r464859678", "createdAt": "2020-08-04T07:39:55Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/README.md", "diffHunk": "@@ -6,33 +6,33 @@ Determine if a layer is currently being viewed.\n \n ## Use case\n \n-The view state includes information on the loading state of layers and whether layers are visible at a given scale. For example, you might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. You then might show a loading spinner next to its name when the view state is LOADING, gray out the name when NOT_VISIBLE or OUT_OF_SCALE, show the name normally when ACTIVE, or with an error icon when the state is ERROR.\n+The view status includes information on the loading state of layers and whether layers are visible at a given scale. You might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. For example, you could show a loading spinner next to its name when the view status is `LOADING`, grey out the name when `NOT_VISIBLE` or `OUT_OF_SCALE`, show the name normally when `ACTIVE`, or with a warning or error icon when the status is `WARNING` or `ERROR`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzM0MDQzOnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/README.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNzo0MzowOFrOG7U45w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOTo1MDo0NlrOHAEYnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg2MTQxNQ==", "bodyText": "I've suggested this previously in the common design:\nPerhaps we should use the term disconnect from the network instead of airplane mode?\nAfter all, airplane mode turns off bluetooth, gps, etc. as well. We don't have to imply that gps or bluetooth have any effect on this.\nEither way I think there's a small mixup of words here (@TADraeseke this typo is live in android - sorry, can't seem to tag Hudson):\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If your device supports airplane mode, you can turn this on and pan around the map to see layers display the `WARNING` status when they cannot online fetch data. Turn airplane mode back off to see the warning disappear.\n          \n          \n            \n            If your device supports airplane mode, you can turn this on and pan around the map to see layers display the `WARNING` status when they cannot fetch online data. Turn airplane mode back off to see the warning disappear.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r464861415", "createdAt": "2020-08-04T07:43:08Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/README.md", "diffHunk": "@@ -6,33 +6,33 @@ Determine if a layer is currently being viewed.\n \n ## Use case\n \n-The view state includes information on the loading state of layers and whether layers are visible at a given scale. For example, you might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. You then might show a loading spinner next to its name when the view state is LOADING, gray out the name when NOT_VISIBLE or OUT_OF_SCALE, show the name normally when ACTIVE, or with an error icon when the state is ERROR.\n+The view status includes information on the loading state of layers and whether layers are visible at a given scale. You might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. For example, you could show a loading spinner next to its name when the view status is `LOADING`, grey out the name when `NOT_VISIBLE` or `OUT_OF_SCALE`, show the name normally when `ACTIVE`, or with a warning or error icon when the status is `WARNING` or `ERROR`.\n \n ## How to use the sample\n \n-Pan and zoom around in the map. Each layer's view status is displayed. Notice that some layers configured with a min and max scale change to `OUT_OF_SCALE` at certain scales.\n+Click the *Load Layer* button to create a new layer and add it to the map. As you pan and zoom around the map, note how the `LayerViewStatus` flags change; for example, `OUT_OF_SCALE` becomes true when the map is scaled outside of the layer's min and max scale range. Click the *Hide Layer* button to hide the layer and observe the view state change to `NOT_VISIBLE`.\n+\n+If your device supports airplane mode, you can turn this on and pan around the map to see layers display the `WARNING` status when they cannot online fetch data. Turn airplane mode back off to see the warning disappear.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM5MTk1OA==", "bodyText": "@jenmerritt unless regression testing has destroyed my ability to comprehend text, I think there's still the small issue of the mixed up words here \ud83d\ude04 Just a reminder", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r469391958", "createdAt": "2020-08-12T16:35:34Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/README.md", "diffHunk": "@@ -6,33 +6,33 @@ Determine if a layer is currently being viewed.\n \n ## Use case\n \n-The view state includes information on the loading state of layers and whether layers are visible at a given scale. For example, you might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. You then might show a loading spinner next to its name when the view state is LOADING, gray out the name when NOT_VISIBLE or OUT_OF_SCALE, show the name normally when ACTIVE, or with an error icon when the state is ERROR.\n+The view status includes information on the loading state of layers and whether layers are visible at a given scale. You might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. For example, you could show a loading spinner next to its name when the view status is `LOADING`, grey out the name when `NOT_VISIBLE` or `OUT_OF_SCALE`, show the name normally when `ACTIVE`, or with a warning or error icon when the status is `WARNING` or `ERROR`.\n \n ## How to use the sample\n \n-Pan and zoom around in the map. Each layer's view status is displayed. Notice that some layers configured with a min and max scale change to `OUT_OF_SCALE` at certain scales.\n+Click the *Load Layer* button to create a new layer and add it to the map. As you pan and zoom around the map, note how the `LayerViewStatus` flags change; for example, `OUT_OF_SCALE` becomes true when the map is scaled outside of the layer's min and max scale range. Click the *Hide Layer* button to hide the layer and observe the view state change to `NOT_VISIBLE`.\n+\n+If your device supports airplane mode, you can turn this on and pan around the map to see layers display the `WARNING` status when they cannot online fetch data. Turn airplane mode back off to see the warning disappear.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg2MTQxNQ=="}, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgzMzg4Nw==", "bodyText": "Thanks, fixed the word order. I've also amended to disconnect from network, that's really what I was doing when testing, and I'll mention at review.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r469833887", "createdAt": "2020-08-13T09:50:46Z", "author": {"login": "jenmerritt"}, "path": "map_view/display-layer-view-state/README.md", "diffHunk": "@@ -6,33 +6,33 @@ Determine if a layer is currently being viewed.\n \n ## Use case\n \n-The view state includes information on the loading state of layers and whether layers are visible at a given scale. For example, you might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. You then might show a loading spinner next to its name when the view state is LOADING, gray out the name when NOT_VISIBLE or OUT_OF_SCALE, show the name normally when ACTIVE, or with an error icon when the state is ERROR.\n+The view status includes information on the loading state of layers and whether layers are visible at a given scale. You might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. For example, you could show a loading spinner next to its name when the view status is `LOADING`, grey out the name when `NOT_VISIBLE` or `OUT_OF_SCALE`, show the name normally when `ACTIVE`, or with a warning or error icon when the status is `WARNING` or `ERROR`.\n \n ## How to use the sample\n \n-Pan and zoom around in the map. Each layer's view status is displayed. Notice that some layers configured with a min and max scale change to `OUT_OF_SCALE` at certain scales.\n+Click the *Load Layer* button to create a new layer and add it to the map. As you pan and zoom around the map, note how the `LayerViewStatus` flags change; for example, `OUT_OF_SCALE` becomes true when the map is scaled outside of the layer's min and max scale range. Click the *Hide Layer* button to hide the layer and observe the view state change to `NOT_VISIBLE`.\n+\n+If your device supports airplane mode, you can turn this on and pan around the map to see layers display the `WARNING` status when they cannot online fetch data. Turn airplane mode back off to see the warning disappear.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg2MTQxNQ=="}, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzQyMzg4OnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/resources/display_layer_view_state/style.css", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowNjo1N1rOG7VsXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowNjo1N1rOG7VsXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3NDU5MA==", "bodyText": "Same here, you can make a rule for any button thats inside the style class 'panel-region'. Then there's no need to do hideLayerButton.getStyleClass().add(\"panel-button\"); etc in the main class.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            .panel-button {\n          \n          \n            \n              -fx-max-width: 130;\n          \n          \n            \n            .panel-region .button {\n          \n          \n            \n              -fx-max-width: 130;", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r464874590", "createdAt": "2020-08-04T08:06:57Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/resources/display_layer_view_state/style.css", "diffHunk": "@@ -1,27 +1,18 @@\n-.panel-region .label {\n-  -fx-text-fill: white;\n-}\n-\n-.label {\n-  -fx-text-fill: black;\n-}\n-\n-.slider .axis {\n-    -fx-tick-label-fill: white;\n+.panel-region {\n+  -fx-padding: 10;\n+  -fx-background-color: rgba(0, 0, 0, 0.5);\n+  -fx-max-width: 400;\n+  -fx-max-height: 120;\n+  -fx-spacing: 6;\n+  -fx-alignment: center;\n }\n \n-.range-slider .axis {\n-    -fx-tick-label-fill: white;\n-}\n-\n-.panel-region .check-box {\n-   -fx-text-fill: white;\n-}\n-\n-.panel-region .radio-button {\n-   -fx-text-fill: white;\n+.panel-label {\n+  -fx-text-fill: white;\n+  -fx-font-size: 16px;\n+  -fx-text-alignment: center;\n }\n \n-.color-picker .color-picker-label {\n-   -fx-text-fill: black;\n+.panel-button {\n+  -fx-max-width: 130;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzQzMjQyOnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/resources/display_layer_view_state/style.css", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowOTozMFrOG7Vxqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODowOTozMFrOG7Vxqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg3NTk0Ng==", "bodyText": "It looks like this might be older code, but since we've got this file open there's a bit of stuff we might be able to improve here. There's no need to specify a unique CSS rule for a label that sits within the panel-region which you've defined above.\nThe old rule in this file will apply to any Label sitting within the node that get's the style class panel-region.\nYou can then get rid of layerViewStatusLabel.getStyleClass().add(\"panel-label\"); in the main code, since there's no need to define a specific class for labels inside the panel anymore.\nSo you could do:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            .panel-label {\n          \n          \n            \n              -fx-text-fill: white;\n          \n          \n            \n              -fx-font-size: 16px;\n          \n          \n            \n              -fx-text-alignment: center;\n          \n          \n            \n            .panel-region .label {\n          \n          \n            \n              -fx-text-fill: white;\n          \n          \n            \n              -fx-font-size: 16px;\n          \n          \n            \n              -fx-text-alignment: center;", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r464875946", "createdAt": "2020-08-04T08:09:30Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/resources/display_layer_view_state/style.css", "diffHunk": "@@ -1,27 +1,18 @@\n-.panel-region .label {\n-  -fx-text-fill: white;\n-}\n-\n-.label {\n-  -fx-text-fill: black;\n-}\n-\n-.slider .axis {\n-    -fx-tick-label-fill: white;\n+.panel-region {\n+  -fx-padding: 10;\n+  -fx-background-color: rgba(0, 0, 0, 0.5);\n+  -fx-max-width: 400;\n+  -fx-max-height: 120;\n+  -fx-spacing: 6;\n+  -fx-alignment: center;\n }\n \n-.range-slider .axis {\n-    -fx-tick-label-fill: white;\n-}\n-\n-.panel-region .check-box {\n-   -fx-text-fill: white;\n-}\n-\n-.panel-region .radio-button {\n-   -fx-text-fill: white;\n+.panel-label {\n+  -fx-text-fill: white;\n+  -fx-font-size: 16px;\n+  -fx-text-alignment: center;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzQ2MTI5OnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoxNzo1NlrOG7WDVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoxNzo1NlrOG7WDVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4MDQ3MQ==", "bodyText": "Maybe instead of having two buttons and alternating which one is visible, we could have a single button and change it's text? When the button is pressed, you can set the visibility status to the opposite of what it currently is. Something like this:\n// set the layer's visibility state to the opposite of the current state\nfeatureLayer.setVisible(!featureLayer.isVisible());\n\nThe advantage would be that we could get rid of the smaller helper methods", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r464880471", "createdAt": "2020-08-04T08:17:56Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -72,82 +69,148 @@ public void start(Stage stage) {\n       stage.setScene(scene);\n       stage.show();\n \n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n+\n       // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n+      controlsVBox = new VBox();\n       controlsVBox.getStyleClass().add(\"panel-region\");\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // create a label to display the view status and add to the control panel\n+      layerViewStatusLabel = new Label(\"Click button to load feature layer\\n \");\n+      layerViewStatusLabel.getStyleClass().add(\"panel-label\");\n+      controlsVBox.getChildren().add(layerViewStatusLabel);\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a listener that fires every time a layer's view status changes\n+      mapView.addLayerViewStateChangedListener(statusChangeEvent -> {\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n-\n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+        // get the layer whose state has changed\n+        Layer layer = statusChangeEvent.getLayer();\n+        // only update the status if the layer is the feature layer being tracked\n+        if (layer != featureLayer) {\n+          return;\n+        }\n+        // get the layer's view status and display the status\n+        EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n+        displayViewStateText(layerViewStatus);\n+\n+        // if there is an error or warning, format and display the message as an alert\n+        ArcGISRuntimeException error = statusChangeEvent.getError();\n+        if (error != null) {\n+          Throwable cause = error.getCause();\n+          String message = (cause != null) ? cause.toString() : error.toString();\n+          Alert alert = new Alert(Alert.AlertType.ERROR, message);\n+          alert.show();\n+        }\n+      });\n \n-      // this layer will be OUT_OF_SCALE outside of its set min/max scales\n-      final ArcGISMapImageLayer imageLayer = new ArcGISMapImageLayer(SERVICE_CENSUS);\n-      imageLayer.setMinScale(MIN_SCALE);\n-      imageLayer.setMaxScale(MIN_SCALE / 10);\n+      // create buttons to toggle the visibility of the feature layer\n+      loadLayerButton = new Button(\"Load Layer\");\n+      loadLayerButton.getStyleClass().add(\"panel-button\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzQ4MjQ5OnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyMzo0NVrOG7WQ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyMzo0NVrOG7WQ1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4MzkyNA==", "bodyText": "Although utility methods are generally considered good practice, for a sample this is probably too small of a functionality to have in a separate sample. A good rule of thumb is that if your method isn't called more than once, it can probably be removed and the code written in place", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r464883924", "createdAt": "2020-08-04T08:23:45Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -72,82 +69,148 @@ public void start(Stage stage) {\n       stage.setScene(scene);\n       stage.show();\n \n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n+\n       // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n+      controlsVBox = new VBox();\n       controlsVBox.getStyleClass().add(\"panel-region\");\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // create a label to display the view status and add to the control panel\n+      layerViewStatusLabel = new Label(\"Click button to load feature layer\\n \");\n+      layerViewStatusLabel.getStyleClass().add(\"panel-label\");\n+      controlsVBox.getChildren().add(layerViewStatusLabel);\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a listener that fires every time a layer's view status changes\n+      mapView.addLayerViewStateChangedListener(statusChangeEvent -> {\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n-\n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+        // get the layer whose state has changed\n+        Layer layer = statusChangeEvent.getLayer();\n+        // only update the status if the layer is the feature layer being tracked\n+        if (layer != featureLayer) {\n+          return;\n+        }\n+        // get the layer's view status and display the status\n+        EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n+        displayViewStateText(layerViewStatus);\n+\n+        // if there is an error or warning, format and display the message as an alert\n+        ArcGISRuntimeException error = statusChangeEvent.getError();\n+        if (error != null) {\n+          Throwable cause = error.getCause();\n+          String message = (cause != null) ? cause.toString() : error.toString();\n+          Alert alert = new Alert(Alert.AlertType.ERROR, message);\n+          alert.show();\n+        }\n+      });\n \n-      // this layer will be OUT_OF_SCALE outside of its set min/max scales\n-      final ArcGISMapImageLayer imageLayer = new ArcGISMapImageLayer(SERVICE_CENSUS);\n-      imageLayer.setMinScale(MIN_SCALE);\n-      imageLayer.setMaxScale(MIN_SCALE / 10);\n+      // create buttons to toggle the visibility of the feature layer\n+      loadLayerButton = new Button(\"Load Layer\");\n+      loadLayerButton.getStyleClass().add(\"panel-button\");\n+      hideLayerButton = new Button(\"Hide Layer\");\n+      hideLayerButton.getStyleClass().add(\"panel-button\");\n+      // initially add load layer button to the control panel\n+      controlsVBox.getChildren().add(loadLayerButton);\n+\n+      // create a listener for clicks on the load layer button\n+      loadLayerButton.setOnAction(event -> {\n+\n+        // if the feature layer already exists and is hidden, toggle it's visibility to visible\n+        if (featureLayer != null && !featureLayer.isVisible()) {\n+          featureLayer.setVisible(true);\n+        } else {\n+          // create a feature layer from a portal item\n+          final PortalItem portalItem = new PortalItem(new Portal(\"https://runtime.maps.arcgis.com/\"),\n+            \"b8f4033069f141729ffb298b7418b653\");\n+          featureLayer = new FeatureLayer(portalItem, 0);\n+          //  set a minimum and a maximum scale for the visibility of the feature layer\n+          featureLayer.setMinScale(40000000);\n+          featureLayer.setMaxScale(40000000 / 10);\n+          // add the feature layer to the map\n+          map.getOperationalLayers().add(featureLayer);\n+        }\n \n-      // creating a layer from a service feature table\n-      final ServiceFeatureTable featureTable = new ServiceFeatureTable(SERVICE_RECREATION);\n-      final FeatureLayer featureLayer = new FeatureLayer(featureTable);\n+        // toggle the visibility of the buttons\n+        displayHideButton();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzQ5MDAxOnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyNTo1M1rOG7WVjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyNTo1M1rOG7WVjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4NTEzNQ==", "bodyText": "The IDE is flagging this up, so looks like it's best to write the number without division. Should be easy enough to tell there's a factor of 10 less here, as the lines are otherwise aligned.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      featureLayer.setMaxScale(40000000 / 10);\n          \n          \n            \n                      featureLayer.setMaxScale(4000000);", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r464885135", "createdAt": "2020-08-04T08:25:53Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -72,82 +69,148 @@ public void start(Stage stage) {\n       stage.setScene(scene);\n       stage.show();\n \n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n+\n       // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n+      controlsVBox = new VBox();\n       controlsVBox.getStyleClass().add(\"panel-region\");\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // create a label to display the view status and add to the control panel\n+      layerViewStatusLabel = new Label(\"Click button to load feature layer\\n \");\n+      layerViewStatusLabel.getStyleClass().add(\"panel-label\");\n+      controlsVBox.getChildren().add(layerViewStatusLabel);\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a listener that fires every time a layer's view status changes\n+      mapView.addLayerViewStateChangedListener(statusChangeEvent -> {\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n-\n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+        // get the layer whose state has changed\n+        Layer layer = statusChangeEvent.getLayer();\n+        // only update the status if the layer is the feature layer being tracked\n+        if (layer != featureLayer) {\n+          return;\n+        }\n+        // get the layer's view status and display the status\n+        EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n+        displayViewStateText(layerViewStatus);\n+\n+        // if there is an error or warning, format and display the message as an alert\n+        ArcGISRuntimeException error = statusChangeEvent.getError();\n+        if (error != null) {\n+          Throwable cause = error.getCause();\n+          String message = (cause != null) ? cause.toString() : error.toString();\n+          Alert alert = new Alert(Alert.AlertType.ERROR, message);\n+          alert.show();\n+        }\n+      });\n \n-      // this layer will be OUT_OF_SCALE outside of its set min/max scales\n-      final ArcGISMapImageLayer imageLayer = new ArcGISMapImageLayer(SERVICE_CENSUS);\n-      imageLayer.setMinScale(MIN_SCALE);\n-      imageLayer.setMaxScale(MIN_SCALE / 10);\n+      // create buttons to toggle the visibility of the feature layer\n+      loadLayerButton = new Button(\"Load Layer\");\n+      loadLayerButton.getStyleClass().add(\"panel-button\");\n+      hideLayerButton = new Button(\"Hide Layer\");\n+      hideLayerButton.getStyleClass().add(\"panel-button\");\n+      // initially add load layer button to the control panel\n+      controlsVBox.getChildren().add(loadLayerButton);\n+\n+      // create a listener for clicks on the load layer button\n+      loadLayerButton.setOnAction(event -> {\n+\n+        // if the feature layer already exists and is hidden, toggle it's visibility to visible\n+        if (featureLayer != null && !featureLayer.isVisible()) {\n+          featureLayer.setVisible(true);\n+        } else {\n+          // create a feature layer from a portal item\n+          final PortalItem portalItem = new PortalItem(new Portal(\"https://runtime.maps.arcgis.com/\"),\n+            \"b8f4033069f141729ffb298b7418b653\");\n+          featureLayer = new FeatureLayer(portalItem, 0);\n+          //  set a minimum and a maximum scale for the visibility of the feature layer\n+          featureLayer.setMinScale(40000000);\n+          featureLayer.setMaxScale(40000000 / 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 150}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzUwMzc1OnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyOTo0NFrOG7WeYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyOTo0NFrOG7WeYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4NzM5NA==", "bodyText": "Let's move the creation of the VBox and arranging the UI down to where it's first used, where we set it up within the StackPane. We can also add all the buttons to it down there, to avoid switching context so often. So let's put all of that just before we do:\nstackPane.getChildren().addAll(mapView, controlsVBox);", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r464887394", "createdAt": "2020-08-04T08:29:44Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -72,82 +69,148 @@ public void start(Stage stage) {\n       stage.setScene(scene);\n       stage.show();\n \n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n+\n       // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n+      controlsVBox = new VBox();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzUxMjY4OnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODozMjoxMFrOG7WkGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzoxMzo0NlrOG7fzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4ODg1Ng==", "bodyText": "We generally don't put out the whole technical error message in these alerts, but just keep it to plain english. So we could write something along the lines of 'Error getting the layer's view status'", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r464888856", "createdAt": "2020-08-04T08:32:10Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -72,82 +69,148 @@ public void start(Stage stage) {\n       stage.setScene(scene);\n       stage.show();\n \n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n+\n       // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n+      controlsVBox = new VBox();\n       controlsVBox.getStyleClass().add(\"panel-region\");\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // create a label to display the view status and add to the control panel\n+      layerViewStatusLabel = new Label(\"Click button to load feature layer\\n \");\n+      layerViewStatusLabel.getStyleClass().add(\"panel-label\");\n+      controlsVBox.getChildren().add(layerViewStatusLabel);\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a listener that fires every time a layer's view status changes\n+      mapView.addLayerViewStateChangedListener(statusChangeEvent -> {\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n-\n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+        // get the layer whose state has changed\n+        Layer layer = statusChangeEvent.getLayer();\n+        // only update the status if the layer is the feature layer being tracked\n+        if (layer != featureLayer) {\n+          return;\n+        }\n+        // get the layer's view status and display the status\n+        EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n+        displayViewStateText(layerViewStatus);\n+\n+        // if there is an error or warning, format and display the message as an alert\n+        ArcGISRuntimeException error = statusChangeEvent.getError();\n+        if (error != null) {\n+          Throwable cause = error.getCause();\n+          String message = (cause != null) ? cause.toString() : error.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAzMTkxMQ==", "bodyText": "On this one, there was a bit of discussion when this was initially implemented for the design. There's a different message depending on what the error is - requesting too many features above the max query count or due to the network issues. So the layer view status itself updates to WARNING or ERROR but there is an additional error message that accompanies it.\nThe 'true' method in the ternary (cause.toString) is the one that prints out as a Java Exception when there is a network issue, the false option (should be error.getMessage which I'll fix..) prints out nicely for when there's too many feature requests, according to the design discussions.\nSo maybe, I could replace first message to be a manual string instead of the UnknownHostException that displays, and leave the other one as the default message \"A layer has requested more features than the service maximum feature count\". Thoughts?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r465031911", "createdAt": "2020-08-04T13:00:40Z", "author": {"login": "jenmerritt"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -72,82 +69,148 @@ public void start(Stage stage) {\n       stage.setScene(scene);\n       stage.show();\n \n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n+\n       // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n+      controlsVBox = new VBox();\n       controlsVBox.getStyleClass().add(\"panel-region\");\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // create a label to display the view status and add to the control panel\n+      layerViewStatusLabel = new Label(\"Click button to load feature layer\\n \");\n+      layerViewStatusLabel.getStyleClass().add(\"panel-label\");\n+      controlsVBox.getChildren().add(layerViewStatusLabel);\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a listener that fires every time a layer's view status changes\n+      mapView.addLayerViewStateChangedListener(statusChangeEvent -> {\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n-\n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+        // get the layer whose state has changed\n+        Layer layer = statusChangeEvent.getLayer();\n+        // only update the status if the layer is the feature layer being tracked\n+        if (layer != featureLayer) {\n+          return;\n+        }\n+        // get the layer's view status and display the status\n+        EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n+        displayViewStateText(layerViewStatus);\n+\n+        // if there is an error or warning, format and display the message as an alert\n+        ArcGISRuntimeException error = statusChangeEvent.getError();\n+        if (error != null) {\n+          Throwable cause = error.getCause();\n+          String message = (cause != null) ? cause.toString() : error.toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4ODg1Ng=="}, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA0MDE3OQ==", "bodyText": "That sounds like a good solution, yeah!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r465040179", "createdAt": "2020-08-04T13:13:46Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -72,82 +69,148 @@ public void start(Stage stage) {\n       stage.setScene(scene);\n       stage.show();\n \n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n+\n       // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n+      controlsVBox = new VBox();\n       controlsVBox.getStyleClass().add(\"panel-region\");\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // create a label to display the view status and add to the control panel\n+      layerViewStatusLabel = new Label(\"Click button to load feature layer\\n \");\n+      layerViewStatusLabel.getStyleClass().add(\"panel-label\");\n+      controlsVBox.getChildren().add(layerViewStatusLabel);\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a listener that fires every time a layer's view status changes\n+      mapView.addLayerViewStateChangedListener(statusChangeEvent -> {\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n-\n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+        // get the layer whose state has changed\n+        Layer layer = statusChangeEvent.getLayer();\n+        // only update the status if the layer is the feature layer being tracked\n+        if (layer != featureLayer) {\n+          return;\n+        }\n+        // get the layer's view status and display the status\n+        EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n+        displayViewStateText(layerViewStatus);\n+\n+        // if there is an error or warning, format and display the message as an alert\n+        ArcGISRuntimeException error = statusChangeEvent.getError();\n+        if (error != null) {\n+          Throwable cause = error.getCause();\n+          String message = (cause != null) ? cause.toString() : error.toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4ODg1Ng=="}, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzUyMzgwOnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODozNDo1MVrOG7Wq9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODozNDo1MVrOG7Wq9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg5MDYxMg==", "bodyText": "Again, I'd be absolutely happy with putting the code for this method directly here in place, since it's not repeated, and it's quite a main part of the functionality (as we're showing the individual Enum values for the view state)", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r464890612", "createdAt": "2020-08-04T08:34:51Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -72,82 +69,148 @@ public void start(Stage stage) {\n       stage.setScene(scene);\n       stage.show();\n \n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n+\n       // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n+      controlsVBox = new VBox();\n       controlsVBox.getStyleClass().add(\"panel-region\");\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // create a label to display the view status and add to the control panel\n+      layerViewStatusLabel = new Label(\"Click button to load feature layer\\n \");\n+      layerViewStatusLabel.getStyleClass().add(\"panel-label\");\n+      controlsVBox.getChildren().add(layerViewStatusLabel);\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a listener that fires every time a layer's view status changes\n+      mapView.addLayerViewStateChangedListener(statusChangeEvent -> {\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n-\n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+        // get the layer whose state has changed\n+        Layer layer = statusChangeEvent.getLayer();\n+        // only update the status if the layer is the feature layer being tracked\n+        if (layer != featureLayer) {\n+          return;\n+        }\n+        // get the layer's view status and display the status\n+        EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n+        displayViewStateText(layerViewStatus);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzU0MTQwOnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODozOTo1NVrOG7W2RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDo1MTo0MFrOG8NS7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg5MzUwOA==", "bodyText": "Although this is a good way to make sure the code doesn't misbehave, I don't think we can actually hit this condition the way that the code is set up? Meaning this button will be gone as soon as we load the layer... Once the layer has been loaded we only ever use the 'other' button(s). Just something to think about, since it might be possible to simplify the code (although admittedly making it a little bit less bulletproof).", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r464893508", "createdAt": "2020-08-04T08:39:55Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -72,82 +69,148 @@ public void start(Stage stage) {\n       stage.setScene(scene);\n       stage.show();\n \n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n+\n       // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n+      controlsVBox = new VBox();\n       controlsVBox.getStyleClass().add(\"panel-region\");\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // create a label to display the view status and add to the control panel\n+      layerViewStatusLabel = new Label(\"Click button to load feature layer\\n \");\n+      layerViewStatusLabel.getStyleClass().add(\"panel-label\");\n+      controlsVBox.getChildren().add(layerViewStatusLabel);\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a listener that fires every time a layer's view status changes\n+      mapView.addLayerViewStateChangedListener(statusChangeEvent -> {\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n-\n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+        // get the layer whose state has changed\n+        Layer layer = statusChangeEvent.getLayer();\n+        // only update the status if the layer is the feature layer being tracked\n+        if (layer != featureLayer) {\n+          return;\n+        }\n+        // get the layer's view status and display the status\n+        EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n+        displayViewStateText(layerViewStatus);\n+\n+        // if there is an error or warning, format and display the message as an alert\n+        ArcGISRuntimeException error = statusChangeEvent.getError();\n+        if (error != null) {\n+          Throwable cause = error.getCause();\n+          String message = (cause != null) ? cause.toString() : error.toString();\n+          Alert alert = new Alert(Alert.AlertType.ERROR, message);\n+          alert.show();\n+        }\n+      });\n \n-      // this layer will be OUT_OF_SCALE outside of its set min/max scales\n-      final ArcGISMapImageLayer imageLayer = new ArcGISMapImageLayer(SERVICE_CENSUS);\n-      imageLayer.setMinScale(MIN_SCALE);\n-      imageLayer.setMaxScale(MIN_SCALE / 10);\n+      // create buttons to toggle the visibility of the feature layer\n+      loadLayerButton = new Button(\"Load Layer\");\n+      loadLayerButton.getStyleClass().add(\"panel-button\");\n+      hideLayerButton = new Button(\"Hide Layer\");\n+      hideLayerButton.getStyleClass().add(\"panel-button\");\n+      // initially add load layer button to the control panel\n+      controlsVBox.getChildren().add(loadLayerButton);\n+\n+      // create a listener for clicks on the load layer button\n+      loadLayerButton.setOnAction(event -> {\n+\n+        // if the feature layer already exists and is hidden, toggle it's visibility to visible\n+        if (featureLayer != null && !featureLayer.isVisible()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc4NTU4Mg==", "bodyText": "This whole function has now been altered with the other changes and button changes, and I've altered the wording.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r465785582", "createdAt": "2020-08-05T14:51:40Z", "author": {"login": "jenmerritt"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -72,82 +69,148 @@ public void start(Stage stage) {\n       stage.setScene(scene);\n       stage.show();\n \n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n+\n       // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n+      controlsVBox = new VBox();\n       controlsVBox.getStyleClass().add(\"panel-region\");\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // create a label to display the view status and add to the control panel\n+      layerViewStatusLabel = new Label(\"Click button to load feature layer\\n \");\n+      layerViewStatusLabel.getStyleClass().add(\"panel-label\");\n+      controlsVBox.getChildren().add(layerViewStatusLabel);\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a listener that fires every time a layer's view status changes\n+      mapView.addLayerViewStateChangedListener(statusChangeEvent -> {\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n-\n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+        // get the layer whose state has changed\n+        Layer layer = statusChangeEvent.getLayer();\n+        // only update the status if the layer is the feature layer being tracked\n+        if (layer != featureLayer) {\n+          return;\n+        }\n+        // get the layer's view status and display the status\n+        EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n+        displayViewStateText(layerViewStatus);\n+\n+        // if there is an error or warning, format and display the message as an alert\n+        ArcGISRuntimeException error = statusChangeEvent.getError();\n+        if (error != null) {\n+          Throwable cause = error.getCause();\n+          String message = (cause != null) ? cause.toString() : error.toString();\n+          Alert alert = new Alert(Alert.AlertType.ERROR, message);\n+          alert.show();\n+        }\n+      });\n \n-      // this layer will be OUT_OF_SCALE outside of its set min/max scales\n-      final ArcGISMapImageLayer imageLayer = new ArcGISMapImageLayer(SERVICE_CENSUS);\n-      imageLayer.setMinScale(MIN_SCALE);\n-      imageLayer.setMaxScale(MIN_SCALE / 10);\n+      // create buttons to toggle the visibility of the feature layer\n+      loadLayerButton = new Button(\"Load Layer\");\n+      loadLayerButton.getStyleClass().add(\"panel-button\");\n+      hideLayerButton = new Button(\"Hide Layer\");\n+      hideLayerButton.getStyleClass().add(\"panel-button\");\n+      // initially add load layer button to the control panel\n+      controlsVBox.getChildren().add(loadLayerButton);\n+\n+      // create a listener for clicks on the load layer button\n+      loadLayerButton.setOnAction(event -> {\n+\n+        // if the feature layer already exists and is hidden, toggle it's visibility to visible\n+        if (featureLayer != null && !featureLayer.isVisible()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg5MzUwOA=="}, "originalCommit": {"oid": "f502d092123cf352ddd4b62e03e77e16fb1cfded"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjg4Mzg5OnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoxOTozOFrOG_o05w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoxOTozOFrOG_o05w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4MjM3NQ==", "bodyText": "Do we know certainly that this is would be a network issue? Otherwise we can just say what's wrong (unable to load layer)?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r469382375", "createdAt": "2020-08-12T16:19:38Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -101,60 +93,50 @@ public void start(Stage stage) {\n         EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n         displayViewStateText(layerViewStatus);\n \n-        // if there is an error or warning, format and display the message as an alert\n+        // if there is an error or warning, format and display a message as an Alert\n         ArcGISRuntimeException error = statusChangeEvent.getError();\n         if (error != null) {\n           Throwable cause = error.getCause();\n-          String message = (cause != null) ? cause.toString() : error.toString();\n+          String message = (cause != null) ? \"Network issue, unable to load layer\" : error.getMessage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5f2b6858fd8384f97f0d301203f93610c966"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjg4OTE1OnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoyMDo1NFrOG_o4CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoyMDo1NFrOG_o4CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4MzE3Nw==", "bodyText": "Strictly speaking we're not just toggling this to visible, but toggling the visibility on/off. Also suggesting to add a comma as we have one in the else block:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // if the feature layer already exists toggle it's visibility to visible\n          \n          \n            \n                    // if the feature layer already exists, toggle it's visibility", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r469383177", "createdAt": "2020-08-12T16:20:54Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -101,60 +93,50 @@ public void start(Stage stage) {\n         EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n         displayViewStateText(layerViewStatus);\n \n-        // if there is an error or warning, format and display the message as an alert\n+        // if there is an error or warning, format and display a message as an Alert\n         ArcGISRuntimeException error = statusChangeEvent.getError();\n         if (error != null) {\n           Throwable cause = error.getCause();\n-          String message = (cause != null) ? cause.toString() : error.toString();\n+          String message = (cause != null) ? \"Network issue, unable to load layer\" : error.getMessage();\n           Alert alert = new Alert(Alert.AlertType.ERROR, message);\n           alert.show();\n         }\n       });\n \n       // create buttons to toggle the visibility of the feature layer\n-      loadLayerButton = new Button(\"Load Layer\");\n-      loadLayerButton.getStyleClass().add(\"panel-button\");\n-      hideLayerButton = new Button(\"Hide Layer\");\n-      hideLayerButton.getStyleClass().add(\"panel-button\");\n-      // initially add load layer button to the control panel\n-      controlsVBox.getChildren().add(loadLayerButton);\n+      toggleLayerButton = new Button(\"Load Layer\");\n \n       // create a listener for clicks on the load layer button\n-      loadLayerButton.setOnAction(event -> {\n+      toggleLayerButton.setOnAction(event -> {\n \n-        // if the feature layer already exists and is hidden, toggle it's visibility to visible\n-        if (featureLayer != null && !featureLayer.isVisible()) {\n-          featureLayer.setVisible(true);\n+        // if the feature layer already exists toggle it's visibility to visible", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5f2b6858fd8384f97f0d301203f93610c966"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjg5NjQzOnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoyMjo1MFrOG_o8kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOTozMjo1MFrOHADwKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4NDMzOQ==", "bodyText": "Show this now be show as the opposite of hide? We're only really 'loading' the layer at the very first click, and then just showing/hiding. Unless I'm misunderstanding?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      toggleLayerButton.setText(\"Load Layer\");\n          \n          \n            \n                      toggleLayerButton.setText(\"Show Layer\");", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r469384339", "createdAt": "2020-08-12T16:22:50Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -101,60 +93,50 @@ public void start(Stage stage) {\n         EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n         displayViewStateText(layerViewStatus);\n \n-        // if there is an error or warning, format and display the message as an alert\n+        // if there is an error or warning, format and display a message as an Alert\n         ArcGISRuntimeException error = statusChangeEvent.getError();\n         if (error != null) {\n           Throwable cause = error.getCause();\n-          String message = (cause != null) ? cause.toString() : error.toString();\n+          String message = (cause != null) ? \"Network issue, unable to load layer\" : error.getMessage();\n           Alert alert = new Alert(Alert.AlertType.ERROR, message);\n           alert.show();\n         }\n       });\n \n       // create buttons to toggle the visibility of the feature layer\n-      loadLayerButton = new Button(\"Load Layer\");\n-      loadLayerButton.getStyleClass().add(\"panel-button\");\n-      hideLayerButton = new Button(\"Hide Layer\");\n-      hideLayerButton.getStyleClass().add(\"panel-button\");\n-      // initially add load layer button to the control panel\n-      controlsVBox.getChildren().add(loadLayerButton);\n+      toggleLayerButton = new Button(\"Load Layer\");\n \n       // create a listener for clicks on the load layer button\n-      loadLayerButton.setOnAction(event -> {\n+      toggleLayerButton.setOnAction(event -> {\n \n-        // if the feature layer already exists and is hidden, toggle it's visibility to visible\n-        if (featureLayer != null && !featureLayer.isVisible()) {\n-          featureLayer.setVisible(true);\n+        // if the feature layer already exists toggle it's visibility to visible\n+        if (featureLayer != null) {\n+          featureLayer.setVisible(!featureLayer.isVisible());\n         } else {\n-          // create a feature layer from a portal item\n+          // if the feature layer doesn't exist, create a new feature layer from a portal item\n           final PortalItem portalItem = new PortalItem(new Portal(\"https://runtime.maps.arcgis.com/\"),\n             \"b8f4033069f141729ffb298b7418b653\");\n           featureLayer = new FeatureLayer(portalItem, 0);\n           //  set a minimum and a maximum scale for the visibility of the feature layer\n           featureLayer.setMinScale(40000000);\n-          featureLayer.setMaxScale(40000000 / 10);\n+          featureLayer.setMaxScale(4000000);\n           // add the feature layer to the map\n           map.getOperationalLayers().add(featureLayer);\n         }\n \n-        // toggle the visibility of the buttons\n-        displayHideButton();\n-      });\n-\n-      // create a listener for clicks on the hide layer button to toggle visibility of the feature layer\n-      hideLayerButton.setOnAction(event -> {\n-\n-        if (featureLayer == null) return;\n-\n-        if (featureLayer.isVisible()) {\n-          featureLayer.setVisible(false);\n-          displayLoadButton();\n+        // toggle the text on the button\n+        if (toggleLayerButton.getText().equals(\"Load Layer\")){\n+          toggleLayerButton.setText(\"Hide Layer\");\n         } else {\n-          featureLayer.setVisible(true);\n-          displayHideButton();\n+          toggleLayerButton.setText(\"Load Layer\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f5f2b6858fd8384f97f0d301203f93610c966"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgyMzUzMQ==", "bodyText": "Yes good point, now the button implementation has changed it is simple to have Load initially, then show/hide. I tweaked the if statement in the toggleLayerButton listener and it works well, thanks for this suggestion!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r469823531", "createdAt": "2020-08-13T09:32:50Z", "author": {"login": "jenmerritt"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -101,60 +93,50 @@ public void start(Stage stage) {\n         EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n         displayViewStateText(layerViewStatus);\n \n-        // if there is an error or warning, format and display the message as an alert\n+        // if there is an error or warning, format and display a message as an Alert\n         ArcGISRuntimeException error = statusChangeEvent.getError();\n         if (error != null) {\n           Throwable cause = error.getCause();\n-          String message = (cause != null) ? cause.toString() : error.toString();\n+          String message = (cause != null) ? \"Network issue, unable to load layer\" : error.getMessage();\n           Alert alert = new Alert(Alert.AlertType.ERROR, message);\n           alert.show();\n         }\n       });\n \n       // create buttons to toggle the visibility of the feature layer\n-      loadLayerButton = new Button(\"Load Layer\");\n-      loadLayerButton.getStyleClass().add(\"panel-button\");\n-      hideLayerButton = new Button(\"Hide Layer\");\n-      hideLayerButton.getStyleClass().add(\"panel-button\");\n-      // initially add load layer button to the control panel\n-      controlsVBox.getChildren().add(loadLayerButton);\n+      toggleLayerButton = new Button(\"Load Layer\");\n \n       // create a listener for clicks on the load layer button\n-      loadLayerButton.setOnAction(event -> {\n+      toggleLayerButton.setOnAction(event -> {\n \n-        // if the feature layer already exists and is hidden, toggle it's visibility to visible\n-        if (featureLayer != null && !featureLayer.isVisible()) {\n-          featureLayer.setVisible(true);\n+        // if the feature layer already exists toggle it's visibility to visible\n+        if (featureLayer != null) {\n+          featureLayer.setVisible(!featureLayer.isVisible());\n         } else {\n-          // create a feature layer from a portal item\n+          // if the feature layer doesn't exist, create a new feature layer from a portal item\n           final PortalItem portalItem = new PortalItem(new Portal(\"https://runtime.maps.arcgis.com/\"),\n             \"b8f4033069f141729ffb298b7418b653\");\n           featureLayer = new FeatureLayer(portalItem, 0);\n           //  set a minimum and a maximum scale for the visibility of the feature layer\n           featureLayer.setMinScale(40000000);\n-          featureLayer.setMaxScale(40000000 / 10);\n+          featureLayer.setMaxScale(4000000);\n           // add the feature layer to the map\n           map.getOperationalLayers().add(featureLayer);\n         }\n \n-        // toggle the visibility of the buttons\n-        displayHideButton();\n-      });\n-\n-      // create a listener for clicks on the hide layer button to toggle visibility of the feature layer\n-      hideLayerButton.setOnAction(event -> {\n-\n-        if (featureLayer == null) return;\n-\n-        if (featureLayer.isVisible()) {\n-          featureLayer.setVisible(false);\n-          displayLoadButton();\n+        // toggle the text on the button\n+        if (toggleLayerButton.getText().equals(\"Load Layer\")){\n+          toggleLayerButton.setText(\"Hide Layer\");\n         } else {\n-          featureLayer.setVisible(true);\n-          displayHideButton();\n+          toggleLayerButton.setText(\"Load Layer\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4NDMzOQ=="}, "originalCommit": {"oid": "326f5f2b6858fd8384f97f0d301203f93610c966"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjkxMDkxOnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoyNjo0NlrOG_pF1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoyNjo0NlrOG_pF1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4NjcwOQ==", "bodyText": "The label and button can be local variables, because they are only being used in the start method.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r469386709", "createdAt": "2020-08-12T16:26:46Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -16,132 +16,166 @@\n \n package com.esri.samples.display_layer_view_state;\n \n+import java.util.ArrayList;\n+import java.util.EnumSet;\n+import java.util.List;\n+\n import javafx.application.Application;\n import javafx.geometry.Insets;\n import javafx.geometry.Pos;\n import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n import javafx.scene.control.Label;\n import javafx.scene.layout.Background;\n import javafx.scene.layout.BackgroundFill;\n import javafx.scene.layout.CornerRadii;\n import javafx.scene.layout.StackPane;\n import javafx.scene.layout.VBox;\n import javafx.scene.paint.Paint;\n+import javafx.scene.text.TextAlignment;\n import javafx.stage.Stage;\n \n-import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.ArcGISRuntimeException;\n import com.esri.arcgisruntime.geometry.Point;\n import com.esri.arcgisruntime.geometry.SpatialReferences;\n-import com.esri.arcgisruntime.layers.ArcGISMapImageLayer;\n-import com.esri.arcgisruntime.layers.ArcGISTiledLayer;\n import com.esri.arcgisruntime.layers.FeatureLayer;\n import com.esri.arcgisruntime.layers.Layer;\n import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.LayerViewStatus;\n import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.portal.Portal;\n+import com.esri.arcgisruntime.portal.PortalItem;\n \n public class DisplayLayerViewStateSample extends Application {\n \n   private MapView mapView;\n-\n-  private static final int MIN_SCALE = 40000000;\n-  private static final int TILED_LAYER = 0;\n-  private static final int IMAGE_LAYER = 1;\n-  private static final int FEATURE_LAYER = 2;\n-\n-  private static final String SERVICE_TIME_ZONES =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/WorldTimeZones/MapServer\";\n-  private static final String SERVICE_CENSUS =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer\";\n-  private static final String SERVICE_RECREATION =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Recreation/FeatureServer/0\";\n+  private FeatureLayer featureLayer;\n+  private Label layerViewStatusLabel;\n+  private Button toggleLayerButton;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c37d4ba08f44d95eaac1f190b7535722c5f1491"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjkxOTI0OnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoyOTowMFrOG_pLDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOTo0MTozM1rOHAEDaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4ODA0NA==", "bodyText": "A shame none of these work properly with the sample viewer. Which is quite bizarre since they work fine with some other samples!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r469388044", "createdAt": "2020-08-12T16:29:00Z", "author": {"login": "JonLavi"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -16,132 +16,166 @@\n \n package com.esri.samples.display_layer_view_state;\n \n+import java.util.ArrayList;\n+import java.util.EnumSet;\n+import java.util.List;\n+\n import javafx.application.Application;\n import javafx.geometry.Insets;\n import javafx.geometry.Pos;\n import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n import javafx.scene.control.Label;\n import javafx.scene.layout.Background;\n import javafx.scene.layout.BackgroundFill;\n import javafx.scene.layout.CornerRadii;\n import javafx.scene.layout.StackPane;\n import javafx.scene.layout.VBox;\n import javafx.scene.paint.Paint;\n+import javafx.scene.text.TextAlignment;\n import javafx.stage.Stage;\n \n-import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.ArcGISRuntimeException;\n import com.esri.arcgisruntime.geometry.Point;\n import com.esri.arcgisruntime.geometry.SpatialReferences;\n-import com.esri.arcgisruntime.layers.ArcGISMapImageLayer;\n-import com.esri.arcgisruntime.layers.ArcGISTiledLayer;\n import com.esri.arcgisruntime.layers.FeatureLayer;\n import com.esri.arcgisruntime.layers.Layer;\n import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.LayerViewStatus;\n import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.portal.Portal;\n+import com.esri.arcgisruntime.portal.PortalItem;\n \n public class DisplayLayerViewStateSample extends Application {\n \n   private MapView mapView;\n-\n-  private static final int MIN_SCALE = 40000000;\n-  private static final int TILED_LAYER = 0;\n-  private static final int IMAGE_LAYER = 1;\n-  private static final int FEATURE_LAYER = 2;\n-\n-  private static final String SERVICE_TIME_ZONES =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/WorldTimeZones/MapServer\";\n-  private static final String SERVICE_CENSUS =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer\";\n-  private static final String SERVICE_RECREATION =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Recreation/FeatureServer/0\";\n+  private FeatureLayer featureLayer;\n+  private Label layerViewStatusLabel;\n+  private Button toggleLayerButton;\n \n   @Override\n   public void start(Stage stage) {\n \n     try {\n-      // create stack pane and application scene\n+      // create the stack pane and application scene\n       StackPane stackPane = new StackPane();\n       Scene scene = new Scene(stackPane);\n       scene.getStylesheets().add(getClass().getResource(\"/display_layer_view_state/style.css\").toExternalForm());\n \n-      // set title, size, and add scene to stage\n+      // set a title, size, and add the scene to the stage\n       stage.setTitle(\"Display Layer View State Sample\");\n       stage.setWidth(800);\n       stage.setHeight(700);\n       stage.setScene(scene);\n       stage.show();\n \n-      // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n-      controlsVBox.getStyleClass().add(\"panel-region\");\n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n+\n+      // create a label to display the view status\n+      layerViewStatusLabel = new Label(\"Click button to load feature layer\\n \");\n+      layerViewStatusLabel.setTextAlignment(TextAlignment.CENTER);\n+      layerViewStatusLabel.setStyle(\"-fx-font-size: 16;\");\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a listener that fires every time a layer's view status changes\n+      mapView.addLayerViewStateChangedListener(statusChangeEvent -> {\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n+        // get the layer whose state has changed\n+        Layer layer = statusChangeEvent.getLayer();\n+        // only update the status if the layer is the feature layer being tracked\n+        if (layer != featureLayer) {\n+          return;\n+        }\n+        // get the layer's view status and display the status\n+        EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n \n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+        List<String> stringList = new ArrayList<>();\n \n-      // this layer will be OUT_OF_SCALE outside of its set min/max scales\n-      final ArcGISMapImageLayer imageLayer = new ArcGISMapImageLayer(SERVICE_CENSUS);\n-      imageLayer.setMinScale(MIN_SCALE);\n-      imageLayer.setMaxScale(MIN_SCALE / 10);\n+        if (layerViewStatus.contains(LayerViewStatus.ACTIVE)) {\n+          stringList.add(\"Active\");\n+        }\n+        if (layerViewStatus.contains(LayerViewStatus.ERROR)) {\n+          stringList.add(\"Error\");\n+        }\n+        if (layerViewStatus.contains(LayerViewStatus.LOADING)) {\n+          stringList.add(\"Loading\");\n+        }\n+        if (layerViewStatus.contains(LayerViewStatus.NOT_VISIBLE)) {\n+          stringList.add(\"Not Visible\");\n+        }\n+        if (layerViewStatus.contains(LayerViewStatus.OUT_OF_SCALE)) {\n+          stringList.add(\"Out of Scale\");\n+        }\n+        if (layerViewStatus.contains(LayerViewStatus.WARNING)) {\n+          stringList.add(\"Warning\");\n+        }\n \n-      // creating a layer from a service feature table\n-      final ServiceFeatureTable featureTable = new ServiceFeatureTable(SERVICE_RECREATION);\n-      final FeatureLayer featureLayer = new FeatureLayer(featureTable);\n+        layerViewStatusLabel.setText(\"Current view status:\\n\" + String.join(\", \", stringList));\n \n-      // adding layers to the ArcGISMaps' layer list\n-      final ArcGISMap map = new ArcGISMap();\n-      map.getOperationalLayers().add(tiledLayer);\n-      map.getOperationalLayers().add(imageLayer);\n-      map.getOperationalLayers().add(featureLayer);\n+        // if there is an error or warning, format and display a message as an Alert\n+        ArcGISRuntimeException error = statusChangeEvent.getError();\n+        if (error != null) {\n+          Throwable cause = error.getCause();\n+          String message = (cause != null) ? \"Network issue, unable to load layer\" : error.getMessage();\n+          Alert alert = new Alert(Alert.AlertType.ERROR, message);\n+          alert.show();\n+        }\n+      });\n \n-      // create a view and set ArcGISMap to it\n-      mapView = new MapView();\n-      mapView.setMap(map);\n+      // create a button to toggle the visibility of the feature layer\n+      toggleLayerButton = new Button(\"Load Layer\");\n+      toggleLayerButton.setMaxWidth(130);\n+\n+      // create a listener for clicks on the load layer button\n+      toggleLayerButton.setOnAction(event -> {\n+\n+        // if the feature layer already exists toggle it's visibility to visible\n+        if (featureLayer != null) {\n+          featureLayer.setVisible(!featureLayer.isVisible());\n+        } else {\n+          // if the feature layer doesn't exist, create a new feature layer from a portal item\n+          final PortalItem portalItem = new PortalItem(new Portal(\"https://runtime.maps.arcgis.com/\"),\n+            \"b8f4033069f141729ffb298b7418b653\");\n+          featureLayer = new FeatureLayer(portalItem, 0);\n+          //  set a minimum and a maximum scale for the visibility of the feature layer\n+          featureLayer.setMinScale(40000000);\n+          featureLayer.setMaxScale(4000000);\n+          // add the feature layer to the map\n+          map.getOperationalLayers().add(featureLayer);\n+        }\n \n-      // set viewpoint\n-      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), MIN_SCALE));\n-\n-      // fires every time a layers' view status has changed\n-      mapView.addLayerViewStateChangedListener(e -> {\n-        // holds the label that needs to be changed\n-        Layer layer = e.getLayer();\n-\n-        String viewStatus = e.getLayerViewStatus().iterator().next().toString();\n-        final int layerIndex = map.getOperationalLayers().indexOf(layer);\n-\n-        // finding and updating label that needs to be changed\n-        switch (layerIndex) {\n-          case TILED_LAYER:\n-            worldTimeZonesLabel.setText(\"World Time Zones: \" + viewStatus);\n-            break;\n-          case IMAGE_LAYER:\n-            censusLabel.setText(\"Census: \" + viewStatus);\n-            break;\n-          case FEATURE_LAYER:\n-            facilitiesLabel.setText(\"Facilities: \" + viewStatus);\n+        // toggle the text on the button\n+        if (toggleLayerButton.getText().equals(\"Load Layer\")){\n+          toggleLayerButton.setText(\"Hide Layer\");\n+        } else {\n+          toggleLayerButton.setText(\"Load Layer\");\n         }\n       });\n \n-      // add the map view and control panel to stack pane\n+      // create a control panel and add the label and button\n+      VBox controlsVBox = new VBox(6);\n+      controlsVBox.setAlignment(Pos.TOP_CENTER);\n+      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.5)\"), CornerRadii.EMPTY,\n+        Insets.EMPTY)));\n+      controlsVBox.setPadding(new Insets(10.0));\n+      controlsVBox.setMaxSize(400, 120);\n+      controlsVBox.getStyleClass().add(\"panel-region\");\n+      controlsVBox.getChildren().addAll(layerViewStatusLabel, toggleLayerButton);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c37d4ba08f44d95eaac1f190b7535722c5f1491"}, "originalPosition": 230}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgyODQ1Nw==", "bodyText": "Agreed on this point, it was very frustrating to have to pull them out of the css. Something for us to look at.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r469828457", "createdAt": "2020-08-13T09:41:33Z", "author": {"login": "jenmerritt"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -16,132 +16,166 @@\n \n package com.esri.samples.display_layer_view_state;\n \n+import java.util.ArrayList;\n+import java.util.EnumSet;\n+import java.util.List;\n+\n import javafx.application.Application;\n import javafx.geometry.Insets;\n import javafx.geometry.Pos;\n import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.control.Button;\n import javafx.scene.control.Label;\n import javafx.scene.layout.Background;\n import javafx.scene.layout.BackgroundFill;\n import javafx.scene.layout.CornerRadii;\n import javafx.scene.layout.StackPane;\n import javafx.scene.layout.VBox;\n import javafx.scene.paint.Paint;\n+import javafx.scene.text.TextAlignment;\n import javafx.stage.Stage;\n \n-import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.ArcGISRuntimeException;\n import com.esri.arcgisruntime.geometry.Point;\n import com.esri.arcgisruntime.geometry.SpatialReferences;\n-import com.esri.arcgisruntime.layers.ArcGISMapImageLayer;\n-import com.esri.arcgisruntime.layers.ArcGISTiledLayer;\n import com.esri.arcgisruntime.layers.FeatureLayer;\n import com.esri.arcgisruntime.layers.Layer;\n import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.LayerViewStatus;\n import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.portal.Portal;\n+import com.esri.arcgisruntime.portal.PortalItem;\n \n public class DisplayLayerViewStateSample extends Application {\n \n   private MapView mapView;\n-\n-  private static final int MIN_SCALE = 40000000;\n-  private static final int TILED_LAYER = 0;\n-  private static final int IMAGE_LAYER = 1;\n-  private static final int FEATURE_LAYER = 2;\n-\n-  private static final String SERVICE_TIME_ZONES =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/WorldTimeZones/MapServer\";\n-  private static final String SERVICE_CENSUS =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer\";\n-  private static final String SERVICE_RECREATION =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Recreation/FeatureServer/0\";\n+  private FeatureLayer featureLayer;\n+  private Label layerViewStatusLabel;\n+  private Button toggleLayerButton;\n \n   @Override\n   public void start(Stage stage) {\n \n     try {\n-      // create stack pane and application scene\n+      // create the stack pane and application scene\n       StackPane stackPane = new StackPane();\n       Scene scene = new Scene(stackPane);\n       scene.getStylesheets().add(getClass().getResource(\"/display_layer_view_state/style.css\").toExternalForm());\n \n-      // set title, size, and add scene to stage\n+      // set a title, size, and add the scene to the stage\n       stage.setTitle(\"Display Layer View State Sample\");\n       stage.setWidth(800);\n       stage.setHeight(700);\n       stage.setScene(scene);\n       stage.show();\n \n-      // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n-      controlsVBox.getStyleClass().add(\"panel-region\");\n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n+\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n+\n+      // create a label to display the view status\n+      layerViewStatusLabel = new Label(\"Click button to load feature layer\\n \");\n+      layerViewStatusLabel.setTextAlignment(TextAlignment.CENTER);\n+      layerViewStatusLabel.setStyle(\"-fx-font-size: 16;\");\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a listener that fires every time a layer's view status changes\n+      mapView.addLayerViewStateChangedListener(statusChangeEvent -> {\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n+        // get the layer whose state has changed\n+        Layer layer = statusChangeEvent.getLayer();\n+        // only update the status if the layer is the feature layer being tracked\n+        if (layer != featureLayer) {\n+          return;\n+        }\n+        // get the layer's view status and display the status\n+        EnumSet<LayerViewStatus> layerViewStatus = statusChangeEvent.getLayerViewStatus();\n \n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+        List<String> stringList = new ArrayList<>();\n \n-      // this layer will be OUT_OF_SCALE outside of its set min/max scales\n-      final ArcGISMapImageLayer imageLayer = new ArcGISMapImageLayer(SERVICE_CENSUS);\n-      imageLayer.setMinScale(MIN_SCALE);\n-      imageLayer.setMaxScale(MIN_SCALE / 10);\n+        if (layerViewStatus.contains(LayerViewStatus.ACTIVE)) {\n+          stringList.add(\"Active\");\n+        }\n+        if (layerViewStatus.contains(LayerViewStatus.ERROR)) {\n+          stringList.add(\"Error\");\n+        }\n+        if (layerViewStatus.contains(LayerViewStatus.LOADING)) {\n+          stringList.add(\"Loading\");\n+        }\n+        if (layerViewStatus.contains(LayerViewStatus.NOT_VISIBLE)) {\n+          stringList.add(\"Not Visible\");\n+        }\n+        if (layerViewStatus.contains(LayerViewStatus.OUT_OF_SCALE)) {\n+          stringList.add(\"Out of Scale\");\n+        }\n+        if (layerViewStatus.contains(LayerViewStatus.WARNING)) {\n+          stringList.add(\"Warning\");\n+        }\n \n-      // creating a layer from a service feature table\n-      final ServiceFeatureTable featureTable = new ServiceFeatureTable(SERVICE_RECREATION);\n-      final FeatureLayer featureLayer = new FeatureLayer(featureTable);\n+        layerViewStatusLabel.setText(\"Current view status:\\n\" + String.join(\", \", stringList));\n \n-      // adding layers to the ArcGISMaps' layer list\n-      final ArcGISMap map = new ArcGISMap();\n-      map.getOperationalLayers().add(tiledLayer);\n-      map.getOperationalLayers().add(imageLayer);\n-      map.getOperationalLayers().add(featureLayer);\n+        // if there is an error or warning, format and display a message as an Alert\n+        ArcGISRuntimeException error = statusChangeEvent.getError();\n+        if (error != null) {\n+          Throwable cause = error.getCause();\n+          String message = (cause != null) ? \"Network issue, unable to load layer\" : error.getMessage();\n+          Alert alert = new Alert(Alert.AlertType.ERROR, message);\n+          alert.show();\n+        }\n+      });\n \n-      // create a view and set ArcGISMap to it\n-      mapView = new MapView();\n-      mapView.setMap(map);\n+      // create a button to toggle the visibility of the feature layer\n+      toggleLayerButton = new Button(\"Load Layer\");\n+      toggleLayerButton.setMaxWidth(130);\n+\n+      // create a listener for clicks on the load layer button\n+      toggleLayerButton.setOnAction(event -> {\n+\n+        // if the feature layer already exists toggle it's visibility to visible\n+        if (featureLayer != null) {\n+          featureLayer.setVisible(!featureLayer.isVisible());\n+        } else {\n+          // if the feature layer doesn't exist, create a new feature layer from a portal item\n+          final PortalItem portalItem = new PortalItem(new Portal(\"https://runtime.maps.arcgis.com/\"),\n+            \"b8f4033069f141729ffb298b7418b653\");\n+          featureLayer = new FeatureLayer(portalItem, 0);\n+          //  set a minimum and a maximum scale for the visibility of the feature layer\n+          featureLayer.setMinScale(40000000);\n+          featureLayer.setMaxScale(4000000);\n+          // add the feature layer to the map\n+          map.getOperationalLayers().add(featureLayer);\n+        }\n \n-      // set viewpoint\n-      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), MIN_SCALE));\n-\n-      // fires every time a layers' view status has changed\n-      mapView.addLayerViewStateChangedListener(e -> {\n-        // holds the label that needs to be changed\n-        Layer layer = e.getLayer();\n-\n-        String viewStatus = e.getLayerViewStatus().iterator().next().toString();\n-        final int layerIndex = map.getOperationalLayers().indexOf(layer);\n-\n-        // finding and updating label that needs to be changed\n-        switch (layerIndex) {\n-          case TILED_LAYER:\n-            worldTimeZonesLabel.setText(\"World Time Zones: \" + viewStatus);\n-            break;\n-          case IMAGE_LAYER:\n-            censusLabel.setText(\"Census: \" + viewStatus);\n-            break;\n-          case FEATURE_LAYER:\n-            facilitiesLabel.setText(\"Facilities: \" + viewStatus);\n+        // toggle the text on the button\n+        if (toggleLayerButton.getText().equals(\"Load Layer\")){\n+          toggleLayerButton.setText(\"Hide Layer\");\n+        } else {\n+          toggleLayerButton.setText(\"Load Layer\");\n         }\n       });\n \n-      // add the map view and control panel to stack pane\n+      // create a control panel and add the label and button\n+      VBox controlsVBox = new VBox(6);\n+      controlsVBox.setAlignment(Pos.TOP_CENTER);\n+      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.5)\"), CornerRadii.EMPTY,\n+        Insets.EMPTY)));\n+      controlsVBox.setPadding(new Insets(10.0));\n+      controlsVBox.setMaxSize(400, 120);\n+      controlsVBox.getStyleClass().add(\"panel-region\");\n+      controlsVBox.getChildren().addAll(layerViewStatusLabel, toggleLayerButton);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4ODA0NA=="}, "originalCommit": {"oid": "4c37d4ba08f44d95eaac1f190b7535722c5f1491"}, "originalPosition": 230}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Njk5NTkxOnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDoyMTo0MlrOHDJwYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDoyMTo0MlrOHDJwYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA2NzYxNw==", "bodyText": "The readme template wiki in common samples shows that this section should be a plain english description of how to run the app, along with \"a short statement on what the user will see (technically, as in a raster on a map, etc.) and add a little call to action (i.e. 'pan and zoom to explore').\"\nThis current description (copied from the design) is API terminology heavy, and API terminology should not sit in this section in my experience. I would word smith it to be API term agnostic:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Click the *Load Layer* button to create a new layer and add it to the map. As you pan and zoom around the map, note how the `LayerViewStatus` flags change; for example, `OUT_OF_SCALE` becomes true when the map is scaled outside of the layer's min and max scale range. Click the *Hide Layer* button to hide the layer and observe the view state change to `NOT_VISIBLE`.\n          \n          \n            \n            Click \"Load Layer\" to add a new layer to the map. After it loads, the current view status of the map will display at the top of the sample. Zoom in and out of the map, and note the layer disappears when the map is scaled outside of its min and max scale range. The view status will update accordingly. Turn the layer's visibility off by clicking \"Hide Layer\".", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r473067617", "createdAt": "2020-08-19T14:21:42Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-layer-view-state/README.md", "diffHunk": "@@ -6,33 +6,33 @@ Determine if a layer is currently being viewed.\n \n ## Use case\n \n-The view state includes information on the loading state of layers and whether layers are visible at a given scale. For example, you might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. You then might show a loading spinner next to its name when the view state is LOADING, gray out the name when NOT_VISIBLE or OUT_OF_SCALE, show the name normally when ACTIVE, or with an error icon when the state is ERROR.\n+The view status includes information on the loading state of layers and whether layers are visible at a given scale. You might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. For example, you could show a loading spinner next to its name when the view status is `LOADING`, grey out the name when `NOT_VISIBLE` or `OUT_OF_SCALE`, show the name normally when `ACTIVE`, or with a warning or error icon when the status is `WARNING` or `ERROR`.\n \n ## How to use the sample\n \n-Pan and zoom around in the map. Each layer's view status is displayed. Notice that some layers configured with a min and max scale change to `OUT_OF_SCALE` at certain scales.\n+Click the *Load Layer* button to create a new layer and add it to the map. As you pan and zoom around the map, note how the `LayerViewStatus` flags change; for example, `OUT_OF_SCALE` becomes true when the map is scaled outside of the layer's min and max scale range. Click the *Hide Layer* button to hide the layer and observe the view state change to `NOT_VISIBLE`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb6dda330fc97cf2bda59a397318ef985532eafc"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTMzNzY2OnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTowOTo1NVrOHI8ZTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTowOTo1NVrOHI8ZTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE0MDE3NQ==", "bodyText": "we can update this to say 100.9.0 now that the release is live!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r479140175", "createdAt": "2020-08-28T11:09:55Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-layer-view-state/build.gradle", "diffHunk": "@@ -6,7 +6,7 @@ plugins {\n group = 'com.esri.samples'\n \n ext {\n-    arcgisVersion = '100.8.0'\n+    arcgisVersion = '100.9.0-2873'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727a4082061f46f4859c0aed465827e1759b179c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTY3MTIyOnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTo1ODoxMlrOHI_2YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTo1ODoxMlrOHI_2YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE5Njc2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // add a done loading listener to the feature layer\n          \n          \n            \n                    // enable UI interactions once the feature layer has loaded", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r479196769", "createdAt": "2020-08-28T11:58:12Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -29,116 +36,142 @@\n import javafx.scene.paint.Paint;\n import javafx.stage.Stage;\n \n-import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.ArcGISRuntimeException;\n import com.esri.arcgisruntime.geometry.Point;\n import com.esri.arcgisruntime.geometry.SpatialReferences;\n-import com.esri.arcgisruntime.layers.ArcGISMapImageLayer;\n-import com.esri.arcgisruntime.layers.ArcGISTiledLayer;\n import com.esri.arcgisruntime.layers.FeatureLayer;\n-import com.esri.arcgisruntime.layers.Layer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.LayerViewStatus;\n import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.portal.Portal;\n+import com.esri.arcgisruntime.portal.PortalItem;\n \n public class DisplayLayerViewStateSample extends Application {\n \n   private MapView mapView;\n-\n-  private static final int MIN_SCALE = 40000000;\n-  private static final int TILED_LAYER = 0;\n-  private static final int IMAGE_LAYER = 1;\n-  private static final int FEATURE_LAYER = 2;\n-\n-  private static final String SERVICE_TIME_ZONES =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/WorldTimeZones/MapServer\";\n-  private static final String SERVICE_CENSUS =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer\";\n-  private static final String SERVICE_RECREATION =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Recreation/FeatureServer/0\";\n+  private FeatureLayer featureLayer;\n \n   @Override\n   public void start(Stage stage) {\n \n     try {\n-      // create stack pane and application scene\n+      // create the stack pane and the application scene\n       StackPane stackPane = new StackPane();\n       Scene scene = new Scene(stackPane);\n       scene.getStylesheets().add(getClass().getResource(\"/display_layer_view_state/style.css\").toExternalForm());\n \n-      // set title, size, and add scene to stage\n+      // set a title, size, and add the scene to the stage\n       stage.setTitle(\"Display Layer View State Sample\");\n       stage.setWidth(800);\n       stage.setHeight(700);\n       stage.setScene(scene);\n       stage.show();\n \n-      // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n-      controlsVBox.getStyleClass().add(\"panel-region\");\n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a label to display the view status\n+      Label layerViewStatusLabel = new Label(\"Current view status: \");\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n+      // create a checkbox UI that toggles the visibility of the feature layer\n+      CheckBox visibilityCheckBox = new CheckBox();\n+      visibilityCheckBox.setText(\"Layer active\");\n+      visibilityCheckBox.setSelected(true);\n+      visibilityCheckBox.setDisable(true);\n+      visibilityCheckBox.setOnAction(event -> featureLayer.setVisible(visibilityCheckBox.isSelected()));\n \n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+      // create a button and a listener to load a feature layer\n+      Button loadLayerButton = new Button(\"Load Layer\");\n \n-      // this layer will be OUT_OF_SCALE outside of its set min/max scales\n-      final ArcGISMapImageLayer imageLayer = new ArcGISMapImageLayer(SERVICE_CENSUS);\n-      imageLayer.setMinScale(MIN_SCALE);\n-      imageLayer.setMaxScale(MIN_SCALE / 10);\n+      loadLayerButton.setOnAction(event -> {\n \n-      // creating a layer from a service feature table\n-      final ServiceFeatureTable featureTable = new ServiceFeatureTable(SERVICE_RECREATION);\n-      final FeatureLayer featureLayer = new FeatureLayer(featureTable);\n+        if (!visibilityCheckBox.isDisabled()) {\n+          visibilityCheckBox.setDisable(true);\n+        }\n \n-      // adding layers to the ArcGISMaps' layer list\n-      final ArcGISMap map = new ArcGISMap();\n-      map.getOperationalLayers().add(tiledLayer);\n-      map.getOperationalLayers().add(imageLayer);\n-      map.getOperationalLayers().add(featureLayer);\n+        if (featureLayer != null) {\n+          map.getOperationalLayers().clear();\n+        }\n \n-      // create a view and set ArcGISMap to it\n-      mapView = new MapView();\n-      mapView.setMap(map);\n+        // create a new feature layer from a portal item\n+        final PortalItem portalItem = new PortalItem(new Portal(\"https://runtime.maps.arcgis.com/\"),\n+          \"b8f4033069f141729ffb298b7418b653\");\n+        featureLayer = new FeatureLayer(portalItem, 0);\n+        //  set a minimum and a maximum scale for the visibility of the feature layer\n+        featureLayer.setMinScale(400000000);\n+        featureLayer.setMaxScale(4000000);\n+        // add the feature layer to the map\n+        map.getOperationalLayers().add(featureLayer);\n+\n+        // add a done loading listener to the feature layer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727a4082061f46f4859c0aed465827e1759b179c"}, "originalPosition": 150}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTY3NTEyOnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTo1ODo0M1rOHI_40Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTo1ODo0M1rOHI_40Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE5NzM5Mw==", "bodyText": "extra space needed here between the parenthesis and curly brackets\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      if (featureLayer.getLoadStatus() == LoadStatus.LOADED){\n          \n          \n            \n                      if (featureLayer.getLoadStatus() == LoadStatus.LOADED) {", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r479197393", "createdAt": "2020-08-28T11:58:43Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -29,116 +36,142 @@\n import javafx.scene.paint.Paint;\n import javafx.stage.Stage;\n \n-import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.ArcGISRuntimeException;\n import com.esri.arcgisruntime.geometry.Point;\n import com.esri.arcgisruntime.geometry.SpatialReferences;\n-import com.esri.arcgisruntime.layers.ArcGISMapImageLayer;\n-import com.esri.arcgisruntime.layers.ArcGISTiledLayer;\n import com.esri.arcgisruntime.layers.FeatureLayer;\n-import com.esri.arcgisruntime.layers.Layer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.LayerViewStatus;\n import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.portal.Portal;\n+import com.esri.arcgisruntime.portal.PortalItem;\n \n public class DisplayLayerViewStateSample extends Application {\n \n   private MapView mapView;\n-\n-  private static final int MIN_SCALE = 40000000;\n-  private static final int TILED_LAYER = 0;\n-  private static final int IMAGE_LAYER = 1;\n-  private static final int FEATURE_LAYER = 2;\n-\n-  private static final String SERVICE_TIME_ZONES =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/WorldTimeZones/MapServer\";\n-  private static final String SERVICE_CENSUS =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer\";\n-  private static final String SERVICE_RECREATION =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Recreation/FeatureServer/0\";\n+  private FeatureLayer featureLayer;\n \n   @Override\n   public void start(Stage stage) {\n \n     try {\n-      // create stack pane and application scene\n+      // create the stack pane and the application scene\n       StackPane stackPane = new StackPane();\n       Scene scene = new Scene(stackPane);\n       scene.getStylesheets().add(getClass().getResource(\"/display_layer_view_state/style.css\").toExternalForm());\n \n-      // set title, size, and add scene to stage\n+      // set a title, size, and add the scene to the stage\n       stage.setTitle(\"Display Layer View State Sample\");\n       stage.setWidth(800);\n       stage.setHeight(700);\n       stage.setScene(scene);\n       stage.show();\n \n-      // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n-      controlsVBox.getStyleClass().add(\"panel-region\");\n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a label to display the view status\n+      Label layerViewStatusLabel = new Label(\"Current view status: \");\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n+      // create a checkbox UI that toggles the visibility of the feature layer\n+      CheckBox visibilityCheckBox = new CheckBox();\n+      visibilityCheckBox.setText(\"Layer active\");\n+      visibilityCheckBox.setSelected(true);\n+      visibilityCheckBox.setDisable(true);\n+      visibilityCheckBox.setOnAction(event -> featureLayer.setVisible(visibilityCheckBox.isSelected()));\n \n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+      // create a button and a listener to load a feature layer\n+      Button loadLayerButton = new Button(\"Load Layer\");\n \n-      // this layer will be OUT_OF_SCALE outside of its set min/max scales\n-      final ArcGISMapImageLayer imageLayer = new ArcGISMapImageLayer(SERVICE_CENSUS);\n-      imageLayer.setMinScale(MIN_SCALE);\n-      imageLayer.setMaxScale(MIN_SCALE / 10);\n+      loadLayerButton.setOnAction(event -> {\n \n-      // creating a layer from a service feature table\n-      final ServiceFeatureTable featureTable = new ServiceFeatureTable(SERVICE_RECREATION);\n-      final FeatureLayer featureLayer = new FeatureLayer(featureTable);\n+        if (!visibilityCheckBox.isDisabled()) {\n+          visibilityCheckBox.setDisable(true);\n+        }\n \n-      // adding layers to the ArcGISMaps' layer list\n-      final ArcGISMap map = new ArcGISMap();\n-      map.getOperationalLayers().add(tiledLayer);\n-      map.getOperationalLayers().add(imageLayer);\n-      map.getOperationalLayers().add(featureLayer);\n+        if (featureLayer != null) {\n+          map.getOperationalLayers().clear();\n+        }\n \n-      // create a view and set ArcGISMap to it\n-      mapView = new MapView();\n-      mapView.setMap(map);\n+        // create a new feature layer from a portal item\n+        final PortalItem portalItem = new PortalItem(new Portal(\"https://runtime.maps.arcgis.com/\"),\n+          \"b8f4033069f141729ffb298b7418b653\");\n+        featureLayer = new FeatureLayer(portalItem, 0);\n+        //  set a minimum and a maximum scale for the visibility of the feature layer\n+        featureLayer.setMinScale(400000000);\n+        featureLayer.setMaxScale(4000000);\n+        // add the feature layer to the map\n+        map.getOperationalLayers().add(featureLayer);\n+\n+        // add a done loading listener to the feature layer\n+        featureLayer.addDoneLoadingListener(() -> {\n+          if (featureLayer.getLoadStatus() == LoadStatus.LOADED){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727a4082061f46f4859c0aed465827e1759b179c"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjM1MjAxOnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1MToxM1rOHJGy4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1MToxM1rOHJGy4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMxMDU2MA==", "bodyText": "can remove the extra white space here", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r479310560", "createdAt": "2020-08-28T13:51:13Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -29,116 +36,142 @@\n import javafx.scene.paint.Paint;\n import javafx.stage.Stage;\n \n-import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.ArcGISRuntimeException;\n import com.esri.arcgisruntime.geometry.Point;\n import com.esri.arcgisruntime.geometry.SpatialReferences;\n-import com.esri.arcgisruntime.layers.ArcGISMapImageLayer;\n-import com.esri.arcgisruntime.layers.ArcGISTiledLayer;\n import com.esri.arcgisruntime.layers.FeatureLayer;\n-import com.esri.arcgisruntime.layers.Layer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.LayerViewStatus;\n import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.portal.Portal;\n+import com.esri.arcgisruntime.portal.PortalItem;\n \n public class DisplayLayerViewStateSample extends Application {\n \n   private MapView mapView;\n-\n-  private static final int MIN_SCALE = 40000000;\n-  private static final int TILED_LAYER = 0;\n-  private static final int IMAGE_LAYER = 1;\n-  private static final int FEATURE_LAYER = 2;\n-\n-  private static final String SERVICE_TIME_ZONES =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/WorldTimeZones/MapServer\";\n-  private static final String SERVICE_CENSUS =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer\";\n-  private static final String SERVICE_RECREATION =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Recreation/FeatureServer/0\";\n+  private FeatureLayer featureLayer;\n \n   @Override\n   public void start(Stage stage) {\n \n     try {\n-      // create stack pane and application scene\n+      // create the stack pane and the application scene\n       StackPane stackPane = new StackPane();\n       Scene scene = new Scene(stackPane);\n       scene.getStylesheets().add(getClass().getResource(\"/display_layer_view_state/style.css\").toExternalForm());\n \n-      // set title, size, and add scene to stage\n+      // set a title, size, and add the scene to the stage\n       stage.setTitle(\"Display Layer View State Sample\");\n       stage.setWidth(800);\n       stage.setHeight(700);\n       stage.setScene(scene);\n       stage.show();\n \n-      // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n-      controlsVBox.getStyleClass().add(\"panel-region\");\n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a label to display the view status\n+      Label layerViewStatusLabel = new Label(\"Current view status: \");\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n+      // create a checkbox UI that toggles the visibility of the feature layer\n+      CheckBox visibilityCheckBox = new CheckBox();\n+      visibilityCheckBox.setText(\"Layer active\");\n+      visibilityCheckBox.setSelected(true);\n+      visibilityCheckBox.setDisable(true);\n+      visibilityCheckBox.setOnAction(event -> featureLayer.setVisible(visibilityCheckBox.isSelected()));\n \n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+      // create a button and a listener to load a feature layer\n+      Button loadLayerButton = new Button(\"Load Layer\");\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727a4082061f46f4859c0aed465827e1759b179c"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjM2Mzc4OnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1MzoxNFrOHJG6ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1MzoxNFrOHJG6ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMxMjQ4NQ==", "bodyText": "let's add in a comment or two here to help a user understand why these steps are necessary:\n// disable the checkbox when loading/reloading the feature layer, and, if it exists, remove it by clearing the map's operational layers", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r479312485", "createdAt": "2020-08-28T13:53:14Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -29,116 +36,142 @@\n import javafx.scene.paint.Paint;\n import javafx.stage.Stage;\n \n-import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.ArcGISRuntimeException;\n import com.esri.arcgisruntime.geometry.Point;\n import com.esri.arcgisruntime.geometry.SpatialReferences;\n-import com.esri.arcgisruntime.layers.ArcGISMapImageLayer;\n-import com.esri.arcgisruntime.layers.ArcGISTiledLayer;\n import com.esri.arcgisruntime.layers.FeatureLayer;\n-import com.esri.arcgisruntime.layers.Layer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.LayerViewStatus;\n import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.portal.Portal;\n+import com.esri.arcgisruntime.portal.PortalItem;\n \n public class DisplayLayerViewStateSample extends Application {\n \n   private MapView mapView;\n-\n-  private static final int MIN_SCALE = 40000000;\n-  private static final int TILED_LAYER = 0;\n-  private static final int IMAGE_LAYER = 1;\n-  private static final int FEATURE_LAYER = 2;\n-\n-  private static final String SERVICE_TIME_ZONES =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/WorldTimeZones/MapServer\";\n-  private static final String SERVICE_CENSUS =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer\";\n-  private static final String SERVICE_RECREATION =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Recreation/FeatureServer/0\";\n+  private FeatureLayer featureLayer;\n \n   @Override\n   public void start(Stage stage) {\n \n     try {\n-      // create stack pane and application scene\n+      // create the stack pane and the application scene\n       StackPane stackPane = new StackPane();\n       Scene scene = new Scene(stackPane);\n       scene.getStylesheets().add(getClass().getResource(\"/display_layer_view_state/style.css\").toExternalForm());\n \n-      // set title, size, and add scene to stage\n+      // set a title, size, and add the scene to the stage\n       stage.setTitle(\"Display Layer View State Sample\");\n       stage.setWidth(800);\n       stage.setHeight(700);\n       stage.setScene(scene);\n       stage.show();\n \n-      // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n-      controlsVBox.getStyleClass().add(\"panel-region\");\n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a label to display the view status\n+      Label layerViewStatusLabel = new Label(\"Current view status: \");\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n+      // create a checkbox UI that toggles the visibility of the feature layer\n+      CheckBox visibilityCheckBox = new CheckBox();\n+      visibilityCheckBox.setText(\"Layer active\");\n+      visibilityCheckBox.setSelected(true);\n+      visibilityCheckBox.setDisable(true);\n+      visibilityCheckBox.setOnAction(event -> featureLayer.setVisible(visibilityCheckBox.isSelected()));\n \n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+      // create a button and a listener to load a feature layer\n+      Button loadLayerButton = new Button(\"Load Layer\");\n \n-      // this layer will be OUT_OF_SCALE outside of its set min/max scales\n-      final ArcGISMapImageLayer imageLayer = new ArcGISMapImageLayer(SERVICE_CENSUS);\n-      imageLayer.setMinScale(MIN_SCALE);\n-      imageLayer.setMaxScale(MIN_SCALE / 10);\n+      loadLayerButton.setOnAction(event -> {\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727a4082061f46f4859c0aed465827e1759b179c"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjM3NzQ5OnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1NTozN1rOHJHDSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1NTozN1rOHJHDSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMxNDc2MQ==", "bodyText": "looks like a 0 needs to be removed here as discussed so we get the error message when zooming out", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r479314761", "createdAt": "2020-08-28T13:55:37Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -29,116 +36,142 @@\n import javafx.scene.paint.Paint;\n import javafx.stage.Stage;\n \n-import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.ArcGISRuntimeException;\n import com.esri.arcgisruntime.geometry.Point;\n import com.esri.arcgisruntime.geometry.SpatialReferences;\n-import com.esri.arcgisruntime.layers.ArcGISMapImageLayer;\n-import com.esri.arcgisruntime.layers.ArcGISTiledLayer;\n import com.esri.arcgisruntime.layers.FeatureLayer;\n-import com.esri.arcgisruntime.layers.Layer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.LayerViewStatus;\n import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.portal.Portal;\n+import com.esri.arcgisruntime.portal.PortalItem;\n \n public class DisplayLayerViewStateSample extends Application {\n \n   private MapView mapView;\n-\n-  private static final int MIN_SCALE = 40000000;\n-  private static final int TILED_LAYER = 0;\n-  private static final int IMAGE_LAYER = 1;\n-  private static final int FEATURE_LAYER = 2;\n-\n-  private static final String SERVICE_TIME_ZONES =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/WorldTimeZones/MapServer\";\n-  private static final String SERVICE_CENSUS =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer\";\n-  private static final String SERVICE_RECREATION =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Recreation/FeatureServer/0\";\n+  private FeatureLayer featureLayer;\n \n   @Override\n   public void start(Stage stage) {\n \n     try {\n-      // create stack pane and application scene\n+      // create the stack pane and the application scene\n       StackPane stackPane = new StackPane();\n       Scene scene = new Scene(stackPane);\n       scene.getStylesheets().add(getClass().getResource(\"/display_layer_view_state/style.css\").toExternalForm());\n \n-      // set title, size, and add scene to stage\n+      // set a title, size, and add the scene to the stage\n       stage.setTitle(\"Display Layer View State Sample\");\n       stage.setWidth(800);\n       stage.setHeight(700);\n       stage.setScene(scene);\n       stage.show();\n \n-      // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n-      controlsVBox.getStyleClass().add(\"panel-region\");\n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a label to display the view status\n+      Label layerViewStatusLabel = new Label(\"Current view status: \");\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n+      // create a checkbox UI that toggles the visibility of the feature layer\n+      CheckBox visibilityCheckBox = new CheckBox();\n+      visibilityCheckBox.setText(\"Layer active\");\n+      visibilityCheckBox.setSelected(true);\n+      visibilityCheckBox.setDisable(true);\n+      visibilityCheckBox.setOnAction(event -> featureLayer.setVisible(visibilityCheckBox.isSelected()));\n \n-      // create three layers to add to the ArcGISMap\n-      final ArcGISTiledLayer tiledLayer = new ArcGISTiledLayer(SERVICE_TIME_ZONES);\n+      // create a button and a listener to load a feature layer\n+      Button loadLayerButton = new Button(\"Load Layer\");\n \n-      // this layer will be OUT_OF_SCALE outside of its set min/max scales\n-      final ArcGISMapImageLayer imageLayer = new ArcGISMapImageLayer(SERVICE_CENSUS);\n-      imageLayer.setMinScale(MIN_SCALE);\n-      imageLayer.setMaxScale(MIN_SCALE / 10);\n+      loadLayerButton.setOnAction(event -> {\n \n-      // creating a layer from a service feature table\n-      final ServiceFeatureTable featureTable = new ServiceFeatureTable(SERVICE_RECREATION);\n-      final FeatureLayer featureLayer = new FeatureLayer(featureTable);\n+        if (!visibilityCheckBox.isDisabled()) {\n+          visibilityCheckBox.setDisable(true);\n+        }\n \n-      // adding layers to the ArcGISMaps' layer list\n-      final ArcGISMap map = new ArcGISMap();\n-      map.getOperationalLayers().add(tiledLayer);\n-      map.getOperationalLayers().add(imageLayer);\n-      map.getOperationalLayers().add(featureLayer);\n+        if (featureLayer != null) {\n+          map.getOperationalLayers().clear();\n+        }\n \n-      // create a view and set ArcGISMap to it\n-      mapView = new MapView();\n-      mapView.setMap(map);\n+        // create a new feature layer from a portal item\n+        final PortalItem portalItem = new PortalItem(new Portal(\"https://runtime.maps.arcgis.com/\"),\n+          \"b8f4033069f141729ffb298b7418b653\");\n+        featureLayer = new FeatureLayer(portalItem, 0);\n+        //  set a minimum and a maximum scale for the visibility of the feature layer\n+        featureLayer.setMinScale(400000000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727a4082061f46f4859c0aed465827e1759b179c"}, "originalPosition": 145}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjM4OTQ0OnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1Nzo0NFrOHJHLBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo1Nzo0NFrOHJHLBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMxNjc0MQ==", "bodyText": "add new line at the end of the file (standard practice)", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r479316741", "createdAt": "2020-08-28T13:57:44Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -169,4 +202,4 @@ public static void main(String[] args) {\n     Application.launch(args);\n   }\n \n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727a4082061f46f4859c0aed465827e1759b179c"}, "originalPosition": 239}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjQ3MjYxOnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDoxMjozN1rOHJIB7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDo1MTo0OFrOHJJnQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMzMDc5Ng==", "bodyText": "just some word smithing suggestions:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Click \"Load Layer\" to add a new layer to the map. The current view status of the layer will display at the top of the sample. Zoom in and out of the map and note that the layer disappears when the map is scaled outside of its min and max scale range. If you disconnect your device from the network and pan around the map, a warning alert will display. Reconnect to the network to remove the warning. Turn the layer's visibility off by unchecking the \"layer active\" checkbox. The layer's current view status will update accordingly as you carry out these actions.\n          \n          \n            \n            Click \"Load Layer\" to add a feature layer to the map. The current view status of the layer will display at the top of the sample. Zoom in and out of the map and note the layer disappears when the map is scaled outside of its min and max scale range. Control the layer's visibility with the \"Layer visibility\" checkbox. If you disconnect your device from the network and pan around the map, a warning alert will display. Reconnect to the network to remove the warning. The layer's current view status will update accordingly as you carry out these actions.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r479330796", "createdAt": "2020-08-28T14:12:37Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-layer-view-state/README.md", "diffHunk": "@@ -6,33 +6,31 @@ Determine if a layer is currently being viewed.\n \n ## Use case\n \n-The view state includes information on the loading state of layers and whether layers are visible at a given scale. For example, you might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. You then might show a loading spinner next to its name when the view state is LOADING, gray out the name when NOT_VISIBLE or OUT_OF_SCALE, show the name normally when ACTIVE, or with an error icon when the state is ERROR.\n+The view status includes information on the loading state of layers and whether layers are visible at a given scale. You might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. For example, you could show a loading spinner next to its name when the view status is `LOADING`, grey out the name when `NOT_VISIBLE` or `OUT_OF_SCALE`, show the name normally when `ACTIVE`, or with a warning or error icon when the status is `WARNING` or `ERROR`.\n \n ## How to use the sample\n \n-Pan and zoom around in the map. Each layer's view status is displayed. Notice that some layers configured with a min and max scale change to `OUT_OF_SCALE` at certain scales.\n+Click \"Load Layer\" to add a new layer to the map. The current view status of the layer will display at the top of the sample. Zoom in and out of the map and note that the layer disappears when the map is scaled outside of its min and max scale range. If you disconnect your device from the network and pan around the map, a warning alert will display. Reconnect to the network to remove the warning. Turn the layer's visibility off by unchecking the \"layer active\" checkbox. The layer's current view status will update accordingly as you carry out these actions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727a4082061f46f4859c0aed465827e1759b179c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1NjczNw==", "bodyText": "Implemented as above, but making \"Layer visible\" checkbox as discussed", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r479356737", "createdAt": "2020-08-28T14:51:48Z", "author": {"login": "jenmerritt"}, "path": "map_view/display-layer-view-state/README.md", "diffHunk": "@@ -6,33 +6,31 @@ Determine if a layer is currently being viewed.\n \n ## Use case\n \n-The view state includes information on the loading state of layers and whether layers are visible at a given scale. For example, you might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. You then might show a loading spinner next to its name when the view state is LOADING, gray out the name when NOT_VISIBLE or OUT_OF_SCALE, show the name normally when ACTIVE, or with an error icon when the state is ERROR.\n+The view status includes information on the loading state of layers and whether layers are visible at a given scale. You might change how a layer is displayed in a layer list to communicate whether it is being viewed in the map. For example, you could show a loading spinner next to its name when the view status is `LOADING`, grey out the name when `NOT_VISIBLE` or `OUT_OF_SCALE`, show the name normally when `ACTIVE`, or with a warning or error icon when the status is `WARNING` or `ERROR`.\n \n ## How to use the sample\n \n-Pan and zoom around in the map. Each layer's view status is displayed. Notice that some layers configured with a min and max scale change to `OUT_OF_SCALE` at certain scales.\n+Click \"Load Layer\" to add a new layer to the map. The current view status of the layer will display at the top of the sample. Zoom in and out of the map and note that the layer disappears when the map is scaled outside of its min and max scale range. If you disconnect your device from the network and pan around the map, a warning alert will display. Reconnect to the network to remove the warning. Turn the layer's visibility off by unchecking the \"layer active\" checkbox. The layer's current view status will update accordingly as you carry out these actions.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMzMDc5Ng=="}, "originalCommit": {"oid": "727a4082061f46f4859c0aed465827e1759b179c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjQ3NTc5OnYy", "diffSide": "RIGHT", "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDoxMzoxNVrOHJIELA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDo1MDoyN1rOHJJj7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMzMTM3Mg==", "bodyText": "now I understand this sample better, I think we should rename this to \"Layer visibility\"", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r479331372", "createdAt": "2020-08-28T14:13:15Z", "author": {"login": "Rachael-E"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -29,116 +36,142 @@\n import javafx.scene.paint.Paint;\n import javafx.stage.Stage;\n \n-import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.ArcGISRuntimeException;\n import com.esri.arcgisruntime.geometry.Point;\n import com.esri.arcgisruntime.geometry.SpatialReferences;\n-import com.esri.arcgisruntime.layers.ArcGISMapImageLayer;\n-import com.esri.arcgisruntime.layers.ArcGISTiledLayer;\n import com.esri.arcgisruntime.layers.FeatureLayer;\n-import com.esri.arcgisruntime.layers.Layer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.LayerViewStatus;\n import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.portal.Portal;\n+import com.esri.arcgisruntime.portal.PortalItem;\n \n public class DisplayLayerViewStateSample extends Application {\n \n   private MapView mapView;\n-\n-  private static final int MIN_SCALE = 40000000;\n-  private static final int TILED_LAYER = 0;\n-  private static final int IMAGE_LAYER = 1;\n-  private static final int FEATURE_LAYER = 2;\n-\n-  private static final String SERVICE_TIME_ZONES =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/WorldTimeZones/MapServer\";\n-  private static final String SERVICE_CENSUS =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer\";\n-  private static final String SERVICE_RECREATION =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Recreation/FeatureServer/0\";\n+  private FeatureLayer featureLayer;\n \n   @Override\n   public void start(Stage stage) {\n \n     try {\n-      // create stack pane and application scene\n+      // create the stack pane and the application scene\n       StackPane stackPane = new StackPane();\n       Scene scene = new Scene(stackPane);\n       scene.getStylesheets().add(getClass().getResource(\"/display_layer_view_state/style.css\").toExternalForm());\n \n-      // set title, size, and add scene to stage\n+      // set a title, size, and add the scene to the stage\n       stage.setTitle(\"Display Layer View State Sample\");\n       stage.setWidth(800);\n       stage.setHeight(700);\n       stage.setScene(scene);\n       stage.show();\n \n-      // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n-      controlsVBox.getStyleClass().add(\"panel-region\");\n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a label to display the view status\n+      Label layerViewStatusLabel = new Label(\"Current view status: \");\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n+      // create a checkbox UI that toggles the visibility of the feature layer\n+      CheckBox visibilityCheckBox = new CheckBox();\n+      visibilityCheckBox.setText(\"Layer active\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "727a4082061f46f4859c0aed465827e1759b179c"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1NTg4NA==", "bodyText": "Making \"layer visible\" as discussed", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/542#discussion_r479355884", "createdAt": "2020-08-28T14:50:27Z", "author": {"login": "jenmerritt"}, "path": "map_view/display-layer-view-state/src/main/java/com/esri/samples/display_layer_view_state/DisplayLayerViewStateSample.java", "diffHunk": "@@ -29,116 +36,142 @@\n import javafx.scene.paint.Paint;\n import javafx.stage.Stage;\n \n-import com.esri.arcgisruntime.data.ServiceFeatureTable;\n+import com.esri.arcgisruntime.ArcGISRuntimeException;\n import com.esri.arcgisruntime.geometry.Point;\n import com.esri.arcgisruntime.geometry.SpatialReferences;\n-import com.esri.arcgisruntime.layers.ArcGISMapImageLayer;\n-import com.esri.arcgisruntime.layers.ArcGISTiledLayer;\n import com.esri.arcgisruntime.layers.FeatureLayer;\n-import com.esri.arcgisruntime.layers.Layer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n import com.esri.arcgisruntime.mapping.Viewpoint;\n+import com.esri.arcgisruntime.mapping.view.LayerViewStatus;\n import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.portal.Portal;\n+import com.esri.arcgisruntime.portal.PortalItem;\n \n public class DisplayLayerViewStateSample extends Application {\n \n   private MapView mapView;\n-\n-  private static final int MIN_SCALE = 40000000;\n-  private static final int TILED_LAYER = 0;\n-  private static final int IMAGE_LAYER = 1;\n-  private static final int FEATURE_LAYER = 2;\n-\n-  private static final String SERVICE_TIME_ZONES =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/WorldTimeZones/MapServer\";\n-  private static final String SERVICE_CENSUS =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Census/MapServer\";\n-  private static final String SERVICE_RECREATION =\n-      \"https://sampleserver6.arcgisonline.com/arcgis/rest/services/Recreation/FeatureServer/0\";\n+  private FeatureLayer featureLayer;\n \n   @Override\n   public void start(Stage stage) {\n \n     try {\n-      // create stack pane and application scene\n+      // create the stack pane and the application scene\n       StackPane stackPane = new StackPane();\n       Scene scene = new Scene(stackPane);\n       scene.getStylesheets().add(getClass().getResource(\"/display_layer_view_state/style.css\").toExternalForm());\n \n-      // set title, size, and add scene to stage\n+      // set a title, size, and add the scene to the stage\n       stage.setTitle(\"Display Layer View State Sample\");\n       stage.setWidth(800);\n       stage.setHeight(700);\n       stage.setScene(scene);\n       stage.show();\n \n-      // create a control panel\n-      VBox controlsVBox = new VBox(6);\n-      controlsVBox.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.3)\"), CornerRadii.EMPTY,\n-          Insets.EMPTY)));\n-      controlsVBox.setPadding(new Insets(10.0));\n-      controlsVBox.setMaxSize(220, 90);\n-      controlsVBox.getStyleClass().add(\"panel-region\");\n+      // create an ArcGISMap with the topographic basemap\n+      ArcGISMap map = new ArcGISMap(Basemap.createTopographic());\n+\n+      // create a map view and set the ArcGISMap to it\n+      mapView = new MapView();\n+      mapView.setMap(map);\n \n-      // create labels to display the view status of each layer\n-      Label worldTimeZonesLabel = new Label(\"World Time Zones: \");\n-      Label censusLabel = new Label(\"Census: \");\n-      Label facilitiesLabel = new Label(\"Facilities: \");\n+      // set the initial viewpoint for the map view\n+      mapView.setViewpoint(new Viewpoint(new Point(-11e6, 45e5, SpatialReferences.getWebMercator()), 40000000));\n \n-      worldTimeZonesLabel.getStyleClass().add(\"panel-label\");\n-      censusLabel.getStyleClass().add(\"panel-label\");\n-      facilitiesLabel.getStyleClass().add(\"panel-label\");\n+      // create a label to display the view status\n+      Label layerViewStatusLabel = new Label(\"Current view status: \");\n \n-      // add labels to the control panel\n-      controlsVBox.getChildren().addAll(worldTimeZonesLabel, censusLabel, facilitiesLabel);\n+      // create a checkbox UI that toggles the visibility of the feature layer\n+      CheckBox visibilityCheckBox = new CheckBox();\n+      visibilityCheckBox.setText(\"Layer active\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMzMTM3Mg=="}, "originalCommit": {"oid": "727a4082061f46f4859c0aed465827e1759b179c"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 71, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}