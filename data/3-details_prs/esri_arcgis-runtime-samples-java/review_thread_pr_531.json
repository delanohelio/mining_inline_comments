{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMjY2ODAz", "number": 531, "reviewThreads": {"totalCount": 39, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNToxOToyM1rOEPLepQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzozNToxNVrOER6K-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzUyMTY1OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNToxOToyM1rOGyv96w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNToxOToyM1rOGyv96w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2Nzg4Mw==", "bodyText": "We generally want to have the imports in a specific order, with the Runtime imports coming last.\nLuckily we can set up the IDE to take care of that for us!\nTheres some details in Simone's recent PR showing how to set it up:\n#528 (comment)", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r455867883", "createdAt": "2020-07-16T15:19:23Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "diffHunk": "@@ -18,12 +18,15 @@\n \n import java.util.Arrays;\n \n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzUzMDMxOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNToyMToxNFrOGywDIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNToyMToxNFrOGywDIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2OTIxNg==", "bodyText": "In samples, we generally don't define a string variable for URLs unless they are being re-used, so here you could just write this URL directly inside the method call:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\";\n          \n          \n            \n                  ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);\n          \n          \n            \n                  ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r455869216", "createdAt": "2020-07-16T15:21:14Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "diffHunk": "@@ -87,6 +90,11 @@ public void start(Stage stage) {\n       surface.getElevationSources().add(elevationSource);\n       scene.setBaseSurface(surface);\n \n+      // add a scene layer\n+      final String buildings = \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\";\n+      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(buildings);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzU0NDY2OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNToyNDoyMlrOGywMEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzoxNjoxNVrOG23cGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg3MTUwNA==", "bodyText": "Although these var names might be more accurate (I don't actuall know!), the rest of the vars in this sample have a slightly different naming convention. So perhaps we should update these to match the rest (e.g.relativeToSceneOverlay). I'll leave the final word here to @Rachael-E , she's the nomenclature expert.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Point surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n          \n          \n            \n                  Point sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n          \n          \n            \n                  Point relativeToSurfacePoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n          \n          \n            \n                  Point relativeToScenePoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r455871504", "createdAt": "2020-07-16T15:24:22Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "diffHunk": "@@ -100,43 +108,55 @@ public void start(Stage stage) {\n       GraphicsOverlay absoluteOverlay = new GraphicsOverlay();\n       absoluteOverlay.getSceneProperties().setSurfacePlacement(SurfacePlacement.ABSOLUTE);\n \n-      // create point for graphic location\n-      Point point = new Point(-4.04, 53.06, 1000, SpatialReferences.getWgs84());\n+      GraphicsOverlay relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      Point surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+      Point sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg4Nzg5OA==", "bodyText": "Have left this for Rachael to comment when she reviews.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458887898", "createdAt": "2020-07-22T15:39:16Z", "author": {"login": "jenmerritt"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "diffHunk": "@@ -100,43 +108,55 @@ public void start(Stage stage) {\n       GraphicsOverlay absoluteOverlay = new GraphicsOverlay();\n       absoluteOverlay.getSceneProperties().setSurfacePlacement(SurfacePlacement.ABSOLUTE);\n \n-      // create point for graphic location\n-      Point point = new Point(-4.04, 53.06, 1000, SpatialReferences.getWgs84());\n+      GraphicsOverlay relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      Point surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+      Point sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg3MTUwNA=="}, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE4NDYwMw==", "bodyText": "sorry @jenmerritt I just saw this. Let's go with Jon's suggestion, it makes it more clear what the points are for.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r460184603", "createdAt": "2020-07-24T17:16:15Z", "author": {"login": "Rachael-E"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "diffHunk": "@@ -100,43 +108,55 @@ public void start(Stage stage) {\n       GraphicsOverlay absoluteOverlay = new GraphicsOverlay();\n       absoluteOverlay.getSceneProperties().setSurfacePlacement(SurfacePlacement.ABSOLUTE);\n \n-      // create point for graphic location\n-      Point point = new Point(-4.04, 53.06, 1000, SpatialReferences.getWgs84());\n+      GraphicsOverlay relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      Point surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+      Point sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg3MTUwNA=="}, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzU0NzgxOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNToyNTowNFrOGywN_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNToyNTowNFrOGywN_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg3MTk5Nw==", "bodyText": "Good catch on this - the sample was previously called elevation mode in Java, but it was renamed surface placement to be consistent with the other sdks!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r455871997", "createdAt": "2020-07-16T15:25:04Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "diffHunk": "@@ -100,43 +108,55 @@ public void start(Stage stage) {\n       GraphicsOverlay absoluteOverlay = new GraphicsOverlay();\n       absoluteOverlay.getSceneProperties().setSurfacePlacement(SurfacePlacement.ABSOLUTE);\n \n-      // create point for graphic location\n-      Point point = new Point(-4.04, 53.06, 1000, SpatialReferences.getWgs84());\n+      GraphicsOverlay relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      Point surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+      Point sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n \n       // create a red triangle symbol\n-      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 10);\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n \n-      // create a text symbol for each elevation mode\n+      // create a text symbol for each surface placement type", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzU2MjkyOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNToyODoyNVrOGywXlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNToyODoyNVrOGywXlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg3NDQ1NQ==", "bodyText": "Since this is getting to be quite a lot of UI setup, you would want to make this sample into an FXML one, and define this slider (as well as the toggle buttons) in the main.fxml file.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r455874455", "createdAt": "2020-07-16T15:28:25Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "diffHunk": "@@ -168,10 +188,57 @@ public void start(Stage stage) {\n       controlsVBox.getChildren()\n           .addAll(toggleGroupLabel, drapedBillboardedRadioButton, drapedFlatRadioButton);\n \n-      // add the scene view and control box to the stack pane\n-      stackPane.getChildren().addAll(sceneView, controlsVBox);\n+      // create slider to adjust the z-value\n+      Slider zValueSlider = new Slider(0, 150, 70);\n+      Label zValueSliderLabel = new Label(\"Z-Value:\");\n+      zValueSlider.setShowTickMarks(true);\n+      zValueSlider.setShowTickLabels(true);\n+      zValueSlider.setMajorTickUnit(50);\n+      zValueSlider.setOrientation(Orientation.VERTICAL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzU5MjIxOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTozNDo0OVrOGywp4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTozNDo0OVrOGywp4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg3OTEzNg==", "bodyText": "I think a loop would be fine here, since it's quite clear that we're updating all the graphics in all the graphics overlays with one specific Point", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r455879136", "createdAt": "2020-07-16T15:34:49Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "diffHunk": "@@ -168,10 +188,57 @@ public void start(Stage stage) {\n       controlsVBox.getChildren()\n           .addAll(toggleGroupLabel, drapedBillboardedRadioButton, drapedFlatRadioButton);\n \n-      // add the scene view and control box to the stack pane\n-      stackPane.getChildren().addAll(sceneView, controlsVBox);\n+      // create slider to adjust the z-value\n+      Slider zValueSlider = new Slider(0, 150, 70);\n+      Label zValueSliderLabel = new Label(\"Z-Value:\");\n+      zValueSlider.setShowTickMarks(true);\n+      zValueSlider.setShowTickLabels(true);\n+      zValueSlider.setMajorTickUnit(50);\n+      zValueSlider.setOrientation(Orientation.VERTICAL);\n+\n+      zValueSlider.valueProperty().addListener((observableValue, oldValue, newValue) -> {\n+\n+        // get z-value from slider\n+        Double zValueFromSlider = zValueSlider.getValue();\n+\n+        // create new points with updated z-value\n+        Point newSurfaceRelatedPoint = new Point(surfaceRelatedPoint.getX(), surfaceRelatedPoint.getY(), zValueFromSlider, surfaceRelatedPoint.getSpatialReference());\n+        Point newSceneRelatedPoint = new Point(sceneRelatedPoint.getX(), sceneRelatedPoint.getY(), zValueFromSlider, sceneRelatedPoint.getSpatialReference());\n+\n+        // update the geometry of each of the existing graphics (both the symbol and label) to the relevant new point\n+        drapedBillboardedOverlay.getGraphics().get(0).setGeometry(newSurfaceRelatedPoint);\n+        drapedBillboardedOverlay.getGraphics().get(1).setGeometry(newSurfaceRelatedPoint);\n+\n+        drapedFlatOverlay.getGraphics().get(0).setGeometry(newSurfaceRelatedPoint);\n+        drapedFlatOverlay.getGraphics().get(1).setGeometry(newSurfaceRelatedPoint);\n+\n+        relativeOverlay.getGraphics().get(0).setGeometry(newSurfaceRelatedPoint);\n+        relativeOverlay.getGraphics().get(1).setGeometry(newSurfaceRelatedPoint);\n+\n+        absoluteOverlay.getGraphics().get(0).setGeometry(newSurfaceRelatedPoint);\n+        absoluteOverlay.getGraphics().get(1).setGeometry(newSurfaceRelatedPoint);\n+\n+        relativeToSceneOverlay.getGraphics().get(0).setGeometry(newSceneRelatedPoint);\n+        relativeToSceneOverlay.getGraphics().get(1).setGeometry(newSceneRelatedPoint);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzYwODExOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTozODozNFrOGyw0CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo0MDowNVrOG1oVIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4MTczNw==", "bodyText": "Thinking from a performance point of view (which might not entirely be in the spirit of samples):\nEvery time one of these slider event fires, these two lines are repeating the .getX(), .getY() and .getSpatialReference() calls. We know these aren't likely to change. The only thing we really change is the Z-value. So to save ourselves doing that, we could just save these values into variables outside of this event listener, and refer to them.\nWhat you definitely can do is save the spatial reference as a varialbe outside of this lambda, and re-use it, since it'll be the same for both points\nI'll leave it again to @Rachael-E to decide whether this should be updated, or left as is for user clarity. Either way, might be a helpful observation regarding not repeating method calls?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r455881737", "createdAt": "2020-07-16T15:38:34Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "diffHunk": "@@ -168,10 +188,57 @@ public void start(Stage stage) {\n       controlsVBox.getChildren()\n           .addAll(toggleGroupLabel, drapedBillboardedRadioButton, drapedFlatRadioButton);\n \n-      // add the scene view and control box to the stack pane\n-      stackPane.getChildren().addAll(sceneView, controlsVBox);\n+      // create slider to adjust the z-value\n+      Slider zValueSlider = new Slider(0, 150, 70);\n+      Label zValueSliderLabel = new Label(\"Z-Value:\");\n+      zValueSlider.setShowTickMarks(true);\n+      zValueSlider.setShowTickLabels(true);\n+      zValueSlider.setMajorTickUnit(50);\n+      zValueSlider.setOrientation(Orientation.VERTICAL);\n+\n+      zValueSlider.valueProperty().addListener((observableValue, oldValue, newValue) -> {\n+\n+        // get z-value from slider\n+        Double zValueFromSlider = zValueSlider.getValue();\n+\n+        // create new points with updated z-value\n+        Point newSurfaceRelatedPoint = new Point(surfaceRelatedPoint.getX(), surfaceRelatedPoint.getY(), zValueFromSlider, surfaceRelatedPoint.getSpatialReference());\n+        Point newSceneRelatedPoint = new Point(sceneRelatedPoint.getX(), sceneRelatedPoint.getY(), zValueFromSlider, sceneRelatedPoint.getSpatialReference());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg4ODQ4Mg==", "bodyText": "This is probably resolved via the loop that's been implemented in the latest commits.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458888482", "createdAt": "2020-07-22T15:40:05Z", "author": {"login": "jenmerritt"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "diffHunk": "@@ -168,10 +188,57 @@ public void start(Stage stage) {\n       controlsVBox.getChildren()\n           .addAll(toggleGroupLabel, drapedBillboardedRadioButton, drapedFlatRadioButton);\n \n-      // add the scene view and control box to the stack pane\n-      stackPane.getChildren().addAll(sceneView, controlsVBox);\n+      // create slider to adjust the z-value\n+      Slider zValueSlider = new Slider(0, 150, 70);\n+      Label zValueSliderLabel = new Label(\"Z-Value:\");\n+      zValueSlider.setShowTickMarks(true);\n+      zValueSlider.setShowTickLabels(true);\n+      zValueSlider.setMajorTickUnit(50);\n+      zValueSlider.setOrientation(Orientation.VERTICAL);\n+\n+      zValueSlider.valueProperty().addListener((observableValue, oldValue, newValue) -> {\n+\n+        // get z-value from slider\n+        Double zValueFromSlider = zValueSlider.getValue();\n+\n+        // create new points with updated z-value\n+        Point newSurfaceRelatedPoint = new Point(surfaceRelatedPoint.getX(), surfaceRelatedPoint.getY(), zValueFromSlider, surfaceRelatedPoint.getSpatialReference());\n+        Point newSceneRelatedPoint = new Point(sceneRelatedPoint.getX(), sceneRelatedPoint.getY(), zValueFromSlider, sceneRelatedPoint.getSpatialReference());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4MTczNw=="}, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzY1MDYwOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo0ODozMVrOGyxOsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo0ODozMVrOGyxOsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4ODU2Mg==", "bodyText": "There's generally no need to 'chop' the method chaining if the line doesn't get too long \ud83d\ude04", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r455888562", "createdAt": "2020-07-16T15:48:31Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "diffHunk": "@@ -168,10 +188,57 @@ public void start(Stage stage) {\n       controlsVBox.getChildren()\n           .addAll(toggleGroupLabel, drapedBillboardedRadioButton, drapedFlatRadioButton);\n \n-      // add the scene view and control box to the stack pane\n-      stackPane.getChildren().addAll(sceneView, controlsVBox);\n+      // create slider to adjust the z-value\n+      Slider zValueSlider = new Slider(0, 150, 70);\n+      Label zValueSliderLabel = new Label(\"Z-Value:\");\n+      zValueSlider.setShowTickMarks(true);\n+      zValueSlider.setShowTickLabels(true);\n+      zValueSlider.setMajorTickUnit(50);\n+      zValueSlider.setOrientation(Orientation.VERTICAL);\n+\n+      zValueSlider.valueProperty().addListener((observableValue, oldValue, newValue) -> {\n+\n+        // get z-value from slider\n+        Double zValueFromSlider = zValueSlider.getValue();\n+\n+        // create new points with updated z-value\n+        Point newSurfaceRelatedPoint = new Point(surfaceRelatedPoint.getX(), surfaceRelatedPoint.getY(), zValueFromSlider, surfaceRelatedPoint.getSpatialReference());\n+        Point newSceneRelatedPoint = new Point(sceneRelatedPoint.getX(), sceneRelatedPoint.getY(), zValueFromSlider, sceneRelatedPoint.getSpatialReference());\n+\n+        // update the geometry of each of the existing graphics (both the symbol and label) to the relevant new point\n+        drapedBillboardedOverlay.getGraphics().get(0).setGeometry(newSurfaceRelatedPoint);\n+        drapedBillboardedOverlay.getGraphics().get(1).setGeometry(newSurfaceRelatedPoint);\n+\n+        drapedFlatOverlay.getGraphics().get(0).setGeometry(newSurfaceRelatedPoint);\n+        drapedFlatOverlay.getGraphics().get(1).setGeometry(newSurfaceRelatedPoint);\n+\n+        relativeOverlay.getGraphics().get(0).setGeometry(newSurfaceRelatedPoint);\n+        relativeOverlay.getGraphics().get(1).setGeometry(newSurfaceRelatedPoint);\n+\n+        absoluteOverlay.getGraphics().get(0).setGeometry(newSurfaceRelatedPoint);\n+        absoluteOverlay.getGraphics().get(1).setGeometry(newSurfaceRelatedPoint);\n+\n+        relativeToSceneOverlay.getGraphics().get(0).setGeometry(newSceneRelatedPoint);\n+        relativeToSceneOverlay.getGraphics().get(1).setGeometry(newSceneRelatedPoint);\n+\n+      });\n+\n+      // create a controls area for the z-value slider\n+      VBox sliderVBox = new VBox();\n+      sliderVBox.setBackground(\n+        new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.5)\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+      sliderVBox.setPadding(new Insets(10.0));\n+      sliderVBox.setMaxSize(70, 200);\n+      sliderVBox.getStyleClass().add(\"panel-region\");\n+      sliderVBox.getChildren()\n+        .addAll(zValueSliderLabel, zValueSlider);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzY2NzY4OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo1MjoxN1rOGyxZKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo1MjoxN1rOGyxZKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5MTI0Mg==", "bodyText": "You can define a lot of this stuff in the CSS file itself, so that it's easier for the users to focus just on the control elements.\nOnce you do sliderVBox.getStyleClass().add(\"panel-region\");, all the CSS rules targeting this class would apply, and then you could just apply the style class to both the slider and the radio-button vboxes.\nCheck out these files from animate images with image overlay for some inspiration:\nhttps://github.com/Esri/arcgis-runtime-samples-java/blob/master/scene/animate-images-with-image-overlay/src/main/resources/animate_images_with_image_overlay/style.css\nhttps://github.com/Esri/arcgis-runtime-samples-java/blob/master/scene/animate-images-with-image-overlay/src/main/resources/animate_images_with_image_overlay/main.fxml\nYou could also extract the styling from the VBoxes, Slider, and future RadioButtons.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r455891242", "createdAt": "2020-07-16T15:52:17Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "diffHunk": "@@ -168,10 +188,57 @@ public void start(Stage stage) {\n       controlsVBox.getChildren()\n           .addAll(toggleGroupLabel, drapedBillboardedRadioButton, drapedFlatRadioButton);\n \n-      // add the scene view and control box to the stack pane\n-      stackPane.getChildren().addAll(sceneView, controlsVBox);\n+      // create slider to adjust the z-value\n+      Slider zValueSlider = new Slider(0, 150, 70);\n+      Label zValueSliderLabel = new Label(\"Z-Value:\");\n+      zValueSlider.setShowTickMarks(true);\n+      zValueSlider.setShowTickLabels(true);\n+      zValueSlider.setMajorTickUnit(50);\n+      zValueSlider.setOrientation(Orientation.VERTICAL);\n+\n+      zValueSlider.valueProperty().addListener((observableValue, oldValue, newValue) -> {\n+\n+        // get z-value from slider\n+        Double zValueFromSlider = zValueSlider.getValue();\n+\n+        // create new points with updated z-value\n+        Point newSurfaceRelatedPoint = new Point(surfaceRelatedPoint.getX(), surfaceRelatedPoint.getY(), zValueFromSlider, surfaceRelatedPoint.getSpatialReference());\n+        Point newSceneRelatedPoint = new Point(sceneRelatedPoint.getX(), sceneRelatedPoint.getY(), zValueFromSlider, sceneRelatedPoint.getSpatialReference());\n+\n+        // update the geometry of each of the existing graphics (both the symbol and label) to the relevant new point\n+        drapedBillboardedOverlay.getGraphics().get(0).setGeometry(newSurfaceRelatedPoint);\n+        drapedBillboardedOverlay.getGraphics().get(1).setGeometry(newSurfaceRelatedPoint);\n+\n+        drapedFlatOverlay.getGraphics().get(0).setGeometry(newSurfaceRelatedPoint);\n+        drapedFlatOverlay.getGraphics().get(1).setGeometry(newSurfaceRelatedPoint);\n+\n+        relativeOverlay.getGraphics().get(0).setGeometry(newSurfaceRelatedPoint);\n+        relativeOverlay.getGraphics().get(1).setGeometry(newSurfaceRelatedPoint);\n+\n+        absoluteOverlay.getGraphics().get(0).setGeometry(newSurfaceRelatedPoint);\n+        absoluteOverlay.getGraphics().get(1).setGeometry(newSurfaceRelatedPoint);\n+\n+        relativeToSceneOverlay.getGraphics().get(0).setGeometry(newSceneRelatedPoint);\n+        relativeToSceneOverlay.getGraphics().get(1).setGeometry(newSceneRelatedPoint);\n+\n+      });\n+\n+      // create a controls area for the z-value slider\n+      VBox sliderVBox = new VBox();\n+      sliderVBox.setBackground(\n+        new Background(new BackgroundFill(Paint.valueOf(\"rgba(0,0,0,0.5)\"), CornerRadii.EMPTY, Insets.EMPTY)));\n+      sliderVBox.setPadding(new Insets(10.0));\n+      sliderVBox.setMaxSize(70, 200);\n+      sliderVBox.getStyleClass().add(\"panel-region\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 157}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzY5MDk3OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo1NzoxMlrOGyxnPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo0OToyMVrOG1ousQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5NDg0Ng==", "bodyText": "While we have this sample open, let's update the JavaFX version to 11.0.2.\nYou'll also need to include the module 'javafx.fxml' when you make this into an fxml sample.\nLastly, on line 77, lets update:\ngradleVersion = '6.5.1'\nYou'll also have to change this version number in a line inside \\gradle\\wrapper\\gradle-wrapper.properties", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r455894846", "createdAt": "2020-07-16T15:57:12Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/build.gradle", "diffHunk": "@@ -6,7 +6,7 @@ plugins {\n group = 'com.esri.samples'\n \n ext {\n-    arcgisVersion = '100.8.0'\n+    arcgisVersion = '100.9.0-2840'\n }\n \n javafx {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg4ODc4MQ==", "bodyText": "I updated these versions - if you could double check I've done things in the right place, thanks!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458888781", "createdAt": "2020-07-22T15:40:28Z", "author": {"login": "jenmerritt"}, "path": "scene/surface-placement/build.gradle", "diffHunk": "@@ -6,7 +6,7 @@ plugins {\n group = 'com.esri.samples'\n \n ext {\n-    arcgisVersion = '100.8.0'\n+    arcgisVersion = '100.9.0-2840'\n }\n \n javafx {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5NDg0Ng=="}, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg5NTAyNQ==", "bodyText": "Yep this is perfect \ud83d\udc4d", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458895025", "createdAt": "2020-07-22T15:49:21Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/build.gradle", "diffHunk": "@@ -6,7 +6,7 @@ plugins {\n group = 'com.esri.samples'\n \n ext {\n-    arcgisVersion = '100.8.0'\n+    arcgisVersion = '100.9.0-2840'\n }\n \n javafx {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5NDg0Ng=="}, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0Mzc2MTA1OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjoxMzozMFrOGyyTJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjoxMzozMFrOGyyTJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkwNjA4NA==", "bodyText": "You can get away with using double, the primitive type here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Double zValueFromSlider = zValueSlider.getValue();\n          \n          \n            \n                    double zValueFromSlider = zValueSlider.getValue();\n          \n      \n    \n    \n  \n\nThe IDE does a better job at explaining why than I would ever do:\n\nThe Double class wraps a value of the primitive type double in an object. An object of type Double contains a single field whose type is double.\nIn addition, this class provides several methods for converting a double to a String and a String to a double, as well as other constants and methods useful when dealing with a double.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r455906084", "createdAt": "2020-07-16T16:13:30Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java", "diffHunk": "@@ -168,10 +188,57 @@ public void start(Stage stage) {\n       controlsVBox.getChildren()\n           .addAll(toggleGroupLabel, drapedBillboardedRadioButton, drapedFlatRadioButton);\n \n-      // add the scene view and control box to the stack pane\n-      stackPane.getChildren().addAll(sceneView, controlsVBox);\n+      // create slider to adjust the z-value\n+      Slider zValueSlider = new Slider(0, 150, 70);\n+      Label zValueSliderLabel = new Label(\"Z-Value:\");\n+      zValueSlider.setShowTickMarks(true);\n+      zValueSlider.setShowTickLabels(true);\n+      zValueSlider.setMajorTickUnit(50);\n+      zValueSlider.setOrientation(Orientation.VERTICAL);\n+\n+      zValueSlider.valueProperty().addListener((observableValue, oldValue, newValue) -> {\n+\n+        // get z-value from slider\n+        Double zValueFromSlider = zValueSlider.getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ffc90b0de67e15b5d170b278f81fb13323a6f"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzc0ODYwOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1MToyN1rOG1o0pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1MToyN1rOG1o0pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg5NjU0OQ==", "bodyText": "There's no need for the empty line here I think", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458896549", "createdAt": "2020-07-22T15:51:27Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;\n+\n+  public void initialize() {\n+\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e19a0de6230a538cccda67f9bd2036517fdf4fc"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzc2NjgzOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1NTozMlrOG1pAEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1NTozMlrOG1pAEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg5OTQ3NQ==", "bodyText": "Maybe we can rephrase this comment a bit to describe the action that the code performs:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // listener for toggles between billboarded and flat draped surface placement modes on the JavaFX ToggleGroup\n          \n          \n            \n                  // add a listener to the toggle group to switch between billboarded and flat draped surface placement modes", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458899475", "createdAt": "2020-07-22T15:55:32Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;\n+\n+  public void initialize() {\n+\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+\n+      sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n+\n+      // create a red triangle symbol\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n+\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText =\n+          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedBillboardedText.setOffsetX(20);\n+\n+      TextSymbol drapedFlatText =\n+          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedFlatText.setOffsetX(20);\n+\n+      TextSymbol relativeText =\n+          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeText.setOffsetX(20);\n+\n+      TextSymbol absoluteText =\n+          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      absoluteText.setOffsetX(20);\n+\n+      TextSymbol relativeToSceneText =\n+        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeToSceneText.setOffsetX(-20);\n+\n+      // add the point graphic and text graphic to the corresponding graphics overlay\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n+\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n+\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n+\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n+\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+\n+      // add graphics overlays to the scene view\n+      sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));\n+\n+      // link up the ToggleGroup RadioButtons to the corresponding draped overlay\n+      drapedBillboardedRadioButton.setUserData(drapedBillboardedOverlay);\n+      drapedFlatRadioButton.setUserData(drapedFlatOverlay);\n+\n+      // listener for toggles between billboarded and flat draped surface placement modes on the JavaFX ToggleGroup", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e19a0de6230a538cccda67f9bd2036517fdf4fc"}, "originalPosition": 150}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzc3MzkxOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1NzoxNVrOG1pEpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODowNjo0N1rOG2ANcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwMDY0Nw==", "bodyText": "Maybe it'll be safer to clear all the graphics overlays here, so that we're essentally just zapping everything that's visible, and not relying on the oldToggle property.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      sceneView.getGraphicsOverlays().remove(oldToggle.getUserData());\n          \n          \n            \n                      sceneView.getGraphicsOverlays().clear();", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458900647", "createdAt": "2020-07-22T15:57:15Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;\n+\n+  public void initialize() {\n+\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+\n+      sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n+\n+      // create a red triangle symbol\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n+\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText =\n+          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedBillboardedText.setOffsetX(20);\n+\n+      TextSymbol drapedFlatText =\n+          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedFlatText.setOffsetX(20);\n+\n+      TextSymbol relativeText =\n+          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeText.setOffsetX(20);\n+\n+      TextSymbol absoluteText =\n+          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      absoluteText.setOffsetX(20);\n+\n+      TextSymbol relativeToSceneText =\n+        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeToSceneText.setOffsetX(-20);\n+\n+      // add the point graphic and text graphic to the corresponding graphics overlay\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n+\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n+\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n+\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n+\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+\n+      // add graphics overlays to the scene view\n+      sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));\n+\n+      // link up the ToggleGroup RadioButtons to the corresponding draped overlay\n+      drapedBillboardedRadioButton.setUserData(drapedBillboardedOverlay);\n+      drapedFlatRadioButton.setUserData(drapedFlatOverlay);\n+\n+      // listener for toggles between billboarded and flat draped surface placement modes on the JavaFX ToggleGroup\n+      toggleGroup.selectedToggleProperty().addListener((observableValue, oldToggle, newToggle) -> {\n+        if (toggleGroup.getSelectedToggle() != null) {\n+          sceneView.getGraphicsOverlays().remove(oldToggle.getUserData());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e19a0de6230a538cccda67f9bd2036517fdf4fc"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkzMTU5OA==", "bodyText": "I tried with clear but it then removes the other overlays too. Shall I leave with the oldToggle, or I could do an addAll() on the next line that includes the other graphics.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458931598", "createdAt": "2020-07-22T16:38:54Z", "author": {"login": "jenmerritt"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;\n+\n+  public void initialize() {\n+\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+\n+      sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n+\n+      // create a red triangle symbol\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n+\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText =\n+          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedBillboardedText.setOffsetX(20);\n+\n+      TextSymbol drapedFlatText =\n+          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedFlatText.setOffsetX(20);\n+\n+      TextSymbol relativeText =\n+          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeText.setOffsetX(20);\n+\n+      TextSymbol absoluteText =\n+          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      absoluteText.setOffsetX(20);\n+\n+      TextSymbol relativeToSceneText =\n+        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeToSceneText.setOffsetX(-20);\n+\n+      // add the point graphic and text graphic to the corresponding graphics overlay\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n+\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n+\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n+\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n+\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+\n+      // add graphics overlays to the scene view\n+      sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));\n+\n+      // link up the ToggleGroup RadioButtons to the corresponding draped overlay\n+      drapedBillboardedRadioButton.setUserData(drapedBillboardedOverlay);\n+      drapedFlatRadioButton.setUserData(drapedFlatOverlay);\n+\n+      // listener for toggles between billboarded and flat draped surface placement modes on the JavaFX ToggleGroup\n+      toggleGroup.selectedToggleProperty().addListener((observableValue, oldToggle, newToggle) -> {\n+        if (toggleGroup.getSelectedToggle() != null) {\n+          sceneView.getGraphicsOverlays().remove(oldToggle.getUserData());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwMDY0Nw=="}, "originalCommit": {"oid": "6e19a0de6230a538cccda67f9bd2036517fdf4fc"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI3OTcyOQ==", "bodyText": "You're absolutely right, I made a mistake there! Forgot that there's a bunch of other GraphicsOverlays, not just switching between 2. It was correct the way it was before, sorry!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r459279729", "createdAt": "2020-07-23T08:06:47Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;\n+\n+  public void initialize() {\n+\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+\n+      sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n+\n+      // create a red triangle symbol\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n+\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText =\n+          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedBillboardedText.setOffsetX(20);\n+\n+      TextSymbol drapedFlatText =\n+          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedFlatText.setOffsetX(20);\n+\n+      TextSymbol relativeText =\n+          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeText.setOffsetX(20);\n+\n+      TextSymbol absoluteText =\n+          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      absoluteText.setOffsetX(20);\n+\n+      TextSymbol relativeToSceneText =\n+        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeToSceneText.setOffsetX(-20);\n+\n+      // add the point graphic and text graphic to the corresponding graphics overlay\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n+\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n+\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n+\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n+\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+\n+      // add graphics overlays to the scene view\n+      sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));\n+\n+      // link up the ToggleGroup RadioButtons to the corresponding draped overlay\n+      drapedBillboardedRadioButton.setUserData(drapedBillboardedOverlay);\n+      drapedFlatRadioButton.setUserData(drapedFlatOverlay);\n+\n+      // listener for toggles between billboarded and flat draped surface placement modes on the JavaFX ToggleGroup\n+      toggleGroup.selectedToggleProperty().addListener((observableValue, oldToggle, newToggle) -> {\n+        if (toggleGroup.getSelectedToggle() != null) {\n+          sceneView.getGraphicsOverlays().remove(oldToggle.getUserData());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwMDY0Nw=="}, "originalCommit": {"oid": "6e19a0de6230a538cccda67f9bd2036517fdf4fc"}, "originalPosition": 153}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzc3NzUyOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1Nzo1OVrOG1pG2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1Nzo1OVrOG1pG2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwMTIwOA==", "bodyText": "We could just say 'slider' here I think\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Sets the Z-Value to the value selected by the JavaFX slider.\n          \n          \n            \n               * Sets the Z-Value to the value selected by the slider.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458901208", "createdAt": "2020-07-22T15:57:59Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;\n+\n+  public void initialize() {\n+\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+\n+      sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n+\n+      // create a red triangle symbol\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n+\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText =\n+          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedBillboardedText.setOffsetX(20);\n+\n+      TextSymbol drapedFlatText =\n+          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedFlatText.setOffsetX(20);\n+\n+      TextSymbol relativeText =\n+          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeText.setOffsetX(20);\n+\n+      TextSymbol absoluteText =\n+          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      absoluteText.setOffsetX(20);\n+\n+      TextSymbol relativeToSceneText =\n+        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeToSceneText.setOffsetX(-20);\n+\n+      // add the point graphic and text graphic to the corresponding graphics overlay\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n+\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n+\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n+\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n+\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+\n+      // add graphics overlays to the scene view\n+      sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));\n+\n+      // link up the ToggleGroup RadioButtons to the corresponding draped overlay\n+      drapedBillboardedRadioButton.setUserData(drapedBillboardedOverlay);\n+      drapedFlatRadioButton.setUserData(drapedFlatOverlay);\n+\n+      // listener for toggles between billboarded and flat draped surface placement modes on the JavaFX ToggleGroup\n+      toggleGroup.selectedToggleProperty().addListener((observableValue, oldToggle, newToggle) -> {\n+        if (toggleGroup.getSelectedToggle() != null) {\n+          sceneView.getGraphicsOverlays().remove(oldToggle.getUserData());\n+          sceneView.getGraphicsOverlays().add((GraphicsOverlay) toggleGroup.getSelectedToggle().getUserData());\n+        }\n+      });\n+\n+    } catch (Exception e) {\n+      // on any exception, print the stack trace\n+      e.printStackTrace();\n+    }\n+\n+  }\n+\n+  /**\n+   * Sets the Z-Value to the value selected by the JavaFX slider.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e19a0de6230a538cccda67f9bd2036517fdf4fc"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzc3ODc0OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1ODoxNVrOG1pHmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1ODoxNVrOG1pHmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwMTQwMw==", "bodyText": "No need for this empty line\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458901403", "createdAt": "2020-07-22T15:58:15Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;\n+\n+  public void initialize() {\n+\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+\n+      sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n+\n+      // create a red triangle symbol\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n+\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText =\n+          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedBillboardedText.setOffsetX(20);\n+\n+      TextSymbol drapedFlatText =\n+          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedFlatText.setOffsetX(20);\n+\n+      TextSymbol relativeText =\n+          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeText.setOffsetX(20);\n+\n+      TextSymbol absoluteText =\n+          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      absoluteText.setOffsetX(20);\n+\n+      TextSymbol relativeToSceneText =\n+        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeToSceneText.setOffsetX(-20);\n+\n+      // add the point graphic and text graphic to the corresponding graphics overlay\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n+\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n+\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n+\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n+\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+\n+      // add graphics overlays to the scene view\n+      sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));\n+\n+      // link up the ToggleGroup RadioButtons to the corresponding draped overlay\n+      drapedBillboardedRadioButton.setUserData(drapedBillboardedOverlay);\n+      drapedFlatRadioButton.setUserData(drapedFlatOverlay);\n+\n+      // listener for toggles between billboarded and flat draped surface placement modes on the JavaFX ToggleGroup\n+      toggleGroup.selectedToggleProperty().addListener((observableValue, oldToggle, newToggle) -> {\n+        if (toggleGroup.getSelectedToggle() != null) {\n+          sceneView.getGraphicsOverlays().remove(oldToggle.getUserData());\n+          sceneView.getGraphicsOverlays().add((GraphicsOverlay) toggleGroup.getSelectedToggle().getUserData());\n+        }\n+      });\n+\n+    } catch (Exception e) {\n+      // on any exception, print the stack trace\n+      e.printStackTrace();\n+    }\n+\n+  }\n+\n+  /**\n+   * Sets the Z-Value to the value selected by the JavaFX slider.\n+   */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e19a0de6230a538cccda67f9bd2036517fdf4fc"}, "originalPosition": 168}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzc4MTQyOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1ODo1MFrOG1pJOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1ODo1MFrOG1pJOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwMTgxNg==", "bodyText": "We generally try and have the comments in plain english, so lets add a the:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // get z-value from slider\n          \n          \n            \n                    // get the z-value from slider", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458901816", "createdAt": "2020-07-22T15:58:50Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;\n+\n+  public void initialize() {\n+\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+\n+      sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n+\n+      // create a red triangle symbol\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n+\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText =\n+          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedBillboardedText.setOffsetX(20);\n+\n+      TextSymbol drapedFlatText =\n+          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedFlatText.setOffsetX(20);\n+\n+      TextSymbol relativeText =\n+          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeText.setOffsetX(20);\n+\n+      TextSymbol absoluteText =\n+          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      absoluteText.setOffsetX(20);\n+\n+      TextSymbol relativeToSceneText =\n+        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeToSceneText.setOffsetX(-20);\n+\n+      // add the point graphic and text graphic to the corresponding graphics overlay\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n+\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n+\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n+\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n+\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+\n+      // add graphics overlays to the scene view\n+      sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));\n+\n+      // link up the ToggleGroup RadioButtons to the corresponding draped overlay\n+      drapedBillboardedRadioButton.setUserData(drapedBillboardedOverlay);\n+      drapedFlatRadioButton.setUserData(drapedFlatOverlay);\n+\n+      // listener for toggles between billboarded and flat draped surface placement modes on the JavaFX ToggleGroup\n+      toggleGroup.selectedToggleProperty().addListener((observableValue, oldToggle, newToggle) -> {\n+        if (toggleGroup.getSelectedToggle() != null) {\n+          sceneView.getGraphicsOverlays().remove(oldToggle.getUserData());\n+          sceneView.getGraphicsOverlays().add((GraphicsOverlay) toggleGroup.getSelectedToggle().getUserData());\n+        }\n+      });\n+\n+    } catch (Exception e) {\n+      // on any exception, print the stack trace\n+      e.printStackTrace();\n+    }\n+\n+  }\n+\n+  /**\n+   * Sets the Z-Value to the value selected by the JavaFX slider.\n+   */\n+\n+  @FXML\n+  private void changeZValue(){\n+        // get z-value from slider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e19a0de6230a538cccda67f9bd2036517fdf4fc"}, "originalPosition": 171}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzc4MjkyOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1OTowOVrOG1pKGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1OTowOVrOG1pKGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwMjA0Mw==", "bodyText": "As above, no harm in adding an article, I think:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // create new points with updated z-value\n          \n          \n            \n                    // create new points with the updated z-value", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458902043", "createdAt": "2020-07-22T15:59:09Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,203 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;\n+\n+  public void initialize() {\n+\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+\n+      sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n+\n+      // create a red triangle symbol\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n+\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText =\n+          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedBillboardedText.setOffsetX(20);\n+\n+      TextSymbol drapedFlatText =\n+          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedFlatText.setOffsetX(20);\n+\n+      TextSymbol relativeText =\n+          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeText.setOffsetX(20);\n+\n+      TextSymbol absoluteText =\n+          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      absoluteText.setOffsetX(20);\n+\n+      TextSymbol relativeToSceneText =\n+        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeToSceneText.setOffsetX(-20);\n+\n+      // add the point graphic and text graphic to the corresponding graphics overlay\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n+\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n+\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n+\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n+\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+\n+      // add graphics overlays to the scene view\n+      sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));\n+\n+      // link up the ToggleGroup RadioButtons to the corresponding draped overlay\n+      drapedBillboardedRadioButton.setUserData(drapedBillboardedOverlay);\n+      drapedFlatRadioButton.setUserData(drapedFlatOverlay);\n+\n+      // listener for toggles between billboarded and flat draped surface placement modes on the JavaFX ToggleGroup\n+      toggleGroup.selectedToggleProperty().addListener((observableValue, oldToggle, newToggle) -> {\n+        if (toggleGroup.getSelectedToggle() != null) {\n+          sceneView.getGraphicsOverlays().remove(oldToggle.getUserData());\n+          sceneView.getGraphicsOverlays().add((GraphicsOverlay) toggleGroup.getSelectedToggle().getUserData());\n+        }\n+      });\n+\n+    } catch (Exception e) {\n+      // on any exception, print the stack trace\n+      e.printStackTrace();\n+    }\n+\n+  }\n+\n+  /**\n+   * Sets the Z-Value to the value selected by the JavaFX slider.\n+   */\n+\n+  @FXML\n+  private void changeZValue(){\n+        // get z-value from slider\n+        double zValueFromSlider = zValueSlider.getValue();\n+\n+        // create new points with updated z-value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e19a0de6230a538cccda67f9bd2036517fdf4fc"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzc5OTYxOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowMzoxNVrOG1pUmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowMzoxNVrOG1pUmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwNDcyOA==", "bodyText": "Lets add some articles here so that the comments are plain english:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // get z-value from slider\n          \n          \n            \n                // get the z-value from the slider", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458904728", "createdAt": "2020-07-22T16:03:15Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;\n+\n+  public void initialize() {\n+\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+\n+      sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n+\n+      // create a red triangle symbol\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n+\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText =\n+          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedBillboardedText.setOffsetX(20);\n+\n+      TextSymbol drapedFlatText =\n+          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedFlatText.setOffsetX(20);\n+\n+      TextSymbol relativeText =\n+          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeText.setOffsetX(20);\n+\n+      TextSymbol absoluteText =\n+          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      absoluteText.setOffsetX(20);\n+\n+      TextSymbol relativeToSceneText =\n+        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeToSceneText.setOffsetX(-20);\n+\n+      // add the point graphic and text graphic to the corresponding graphics overlay\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n+\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n+\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n+\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n+\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+\n+      // add graphics overlays to the scene view\n+      sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));\n+\n+      // link up the ToggleGroup RadioButtons to the corresponding draped overlay\n+      drapedBillboardedRadioButton.setUserData(drapedBillboardedOverlay);\n+      drapedFlatRadioButton.setUserData(drapedFlatOverlay);\n+\n+      // listener for toggles between billboarded and flat draped surface placement modes on the JavaFX ToggleGroup\n+      toggleGroup.selectedToggleProperty().addListener((observableValue, oldToggle, newToggle) -> {\n+        if (toggleGroup.getSelectedToggle() != null) {\n+          sceneView.getGraphicsOverlays().remove(oldToggle.getUserData());\n+          sceneView.getGraphicsOverlays().add((GraphicsOverlay) toggleGroup.getSelectedToggle().getUserData());\n+        }\n+      });\n+\n+    } catch (Exception e) {\n+      // on any exception, print the stack trace\n+      e.printStackTrace();\n+    }\n+\n+  }\n+\n+  /**\n+   * Sets the Z-Value to the value selected by the JavaFX slider.\n+   */\n+\n+  @FXML\n+  private void changeZValue(){\n+    // get z-value from slider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8fb3ab1b5196c1680ded72356fc818278e8c0e"}, "originalPosition": 173}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzgwMzEwOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowNDowNFrOG1pWtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowNDowNFrOG1pWtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwNTI3MA==", "bodyText": "I think just zValue would be enough after we got it (there's no other source for a zValue after all):\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                double zValueFromSlider = zValueSlider.getValue();\n          \n          \n            \n                double zValue = zValueSlider.getValue();", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458905270", "createdAt": "2020-07-22T16:04:04Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;\n+\n+  public void initialize() {\n+\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+\n+      sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n+\n+      // create a red triangle symbol\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n+\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText =\n+          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedBillboardedText.setOffsetX(20);\n+\n+      TextSymbol drapedFlatText =\n+          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedFlatText.setOffsetX(20);\n+\n+      TextSymbol relativeText =\n+          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeText.setOffsetX(20);\n+\n+      TextSymbol absoluteText =\n+          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      absoluteText.setOffsetX(20);\n+\n+      TextSymbol relativeToSceneText =\n+        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeToSceneText.setOffsetX(-20);\n+\n+      // add the point graphic and text graphic to the corresponding graphics overlay\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n+\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n+\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n+\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n+\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+\n+      // add graphics overlays to the scene view\n+      sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));\n+\n+      // link up the ToggleGroup RadioButtons to the corresponding draped overlay\n+      drapedBillboardedRadioButton.setUserData(drapedBillboardedOverlay);\n+      drapedFlatRadioButton.setUserData(drapedFlatOverlay);\n+\n+      // listener for toggles between billboarded and flat draped surface placement modes on the JavaFX ToggleGroup\n+      toggleGroup.selectedToggleProperty().addListener((observableValue, oldToggle, newToggle) -> {\n+        if (toggleGroup.getSelectedToggle() != null) {\n+          sceneView.getGraphicsOverlays().remove(oldToggle.getUserData());\n+          sceneView.getGraphicsOverlays().add((GraphicsOverlay) toggleGroup.getSelectedToggle().getUserData());\n+        }\n+      });\n+\n+    } catch (Exception e) {\n+      // on any exception, print the stack trace\n+      e.printStackTrace();\n+    }\n+\n+  }\n+\n+  /**\n+   * Sets the Z-Value to the value selected by the JavaFX slider.\n+   */\n+\n+  @FXML\n+  private void changeZValue(){\n+    // get z-value from slider\n+    double zValueFromSlider = zValueSlider.getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8fb3ab1b5196c1680ded72356fc818278e8c0e"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzgyNTE4OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowOToyMVrOG1pk7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowOToyMVrOG1pk7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwODkwOA==", "bodyText": "You could use the 'smart' loop syntax for this if you know you're going to make an operation on each item in the list:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                for(int i = 0; i < sceneView.getGraphicsOverlays().size(); i++){\n          \n          \n            \n                for (GraphicsOverlay graphicsOverlay : sceneView.getGraphicsOverlays().size()) {\n          \n      \n    \n    \n  \n\nAlso mind to have a space between the for keyword and the parentheses, as well as before the {\nThe same would apply to the inner loop.\nYou'd only really want to use the i++ type of loop if you know you might have a unique condition for starting/ending/iterating over your array (e.g. starting with i=2, or going until i < size -1).", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458908908", "createdAt": "2020-07-22T16:09:21Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;\n+\n+  public void initialize() {\n+\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+\n+      sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n+\n+      // create a red triangle symbol\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n+\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText =\n+          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedBillboardedText.setOffsetX(20);\n+\n+      TextSymbol drapedFlatText =\n+          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedFlatText.setOffsetX(20);\n+\n+      TextSymbol relativeText =\n+          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeText.setOffsetX(20);\n+\n+      TextSymbol absoluteText =\n+          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      absoluteText.setOffsetX(20);\n+\n+      TextSymbol relativeToSceneText =\n+        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeToSceneText.setOffsetX(-20);\n+\n+      // add the point graphic and text graphic to the corresponding graphics overlay\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n+\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n+\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n+\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n+\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+\n+      // add graphics overlays to the scene view\n+      sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));\n+\n+      // link up the ToggleGroup RadioButtons to the corresponding draped overlay\n+      drapedBillboardedRadioButton.setUserData(drapedBillboardedOverlay);\n+      drapedFlatRadioButton.setUserData(drapedFlatOverlay);\n+\n+      // listener for toggles between billboarded and flat draped surface placement modes on the JavaFX ToggleGroup\n+      toggleGroup.selectedToggleProperty().addListener((observableValue, oldToggle, newToggle) -> {\n+        if (toggleGroup.getSelectedToggle() != null) {\n+          sceneView.getGraphicsOverlays().remove(oldToggle.getUserData());\n+          sceneView.getGraphicsOverlays().add((GraphicsOverlay) toggleGroup.getSelectedToggle().getUserData());\n+        }\n+      });\n+\n+    } catch (Exception e) {\n+      // on any exception, print the stack trace\n+      e.printStackTrace();\n+    }\n+\n+  }\n+\n+  /**\n+   * Sets the Z-Value to the value selected by the JavaFX slider.\n+   */\n+\n+  @FXML\n+  private void changeZValue(){\n+    // get z-value from slider\n+    double zValueFromSlider = zValueSlider.getValue();\n+\n+    // update the geometry of each of the existing graphics to include the new z-value\n+    for(int i = 0; i < sceneView.getGraphicsOverlays().size(); i++){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8fb3ab1b5196c1680ded72356fc818278e8c0e"}, "originalPosition": 177}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzgzMDc1OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/resources/surface_placement/main.fxml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoxMDo0MFrOG1poiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoxMDo0MFrOG1poiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwOTgzMg==", "bodyText": "Nice work on this file, just a sneaky extra space here:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    <Slider fx:id=\"zValueSlider\" min=\"0\" max=\"150\" value=\"70\" onMouseDragged=\"#changeZValue\" onMouseReleased=\"#changeZValue\"  />\n          \n          \n            \n                    <Slider fx:id=\"zValueSlider\" min=\"0\" max=\"150\" value=\"70\" onMouseDragged=\"#changeZValue\" onMouseReleased=\"#changeZValue\" />", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458909832", "createdAt": "2020-07-22T16:10:40Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/resources/surface_placement/main.fxml", "diffHunk": "@@ -0,0 +1,52 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2017 Esri.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+  ~ use this file except in compliance with the License. You may obtain a copy of\n+  ~ the License at\n+  ~\n+  ~ http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+  ~ License for the specific language governing permissions and limitations under\n+  ~ the License.\n+  -->\n+\n+<?import javafx.scene.layout.StackPane?>\n+<?import javafx.scene.layout.VBox?>\n+<?import javafx.scene.control.Slider?>\n+<?import javafx.scene.control.Label?>\n+<?import javafx.scene.control.ToggleGroup?>\n+<?import javafx.scene.control.RadioButton?>\n+<?import javafx.geometry.Insets?>\n+\n+<?import com.esri.arcgisruntime.mapping.view.SceneView?>\n+\n+<StackPane fx:controller=\"com.esri.samples.surface_placement.SurfacePlacementController\" xmlns:fx=\"http://javafx.com/fxml\"\n+           stylesheets=\"/surface_placement/style.css\">\n+    <!--SDK SceneView-->\n+    <SceneView fx:id=\"sceneView\" />\n+    <!--Toggle controls for draped mode selection-->\n+    <VBox StackPane.alignment=\"TOP_LEFT\" styleClass=\"panel-region, toggle-controls\">\n+        <StackPane.margin>\n+            <Insets topRightBottomLeft=\"10\" />\n+        </StackPane.margin>\n+        <Label fx:id=\"toggleGroupLabel\" text=\"Toggle draped mode: \" />\n+        <fx:define>\n+            <ToggleGroup fx:id=\"toggleGroup\" />\n+        </fx:define>\n+        <RadioButton toggleGroup=\"$toggleGroup\" fx:id=\"drapedBillboardedRadioButton\" text=\"Draped Billboarded\" selected=\"true\" />\n+        <RadioButton toggleGroup=\"$toggleGroup\" fx:id=\"drapedFlatRadioButton\" text=\"Draped Flat\" />\n+    </VBox>\n+    <!--Slider controls for z-value-->\n+    <VBox StackPane.alignment=\"TOP_RIGHT\" styleClass=\"panel-region, slider-controls\" >\n+        <StackPane.margin>\n+            <Insets topRightBottomLeft=\"10\"/>\n+        </StackPane.margin>\n+        <Label fx:id=\"zValueSliderLabel\" text=\"Z-Value: \" />\n+        <Slider fx:id=\"zValueSlider\" min=\"0\" max=\"150\" value=\"70\" onMouseDragged=\"#changeZValue\" onMouseReleased=\"#changeZValue\"  />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8fb3ab1b5196c1680ded72356fc818278e8c0e"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzgzMzI5OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/resources/surface_placement/style.css", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoxMToxNVrOG1pqDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoxMToxNVrOG1pqDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxMDIyMw==", "bodyText": "GitHub is telling us there's an extra space missing here \ud83d\ude04", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458910223", "createdAt": "2020-07-22T16:11:15Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/resources/surface_placement/style.css", "diffHunk": "@@ -1,7 +1,38 @@\n+.panel-region {\n+  -fx-background-color: rgba(0, 0, 0, 0.3);\n+  -fx-padding: 10;\n+}\n+\n .panel-region .label {\n   -fx-text-fill: white;\n+  -fx-padding: 10;\n }\n \n-.panel-region .radio-button {\n+.toggle-controls {\n+  -fx-max-width: 210;\n+  -fx-max-height: 120;\n+  -fx-spacing: 6;\n+}\n+\n+.toggle-controls .radio-button {\n    -fx-text-fill: white;\n+}\n+\n+.slider-controls {\n+  -fx-max-width: 90;\n+  -fx-max-height: 230;\n+  -fx-spacing: 3;\n+}\n+\n+.slider-controls .slider {\n+  -fx-orientation: vertical;\n+  -fx-pref-height:160;\n+  -fx-show-tick-marks: true;\n+  -fx-show-tick-labels: true;\n+  -fx-major-tick-unit: 50;\n+  -fx-minor-tick-count: 1;\n+}\n+\n+.slider-controls .slider .axis {\n+  -fx-tick-label-fill: white;\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8fb3ab1b5196c1680ded72356fc818278e8c0e"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzg0NTI1OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoxNDowNVrOG1pxtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODoxODozNVrOG2AlhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxMjE4MA==", "bodyText": "I think most of these variables could be local variables instead of class members, so no need to define them here.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r458912180", "createdAt": "2020-07-22T16:14:05Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f8fb3ab1b5196c1680ded72356fc818278e8c0e"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI4NTg5Mw==", "bodyText": "Nice, another good side effect of adding the loop in. Much cleaner there now, thanks!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r459285893", "createdAt": "2020-07-23T08:18:35Z", "author": {"login": "jenmerritt"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,199 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+  private Surface surface;\n+  private Point surfaceRelatedPoint;\n+  private Point sceneRelatedPoint;\n+  private GraphicsOverlay drapedBillboardedOverlay;\n+  private GraphicsOverlay drapedFlatOverlay;\n+  private GraphicsOverlay absoluteOverlay;\n+  private GraphicsOverlay relativeOverlay;\n+  private GraphicsOverlay relativeToSceneOverlay;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxMjE4MA=="}, "originalCommit": {"oid": "8f8fb3ab1b5196c1680ded72356fc818278e8c0e"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NjMyNjUwOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODozMjozOVrOG2BDZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODozMjozOVrOG2BDZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI5MzU0Mw==", "bodyText": "We can remove the extra spaces before and after the try", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r459293543", "createdAt": "2020-07-23T08:32:39Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+\n+  public void initialize() {\n+\n+    try {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "200e2f8d34df0e4106e4bdf92c3dcc8924a2553d"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NjMyNzU2OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODozMjo1OVrOG2BEHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODozMjo1OVrOG2BEHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI5MzcyNw==", "bodyText": "We can also remove the extra spaces before and after this catch block`", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r459293727", "createdAt": "2020-07-23T08:32:59Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+\n+  public void initialize() {\n+\n+    try {\n+\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      Surface surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      GraphicsOverlay drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      GraphicsOverlay drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      GraphicsOverlay relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      GraphicsOverlay absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      GraphicsOverlay relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      Point surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+      Point sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n+\n+      // create a red triangle symbol\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n+\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText =\n+          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedBillboardedText.setOffsetX(20);\n+\n+      TextSymbol drapedFlatText =\n+          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedFlatText.setOffsetX(20);\n+\n+      TextSymbol relativeText =\n+          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeText.setOffsetX(20);\n+\n+      TextSymbol absoluteText =\n+          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      absoluteText.setOffsetX(20);\n+\n+      TextSymbol relativeToSceneText =\n+        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeToSceneText.setOffsetX(-20);\n+\n+      // add the point graphic and text graphic to the corresponding graphics overlay\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n+\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n+\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n+\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n+\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+\n+      // add graphics overlays to the scene view\n+      sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));\n+\n+      // link up the ToggleGroup RadioButtons to the corresponding draped overlay\n+      drapedBillboardedRadioButton.setUserData(drapedBillboardedOverlay);\n+      drapedFlatRadioButton.setUserData(drapedFlatOverlay);\n+\n+      // add a listener to the toggle group to switch between billboarded and flat draped surface placement modes\n+      toggleGroup.selectedToggleProperty().addListener((observableValue, oldToggle, newToggle) -> {\n+        if (toggleGroup.getSelectedToggle() != null) {\n+          sceneView.getGraphicsOverlays().remove(oldToggle.getUserData());\n+          sceneView.getGraphicsOverlays().add((GraphicsOverlay) toggleGroup.getSelectedToggle().getUserData());\n+        }\n+      });\n+\n+    } catch (Exception e) {\n+      // on any exception, print the stack trace\n+      e.printStackTrace();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "200e2f8d34df0e4106e4bdf92c3dcc8924a2553d"}, "originalPosition": 154}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NjMzMDgzOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/resources/surface_placement/style.css", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODozMzo1NVrOG2BGHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODozMzo1NVrOG2BGHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI5NDIzOQ==", "bodyText": "Looks like the new line is still missing :(", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r459294239", "createdAt": "2020-07-23T08:33:55Z", "author": {"login": "JonLavi"}, "path": "scene/surface-placement/src/main/resources/surface_placement/style.css", "diffHunk": "@@ -1,7 +1,38 @@\n+.panel-region {\n+  -fx-background-color: rgba(0, 0, 0, 0.3);\n+  -fx-padding: 10;\n+}\n+\n .panel-region .label {\n   -fx-text-fill: white;\n+  -fx-padding: 10;\n+}\n+\n+.toggle-controls {\n+  -fx-max-width: 210;\n+  -fx-max-height: 120;\n+  -fx-spacing: 6;\n+}\n+\n+.toggle-controls .radio-button {\n+  -fx-text-fill: white;\n+}\n+\n+.slider-controls {\n+  -fx-max-width: 90;\n+  -fx-max-height: 230;\n+  -fx-spacing: 3;\n+}\n+\n+.slider-controls .slider {\n+  -fx-orientation: vertical;\n+  -fx-pref-height:160;\n+  -fx-show-tick-marks: true;\n+  -fx-show-tick-labels: true;\n+  -fx-major-tick-unit: 50;\n+  -fx-minor-tick-count: 1;\n }\n \n-.panel-region .radio-button {\n-   -fx-text-fill: white;\n+.slider-controls .slider .axis {\n+  -fx-tick-label-fill: white;\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "200e2f8d34df0e4106e4bdf92c3dcc8924a2553d"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODAwNjE3OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/README.metadata.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTo1OToxN1rOG2RMcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTo1OToxN1rOG2RMcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU1ODAwMA==", "bodyText": "These snippets feed into the code snippets which appear on our sample webpages. We don't show the launcher class on the snippets on the webpages, since it's just a reference to the 'main' method and doesn't show our API or method calls and how they link into the UI. So we can remove that class that from the list here.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"src/main/java/com/esri/samples/surface_placement/SurfacePlacementLauncher.java\",", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r459558000", "createdAt": "2020-07-23T15:59:17Z", "author": {"login": "Rachael-E"}, "path": "scene/surface-placement/README.metadata.json", "diffHunk": "@@ -33,7 +33,10 @@\n         \"Surface\"\n     ],\n     \"snippets\": [\n-        \"src/main/java/com/esri/samples/surface_placement/SurfacePlacementSample.java\"\n+        \"src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java\",\n+        \"src/main/java/com/esri/samples/surface_placement/SurfacePlacementLauncher.java\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6415542e3796edf7ad55524e930b28de7d664d90"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODAyNjUwOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjowNDoyN1rOG2RZbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNjowNDoyN1rOG2RZbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU2MTMyNQ==", "bodyText": "in this step, we // set the scene to the scene view: the stack pane is now tucked away in the FXML file :)", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r459561325", "createdAt": "2020-07-23T16:04:27Z", "author": {"login": "Rachael-E"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,183 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+\n+  public void initialize() {\n+    try {\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6415542e3796edf7ad55524e930b28de7d664d90"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODI3MDI4OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/resources/surface_placement/style.css", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzowOToyOFrOG2TzfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzowOToyOFrOG2TzfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMDc2NQ==", "bodyText": "when viewed on a Mac, this width slightly truncates the Z-Value: label (even though it looks fine on Windows!). A value of 95 however corrects it.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              -fx-max-width: 90;\n          \n          \n            \n              -fx-max-width: 95;", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r459600765", "createdAt": "2020-07-23T17:09:28Z", "author": {"login": "Rachael-E"}, "path": "scene/surface-placement/src/main/resources/surface_placement/style.css", "diffHunk": "@@ -1,7 +1,38 @@\n+.panel-region {\n+  -fx-background-color: rgba(0, 0, 0, 0.3);\n+  -fx-padding: 10;\n+}\n+\n .panel-region .label {\n   -fx-text-fill: white;\n+  -fx-padding: 10;\n+}\n+\n+.toggle-controls {\n+  -fx-max-width: 210;\n+  -fx-max-height: 120;\n+  -fx-spacing: 6;\n+}\n+\n+.toggle-controls .radio-button {\n+  -fx-text-fill: white;\n+}\n+\n+.slider-controls {\n+  -fx-max-width: 90;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6415542e3796edf7ad55524e930b28de7d664d90"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODI3OTU2OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoxMjowMFrOG2T5TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoxMjowMFrOG2T5TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMjI1Mw==", "bodyText": "just to make this fit the code a little better, I'd suggest the following edit:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // add a camera and initial camera position\n          \n          \n            \n                  // set an initial viewpoint camera position to the scene view", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r459602253", "createdAt": "2020-07-23T17:12:00Z", "author": {"login": "Rachael-E"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,183 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+\n+  public void initialize() {\n+    try {\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      Surface surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6415542e3796edf7ad55524e930b28de7d664d90"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODI4MjUyOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoxMjo0OVrOG2T7Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNzoxMjo0OVrOG2T7Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTYwMjc0Ng==", "bodyText": "just to make it clear that the buildings are sourced from the scene layer, suggested edit:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // add a scene layer\n          \n          \n            \n                  // add buildings to the scene with a scene layer URI", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r459602746", "createdAt": "2020-07-23T17:12:49Z", "author": {"login": "Rachael-E"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,183 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+\n+  public void initialize() {\n+    try {\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      Surface surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6415542e3796edf7ad55524e930b28de7d664d90"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDgzNDgyOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMTowOTo1MVrOG2ri1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMTowOTo1MVrOG2ri1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4OTcxOQ==", "bodyText": "We can replace this nested for loop with a more modern approach using Java 8's stream API (see below). Generally if you come across an instance that requires a nested for loop, you can exchange them using streams.\n    sceneView.getGraphicsOverlays().forEach(graphicsOverlay ->\n      graphicsOverlay.getGraphics().stream().filter(\n        graphic -> graphic.getGeometry().getGeometryType() == GeometryType.POINT).forEach(graphic -> {\n        Geometry geometry = graphic.getGeometry();\n        Point currentPoint = (Point) geometry;\n        Point updatedPoint = new Point(currentPoint.getX(), currentPoint.getY(), zValue, currentPoint.getSpatialReference());\n        graphic.setGeometry(updatedPoint);\n      }));", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r459989719", "createdAt": "2020-07-24T11:09:51Z", "author": {"login": "Rachael-E"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -0,0 +1,183 @@\n+/*\n+ * Copyright 2017 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.surface_placement;\n+\n+import java.util.Arrays;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.RadioButton;\n+import javafx.scene.control.Slider;\n+import javafx.scene.control.ToggleGroup;\n+\n+import com.esri.arcgisruntime.geometry.Geometry;\n+import com.esri.arcgisruntime.geometry.GeometryType;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.geometry.SpatialReferences;\n+import com.esri.arcgisruntime.layers.ArcGISSceneLayer;\n+import com.esri.arcgisruntime.mapping.ArcGISScene;\n+import com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.Surface;\n+import com.esri.arcgisruntime.mapping.view.Camera;\n+import com.esri.arcgisruntime.mapping.view.Graphic;\n+import com.esri.arcgisruntime.mapping.view.GraphicsOverlay;\n+import com.esri.arcgisruntime.mapping.view.LayerSceneProperties;\n+import com.esri.arcgisruntime.mapping.view.SceneView;\n+import com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;\n+import com.esri.arcgisruntime.symbology.TextSymbol;\n+\n+public class SurfacePlacementController {\n+\n+  @FXML private SceneView sceneView;\n+  @FXML private Slider zValueSlider;\n+  @FXML private ToggleGroup toggleGroup;\n+  @FXML private RadioButton drapedBillboardedRadioButton;\n+  @FXML private RadioButton drapedFlatRadioButton;\n+\n+  public void initialize() {\n+    try {\n+      // create a scene and add a basemap to it\n+      ArcGISScene scene = new ArcGISScene(Basemap.Type.IMAGERY);\n+\n+      // add the SceneView to the stack pane\n+      sceneView.setArcGISScene(scene);\n+\n+      // add base surface for elevation data\n+      Surface surface = new Surface();\n+      ArcGISTiledElevationSource elevationSource = new ArcGISTiledElevationSource(\n+        \"https://elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer\");\n+      surface.getElevationSources().add(elevationSource);\n+      scene.setBaseSurface(surface);\n+\n+      // add a scene layer\n+      ArcGISSceneLayer sceneLayer = new\n+        ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n+      scene.getOperationalLayers().add(sceneLayer);\n+\n+      // add a camera and initial camera position\n+      sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n+\n+      // create overlays with surface placement types\n+      GraphicsOverlay drapedBillboardedOverlay = new GraphicsOverlay();\n+      drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+\n+      GraphicsOverlay drapedFlatOverlay = new GraphicsOverlay();\n+      drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+\n+      GraphicsOverlay relativeOverlay = new GraphicsOverlay();\n+      relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+\n+      GraphicsOverlay absoluteOverlay = new GraphicsOverlay();\n+      absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+\n+      GraphicsOverlay relativeToSceneOverlay = new GraphicsOverlay();\n+      relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n+\n+      // create points for graphic locations\n+      Point surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n+      Point sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n+\n+      // create a red triangle symbol\n+      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n+\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText =\n+          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedBillboardedText.setOffsetX(20);\n+\n+      TextSymbol drapedFlatText =\n+          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      drapedFlatText.setOffsetX(20);\n+\n+      TextSymbol relativeText =\n+          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeText.setOffsetX(20);\n+\n+      TextSymbol absoluteText =\n+          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+      absoluteText.setOffsetX(20);\n+\n+      TextSymbol relativeToSceneText =\n+        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n+      relativeToSceneText.setOffsetX(-20);\n+\n+      // add the point graphic and text graphic to the corresponding graphics overlay\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n+\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n+\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n+\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n+      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n+\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n+      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+\n+      // add graphics overlays to the scene view\n+      sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));\n+\n+      // link up the ToggleGroup RadioButtons to the corresponding draped overlay\n+      drapedBillboardedRadioButton.setUserData(drapedBillboardedOverlay);\n+      drapedFlatRadioButton.setUserData(drapedFlatOverlay);\n+\n+      // add a listener to the toggle group to switch between billboarded and flat draped surface placement modes\n+      toggleGroup.selectedToggleProperty().addListener((observableValue, oldToggle, newToggle) -> {\n+        if (toggleGroup.getSelectedToggle() != null) {\n+          sceneView.getGraphicsOverlays().remove(oldToggle.getUserData());\n+          sceneView.getGraphicsOverlays().add((GraphicsOverlay) toggleGroup.getSelectedToggle().getUserData());\n+        }\n+      });\n+    } catch (Exception e) {\n+      // on any exception, print the stack trace\n+      e.printStackTrace();\n+    }\n+  }\n+\n+  /**\n+   * Sets the Z-Value to the value selected by the slider.\n+   */\n+  @FXML\n+  private void changeZValue(){\n+    // get the z-value from the slider\n+    double zValue = zValueSlider.getValue();\n+\n+    // update the geometry of each of the existing graphics to include the new z-value\n+    for (GraphicsOverlay graphicsOverlay : sceneView.getGraphicsOverlays()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6415542e3796edf7ad55524e930b28de7d664d90"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjA5NzU5OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzoyMDozNFrOG23lDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzoyMDozNFrOG23lDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE4Njg5Mg==", "bodyText": "I've just noticed that this line goes over our max line length guidance (120 chars). We should split it up to avoid users having to use the horizontal scroll bar on Github (another easy to implement improve readability thing)!\n      // add graphics overlays to the scene view\n      sceneView.getGraphicsOverlays().addAll(Arrays.asList(\n        drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r460186892", "createdAt": "2020-07-24T17:20:34Z", "author": {"login": "Rachael-E"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -63,73 +63,41 @@ public void initialize() {\n       surface.getElevationSources().add(elevationSource);\n       scene.setBaseSurface(surface);\n \n-      // add a scene layer\n+      // add buildings to the scene with a scene layer URI\n       ArcGISSceneLayer sceneLayer = new\n         ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");\n       scene.getOperationalLayers().add(sceneLayer);\n \n-      // add a camera and initial camera position\n+      // set an initial viewpoint camera position to the scene view\n       sceneView.setViewpointCamera(new Camera(48.3889, -4.4595, 90, 330, 90, 0));\n \n-      // create overlays with surface placement types\n+      // create a text symbol for each surface placement type\n+      TextSymbol drapedBillboardedText = createTextSymbol(\"DRAPED BILLBOARDED\");\n+      TextSymbol drapedFlatText = createTextSymbol(\"DRAPED FLAT\");\n+      TextSymbol relativeText = createTextSymbol(\"RELATIVE\");\n+      TextSymbol absoluteText = createTextSymbol(\"ABSOLUTE\");\n+      TextSymbol relativeToSceneText = createTextSymbol(\"RELATIVE TO SCENE\");\n+\n+      // create graphics overlays with surface placement types, and add graphics to them\n       GraphicsOverlay drapedBillboardedOverlay = new GraphicsOverlay();\n       drapedBillboardedOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_BILLBOARDED);\n+      addGraphicsToGraphicsOverlay(drapedBillboardedOverlay, drapedBillboardedText);\n \n       GraphicsOverlay drapedFlatOverlay = new GraphicsOverlay();\n       drapedFlatOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.DRAPED_FLAT);\n+      addGraphicsToGraphicsOverlay(drapedFlatOverlay, drapedFlatText);\n \n       GraphicsOverlay relativeOverlay = new GraphicsOverlay();\n       relativeOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE);\n+      addGraphicsToGraphicsOverlay(relativeOverlay, relativeText);\n \n       GraphicsOverlay absoluteOverlay = new GraphicsOverlay();\n       absoluteOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.ABSOLUTE);\n+      addGraphicsToGraphicsOverlay(absoluteOverlay, absoluteText);\n \n       GraphicsOverlay relativeToSceneOverlay = new GraphicsOverlay();\n       relativeToSceneOverlay.getSceneProperties().setSurfacePlacement(LayerSceneProperties.SurfacePlacement.RELATIVE_TO_SCENE);\n-\n-      // create points for graphic locations\n-      Point surfaceRelatedPoint = new Point(-4.4609257, 48.3903965, 70, SpatialReferences.getWgs84());\n-      Point sceneRelatedPoint = new Point(-4.4610562, 48.3902727, 70, SpatialReferences.getWgs84());\n-\n-      // create a red triangle symbol\n-      SimpleMarkerSymbol triangleSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.Style.TRIANGLE, 0xFFFF0000, 12);\n-\n-      // create a text symbol for each surface placement type\n-      TextSymbol drapedBillboardedText =\n-          new TextSymbol(14, \"DRAPED BILLBOARDED\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n-      drapedBillboardedText.setOffsetX(20);\n-\n-      TextSymbol drapedFlatText =\n-          new TextSymbol(14, \"DRAPED FLAT\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n-      drapedFlatText.setOffsetX(20);\n-\n-      TextSymbol relativeText =\n-          new TextSymbol(14, \"RELATIVE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n-      relativeText.setOffsetX(20);\n-\n-      TextSymbol absoluteText =\n-          new TextSymbol(14, \"ABSOLUTE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n-      absoluteText.setOffsetX(20);\n-\n-      TextSymbol relativeToSceneText =\n-        new TextSymbol(14, \"RELATIVE TO SCENE\", 0xFF0000FF, TextSymbol.HorizontalAlignment.RIGHT, TextSymbol.VerticalAlignment.MIDDLE);\n-      relativeToSceneText.setOffsetX(-20);\n-\n-      // add the point graphic and text graphic to the corresponding graphics overlay\n-      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n-      drapedBillboardedOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedBillboardedText));\n-\n-      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n-      drapedFlatOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, drapedFlatText));\n-\n-      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n-      relativeOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, relativeText));\n-\n-      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, triangleSymbol));\n-      absoluteOverlay.getGraphics().add(new Graphic(surfaceRelatedPoint, absoluteText));\n-\n-      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, triangleSymbol));\n-      relativeToSceneOverlay.getGraphics().add(new Graphic(sceneRelatedPoint, relativeToSceneText));\n+      addGraphicsToGraphicsOverlay(relativeToSceneOverlay, relativeToSceneText);\n \n       // add graphics overlays to the scene view\n       sceneView.getGraphicsOverlays().addAll(Arrays.asList(drapedBillboardedOverlay, relativeOverlay, absoluteOverlay, relativeToSceneOverlay));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dbe904cd0288465541f0fc190b6a7a177ad39e6"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjEwMTIzOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzoyMTo1MFrOG23ndg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzoyMTo1MFrOG23ndg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE4NzUxMA==", "bodyText": "this is also a bit too far over our line length guidance (over by a little bit is ok though). Suggest the following new line to break it up:\n      // add buildings to the scene with a scene layer URI\n      ArcGISSceneLayer sceneLayer = new ArcGISSceneLayer(\n        \"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r460187510", "createdAt": "2020-07-24T17:21:50Z", "author": {"login": "Rachael-E"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -63,73 +63,41 @@ public void initialize() {\n       surface.getElevationSources().add(elevationSource);\n       scene.setBaseSurface(surface);\n \n-      // add a scene layer\n+      // add buildings to the scene with a scene layer URI\n       ArcGISSceneLayer sceneLayer = new\n         ArcGISSceneLayer(\"http://tiles.arcgis.com/tiles/P3ePLMYs2RVChkJx/arcgis/rest/services/Buildings_Brest/SceneServer/layers/0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dbe904cd0288465541f0fc190b6a7a177ad39e6"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjExNzUxOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzoyNzoxM1rOG23xkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzoyNzoxM1rOG23xkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE5MDA5OA==", "bodyText": "I can't comment on line 126, but I just noticed that there should be an extra space between the parenthesis and curly brackets\nprivate void changeZValue() {", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r460190098", "createdAt": "2020-07-24T17:27:13Z", "author": {"login": "Rachael-E"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -160,15 +128,56 @@ private void changeZValue(){\n     double zValue = zValueSlider.getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dbe904cd0288465541f0fc190b6a7a177ad39e6"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjExOTQ5OnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzoyNzo1M1rOG23y1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzoyNzo1M1rOG23y1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE5MDQyMA==", "bodyText": "sorry this was my fault: we should do some breaking up of these brackets here to be more java-y :)\n  /**\n   * Sets the Z-Value to the value selected by the slider.\n   */\n  @FXML\n  private void changeZValue() {\n    // get the z-value from the slider\n    double zValue = zValueSlider.getValue();\n\n    // update the geometry of each of the existing graphics to include the new z-value\n    sceneView.getGraphicsOverlays().forEach(graphicsOverlay ->\n      graphicsOverlay.getGraphics().stream().filter(\n        graphic -> graphic.getGeometry().getGeometryType() == GeometryType.POINT).forEach(graphic -> {\n        Geometry geometry = graphic.getGeometry();\n        Point currentPoint = (Point) geometry;\n        Point updatedPoint = new Point(currentPoint.getX(), currentPoint.getY(), zValue, currentPoint.getSpatialReference());\n        graphic.setGeometry(updatedPoint);\n      })\n    );\n  }", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r460190420", "createdAt": "2020-07-24T17:27:53Z", "author": {"login": "Rachael-E"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -160,15 +128,56 @@ private void changeZValue(){\n     double zValue = zValueSlider.getValue();\n \n     // update the geometry of each of the existing graphics to include the new z-value\n-    for (GraphicsOverlay graphicsOverlay : sceneView.getGraphicsOverlays()) {\n-      for (Graphic graphic : graphicsOverlay.getGraphics()) {\n+    sceneView.getGraphicsOverlays().forEach(graphicsOverlay ->\n+      graphicsOverlay.getGraphics().stream().filter(\n+        graphic -> graphic.getGeometry().getGeometryType() == GeometryType.POINT).forEach(graphic -> {\n         Geometry geometry = graphic.getGeometry();\n-        if (geometry.getGeometryType().equals(GeometryType.POINT)) {\n-          Point currentPoint = (Point) geometry;\n-          Point updatedPoint = new Point(currentPoint.getX(), currentPoint.getY(), zValue, currentPoint.getSpatialReference());\n-          graphic.setGeometry(updatedPoint);\n-        }\n-      }\n+        Point currentPoint = (Point) geometry;\n+        Point updatedPoint = new Point(currentPoint.getX(), currentPoint.getY(), zValue, currentPoint.getSpatialReference());\n+        graphic.setGeometry(updatedPoint);\n+      }));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dbe904cd0288465541f0fc190b6a7a177ad39e6"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjEyMTUzOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzoyODozMFrOG230HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzoyODozMFrOG230HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE5MDc0OQ==", "bodyText": "again probably my fault for not spotting this in the suggestion! Can remove this empty javaDoc line.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r460190749", "createdAt": "2020-07-24T17:28:30Z", "author": {"login": "Rachael-E"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -160,15 +128,56 @@ private void changeZValue(){\n     double zValue = zValueSlider.getValue();\n \n     // update the geometry of each of the existing graphics to include the new z-value\n-    for (GraphicsOverlay graphicsOverlay : sceneView.getGraphicsOverlays()) {\n-      for (Graphic graphic : graphicsOverlay.getGraphics()) {\n+    sceneView.getGraphicsOverlays().forEach(graphicsOverlay ->\n+      graphicsOverlay.getGraphics().stream().filter(\n+        graphic -> graphic.getGeometry().getGeometryType() == GeometryType.POINT).forEach(graphic -> {\n         Geometry geometry = graphic.getGeometry();\n-        if (geometry.getGeometryType().equals(GeometryType.POINT)) {\n-          Point currentPoint = (Point) geometry;\n-          Point updatedPoint = new Point(currentPoint.getX(), currentPoint.getY(), zValue, currentPoint.getSpatialReference());\n-          graphic.setGeometry(updatedPoint);\n-        }\n-      }\n+        Point currentPoint = (Point) geometry;\n+        Point updatedPoint = new Point(currentPoint.getX(), currentPoint.getY(), zValue, currentPoint.getSpatialReference());\n+        graphic.setGeometry(updatedPoint);\n+      }));\n+  }\n+\n+  /**\n+   * Creates a new TextSymbol from a string used to identify a surface placement type.\n+   * @param text string to be used as text within the TextSymbol constructor\n+   * @return a new TextSymbol\n+   *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dbe904cd0288465541f0fc190b6a7a177ad39e6"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MjE0MzMwOnYy", "diffSide": "RIGHT", "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzozNToxNVrOG24Baw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNzozNToxNVrOG24Baw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE5NDE1NQ==", "bodyText": "I'm getting an IDE suggestion here to replace the == operator with .equals().  The latter method checks the actual contents of the string, whereas the former operator checks whether the references to the objects are equal.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/531#discussion_r460194155", "createdAt": "2020-07-24T17:35:15Z", "author": {"login": "Rachael-E"}, "path": "scene/surface-placement/src/main/java/com/esri/samples/surface_placement/SurfacePlacementController.java", "diffHunk": "@@ -160,15 +128,56 @@ private void changeZValue(){\n     double zValue = zValueSlider.getValue();\n \n     // update the geometry of each of the existing graphics to include the new z-value\n-    for (GraphicsOverlay graphicsOverlay : sceneView.getGraphicsOverlays()) {\n-      for (Graphic graphic : graphicsOverlay.getGraphics()) {\n+    sceneView.getGraphicsOverlays().forEach(graphicsOverlay ->\n+      graphicsOverlay.getGraphics().stream().filter(\n+        graphic -> graphic.getGeometry().getGeometryType() == GeometryType.POINT).forEach(graphic -> {\n         Geometry geometry = graphic.getGeometry();\n-        if (geometry.getGeometryType().equals(GeometryType.POINT)) {\n-          Point currentPoint = (Point) geometry;\n-          Point updatedPoint = new Point(currentPoint.getX(), currentPoint.getY(), zValue, currentPoint.getSpatialReference());\n-          graphic.setGeometry(updatedPoint);\n-        }\n-      }\n+        Point currentPoint = (Point) geometry;\n+        Point updatedPoint = new Point(currentPoint.getX(), currentPoint.getY(), zValue, currentPoint.getSpatialReference());\n+        graphic.setGeometry(updatedPoint);\n+      }));\n+  }\n+\n+  /**\n+   * Creates a new TextSymbol from a string used to identify a surface placement type.\n+   * @param text string to be used as text within the TextSymbol constructor\n+   * @return a new TextSymbol\n+   *\n+   */\n+  private TextSymbol createTextSymbol(String text) {\n+\n+    TextSymbol textSymbol = new TextSymbol(14, text, 0xFF0000FF,\n+      TextSymbol.HorizontalAlignment.LEFT, TextSymbol.VerticalAlignment.MIDDLE);\n+    textSymbol.setOffsetX(20);\n+\n+    if (text == \"RELATIVE TO SCENE\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8dbe904cd0288465541f0fc190b6a7a177ad39e6"}, "originalPosition": 132}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 61, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}