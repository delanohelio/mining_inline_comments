{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1OTY0MzM5", "number": 512, "title": "New Sample: Identify raster cell", "bodyText": "Another fun and interactive sample.\nI think the logic for freezing/unlocking the callout worked out ok, but let me know if you have any other ideas.", "createdAt": "2020-05-11T09:01:07Z", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512", "merged": true, "mergeCommit": {"oid": "5f8a26c599617e76c71cf97d17e4da4b1a860902"}, "closed": true, "closedAt": "2020-07-16T11:20:06Z", "author": {"login": "JonLavi"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcd725lgH2gAyNDE1OTY0MzM5OjdlZWJjZTUxMDI5NGIwMTdlMGI0Y2NlZGNlZjk4YmEzNTRlZjIxNmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1dPSmgFqTQ0OTc0NjAwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7eebce510294b017e0b4ccedcef98ba354ef216e", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/7eebce510294b017e0b4ccedcef98ba354ef216e", "committedDate": "2020-05-04T09:14:15Z", "message": "add sample"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7501893edfc01a9bc882411748bb2ec330e14991", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/7501893edfc01a9bc882411748bb2ec330e14991", "committedDate": "2020-05-04T09:23:50Z", "message": "add readme template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1379775648c73836b572d272c89cefc5fa01fbfe", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/1379775648c73836b572d272c89cefc5fa01fbfe", "committedDate": "2020-05-05T10:42:18Z", "message": "update with identifying on the fly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "433c24bc4a2a0b6c592dd936f1331b71906c2a08", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/433c24bc4a2a0b6c592dd936f1331b71906c2a08", "committedDate": "2020-05-05T10:45:16Z", "message": "better error displaying"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d2ced95c3034ade2261464f62d2dd77c02b8957", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8d2ced95c3034ade2261464f62d2dd77c02b8957", "committedDate": "2020-05-11T08:51:31Z", "message": "update data source and README.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb18eaa72504b01123c88e68b78827493e6d61c5", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/cb18eaa72504b01123c88e68b78827493e6d61c5", "committedDate": "2020-05-11T08:55:43Z", "message": "clean up comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6587295e904d4662334b3b953b7ad59e4213f257", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/6587295e904d4662334b3b953b7ad59e4213f257", "committedDate": "2020-05-11T08:59:23Z", "message": "set runtime version to 100.8"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e1fcb482ef2c88e15640887eb49728ada87f396", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/6e1fcb482ef2c88e15640887eb49728ada87f396", "committedDate": "2020-05-11T09:03:22Z", "message": "remove unnecessary guard"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "750e2910237e9de735eb9be5133f24cfd04563c9", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/750e2910237e9de735eb9be5133f24cfd04563c9", "committedDate": "2020-05-11T09:04:15Z", "message": "restore changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNjQ2MDI5", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#pullrequestreview-411646029", "createdAt": "2020-05-14T09:53:57Z", "commit": {"oid": "750e2910237e9de735eb9be5133f24cfd04563c9"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOTo1Mzo1OFrOGVUzOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTowMjozOVrOGVXJHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxNDA3NA==", "bodyText": "was this what was finally agreed upon in the design? we don't usually put UI interactions in here such as \"at the clicked location\", since this is more a description of how to use the sample (and the main way to use the sample is to hover with the mouse anyway). How about just\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Get the cell value of a local raster at the clicked location and display the result in a callout.\n          \n          \n            \n            Get the cell value of a local raster and display the result in a callout.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425014074", "createdAt": "2020-05-14T09:53:58Z", "author": {"login": "Rachael-E"}, "path": "raster/identify-raster-cell/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Identify raster cell\n+\n+Get the cell value of a local raster at the clicked location and display the result in a callout.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750e2910237e9de735eb9be5133f24cfd04563c9"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMzAwOA==", "bodyText": "since the raster layer extents are being used to set the map viewpoint once it's loaded, they are overriding the settings here. I think we should have the level of detail a little closer, but with the raster layer changing the map viewpoint, we should handle that change there rather than here (since this is overwritten).  For here we can just do:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);\n          \n          \n            \n                        ArcGISMap map = new ArcGISMap(Basemap.createOceans());", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425023008", "createdAt": "2020-05-14T10:08:30Z", "author": {"login": "Rachael-E"}, "path": "raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.identify_raster_cell;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.input.MouseEvent;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.RasterLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.view.Callout;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.raster.Raster;\n+import com.esri.arcgisruntime.raster.RasterCell;\n+\n+public class IdentifyRasterCellSample extends Application {\n+\n+    private boolean calloutLocked = false;\n+    private Callout callout;\n+    private MapView mapView;\n+    private RasterLayer rasterLayer;\n+\n+    @Override\n+    public void start(Stage stage) {\n+\n+        try {\n+            // create stack pane and application scene\n+            StackPane stackPane = new StackPane();\n+            Scene scene = new Scene(stackPane);\n+\n+            // set title, size, and add scene to stage\n+            stage.setTitle(\"Identify Raster Cell Sample\");\n+            stage.setWidth(800);\n+            stage.setHeight(700);\n+            stage.setScene(scene);\n+            stage.show();\n+\n+            // create a map view\n+            mapView = new MapView();\n+\n+            // create a Map with an oceans basemap\n+            ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750e2910237e9de735eb9be5133f24cfd04563c9"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyMzQ5OQ==", "bodyText": "I found the map was too far zoomed out: the focus and majority of the map should be on the raster layer. I suggest a little closer using a padding of 50 instead of 150.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                mapView.setViewpointGeometryAsync(rasterLayer.getFullExtent(), 150);\n          \n          \n            \n                                mapView.setViewpointGeometryAsync(rasterLayer.getFullExtent(), 50);", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425023499", "createdAt": "2020-05-14T10:09:19Z", "author": {"login": "Rachael-E"}, "path": "raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.identify_raster_cell;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.input.MouseEvent;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.RasterLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.view.Callout;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.raster.Raster;\n+import com.esri.arcgisruntime.raster.RasterCell;\n+\n+public class IdentifyRasterCellSample extends Application {\n+\n+    private boolean calloutLocked = false;\n+    private Callout callout;\n+    private MapView mapView;\n+    private RasterLayer rasterLayer;\n+\n+    @Override\n+    public void start(Stage stage) {\n+\n+        try {\n+            // create stack pane and application scene\n+            StackPane stackPane = new StackPane();\n+            Scene scene = new Scene(stackPane);\n+\n+            // set title, size, and add scene to stage\n+            stage.setTitle(\"Identify Raster Cell Sample\");\n+            stage.setWidth(800);\n+            stage.setHeight(700);\n+            stage.setScene(scene);\n+            stage.show();\n+\n+            // create a map view\n+            mapView = new MapView();\n+\n+            // create a Map with an oceans basemap\n+            ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);\n+\n+            // add the map to a map view\n+            mapView.setMap(map);\n+\n+            // create a raster from a local raster file\n+            Raster raster = new Raster(new File(System.getProperty(\"data.dir\"), \"./samples-data/SA_EVI_8Day_03May20/SA_EVI_8Day_03May20.tif\").getAbsolutePath());\n+\n+            // create a raster layer\n+            rasterLayer = new RasterLayer(raster);\n+\n+            // add the raster as an operational layer\n+            map.getOperationalLayers().add(rasterLayer);\n+\n+            // set viewpoint on the raster\n+            rasterLayer.addDoneLoadingListener(() -> {\n+                if (map.getLoadStatus() == LoadStatus.LOADED) {\n+                    mapView.setViewpointGeometryAsync(rasterLayer.getFullExtent(), 150);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750e2910237e9de735eb9be5133f24cfd04563c9"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyNjcxNA==", "bodyText": "some missing words here, I've put it back together along with fixing a wee typo.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Move the mouse pointer over an area of the raster to identify the raster cell at that location, it and see the cell attributes information displayed in a callout. You can click the prmary mouse button to lock the callout in place, and click again to release the callout and resume identifying on-the-fly.\n          \n          \n            \n            Move the mouse pointer over an area of the raster to identify the raster cell at that location. The raster cell attribute information will display in a callout. You can click the primary mouse button to lock the callout in place, and click again to release the callout and resume identifying on-the-fly.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425026714", "createdAt": "2020-05-14T10:14:32Z", "author": {"login": "Rachael-E"}, "path": "raster/identify-raster-cell/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Identify raster cell\n+\n+Get the cell value of a local raster at the clicked location and display the result in a callout.\n+\n+![Image of identify raster cell](IdentifyRasterCell.png)\n+\n+## Use case\n+\n+You may want to identify a raster layer to get its exact cell value in the case the approximate value conveyed by its symbology is not sufficient. The information available for the raster cell depends on the type of raster layer being identified. For example, a 3-band satellite or aerial image might provide 8-bit RGB values, whereas a digital elevation model (DEM) would provide floating point z values. By identifying a raster cell of a DEM, you can retrieve the precise elevation of a location.\n+\n+## How to use the sample\n+\n+Move the mouse pointer over an area of the raster to identify the raster cell at that location, it and see the cell attributes information displayed in a callout. You can click the prmary mouse button to lock the callout in place, and click again to release the callout and resume identifying on-the-fly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750e2910237e9de735eb9be5133f24cfd04563c9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAyNzE0OA==", "bodyText": "kinda think we should specify it's a raster layer here\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              * Call `identifyLayerAsync(...)` passing in the layer, screen point, tolerance, whether to return popups only, and maximum number of results.\n          \n          \n            \n              * Call `identifyLayerAsync(...)` passing in the raster layer, screen point, tolerance, whether to return popups only, and maximum number of results.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425027148", "createdAt": "2020-05-14T10:15:18Z", "author": {"login": "Rachael-E"}, "path": "raster/identify-raster-cell/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Identify raster cell\n+\n+Get the cell value of a local raster at the clicked location and display the result in a callout.\n+\n+![Image of identify raster cell](IdentifyRasterCell.png)\n+\n+## Use case\n+\n+You may want to identify a raster layer to get its exact cell value in the case the approximate value conveyed by its symbology is not sufficient. The information available for the raster cell depends on the type of raster layer being identified. For example, a 3-band satellite or aerial image might provide 8-bit RGB values, whereas a digital elevation model (DEM) would provide floating point z values. By identifying a raster cell of a DEM, you can retrieve the precise elevation of a location.\n+\n+## How to use the sample\n+\n+Move the mouse pointer over an area of the raster to identify the raster cell at that location, it and see the cell attributes information displayed in a callout. You can click the prmary mouse button to lock the callout in place, and click again to release the callout and resume identifying on-the-fly.\n+\n+## How it works\n+\n+1. Add a listener to the `MapView` to capture mouse clicks.\n+2. On click:\n+  * Dismiss the `Callout`, if one is showing.\n+  * Call `identifyLayerAsync(...)` passing in the layer, screen point, tolerance, whether to return popups only, and maximum number of results.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750e2910237e9de735eb9be5133f24cfd04563c9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAzMTU3OA==", "bodyText": "I've noticed that none of the data goes below 0.0 in the sample, and with the description as is, I'd be expecting the data to show values between -1 and +1. It seems the description is a generalisation, but I think it would be good to tweak it slightly to more accurately reflect the values in the sample. However I noticed the imagery/data we're using is described as EVI (Enhanced Vegetation Index) in its file name (not as NDVI). I can't remember who authored the data here but it would be worth to double check with them as we may need to change the description to EVI.\nI think a better description could be the following since it matches the data value ranges shown and isn't a general description (taken from https://www.sentinel-hub.com/eoproducts/ndvi-normalized-difference-vegetation-index), though this is assumes it is NDVI rather than EVI:\n\"Low, positive values represent shrub and grassland (approximately 0.2 to 0.4), while high values indicate temperate and tropical rainforests (values approaching 1).\"", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425031578", "createdAt": "2020-05-14T10:23:31Z", "author": {"login": "Rachael-E"}, "path": "raster/identify-raster-cell/README.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Identify raster cell\n+\n+Get the cell value of a local raster at the clicked location and display the result in a callout.\n+\n+![Image of identify raster cell](IdentifyRasterCell.png)\n+\n+## Use case\n+\n+You may want to identify a raster layer to get its exact cell value in the case the approximate value conveyed by its symbology is not sufficient. The information available for the raster cell depends on the type of raster layer being identified. For example, a 3-band satellite or aerial image might provide 8-bit RGB values, whereas a digital elevation model (DEM) would provide floating point z values. By identifying a raster cell of a DEM, you can retrieve the precise elevation of a location.\n+\n+## How to use the sample\n+\n+Move the mouse pointer over an area of the raster to identify the raster cell at that location, it and see the cell attributes information displayed in a callout. You can click the prmary mouse button to lock the callout in place, and click again to release the callout and resume identifying on-the-fly.\n+\n+## How it works\n+\n+1. Add a listener to the `MapView` to capture mouse clicks.\n+2. On click:\n+  * Dismiss the `Callout`, if one is showing.\n+  * Call `identifyLayerAsync(...)` passing in the layer, screen point, tolerance, whether to return popups only, and maximum number of results.\n+  * Await the result of the identify and then get the `GeoElement` from the layer result.\n+  * Create a callout at the calculated map point and populate the callout content with text from the `RasterCell` attributes. \n+  * Show the callout.\n+\n+## Relevant API\n+\n+* IdentifyLayerResult\n+* RasterCell\n+* RasterLayer\n+\n+## About the data\n+\n+The data shown is an NDVI classification derived from MODIS imagery between 27 Apr 2020 and 4 May 2020. It comes from the [NASA Worldview application](https://worldview.earthdata.nasa.gov/). In a normalized difference vegetation index, or [NDVI](https://en.wikipedia.org/wiki/Normalized_difference_vegetation_index), values range between -1 and +1 with the positive end of the spectrum showing green vegetation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750e2910237e9de735eb9be5133f24cfd04563c9"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAzMTk3OA==", "bodyText": "I don't think we usually show the new paragraph notation here?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"description\": \"\\nGet the cell value of a local raster at the clicked location and display the result in a callout.\",\n          \n          \n            \n                \"description\": \"Get the cell value of a local raster at the clicked location and display the result in a callout.\",", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425031978", "createdAt": "2020-05-14T10:24:15Z", "author": {"login": "Rachael-E"}, "path": "raster/identify-raster-cell/README.metadata.json", "diffHunk": "@@ -0,0 +1,29 @@\n+{\n+    \"category\": \"Raster\",\n+    \"description\": \"\\nGet the cell value of a local raster at the clicked location and display the result in a callout.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750e2910237e9de735eb9be5133f24cfd04563c9"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA1MDk2MA==", "bodyText": "I'm not too sure what this line of code does? I was expecting the mouse arrow icon to become transparent or for something to become to transparent but when I comment out the code I see no change?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425050960", "createdAt": "2020-05-14T10:59:44Z", "author": {"login": "Rachael-E"}, "path": "raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.identify_raster_cell;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.input.MouseEvent;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.RasterLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.view.Callout;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.raster.Raster;\n+import com.esri.arcgisruntime.raster.RasterCell;\n+\n+public class IdentifyRasterCellSample extends Application {\n+\n+    private boolean calloutLocked = false;\n+    private Callout callout;\n+    private MapView mapView;\n+    private RasterLayer rasterLayer;\n+\n+    @Override\n+    public void start(Stage stage) {\n+\n+        try {\n+            // create stack pane and application scene\n+            StackPane stackPane = new StackPane();\n+            Scene scene = new Scene(stackPane);\n+\n+            // set title, size, and add scene to stage\n+            stage.setTitle(\"Identify Raster Cell Sample\");\n+            stage.setWidth(800);\n+            stage.setHeight(700);\n+            stage.setScene(scene);\n+            stage.show();\n+\n+            // create a map view\n+            mapView = new MapView();\n+\n+            // create a Map with an oceans basemap\n+            ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);\n+\n+            // add the map to a map view\n+            mapView.setMap(map);\n+\n+            // create a raster from a local raster file\n+            Raster raster = new Raster(new File(System.getProperty(\"data.dir\"), \"./samples-data/SA_EVI_8Day_03May20/SA_EVI_8Day_03May20.tif\").getAbsolutePath());\n+\n+            // create a raster layer\n+            rasterLayer = new RasterLayer(raster);\n+\n+            // add the raster as an operational layer\n+            map.getOperationalLayers().add(rasterLayer);\n+\n+            // set viewpoint on the raster\n+            rasterLayer.addDoneLoadingListener(() -> {\n+                if (map.getLoadStatus() == LoadStatus.LOADED) {\n+                    mapView.setViewpointGeometryAsync(rasterLayer.getFullExtent(), 150);\n+                } else {\n+                    Alert alert = new Alert(Alert.AlertType.ERROR, \"Raster Layer Failed to Load!\");\n+                    alert.show();\n+                }\n+            });\n+\n+            // get a handle on the callout\n+            callout = mapView.getCallout();\n+            callout.setMouseTransparent(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750e2910237e9de735eb9be5133f24cfd04563c9"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA1MjQ0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // get the read only list of geo-elements (they contain RasterCell's)\n          \n          \n            \n                            // get the read only list of geo-elements (they contain RasterCells)", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r425052445", "createdAt": "2020-05-14T11:02:39Z", "author": {"login": "Rachael-E"}, "path": "raster/identify-raster-cell/src/main/java/com/esri/samples/identify_raster_cell/IdentifyRasterCellSample.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Copyright 2020 Esri.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.esri.samples.identify_raster_cell;\n+\n+import javafx.application.Application;\n+import javafx.geometry.Point2D;\n+import javafx.scene.Scene;\n+import javafx.scene.control.Alert;\n+import javafx.scene.input.MouseButton;\n+import javafx.scene.input.MouseEvent;\n+import javafx.scene.layout.StackPane;\n+import javafx.stage.Stage;\n+import java.io.File;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+\n+import com.esri.arcgisruntime.concurrent.ListenableFuture;\n+import com.esri.arcgisruntime.geometry.Point;\n+import com.esri.arcgisruntime.layers.RasterLayer;\n+import com.esri.arcgisruntime.loadable.LoadStatus;\n+import com.esri.arcgisruntime.mapping.ArcGISMap;\n+import com.esri.arcgisruntime.mapping.Basemap;\n+import com.esri.arcgisruntime.mapping.GeoElement;\n+import com.esri.arcgisruntime.mapping.view.Callout;\n+import com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;\n+import com.esri.arcgisruntime.mapping.view.MapView;\n+import com.esri.arcgisruntime.raster.Raster;\n+import com.esri.arcgisruntime.raster.RasterCell;\n+\n+public class IdentifyRasterCellSample extends Application {\n+\n+    private boolean calloutLocked = false;\n+    private Callout callout;\n+    private MapView mapView;\n+    private RasterLayer rasterLayer;\n+\n+    @Override\n+    public void start(Stage stage) {\n+\n+        try {\n+            // create stack pane and application scene\n+            StackPane stackPane = new StackPane();\n+            Scene scene = new Scene(stackPane);\n+\n+            // set title, size, and add scene to stage\n+            stage.setTitle(\"Identify Raster Cell Sample\");\n+            stage.setWidth(800);\n+            stage.setHeight(700);\n+            stage.setScene(scene);\n+            stage.show();\n+\n+            // create a map view\n+            mapView = new MapView();\n+\n+            // create a Map with an oceans basemap\n+            ArcGISMap map = new ArcGISMap(Basemap.Type.OCEANS, -33.9, 18.6, 9);\n+\n+            // add the map to a map view\n+            mapView.setMap(map);\n+\n+            // create a raster from a local raster file\n+            Raster raster = new Raster(new File(System.getProperty(\"data.dir\"), \"./samples-data/SA_EVI_8Day_03May20/SA_EVI_8Day_03May20.tif\").getAbsolutePath());\n+\n+            // create a raster layer\n+            rasterLayer = new RasterLayer(raster);\n+\n+            // add the raster as an operational layer\n+            map.getOperationalLayers().add(rasterLayer);\n+\n+            // set viewpoint on the raster\n+            rasterLayer.addDoneLoadingListener(() -> {\n+                if (map.getLoadStatus() == LoadStatus.LOADED) {\n+                    mapView.setViewpointGeometryAsync(rasterLayer.getFullExtent(), 150);\n+                } else {\n+                    Alert alert = new Alert(Alert.AlertType.ERROR, \"Raster Layer Failed to Load!\");\n+                    alert.show();\n+                }\n+            });\n+\n+            // get a handle on the callout\n+            callout = mapView.getCallout();\n+            callout.setMouseTransparent(true);\n+\n+            // start identifying on-the-fly if the mouse enters the map view, and the callout is not locked\n+            mapView.setOnMouseEntered(mouseEvent -> {\n+                if (!calloutLocked) {\n+                    mapView.setOnMouseMoved(this::identifyRasterCell);\n+                }\n+            });\n+\n+            // stop identifying on-the-fly when the mouse leaves the map view\n+            mapView.setOnMouseExited(null);\n+\n+            // on click, either lock the callout in place if raster cells are identified on-the-fly,\n+            // or release the callout again and start identifying on-the-fly\n+            mapView.setOnMouseClicked(mouseEvent -> {\n+                if (mouseEvent.getButton() == MouseButton.PRIMARY && mouseEvent.isStillSincePress()) {\n+\n+                    if (!calloutLocked) {\n+                        // stop identifying on the fly\n+                        mapView.setOnMouseMoved(null);\n+                        // lock the callout in place\n+                        calloutLocked = true;\n+\n+                    } else {\n+                        // dismiss the callout\n+                        callout.dismiss();\n+                        // unlock the callout\n+                        calloutLocked = false;\n+                        // show a new callout at the clicked location\n+                        identifyRasterCell(mouseEvent);\n+                        // start identifying on-the-fly\n+                        mapView.setOnMouseMoved(this::identifyRasterCell);\n+                    }\n+                }\n+            });\n+\n+            // add the map view to stack pane\n+            stackPane.getChildren().addAll(mapView);\n+\n+        } catch (Exception e) {\n+            // on any error, display the stack trace\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    /**\n+     * Identifies the raster cell at the mouse event's location and displays a callout at that location.\n+     *\n+     * @param mouseEvent the mouse event used to identify the raster cell and show the callout\n+     */\n+    private void identifyRasterCell(MouseEvent mouseEvent) {\n+\n+        // get the map point where the user clicked\n+        Point2D point = new Point2D(mouseEvent.getX(), mouseEvent.getY());\n+        Point mapPoint = mapView.screenToLocation(point);\n+\n+        // identify the layers at the clicked location\n+        ListenableFuture<IdentifyLayerResult> identifyLayerResultFuture\n+                = mapView.identifyLayerAsync(rasterLayer, point, 10, false, 1);\n+\n+        identifyLayerResultFuture.addDoneListener(() -> {\n+            try {\n+                // get the result of the query\n+                IdentifyLayerResult identifyLayerResult = identifyLayerResultFuture.get();\n+\n+                // get the read only list of geo-elements (they contain RasterCell's)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750e2910237e9de735eb9be5133f24cfd04563c9"}, "originalPosition": 161}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cacab4f2c6a2d96a395585979c5fb78e40f88a1e", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/cacab4f2c6a2d96a395585979c5fb78e40f88a1e", "committedDate": "2020-05-15T08:30:41Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Rachael Ellen <36415565+Rachael-E@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8e7c0d52ac9a4623d1d54dc1bf34e025998d1f6", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/c8e7c0d52ac9a4623d1d54dc1bf34e025998d1f6", "committedDate": "2020-05-15T08:31:57Z", "message": "add comment for callout mouse transparency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ebd4c82921cac283a13f4664b0d86d60e2d1daf", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/9ebd4c82921cac283a13f4664b0d86d60e2d1daf", "committedDate": "2020-05-15T16:07:33Z", "message": "update callout title"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MTkzNzcz", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#pullrequestreview-415193773", "createdAt": "2020-05-20T10:20:41Z", "commit": {"oid": "9ebd4c82921cac283a13f4664b0d86d60e2d1daf"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoyMDo0MVrOGYE_Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoyMDo0MVrOGYE_Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMDczNA==", "bodyText": "this needs to be updated to match the new description\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"description\": \"Get the cell value of a local raster at the clicked location and display the result in a callout.\",\n          \n          \n            \n                \"description\": \"Get the cell value of a local raster and display the result in a callout.\",", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r427900734", "createdAt": "2020-05-20T10:20:41Z", "author": {"login": "Rachael-E"}, "path": "raster/identify-raster-cell/README.metadata.json", "diffHunk": "@@ -1,6 +1,6 @@\n {\n     \"category\": \"Raster\",\n-    \"description\": \"\\nGet the cell value of a local raster at the clicked location and display the result in a callout.\",\n+    \"description\": \"Get the cell value of a local raster at the clicked location and display the result in a callout.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ebd4c82921cac283a13f4664b0d86d60e2d1daf"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3e2a64c16e3b2b74c278b873ec00065f497d1ec", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/b3e2a64c16e3b2b74c278b873ec00065f497d1ec", "committedDate": "2020-05-20T10:27:38Z", "message": "Update raster/identify-raster-cell/README.metadata.json\n\nCo-authored-by: Rachael Ellen <36415565+Rachael-E@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTU5NDAy", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#pullrequestreview-447559402", "createdAt": "2020-07-13T20:01:28Z", "commit": {"oid": "b3e2a64c16e3b2b74c278b873ec00065f497d1ec"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDowMToyOFrOGw3w5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDowMjoxMFrOGw3yLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg5ODQ2OQ==", "bodyText": "to be sure you should add all modules.  If anyone adds functionality to the app it will break.  We should add all modules to all samples by default.\n    modules = [ 'javafx.controls',\n                'javafx.base',\n                'javafx.graphics',\n                'javafx.fxml',\n                'javafx.web',\n                'javafx.media']", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r453898469", "createdAt": "2020-07-13T20:01:28Z", "author": {"login": "mbcoder"}, "path": "raster/identify-raster-cell/build.gradle", "diffHunk": "@@ -0,0 +1,77 @@\n+plugins {\n+    id 'application'\n+    id 'org.openjfx.javafxplugin' version '0.0.5'\n+}\n+\n+group = 'com.esri.samples'\n+\n+ext {\n+    arcgisVersion = '100.8.0'\n+}\n+\n+javafx {\n+    version = \"11.0.1\"\n+    modules = [ 'javafx.controls', 'javafx.fxml' ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3e2a64c16e3b2b74c278b873ec00065f497d1ec"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg5ODc5OQ==", "bodyText": "we should be using 11.0.2 which is the latest public version", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#discussion_r453898799", "createdAt": "2020-07-13T20:02:10Z", "author": {"login": "mbcoder"}, "path": "raster/identify-raster-cell/build.gradle", "diffHunk": "@@ -0,0 +1,77 @@\n+plugins {\n+    id 'application'\n+    id 'org.openjfx.javafxplugin' version '0.0.5'\n+}\n+\n+group = 'com.esri.samples'\n+\n+ext {\n+    arcgisVersion = '100.8.0'\n+}\n+\n+javafx {\n+    version = \"11.0.1\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3e2a64c16e3b2b74c278b873ec00065f497d1ec"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d477d0a29e1c53ebd65b24f4d52b5f77348fc53", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/8d477d0a29e1c53ebd65b24f4d52b5f77348fc53", "committedDate": "2020-07-14T08:27:05Z", "message": "update JavaFX version and add all modules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "648343b649a78116beb75063cf5f26dab559111a", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/648343b649a78116beb75063cf5f26dab559111a", "committedDate": "2020-07-16T10:10:48Z", "message": "keep only relevant javafx modules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "270f5e2927d079dd78af26a2ed214c70af5ab416", "author": {"user": {"login": "JonLavi", "name": "Jonathan Lavi"}}, "url": "https://github.com/Esri/arcgis-runtime-samples-java/commit/270f5e2927d079dd78af26a2ed214c70af5ab416", "committedDate": "2020-07-16T10:17:52Z", "message": "add screenshot"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NzQ2MDAz", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/512#pullrequestreview-449746003", "createdAt": "2020-07-16T11:08:01Z", "commit": {"oid": "270f5e2927d079dd78af26a2ed214c70af5ab416"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3393, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}