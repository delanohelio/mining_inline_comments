{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NjM3NjI1", "number": 480, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDozMjo1MlrOD1TgZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDozNjozNVrOD1ToGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjIwNzEwOnYy", "diffSide": "RIGHT", "path": "scene/animate-3d-graphic/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDozMjo1MlrOGKrRwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDozMjo1MlrOGKrRwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0ODAwMg==", "bodyText": "heading format update\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            #### Tags\n          \n          \n            \n            ## Tags", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480#discussion_r413848002", "createdAt": "2020-04-23T14:32:52Z", "author": {"login": "Rachael-E"}, "path": "scene/animate-3d-graphic/README.md", "diffHunk": "@@ -1,66 +1,51 @@\n-# Animate 3D Graphic\n+# Animate 3D graphic\n \n-Animate a graphic's position and orientation and follow it with the camera.\n+A camera follows a graphic while the graphic's position and rotation are animated.\n \n-![](Animate3dGraphic.png)\n+![Image of animate 3D graphic](Animate3dGraphic.png)\n \n ## How to use the sample\n \n Animation Controls (Top Left Corner):\n \n * Select a mission -- selects a location with a route for plane to fly.\n * Mission progress -- shows how far along the route the plane is. Slide to change keyframe in animation.\n-* Play -- toggles playing and stopping the animation.\n-* Follow -- toggles camera following plane\n+* Play/Stop -- toggles playing and stopping the animation.\n+* Follow/Free Cam -- toggles camera following plane.\n \n Speed Slider (Top Right Corner):\n \n-* controls speed of animation\n+* Controls speed of animation.\n \n-Map Controls (Bottom Left Corner):\n+2D Map Controls (Bottom Left Corner):\n \n-* Plus and Minus -- controls distance of 2D view from ground level\n-\n-Moving the Camera:\n-\n-* Simply use regular zoom and pan interactions with the mouse. When in follow mode, the `OrbitGeoElementCameraController` being used will keep the camera locked to the plane.\n+* Plus and Minus -- controls distance of 2D view from ground level.\n \n ## How it works\n \n-To animate a `Graphic` by updating it's `Geometry`s, heading, pitch, and roll:\n-\n-1. Create a `GraphicsOverlay` and attach it to the `SceneView`.\n-2. Create a `ModelSceneSymbol` with `AnchorPosition.CENTER`.\n-3. Create a `Graphic(Geometry, Symbol)`.\n-    * set geometry to a point where graphic will be located in scene view\n-    * set symbol to the one we made above\n-4. Add Attributes to graphic.\n-    * Get attributes from graphic, `Graphic.getAttributes()`.\n-    * Add heading, pitch, and roll attribute, `attributes.put(\"[HEADING]\", heading)`;\n-5. Create a `SimpleRenderer` to access and set it's expression properties.\n-    * access properties with `Renderer.getSceneProperties()`\n-    * set heading, pitch, and roll expressions, `SceneProperties.setHeadingExpression(\"[HEADING]\")`.\n-6. Add graphic to the graphics overlay.\n-7. Set renderer to graphics overlay, `GraphicsOverlay.setRenderer(Renderer)`\n-8. Update graphic's location, `Graphic.setGeometry(Point)`.\n-9. Update symbol's heading, pitch, and roll, `attributes.replace(\"[HEADING]\", heading)`.\n+1. Create a `ModelSceneSymbol` object.\n+2. Create a `Graphic` object and set its geometry to a `Point`.\n+3. Set the `ModelSceneSymbol` object to the graphic.\n+4. Add heading, pitch, and roll attributes to the graphic. Get the attributes from the graphic with `Graphic.getAttributes()`.\n+5. Create a `SimpleRenderer` object and set its expression properties.\n+6. Add graphic and a renderer to the graphics overlay.\n+7. Create a `OrbitGeoElementCameraController` which is set to target the graphic.\n+8. Assign the camera controller to the `SceneView`.\n+9. Update the graphic's location, heading, pitch, and roll.\n \n ## Relevant API\n \n-* 3D\n-* ArcGISMap\n * ArcGISScene\n * Camera\n * GlobeCameraController\n * Graphic\n * GraphicsOverlay\n-* LayerSceneProperties.SurfacePlacement\n-* MapView\n * ModelSceneSymbol\n * OrbitGeoElementCameraController\n-* Point\n-* Polyline\n * Renderer\n-* Renderer.SceneProperties\n+* SceneProperties\n * SceneView\n-* Viewpoint\n+* SurfacePlacement\n+\n+#### Tags", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97c131372436ed494bb264ab4f88dfc17fa3f63a"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjIxMjAzOnYy", "diffSide": "RIGHT", "path": "scene/change-atmosphere-effect/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDozMzo0NVrOGKrU0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDozMzo0NVrOGKrU0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0ODc4NA==", "bodyText": "replacing with asterisks like our other samples\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - ArcGISScene\n          \n          \n            \n            - AtmosphereEffect\n          \n          \n            \n            - SceneView\n          \n          \n            \n            * ArcGISScene\n          \n          \n            \n            * AtmosphereEffect\n          \n          \n            \n            * SceneView", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480#discussion_r413848784", "createdAt": "2020-04-23T14:33:45Z", "author": {"login": "Rachael-E"}, "path": "scene/change-atmosphere-effect/README.md", "diffHunk": "@@ -1,34 +1,36 @@\n-# Change Atmosphere Effect\n+# Change atmosphere effect\n \n-Change the appearance of the atmosphere in a scene.\n+Changes the appearance of the atmosphere in a scene.\n \n-![](ChangeAtmosphereEffect.gif)\n+![Image of change atmosphere effect](ChangeAtmosphereEffect.gif)\n+\n+## Use case\n+\n+Atmospheric effects can be used to make the scene view look more realistic.\n \n ## How to use the sample\n \n Select one of the three available atmosphere effects. The sky will change to display the selected atmosphere effect.\n \n ## How it works\n \n-To change the atmosphere effect:\n-\n 1. Create an `ArcGISScene` and display it in a `SceneView`.\n 2. Change the atmosphere effect with `sceneView.setAtmosphereEffect(atmosphereEffect)`.\n \n ## Relevant API\n \n-* ArcGISScene\n-* AtmosphereEffect\n-* SceneView\n+- ArcGISScene\n+- AtmosphereEffect\n+- SceneView", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97c131372436ed494bb264ab4f88dfc17fa3f63a"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjIxODczOnYy", "diffSide": "RIGHT", "path": "scene/choose-camera-controller/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDozNTowNVrOGKrZKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDozNTowNVrOGKrZKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg0OTg5Nw==", "bodyText": "additional spaces crept in here\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *   ArcGISScene\n          \n          \n            \n            *   Camera\n          \n          \n            \n            *   GlobeCameraController\n          \n          \n            \n            *   OrbitGeoElementCameraController\n          \n          \n            \n            *   OrbitLocationCameraController\n          \n          \n            \n            *   SceneView\n          \n          \n            \n            * ArcGISScene\n          \n          \n            \n            * Camera\n          \n          \n            \n            * GlobeCameraController\n          \n          \n            \n            * OrbitGeoElementCameraController\n          \n          \n            \n            * OrbitLocationCameraController\n          \n          \n            \n            * SceneView", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480#discussion_r413849897", "createdAt": "2020-04-23T14:35:05Z", "author": {"login": "Rachael-E"}, "path": "scene/choose-camera-controller/README.md", "diffHunk": "@@ -14,18 +14,18 @@ The application loads with the default globe camera controller. To rotate and fi\n \n ## How it works\n \n-1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`\n+1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`.\n 2. Set the scene view's camera controller with `sceneView.setCameraController(cameraController)`.\n \n ## Relevant API\n \n-* ArcGISScene\n-* Camera\n-* GlobeCameraController\n-* OrbitGeoElementCameraController\n-* OrbitLocationCameraController\n-* SceneView\n+*   ArcGISScene\n+*   Camera\n+*   GlobeCameraController\n+*   OrbitGeoElementCameraController\n+*   OrbitLocationCameraController\n+*   SceneView", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97c131372436ed494bb264ab4f88dfc17fa3f63a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjIyNjgyOnYy", "diffSide": "RIGHT", "path": "scene/choose-camera-controller/README.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDozNjozNVrOGKrePg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo0MjozM1rOGLYThw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg1MTE5OA==", "bodyText": "I'm not too sure about this description, since our sample class doesn't extend Camera controller: we instantiate a new instance of each within the class.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480#discussion_r413851198", "createdAt": "2020-04-23T14:36:35Z", "author": {"login": "Rachael-E"}, "path": "scene/choose-camera-controller/README.md", "diffHunk": "@@ -14,18 +14,18 @@ The application loads with the default globe camera controller. To rotate and fi\n \n ## How it works\n \n-1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`\n+1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97c131372436ed494bb264ab4f88dfc17fa3f63a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM1NjIzNg==", "bodyText": "This just needs rephrasing. I think what it's trying to say is that either GlobeCameraController, OrbitLocationCameraController, or OrbitGeoElementCameraController are classes that extend CameraController, and thus we need to create an instance of one of these three. Any suggestions?", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480#discussion_r414356236", "createdAt": "2020-04-24T07:27:31Z", "author": {"login": "JonLavi"}, "path": "scene/choose-camera-controller/README.md", "diffHunk": "@@ -14,18 +14,18 @@ The application loads with the default globe camera controller. To rotate and fi\n \n ## How it works\n \n-1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`\n+1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg1MTE5OA=="}, "originalCommit": {"oid": "97c131372436ed494bb264ab4f88dfc17fa3f63a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMDAzMA==", "bodyText": "how about:\n\nCreate new instances of the following classes which extend from CameraController:", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480#discussion_r414500030", "createdAt": "2020-04-24T11:23:30Z", "author": {"login": "Rachael-E"}, "path": "scene/choose-camera-controller/README.md", "diffHunk": "@@ -14,18 +14,18 @@ The application loads with the default globe camera controller. To rotate and fi\n \n ## How it works\n \n-1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`\n+1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg1MTE5OA=="}, "originalCommit": {"oid": "97c131372436ed494bb264ab4f88dfc17fa3f63a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU4NTczNQ==", "bodyText": "Sounds good to me!", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/480#discussion_r414585735", "createdAt": "2020-04-24T13:42:33Z", "author": {"login": "JonLavi"}, "path": "scene/choose-camera-controller/README.md", "diffHunk": "@@ -14,18 +14,18 @@ The application loads with the default globe camera controller. To rotate and fi\n \n ## How it works\n \n-1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`\n+1. Create an instance of a class extending `CameraController`: `GlobeCameraController`, `OrbitLocationCameraController`, `OrbitGeoElementCameraController`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg1MTE5OA=="}, "originalCommit": {"oid": "97c131372436ed494bb264ab4f88dfc17fa3f63a"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4946, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}