{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3ODU2MzQ2", "number": 555, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDowOTowOFrOEnEFeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDowOTowOFrOEnEFeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5Mzk2ODU4OnYy", "diffSide": "RIGHT", "path": "feature_layers/list-related-features/src/main/java/com/esri/samples/list_related_features/ListRelatedFeaturesSample.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDowOTowOFrOHXcxVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyMDo1MFrOHYIHKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1MDY3OA==", "bodyText": "For the sake of being extra clear which class we are dealing with here, we should write:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            for (var geoElement : identifiedLayerGeoElements) {\n          \n          \n            \n                            for (GeoElement geoElement : identifiedLayerGeoElements) {\n          \n      \n    \n    \n  \n\nThere's no harm in using var generally, but for samples we want to make sure our users know exactly which class they are dealing with at any point.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/555#discussion_r494350678", "createdAt": "2020-09-24T14:09:08Z", "author": {"login": "JonLavi"}, "path": "feature_layers/list-related-features/src/main/java/com/esri/samples/list_related_features/ListRelatedFeaturesSample.java", "diffHunk": "@@ -102,44 +99,43 @@ public void start(Stage stage) {\n           // check for primary or secondary mouse click\n           if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n \n+            // clear previous selections\n+            featureLayer.clearSelection();\n+\n             // create a point from where the user clicked\n             Point2D point = new Point2D(event.getX(), event.getY());\n \n-            // convert to map coordinate\n-            Point mapPoint = mapView.screenToLocation(point);\n-\n             // identify the clicked features\n-            QueryParameters queryParameters = new QueryParameters();\n-            queryParameters.setGeometry(GeometryEngine.buffer(mapPoint, 10));\n-            final ListenableFuture<FeatureQueryResult> selectFeatureQuery = featureLayer.selectFeaturesAsync\n-                (queryParameters, FeatureLayer.SelectionMode.NEW);\n-            selectFeatureQuery.addDoneListener(() -> {\n+            ListenableFuture<IdentifyLayerResult> identifyLayerResult =\n+              mapView.identifyLayerAsync(featureLayer, point, 10, false, 1);\n+            identifyLayerResult.addDoneListener(() -> {\n \n               try {\n-                FeatureQueryResult result = selectFeatureQuery.get();\n+                IdentifyLayerResult identifiedLayer = identifyLayerResult.get();\n+                List<GeoElement> identifiedLayerGeoElements = identifiedLayer.getElements();\n                 // get the first selected feature\n-                Iterator<Feature> iterator = result.iterator();\n-                if (iterator.hasNext()) {\n-                  ArcGISFeature selectedFeature = (ArcGISFeature) iterator.next();\n+                for (var geoElement : identifiedLayerGeoElements) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc886b43f4ad35da40c3194383c5ee202fbfa71b"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMTkxNA==", "bodyText": "I agree with Jon here: when using var, it's typically to improve readability in the case of a super long class name, or multiple blocks of repeated class types. In this for loop, it's better to err on the side of readability with GeoElement.", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/555#discussion_r495011914", "createdAt": "2020-09-25T14:06:40Z", "author": {"login": "Rachael-E"}, "path": "feature_layers/list-related-features/src/main/java/com/esri/samples/list_related_features/ListRelatedFeaturesSample.java", "diffHunk": "@@ -102,44 +99,43 @@ public void start(Stage stage) {\n           // check for primary or secondary mouse click\n           if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n \n+            // clear previous selections\n+            featureLayer.clearSelection();\n+\n             // create a point from where the user clicked\n             Point2D point = new Point2D(event.getX(), event.getY());\n \n-            // convert to map coordinate\n-            Point mapPoint = mapView.screenToLocation(point);\n-\n             // identify the clicked features\n-            QueryParameters queryParameters = new QueryParameters();\n-            queryParameters.setGeometry(GeometryEngine.buffer(mapPoint, 10));\n-            final ListenableFuture<FeatureQueryResult> selectFeatureQuery = featureLayer.selectFeaturesAsync\n-                (queryParameters, FeatureLayer.SelectionMode.NEW);\n-            selectFeatureQuery.addDoneListener(() -> {\n+            ListenableFuture<IdentifyLayerResult> identifyLayerResult =\n+              mapView.identifyLayerAsync(featureLayer, point, 10, false, 1);\n+            identifyLayerResult.addDoneListener(() -> {\n \n               try {\n-                FeatureQueryResult result = selectFeatureQuery.get();\n+                IdentifyLayerResult identifiedLayer = identifyLayerResult.get();\n+                List<GeoElement> identifiedLayerGeoElements = identifiedLayer.getElements();\n                 // get the first selected feature\n-                Iterator<Feature> iterator = result.iterator();\n-                if (iterator.hasNext()) {\n-                  ArcGISFeature selectedFeature = (ArcGISFeature) iterator.next();\n+                for (var geoElement : identifiedLayerGeoElements) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1MDY3OA=="}, "originalCommit": {"oid": "fc886b43f4ad35da40c3194383c5ee202fbfa71b"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA2MDc3OQ==", "bodyText": "Understood, thanks both for the explanation. I've changed that @Rachael-E", "url": "https://github.com/Esri/arcgis-runtime-samples-java/pull/555#discussion_r495060779", "createdAt": "2020-09-25T15:20:50Z", "author": {"login": "jenmerritt"}, "path": "feature_layers/list-related-features/src/main/java/com/esri/samples/list_related_features/ListRelatedFeaturesSample.java", "diffHunk": "@@ -102,44 +99,43 @@ public void start(Stage stage) {\n           // check for primary or secondary mouse click\n           if (event.isStillSincePress() && event.getButton() == MouseButton.PRIMARY) {\n \n+            // clear previous selections\n+            featureLayer.clearSelection();\n+\n             // create a point from where the user clicked\n             Point2D point = new Point2D(event.getX(), event.getY());\n \n-            // convert to map coordinate\n-            Point mapPoint = mapView.screenToLocation(point);\n-\n             // identify the clicked features\n-            QueryParameters queryParameters = new QueryParameters();\n-            queryParameters.setGeometry(GeometryEngine.buffer(mapPoint, 10));\n-            final ListenableFuture<FeatureQueryResult> selectFeatureQuery = featureLayer.selectFeaturesAsync\n-                (queryParameters, FeatureLayer.SelectionMode.NEW);\n-            selectFeatureQuery.addDoneListener(() -> {\n+            ListenableFuture<IdentifyLayerResult> identifyLayerResult =\n+              mapView.identifyLayerAsync(featureLayer, point, 10, false, 1);\n+            identifyLayerResult.addDoneListener(() -> {\n \n               try {\n-                FeatureQueryResult result = selectFeatureQuery.get();\n+                IdentifyLayerResult identifiedLayer = identifyLayerResult.get();\n+                List<GeoElement> identifiedLayerGeoElements = identifiedLayer.getElements();\n                 // get the first selected feature\n-                Iterator<Feature> iterator = result.iterator();\n-                if (iterator.hasNext()) {\n-                  ArcGISFeature selectedFeature = (ArcGISFeature) iterator.next();\n+                for (var geoElement : identifiedLayerGeoElements) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1MDY3OA=="}, "originalCommit": {"oid": "fc886b43f4ad35da40c3194383c5ee202fbfa71b"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 111, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}