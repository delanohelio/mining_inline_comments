{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzOTY5MzM2", "number": 3312, "title": "[STORM-3652] Last error not displayed in Topology summary storm ui", "bodyText": "What is the purpose of the change\nUnder storm ui \"Topology summary\" lastError is not getting populated, you need to go into \"Component summary\".\nThis was broken for both Spouts and Bolts from the Topology Summary page.  This PR fixes both places.\nHow was the change tested\nAutomated Coverage\nAdded automated test coverage for UIHelper under storm-webapp.  I only added targetted test coverage for the portion I modified as adding test complete coverage to UIHelper.getTopologySummary() would be a pretty large project in itself.\nFor the changes to Nimbus.java I was unsure how to add automated test coverage and was unable to find any prior test coverage for it to use as an example.  Open to suggestions here.\nManual Testing\nI built a distribution from the source and deployed a test topology that had a bolt configured to periodically report errors.  I then verified the web UI directly.\nBolt Code\n   @Override\n    public void execute(Tuple tuple) {\n            if (random.nextInt(10) == 0) {\n                collector.reportError(new RuntimeException(\"This is a random exception\"));\n            }\n    }\nTopology Page: Spouts\n\nTopology Page: Bolts", "createdAt": "2020-07-21T00:23:45Z", "url": "https://github.com/apache/storm/pull/3312", "merged": true, "mergeCommit": {"oid": "bb199d574eae337d0512670dcc4957f3c7ef4922"}, "closed": true, "closedAt": "2020-08-20T01:07:07Z", "author": {"login": "Crim"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc27E2EgFqTQ1MjA0NTgyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAllTWAFqTQ3MTA2MDQ0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMDQ1ODI1", "url": "https://github.com/apache/storm/pull/3312#pullrequestreview-452045825", "createdAt": "2020-07-21T00:27:41Z", "commit": {"oid": "9112081e59255325a0d4719fa8cf53811969110a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMDoyNzo0MVrOG0jx4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMDoyNzo0MVrOG0jx4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NTM0NA==", "bodyText": "The existing getComponentErrorInfo() method adds the remaining properties that the UI is expecting to properly render the error.  See topology-page-template.html", "url": "https://github.com/apache/storm/pull/3312#discussion_r457765344", "createdAt": "2020-07-21T00:27:41Z", "author": {"login": "Crim"}, "path": "storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java", "diffHunk": "@@ -1519,8 +1518,12 @@ private static Double nullToZero(Double value) {\n         result.put(\"executeLatency\", StatsUtil.floatStr(boltAggregateStats.get_execute_latency_ms()));\n         result.put(\"executed\", boltAggregateStats.get_executed());\n         result.put(\"processLatency\", StatsUtil.floatStr(boltAggregateStats.get_process_latency_ms()));\n+\n         ErrorInfo lastError = componentAggregateStats.get_last_error();\n         result.put(\"lastError\", Objects.isNull(lastError) ?  \"\" : getTruncatedErrorString(lastError.get_error()));\n+        if (!Objects.isNull(lastError)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9112081e59255325a0d4719fa8cf53811969110a"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMDQ2MTUy", "url": "https://github.com/apache/storm/pull/3312#pullrequestreview-452046152", "createdAt": "2020-07-21T00:28:48Z", "commit": {"oid": "9112081e59255325a0d4719fa8cf53811969110a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMDoyODo0OFrOG0jy-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwMDoyODo0OFrOG0jy-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NTYyNQ==", "bodyText": "Populates the thrift response with the last error for this bolt, if it exists.", "url": "https://github.com/apache/storm/pull/3312#discussion_r457765625", "createdAt": "2020-07-21T00:28:48Z", "author": {"login": "Crim"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java", "diffHunk": "@@ -4363,6 +4363,7 @@ private void addBoltAggStats(TopologyPageInfo topoPageInfo, StormTopology topolo\n                 CommonAggregateStats commonStats = entry.getValue().get_common_stats();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9112081e59255325a0d4719fa8cf53811969110a"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NjA2Nzkz", "url": "https://github.com/apache/storm/pull/3312#pullrequestreview-454606793", "createdAt": "2020-07-24T02:34:42Z", "commit": {"oid": "34d65fe6742ea13a38493a8dbb0692fe90f444d2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMjozNDo0M1rOG2hisw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMjozNDo0M1rOG2hisw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgyNTg0Mw==", "bodyText": "Added to make consistent with how other floats are returned.", "url": "https://github.com/apache/storm/pull/3312#discussion_r459825843", "createdAt": "2020-07-24T02:34:43Z", "author": {"login": "Crim"}, "path": "storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java", "diffHunk": "@@ -1488,16 +1487,21 @@ private static Double nullToZero(Double value) {\n      * @return getTopologySpoutAggStatsMap\n      */\n     private static Map<String, Object> getTopologySpoutAggStatsMap(ComponentAggregateStats componentAggregateStats,\n-                                                                   String spoutId) {\n+                                                                   String spoutId, Map<String, Object> config, String topologyId) {\n         Map<String, Object> result = new HashMap();\n         CommonAggregateStats commonStats = componentAggregateStats.get_common_stats();\n         result.putAll(getCommonAggStatsMap(commonStats));\n         result.put(\"spoutId\", spoutId);\n         result.put(\"encodedSpoutId\", Utils.urlEncodeUtf8(spoutId));\n         SpoutAggregateStats spoutAggregateStats = componentAggregateStats.get_specific_stats().get_spout();\n-        result.put(\"completeLatency\", spoutAggregateStats.get_complete_latency_ms());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d65fe6742ea13a38493a8dbb0692fe90f444d2"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNTgzMjM4", "url": "https://github.com/apache/storm/pull/3312#pullrequestreview-463583238", "createdAt": "2020-08-07T20:10:37Z", "commit": {"oid": "34d65fe6742ea13a38493a8dbb0692fe90f444d2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDoxMDozN1rOG9mfiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMDo0ODo1OVrOG9naGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI0Njk4Nw==", "bodyText": "I believe the bug is here:\nit puts \"last-error\" in the stat (wrongly),\n\n  \n    \n      storm/storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java\n    \n    \n         Line 663\n      in\n      e82b9a7\n    \n    \n    \n    \n\n        \n          \n           m.put(\"last-error\", getLastError(clusterState, topologyId, id)); \n        \n    \n  \n\n\nbut retrieves it with \"lastError\"\n\n  \n    \n      storm/storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java\n    \n    \n         Line 1907\n      in\n      e82b9a7\n    \n    \n    \n    \n\n        \n          \n           stats.set_last_error((ErrorInfo) m.get(LAST_ERROR)); \n        \n    \n  \n\n\nThis is a translation error from clojure to java since in clojure (1.x):\nhttps://github.com/apache/storm/blob/1.x-branch/storm-core/src/clj/org/apache/storm/daemon/nimbus.clj#L2269\nhttps://github.com/apache/storm/blob/1.x-branch/storm-core/src/clj/org/apache/storm/stats.clj#L915", "url": "https://github.com/apache/storm/pull/3312#discussion_r467246987", "createdAt": "2020-08-07T20:10:37Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java", "diffHunk": "@@ -4309,6 +4309,7 @@ private void addSpoutAggStats(TopologyPageInfo topoPageInfo, StormTopology topol\n                 CommonAggregateStats commonStats = entry.getValue().get_common_stats();\n                 setResourcesDefaultIfNotSet(spoutResources, entry.getKey(), topoConf);\n                 commonStats.set_resources_map(spoutResources.get(entry.getKey()).toNormalizedMap());\n+                entry.getValue().set_last_error(stormClusterState.lastError(topoPageInfo.get_id(), entry.getKey()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d65fe6742ea13a38493a8dbb0692fe90f444d2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1ODIzOA==", "bodyText": "We can add a parameter to getComponentErrorInfo(xxx, boolean asLastError) and when it is lastError,\nif (asLastError) {\nresult.put(\"lastError\",getTruncatedErrorString)errorInfo.get_error()));  \n} else {\nresult.put(\"error\", errorInfo.get_error());\n}\n\nto avoid unnecessary results", "url": "https://github.com/apache/storm/pull/3312#discussion_r467258238", "createdAt": "2020-08-07T20:38:59Z", "author": {"login": "Ethanlm"}, "path": "storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java", "diffHunk": "@@ -1519,8 +1518,12 @@ private static Double nullToZero(Double value) {\n         result.put(\"executeLatency\", StatsUtil.floatStr(boltAggregateStats.get_execute_latency_ms()));\n         result.put(\"executed\", boltAggregateStats.get_executed());\n         result.put(\"processLatency\", StatsUtil.floatStr(boltAggregateStats.get_process_latency_ms()));\n+\n         ErrorInfo lastError = componentAggregateStats.get_last_error();\n         result.put(\"lastError\", Objects.isNull(lastError) ?  \"\" : getTruncatedErrorString(lastError.get_error()));\n+        if (!Objects.isNull(lastError)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc2NTM0NA=="}, "originalCommit": {"oid": "9112081e59255325a0d4719fa8cf53811969110a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI2MTk3Ng==", "bodyText": "You can use simulatedTime https://github.com/apache/storm/blob/master/storm-client/src/jvm/org/apache/storm/utils/Time.java#L30.\nAnd then the check can be accurate.\nAlso please check if https://github.com/apache/storm/blob/master/docs/STORM-UI-REST-API.md#apiv1topologyid-get needs to be updated.", "url": "https://github.com/apache/storm/pull/3312#discussion_r467261976", "createdAt": "2020-08-07T20:48:59Z", "author": {"login": "Ethanlm"}, "path": "storm-webapp/src/test/java/org/apache/storm/daemon/ui/UIHelpersTest.java", "diffHunk": "@@ -0,0 +1,543 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.storm.daemon.ui;\n+\n+import org.apache.storm.Config;\n+import org.apache.storm.Constants;\n+import org.apache.storm.generated.BoltAggregateStats;\n+import org.apache.storm.generated.CommonAggregateStats;\n+import org.apache.storm.generated.ComponentAggregateStats;\n+import org.apache.storm.generated.ErrorInfo;\n+import org.apache.storm.generated.SpecificAggregateStats;\n+import org.apache.storm.generated.SpoutAggregateStats;\n+import org.apache.storm.generated.TopologyPageInfo;\n+import org.apache.storm.generated.TopologyStats;\n+import org.json.simple.JSONValue;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+class UIHelpersTest {\n+    private static final String TOPOLOGY_ID = \"Test-Topology-Id\";\n+    private static final long TOPOLOGY_MESSAGE_TIMEOUT_SECS = 100L;\n+    private static final String WINDOW = \":all-time\";\n+\n+    /**\n+     * Default empty TopologyPageInfo instance to be extended in each test case.\n+     */\n+    private TopologyPageInfo topoPageInfo;\n+\n+    /**\n+     * Setups up bare minimum TopologyPageInfo instance such that we can pass to\n+     * UIHelpers.getTopologySummary() without it throwing a NPE.\n+     *\n+     * This should provide a base for which other tests can be written, but will\n+     * require populating additional values as needed for each test case.\n+     */\n+    @BeforeEach\n+    void setup() {\n+        // Create topology config and serialize to JSON.\n+        final Map<String, Object> topologyConfig = new HashMap<>();\n+        topologyConfig.put(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS, TOPOLOGY_MESSAGE_TIMEOUT_SECS);\n+        final String topoConfigJson = JSONValue.toJSONString(topologyConfig);\n+\n+        // Create empty TopologyStats instance\n+        final TopologyStats topologyStats = new TopologyStats();\n+        topologyStats.set_window_to_emitted(new HashMap<>());\n+        topologyStats.set_window_to_transferred(new HashMap<>());\n+        topologyStats.set_window_to_acked(new HashMap<>());\n+        topologyStats.set_window_to_complete_latencies_ms(new HashMap<>());\n+        topologyStats.set_window_to_failed(new HashMap<>());\n+\n+        // Create empty AggregateStats instances.\n+        final Map<String,ComponentAggregateStats> idToSpoutAggStats = new HashMap<>();\n+\n+        final Map<String,ComponentAggregateStats> idToBoltAggStats = new HashMap<>();\n+\n+        // Build up TopologyPageInfo instance\n+        topoPageInfo = new TopologyPageInfo();\n+        topoPageInfo.set_topology_conf(topoConfigJson);\n+        topoPageInfo.set_id(TOPOLOGY_ID);\n+        topoPageInfo.set_topology_stats(topologyStats);\n+        topoPageInfo.set_id_to_spout_agg_stats(idToSpoutAggStats);\n+        topoPageInfo.set_id_to_bolt_agg_stats(idToBoltAggStats);\n+    }\n+\n+    /**\n+     * Very narrow test case to validate that 'last error' fields are populated for a bolt\n+     * with an error is present.\n+     */\n+    @Test\n+    void test_getTopologyBoltAggStatsMap_includesLastError() {\n+        // Define inputs\n+        final String expectedBoltId = \"MyBoltId\";\n+        final String expectedErrorMsg = \"This is my test error message\";\n+        final int expectedErrorTime = (int) TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis());\n+        final int expectedErrorPort = 4321;\n+        final String expectedErrorHost = \"my.errored.host\";\n+\n+        // Define our Last Error\n+        final ErrorInfo expectedLastError = new ErrorInfo(expectedErrorMsg, expectedErrorTime);\n+        expectedLastError.set_port(expectedErrorPort);\n+        expectedLastError.set_host(expectedErrorHost);\n+\n+        // Build stats instance for our bolt\n+        final ComponentAggregateStats aggregateStats = buildBoltAggregateStatsBase();\n+        aggregateStats.set_last_error(expectedLastError);\n+        addBoltStats(expectedBoltId, aggregateStats);\n+\n+        // Call method under test.\n+        final Map<String, Object> result = UIHelpers.getTopologySummary(\n+            topoPageInfo,\n+            WINDOW,\n+            new HashMap<>(),\n+            \"spp\"\n+        );\n+\n+        // Validate\n+        assertNotNull(result, \"Should never return null\");\n+\n+        // Validate our Bolt result\n+        final Map<String, Object> boltResult = getBoltStatsFromTopologySummaryResult(result, expectedBoltId);\n+        assertNotNull(boltResult, \"Should have an entry for bolt\");\n+\n+        // Verify each piece\n+        assertEquals(expectedBoltId, boltResult.get(\"boltId\"));\n+        assertEquals(expectedBoltId, boltResult.get(\"encodedBoltId\"));\n+\n+        // Verify error\n+        assertEquals(expectedErrorMsg, boltResult.get(\"error\"));\n+        assertEquals(expectedErrorMsg, boltResult.get(\"lastError\"));\n+        assertEquals(expectedErrorPort, boltResult.get(\"errorPort\"));\n+        assertEquals(expectedErrorHost, boltResult.get(\"errorHost\"));\n+        assertEquals(expectedErrorTime, boltResult.get(\"errorTime\"));\n+\n+        // Fuzzy matching", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d65fe6742ea13a38493a8dbb0692fe90f444d2"}, "originalPosition": 140}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNzE5NDU3", "url": "https://github.com/apache/storm/pull/3312#pullrequestreview-463719457", "createdAt": "2020-08-08T05:14:35Z", "commit": {"oid": "9a93ed34c4f9a6656d41867d867b8defa0709002"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwNToxNDozNVrOG9tn8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwNToxNDozNVrOG9tn8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM2MzgyNQ==", "bodyText": "Since the previous behavior always defaulted lastError to empty string, and the API docs show it defaulting to empty string, I've left this here for backwards compatibility.\nIf you think it'd be better to just exclude it (as we do with the other keys like errorPort, errorHost, errorTime etc.. let me know and I can remove the else block.\nOr alternatively, we could default the missing keys (errorPort, errorHost, errorTime) to null/empty string when no error has been reported to make their behavior consistent with lastError\nThoughts?", "url": "https://github.com/apache/storm/pull/3312#discussion_r467363825", "createdAt": "2020-08-08T05:14:35Z", "author": {"login": "Crim"}, "path": "storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java", "diffHunk": "@@ -1488,16 +1495,21 @@ private static Double nullToZero(Double value) {\n      * @return getTopologySpoutAggStatsMap\n      */\n     private static Map<String, Object> getTopologySpoutAggStatsMap(ComponentAggregateStats componentAggregateStats,\n-                                                                   String spoutId) {\n+                                                                   String spoutId, Map<String, Object> config, String topologyId) {\n         Map<String, Object> result = new HashMap();\n         CommonAggregateStats commonStats = componentAggregateStats.get_common_stats();\n         result.putAll(getCommonAggStatsMap(commonStats));\n         result.put(\"spoutId\", spoutId);\n         result.put(\"encodedSpoutId\", Utils.urlEncodeUtf8(spoutId));\n         SpoutAggregateStats spoutAggregateStats = componentAggregateStats.get_specific_stats().get_spout();\n-        result.put(\"completeLatency\", spoutAggregateStats.get_complete_latency_ms());\n+        result.put(\"completeLatency\", StatsUtil.floatStr(spoutAggregateStats.get_complete_latency_ms()));\n         ErrorInfo lastError = componentAggregateStats.get_last_error();\n-        result.put(\"lastError\", Objects.isNull(lastError) ?  \"\" : getTruncatedErrorString(lastError.get_error()));\n+        if (!Objects.isNull(lastError)) {\n+            result.putAll(getComponentErrorInfo(lastError, config, topologyId, true));\n+        } else {\n+            // Maintain backwards compatibility in the API response by setting empty string value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a93ed34c4f9a6656d41867d867b8defa0709002"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdfce14a92b6f32c2c719521e543a9ef2726f1ec", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/bdfce14a92b6f32c2c719521e543a9ef2726f1ec", "committedDate": "2020-08-08T12:55:09Z", "message": "[STORM-3652] Fix error reporting on topology page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcb7d2226239739766f7d450babde185d9ef533c", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/fcb7d2226239739766f7d450babde185d9ef533c", "committedDate": "2020-08-08T12:55:09Z", "message": "Start writing basic test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2eb19accfe0395211959458797a4d01ca158db0", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/d2eb19accfe0395211959458797a4d01ca158db0", "committedDate": "2020-08-08T12:55:09Z", "message": "Add more test coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04f400f9a194ae5688dcba3e177042c9e3468562", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/04f400f9a194ae5688dcba3e177042c9e3468562", "committedDate": "2020-08-08T12:55:09Z", "message": "add missing license header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ca0f45b8dfd9472b9bdfe05c3062bdd59e01bca", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/1ca0f45b8dfd9472b9bdfe05c3062bdd59e01bca", "committedDate": "2020-08-08T12:55:09Z", "message": "[STORM-3652] Also fix Spout last error display from topology page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5880f06975c6bdbf9e6ab0620d377f8a929d469c", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/5880f06975c6bdbf9e6ab0620d377f8a929d469c", "committedDate": "2020-08-08T12:55:09Z", "message": "[STORM-3652] Add test coverage, format spout stat complete latency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e52b64d4f39cce976d88334e1408f88f2baf69ae", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/e52b64d4f39cce976d88334e1408f88f2baf69ae", "committedDate": "2020-08-08T12:55:09Z", "message": "remove file accidentally committed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47f6225030bae0f0d90055196ed89e684530b081", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/47f6225030bae0f0d90055196ed89e684530b081", "committedDate": "2020-08-08T12:55:09Z", "message": "[STORM-3652] Code review adjustments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3a27617c9a45b5b1f26582b6e1115de9d9d2698", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/b3a27617c9a45b5b1f26582b6e1115de9d9d2698", "committedDate": "2020-08-08T12:55:09Z", "message": "Update API doc"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05b09833c646054c1dca57383bcb1df2b27cedd9", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/05b09833c646054c1dca57383bcb1df2b27cedd9", "committedDate": "2020-08-08T05:21:16Z", "message": "Update API doc"}, "afterCommit": {"oid": "b3a27617c9a45b5b1f26582b6e1115de9d9d2698", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/b3a27617c9a45b5b1f26582b6e1115de9d9d2698", "committedDate": "2020-08-08T12:55:09Z", "message": "Update API doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NzE5MjMy", "url": "https://github.com/apache/storm/pull/3312#pullrequestreview-464719232", "createdAt": "2020-08-11T03:10:21Z", "commit": {"oid": "b3a27617c9a45b5b1f26582b6e1115de9d9d2698"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMzoxMDoyMVrOG-m1HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMzoyMDoyN1rOG-m-PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMwMTA4NQ==", "bodyText": "You are right. Sorry I overlooked. I think we can default those keys to empty like you said", "url": "https://github.com/apache/storm/pull/3312#discussion_r468301085", "createdAt": "2020-08-11T03:10:21Z", "author": {"login": "Ethanlm"}, "path": "storm-webapp/src/main/java/org/apache/storm/daemon/ui/UIHelpers.java", "diffHunk": "@@ -1488,16 +1495,21 @@ private static Double nullToZero(Double value) {\n      * @return getTopologySpoutAggStatsMap\n      */\n     private static Map<String, Object> getTopologySpoutAggStatsMap(ComponentAggregateStats componentAggregateStats,\n-                                                                   String spoutId) {\n+                                                                   String spoutId, Map<String, Object> config, String topologyId) {\n         Map<String, Object> result = new HashMap();\n         CommonAggregateStats commonStats = componentAggregateStats.get_common_stats();\n         result.putAll(getCommonAggStatsMap(commonStats));\n         result.put(\"spoutId\", spoutId);\n         result.put(\"encodedSpoutId\", Utils.urlEncodeUtf8(spoutId));\n         SpoutAggregateStats spoutAggregateStats = componentAggregateStats.get_specific_stats().get_spout();\n-        result.put(\"completeLatency\", spoutAggregateStats.get_complete_latency_ms());\n+        result.put(\"completeLatency\", StatsUtil.floatStr(spoutAggregateStats.get_complete_latency_ms()));\n         ErrorInfo lastError = componentAggregateStats.get_last_error();\n-        result.put(\"lastError\", Objects.isNull(lastError) ?  \"\" : getTruncatedErrorString(lastError.get_error()));\n+        if (!Objects.isNull(lastError)) {\n+            result.putAll(getComponentErrorInfo(lastError, config, topologyId, true));\n+        } else {\n+            // Maintain backwards compatibility in the API response by setting empty string value", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzM2MzgyNQ=="}, "originalCommit": {"oid": "9a93ed34c4f9a6656d41867d867b8defa0709002"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMwMzQyMQ==", "bodyText": "Bolt and spout have different stats\nhttps://github.com/apache/storm/blob/master/storm-server/src/main/java/org/apache/storm/stats/StatsUtil.java#L2049-L2085\nIt would be nice to reflect that here even though the information is not really used  .", "url": "https://github.com/apache/storm/pull/3312#discussion_r468303421", "createdAt": "2020-08-11T03:20:27Z", "author": {"login": "Ethanlm"}, "path": "storm-core/test/jvm/org/apache/storm/stats/TestStatsUtil.java", "diffHunk": "@@ -92,6 +113,33 @@ public void makeTopoInfo() {\n         worker2Resources.put(new WorkerSlot(\"node3\", 3), ws3);\n     }\n \n+    private Map<String, Object> createBeatBoltStats() {\n+        return createBeatStats(\"bolt\");\n+    }\n+\n+    private Map<String, Object> createBeatSpoutStats() {\n+        return createBeatStats(\"spout\");\n+    }\n+\n+    private Map<String, Object> createBeatStats(final String type) {\n+        Map<String, Object> stats = new HashMap<>();\n+        stats.put(\"type\", type);\n+\n+        stats.put(\"acked\", new HashMap<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3a27617c9a45b5b1f26582b6e1115de9d9d2698"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5487cd6c4433535652846d88fc37f0fc2d734598", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/5487cd6c4433535652846d88fc37f0fc2d734598", "committedDate": "2020-08-12T11:27:39Z", "message": "Update test cases to have unique stats template for spout and bolt components"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03b0d59b77c35c62a158fa4f1dbbc3bac0e6cc4b", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/03b0d59b77c35c62a158fa4f1dbbc3bac0e6cc4b", "committedDate": "2020-08-17T01:05:38Z", "message": "[STORM-3652] Code review adjustments.  Updated API docs to reflect reality, and example of populated lastError values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b66fd735c03f29ed335354dffecad3e28156bbc", "author": {"user": {"login": "Crim", "name": "Steviep"}}, "url": "https://github.com/apache/storm/commit/9b66fd735c03f29ed335354dffecad3e28156bbc", "committedDate": "2020-08-17T01:15:17Z", "message": "Update API Docs example values to be consisted with the rest of the example"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTE3NDkz", "url": "https://github.com/apache/storm/pull/3312#pullrequestreview-468117493", "createdAt": "2020-08-17T01:15:51Z", "commit": {"oid": "9b66fd735c03f29ed335354dffecad3e28156bbc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwMToxNTo1MVrOHBXAIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwMToxNTo1MVrOHBXAIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTE4NzQ4OQ==", "bodyText": "Random JSON syntax fix I spotted. :)", "url": "https://github.com/apache/storm/pull/3312#discussion_r471187489", "createdAt": "2020-08-17T01:15:51Z", "author": {"login": "Crim"}, "path": "docs/STORM-UI-REST-API.md", "diffHunk": "@@ -192,7 +192,7 @@ Sample response:\n             \"host\":\"192.168.202.1\",\n             \"port\":6627,\n             \"nimbusLogLink\":\"http:\\/\\/192.168.202.1:8000\\/log?file=nimbus.log\",\n-            \"status\":Leader,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b66fd735c03f29ed335354dffecad3e28156bbc"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDYwNDQ1", "url": "https://github.com/apache/storm/pull/3312#pullrequestreview-471060445", "createdAt": "2020-08-20T01:04:28Z", "commit": {"oid": "9b66fd735c03f29ed335354dffecad3e28156bbc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4643, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}