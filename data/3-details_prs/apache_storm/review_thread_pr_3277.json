{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MDk1MDc0", "number": 3277, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjoyOTo0OFrOEB0zoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjozOTowNFrOEB1CAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzQ5MjE2OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerTransfer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjoyOTo0OFrOGd6EyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOTo1MDoxNVrOGeBoYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxMzM4NA==", "bodyText": "can be simplified with Collections.singletonList(-1)", "url": "https://github.com/apache/storm/pull/3277#discussion_r434013384", "createdAt": "2020-06-02T16:29:48Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerTransfer.java", "diffHunk": "@@ -65,8 +67,10 @@\n                                                + Config.TOPOLOGY_TRANSFER_BUFFER_SIZE + \":\" + xferQueueSz);\n         }\n \n+        List<Integer> taskIds = new ArrayList<>();\n+        taskIds.add(-1);\n         this.transferQueue = new JCQueue(\"worker-transfer-queue\", xferQueueSz, 0, xferBatchSz, backPressureWaitStrategy,\n-            workerState.getTopologyId(), Constants.SYSTEM_COMPONENT_ID, -1, workerState.getPort(),\n+            workerState.getTopologyId(), Constants.SYSTEM_COMPONENT_ID, taskIds, workerState.getPort(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d27685d540b954b767b4c52f01531d272384a23"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzNzE4NA==", "bodyText": "these changes were all made and squashed", "url": "https://github.com/apache/storm/pull/3277#discussion_r434137184", "createdAt": "2020-06-02T19:50:15Z", "author": {"login": "agresch"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerTransfer.java", "diffHunk": "@@ -65,8 +67,10 @@\n                                                + Config.TOPOLOGY_TRANSFER_BUFFER_SIZE + \":\" + xferQueueSz);\n         }\n \n+        List<Integer> taskIds = new ArrayList<>();\n+        taskIds.add(-1);\n         this.transferQueue = new JCQueue(\"worker-transfer-queue\", xferQueueSz, 0, xferBatchSz, backPressureWaitStrategy,\n-            workerState.getTopologyId(), Constants.SYSTEM_COMPONENT_ID, -1, workerState.getPort(),\n+            workerState.getTopologyId(), Constants.SYSTEM_COMPONENT_ID, taskIds, workerState.getPort(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxMzM4NA=="}, "originalCommit": {"oid": "7d27685d540b954b767b4c52f01531d272384a23"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzQ5ODk0OnYy", "diffSide": "RIGHT", "path": "examples/storm-perf/src/main/java/org/apache/storm/perf/queuetest/JCQueuePerfTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjozMTozOFrOGd6JQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjozMTozOFrOGd6JQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxNDUyOQ==", "bodyText": "Can be simplified with Collections.singletonList(100)", "url": "https://github.com/apache/storm/pull/3277#discussion_r434014529", "createdAt": "2020-06-02T16:31:38Z", "author": {"login": "Ethanlm"}, "path": "examples/storm-perf/src/main/java/org/apache/storm/perf/queuetest/JCQueuePerfTest.java", "diffHunk": "@@ -45,11 +47,17 @@ public static void main(String[] args) throws Exception {\n \n     }\n \n+    private static List<Integer> getTaskIds() {\n+        List<Integer> taskIds = new ArrayList<>();\n+        taskIds.add(1000);\n+        return taskIds;\n+    }\n+\n     private static void ackingProducerSimulation() {\n         WaitStrategyPark ws = new WaitStrategyPark(100);\n         StormMetricRegistry registry = new StormMetricRegistry();\n-        JCQueue spoutQ = new JCQueue(\"spoutQ\", 1024, 0, 100, ws, \"test\", \"test\", 1000, 1000, registry);\n-        JCQueue ackQ = new JCQueue(\"ackQ\", 1024, 0, 100, ws, \"test\", \"test\", 1000, 1000, registry);\n+        JCQueue spoutQ = new JCQueue(\"spoutQ\", 1024, 0, 100, ws, \"test\", \"test\", getTaskIds(), 1000, registry);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d27685d540b954b767b4c52f01531d272384a23"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzUyODMyOnYy", "diffSide": "RIGHT", "path": "storm-client/test/jvm/org/apache/storm/utils/JCQueueBackpressureTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjozODo1NFrOGd6brA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjozODo1NFrOGd6brA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxOTI0NA==", "bodyText": "can be simplified with Collections.singletonList(1000)", "url": "https://github.com/apache/storm/pull/3277#discussion_r434019244", "createdAt": "2020-06-02T16:38:54Z", "author": {"login": "Ethanlm"}, "path": "storm-client/test/jvm/org/apache/storm/utils/JCQueueBackpressureTest.java", "diffHunk": "@@ -18,11 +18,16 @@\n import org.junit.Assert;\n import org.junit.Test;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+\n \n public class JCQueueBackpressureTest {\n     \n     private static JCQueue createQueue(String name, int queueSize) {\n-        return new JCQueue(name, queueSize, 0, 1, new WaitStrategyPark(0), \"test\", \"test\", 1000, 1000, new StormMetricRegistry());\n+        List<Integer> taskIds = new ArrayList<>();\n+        taskIds.add(1000);\n+        return new JCQueue(name, queueSize, 0, 1, new WaitStrategyPark(0), \"test\", \"test\", taskIds, 1000, new StormMetricRegistry());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d27685d540b954b767b4c52f01531d272384a23"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzUyODk2OnYy", "diffSide": "RIGHT", "path": "storm-client/test/jvm/org/apache/storm/utils/JCQueueTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjozOTowNFrOGd6cGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjozOTowNFrOGd6cGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxOTM1NQ==", "bodyText": "here too", "url": "https://github.com/apache/storm/pull/3277#discussion_r434019355", "createdAt": "2020-06-02T16:39:04Z", "author": {"login": "Ethanlm"}, "path": "storm-client/test/jvm/org/apache/storm/utils/JCQueueTest.java", "diffHunk": "@@ -157,7 +159,9 @@ private JCQueue createQueue(String name, int queueSize) {\n     }\n \n     private JCQueue createQueue(String name, int batchSize, int queueSize) {\n-        return new JCQueue(name, queueSize, 0, batchSize, waitStrategy, \"test\", \"test\", 1000, 1000, new StormMetricRegistry());\n+        List<Integer> taskIds = new ArrayList<>();\n+        taskIds.add(1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d27685d540b954b767b4c52f01531d272384a23"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4301, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}