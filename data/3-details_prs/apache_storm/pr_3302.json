{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MDA0OTk3", "number": 3302, "title": "[STORM-3666] Validate component name in rebalance command", "bodyText": "What is the purpose of the change\nRebalance command completes successfully when --executor option has invalid component name. This gives\nthe impression that command was successful. Change this behavior to throw an exception. In addition, fix the help\ntext for --executor options to show correct format.\nHow was the change tested\nRun storm and rebalance using various correct and incorrect formats like:\nbin/storm rebalance --help   # to show corrected help text\nbin/storm rebalance --executor spout:3 -w 1 word-count ## fail because of spout:3\nbin/storm rebalance --executor spout=3 -w 1 word-count ## verify correct rebalance in Storm UI with spout=3\nbin/storm rebalance -e spout=4 -w 1 word-count  ## verify correct rebalance in Storm UI with spout=4", "createdAt": "2020-07-03T11:19:09Z", "url": "https://github.com/apache/storm/pull/3302", "merged": true, "mergeCommit": {"oid": "e794990f278fa01284daca94f0c1c577f056d513"}, "closed": true, "closedAt": "2020-09-17T13:54:10Z", "author": {"login": "bipinprasad"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxPUetgH2gAyNDQ0MDA0OTk3OjhhYzE1YTAyZDczMjMyYzU2OWU2OGQzOTJhZmQ1OWNkZDc5ODAzOGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJg9ldgFqTQ4OTkyNzkwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8ac15a02d73232c569e68d392afd59cdd798038f", "author": {"user": null}, "url": "https://github.com/apache/storm/commit/8ac15a02d73232c569e68d392afd59cdd798038f", "committedDate": "2020-07-03T08:39:19Z", "message": "[STORM-3666] Fix help text for storm.py rebalance --executor option."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9ddff4ebf06fbc1a77b325cdf0e4e738f3b02d7", "author": {"user": null}, "url": "https://github.com/apache/storm/commit/c9ddff4ebf06fbc1a77b325cdf0e4e738f3b02d7", "committedDate": "2020-07-03T11:06:33Z", "message": "[STORM-3666] validate component names in rebalance --executor option."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMTYzMzYz", "url": "https://github.com/apache/storm/pull/3302#pullrequestreview-443163363", "createdAt": "2020-07-06T15:07:42Z", "commit": {"oid": "c9ddff4ebf06fbc1a77b325cdf0e4e738f3b02d7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzEzNjM0", "url": "https://github.com/apache/storm/pull/3302#pullrequestreview-443313634", "createdAt": "2020-07-06T18:28:07Z", "commit": {"oid": "c9ddff4ebf06fbc1a77b325cdf0e4e738f3b02d7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODoyODowN1rOGtiiqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODoyODo1MFrOGtikBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwNTAzMg==", "bodyText": "This seems redundant", "url": "https://github.com/apache/storm/pull/3302#discussion_r450405032", "createdAt": "2020-07-06T18:28:07Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java", "diffHunk": "@@ -2676,6 +2676,14 @@ private void assertTopoActive(String topoName, boolean expectActive) throws NotA\n         return tryReadTopoConf(topoId, topoCache);\n     }\n \n+    private StormTopology tryReadTopologyFromName(final String topoName) throws NotAliveException,\n+            AuthorizationException, IOException {\n+        IStormClusterState state = stormClusterState;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9ddff4ebf06fbc1a77b325cdf0e4e738f3b02d7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwNTM4MA==", "bodyText": "This feels more like a IllegalArgumentException?", "url": "https://github.com/apache/storm/pull/3302#discussion_r450405380", "createdAt": "2020-07-06T18:28:50Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java", "diffHunk": "@@ -3370,8 +3378,18 @@ public void rebalance(String topoName, RebalanceOptions options)\n             checkAuthorization(topoName, topoConf, operation);\n             // Set principal in RebalanceOptions to nil because users are not suppose to set this\n             options.set_principal(null);\n+            // check if executor counts are correctly specified\n+            StormTopology stormTopology = tryReadTopologyFromName(topoName);\n+            Set<String> comps = new HashSet<>();\n+            comps.addAll(stormTopology.get_spouts().keySet());\n+            comps.addAll(stormTopology.get_bolts().keySet());\n             Map<String, Integer> execOverrides = options.is_set_num_executors() ? options.get_num_executors() : Collections.emptyMap();\n-            for (Integer value : execOverrides.values()) {\n+            for (Map.Entry<String, Integer> e: execOverrides.entrySet()) {\n+                String comp = e.getKey();\n+                Integer value = e.getValue();\n+                if (!comps.contains(comp)) {\n+                    throw new WrappedInvalidTopologyException(String.format(\"Component %s does not exist in topology %s\", comp, topoName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9ddff4ebf06fbc1a77b325cdf0e4e738f3b02d7"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzE2NzI5", "url": "https://github.com/apache/storm/pull/3302#pullrequestreview-443316729", "createdAt": "2020-07-06T18:32:58Z", "commit": {"oid": "c9ddff4ebf06fbc1a77b325cdf0e4e738f3b02d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODozMjo1OFrOGtisNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODozMjo1OFrOGtisNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwNzQ3OA==", "bodyText": "What does rebalance do with system components like acker and metricConsumers?\nWill users be able to rebalance those?", "url": "https://github.com/apache/storm/pull/3302#discussion_r450407478", "createdAt": "2020-07-06T18:32:58Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java", "diffHunk": "@@ -3370,8 +3378,18 @@ public void rebalance(String topoName, RebalanceOptions options)\n             checkAuthorization(topoName, topoConf, operation);\n             // Set principal in RebalanceOptions to nil because users are not suppose to set this\n             options.set_principal(null);\n+            // check if executor counts are correctly specified\n+            StormTopology stormTopology = tryReadTopologyFromName(topoName);\n+            Set<String> comps = new HashSet<>();\n+            comps.addAll(stormTopology.get_spouts().keySet());\n+            comps.addAll(stormTopology.get_bolts().keySet());\n             Map<String, Integer> execOverrides = options.is_set_num_executors() ? options.get_num_executors() : Collections.emptyMap();\n-            for (Integer value : execOverrides.values()) {\n+            for (Map.Entry<String, Integer> e: execOverrides.entrySet()) {\n+                String comp = e.getKey();\n+                Integer value = e.getValue();\n+                if (!comps.contains(comp)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9ddff4ebf06fbc1a77b325cdf0e4e738f3b02d7"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45e433bde9f72eb678d09f886f5e71bfd5c4d4b8", "author": {"user": null}, "url": "https://github.com/apache/storm/commit/45e433bde9f72eb678d09f886f5e71bfd5c4d4b8", "committedDate": "2020-07-06T21:30:26Z", "message": "[STORM-3659] Rename long option name in python to be same as that passed through to java as --executor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c551f819742e6abb432bd32a7e6af4ae3f94962", "author": {"user": null}, "url": "https://github.com/apache/storm/commit/7c551f819742e6abb432bd32a7e6af4ae3f94962", "committedDate": "2020-07-08T19:30:45Z", "message": "[STORM-3666] Allow system components to be rebalanced."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODgwNDE2", "url": "https://github.com/apache/storm/pull/3302#pullrequestreview-445880416", "createdAt": "2020-07-09T18:48:12Z", "commit": {"oid": "7c551f819742e6abb432bd32a7e6af4ae3f94962"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODo0ODoxM1rOGvdkjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODo0ODoxM1rOGvdkjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyMDc0OQ==", "bodyText": "Maybe we can follow the code at https://github.com/apache/storm/blob/master/storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java#L2638-L2639 to get all the components?\nOr maybe use stormBase to avoid recomputation.\nhttps://github.com/apache/storm/blob/master/storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java#L1808\nNot sure if there is any concern with using it without testing. Maybe there are some corner cases that need to be taken care of.", "url": "https://github.com/apache/storm/pull/3302#discussion_r452420749", "createdAt": "2020-07-09T18:48:13Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java", "diffHunk": "@@ -3380,16 +3381,21 @@ public void rebalance(String topoName, RebalanceOptions options)\n             options.set_principal(null);\n             // check if executor counts are correctly specified\n             StormTopology stormTopology = tryReadTopologyFromName(topoName);\n-            Set<String> comps = new HashSet<>();\n+            Set<String> comps = new TreeSet<>();\n             comps.addAll(stormTopology.get_spouts().keySet());\n             comps.addAll(stormTopology.get_bolts().keySet());\n             Map<String, Integer> execOverrides = options.is_set_num_executors() ? options.get_num_executors() : Collections.emptyMap();\n             for (Map.Entry<String, Integer> e: execOverrides.entrySet()) {\n                 String comp = e.getKey();\n-                Integer value = e.getValue();\n-                if (!comps.contains(comp)) {\n-                    throw new WrappedInvalidTopologyException(String.format(\"Component %s does not exist in topology %s\", comp, topoName));\n+                // validate non-system component ids\n+                if (!Utils.isSystemId(comp) && !comps.contains(comp)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c551f819742e6abb432bd32a7e6af4ae3f94962"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODkyNjcx", "url": "https://github.com/apache/storm/pull/3302#pullrequestreview-445892671", "createdAt": "2020-07-09T19:06:22Z", "commit": {"oid": "7c551f819742e6abb432bd32a7e6af4ae3f94962"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTowNjoyMlrOGveKSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTowNjoyMlrOGveKSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMDQwOA==", "bodyText": "can be replaced by https://github.com/apache/storm/blob/master/storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java#L1793-L1796", "url": "https://github.com/apache/storm/pull/3302#discussion_r452430408", "createdAt": "2020-07-09T19:06:22Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java", "diffHunk": "@@ -2676,6 +2677,14 @@ private void assertTopoActive(String topoName, boolean expectActive) throws NotA\n         return tryReadTopoConf(topoId, topoCache);\n     }\n \n+    private StormTopology tryReadTopologyFromName(final String topoName) throws NotAliveException,\n+            AuthorizationException, IOException {\n+        IStormClusterState state = stormClusterState;\n+        String topoId = state.getTopoId(topoName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c551f819742e6abb432bd32a7e6af4ae3f94962"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34d5a97467f12971edb980e0f8533aa7be66a12d", "author": {"user": null}, "url": "https://github.com/apache/storm/commit/34d5a97467f12971edb980e0f8533aa7be66a12d", "committedDate": "2020-09-16T18:35:04Z", "message": "[STORM-3666] Use toTopoId() method."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5OTI3OTAz", "url": "https://github.com/apache/storm/pull/3302#pullrequestreview-489927903", "createdAt": "2020-09-16T18:46:47Z", "commit": {"oid": "34d5a97467f12971edb980e0f8533aa7be66a12d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4628, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}