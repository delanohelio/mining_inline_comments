{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MzQwNjAz", "number": 3243, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMzo0MToyOFrODt9WAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOTo0MjozMFrODuGkQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTE3NTcxOnYy", "diffSide": "RIGHT", "path": "docs/Command-line-client.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMzo0MToyOFrOF_rw1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDowOTo0NlrOF_tDxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMyMTYyMw==", "bodyText": "type \"optioanl\"", "url": "https://github.com/apache/storm/pull/3243#discussion_r402321623", "createdAt": "2020-04-02T13:41:28Z", "author": {"login": "Ethanlm"}, "path": "docs/Command-line-client.md", "diffHunk": "@@ -319,7 +319,9 @@ eg: `storm shell resources/ python topology.py arg1 arg2`\n \n Syntax: `storm upload_credentials topology-name [credkey credvalue]*`\n \n-Uploads a new set of credentials to a running topology\n+Uploads a new set of credentials to a running topology  \n+   * `-e --exception`: optioanl flag. If set, command will fail and throw exception if no credentials were uploaded.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4da4a716e59debccbdcadc3db5a3c60a14120b4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM0Mjg1Mw==", "bodyText": "Fixed", "url": "https://github.com/apache/storm/pull/3243#discussion_r402342853", "createdAt": "2020-04-02T14:09:46Z", "author": {"login": "RuiLi8080"}, "path": "docs/Command-line-client.md", "diffHunk": "@@ -319,7 +319,9 @@ eg: `storm shell resources/ python topology.py arg1 arg2`\n \n Syntax: `storm upload_credentials topology-name [credkey credvalue]*`\n \n-Uploads a new set of credentials to a running topology\n+Uploads a new set of credentials to a running topology  \n+   * `-e --exception`: optioanl flag. If set, command will fail and throw exception if no credentials were uploaded.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMyMTYyMw=="}, "originalCommit": {"oid": "a4da4a716e59debccbdcadc3db5a3c60a14120b4"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTE5NjU2OnYy", "diffSide": "RIGHT", "path": "bin/storm.py", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMzo0NTo0OFrOF_r9mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzozNzoyNVrOGCD7qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMyNDg4OA==", "bodyText": "--exception is too general. Maybe --fail-on-empty or something", "url": "https://github.com/apache/storm/pull/3243#discussion_r402324888", "createdAt": "2020-04-02T13:45:48Z", "author": {"login": "Ethanlm"}, "path": "bin/storm.py", "diffHunk": "@@ -541,6 +541,13 @@ def initialize_upload_credentials_subcommand(subparsers):\n         help=\"\"\"name of the owner of the topology (security precaution)\"\"\"\n     )\n \n+    # If set, this flag will become true meaning that user expects non-empty creds to be uploaded.\n+    # Command exits with non-zero code if uploaded creds collection is empty.\n+    sub_parser.add_argument(\n+        \"-e\", \"--exception\", action='store_true',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4da4a716e59debccbdcadc3db5a3c60a14120b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM0MzgyNA==", "bodyText": "I changed --exception-when-empty here since we already use short name -f for file.", "url": "https://github.com/apache/storm/pull/3243#discussion_r402343824", "createdAt": "2020-04-02T14:11:04Z", "author": {"login": "RuiLi8080"}, "path": "bin/storm.py", "diffHunk": "@@ -541,6 +541,13 @@ def initialize_upload_credentials_subcommand(subparsers):\n         help=\"\"\"name of the owner of the topology (security precaution)\"\"\"\n     )\n \n+    # If set, this flag will become true meaning that user expects non-empty creds to be uploaded.\n+    # Command exits with non-zero code if uploaded creds collection is empty.\n+    sub_parser.add_argument(\n+        \"-e\", \"--exception\", action='store_true',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMyNDg4OA=="}, "originalCommit": {"oid": "a4da4a716e59debccbdcadc3db5a3c60a14120b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2MDExMw==", "bodyText": "This is also good", "url": "https://github.com/apache/storm/pull/3243#discussion_r402560113", "createdAt": "2020-04-02T19:29:52Z", "author": {"login": "Ethanlm"}, "path": "bin/storm.py", "diffHunk": "@@ -541,6 +541,13 @@ def initialize_upload_credentials_subcommand(subparsers):\n         help=\"\"\"name of the owner of the topology (security precaution)\"\"\"\n     )\n \n+    # If set, this flag will become true meaning that user expects non-empty creds to be uploaded.\n+    # Command exits with non-zero code if uploaded creds collection is empty.\n+    sub_parser.add_argument(\n+        \"-e\", \"--exception\", action='store_true',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMyNDg4OA=="}, "originalCommit": {"oid": "a4da4a716e59debccbdcadc3db5a3c60a14120b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAxODEzMg==", "bodyText": "Where is args.exception_when_empty passed to java command (in storm.py:upload_credentials()?", "url": "https://github.com/apache/storm/pull/3243#discussion_r403018132", "createdAt": "2020-04-03T13:48:58Z", "author": {"login": "bipinprasad"}, "path": "bin/storm.py", "diffHunk": "@@ -541,6 +541,13 @@ def initialize_upload_credentials_subcommand(subparsers):\n         help=\"\"\"name of the owner of the topology (security precaution)\"\"\"\n     )\n \n+    # If set, this flag will become true meaning that user expects non-empty creds to be uploaded.\n+    # Command exits with non-zero code if uploaded creds collection is empty.\n+    sub_parser.add_argument(\n+        \"-e\", \"--exception\", action='store_true',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMyNDg4OA=="}, "originalCommit": {"oid": "a4da4a716e59debccbdcadc3db5a3c60a14120b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI3NDA3MQ==", "bodyText": "@bipinprasad \n  \n    \n      storm/storm-core/src/jvm/org/apache/storm/command/UploadCredentials.java\n    \n    \n         Line 45\n      in\n      088e722\n    \n    \n    \n    \n\n        \n          \n           .boolOpt(\"e\", \"exception-when-empty\")", "url": "https://github.com/apache/storm/pull/3243#discussion_r403274071", "createdAt": "2020-04-03T19:41:51Z", "author": {"login": "RuiLi8080"}, "path": "bin/storm.py", "diffHunk": "@@ -541,6 +541,13 @@ def initialize_upload_credentials_subcommand(subparsers):\n         help=\"\"\"name of the owner of the topology (security precaution)\"\"\"\n     )\n \n+    # If set, this flag will become true meaning that user expects non-empty creds to be uploaded.\n+    # Command exits with non-zero code if uploaded creds collection is empty.\n+    sub_parser.add_argument(\n+        \"-e\", \"--exception\", action='store_true',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMyNDg4OA=="}, "originalCommit": {"oid": "a4da4a716e59debccbdcadc3db5a3c60a14120b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzMwNTg0MQ==", "bodyText": "Seems there is a slight problem. In python code, when exec_java_class() is called, the arguments to the java class is constructed partly from main_class_args. main_class_args is constructed by simply eliminating some arguments passed to the python code (and keeping the rest intact). So if python code got passed \"-e\" ii will get passed thru to java class as \"-e\". However, if \"--exception was passed to python, then --exception will get passed to java. This wont match what java class is expecting. So in order to do a passthru, the option names should be the same, otherwise main_class_args should be suitably modified based on the args. Looks like passthru might be preferred solution.", "url": "https://github.com/apache/storm/pull/3243#discussion_r403305841", "createdAt": "2020-04-03T20:23:56Z", "author": {"login": "bipinprasad"}, "path": "bin/storm.py", "diffHunk": "@@ -541,6 +541,13 @@ def initialize_upload_credentials_subcommand(subparsers):\n         help=\"\"\"name of the owner of the topology (security precaution)\"\"\"\n     )\n \n+    # If set, this flag will become true meaning that user expects non-empty creds to be uploaded.\n+    # Command exits with non-zero code if uploaded creds collection is empty.\n+    sub_parser.add_argument(\n+        \"-e\", \"--exception\", action='store_true',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMyNDg4OA=="}, "originalCommit": {"oid": "a4da4a716e59debccbdcadc3db5a3c60a14120b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgxNDc2MQ==", "bodyText": "Yea, the argument in python is the same: \"--exception-when-empty\".", "url": "https://github.com/apache/storm/pull/3243#discussion_r404814761", "createdAt": "2020-04-07T13:37:25Z", "author": {"login": "Ethanlm"}, "path": "bin/storm.py", "diffHunk": "@@ -541,6 +541,13 @@ def initialize_upload_credentials_subcommand(subparsers):\n         help=\"\"\"name of the owner of the topology (security precaution)\"\"\"\n     )\n \n+    # If set, this flag will become true meaning that user expects non-empty creds to be uploaded.\n+    # Command exits with non-zero code if uploaded creds collection is empty.\n+    sub_parser.add_argument(\n+        \"-e\", \"--exception\", action='store_true',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMyNDg4OA=="}, "originalCommit": {"oid": "a4da4a716e59debccbdcadc3db5a3c60a14120b4"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTIxNDQwOnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/StormSubmitter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMzo0OToyNlrOF_sIXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoxMToxM1rOF_tIDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMyNzY0Ng==", "bodyText": "missing javadoc @return\nThere is another pushCredentials method in this class needs to be taken care of", "url": "https://github.com/apache/storm/pull/3243#discussion_r402327646", "createdAt": "2020-04-02T13:49:26Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/StormSubmitter.java", "diffHunk": "@@ -126,7 +127,7 @@ public static void pushCredentials(String name, Map<String, Object> topoConf, Ma\n      * @throws NotAliveException        if the topology is not alive\n      * @throws InvalidTopologyException if any other error happens\n      */\n-    public static void pushCredentials(String name, Map<String, Object> topoConf, Map<String, String> credentials, String expectedUser)\n+    public static boolean pushCredentials(String name, Map<String, Object> topoConf, Map<String, String> credentials, String expectedUser)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4da4a716e59debccbdcadc3db5a3c60a14120b4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM0Mzk1MA==", "bodyText": "Fixed", "url": "https://github.com/apache/storm/pull/3243#discussion_r402343950", "createdAt": "2020-04-02T14:11:13Z", "author": {"login": "RuiLi8080"}, "path": "storm-client/src/jvm/org/apache/storm/StormSubmitter.java", "diffHunk": "@@ -126,7 +127,7 @@ public static void pushCredentials(String name, Map<String, Object> topoConf, Ma\n      * @throws NotAliveException        if the topology is not alive\n      * @throws InvalidTopologyException if any other error happens\n      */\n-    public static void pushCredentials(String name, Map<String, Object> topoConf, Map<String, String> credentials, String expectedUser)\n+    public static boolean pushCredentials(String name, Map<String, Object> topoConf, Map<String, String> credentials, String expectedUser)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMyNzY0Ng=="}, "originalCommit": {"oid": "a4da4a716e59debccbdcadc3db5a3c60a14120b4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTIyNjQ2OnYy", "diffSide": "RIGHT", "path": "storm-core/src/jvm/org/apache/storm/command/UploadCredentials.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMzo1MjowM1rOF_sQFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoxMTo0M1rOF_tJrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMyOTYyMw==", "bodyText": "No need for default value here. above boolOpt is already default to false", "url": "https://github.com/apache/storm/pull/3243#discussion_r402329623", "createdAt": "2020-04-02T13:52:03Z", "author": {"login": "Ethanlm"}, "path": "storm-core/src/jvm/org/apache/storm/command/UploadCredentials.java", "diffHunk": "@@ -111,7 +112,13 @@ public static void main(String[] args) throws Exception {\n         // use the local setting for the login config rather than the topology's\n         topologyConf.remove(\"java.security.auth.login.config\");\n \n-        StormSubmitter.pushCredentials(topologyName, topologyConf, credentialsMap, (String) cl.get(\"u\"));\n+        boolean throwExceptionForEmptyCreds = (boolean) cl.getOrDefault(\"e\", false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4da4a716e59debccbdcadc3db5a3c60a14120b4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM0NDM2NA==", "bodyText": "Fixed", "url": "https://github.com/apache/storm/pull/3243#discussion_r402344364", "createdAt": "2020-04-02T14:11:43Z", "author": {"login": "RuiLi8080"}, "path": "storm-core/src/jvm/org/apache/storm/command/UploadCredentials.java", "diffHunk": "@@ -111,7 +112,13 @@ public static void main(String[] args) throws Exception {\n         // use the local setting for the login config rather than the topology's\n         topologyConf.remove(\"java.security.auth.login.config\");\n \n-        StormSubmitter.pushCredentials(topologyName, topologyConf, credentialsMap, (String) cl.get(\"u\"));\n+        boolean throwExceptionForEmptyCreds = (boolean) cl.getOrDefault(\"e\", false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMyOTYyMw=="}, "originalCommit": {"oid": "a4da4a716e59debccbdcadc3db5a3c60a14120b4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjY1NTM4OnYy", "diffSide": "RIGHT", "path": "docs/Command-line-client.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOTozMzoxN1rOF_6bPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDo1NTo1MVrOGAZHgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2MTg1Mw==", "bodyText": "This needs to be updated too", "url": "https://github.com/apache/storm/pull/3243#discussion_r402561853", "createdAt": "2020-04-02T19:33:17Z", "author": {"login": "Ethanlm"}, "path": "docs/Command-line-client.md", "diffHunk": "@@ -319,7 +319,9 @@ eg: `storm shell resources/ python topology.py arg1 arg2`\n \n Syntax: `storm upload_credentials topology-name [credkey credvalue]*`\n \n-Uploads a new set of credentials to a running topology\n+Uploads a new set of credentials to a running topology  \n+   * `-e --exception`: optional flag. If set, command will fail and throw exception if no credentials were uploaded.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "568bb57877a67dd7b34b19a06a53b134648c3c77"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NDcwNQ==", "bodyText": "Yes, fixed", "url": "https://github.com/apache/storm/pull/3243#discussion_r403064705", "createdAt": "2020-04-03T14:55:51Z", "author": {"login": "RuiLi8080"}, "path": "docs/Command-line-client.md", "diffHunk": "@@ -319,7 +319,9 @@ eg: `storm shell resources/ python topology.py arg1 arg2`\n \n Syntax: `storm upload_credentials topology-name [credkey credvalue]*`\n \n-Uploads a new set of credentials to a running topology\n+Uploads a new set of credentials to a running topology  \n+   * `-e --exception`: optional flag. If set, command will fail and throw exception if no credentials were uploaded.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2MTg1Mw=="}, "originalCommit": {"oid": "568bb57877a67dd7b34b19a06a53b134648c3c77"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjY3OTM4OnYy", "diffSide": "RIGHT", "path": "bin/storm.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOTo0MDoxNVrOF_6p3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDo1NjowMVrOGAZH-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2NTU5Ng==", "bodyText": "It means true when this config is specified, otherwise it's false.\nSo more precisely, \"If specified, throws an exception if no credentials are uploaded\"", "url": "https://github.com/apache/storm/pull/3243#discussion_r402565596", "createdAt": "2020-04-02T19:40:15Z", "author": {"login": "Ethanlm"}, "path": "bin/storm.py", "diffHunk": "@@ -541,6 +541,13 @@ def initialize_upload_credentials_subcommand(subparsers):\n         help=\"\"\"name of the owner of the topology (security precaution)\"\"\"\n     )\n \n+    # If set, this flag will become true meaning that user expects non-empty creds to be uploaded.\n+    # Command exits with non-zero code if uploaded creds collection is empty.\n+    sub_parser.add_argument(\n+        \"-e\", \"--exception-when-empty\", action='store_true',\n+        help=\"\"\"whether to throw exception if there are no credentials uploaded, default to be false\"\"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "568bb57877a67dd7b34b19a06a53b134648c3c77"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NDgyNQ==", "bodyText": "Fixed", "url": "https://github.com/apache/storm/pull/3243#discussion_r403064825", "createdAt": "2020-04-03T14:56:01Z", "author": {"login": "RuiLi8080"}, "path": "bin/storm.py", "diffHunk": "@@ -541,6 +541,13 @@ def initialize_upload_credentials_subcommand(subparsers):\n         help=\"\"\"name of the owner of the topology (security precaution)\"\"\"\n     )\n \n+    # If set, this flag will become true meaning that user expects non-empty creds to be uploaded.\n+    # Command exits with non-zero code if uploaded creds collection is empty.\n+    sub_parser.add_argument(\n+        \"-e\", \"--exception-when-empty\", action='store_true',\n+        help=\"\"\"whether to throw exception if there are no credentials uploaded, default to be false\"\"\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2NTU5Ng=="}, "originalCommit": {"oid": "568bb57877a67dd7b34b19a06a53b134648c3c77"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjY4NjcyOnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/StormSubmitter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxOTo0MjozMFrOF_6uaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDo1OTozM1rOGAZSDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2Njc2MA==", "bodyText": "fullCreds doesn't really mean anything and can be deleted; image anyone changed the variable name", "url": "https://github.com/apache/storm/pull/3243#discussion_r402566760", "createdAt": "2020-04-02T19:42:30Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/StormSubmitter.java", "diffHunk": "@@ -106,27 +106,30 @@ public static boolean validateZKDigestPayload(String payload) {\n      * @param name        the name of the topology to push credentials to.\n      * @param topoConf    the topology-specific configuration, if desired. See {@link Config}.\n      * @param credentials the credentials to push.\n+     * @return whether the pushed credential collection fullCreds is non-empty. Return false if empty.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "568bb57877a67dd7b34b19a06a53b134648c3c77"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NzA2MA==", "bodyText": "Sure. Fixed", "url": "https://github.com/apache/storm/pull/3243#discussion_r403067060", "createdAt": "2020-04-03T14:59:05Z", "author": {"login": "RuiLi8080"}, "path": "storm-client/src/jvm/org/apache/storm/StormSubmitter.java", "diffHunk": "@@ -106,27 +106,30 @@ public static boolean validateZKDigestPayload(String payload) {\n      * @param name        the name of the topology to push credentials to.\n      * @param topoConf    the topology-specific configuration, if desired. See {@link Config}.\n      * @param credentials the credentials to push.\n+     * @return whether the pushed credential collection fullCreds is non-empty. Return false if empty.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2Njc2MA=="}, "originalCommit": {"oid": "568bb57877a67dd7b34b19a06a53b134648c3c77"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA2NzQwNQ==", "bodyText": "only one Travis build failed. Should be irrelevant.", "url": "https://github.com/apache/storm/pull/3243#discussion_r403067405", "createdAt": "2020-04-03T14:59:33Z", "author": {"login": "RuiLi8080"}, "path": "storm-client/src/jvm/org/apache/storm/StormSubmitter.java", "diffHunk": "@@ -106,27 +106,30 @@ public static boolean validateZKDigestPayload(String payload) {\n      * @param name        the name of the topology to push credentials to.\n      * @param topoConf    the topology-specific configuration, if desired. See {@link Config}.\n      * @param credentials the credentials to push.\n+     * @return whether the pushed credential collection fullCreds is non-empty. Return false if empty.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU2Njc2MA=="}, "originalCommit": {"oid": "568bb57877a67dd7b34b19a06a53b134648c3c77"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4266, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}