{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyOTY4NzIw", "number": 3320, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDowODo1MlrOEVJpbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjoxMTo1NlrOEVmGjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjEzNjEzOnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDowODo1MlrOG7vu-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTo1NzoxM1rOG77SfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwMTI0Mg==", "bodyText": "Is it possible to reuse this.taskToComponent?", "url": "https://github.com/apache/storm/pull/3320#discussion_r465301242", "createdAt": "2020-08-04T20:08:52Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -717,11 +718,20 @@ private Assignment getLocalAssignment(IStormClusterState stormClusterState, Stri\n \n         IWaitStrategy backPressureWaitStrategy = IWaitStrategy.createBackPressureWaitStrategy(topologyConf);\n         Map<List<Long>, JCQueue> receiveQueueMap = new HashMap<>();\n+\n+        Map<Integer, String> taskIdToCompId = StormCommon.stormTaskInfo(topology, topologyConf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8825ed5f881ad30473d6402866794e8b5765b054"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5MDU1Ng==", "bodyText": "Yes, updated. Thanks for pointing out.", "url": "https://github.com/apache/storm/pull/3320#discussion_r465490556", "createdAt": "2020-08-05T05:57:13Z", "author": {"login": "RuiLi8080"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -717,11 +718,20 @@ private Assignment getLocalAssignment(IStormClusterState stormClusterState, Stri\n \n         IWaitStrategy backPressureWaitStrategy = IWaitStrategy.createBackPressureWaitStrategy(topologyConf);\n         Map<List<Long>, JCQueue> receiveQueueMap = new HashMap<>();\n+\n+        Map<Integer, String> taskIdToCompId = StormCommon.stormTaskInfo(topology, topologyConf);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwMTI0Mg=="}, "originalCommit": {"oid": "8825ed5f881ad30473d6402866794e8b5765b054"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjEzNzE3OnYy", "diffSide": "LEFT", "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDowOToxMFrOG7vvpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNTo1ODozMVrOG77T-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwMTQxNA==", "bodyText": "anything specific to this change?", "url": "https://github.com/apache/storm/pull/3320#discussion_r465301414", "createdAt": "2020-08-04T20:09:10Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -199,7 +200,6 @@ public WorkerState(Map<String, Object> conf,\n         }\n         Collections.sort(localTaskIds);\n         this.topologyConf = topologyConf;\n-        this.topology = ConfigUtils.readSupervisorTopology(conf, topologyId, AdvancedFSOps.make(conf));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8825ed5f881ad30473d6402866794e8b5765b054"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ5MDkzOA==", "bodyText": "I actually updated. Basically mkReceiveQueueMap() function needs to know this.taskToComponent which relies on this.topology. So we need to move them up.", "url": "https://github.com/apache/storm/pull/3320#discussion_r465490938", "createdAt": "2020-08-05T05:58:31Z", "author": {"login": "RuiLi8080"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -199,7 +200,6 @@ public WorkerState(Map<String, Object> conf,\n         }\n         Collections.sort(localTaskIds);\n         this.topologyConf = topologyConf;\n-        this.topology = ConfigUtils.readSupervisorTopology(conf, topologyId, AdvancedFSOps.make(conf));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwMTQxNA=="}, "originalCommit": {"oid": "8825ed5f881ad30473d6402866794e8b5765b054"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTA2ODM1OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDoxMDoxM1rOG8LbZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTozNDo1MlrOG8PLpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1NDk4MQ==", "bodyText": "I would change mkReceiveQueueMap method to include taskToComponent parameter to make this relationship more obvious  (and then we can remove the comment)", "url": "https://github.com/apache/storm/pull/3320#discussion_r465754981", "createdAt": "2020-08-05T14:10:13Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -186,6 +186,9 @@ public WorkerState(Map<String, Object> conf,\n         this.isWorkerActive = new CountDownLatch(1);\n         this.isTopologyActive = new AtomicBoolean(false);\n         this.stormComponentToDebug = new AtomicReference<>();\n+        this.topology = ConfigUtils.readSupervisorTopology(conf, topologyId, AdvancedFSOps.make(conf));\n+        this.taskToComponent = StormCommon.stormTaskInfo(topology, topologyConf);\n+        // mkReceiveQueueMap relies on taskToComponent which relies on topology above", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "036e9b37dadc7ca34f1844af6eb2d46742e1329a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgxNjQ4Nw==", "bodyText": "SUre", "url": "https://github.com/apache/storm/pull/3320#discussion_r465816487", "createdAt": "2020-08-05T15:34:52Z", "author": {"login": "RuiLi8080"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -186,6 +186,9 @@ public WorkerState(Map<String, Object> conf,\n         this.isWorkerActive = new CountDownLatch(1);\n         this.isTopologyActive = new AtomicBoolean(false);\n         this.stormComponentToDebug = new AtomicReference<>();\n+        this.topology = ConfigUtils.readSupervisorTopology(conf, topologyId, AdvancedFSOps.make(conf));\n+        this.taskToComponent = StormCommon.stormTaskInfo(topology, topologyConf);\n+        // mkReceiveQueueMap relies on taskToComponent which relies on topology above", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1NDk4MQ=="}, "originalCommit": {"oid": "036e9b37dadc7ca34f1844af6eb2d46742e1329a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTA4MDM0OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDoxMzowM1rOG8LjCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTozNDo0N1rOG8PLYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1NjkzOA==", "bodyText": "I would  use SYSTEM_TASK_ID instead of -1", "url": "https://github.com/apache/storm/pull/3320#discussion_r465756938", "createdAt": "2020-08-05T14:13:03Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -717,11 +719,19 @@ private Assignment getLocalAssignment(IStormClusterState stormClusterState, Stri\n \n         IWaitStrategy backPressureWaitStrategy = IWaitStrategy.createBackPressureWaitStrategy(topologyConf);\n         Map<List<Long>, JCQueue> receiveQueueMap = new HashMap<>();\n+\n         for (List<Long> executor : executors) {\n             List<Integer> taskIds = StormCommon.executorIdToTasks(executor);\n+            int taskId = taskIds.get(0);\n+            String compId;\n+            if (taskId == -1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "036e9b37dadc7ca34f1844af6eb2d46742e1329a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgxNjQxOA==", "bodyText": "Yes, updated", "url": "https://github.com/apache/storm/pull/3320#discussion_r465816418", "createdAt": "2020-08-05T15:34:47Z", "author": {"login": "RuiLi8080"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -717,11 +719,19 @@ private Assignment getLocalAssignment(IStormClusterState stormClusterState, Stri\n \n         IWaitStrategy backPressureWaitStrategy = IWaitStrategy.createBackPressureWaitStrategy(topologyConf);\n         Map<List<Long>, JCQueue> receiveQueueMap = new HashMap<>();\n+\n         for (List<Long> executor : executors) {\n             List<Integer> taskIds = StormCommon.executorIdToTasks(executor);\n+            int taskId = taskIds.get(0);\n+            String compId;\n+            if (taskId == -1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1NjkzOA=="}, "originalCommit": {"oid": "036e9b37dadc7ca34f1844af6eb2d46742e1329a"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTY2NjM2OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNjoyODoxNFrOG8RWOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNjo0ODo0MFrOG8SIEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg1MTk2Mg==", "bodyText": "Should StormCommon.stormTaskInfo() be addressing this mapping?", "url": "https://github.com/apache/storm/pull/3320#discussion_r465851962", "createdAt": "2020-08-05T16:28:14Z", "author": {"login": "agresch"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -717,11 +718,19 @@ private Assignment getLocalAssignment(IStormClusterState stormClusterState, Stri\n \n         IWaitStrategy backPressureWaitStrategy = IWaitStrategy.createBackPressureWaitStrategy(topologyConf);\n         Map<List<Long>, JCQueue> receiveQueueMap = new HashMap<>();\n+\n         for (List<Long> executor : executors) {\n             List<Integer> taskIds = StormCommon.executorIdToTasks(executor);\n+            int taskId = taskIds.get(0);\n+            String compId;\n+            if (taskId == Constants.SYSTEM_TASK_ID) {\n+                compId = Constants.SYSTEM_COMPONENT_ID;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf68fa20c95177ff8abe2af6444f6ef4c7777db3"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg2NDcyMQ==", "bodyText": "StormCommon.stormTaskInfoImpl() address taskID starting from 1.\nWorkerState.readWorkerExecutors() additionally add Constants.SYSTEM_EXECUTOR_ID (-1) before reading from assignment. This system executor is not present in taskToComponent map.", "url": "https://github.com/apache/storm/pull/3320#discussion_r465864721", "createdAt": "2020-08-05T16:48:40Z", "author": {"login": "RuiLi8080"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -717,11 +718,19 @@ private Assignment getLocalAssignment(IStormClusterState stormClusterState, Stri\n \n         IWaitStrategy backPressureWaitStrategy = IWaitStrategy.createBackPressureWaitStrategy(topologyConf);\n         Map<List<Long>, JCQueue> receiveQueueMap = new HashMap<>();\n+\n         for (List<Long> executor : executors) {\n             List<Integer> taskIds = StormCommon.executorIdToTasks(executor);\n+            int taskId = taskIds.get(0);\n+            String compId;\n+            if (taskId == Constants.SYSTEM_TASK_ID) {\n+                compId = Constants.SYSTEM_COMPONENT_ID;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg1MTk2Mg=="}, "originalCommit": {"oid": "bf68fa20c95177ff8abe2af6444f6ef4c7777db3"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDc5ODIwOnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjoxMTo1NlrOG8caSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNToyNjo0OVrOG84mfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAzMzIyNA==", "bodyText": "nit: space", "url": "https://github.com/apache/storm/pull/3320#discussion_r466033224", "createdAt": "2020-08-05T22:11:56Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -704,7 +704,8 @@ private Assignment getLocalAssignment(IStormClusterState stormClusterState, Stri\n         }\n     }\n \n-    private Map<List<Long>, JCQueue> mkReceiveQueueMap(Map<String, Object> topologyConf, Set<List<Long>> executors) {\n+    private Map<List<Long>, JCQueue> mkReceiveQueueMap(Map<String, Object> topologyConf,\n+                                                       Set<List<Long>> executors,  Map<Integer, String> taskToComponent) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf68fa20c95177ff8abe2af6444f6ef4c7777db3"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ5NTEwMw==", "bodyText": "updated", "url": "https://github.com/apache/storm/pull/3320#discussion_r466495103", "createdAt": "2020-08-06T15:26:49Z", "author": {"login": "RuiLi8080"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -704,7 +704,8 @@ private Assignment getLocalAssignment(IStormClusterState stormClusterState, Stri\n         }\n     }\n \n-    private Map<List<Long>, JCQueue> mkReceiveQueueMap(Map<String, Object> topologyConf, Set<List<Long>> executors) {\n+    private Map<List<Long>, JCQueue> mkReceiveQueueMap(Map<String, Object> topologyConf,\n+                                                       Set<List<Long>> executors,  Map<Integer, String> taskToComponent) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAzMzIyNA=="}, "originalCommit": {"oid": "bf68fa20c95177ff8abe2af6444f6ef4c7777db3"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4182, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}