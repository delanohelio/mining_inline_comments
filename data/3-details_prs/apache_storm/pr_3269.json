{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NDI4MTIy", "number": 3269, "title": "[STORM-3636] Enable SSL credentials auto reload", "bodyText": "What is the purpose of the change\nThis enables ssl auto reload without restarting servers.\nHow was the change tested\nTested with replacing keystore with empty file and replace back.\nExample:\n\nAt start up:\n\n2020-05-13 14:55:11.896 o.a.s.d.c.ReloadableSslContextFactory main [INFO] Enabling reloading of SSL credentials without server restart\n2020-05-13 14:55:11.921 o.a.s.d.c.FileWatcher main [INFO] Starting FileWatcher on <keystore-path>\n2020-05-13 14:55:11.923 o.a.s.d.c.ReloadableSslContextFactory main [WARN] TrustStore is null; it won't be watched/reloaded\n2020-05-13 14:55:11.928 o.e.j.s.AbstractConnector main [INFO] Started ServerConnector@2b2954e1{SSL,[ssl, http/1.1]}{0.0.0.0:4443}\n2020-05-13 14:55:11.928 o.e.j.s.Server main [INFO] Started @4645ms\n\n\nReplace the keystore with a empty file\n\n2020-05-13 14:55:39.962 o.a.s.d.c.FileWatcher Thread-17 [INFO] Event ENTRY_MODIFY on <keystore-path>; invoking callback\n2020-05-13 14:55:39.964 o.a.s.d.c.ReloadableSslContextFactory Thread-17 [INFO] Reloading SslContextFactory due to keystore change\n2020-05-13 14:55:39.964 o.a.s.d.c.FileWatcher Thread-17 [ERROR] Error invoking FileWatcher callback for <keystore-path>\njava.io.IOException: Short read of DER length\n        at sun.security.util.DerInputStream.getLength(DerInputStream.java:582) ~[?:1.8.0_242]\n        at sun.security.util.DerValue.init(DerValue.java:391) ~[?:1.8.0_242]\n        at sun.security.util.DerValue.<init>(DerValue.java:332) ~[?:1.8.0_242]\n        at sun.security.util.DerValue.<init>(DerValue.java:345) ~[?:1.8.0_242]\n        at sun.security.pkcs12.PKCS12KeyStore.engineLoad(PKCS12KeyStore.java:1938) ~[?:1.8.0_242]\n        at java.security.KeyStore.load(KeyStore.java:1445) ~[?:1.8.0_242]\n        at org.eclipse.jetty.util.security.CertificateUtils.getKeyStore(CertificateUtils.java:54) ~[jetty-util-9.4.14.v20181114.jar:9.4.14.v20181114]\n\n\nReplace it back:\n\n2020-05-13 14:56:00.860 o.a.s.d.c.FileWatcher Thread-17 [INFO] Event ENTRY_MODIFY on <keystore-path>; invoking callback\n2020-05-13 14:56:00.860 o.a.s.d.c.ReloadableSslContextFactory Thread-17 [INFO] Reloading SslContextFactory due to keystore change\n2020-05-13 14:56:01.097 o.e.j.u.s.SslContextFactory Thread-17 [INFO] x509=X509@e1871c7(<cert>,h=[],w=[<domain>]) for ReloadableSslContextFactory@1192b58e[provider=null,keyStore=file://<keystore-path>,trustStore=null]\n\nThe same test was done with TrustStore too.", "createdAt": "2020-05-13T15:08:25Z", "url": "https://github.com/apache/storm/pull/3269", "merged": true, "mergeCommit": {"oid": "4aa4797787675e604571a5f6a9f596d9f6b13d83"}, "closed": true, "closedAt": "2020-05-14T21:54:45Z", "author": {"login": "Ethanlm"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg6Pj8gH2gAyNDE3NDI4MTIyOjExYTkzM2MxNjc1Y2RiMjg1MWEwNjk0NGM3ZTFkZDRlNTI3MmE3YjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchR7z_AFqTQxMjA4NDQ0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "11a933c1675cdb2851a06944c7e1dd4e5272a7b0", "author": {"user": {"login": "Ethanlm", "name": "Meng (Ethan) Li "}}, "url": "https://github.com/apache/storm/commit/11a933c1675cdb2851a06944c7e1dd4e5272a7b0", "committedDate": "2020-05-13T15:03:09Z", "message": "[STORM-3636] Enable SSL credentials auto reload"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMDMzNjE1", "url": "https://github.com/apache/storm/pull/3269#pullrequestreview-411033615", "createdAt": "2020-05-13T15:18:37Z", "commit": {"oid": "11a933c1675cdb2851a06944c7e1dd4e5272a7b0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f37c6cff83f07350668094383120766e2f6e77f", "author": {"user": {"login": "Ethanlm", "name": "Meng (Ethan) Li "}}, "url": "https://github.com/apache/storm/commit/8f37c6cff83f07350668094383120766e2f6e77f", "committedDate": "2020-05-13T19:18:41Z", "message": "[STORM-3636] add license header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3e4302bb2eeb0b1a737de68a49d16de706fdcea", "author": {"user": {"login": "Ethanlm", "name": "Meng (Ethan) Li "}}, "url": "https://github.com/apache/storm/commit/d3e4302bb2eeb0b1a737de68a49d16de706fdcea", "committedDate": "2020-05-13T19:31:26Z", "message": "[STORM-3636] license header format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODYwMTM1", "url": "https://github.com/apache/storm/pull/3269#pullrequestreview-411860135", "createdAt": "2020-05-14T14:26:25Z", "commit": {"oid": "d3e4302bb2eeb0b1a737de68a49d16de706fdcea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExOTQwMDY5", "url": "https://github.com/apache/storm/pull/3269#pullrequestreview-411940069", "createdAt": "2020-05-14T15:47:23Z", "commit": {"oid": "d3e4302bb2eeb0b1a737de68a49d16de706fdcea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTo0NzoyM1rOGViptg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTo0NzoyM1rOGViptg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI0MTAxNA==", "bodyText": "Please provide names for Thread with prefix\nThread t = new Thread(basics, \"FileWatcher-\" + watchedFile.getName());", "url": "https://github.com/apache/storm/pull/3269#discussion_r425241014", "createdAt": "2020-05-14T15:47:23Z", "author": {"login": "kishorvpatil"}, "path": "storm-webapp/src/main/java/org/apache/storm/daemon/common/FileWatcher.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License\n+ */\n+\n+package org.apache.storm.daemon.common;\n+\n+import static java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.WatchEvent;\n+import java.nio.file.WatchKey;\n+import java.nio.file.WatchService;\n+import java.util.Collections;\n+import java.util.List;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class FileWatcher implements Runnable {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(FileWatcher.class);\n+\n+    private final WatchService watcher;\n+    private volatile boolean stopped = false;\n+    private final Path watchedFile;\n+    private final Callback callback;\n+    List<WatchEvent.Kind<Path>> kinds;\n+\n+    public FileWatcher(final Path watchedFile, Callback callback) throws IOException {\n+        this(watchedFile, callback, Collections.singletonList(ENTRY_MODIFY));\n+    }\n+\n+    public FileWatcher(final Path watchedFile, Callback callback, List<WatchEvent.Kind<Path>> kinds) throws IOException {\n+        this.watchedFile = watchedFile;\n+        this.callback = callback;\n+        Path parent = watchedFile.getParent();\n+        this.watcher = parent.getFileSystem().newWatchService();\n+        this.kinds = kinds;\n+        parent.register(watcher, this.kinds.toArray(new WatchEvent.Kind[0]));\n+    }\n+\n+    public void start() {\n+        Thread t = new Thread(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3e4302bb2eeb0b1a737de68a49d16de706fdcea"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a1ec5d12bb56b403a8c1effa6f09771eeff3d81", "author": {"user": {"login": "Ethanlm", "name": "Meng (Ethan) Li "}}, "url": "https://github.com/apache/storm/commit/6a1ec5d12bb56b403a8c1effa6f09771eeff3d81", "committedDate": "2020-05-14T16:28:46Z", "message": "[STORM-3636] add FileWatcher thread name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDg0NDQ0", "url": "https://github.com/apache/storm/pull/3269#pullrequestreview-412084444", "createdAt": "2020-05-14T18:39:18Z", "commit": {"oid": "6a1ec5d12bb56b403a8c1effa6f09771eeff3d81"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4579, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}