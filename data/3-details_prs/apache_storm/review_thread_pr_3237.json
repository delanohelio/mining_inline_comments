{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzODY4MTIw", "number": 3237, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoxNjoxMVrODtIVeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDo1NDozOVrODxYpAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjQ5MDgyOnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/utils/Utils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoxNjoxMVrOF-X-pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoxNjoxMVrOF-X-pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk0ODkwMA==", "bodyText": "port should just be int or Integer", "url": "https://github.com/apache/storm/pull/3237#discussion_r400948900", "createdAt": "2020-03-31T14:16:11Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/utils/Utils.java", "diffHunk": "@@ -124,11 +124,47 @@\n     private static String memoizedLocalHostnameString = null;\n     public static final Pattern TOPOLOGY_KEY_PATTERN = Pattern.compile(\"^[\\\\w \\\\t\\\\._-]+$\", Pattern.UNICODE_CHARACTER_CLASS);\n \n+    public static final String NUMA_MEMORY_IN_MB = \"numa.memory.mb\";\n+    public static final String NUMA_CORES = \"numa.cores\";\n+    public static final String NUMA_PORTS = \"numa.ports\";\n+    public static final String NUMA_GENERIC_RESOURCES_MAP = \"numa.generic.resources.map\";\n+\n     static {\n         localConf = readStormConfig();\n         serializationDelegate = getSerializationDelegate(localConf);\n     }\n \n+    /**\n+     * Return supervisor numa configuration.\n+     * @param stormConf stormConf\n+     * @return getNumaMap\n+     */\n+    public static Map<String, Object> getNumaMap(Map<String, Object> stormConf) {\n+        Object numa = stormConf.get(Config.SUPERVISOR_NUMA_META);\n+        if (numa == null) {\n+            return Collections.emptyMap();\n+        }\n+        return (Map<String, Object>) numa;\n+    }\n+\n+    /**\n+     * getNumaIdForPort.\n+     * @param port port\n+     * @param stormConf stormConf\n+     * @return getNumaIdForPort\n+     */\n+    public static String getNumaIdForPort(Number port, Map<String, Object> stormConf) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjQ5MTk5OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/utils/Utils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoxNjoyNFrOF-X_Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoxNjoyNFrOF-X_Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk0OTA3OQ==", "bodyText": "Map should be Map<String, Object>", "url": "https://github.com/apache/storm/pull/3237#discussion_r400949079", "createdAt": "2020-03-31T14:16:24Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/utils/Utils.java", "diffHunk": "@@ -124,11 +124,47 @@\n     private static String memoizedLocalHostnameString = null;\n     public static final Pattern TOPOLOGY_KEY_PATTERN = Pattern.compile(\"^[\\\\w \\\\t\\\\._-]+$\", Pattern.UNICODE_CHARACTER_CLASS);\n \n+    public static final String NUMA_MEMORY_IN_MB = \"numa.memory.mb\";\n+    public static final String NUMA_CORES = \"numa.cores\";\n+    public static final String NUMA_PORTS = \"numa.ports\";\n+    public static final String NUMA_GENERIC_RESOURCES_MAP = \"numa.generic.resources.map\";\n+\n     static {\n         localConf = readStormConfig();\n         serializationDelegate = getSerializationDelegate(localConf);\n     }\n \n+    /**\n+     * Return supervisor numa configuration.\n+     * @param stormConf stormConf\n+     * @return getNumaMap\n+     */\n+    public static Map<String, Object> getNumaMap(Map<String, Object> stormConf) {\n+        Object numa = stormConf.get(Config.SUPERVISOR_NUMA_META);\n+        if (numa == null) {\n+            return Collections.emptyMap();\n+        }\n+        return (Map<String, Object>) numa;\n+    }\n+\n+    /**\n+     * getNumaIdForPort.\n+     * @param port port\n+     * @param stormConf stormConf\n+     * @return getNumaIdForPort\n+     */\n+    public static String getNumaIdForPort(Number port, Map<String, Object> stormConf) {\n+        Map<String, Object> validatedNumaMap = getNumaMap(stormConf);\n+        for (Entry<String, Object> numaEntry : validatedNumaMap.entrySet()) {\n+            Map numaMap  = (Map<String, Object>) numaEntry.getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjQ5NjY1OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/validation/ConfigValidation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoxNzoyMVrOF-YCVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoxNzoyMVrOF-YCVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk0OTg0NQ==", "bodyText": "Map should be Map<String, Object>", "url": "https://github.com/apache/storm/pull/3237#discussion_r400949845", "createdAt": "2020-03-31T14:17:21Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/validation/ConfigValidation.java", "diffHunk": "@@ -416,6 +423,41 @@ public void validateInteger(String name, Object o) {\n         }\n     }\n \n+    public static class NumaEntryValidator extends Validator {\n+\n+        @Override\n+        public void validateField(String name, Object o) {\n+            if (o == null) {\n+                return;\n+            }\n+            Map numa = (Map<String, Object>) o;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjUwMjM1OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/validation/ConfigValidation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoxODoyOVrOF-YF4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoxODoyOVrOF-YF4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk1MDc1Mg==", "bodyText": "Set should be Set<Integer>;  HashSet should be HashSet<>", "url": "https://github.com/apache/storm/pull/3237#discussion_r400950752", "createdAt": "2020-03-31T14:18:29Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/validation/ConfigValidation.java", "diffHunk": "@@ -416,6 +423,41 @@ public void validateInteger(String name, Object o) {\n         }\n     }\n \n+    public static class NumaEntryValidator extends Validator {\n+\n+        @Override\n+        public void validateField(String name, Object o) {\n+            if (o == null) {\n+                return;\n+            }\n+            Map numa = (Map<String, Object>) o;\n+            for (String key : new String[]{NUMA_CORES, NUMA_MEMORY_IN_MB, NUMA_PORTS}) {\n+                if (!numa.containsKey(key)) {\n+                    throw new IllegalArgumentException(\n+                            \"The numa configuration key [\" + key + \"] is missing!\"\n+                    );\n+                }\n+            }\n+\n+            List<Integer> cores = (List<Integer>) numa.get(NUMA_CORES);\n+            Set coreSet = new HashSet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjUxMzExOnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoyMDozOFrOF-YM3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDoyMDozOFrOF-YM3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk1MjU0Mg==", "bodyText": "initialization can be removed here", "url": "https://github.com/apache/storm/pull/3237#discussion_r400952542", "createdAt": "2020-03-31T14:20:38Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java", "diffHunk": "@@ -50,6 +54,7 @@\n     private CgroupCommon rootCgroup;\n     private String rootDir;\n     private Map<String, Object> conf;\n+    protected Map<String, Object> validatedNumaMap = new ConcurrentHashMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjYwMzQxOnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDozOToxNFrOF-ZFow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDoxMzoxN1rOGCFj2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk2NzA3NQ==", "bodyText": "This changes Container attribute supervisorId when it mkLaunchCommand, which means the supervisorId is different depending on whether it calles mkLaunchCommand or not. I am afraid it might introduce confusions.", "url": "https://github.com/apache/storm/pull/3237#discussion_r400967075", "createdAt": "2020-03-31T14:39:14Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java", "diffHunk": "@@ -665,8 +666,10 @@ protected String javaCmd(String cmd) {\n         commandList.addAll(classPathParams);\n         commandList.add(getWorkerMain(topoVersion));\n         commandList.add(topologyId);\n+        if (numaId != null) {\n+            supervisorId += Constants.NUMA_ID_SEPARATOR + numaId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyNzUzNw==", "bodyText": "The mkLaunchCommand is in BasicContainer - is there a situation where it wouldn't be called?", "url": "https://github.com/apache/storm/pull/3237#discussion_r401227537", "createdAt": "2020-03-31T21:31:18Z", "author": {"login": "govind-menon"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java", "diffHunk": "@@ -665,8 +666,10 @@ protected String javaCmd(String cmd) {\n         commandList.addAll(classPathParams);\n         commandList.add(getWorkerMain(topoVersion));\n         commandList.add(topologyId);\n+        if (numaId != null) {\n+            supervisorId += Constants.NUMA_ID_SEPARATOR + numaId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk2NzA3NQ=="}, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI0MDIzOQ==", "bodyText": "I mostly worried about the order. If it's not called yet but accessed somewhere else, the result can be unexpected. We shouldn't implicitly change the meaning of the attribute supervisorId. If we want to attach \"numa\" to it, do it as earliest as possible so we know everywhere we see a supervisorId in Container, it has \"numa\"", "url": "https://github.com/apache/storm/pull/3237#discussion_r401240239", "createdAt": "2020-03-31T21:58:32Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java", "diffHunk": "@@ -665,8 +666,10 @@ protected String javaCmd(String cmd) {\n         commandList.addAll(classPathParams);\n         commandList.add(getWorkerMain(topoVersion));\n         commandList.add(topologyId);\n+        if (numaId != null) {\n+            supervisorId += Constants.NUMA_ID_SEPARATOR + numaId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk2NzA3NQ=="}, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4NTA3MA==", "bodyText": "I'm putting this back here - there could be/are multiple implementations for how a ResourceIsolation manager could implement NUMA pinning but the supervisor ID MUST contain the numa id in the current implementation. But this supervisor id is effectively only used when the worker is launched. I feel it is appropriate to keep it here so that it's explicitly used as opposed to a super constructor where it can be missed when future changes are maded", "url": "https://github.com/apache/storm/pull/3237#discussion_r403085070", "createdAt": "2020-04-03T15:26:07Z", "author": {"login": "govind-menon"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java", "diffHunk": "@@ -665,8 +666,10 @@ protected String javaCmd(String cmd) {\n         commandList.addAll(classPathParams);\n         commandList.add(getWorkerMain(topoVersion));\n         commandList.add(topologyId);\n+        if (numaId != null) {\n+            supervisorId += Constants.NUMA_ID_SEPARATOR + numaId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk2NzA3NQ=="}, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg0MTQzNQ==", "bodyText": "This way is also fine.  Originally it was\nif (numaId != null) {\n           this.supervisorId += Constants.NUMA_ID_SEPARATOR + numaId;\n}\n\nand it changed this.supervisorId.\nCurrently this.supervisorId is not changed, so it is fine.", "url": "https://github.com/apache/storm/pull/3237#discussion_r404841435", "createdAt": "2020-04-07T14:13:17Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java", "diffHunk": "@@ -665,8 +666,10 @@ protected String javaCmd(String cmd) {\n         commandList.addAll(classPathParams);\n         commandList.add(getWorkerMain(topoVersion));\n         commandList.add(topologyId);\n+        if (numaId != null) {\n+            supervisorId += Constants.NUMA_ID_SEPARATOR + numaId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk2NzA3NQ=="}, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjYzMzAxOnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/utils/Utils.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDo0NTowOVrOF-ZYRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjoxOToyOVrOGDf46g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3MTg0Ng==", "bodyText": "Seems like all these file changes might be better added to SupervisorUtils?", "url": "https://github.com/apache/storm/pull/3237#discussion_r400971846", "createdAt": "2020-03-31T14:45:09Z", "author": {"login": "agresch"}, "path": "storm-client/src/jvm/org/apache/storm/utils/Utils.java", "diffHunk": "@@ -124,11 +124,47 @@\n     private static String memoizedLocalHostnameString = null;\n     public static final Pattern TOPOLOGY_KEY_PATTERN = Pattern.compile(\"^[\\\\w \\\\t\\\\._-]+$\", Pattern.UNICODE_CHARACTER_CLASS);\n \n+    public static final String NUMA_MEMORY_IN_MB = \"numa.memory.mb\";\n+    public static final String NUMA_CORES = \"numa.cores\";\n+    public static final String NUMA_PORTS = \"numa.ports\";\n+    public static final String NUMA_GENERIC_RESOURCES_MAP = \"numa.generic.resources.map\";\n+\n     static {\n         localConf = readStormConfig();\n         serializationDelegate = getSerializationDelegate(localConf);\n     }\n \n+    /**\n+     * Return supervisor numa configuration.\n+     * @param stormConf stormConf\n+     * @return getNumaMap\n+     */\n+    public static Map<String, Object> getNumaMap(Map<String, Object> stormConf) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyNTU1Mw==", "bodyText": "These are used in the client side to do topology configuration so I think it's better to keep it here", "url": "https://github.com/apache/storm/pull/3237#discussion_r401225553", "createdAt": "2020-03-31T21:27:06Z", "author": {"login": "govind-menon"}, "path": "storm-client/src/jvm/org/apache/storm/utils/Utils.java", "diffHunk": "@@ -124,11 +124,47 @@\n     private static String memoizedLocalHostnameString = null;\n     public static final Pattern TOPOLOGY_KEY_PATTERN = Pattern.compile(\"^[\\\\w \\\\t\\\\._-]+$\", Pattern.UNICODE_CHARACTER_CLASS);\n \n+    public static final String NUMA_MEMORY_IN_MB = \"numa.memory.mb\";\n+    public static final String NUMA_CORES = \"numa.cores\";\n+    public static final String NUMA_PORTS = \"numa.ports\";\n+    public static final String NUMA_GENERIC_RESOURCES_MAP = \"numa.generic.resources.map\";\n+\n     static {\n         localConf = readStormConfig();\n         serializationDelegate = getSerializationDelegate(localConf);\n     }\n \n+    /**\n+     * Return supervisor numa configuration.\n+     * @param stormConf stormConf\n+     * @return getNumaMap\n+     */\n+    public static Map<String, Object> getNumaMap(Map<String, Object> stormConf) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3MTg0Ng=="}, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY1MDA1Mg==", "bodyText": "That makes sense.", "url": "https://github.com/apache/storm/pull/3237#discussion_r401650052", "createdAt": "2020-04-01T14:16:45Z", "author": {"login": "agresch"}, "path": "storm-client/src/jvm/org/apache/storm/utils/Utils.java", "diffHunk": "@@ -124,11 +124,47 @@\n     private static String memoizedLocalHostnameString = null;\n     public static final Pattern TOPOLOGY_KEY_PATTERN = Pattern.compile(\"^[\\\\w \\\\t\\\\._-]+$\", Pattern.UNICODE_CHARACTER_CLASS);\n \n+    public static final String NUMA_MEMORY_IN_MB = \"numa.memory.mb\";\n+    public static final String NUMA_CORES = \"numa.cores\";\n+    public static final String NUMA_PORTS = \"numa.ports\";\n+    public static final String NUMA_GENERIC_RESOURCES_MAP = \"numa.generic.resources.map\";\n+\n     static {\n         localConf = readStormConfig();\n         serializationDelegate = getSerializationDelegate(localConf);\n     }\n \n+    /**\n+     * Return supervisor numa configuration.\n+     * @param stormConf stormConf\n+     * @return getNumaMap\n+     */\n+    public static Map<String, Object> getNumaMap(Map<String, Object> stormConf) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3MTg0Ng=="}, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMyMTM4Ng==", "bodyText": "As I looked again, I realized getNumaMap is only used in storm-server and Aaron's previous makes sense", "url": "https://github.com/apache/storm/pull/3237#discussion_r406321386", "createdAt": "2020-04-09T16:19:29Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/utils/Utils.java", "diffHunk": "@@ -124,11 +124,47 @@\n     private static String memoizedLocalHostnameString = null;\n     public static final Pattern TOPOLOGY_KEY_PATTERN = Pattern.compile(\"^[\\\\w \\\\t\\\\._-]+$\", Pattern.UNICODE_CHARACTER_CLASS);\n \n+    public static final String NUMA_MEMORY_IN_MB = \"numa.memory.mb\";\n+    public static final String NUMA_CORES = \"numa.cores\";\n+    public static final String NUMA_PORTS = \"numa.ports\";\n+    public static final String NUMA_GENERIC_RESOURCES_MAP = \"numa.generic.resources.map\";\n+\n     static {\n         localConf = readStormConfig();\n         serializationDelegate = getSerializationDelegate(localConf);\n     }\n \n+    /**\n+     * Return supervisor numa configuration.\n+     * @param stormConf stormConf\n+     * @return getNumaMap\n+     */\n+    public static Map<String, Object> getNumaMap(Map<String, Object> stormConf) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3MTg0Ng=="}, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjY2MTEzOnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/Config.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDo1MDozNFrOF-Zplg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDozNToyMlrOF_Rm7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3NjI3OA==", "bodyText": "I think we should add a doc describing this feature.", "url": "https://github.com/apache/storm/pull/3237#discussion_r400976278", "createdAt": "2020-03-31T14:50:34Z", "author": {"login": "agresch"}, "path": "storm-client/src/jvm/org/apache/storm/Config.java", "diffHunk": "@@ -1096,6 +1096,24 @@\n     @IsPositiveNumber\n     @NotNull\n     public static final String SUPERVISOR_WORKER_TIMEOUT_SECS = \"supervisor.worker.timeout.secs\";\n+\n+    /**\n+     * A map with keys mapped to each NUMA Node on the supervisor that will be used", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyMjcxOQ==", "bodyText": "I'll put up a different PR for the documentation", "url": "https://github.com/apache/storm/pull/3237#discussion_r401222719", "createdAt": "2020-03-31T21:21:15Z", "author": {"login": "govind-menon"}, "path": "storm-client/src/jvm/org/apache/storm/Config.java", "diffHunk": "@@ -1096,6 +1096,24 @@\n     @IsPositiveNumber\n     @NotNull\n     public static final String SUPERVISOR_WORKER_TIMEOUT_SECS = \"supervisor.worker.timeout.secs\";\n+\n+    /**\n+     * A map with keys mapped to each NUMA Node on the supervisor that will be used", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3NjI3OA=="}, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0ODYzMw==", "bodyText": "Can we add a tracking JIRA?", "url": "https://github.com/apache/storm/pull/3237#discussion_r401648633", "createdAt": "2020-04-01T14:14:50Z", "author": {"login": "agresch"}, "path": "storm-client/src/jvm/org/apache/storm/Config.java", "diffHunk": "@@ -1096,6 +1096,24 @@\n     @IsPositiveNumber\n     @NotNull\n     public static final String SUPERVISOR_WORKER_TIMEOUT_SECS = \"supervisor.worker.timeout.secs\";\n+\n+    /**\n+     * A map with keys mapped to each NUMA Node on the supervisor that will be used", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3NjI3OA=="}, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5MzEwMA==", "bodyText": "https://issues.apache.org/jira/browse/STORM-3615", "url": "https://github.com/apache/storm/pull/3237#discussion_r401893100", "createdAt": "2020-04-01T20:35:22Z", "author": {"login": "govind-menon"}, "path": "storm-client/src/jvm/org/apache/storm/Config.java", "diffHunk": "@@ -1096,6 +1096,24 @@\n     @IsPositiveNumber\n     @NotNull\n     public static final String SUPERVISOR_WORKER_TIMEOUT_SECS = \"supervisor.worker.timeout.secs\";\n+\n+    /**\n+     * A map with keys mapped to each NUMA Node on the supervisor that will be used", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3NjI3OA=="}, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Njc1OTMwOnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNToxMDo1M1rOF-an7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNToxMDo1M1rOF-an7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk5MjIzOA==", "bodyText": "Is this a different implementation than what we have internally?\nInternally you used numactl. Here seems to be using cgroup directly. Is this well tested?", "url": "https://github.com/apache/storm/pull/3237#discussion_r400992238", "createdAt": "2020-03-31T15:10:53Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java", "diffHunk": "@@ -203,6 +209,30 @@ public void reserveResourcesForWorker(String workerId, Integer totalMem, Integer\n             }\n         }\n \n+        if (numaId != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Njc2MzA4OnYy", "diffSide": "RIGHT", "path": "storm-server/src/test/java/org/apache/storm/TestCgroups.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNToxMTo0MVrOF-aqUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNToxMTo0MVrOF-aqUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk5Mjg0OQ==", "bodyText": "Should be Map<String, Object>,  HashMap<>", "url": "https://github.com/apache/storm/pull/3237#discussion_r400992849", "createdAt": "2020-03-31T15:11:41Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/test/java/org/apache/storm/TestCgroups.java", "diffHunk": "@@ -43,6 +45,16 @@\n     public void testSetupAndTearDown() throws IOException {\n         Config config = new Config();\n         config.putAll(Utils.readDefaultConfig());\n+\n+        Map numaNode = new HashMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Njc3MTcyOnYy", "diffSide": "RIGHT", "path": "storm-server/src/test/java/org/apache/storm/TestCgroups.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNToxMzoyN1rOF-avtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNToxMzoyN1rOF-avtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk5NDIzMA==", "bodyText": "This should include key/value type too.", "url": "https://github.com/apache/storm/pull/3237#discussion_r400994230", "createdAt": "2020-03-31T15:13:27Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/test/java/org/apache/storm/TestCgroups.java", "diffHunk": "@@ -43,6 +45,16 @@\n     public void testSetupAndTearDown() throws IOException {\n         Config config = new Config();\n         config.putAll(Utils.readDefaultConfig());\n+\n+        Map numaNode = new HashMap();\n+        numaNode.put(Utils.NUMA_CORES, Collections.singletonList(\"0\"));\n+        numaNode.put(Utils.NUMA_PORTS, Collections.singletonList(8081));\n+        numaNode.put(Utils.NUMA_MEMORY_IN_MB, 2048);\n+        Map numaMap = new HashMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bde274c792efc3cea0eada85f9231236ff135554"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDkzMzY4OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/utils/Utils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDoxOToyMVrOF_C4nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxOToxMTozMlrOF_O0aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY1MTg2OQ==", "bodyText": "This one seems to be used only in storm-server.  Can we make this one SupervisorUtils?\nPlease update the java doc to indicate this is specific to a single supervisor.  stormConf could be renamed supervisorConf for clarity on this.", "url": "https://github.com/apache/storm/pull/3237#discussion_r401651869", "createdAt": "2020-04-01T14:19:21Z", "author": {"login": "agresch"}, "path": "storm-client/src/jvm/org/apache/storm/utils/Utils.java", "diffHunk": "@@ -124,11 +124,47 @@\n     private static String memoizedLocalHostnameString = null;\n     public static final Pattern TOPOLOGY_KEY_PATTERN = Pattern.compile(\"^[\\\\w \\\\t\\\\._-]+$\", Pattern.UNICODE_CHARACTER_CLASS);\n \n+    public static final String NUMA_MEMORY_IN_MB = \"numa.memory.mb\";\n+    public static final String NUMA_CORES = \"numa.cores\";\n+    public static final String NUMA_PORTS = \"numa.ports\";\n+    public static final String NUMA_GENERIC_RESOURCES_MAP = \"numa.generic.resources.map\";\n+\n     static {\n         localConf = readStormConfig();\n         serializationDelegate = getSerializationDelegate(localConf);\n     }\n \n+    /**\n+     * Return supervisor numa configuration.\n+     * @param stormConf stormConf\n+     * @return getNumaMap\n+     */\n+    public static Map<String, Object> getNumaMap(Map<String, Object> stormConf) {\n+        Object numa = stormConf.get(Config.SUPERVISOR_NUMA_META);\n+        if (numa == null) {\n+            return Collections.emptyMap();\n+        }\n+        return (Map<String, Object>) numa;\n+    }\n+\n+    /**\n+     * getNumaIdForPort.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "571a758f6bd8016d47c7032c3519665c75109641"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg0NzQwMQ==", "bodyText": "https://issues.apache.org/jira/browse/STORM-3615", "url": "https://github.com/apache/storm/pull/3237#discussion_r401847401", "createdAt": "2020-04-01T19:11:32Z", "author": {"login": "govind-menon"}, "path": "storm-client/src/jvm/org/apache/storm/utils/Utils.java", "diffHunk": "@@ -124,11 +124,47 @@\n     private static String memoizedLocalHostnameString = null;\n     public static final Pattern TOPOLOGY_KEY_PATTERN = Pattern.compile(\"^[\\\\w \\\\t\\\\._-]+$\", Pattern.UNICODE_CHARACTER_CLASS);\n \n+    public static final String NUMA_MEMORY_IN_MB = \"numa.memory.mb\";\n+    public static final String NUMA_CORES = \"numa.cores\";\n+    public static final String NUMA_PORTS = \"numa.ports\";\n+    public static final String NUMA_GENERIC_RESOURCES_MAP = \"numa.generic.resources.map\";\n+\n     static {\n         localConf = readStormConfig();\n         serializationDelegate = getSerializationDelegate(localConf);\n     }\n \n+    /**\n+     * Return supervisor numa configuration.\n+     * @param stormConf stormConf\n+     * @return getNumaMap\n+     */\n+    public static Map<String, Object> getNumaMap(Map<String, Object> stormConf) {\n+        Object numa = stormConf.get(Config.SUPERVISOR_NUMA_META);\n+        if (numa == null) {\n+            return Collections.emptyMap();\n+        }\n+        return (Map<String, Object>) numa;\n+    }\n+\n+    /**\n+     * getNumaIdForPort.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY1MTg2OQ=="}, "originalCommit": {"oid": "571a758f6bd8016d47c7032c3519665c75109641"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Njk4MDg4OnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTo0NjoxMFrOF_9pPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTo0NjoxMFrOF_9pPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxNDU4OQ==", "bodyText": "L112 and L114 conflict.  And validatedNumaMap doesn't seem to be used anywhere", "url": "https://github.com/apache/storm/pull/3237#discussion_r402614589", "createdAt": "2020-04-02T21:46:10Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java", "diffHunk": "@@ -102,6 +109,9 @@ public void prepare(Map<String, Object> conf) throws IOException {\n             throw new RuntimeException(\"Cgroup error, please check /proc/cgroups\");\n         }\n         this.prepareSubSystem(this.conf);\n+        validatedNumaMap = Utils.getNumaMap(conf);\n+        workerToNumaId = new ConcurrentHashMap();\n+        validatedNumaMap = new ConcurrentHashMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dbf8a06b8d3fe1205794aa69f4091e0783cd07"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Njk4NDc0OnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/container/ResourceIsolationInterface.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTo0NzozMlrOF_9rmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToxMDozOVrOGAZvGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxNTE5Mw==", "bodyText": "missing @param numaId", "url": "https://github.com/apache/storm/pull/3237#discussion_r402615193", "createdAt": "2020-04-02T21:47:32Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/container/ResourceIsolationInterface.java", "diffHunk": "@@ -37,7 +37,7 @@\n      * @param workerMemory the amount of memory for the worker or null if not enforced\n      * @param workerCpu the amount of cpu for the worker or null if not enforced\n      */\n-    void reserveResourcesForWorker(String workerId, Integer workerMemory, Integer workerCpu);\n+    void reserveResourcesForWorker(String workerId, Integer workerMemory, Integer workerCpu, String numaId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dbf8a06b8d3fe1205794aa69f4091e0783cd07"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA3NDg0MQ==", "bodyText": "Added", "url": "https://github.com/apache/storm/pull/3237#discussion_r403074841", "createdAt": "2020-04-03T15:10:39Z", "author": {"login": "govind-menon"}, "path": "storm-server/src/main/java/org/apache/storm/container/ResourceIsolationInterface.java", "diffHunk": "@@ -37,7 +37,7 @@\n      * @param workerMemory the amount of memory for the worker or null if not enforced\n      * @param workerCpu the amount of cpu for the worker or null if not enforced\n      */\n-    void reserveResourcesForWorker(String workerId, Integer workerMemory, Integer workerCpu);\n+    void reserveResourcesForWorker(String workerId, Integer workerMemory, Integer workerCpu, String numaId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxNTE5Mw=="}, "originalCommit": {"oid": "01dbf8a06b8d3fe1205794aa69f4091e0783cd07"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzAwMjE5OnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTo1Mzo0MVrOF_92MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTo1Mzo0MVrOF_92MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxNzkwNA==", "bodyText": "numaId not used anywhere?", "url": "https://github.com/apache/storm/pull/3237#discussion_r402617904", "createdAt": "2020-04-02T21:53:41Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java", "diffHunk": "@@ -615,7 +616,7 @@ protected String javaCmd(String cmd) {\n      * @throws IOException on any error.\n      */\n     private List<String> mkLaunchCommand(final int memOnheap, final String stormRoot,\n-                                         final String jlp) throws IOException {\n+                                         final String jlp, final String numaId) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dbf8a06b8d3fe1205794aa69f4091e0783cd07"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjI0NzYwOnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/Container.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDoyNTo0M1rOGCGKHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDoyNTo0M1rOGCGKHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg1MTIyOA==", "bodyText": "This should be removed according to the change in BasicContainer. mkLaunchCommand", "url": "https://github.com/apache/storm/pull/3237#discussion_r404851228", "createdAt": "2020-04-07T14:25:43Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/Container.java", "diffHunk": "@@ -130,6 +131,10 @@ protected Container(ContainerType type, Map<String, Object> conf, String supervi\n         this.ops = ops;\n         this.conf = conf;\n         this.supervisorId = supervisorId;\n+        String numaId = SupervisorUtils.getNumaIdForPort(port, conf);\n+        if (numaId != null) {\n+            this.supervisorId +=  Constants.NUMA_ID_SEPARATOR + numaId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45951c16f42c82d6f59d63db368dc0994c6d4e0"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzE5NDYxOnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo1Nzo0OVrOGCPhaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo1Nzo0OVrOGCPhaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNDY0OQ==", "bodyText": "Is this used anywhere?", "url": "https://github.com/apache/storm/pull/3237#discussion_r405004649", "createdAt": "2020-04-07T17:57:49Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java", "diffHunk": "@@ -102,6 +109,8 @@ public void prepare(Map<String, Object> conf) throws IOException {\n             throw new RuntimeException(\"Cgroup error, please check /proc/cgroups\");\n         }\n         this.prepareSubSystem(this.conf);\n+        validatedNumaMap = Utils.getNumaMap(conf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10a2d1c03de04ea85e59184e0eff6d3a6a0ec6d7"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzczNTIzOnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/timer/SupervisorHeartbeat.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMDoyNzo0N1rOGCU0bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNDo1Mzo1NVrOGDcZww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA5MTQzNg==", "bodyText": "I think line should be pulled into buildSupervisorInfo(). It appears that the intent is to create as many supervisorInfo records as there are Config.SUPERVISOR_NUMA_META entries with any leftover creating another SupervisorInfo(). And private buildSupervisorInfo() method is never called with validatedNumaMap of null. Each of these supervisorInfos creating a heartbeat-er.", "url": "https://github.com/apache/storm/pull/3237#discussion_r405091436", "createdAt": "2020-04-07T20:27:47Z", "author": {"login": "bipinprasad"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/timer/SupervisorHeartbeat.java", "diffHunk": "@@ -87,12 +153,16 @@ private SupervisorInfo buildSupervisorInfo(Map<String, Object> conf, Supervisor\n             ret.put(stringNumberEntry.getKey(), stringNumberEntry.getValue().doubleValue());\n         }\n \n+        LOG.debug(NormalizedResources.RESOURCE_NAME_NORMALIZER.normalizedResourceMap(ret).toString());\n         return NormalizedResources.RESOURCE_NAME_NORMALIZER.normalizedResourceMap(ret);\n     }\n \n     @Override\n     public void run() {\n-        SupervisorInfo supervisorInfo = buildSupervisorInfo(conf, supervisor);\n-        stormClusterState.supervisorHeartbeat(supervisorId, supervisorInfo);\n+        Map<String, Object> validatedNumaMap = Utils.getNumaMap(conf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10a2d1c03de04ea85e59184e0eff6d3a6a0ec6d7"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI2NDI1OQ==", "bodyText": "The supervisor info does one thing - it creates an object with information about the actual supervisor. I think it's better to not add something like the NUMA heartbeating to its purview.", "url": "https://github.com/apache/storm/pull/3237#discussion_r406264259", "createdAt": "2020-04-09T14:53:55Z", "author": {"login": "govind-menon"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/timer/SupervisorHeartbeat.java", "diffHunk": "@@ -87,12 +153,16 @@ private SupervisorInfo buildSupervisorInfo(Map<String, Object> conf, Supervisor\n             ret.put(stringNumberEntry.getKey(), stringNumberEntry.getValue().doubleValue());\n         }\n \n+        LOG.debug(NormalizedResources.RESOURCE_NAME_NORMALIZER.normalizedResourceMap(ret).toString());\n         return NormalizedResources.RESOURCE_NAME_NORMALIZER.normalizedResourceMap(ret);\n     }\n \n     @Override\n     public void run() {\n-        SupervisorInfo supervisorInfo = buildSupervisorInfo(conf, supervisor);\n-        stormClusterState.supervisorHeartbeat(supervisorId, supervisorInfo);\n+        Map<String, Object> validatedNumaMap = Utils.getNumaMap(conf);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA5MTQzNg=="}, "originalCommit": {"oid": "10a2d1c03de04ea85e59184e0eff6d3a6a0ec6d7"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTU2Njg4OnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjoyMzo0NFrOGDgDRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNjoyMzo0NFrOGDgDRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMyNDAzOQ==", "bodyText": "can this be removed?", "url": "https://github.com/apache/storm/pull/3237#discussion_r406324039", "createdAt": "2020-04-09T16:23:44Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java", "diffHunk": "@@ -50,6 +55,8 @@\n     private CgroupCommon rootCgroup;\n     private String rootDir;\n     private Map<String, Object> conf;\n+    private Map<String, String> workerToNumaId;\n+    protected Map<String, Object> validatedNumaMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a56d727f46393493b7bd16b0bded31ef001fba3b"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTEwNTMwOnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/Container.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDo1NDozOVrOGE09qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDo1NDozOVrOGE09qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcxNTI0MQ==", "bodyText": "remove unused import", "url": "https://github.com/apache/storm/pull/3237#discussion_r407715241", "createdAt": "2020-04-13T20:54:39Z", "author": {"login": "kishorvpatil"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/Container.java", "diffHunk": "@@ -37,6 +37,7 @@\n import java.util.Set;\n import org.apache.commons.lang.StringUtils;\n import org.apache.storm.Config;\n+import org.apache.storm.Constants;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "130a077a9f7ffcb9fd8eabe1465172f374c2e4d2"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4261, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}