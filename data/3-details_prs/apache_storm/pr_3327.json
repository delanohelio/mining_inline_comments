{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MDc1NzI5", "number": 3327, "title": "[MINOR] Typo/Grammatical corrections", "bodyText": "What is the purpose of the change\n(Explain why we should have this change)\nHow was the change tested\n(Explain what tests did you do to verify the code change)", "createdAt": "2020-09-01T13:18:37Z", "url": "https://github.com/apache/storm/pull/3327", "merged": true, "mergeCommit": {"oid": "b1e2d669035875de74e51ee65febdc067c504828"}, "closed": true, "closedAt": "2020-09-02T14:16:48Z", "author": {"login": "PoojaChandak"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdElpEugH2gAyNDc3MDc1NzI5OmI3M2E1YzVkOGFkZmE2ZTIwODkzZTVjOGEyMzQ4N2VlZDNjOWU3OTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdE8tOXAFqTQ4MDg2NTk3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b73a5c5d8adfa6e20893e5c8a23487eed3c9e790", "author": {"user": {"login": "PoojaChandak", "name": null}}, "url": "https://github.com/apache/storm/commit/b73a5c5d8adfa6e20893e5c8a23487eed3c9e790", "committedDate": "2020-09-01T11:24:17Z", "message": "Update README.md\n\nTypo/Grammatical correction."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "043cfa1a3c97805ad9032c2a69b366ab75f6225c", "author": {"user": {"login": "PoojaChandak", "name": null}}, "url": "https://github.com/apache/storm/commit/043cfa1a3c97805ad9032c2a69b366ab75f6225c", "committedDate": "2020-09-01T13:08:19Z", "message": "Update Tutorial.md\n\nTypo/Grammatical corrections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18b9dcdfeb46f86c4ab404819d26ba80c1c12ece", "author": {"user": {"login": "PoojaChandak", "name": null}}, "url": "https://github.com/apache/storm/commit/18b9dcdfeb46f86c4ab404819d26ba80c1c12ece", "committedDate": "2020-09-01T13:11:07Z", "message": "Update Configuration.md\n\nTypo/Grammatical corrections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "620a7eea2986b1df2798baa92a7f1e3d5cb23726", "author": {"user": {"login": "PoojaChandak", "name": null}}, "url": "https://github.com/apache/storm/commit/620a7eea2986b1df2798baa92a7f1e3d5cb23726", "committedDate": "2020-09-01T13:15:01Z", "message": "Update Logs.md\n\nTypo/Grammatical correction"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5ODA3NTc0", "url": "https://github.com/apache/storm/pull/3327#pullrequestreview-479807574", "createdAt": "2020-09-01T14:38:02Z", "commit": {"oid": "620a7eea2986b1df2798baa92a7f1e3d5cb23726"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNDozODowMlrOHK5WTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNDo0MjowMlrOHK5iGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE4NzQwNQ==", "bodyText": "\"where a Storm cluster is simulated in the process\" should be \"where a Storm cluster is simulated in a process\".\nLocal mode means a storm cluster runs in a same JVM process.", "url": "https://github.com/apache/storm/pull/3327#discussion_r481187405", "createdAt": "2020-09-01T14:38:02Z", "author": {"login": "Ethanlm"}, "path": "docs/Tutorial.md", "diffHunk": "@@ -166,13 +166,13 @@ public static class ExclamationBolt implements IRichBolt {\n }\n ```\n \n-The `prepare` method provides the bolt with an `OutputCollector` that is used for emitting tuples from this bolt. Tuples can be emitted at anytime from the bolt -- in the `prepare`, `execute`, or `cleanup` methods, or even asynchronously in another thread. This `prepare` implementation simply saves the `OutputCollector` as an instance variable to be used later on in the `execute` method.\n+The `prepare` method provides the bolt with an `OutputCollector` that is used for emitting tuples from this bolt. Tuples can be emitted at any time from the bolt -- in the `prepare`, `execute`, or `cleanup` methods, or even asynchronously in another thread. This `prepare` implementation simply saves the `OutputCollector` as an instance variable to be used later on in the `execute` method.\n \n The `execute` method receives a tuple from one of the bolt's inputs. The `ExclamationBolt` grabs the first field from the tuple and emits a new tuple with the string \"!!!\" appended to it. If you implement a bolt that subscribes to multiple input sources, you can find out which component the [Tuple](/javadoc/apidocs/org/apache/storm/tuple/Tuple.html) came from by using the `Tuple#getSourceComponent` method.\n \n-There's a few other things going on in the `execute` method, namely that the input tuple is passed as the first argument to `emit` and the input tuple is acked on the final line. These are part of Storm's reliability API for guaranteeing no data loss and will be explained later in this tutorial. \n+There are a few other things going on in the `execute` method, namely that the input tuple is passed as the first argument to `emit` and the input tuple is acked on the final line. These are part of Storm's reliability API for guaranteeing no data loss and will be explained later in this tutorial. \n \n-The `cleanup` method is called when a Bolt is being shutdown and should cleanup any resources that were opened. There's no guarantee that this method will be called on the cluster: for example, if the machine the task is running on blows up, there's no way to invoke the method. The `cleanup` method is intended for when you run topologies in [local mode](Local-mode.html) (where a Storm cluster is simulated in process), and you want to be able to run and kill many topologies without suffering any resource leaks.\n+The `cleanup` method is called when a Bolt is being shutdown and should cleanup any resources that were opened. There's no guarantee that this method will be called on the cluster: for example, if the machine the task is running on blows up, there's no way to invoke the method. The `cleanup` method is intended for when you run topologies in [local mode](Local-mode.html) (where a Storm cluster is simulated in the process), and you want to be able to run and kill many topologies without suffering any resource leaks.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "620a7eea2986b1df2798baa92a7f1e3d5cb23726"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE4NzYyMg==", "bodyText": "the -> a", "url": "https://github.com/apache/storm/pull/3327#discussion_r481187622", "createdAt": "2020-09-01T14:38:21Z", "author": {"login": "Ethanlm"}, "path": "docs/Tutorial.md", "diffHunk": "@@ -206,13 +206,13 @@ public static class ExclamationBolt extends BaseRichBolt {\n \n Let's see how to run the `ExclamationTopology` in local mode and see that it's working.\n \n-Storm has two modes of operation: local mode and distributed mode. In local mode, Storm executes completely in process by simulating worker nodes with threads. Local mode is useful for testing and development of topologies. You can read more about running topologies in local mode on [Local mode](Local-mode.html).\n+Storm has two modes of operation: local mode and distributed mode. In local mode, Storm executes completely in the process by simulating worker nodes with threads. Local mode is useful for testing and development of topologies. You can read more about running topologies in local mode on [Local mode](Local-mode.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "620a7eea2986b1df2798baa92a7f1e3d5cb23726"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE4OTg2Mg==", "bodyText": "should we keep \"a\"?", "url": "https://github.com/apache/storm/pull/3327#discussion_r481189862", "createdAt": "2020-09-01T14:41:18Z", "author": {"login": "Ethanlm"}, "path": "docs/Tutorial.md", "diffHunk": "@@ -59,7 +59,7 @@ A topology runs forever, or until you kill it. Storm will automatically reassign\n \n Storm uses tuples as its data model. A tuple is a named list of values, and a field in a tuple can be an object of any type. Out of the box, Storm supports all the primitive types, strings, and byte arrays as tuple field values. To use an object of another type, you just need to implement [a serializer](Serialization.html) for the type.\n \n-Every node in a topology must declare the output fields for the tuples it emits. For example, this bolt declares that it emits 2-tuples with the fields \"double\" and \"triple\":\n+Every node in topology must declare the output fields for the tuples it emits. For example, this bolt declares that it emits 2-tuples with the fields \"double\" and \"triple\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "620a7eea2986b1df2798baa92a7f1e3d5cb23726"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE5MDQyNQ==", "bodyText": "should we keep \"a\"?", "url": "https://github.com/apache/storm/pull/3327#discussion_r481190425", "createdAt": "2020-09-01T14:42:02Z", "author": {"login": "Ethanlm"}, "path": "docs/Tutorial.md", "diffHunk": "@@ -206,13 +206,13 @@ public static class ExclamationBolt extends BaseRichBolt {\n \n Let's see how to run the `ExclamationTopology` in local mode and see that it's working.\n \n-Storm has two modes of operation: local mode and distributed mode. In local mode, Storm executes completely in process by simulating worker nodes with threads. Local mode is useful for testing and development of topologies. You can read more about running topologies in local mode on [Local mode](Local-mode.html).\n+Storm has two modes of operation: local mode and distributed mode. In local mode, Storm executes completely in the process by simulating worker nodes with threads. Local mode is useful for testing and development of topologies. You can read more about running topologies in local mode on [Local mode](Local-mode.html).\n \n To run a topology in local mode run the command `storm local` instead of `storm jar`.\n \n ## Stream groupings\n \n-A stream grouping tells a topology how to send tuples between two components. Remember, spouts and bolts execute in parallel as many tasks across the cluster. If you look at how a topology is executing at the task level, it looks something like this:\n+A stream grouping tells a topology how to send tuples between two components. Remember, spouts and bolts execute in parallel as many tasks across the cluster. If you look at how topology is executing at the task level, it looks something like this:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "620a7eea2986b1df2798baa92a7f1e3d5cb23726"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19da3ce52f092fbdad9a74f2c0b26515c94b2e80", "author": {"user": {"login": "PoojaChandak", "name": null}}, "url": "https://github.com/apache/storm/commit/19da3ce52f092fbdad9a74f2c0b26515c94b2e80", "committedDate": "2020-09-02T11:56:35Z", "message": "Update Tutorial.md\n\nReview Comments Updated"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODY1OTcw", "url": "https://github.com/apache/storm/pull/3327#pullrequestreview-480865970", "createdAt": "2020-09-02T14:16:38Z", "commit": {"oid": "19da3ce52f092fbdad9a74f2c0b26515c94b2e80"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4915, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}