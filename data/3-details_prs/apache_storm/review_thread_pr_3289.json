{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3OTg3Nzc3", "number": 3289, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzozMjoxNFrOEI23lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzozOToyNFrOEI3BCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzIzMDMwOnYy", "diffSide": "RIGHT", "path": "examples/storm-perf/src/main/java/org/apache/storm/perf/queuetest/JCQueuePerfTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzozMjoxNFrOGpEztQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzozMjoxNFrOGpEztQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcyMzU3Mw==", "bodyText": "why is this null (Although I guess it doesn't matter)", "url": "https://github.com/apache/storm/pull/3289#discussion_r445723573", "createdAt": "2020-06-25T17:32:14Z", "author": {"login": "Ethanlm"}, "path": "examples/storm-perf/src/main/java/org/apache/storm/perf/queuetest/JCQueuePerfTest.java", "diffHunk": "@@ -72,7 +72,7 @@ private static void producerFwdConsumer(int prodBatchSz) {\n \n \n     private static void oneProducer1Consumer(int prodBatchSz) {\n-        JCQueue q1 = new JCQueue(\"q1\", 50_000, 0, prodBatchSz, new WaitStrategyPark(100), \"test\", \"test\",\n+        JCQueue q1 = new JCQueue(\"q1\", null, 50_000, 0, prodBatchSz, new WaitStrategyPark(100), \"test\", \"test\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dc2747867b7189db2b5f779acb82dd5c71ec495"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzI1MTM4OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/utils/JCQueue.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzozODoyN1rOGpFBMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzozODoyN1rOGpFBMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcyNzAyNA==", "bodyText": "Since JCQueueMetrics takes metricNamePrefix now, I think it is better to change  the variable name in JCQueueMetrics from queueName to metricNamePrefix to avoid confusion.\nhttps://github.com/apache/storm/blob/master/storm-client/src/jvm/org/apache/storm/utils/JCQueueMetrics.java#L35", "url": "https://github.com/apache/storm/pull/3289#discussion_r445727024", "createdAt": "2020-06-25T17:38:27Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/utils/JCQueue.java", "diffHunk": "@@ -44,15 +44,16 @@\n     private final IWaitStrategy backPressureWaitStrategy;\n     private final String queueName;\n \n-    public JCQueue(String queueName, int size, int overflowLimit, int producerBatchSz, IWaitStrategy backPressureWaitStrategy,\n-                   String topologyId, String componentId, List<Integer> taskIds, int port, StormMetricRegistry metricRegistry) {\n+    public JCQueue(String queueName, String metricNamePrefix, int size, int overflowLimit, int producerBatchSz,\n+                   IWaitStrategy backPressureWaitStrategy, String topologyId, String componentId, List<Integer> taskIds,\n+                   int port, StormMetricRegistry metricRegistry) {\n         this.queueName = queueName;\n         this.overflowLimit = overflowLimit;\n         this.recvQueue = new MpscArrayQueue<>(size);\n         this.overflowQ = new MpscUnboundedArrayQueue<>(size);\n \n         for (Integer taskId : taskIds) {\n-            this.jcqMetrics.add(new JCQueueMetrics(queueName, topologyId, componentId, taskId, port,\n+            this.jcqMetrics.add(new JCQueueMetrics(metricNamePrefix, topologyId, componentId, taskId, port,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dc2747867b7189db2b5f779acb82dd5c71ec495"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzI1Mzc4OnYy", "diffSide": "RIGHT", "path": "storm-client/test/jvm/org/apache/storm/utils/JCQueueBackpressureTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzozOToxNFrOGpFCzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzozOToxNFrOGpFCzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcyNzQzNw==", "bodyText": "is it better to use name instead of null?", "url": "https://github.com/apache/storm/pull/3289#discussion_r445727437", "createdAt": "2020-06-25T17:39:14Z", "author": {"login": "Ethanlm"}, "path": "storm-client/test/jvm/org/apache/storm/utils/JCQueueBackpressureTest.java", "diffHunk": "@@ -22,7 +22,7 @@\n public class JCQueueBackpressureTest {\n     \n     private static JCQueue createQueue(String name, int queueSize) {\n-        return new JCQueue(name, queueSize, 0, 1, new WaitStrategyPark(0), \"test\", \"test\", Collections.singletonList(1000), 1000, new StormMetricRegistry());\n+        return new JCQueue(name, null, queueSize, 0, 1, new WaitStrategyPark(0), \"test\", \"test\", Collections.singletonList(1000), 1000, new StormMetricRegistry());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dc2747867b7189db2b5f779acb82dd5c71ec495"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzI1NDUwOnYy", "diffSide": "RIGHT", "path": "storm-client/test/jvm/org/apache/storm/utils/JCQueueTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzozOToyNFrOGpFDNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzozOToyNFrOGpFDNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcyNzU0MQ==", "bodyText": "is it better to use name instead of null?", "url": "https://github.com/apache/storm/pull/3289#discussion_r445727541", "createdAt": "2020-06-25T17:39:24Z", "author": {"login": "Ethanlm"}, "path": "storm-client/test/jvm/org/apache/storm/utils/JCQueueTest.java", "diffHunk": "@@ -157,7 +157,7 @@ private JCQueue createQueue(String name, int queueSize) {\n     }\n \n     private JCQueue createQueue(String name, int batchSize, int queueSize) {\n-        return new JCQueue(name, queueSize, 0, batchSize, waitStrategy, \"test\", \"test\", Collections.singletonList(1000), 1000, new StormMetricRegistry());\n+        return new JCQueue(name, null, queueSize, 0, batchSize, waitStrategy, \"test\", \"test\", Collections.singletonList(1000), 1000, new StormMetricRegistry());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dc2747867b7189db2b5f779acb82dd5c71ec495"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4315, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}