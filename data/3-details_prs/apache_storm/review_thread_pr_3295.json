{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNjEzMzQx", "number": 3295, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNDo1ODoxMVrOEJKdqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo1MjowOFrOEM_z3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDQ0MDczOnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNDo1ODoxMVrOGpkHCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMDo0NjowMVrOGpuNqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIzNjQyNQ==", "bodyText": "I think maybe we should first set  this.needToRefreshCreds to false and then update the creds.  Imagine we uploaded credentials twice in a row and this loaded the first creds and the thread paused.  It would then clear the update flag and miss the second credentials upload.", "url": "https://github.com/apache/storm/pull/3295#discussion_r446236425", "createdAt": "2020-06-26T14:58:11Z", "author": {"login": "agresch"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -270,6 +273,15 @@ public ExecutorShutdown execute() throws Exception {\n \n     @Override\n     public void accept(Object event) {\n+        if (this.needToRefreshCreds) {\n+            LOG.info(\"The credentials are being updated {}.\", executorId);\n+            Credentials creds = this.workerData.getCredentials();\n+            idToTask.stream().map(Task::getTaskObject).filter(taskObject -> taskObject instanceof ICredentialsListener)\n+                    .forEach(taskObject -> {\n+                        ((ICredentialsListener) taskObject).setCredentials(creds == null ? null : creds.get_creds());\n+                    });\n+            this.needToRefreshCreds = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4fd31087a4ffcc6d01ec7895c92ff1693c9973"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQwMTk2Mw==", "bodyText": "Addressed.", "url": "https://github.com/apache/storm/pull/3295#discussion_r446401963", "createdAt": "2020-06-26T20:46:01Z", "author": {"login": "kishorvpatil"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -270,6 +273,15 @@ public ExecutorShutdown execute() throws Exception {\n \n     @Override\n     public void accept(Object event) {\n+        if (this.needToRefreshCreds) {\n+            LOG.info(\"The credentials are being updated {}.\", executorId);\n+            Credentials creds = this.workerData.getCredentials();\n+            idToTask.stream().map(Task::getTaskObject).filter(taskObject -> taskObject instanceof ICredentialsListener)\n+                    .forEach(taskObject -> {\n+                        ((ICredentialsListener) taskObject).setCredentials(creds == null ? null : creds.get_creds());\n+                    });\n+            this.needToRefreshCreds = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIzNjQyNQ=="}, "originalCommit": {"oid": "5c4fd31087a4ffcc6d01ec7895c92ff1693c9973"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDU1MzkyOnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/executor/ExecutorShutdown.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNTozMDo0NFrOGplPtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxOTo1MDo0N1rOGps2sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1NTAzMQ==", "bodyText": "Minor: Does this method name and signature needs to change since it is setting a flag and not using the supplied parameter?", "url": "https://github.com/apache/storm/pull/3295#discussion_r446255031", "createdAt": "2020-06-26T15:30:44Z", "author": {"login": "bipinprasad"}, "path": "storm-client/src/jvm/org/apache/storm/executor/ExecutorShutdown.java", "diffHunk": "@@ -60,16 +60,7 @@ public ExecutorStats renderStats() {\n \n     @Override\n     public void credentialsChanged(Credentials credentials) {\n-        TupleImpl tuple = new TupleImpl(executor.getWorkerTopologyContext(), new Values(credentials),\n-                                        Constants.SYSTEM_COMPONENT_ID, (int) Constants.SYSTEM_TASK_ID,\n-                                        Constants.CREDENTIALS_CHANGED_STREAM_ID);\n-        AddressedTuple addressedTuple = new AddressedTuple(AddressedTuple.BROADCAST_DEST, tuple);\n-        try {\n-            executor.getReceiveQueue().publish(addressedTuple);\n-            executor.getReceiveQueue().flush();\n-        } catch (InterruptedException e) {\n-            throw new RuntimeException(e);\n-        }\n+        executor.needToRefreshCreds = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4fd31087a4ffcc6d01ec7895c92ff1693c9973"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM3OTY2NA==", "bodyText": "Since the SpoutExecutor and BoltExecutor during init uses the initialCredentials,  the accept method does not need to worry about it.", "url": "https://github.com/apache/storm/pull/3295#discussion_r446379664", "createdAt": "2020-06-26T19:50:42Z", "author": {"login": "kishorvpatil"}, "path": "storm-client/src/jvm/org/apache/storm/executor/ExecutorShutdown.java", "diffHunk": "@@ -60,16 +60,7 @@ public ExecutorStats renderStats() {\n \n     @Override\n     public void credentialsChanged(Credentials credentials) {\n-        TupleImpl tuple = new TupleImpl(executor.getWorkerTopologyContext(), new Values(credentials),\n-                                        Constants.SYSTEM_COMPONENT_ID, (int) Constants.SYSTEM_TASK_ID,\n-                                        Constants.CREDENTIALS_CHANGED_STREAM_ID);\n-        AddressedTuple addressedTuple = new AddressedTuple(AddressedTuple.BROADCAST_DEST, tuple);\n-        try {\n-            executor.getReceiveQueue().publish(addressedTuple);\n-            executor.getReceiveQueue().flush();\n-        } catch (InterruptedException e) {\n-            throw new RuntimeException(e);\n-        }\n+        executor.needToRefreshCreds = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1NTAzMQ=="}, "originalCommit": {"oid": "5c4fd31087a4ffcc6d01ec7895c92ff1693c9973"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM3OTY5OA==", "bodyText": "e.g. https://github.com/apache/storm/blob/master/storm-client/src/jvm/org/apache/storm/executor/spout/SpoutExecutor.java#L144-L146", "url": "https://github.com/apache/storm/pull/3295#discussion_r446379698", "createdAt": "2020-06-26T19:50:47Z", "author": {"login": "kishorvpatil"}, "path": "storm-client/src/jvm/org/apache/storm/executor/ExecutorShutdown.java", "diffHunk": "@@ -60,16 +60,7 @@ public ExecutorStats renderStats() {\n \n     @Override\n     public void credentialsChanged(Credentials credentials) {\n-        TupleImpl tuple = new TupleImpl(executor.getWorkerTopologyContext(), new Values(credentials),\n-                                        Constants.SYSTEM_COMPONENT_ID, (int) Constants.SYSTEM_TASK_ID,\n-                                        Constants.CREDENTIALS_CHANGED_STREAM_ID);\n-        AddressedTuple addressedTuple = new AddressedTuple(AddressedTuple.BROADCAST_DEST, tuple);\n-        try {\n-            executor.getReceiveQueue().publish(addressedTuple);\n-            executor.getReceiveQueue().flush();\n-        } catch (InterruptedException e) {\n-            throw new RuntimeException(e);\n-        }\n+        executor.needToRefreshCreds = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1NTAzMQ=="}, "originalCommit": {"oid": "5c4fd31087a4ffcc6d01ec7895c92ff1693c9973"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDQ5MTI3OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDoyMzoyOFrOGq-4DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzo1NzoxNFrOGrnCRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcyMzUzMw==", "bodyText": "This can be private", "url": "https://github.com/apache/storm/pull/3295#discussion_r447723533", "createdAt": "2020-06-30T14:23:28Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -124,6 +126,7 @@\n     protected int idToTaskBase;\n     protected String hostname;\n     private static final double msDurationFactor = 1.0 / TimeUnit.MILLISECONDS.toNanos(1);\n+    protected boolean needToRefreshCreds = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c56e2e4d26a1d41dcccb097b8642ad705d14ba"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM4MTUxMQ==", "bodyText": "Addressed", "url": "https://github.com/apache/storm/pull/3295#discussion_r448381511", "createdAt": "2020-07-01T13:57:14Z", "author": {"login": "kishorvpatil"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -124,6 +126,7 @@\n     protected int idToTaskBase;\n     protected String hostname;\n     private static final double msDurationFactor = 1.0 / TimeUnit.MILLISECONDS.toNanos(1);\n+    protected boolean needToRefreshCreds = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcyMzUzMw=="}, "originalCommit": {"oid": "f8c56e2e4d26a1d41dcccb097b8642ad705d14ba"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDU2NDc0OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDozODoyMFrOGq_l3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzo1NzoyNFrOGrnCtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNTI2Mw==", "bodyText": "This can be private", "url": "https://github.com/apache/storm/pull/3295#discussion_r447735263", "createdAt": "2020-06-30T14:38:20Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -152,6 +153,7 @@\n     private final AtomicLong nextLoadUpdate = new AtomicLong(0);\n     private final boolean trySerializeLocal;\n     private final Collection<IAutoCredentials> autoCredentials;\n+    AtomicReference<Credentials> credentialsAtom;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c56e2e4d26a1d41dcccb097b8642ad705d14ba"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM4MTYyMA==", "bodyText": "Addressed", "url": "https://github.com/apache/storm/pull/3295#discussion_r448381620", "createdAt": "2020-07-01T13:57:24Z", "author": {"login": "kishorvpatil"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/WorkerState.java", "diffHunk": "@@ -152,6 +153,7 @@\n     private final AtomicLong nextLoadUpdate = new AtomicLong(0);\n     private final boolean trySerializeLocal;\n     private final Collection<IAutoCredentials> autoCredentials;\n+    AtomicReference<Credentials> credentialsAtom;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNTI2Mw=="}, "originalCommit": {"oid": "f8c56e2e4d26a1d41dcccb097b8642ad705d14ba"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDU4OTgzOnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MzowNFrOGq_0zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo0MzowNFrOGq_0zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczOTA4Ng==", "bodyText": "This can be debug.", "url": "https://github.com/apache/storm/pull/3295#discussion_r447739086", "createdAt": "2020-06-30T14:43:04Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -270,6 +273,15 @@ public ExecutorShutdown execute() throws Exception {\n \n     @Override\n     public void accept(Object event) {\n+        if (this.needToRefreshCreds) {\n+            this.needToRefreshCreds = false;\n+            LOG.info(\"The credentials are being updated {}.\", executorId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c56e2e4d26a1d41dcccb097b8642ad705d14ba"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDk0MjI2OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/Worker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTo1NjozNlrOGrDPpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMzo1Nzo1NlrOGrnD_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5NTEwOQ==", "bodyText": "I am seeing possible race condition here.\nBecause  executor.credentialsChanged happens before this.workerState.credentialsAtom.set(newCreds) is invoked, executor could trigger credential update before the newCreds is not updated yet.", "url": "https://github.com/apache/storm/pull/3295#discussion_r447795109", "createdAt": "2020-06-30T15:56:36Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/Worker.java", "diffHunk": "@@ -415,13 +414,13 @@ public void updateBlobUpdates() throws IOException {\n \n     public void checkCredentialsChanged() {\n         Credentials newCreds = workerState.stormClusterState.credentials(topologyId, null);\n-        if (!ObjectUtils.equals(newCreds, credentialsAtom.get())) {\n+        if (!ObjectUtils.equals(newCreds, this.workerState.credentialsAtom.get())) {\n             // This does not have to be atomic, worst case we update when one is not needed\n             ClientAuthUtils.updateSubject(subject, autoCreds, (null == newCreds) ? null : newCreds.get_creds());\n             for (IRunningExecutor executor : executorsAtom.get()) {\n                 executor.credentialsChanged(newCreds);\n             }\n-            credentialsAtom.set(newCreds);\n+            this.workerState.credentialsAtom.set(newCreds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c56e2e4d26a1d41dcccb097b8642ad705d14ba"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM4MTk0OA==", "bodyText": "Moved this up before for loop.", "url": "https://github.com/apache/storm/pull/3295#discussion_r448381948", "createdAt": "2020-07-01T13:57:56Z", "author": {"login": "kishorvpatil"}, "path": "storm-client/src/jvm/org/apache/storm/daemon/worker/Worker.java", "diffHunk": "@@ -415,13 +414,13 @@ public void updateBlobUpdates() throws IOException {\n \n     public void checkCredentialsChanged() {\n         Credentials newCreds = workerState.stormClusterState.credentials(topologyId, null);\n-        if (!ObjectUtils.equals(newCreds, credentialsAtom.get())) {\n+        if (!ObjectUtils.equals(newCreds, this.workerState.credentialsAtom.get())) {\n             // This does not have to be atomic, worst case we update when one is not needed\n             ClientAuthUtils.updateSubject(subject, autoCreds, (null == newCreds) ? null : newCreds.get_creds());\n             for (IRunningExecutor executor : executorsAtom.get()) {\n                 executor.credentialsChanged(newCreds);\n             }\n-            credentialsAtom.set(newCreds);\n+            this.workerState.credentialsAtom.set(newCreds);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5NTEwOQ=="}, "originalCommit": {"oid": "f8c56e2e4d26a1d41dcccb097b8642ad705d14ba"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDk2NjY2OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjowMjoxMVrOGrDe2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDowMDo0N1rOGrnMLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5OTAwMg==", "bodyText": "There seems to be a race condition here.\nThe executor thread consumes from receiveQ and every time it consumes one tuple, the accept method is invoked and needToRefreshCreds is checked.\nThis needToRefreshCreds variable is accessed by others threads (which invoke credentialsChanged) and the value will be updated to true.\nSo first of all, needToRefreshCreds needs to be at least violate. But violate doesn't seem enough because needToRefreshCreds is set to false in this executor thread, and set to true in other threads.\nBetween checking if needToRefreshCreds is true and setting it to be false in the executor thread, needToRefreshCreds could be modified to true in other threads but this information is lost.", "url": "https://github.com/apache/storm/pull/3295#discussion_r447799002", "createdAt": "2020-06-30T16:02:11Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -270,6 +273,15 @@ public ExecutorShutdown execute() throws Exception {\n \n     @Override\n     public void accept(Object event) {\n+        if (this.needToRefreshCreds) {\n+            this.needToRefreshCreds = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c56e2e4d26a1d41dcccb097b8642ad705d14ba"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM4NDA0NA==", "bodyText": "The needToRefreshCreds could be updated to true anytime after if condition is evaluated by the worker credentials refresh thread. If there are consecutive updates, it will either execute the setCredentials twice or will execute only once with latest credentials - no harm/no deadlock.", "url": "https://github.com/apache/storm/pull/3295#discussion_r448384044", "createdAt": "2020-07-01T14:00:47Z", "author": {"login": "kishorvpatil"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -270,6 +273,15 @@ public ExecutorShutdown execute() throws Exception {\n \n     @Override\n     public void accept(Object event) {\n+        if (this.needToRefreshCreds) {\n+            this.needToRefreshCreds = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc5OTAwMg=="}, "originalCommit": {"oid": "f8c56e2e4d26a1d41dcccb097b8642ad705d14ba"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDk3NjAzOnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjowNDoyOFrOGrDkyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDowNToyOFrOGrnYBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgwMDUyMw==", "bodyText": "An issue about checking the value here is it might be blocked.\nThis accept is only called when receiveQueue.consume is called. But it could be blocked so credential update will be delayed.", "url": "https://github.com/apache/storm/pull/3295#discussion_r447800523", "createdAt": "2020-06-30T16:04:28Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -270,6 +273,15 @@ public ExecutorShutdown execute() throws Exception {\n \n     @Override\n     public void accept(Object event) {\n+        if (this.needToRefreshCreds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c56e2e4d26a1d41dcccb097b8642ad705d14ba"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM4NzA3Ng==", "bodyText": "moved this to separate method and being called fro withing BoltExecutor and SpoutExecutor call at the beginning of each iteration in the asyncloop. This would ensure that credentials are updated on executor irrespective of back pressure or no tuples to process scenarios. For backward compatibility and agreement about invoking setCreentials on user implementation on ICredentialsListener from executor thread, if Executor thread is stuck in execute or nextTuple  methods delays can not be avoided. But otherwise we should be able to get credentials update on next iteration.", "url": "https://github.com/apache/storm/pull/3295#discussion_r448387076", "createdAt": "2020-07-01T14:05:28Z", "author": {"login": "kishorvpatil"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -270,6 +273,15 @@ public ExecutorShutdown execute() throws Exception {\n \n     @Override\n     public void accept(Object event) {\n+        if (this.needToRefreshCreds) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgwMDUyMw=="}, "originalCommit": {"oid": "f8c56e2e4d26a1d41dcccb097b8642ad705d14ba"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTAwODI3OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNToxNDoxM1rOGrqQXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDowMTowNVrOGtYiyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQzNDI2OQ==", "bodyText": "Maybe we should change it to be DEBUG since this is on a critical path (even though this method might not be called very frequently)", "url": "https://github.com/apache/storm/pull/3295#discussion_r448434269", "createdAt": "2020-07-01T15:14:13Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -291,6 +294,22 @@ public void accept(Object event) {\n         }\n     }\n \n+    public void setNeedToRefreshCreds() {\n+        this.needToRefreshCreds = true;\n+    }\n+\n+    protected void updateExecCredsIfRequired() {\n+        if (this.needToRefreshCreds) {\n+            this.needToRefreshCreds = false;\n+            LOG.info(\"The credentials are being updated {}.\", executorId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "899312945724858bd5dfde4ca13b27a5290cec5b"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI0MTIyNQ==", "bodyText": "I think info should be fine.", "url": "https://github.com/apache/storm/pull/3295#discussion_r450241225", "createdAt": "2020-07-06T14:01:05Z", "author": {"login": "agresch"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -291,6 +294,22 @@ public void accept(Object event) {\n         }\n     }\n \n+    public void setNeedToRefreshCreds() {\n+        this.needToRefreshCreds = true;\n+    }\n+\n+    protected void updateExecCredsIfRequired() {\n+        if (this.needToRefreshCreds) {\n+            this.needToRefreshCreds = false;\n+            LOG.info(\"The credentials are being updated {}.\", executorId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQzNDI2OQ=="}, "originalCommit": {"oid": "899312945724858bd5dfde4ca13b27a5290cec5b"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTAxMTc2OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNToxNDo1NlrOGrqSbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo0OTo1N1rOGvbp3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQzNDc5Nw==", "bodyText": "This needs to be volatile  to make sure the changes from other threads can be seen immediately", "url": "https://github.com/apache/storm/pull/3295#discussion_r448434797", "createdAt": "2020-07-01T15:14:56Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -124,6 +126,7 @@\n     protected int idToTaskBase;\n     protected String hostname;\n     private static final double msDurationFactor = 1.0 / TimeUnit.MILLISECONDS.toNanos(1);\n+    private boolean needToRefreshCreds = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "899312945724858bd5dfde4ca13b27a5290cec5b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMwNjU3Mw==", "bodyText": "Since multiple threads are changing this flag- switching to AtomicBoolean.", "url": "https://github.com/apache/storm/pull/3295#discussion_r452306573", "createdAt": "2020-07-09T15:32:45Z", "author": {"login": "kishorvpatil"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -124,6 +126,7 @@\n     protected int idToTaskBase;\n     protected String hostname;\n     private static final double msDurationFactor = 1.0 / TimeUnit.MILLISECONDS.toNanos(1);\n+    private boolean needToRefreshCreds = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQzNDc5Nw=="}, "originalCommit": {"oid": "899312945724858bd5dfde4ca13b27a5290cec5b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM4OTM0Mg==", "bodyText": "If only simple get() and set() methods are used in AtomicBoolean, it is basically the same as using volatile boolean unless methods like compareAndSet and getAndSet are required.\nhttps://github.com/AdoptOpenJDK/openjdk-jdk8u/blob/master/jdk/src/share/classes/java/util/concurrent/atomic/AtomicBoolean.java#L85-L87 (although the implementation uses volatile int)\nBut anyway, using AtomicBoolean is easier to understand.", "url": "https://github.com/apache/storm/pull/3295#discussion_r452389342", "createdAt": "2020-07-09T17:49:57Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -124,6 +126,7 @@\n     protected int idToTaskBase;\n     protected String hostname;\n     private static final double msDurationFactor = 1.0 / TimeUnit.MILLISECONDS.toNanos(1);\n+    private boolean needToRefreshCreds = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQzNDc5Nw=="}, "originalCommit": {"oid": "899312945724858bd5dfde4ca13b27a5290cec5b"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDYzODM2OnYy", "diffSide": "RIGHT", "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzo1MjowOFrOGvbugQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMToxMDozOFrOGwFvWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MDUyOQ==", "bodyText": "The initial value should be false to avoid unnecessary update at the beginning.", "url": "https://github.com/apache/storm/pull/3295#discussion_r452390529", "createdAt": "2020-07-09T17:52:08Z", "author": {"login": "Ethanlm"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -124,6 +126,7 @@\n     protected int idToTaskBase;\n     protected String hostname;\n     private static final double msDurationFactor = 1.0 / TimeUnit.MILLISECONDS.toNanos(1);\n+    private AtomicBoolean needToRefreshCreds = new AtomicBoolean(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a817ff8e6c692154426355f58c82fd38e26801c1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3ODg3Mg==", "bodyText": "Fixed", "url": "https://github.com/apache/storm/pull/3295#discussion_r453078872", "createdAt": "2020-07-10T21:10:38Z", "author": {"login": "kishorvpatil"}, "path": "storm-client/src/jvm/org/apache/storm/executor/Executor.java", "diffHunk": "@@ -124,6 +126,7 @@\n     protected int idToTaskBase;\n     protected String hostname;\n     private static final double msDurationFactor = 1.0 / TimeUnit.MILLISECONDS.toNanos(1);\n+    private AtomicBoolean needToRefreshCreds = new AtomicBoolean(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MDUyOQ=="}, "originalCommit": {"oid": "a817ff8e6c692154426355f58c82fd38e26801c1"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4327, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}