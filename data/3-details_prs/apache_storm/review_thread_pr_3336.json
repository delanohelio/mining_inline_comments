{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MDgzNTA4", "number": 3336, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjowMDowNlrOEkH5OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDoyNToxOVrOEk_i8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzEzNTI4OnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjowMDowNlrOHS30pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMDowMjoxNFrOHUaQHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1MTAxMw==", "bodyText": "It seems like it may be possible to still have a race condition here where a topology is added to topologyBlobs?\nIf so it seems like we should add synchronization to this code and the adding of a blob?", "url": "https://github.com/apache/storm/pull/3336#discussion_r489551013", "createdAt": "2020-09-16T16:00:06Z", "author": {"login": "agresch"}, "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -641,7 +642,12 @@ void cleanup() {\n \n             try {\n                 forEachTopologyDistDir((p, topologyId) -> {\n-                    if (!safeTopologyIds.contains(topologyId)) {\n+                    String topoJarKey = ConfigUtils.masterStormJarKey(topologyId);\n+                    String topoCodeKey = ConfigUtils.masterStormCodeKey(topologyId);\n+                    String topoConfKey = ConfigUtils.masterStormConfKey(topologyId);\n+                    if (!topologyBlobs.containsKey(topoJarKey)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d50c4f93505cc72bc5963a4a7f99dbafc1ce1f6e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc1NjA0Mg==", "bodyText": "My understanding is topo dir is always created after the entries of topologyBlobs are added. So whenever the topology entry is found, we should not delete the dir.\nAlso, topologyBlobs is ConcurrentHashMap which allows the slot and cleanup/update threads to access in parallel.\nIf we added synchronization, the file system dir cleanup might take seconds and block the slot threads to progress.", "url": "https://github.com/apache/storm/pull/3336#discussion_r489756042", "createdAt": "2020-09-16T21:10:03Z", "author": {"login": "RuiLi8080"}, "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -641,7 +642,12 @@ void cleanup() {\n \n             try {\n                 forEachTopologyDistDir((p, topologyId) -> {\n-                    if (!safeTopologyIds.contains(topologyId)) {\n+                    String topoJarKey = ConfigUtils.masterStormJarKey(topologyId);\n+                    String topoCodeKey = ConfigUtils.masterStormCodeKey(topologyId);\n+                    String topoConfKey = ConfigUtils.masterStormConfKey(topologyId);\n+                    if (!topologyBlobs.containsKey(topoJarKey)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1MTAxMw=="}, "originalCommit": {"oid": "d50c4f93505cc72bc5963a4a7f99dbafc1ce1f6e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyODE1NQ==", "bodyText": "What happens if line 648 executes and before line 649 runs getTopoJar(topologyId) is called?", "url": "https://github.com/apache/storm/pull/3336#discussion_r490428155", "createdAt": "2020-09-17T17:17:29Z", "author": {"login": "agresch"}, "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -641,7 +642,12 @@ void cleanup() {\n \n             try {\n                 forEachTopologyDistDir((p, topologyId) -> {\n-                    if (!safeTopologyIds.contains(topologyId)) {\n+                    String topoJarKey = ConfigUtils.masterStormJarKey(topologyId);\n+                    String topoCodeKey = ConfigUtils.masterStormCodeKey(topologyId);\n+                    String topoConfKey = ConfigUtils.masterStormConfKey(topologyId);\n+                    if (!topologyBlobs.containsKey(topoJarKey)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1MTAxMw=="}, "originalCommit": {"oid": "d50c4f93505cc72bc5963a4a7f99dbafc1ce1f6e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk4NjU0NA==", "bodyText": "When that happens, the directory will not be deleted. It is okay because when getTopoJar executes, it means the directory is needed.\nThe bottom line here is the code will delete the directory for dead topologies eventually (cleanup thread runs every 30s). But if there is anywhere that needs this directory, this code will not delete the directory", "url": "https://github.com/apache/storm/pull/3336#discussion_r490986544", "createdAt": "2020-09-18T14:24:57Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -641,7 +642,12 @@ void cleanup() {\n \n             try {\n                 forEachTopologyDistDir((p, topologyId) -> {\n-                    if (!safeTopologyIds.contains(topologyId)) {\n+                    String topoJarKey = ConfigUtils.masterStormJarKey(topologyId);\n+                    String topoCodeKey = ConfigUtils.masterStormCodeKey(topologyId);\n+                    String topoConfKey = ConfigUtils.masterStormConfKey(topologyId);\n+                    if (!topologyBlobs.containsKey(topoJarKey)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1MTAxMw=="}, "originalCommit": {"oid": "d50c4f93505cc72bc5963a4a7f99dbafc1ce1f6e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMjk2MQ==", "bodyText": "@agresch Technically there is a chance. But with this change it would be more unlikely to happen than before.\nBefore this change, we compare topo dir to safeTopologyIds which is essentially a much older version of topologyBlobs  snapshot since it could take about 10s for the forEachTopologyDistDir loop to finish. In this case, race condition is much more likely to happen since the deletion loop keep looking at the snapshot 10s ago.\nNow we directly check the topologyBlobs map right before deletion. So the forEachTopologyDistDir loop could be aware of the concurrent additions from slots and further prevent most of the wrongful deletion to happen.", "url": "https://github.com/apache/storm/pull/3336#discussion_r491122961", "createdAt": "2020-09-18T18:30:53Z", "author": {"login": "RuiLi8080"}, "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -641,7 +642,12 @@ void cleanup() {\n \n             try {\n                 forEachTopologyDistDir((p, topologyId) -> {\n-                    if (!safeTopologyIds.contains(topologyId)) {\n+                    String topoJarKey = ConfigUtils.masterStormJarKey(topologyId);\n+                    String topoCodeKey = ConfigUtils.masterStormCodeKey(topologyId);\n+                    String topoConfKey = ConfigUtils.masterStormConfKey(topologyId);\n+                    if (!topologyBlobs.containsKey(topoJarKey)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1MTAxMw=="}, "originalCommit": {"oid": "d50c4f93505cc72bc5963a4a7f99dbafc1ce1f6e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE2MzY3Nw==", "bodyText": "I guess your question is if line 650 (&& !topologyBlobs.containsKey(topoConfKey)) {) executes and before line 651 (fsOps.deleteIfExists(p.toFile());) runs, getTopoJar(topologyId) is called?\nYes there is a chance. But current change is much better than what we have before.\nJust for future reference, one thing about Rui's comment that I want to note is that we still don't know where the 10s delay we observed from the incident we had in our production cluster between where safeTopologyIds is populated and fsOps.deleteIfExists is invoked comes from. It could come from forEachTopologyDistDir file operations. But we don't know yet. Also this issue doesn't alway happen.", "url": "https://github.com/apache/storm/pull/3336#discussion_r491163677", "createdAt": "2020-09-18T20:02:14Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -641,7 +642,12 @@ void cleanup() {\n \n             try {\n                 forEachTopologyDistDir((p, topologyId) -> {\n-                    if (!safeTopologyIds.contains(topologyId)) {\n+                    String topoJarKey = ConfigUtils.masterStormJarKey(topologyId);\n+                    String topoCodeKey = ConfigUtils.masterStormCodeKey(topologyId);\n+                    String topoConfKey = ConfigUtils.masterStormConfKey(topologyId);\n+                    if (!topologyBlobs.containsKey(topoJarKey)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1MTAxMw=="}, "originalCommit": {"oid": "d50c4f93505cc72bc5963a4a7f99dbafc1ce1f6e"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjI1MzMwOnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDoyNToxOVrOHUPdaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxODozMjoyM1rOHUXz6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk4Njg1Nw==", "bodyText": "Please update comments at line 470-471 too", "url": "https://github.com/apache/storm/pull/3336#discussion_r490986857", "createdAt": "2020-09-18T14:25:19Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -474,7 +474,7 @@ public void releaseSlotFor(LocalAssignment assignment, int port) throws IOExcept\n             LOG.info(\"Port and assignment info: {}\", pna);\n             if (e instanceof FileNotFoundException) {\n                 localResourceFileNotFoundWhenReleasingSlot.mark();\n-                LOG.warn(\"Local base blobs have not been downloaded yet. \", e);\n+                LOG.warn(\"Local base blobs are not available. \", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d50c4f93505cc72bc5963a4a7f99dbafc1ce1f6e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMzY5MQ==", "bodyText": "Updated.", "url": "https://github.com/apache/storm/pull/3336#discussion_r491123691", "createdAt": "2020-09-18T18:32:23Z", "author": {"login": "RuiLi8080"}, "path": "storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java", "diffHunk": "@@ -474,7 +474,7 @@ public void releaseSlotFor(LocalAssignment assignment, int port) throws IOExcept\n             LOG.info(\"Port and assignment info: {}\", pna);\n             if (e instanceof FileNotFoundException) {\n                 localResourceFileNotFoundWhenReleasingSlot.mark();\n-                LOG.warn(\"Local base blobs have not been downloaded yet. \", e);\n+                LOG.warn(\"Local base blobs are not available. \", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk4Njg1Nw=="}, "originalCommit": {"oid": "d50c4f93505cc72bc5963a4a7f99dbafc1ce1f6e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4207, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}