{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNTA0NjUx", "number": 3284, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODoxNToyNlrOEEAA_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODoxOTowOFrOEEAGFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjMwMDE0OnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODoxNToyNlrOGhWl9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODo0Njo1NlrOGhXseg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYyNjM1Nw==", "bodyText": "Does this method (or its variant getAllPids) need to be in the ResourceIsolationInterface?", "url": "https://github.com/apache/storm/pull/3284#discussion_r437626357", "createdAt": "2020-06-09T18:15:26Z", "author": {"login": "bipinprasad"}, "path": "storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java", "diffHunk": "@@ -305,8 +302,7 @@ private void prefixNumaPinning(List<String> command, String numaId) {\n         return newCommand;\n     }\n \n-    @Override\n-    public Set<Long> getRunningPids(String workerId) throws IOException {\n+    private Set<Long> getRunningPids(String workerId) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5f1246b0859eb0da4f5282f63a9e681f4b74fda"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0NDQxMA==", "bodyText": "There might be different ways of killing processes for a worker, depending on the implementation, docker, runc. So this method is not general enough to be placed in the interface", "url": "https://github.com/apache/storm/pull/3284#discussion_r437644410", "createdAt": "2020-06-09T18:46:56Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/container/cgroup/CgroupManager.java", "diffHunk": "@@ -305,8 +302,7 @@ private void prefixNumaPinning(List<String> command, String numaId) {\n         return newCommand;\n     }\n \n-    @Override\n-    public Set<Long> getRunningPids(String workerId) throws IOException {\n+    private Set<Long> getRunningPids(String workerId) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYyNjM1Nw=="}, "originalCommit": {"oid": "c5f1246b0859eb0da4f5282f63a9e681f4b74fda"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjMxMzE4OnYy", "diffSide": "RIGHT", "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODoxOTowOFrOGhWuLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMjowOTo0MVrOGheKPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYyODQ2Mw==", "bodyText": "instead of assert (which will not be active at runtime), do we want to raise an IllegalArgumentException here? If resourceIsolationManager is null, then there will be NPE anyway elsewhere.", "url": "https://github.com/apache/storm/pull/3284#discussion_r437628463", "createdAt": "2020-06-09T18:19:08Z", "author": {"login": "bipinprasad"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java", "diffHunk": "@@ -130,14 +130,15 @@ public BasicContainer(ContainerType type, Map<String, Object> conf, String super\n         super(type, conf, supervisorId, supervisorPort, port, assignment,\n             resourceIsolationManager, workerId, topoConf, ops, metricsRegistry, containerMemoryTracker);\n         assert (localState != null);\n+        assert (resourceIsolationManager != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5f1246b0859eb0da4f5282f63a9e681f4b74fda"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0NTU0OQ==", "bodyText": "This will not really happen since resourceIsolationManager has default value and will be always initialized. assert is just used at development phase to avoid errors. We can continue our discussion on assert at the other pr (#3274), but I can remove this line if you prefer.", "url": "https://github.com/apache/storm/pull/3284#discussion_r437645549", "createdAt": "2020-06-09T18:48:58Z", "author": {"login": "Ethanlm"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java", "diffHunk": "@@ -130,14 +130,15 @@ public BasicContainer(ContainerType type, Map<String, Object> conf, String super\n         super(type, conf, supervisorId, supervisorPort, port, assignment,\n             resourceIsolationManager, workerId, topoConf, ops, metricsRegistry, containerMemoryTracker);\n         assert (localState != null);\n+        assert (resourceIsolationManager != null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYyODQ2Mw=="}, "originalCommit": {"oid": "c5f1246b0859eb0da4f5282f63a9e681f4b74fda"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc1MDMzMw==", "bodyText": "We can continue assert discussion elsewhere. But my preference is not to add this.", "url": "https://github.com/apache/storm/pull/3284#discussion_r437750333", "createdAt": "2020-06-09T22:09:41Z", "author": {"login": "bipinprasad"}, "path": "storm-server/src/main/java/org/apache/storm/daemon/supervisor/BasicContainer.java", "diffHunk": "@@ -130,14 +130,15 @@ public BasicContainer(ContainerType type, Map<String, Object> conf, String super\n         super(type, conf, supervisorId, supervisorPort, port, assignment,\n             resourceIsolationManager, workerId, topoConf, ops, metricsRegistry, containerMemoryTracker);\n         assert (localState != null);\n+        assert (resourceIsolationManager != null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzYyODQ2Mw=="}, "originalCommit": {"oid": "c5f1246b0859eb0da4f5282f63a9e681f4b74fda"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4307, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}