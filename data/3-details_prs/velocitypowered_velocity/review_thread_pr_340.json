{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5MjQ4Mzcw", "number": 340, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDo0Mzo1N1rOETthbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDo0Mzo1N1rOETthbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTA0MjM2OnYy", "diffSide": "RIGHT", "path": "proxy/src/main/java/com/velocitypowered/proxy/network/TransportType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDo0Mzo1N1rOG5mSDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDo0NDoxOFrOG5mTIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0OTIzMQ==", "bodyText": "As an internal class we don't need to deprecate these", "url": "https://github.com/VelocityPowered/Velocity/pull/340#discussion_r463049231", "createdAt": "2020-07-30T14:43:57Z", "author": {"login": "astei"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/network/TransportType.java", "diffHunk": "@@ -18,30 +20,57 @@\n import java.util.function.BiFunction;\n \n enum TransportType {\n-  NIO(\"NIO\", NioServerSocketChannel.class, NioSocketChannel.class, NioDatagramChannel.class,\n+  NIO(\"NIO\", NioServerSocketChannel::new, NioServerSocketChannel.class,\n+      NioSocketChannel::new, NioSocketChannel.class,\n+      NioDatagramChannel::new, NioDatagramChannel.class,\n       (name, type) -> new NioEventLoopGroup(0, createThreadFactory(name, type))),\n-  EPOLL(\"epoll\", EpollServerSocketChannel.class, EpollSocketChannel.class,\n-      EpollDatagramChannel.class,\n+  EPOLL(\"epoll\", EpollServerSocketChannel::new, EpollServerSocketChannel.class,\n+      EpollSocketChannel::new, EpollSocketChannel.class,\n+      EpollDatagramChannel::new, EpollDatagramChannel.class,\n       (name, type) -> new EpollEventLoopGroup(0, createThreadFactory(name, type)));\n \n   final String name;\n+  @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6379936f324ac0cfefe84b1a41e213a250d936d6"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0OTUwNg==", "bodyText": "Just remove them in this case.", "url": "https://github.com/VelocityPowered/Velocity/pull/340#discussion_r463049506", "createdAt": "2020-07-30T14:44:18Z", "author": {"login": "astei"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/network/TransportType.java", "diffHunk": "@@ -18,30 +20,57 @@\n import java.util.function.BiFunction;\n \n enum TransportType {\n-  NIO(\"NIO\", NioServerSocketChannel.class, NioSocketChannel.class, NioDatagramChannel.class,\n+  NIO(\"NIO\", NioServerSocketChannel::new, NioServerSocketChannel.class,\n+      NioSocketChannel::new, NioSocketChannel.class,\n+      NioDatagramChannel::new, NioDatagramChannel.class,\n       (name, type) -> new NioEventLoopGroup(0, createThreadFactory(name, type))),\n-  EPOLL(\"epoll\", EpollServerSocketChannel.class, EpollSocketChannel.class,\n-      EpollDatagramChannel.class,\n+  EPOLL(\"epoll\", EpollServerSocketChannel::new, EpollServerSocketChannel.class,\n+      EpollSocketChannel::new, EpollSocketChannel.class,\n+      EpollDatagramChannel::new, EpollDatagramChannel.class,\n       (name, type) -> new EpollEventLoopGroup(0, createThreadFactory(name, type)));\n \n   final String name;\n+  @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0OTIzMQ=="}, "originalCommit": {"oid": "6379936f324ac0cfefe84b1a41e213a250d936d6"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2767, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}