{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMTUwNTI3", "number": 321, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMTo0MTo0NFrOEJgdBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNjoxMjo1OFrOEJ8h9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDA0MzU3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMTo0MTo0NFrOGqCQeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMTo0MTo0NFrOGqCQeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjczMDM2MA==", "bodyText": "Should be deprecated since it is going away.", "url": "https://github.com/VelocityPowered/Velocity/pull/321#discussion_r446730360", "createdAt": "2020-06-29T01:41:44Z", "author": {"login": "kashike"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/ProxyAudience.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package com.velocitypowered.api.proxy;\n+\n+import net.kyori.adventure.audience.Audience;\n+import net.kyori.adventure.bossbar.BossBar;\n+import net.kyori.adventure.inventory.Book;\n+import net.kyori.adventure.sound.Sound;\n+import net.kyori.adventure.sound.SoundStop;\n+import net.kyori.adventure.text.Component;\n+import net.kyori.adventure.title.Title;\n+import org.checkerframework.checker.nullness.qual.NonNull;\n+\n+/**\n+ * Indicates an {@link Audience} that is on the proxy. This interface contains no-op default methods\n+ * that are used to bridge compatibility issues with the new adventure API. This interface will go\n+ * away in Velocity 2.0.0.\n+ */\n+public interface ProxyAudience extends Audience {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70a989e955babd427681465681fa66db60873d9d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDE0MjQ1OnYy", "diffSide": "RIGHT", "path": "proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMjo1MjoxM1rOGqDJOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwMjo1NzozN1rOGqDNzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0NDg4OQ==", "bodyText": "Changes list says ProxyServer applies actions to all players including console, does this not just give the player audiences?", "url": "https://github.com/VelocityPowered/Velocity/pull/321#discussion_r446744889", "createdAt": "2020-06-29T02:52:13Z", "author": {"login": "Crypnotic"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java", "diffHunk": "@@ -605,11 +606,8 @@ public InetSocketAddress getBoundAddress() {\n   }\n \n   @Override\n-  public void sendMessage(net.kyori.adventure.text.@NonNull Component message) {\n-    Preconditions.checkNotNull(message, \"message\");\n-    for (ConnectedPlayer player : connectionsByUuid.values()) {\n-      player.sendMessage(message);\n-    }\n+  public @NonNull Iterable<? extends Audience> audiences() {\n+    return this.getAllPlayers();\n   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c02d6b00764638516e9cc64ba6b0bb208ede886"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0NjA2Mw==", "bodyText": "Should be fixed now.", "url": "https://github.com/VelocityPowered/Velocity/pull/321#discussion_r446746063", "createdAt": "2020-06-29T02:57:37Z", "author": {"login": "astei"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/VelocityServer.java", "diffHunk": "@@ -605,11 +606,8 @@ public InetSocketAddress getBoundAddress() {\n   }\n \n   @Override\n-  public void sendMessage(net.kyori.adventure.text.@NonNull Component message) {\n-    Preconditions.checkNotNull(message, \"message\");\n-    for (ConnectedPlayer player : connectionsByUuid.values()) {\n-      player.sendMessage(message);\n-    }\n+  public @NonNull Iterable<? extends Audience> audiences() {\n+    return this.getAllPlayers();\n   }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0NDg4OQ=="}, "originalCommit": {"oid": "5c02d6b00764638516e9cc64ba6b0bb208ede886"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDg2NDM2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoxOTo0NFrOGqJroA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoxOTo0NFrOGqJroA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1MjAwMA==", "bodyText": "This should be deprecated", "url": "https://github.com/VelocityPowered/Velocity/pull/321#discussion_r446852000", "createdAt": "2020-06-29T08:19:44Z", "author": {"login": "hugmanrique"}, "path": "api/src/main/java/com/velocitypowered/api/event/ResultedEvent.java", "diffHunk": "@@ -92,7 +93,11 @@ public boolean isAllowed() {\n       return status;\n     }\n \n-    public Optional<Component> getReason() {\n+    public Optional<net.kyori.text.Component> getReason() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22afd1cf41b0249f842b890f07ad920fd152a719"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDg3MDg1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoyMTozNVrOGqJveQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoyMTozNVrOGqJveQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1Mjk4NQ==", "bodyText": "Is the @Nullable annotation removal both here and in the new constructor intentional?\nIf so, the constructor is missing the non-null precondition.", "url": "https://github.com/VelocityPowered/Velocity/pull/321#discussion_r446852985", "createdAt": "2020-06-29T08:21:35Z", "author": {"login": "hugmanrique"}, "path": "api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java", "diffHunk": "@@ -20,7 +21,7 @@\n \n   private final Player player;\n   private final RegisteredServer server;\n-  private final @Nullable Component originalReason;\n+  private final net.kyori.adventure.text.Component originalReason;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22afd1cf41b0249f842b890f07ad920fd152a719"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDg4NzU3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoyNTo1NlrOGqJ5VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoyNTo1NlrOGqJ5VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1NTUwOQ==", "bodyText": "Mark message as @Nullable", "url": "https://github.com/VelocityPowered/Velocity/pull/321#discussion_r446855509", "createdAt": "2020-06-29T08:25:56Z", "author": {"login": "hugmanrique"}, "path": "api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java", "diffHunk": "@@ -147,10 +186,10 @@ public static DisconnectPlayer create(Component reason) {\n    */\n   public static final class RedirectPlayer implements ServerKickResult {\n \n-    private final Component message;\n+    private final net.kyori.adventure.text.Component message;\n     private final RegisteredServer server;\n \n-    private RedirectPlayer(RegisteredServer server, @Nullable Component message) {\n+    private RedirectPlayer(RegisteredServer server, net.kyori.adventure.text.Component message) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22afd1cf41b0249f842b890f07ad920fd152a719"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDg5NTkxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoyNzo1NFrOGqJ-Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODoyNzo1NFrOGqJ-Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1Njc4Nw==", "bodyText": "This is using the new Component and is private, shouldn't be deprecated", "url": "https://github.com/VelocityPowered/Velocity/pull/321#discussion_r446856787", "createdAt": "2020-06-29T08:27:54Z", "author": {"login": "hugmanrique"}, "path": "api/src/main/java/com/velocitypowered/api/event/player/KickedFromServerEvent.java", "diffHunk": "@@ -191,9 +250,10 @@ public static ServerKickResult create(RegisteredServer server) {\n    */\n   public static final class Notify implements ServerKickResult {\n \n-    private final Component message;\n+    private final net.kyori.adventure.text.Component message;\n \n-    private Notify(Component message) {\n+    @Deprecated\n+    private Notify(net.kyori.adventure.text.Component message) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22afd1cf41b0249f842b890f07ad920fd152a719"}, "originalPosition": 195}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDkzODU5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/proxy/config/ProxyConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODozOTowMVrOGqKXYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNjoyODo0MlrOGqYy9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2MzIwMg==", "bodyText": "Minor nit: It's a shame this method cannot be named consistently. Open to change in 2.0 once the other gets removed?", "url": "https://github.com/VelocityPowered/Velocity/pull/321#discussion_r446863202", "createdAt": "2020-06-29T08:39:01Z", "author": {"login": "hugmanrique"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/config/ProxyConfig.java", "diffHunk": "@@ -44,8 +43,17 @@\n    * Get the MOTD component shown in the tab list.\n    *\n    * @return the motd component\n+   * @deprecated Use {@link #getMotd()} instead\n    */\n-  Component getMotdComponent();\n+  @Deprecated\n+  net.kyori.text.Component getMotdComponent();\n+\n+  /**\n+   * Get the MOTD component shown in the tab list.\n+   *\n+   * @return the motd component\n+   */\n+  net.kyori.adventure.text.Component getMotd();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22afd1cf41b0249f842b890f07ad920fd152a719"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA5OTYzOQ==", "bodyText": "Yes, as with everything else. (ProxyConfig was basically created with the \"Extract Interface\" refactoring in IntelliJ IDEA, and hasn't really evolved past that. It's a leaky abstraction.)", "url": "https://github.com/VelocityPowered/Velocity/pull/321#discussion_r447099639", "createdAt": "2020-06-29T16:28:42Z", "author": {"login": "astei"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/config/ProxyConfig.java", "diffHunk": "@@ -44,8 +43,17 @@\n    * Get the MOTD component shown in the tab list.\n    *\n    * @return the motd component\n+   * @deprecated Use {@link #getMotd()} instead\n    */\n-  Component getMotdComponent();\n+  @Deprecated\n+  net.kyori.text.Component getMotdComponent();\n+\n+  /**\n+   * Get the MOTD component shown in the tab list.\n+   *\n+   * @return the motd component\n+   */\n+  net.kyori.adventure.text.Component getMotd();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2MzIwMg=="}, "originalCommit": {"oid": "22afd1cf41b0249f842b890f07ad920fd152a719"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NDk1MzAyOnYy", "diffSide": "RIGHT", "path": "proxy/src/main/java/com/velocitypowered/proxy/server/VelocityRegisteredServer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODo0Mjo0NFrOGqKgKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODo0Mjo0NFrOGqKgKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2NTQ1MQ==", "bodyText": "Superfluous @NonNull annotation", "url": "https://github.com/VelocityPowered/Velocity/pull/321#discussion_r446865451", "createdAt": "2020-06-29T08:42:44Z", "author": {"login": "hugmanrique"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/server/VelocityRegisteredServer.java", "diffHunk": "@@ -145,4 +148,9 @@ public boolean sendPluginMessage(ChannelIdentifier identifier, ByteBuf data) {\n   public String toString() {\n     return \"registered server: \" + serverInfo;\n   }\n+\n+  @Override\n+  public @NonNull Iterable<? extends Audience> audiences() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22afd1cf41b0249f842b890f07ad920fd152a719"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODY0Mzc0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/proxy/ProxyServer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNjoxMjo1OFrOGqtJ5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNjoxMjo1OFrOGqtJ5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQzMzE5MQ==", "bodyText": "I would recommend extending the more generic Audience in the api interfaces, then using MultiAudience in the implementation (for ProxyServer and co.) That way you don't expose audiences() in the spec.", "url": "https://github.com/VelocityPowered/Velocity/pull/321#discussion_r447433191", "createdAt": "2020-06-30T06:12:58Z", "author": {"login": "Electroid"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/ProxyServer.java", "diffHunk": "@@ -17,13 +17,14 @@\n import java.util.Collection;\n import java.util.Optional;\n import java.util.UUID;\n-import net.kyori.text.Component;\n+import net.kyori.adventure.audience.MultiAudience;\n+import net.kyori.adventure.text.Component;\n import org.checkerframework.checker.nullness.qual.NonNull;\n \n /**\n  * Provides an interface to a Minecraft server proxy.\n  */\n-public interface ProxyServer {\n+public interface ProxyServer extends MultiAudience {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5285a3c155b3404a45e52a2d4d1ae88dcc0e2b3d"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2753, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}