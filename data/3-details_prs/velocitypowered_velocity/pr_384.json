{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2Mzg3NTUy", "number": 384, "title": "Implement async event tasks.", "bodyText": "This implements the \"Handling of potentially blocking events\" portion of the event rework issue #378.\nThe implementation no longer uses the kyori event bus, but a custom implementation for finer control. The Lmbda library is used to generate annotated event handler implementations.\nThis new API also opens up the possibility of using Kotlin Coroutines in your event handlers, the following gist gives an example how to do that: Velocity Event Coroutines", "createdAt": "2020-11-05T22:54:24Z", "url": "https://github.com/VelocityPowered/Velocity/pull/384", "merged": true, "mergeCommit": {"oid": "1b551a8e1c11092e4486eac7fb1d0fbcd0119e6e"}, "closed": true, "closedAt": "2020-12-15T13:15:17Z", "author": {"login": "Cybermaxke"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZq0A1AFqTUyNDc0NzE2Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmZ8l5AH2gAyNTE2Mzg3NTUyOjI3MDVlYmE1NTM4NDk5ZjBhZjU5ZGRjNDQ1MWU1MjNmNmQ4YWIxNDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NzQ3MTYz", "url": "https://github.com/VelocityPowered/Velocity/pull/384#pullrequestreview-524747163", "createdAt": "2020-11-05T23:17:10Z", "commit": {"oid": "dafc5d2127686b1b1540362fe260b70391101930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzoxNzoxMFrOHuaWyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzoxNzoxMFrOHuaWyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQyODM2Mg==", "bodyText": "Why only as a lambda?", "url": "https://github.com/VelocityPowered/Velocity/pull/384#discussion_r518428362", "createdAt": "2020-11-05T23:17:10Z", "author": {"login": "kashike"}, "path": "api/src/main/java/com/velocitypowered/api/event/AsyncTask.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package com.velocitypowered.api.event;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.function.Consumer;\n+\n+@FunctionalInterface\n+public interface AsyncTask {\n+\n+  /**\n+   * Runs the task.\n+   *\n+   * @deprecated Should only be implemented as a lambda and called internally.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dafc5d2127686b1b1540362fe260b70391101930"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NzUxNjUx", "url": "https://github.com/VelocityPowered/Velocity/pull/384#pullrequestreview-524751651", "createdAt": "2020-11-05T23:26:55Z", "commit": {"oid": "dafc5d2127686b1b1540362fe260b70391101930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzoyNjo1NVrOHuak3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzoyNjo1NVrOHuak3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQzMTk2Ng==", "bodyText": "AsyncSubscriber or something, maybe?", "url": "https://github.com/VelocityPowered/Velocity/pull/384#discussion_r518431966", "createdAt": "2020-11-05T23:26:55Z", "author": {"login": "kashike"}, "path": "api/src/main/java/com/velocitypowered/api/event/Async.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.velocitypowered.api.event;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Marks an event handler method as async. By default are events handled on the\n+ * network task executor, using this annotations performs them on an asynchronous\n+ * task executor.\n+ */\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.METHOD)\n+public @interface Async {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dafc5d2127686b1b1540362fe260b70391101930"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NzUzNTQz", "url": "https://github.com/VelocityPowered/Velocity/pull/384#pullrequestreview-524753543", "createdAt": "2020-11-05T23:31:24Z", "commit": {"oid": "dafc5d2127686b1b1540362fe260b70391101930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzozMToyNVrOHuarVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzozMToyNVrOHuarVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQzMzYyMw==", "bodyText": "I'm not a huge fan of the name AsyncTask. I don't have another good name for this - perhaps EventTask or even EventContinuation would be better (and then rename AsyncTask.WithContinuation to EventContinuation.Deferred).", "url": "https://github.com/VelocityPowered/Velocity/pull/384#discussion_r518433623", "createdAt": "2020-11-05T23:31:25Z", "author": {"login": "astei"}, "path": "api/src/main/java/com/velocitypowered/api/event/AsyncTask.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package com.velocitypowered.api.event;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.function.Consumer;\n+\n+@FunctionalInterface\n+public interface AsyncTask {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dafc5d2127686b1b1540362fe260b70391101930"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4c091e549edc96a894ea5026db79b386b69e380", "author": {"user": {"login": "Cybermaxke", "name": "Seppe Volkaerts"}}, "url": "https://github.com/VelocityPowered/Velocity/commit/a4c091e549edc96a894ea5026db79b386b69e380", "committedDate": "2020-11-06T14:54:32Z", "message": "Rename isAsync to requiresAsync."}, "afterCommit": {"oid": "1d810241b742536ed191014e1bec8aa57941efd1", "author": {"user": {"login": "Cybermaxke", "name": "Seppe Volkaerts"}}, "url": "https://github.com/VelocityPowered/Velocity/commit/1d810241b742536ed191014e1bec8aa57941efd1", "committedDate": "2020-11-06T17:32:23Z", "message": "Untargeted handlers should be cached weakly. Other small changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b04d5de14126d7d56a8b29030be025933e750a6d", "author": {"user": {"login": "Cybermaxke", "name": "Seppe Volkaerts"}}, "url": "https://github.com/VelocityPowered/Velocity/commit/b04d5de14126d7d56a8b29030be025933e750a6d", "committedDate": "2020-12-15T11:48:32Z", "message": "Implement async event tasks.\n\nEvents will now only be handled by an async executor if necessary. This should improve performance for lightweight listeners."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0a61e87043031c8ce82d42cb9781a8e8c5eb28b", "author": {"user": {"login": "Cybermaxke", "name": "Seppe Volkaerts"}}, "url": "https://github.com/VelocityPowered/Velocity/commit/d0a61e87043031c8ce82d42cb9781a8e8c5eb28b", "committedDate": "2020-12-15T12:05:32Z", "message": "Update java version. Switch to caffeine cache to allow null values."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "419b13306ff7677059f171b7e0c2271a3380d1e5", "author": {"user": {"login": "Cybermaxke", "name": "Seppe Volkaerts"}}, "url": "https://github.com/VelocityPowered/Velocity/commit/419b13306ff7677059f171b7e0c2271a3380d1e5", "committedDate": "2020-11-10T14:29:52Z", "message": "Missed this."}, "afterCommit": {"oid": "d0a61e87043031c8ce82d42cb9781a8e8c5eb28b", "author": {"user": {"login": "Cybermaxke", "name": "Seppe Volkaerts"}}, "url": "https://github.com/VelocityPowered/Velocity/commit/d0a61e87043031c8ce82d42cb9781a8e8c5eb28b", "committedDate": "2020-12-15T12:05:32Z", "message": "Update java version. Switch to caffeine cache to allow null values."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2705eba5538499f0af59ddc4451e523f6d8ab145", "author": {"user": {"login": "Cybermaxke", "name": "Seppe Volkaerts"}}, "url": "https://github.com/VelocityPowered/Velocity/commit/2705eba5538499f0af59ddc4451e523f6d8ab145", "committedDate": "2020-12-15T13:00:10Z", "message": "Small cleanup."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 674, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}