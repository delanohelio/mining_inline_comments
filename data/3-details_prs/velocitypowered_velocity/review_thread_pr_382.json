{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1OTQ4NTE3", "number": 382, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzoxNDowN1rOE14jCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNTowMzo0NVrOGG6G-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0OTM2NDU4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/proxy/Player.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMzoxNDowN1rOHuaSNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMjoxMDowNVrOHvrsxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQyNzE5MQ==", "bodyText": "Can convert this into a default method, calling the new one with required as false.", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r518427191", "createdAt": "2020-11-05T23:14:07Z", "author": {"login": "kashike"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/Player.java", "diffHunk": "@@ -205,4 +205,18 @@ default void sendMessage(net.kyori.text.Component component) {\n    * @param hash the SHA-1 hash value for the resource pack\n    */\n   void sendResourcePack(String url, byte[] hash);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "300adb58897014faf44ef82aa6b91fb13760f424"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc2MTA5Mg==", "bodyText": "Will do that when I roll 20w46a", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r519761092", "createdAt": "2020-11-09T12:10:05Z", "author": {"login": "Xernium"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/Player.java", "diffHunk": "@@ -205,4 +205,18 @@ default void sendMessage(net.kyori.text.Component component) {\n    * @param hash the SHA-1 hash value for the resource pack\n    */\n   void sendResourcePack(String url, byte[] hash);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQyNzE5MQ=="}, "originalCommit": {"oid": "300adb58897014faf44ef82aa6b91fb13760f424"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTgxMzcwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/proxy/Player.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzoxMDoxMFrOIUkzjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQyMToyMjoyOFrOIUuMaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ0NTQ1NA==", "bodyText": "Could you specify in the JD what is meant by 'isRequired'? It's unclear at first glance; I had to check wiki.vg\nForced | Boolean | The notchian client will be forced to use the resource pack from the server. If they decline they will be kicked from the server\nsource https://wiki.vg/Pre-release_protocol#Resource_Pack_Send", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r558445454", "createdAt": "2021-01-15T17:10:10Z", "author": {"login": "Mystiflow"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/Player.java", "diffHunk": "@@ -218,5 +218,21 @@ default void sendMessage(net.kyori.text.Component component) {\n    * @param url the URL for the resource pack\n    * @param hash the SHA-1 hash value for the resource pack\n    */\n-  void sendResourcePack(String url, byte[] hash);\n+  default void sendResourcePack(String url, byte[] hash) {\n+    sendResourcePack(url, hash, false);\n+  }\n+\n+  /**\n+   * Sends the specified resource pack from {@code url} to the user, using the specified 20-byte\n+   * SHA-1 hash. To monitor the status of the sent resource pack, subscribe to\n+   * {@link PlayerResourcePackStatusEvent}.\n+   * In 1.17 and newer you can additionally specify\n+   * whether the resource pack is required or not. Setting this for an older client will have\n+   * no effect.\n+   *\n+   * @param url the URL for the resource pack\n+   * @param hash the SHA-1 hash value for the resource pack\n+   * @param isRequired flag to set the resource pack as required in 1.17+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "169784ffa8ba2e26298a5f0fe5b195bd081966cd"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU5OTI3Mg==", "bodyText": "Point taken. The final description will be shorter to the sum of: isRequired refusing this pack on 1.17 or newer disconnects the user.", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r558599272", "createdAt": "2021-01-15T21:22:28Z", "author": {"login": "Xernium"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/Player.java", "diffHunk": "@@ -218,5 +218,21 @@ default void sendMessage(net.kyori.text.Component component) {\n    * @param url the URL for the resource pack\n    * @param hash the SHA-1 hash value for the resource pack\n    */\n-  void sendResourcePack(String url, byte[] hash);\n+  default void sendResourcePack(String url, byte[] hash) {\n+    sendResourcePack(url, hash, false);\n+  }\n+\n+  /**\n+   * Sends the specified resource pack from {@code url} to the user, using the specified 20-byte\n+   * SHA-1 hash. To monitor the status of the sent resource pack, subscribe to\n+   * {@link PlayerResourcePackStatusEvent}.\n+   * In 1.17 and newer you can additionally specify\n+   * whether the resource pack is required or not. Setting this for an older client will have\n+   * no effect.\n+   *\n+   * @param url the URL for the resource pack\n+   * @param hash the SHA-1 hash value for the resource pack\n+   * @param isRequired flag to set the resource pack as required in 1.17+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ0NTQ1NA=="}, "originalCommit": {"oid": "169784ffa8ba2e26298a5f0fe5b195bd081966cd"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNTgyNDYzOnYy", "diffSide": "RIGHT", "path": "proxy/src/main/java/com/velocitypowered/proxy/connection/client/ConnectedPlayer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzoxMzoxMVrOIUk6ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNzozOTo0NFrOIUl19Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ0NzIwNQ==", "bodyText": "Maybe also keep the previous method for compat?", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r558447205", "createdAt": "2021-01-15T17:13:11Z", "author": {"login": "Mystiflow"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/connection/client/ConnectedPlayer.java", "diffHunk": "@@ -838,18 +838,20 @@ public void sendResourcePack(String url) {\n     ResourcePackRequest request = new ResourcePackRequest();\n     request.setUrl(url);\n     request.setHash(\"\");\n+    request.setRequired(false);\n     connection.write(request);\n   }\n \n   @Override\n-  public void sendResourcePack(String url, byte[] hash) {\n+  public void sendResourcePack(String url, byte[] hash, boolean isRequired) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "169784ffa8ba2e26298a5f0fe5b195bd081966cd"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ2MjQ1Mw==", "bodyText": "See https://github.com/VelocityPowered/Velocity/pull/382/files#diff-433700b629ed381aec737f3b64379fa3aa63f8b7d93191e73d3a79329ae8b9ebR221", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r558462453", "createdAt": "2021-01-15T17:39:44Z", "author": {"login": "hugmanrique"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/connection/client/ConnectedPlayer.java", "diffHunk": "@@ -838,18 +838,20 @@ public void sendResourcePack(String url) {\n     ResourcePackRequest request = new ResourcePackRequest();\n     request.setUrl(url);\n     request.setHash(\"\");\n+    request.setRequired(false);\n     connection.write(request);\n   }\n \n   @Override\n-  public void sendResourcePack(String url, byte[] hash) {\n+  public void sendResourcePack(String url, byte[] hash, boolean isRequired) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ0NzIwNQ=="}, "originalCommit": {"oid": "169784ffa8ba2e26298a5f0fe5b195bd081966cd"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA2MzQxMDEzOnYy", "diffSide": "RIGHT", "path": "proxy/src/main/java/com/velocitypowered/proxy/connection/client/ConnectedPlayer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0yN1QxNToxMzozOFrOJjCitQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0yN1QxNToxMzozOFrOJjCitQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MDcyMTU4OQ==", "bodyText": "Shouldn't we run this on the event loop instead?", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r640721589", "createdAt": "2021-05-27T15:13:38Z", "author": {"login": "astei"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/connection/client/ConnectedPlayer.java", "diffHunk": "@@ -864,29 +880,133 @@ public void spoofChatInput(String input) {\n   }\n \n   @Override\n+  @Deprecated\n   public void sendResourcePack(String url) {\n-    Preconditions.checkNotNull(url, \"url\");\n+    sendResourcePackOffer(new VelocityResourcePackInfo.BuilderImpl(url).build());\n+  }\n+\n+  @Override\n+  @Deprecated\n+  public void sendResourcePack(String url, byte[] hash) {\n+    sendResourcePackOffer(new VelocityResourcePackInfo.BuilderImpl(url).setHash(hash).build());\n+  }\n \n+  @Override\n+  public void sendResourcePackOffer(ResourcePackInfo packInfo) {\n     if (this.getProtocolVersion().compareTo(ProtocolVersion.MINECRAFT_1_8) >= 0) {\n+      Preconditions.checkNotNull(packInfo, \"packInfo\");\n+      queueResourcePack(packInfo);\n+    }\n+  }\n+\n+  /**\n+   * Queues a resource-pack for sending to the player and sends it\n+   * immediately if the queue is empty.\n+   */\n+  public void queueResourcePack(ResourcePackInfo info) {\n+    outstandingResourcePacks.add(info);\n+    if (outstandingResourcePacks.size() == 1) {\n+      tickResourcePackQueue();\n+    }\n+  }\n+\n+  private void tickResourcePackQueue() {\n+    ResourcePackInfo queued = outstandingResourcePacks.peek();\n+\n+    if (queued != null) {\n+      // Check if the player declined a resource pack once already\n+      if (previousResourceResponse != null && !previousResourceResponse) {\n+        // If that happened we can flush the queue right away.\n+        // Unless its 1.17+ and forced it will come back denied anyway\n+        while (!outstandingResourcePacks.isEmpty()) {\n+          queued = outstandingResourcePacks.peek();\n+          if (queued.getShouldForce() && getProtocolVersion()\n+                  .compareTo(ProtocolVersion.MINECRAFT_1_17) >= 0) {\n+            break;\n+          }\n+          onResourcePackResponse(PlayerResourcePackStatusEvent.Status.DECLINED, new byte[0]);\n+          queued = null;\n+        }\n+        if (queued == null) {\n+          // Exit as the queue was cleared\n+          return;\n+        }\n+      }\n+\n       ResourcePackRequest request = new ResourcePackRequest();\n-      request.setUrl(url);\n-      request.setHash(\"\");\n+      request.setUrl(queued.getUrl());\n+      if (queued.getHash() != null) {\n+        request.setHash(ByteBufUtil.hexDump(queued.getHash()));\n+      } else {\n+        request.setHash(\"\");\n+      }\n+      request.setRequired(queued.getShouldForce());\n+      request.setPrompt(queued.getPrompt());\n+\n       connection.write(request);\n     }\n   }\n \n   @Override\n-  public void sendResourcePack(String url, byte[] hash) {\n-    Preconditions.checkNotNull(url, \"url\");\n-    Preconditions.checkNotNull(hash, \"hash\");\n-    Preconditions.checkArgument(hash.length == 20, \"Hash length is not 20\");\n+  public @Nullable ResourcePackInfo getAppliedResourcePack() {\n+    return appliedResourcePack;\n+  }\n \n-    if (this.getProtocolVersion().compareTo(ProtocolVersion.MINECRAFT_1_8) >= 0) {\n-      ResourcePackRequest request = new ResourcePackRequest();\n-      request.setUrl(url);\n-      request.setHash(ByteBufUtil.hexDump(hash));\n-      connection.write(request);\n+  @Override\n+  public @Nullable ResourcePackInfo getPendingResourcePack() {\n+    return pendingResourcePack;\n+  }\n+\n+  /**\n+   * Processes a client response to a sent resource-pack.\n+   */\n+  public boolean onResourcePackResponse(PlayerResourcePackStatusEvent.Status status,\n+                                        @Nullable byte[] hash) {\n+\n+    final boolean peek = status == PlayerResourcePackStatusEvent.Status.ACCEPTED;\n+    final ResourcePackInfo queued = peek\n+            ? outstandingResourcePacks.peek() : outstandingResourcePacks.poll();\n+\n+    server.getEventManager().fire(new PlayerResourcePackStatusEvent(this, status, queued))\n+            .thenAcceptAsync(event -> {\n+              if (event.getStatus() == PlayerResourcePackStatusEvent.Status.DECLINED\n+                      && event.getPackInfo() != null && event.getPackInfo().getShouldForce()\n+                      && (!event.isOverwriteKick() || event.getPlayer()\n+                              .getProtocolVersion().compareTo(ProtocolVersion.MINECRAFT_1_17) >= 0)\n+              ) {\n+                event.getPlayer().disconnect(Component\n+                        .translatable(\"multiplayer.requiredTexturePrompt.disconnect\"));\n+              }\n+            });\n+\n+\n+    switch (status) {\n+      case ACCEPTED:\n+        previousResourceResponse = true;\n+        pendingResourcePack = queued;\n+        break;\n+      case DECLINED:\n+        previousResourceResponse = false;\n+        break;\n+      case SUCCESSFUL:\n+        appliedResourcePack = queued;\n+        pendingResourcePack = null;\n+        break;\n+      case FAILED_DOWNLOAD:\n+        pendingResourcePack = null;\n+        break;\n+      default:\n+        break;\n+    }\n+\n+    if (!peek) {\n+      CompletableFuture.supplyAsync(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10bfd8685e2d242006f45558139ddeb0b353d259"}, "originalPosition": 309}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA5NTU2NDI1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/proxy/player/ResourcePackInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNFQxMTozODowMFrOJnmYiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNFQxMTo0MDoxNVrOJnmc9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTUwMzExMg==", "bodyText": "Looks like that comment is wrong", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r645503112", "createdAt": "2021-06-04T11:38:00Z", "author": {"login": "Vankka"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/player/ResourcePackInfo.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright (C) 2018 Velocity Contributors\n+ *\n+ * The Velocity API is licensed under the terms of the MIT License. For more details,\n+ * reference the LICENSE file in the api top-level directory.\n+ */\n+\n+package com.velocitypowered.api.proxy.player;\n+\n+import net.kyori.adventure.text.Component;\n+import org.checkerframework.checker.nullness.qual.Nullable;\n+\n+public interface ResourcePackInfo {\n+\n+  /**\n+   * Gets the link the resource-pack can be found at.\n+   *\n+   * @return the location of the resource-pack\n+   */\n+  String getUrl();\n+\n+  /**\n+   * Gets the {@link Component} that is displayed on the resource-pack prompt.\n+   * This is only displayed if the client version is 1.17 or newer.\n+   *\n+   * @return the prompt if present or null otherwise\n+   */\n+  @Nullable\n+  Component getPrompt();\n+\n+  /**\n+   * Gets whether or not the acceptance of the resource-pack is enforced.\n+   * See {@link Builder#setShouldForce(boolean)} for more information.\n+   *\n+   * @return whether or not to force usage of this resource-pack\n+   */\n+  boolean getShouldForce();\n+\n+  /**\n+   * Gets the SHA-1 hash of the resource-pack\n+   * See {@link Builder#setHash(byte[])} for more information.\n+   *\n+   * @return the hash if present or null otherwise\n+   */\n+  @Nullable\n+  byte[] getHash();\n+\n+  /**\n+   * Gets the {@link Origin} of the resource-pack.\n+   *\n+   * @return the origin of the resource pack\n+   */\n+  Origin getOrigin();\n+\n+  interface Builder {\n+\n+    /**\n+     * Sets the resource-pack as required to play on the network.\n+     * This feature was introduced in 1.17.\n+     * Setting this to true has one of two effects:\n+     * If the client is on 1.17 or newer:\n+     *  - The resource-pack prompt will display without a decline button\n+     *  - Accept or disconnect are the only available options but players may still press escape.\n+     *  - Forces the resource-pack offer prompt to display even if the player has\n+     *    previously declined or disabled resource packs\n+     *  - The player will be disconnected from the network if they close/skip the prompt.\n+     * If the client is on a version older than 1.17:\n+     *  - If the player accepts the resource pack or has previously accepted a resource-pack\n+     *    then nothing else will happen.\n+     *  - If the player declines the resource pack or has previously declined a resource-pack\n+     *    the player will be disconnected from the network\n+     *\n+     * @param shouldForce whether or not to force the client to accept the resource pack\n+     */\n+    Builder setShouldForce(boolean shouldForce);\n+\n+    /**\n+     * Sets the SHA-1 hash of the provided resource pack.\n+     * Note: It is recommended to always set this hash.\n+     * If this hash is not set/ not present then the client will always download\n+     * the resource pack even if it may still be cached. By having this hash present,\n+     * the client will check first whether or not a resource pack by this hash is cached\n+     * before downloading.\n+     *\n+     * @param hash the SHA-1 hash of the resource-pack\n+     */\n+    Builder setHash(@Nullable byte[] hash);\n+\n+    /**\n+     * Sets a {@link Component} to display on the download prompt.\n+     * This will only display if the client version is 1.17 or newer.\n+     *\n+     * @param prompt the component to display\n+     */\n+    Builder setPrompt(@Nullable Component prompt);\n+\n+    /**\n+     * Builds the {@link ResourcePackInfo} from the provided info for use with\n+     * {@link com.velocitypowered.api.proxy.Player#sendResourcePackOffer(ResourcePackInfo)}.\n+     * Note: Some features may be version-dependent. Check before use.\n+     *\n+     * @return a ResourcePackInfo instance from the provided information\n+     */\n+    ResourcePackInfo build();\n+  }\n+\n+  /**\n+   * Represents the origin of the resource-pack.\n+   */\n+  enum Origin {\n+    /**\n+     * Resource-pack originated from the downstream server.\n+     */\n+    DOWNSTREAM_SERVER,\n+    /**\n+     * The player declined to download the resource pack.\n+     */\n+    PLUGIN_ON_PROXY", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "100eedf1023f742b9d73c5c00cb1489e7401713f"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTUwNDI0NA==", "bodyText": "I know and its fixed, but till https://github.com/VelocityPowered/Velocity/pull/382/files#r640721589 is resolved I wont push a commit to fix it", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r645504244", "createdAt": "2021-06-04T11:40:15Z", "author": {"login": "Xernium"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/player/ResourcePackInfo.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright (C) 2018 Velocity Contributors\n+ *\n+ * The Velocity API is licensed under the terms of the MIT License. For more details,\n+ * reference the LICENSE file in the api top-level directory.\n+ */\n+\n+package com.velocitypowered.api.proxy.player;\n+\n+import net.kyori.adventure.text.Component;\n+import org.checkerframework.checker.nullness.qual.Nullable;\n+\n+public interface ResourcePackInfo {\n+\n+  /**\n+   * Gets the link the resource-pack can be found at.\n+   *\n+   * @return the location of the resource-pack\n+   */\n+  String getUrl();\n+\n+  /**\n+   * Gets the {@link Component} that is displayed on the resource-pack prompt.\n+   * This is only displayed if the client version is 1.17 or newer.\n+   *\n+   * @return the prompt if present or null otherwise\n+   */\n+  @Nullable\n+  Component getPrompt();\n+\n+  /**\n+   * Gets whether or not the acceptance of the resource-pack is enforced.\n+   * See {@link Builder#setShouldForce(boolean)} for more information.\n+   *\n+   * @return whether or not to force usage of this resource-pack\n+   */\n+  boolean getShouldForce();\n+\n+  /**\n+   * Gets the SHA-1 hash of the resource-pack\n+   * See {@link Builder#setHash(byte[])} for more information.\n+   *\n+   * @return the hash if present or null otherwise\n+   */\n+  @Nullable\n+  byte[] getHash();\n+\n+  /**\n+   * Gets the {@link Origin} of the resource-pack.\n+   *\n+   * @return the origin of the resource pack\n+   */\n+  Origin getOrigin();\n+\n+  interface Builder {\n+\n+    /**\n+     * Sets the resource-pack as required to play on the network.\n+     * This feature was introduced in 1.17.\n+     * Setting this to true has one of two effects:\n+     * If the client is on 1.17 or newer:\n+     *  - The resource-pack prompt will display without a decline button\n+     *  - Accept or disconnect are the only available options but players may still press escape.\n+     *  - Forces the resource-pack offer prompt to display even if the player has\n+     *    previously declined or disabled resource packs\n+     *  - The player will be disconnected from the network if they close/skip the prompt.\n+     * If the client is on a version older than 1.17:\n+     *  - If the player accepts the resource pack or has previously accepted a resource-pack\n+     *    then nothing else will happen.\n+     *  - If the player declines the resource pack or has previously declined a resource-pack\n+     *    the player will be disconnected from the network\n+     *\n+     * @param shouldForce whether or not to force the client to accept the resource pack\n+     */\n+    Builder setShouldForce(boolean shouldForce);\n+\n+    /**\n+     * Sets the SHA-1 hash of the provided resource pack.\n+     * Note: It is recommended to always set this hash.\n+     * If this hash is not set/ not present then the client will always download\n+     * the resource pack even if it may still be cached. By having this hash present,\n+     * the client will check first whether or not a resource pack by this hash is cached\n+     * before downloading.\n+     *\n+     * @param hash the SHA-1 hash of the resource-pack\n+     */\n+    Builder setHash(@Nullable byte[] hash);\n+\n+    /**\n+     * Sets a {@link Component} to display on the download prompt.\n+     * This will only display if the client version is 1.17 or newer.\n+     *\n+     * @param prompt the component to display\n+     */\n+    Builder setPrompt(@Nullable Component prompt);\n+\n+    /**\n+     * Builds the {@link ResourcePackInfo} from the provided info for use with\n+     * {@link com.velocitypowered.api.proxy.Player#sendResourcePackOffer(ResourcePackInfo)}.\n+     * Note: Some features may be version-dependent. Check before use.\n+     *\n+     * @return a ResourcePackInfo instance from the provided information\n+     */\n+    ResourcePackInfo build();\n+  }\n+\n+  /**\n+   * Represents the origin of the resource-pack.\n+   */\n+  enum Origin {\n+    /**\n+     * Resource-pack originated from the downstream server.\n+     */\n+    DOWNSTREAM_SERVER,\n+    /**\n+     * The player declined to download the resource pack.\n+     */\n+    PLUGIN_ON_PROXY", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTUwMzExMg=="}, "originalCommit": {"oid": "100eedf1023f742b9d73c5c00cb1489e7401713f"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA5ODk1NTA4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/proxy/Player.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNDo0OTo1MVrOJoErtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNDo0OTo1MVrOJoErtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTk5OTU0MA==", "bodyText": "Nit: use the @see javadoc tag.", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r645999540", "createdAt": "2021-06-05T14:49:51Z", "author": {"login": "hugmanrique"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/Player.java", "diffHunk": "@@ -238,6 +238,8 @@ default void sendMessage(net.kyori.text.Component component) {\n    * Queues and sends a new Resource-pack offer to the player.\n    * To monitor the status of the sent resource pack, subscribe to\n    * {@link PlayerResourcePackStatusEvent}.\n+   * To create a {@link ResourcePackInfo} use the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b29a075e0abe4e9aeca393975a1cfbead35ee9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA5ODk1NTc3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/proxy/ProxyServer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNDo1MDozMFrOJoEsBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNDo1MDozMFrOJoEsBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTk5OTYyMg==", "bodyText": "Nit: use the <ul> and <li> elements.", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r645999622", "createdAt": "2021-06-05T14:50:30Z", "author": {"login": "hugmanrique"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/ProxyServer.java", "diffHunk": "@@ -225,14 +225,16 @@ BossBar createBossBar(net.kyori.text.Component title, @NonNull BossBarColor colo\n    *\n    * <p>Note: The resource-pack location should always:\n    * - Use HTTPS with a valid certificate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b29a075e0abe4e9aeca393975a1cfbead35ee9"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA5ODk1NjIxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/proxy/player/ResourcePackInfo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNDo1MDo1MFrOJoEsOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNDo1MDo1MFrOJoEsOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTk5OTY3NQ==", "bodyText": "Nit: remove the dash between \"resource\" and \"pack\"", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r645999675", "createdAt": "2021-06-05T14:50:50Z", "author": {"login": "hugmanrique"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/player/ResourcePackInfo.java", "diffHunk": "@@ -113,7 +113,7 @@\n      */\n     DOWNSTREAM_SERVER,\n     /**\n-     * The player declined to download the resource pack.\n+     * The resource-pack originated from a plugin on this proxy.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b29a075e0abe4e9aeca393975a1cfbead35ee9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA5ODk1NzAwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/event/player/PlayerResourcePackStatusEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNDo1MTo0NFrOJoEsoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNDo1MTo0NFrOJoEsoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTk5OTc3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Instates this event.\n          \n          \n            \n               * Instantiates this event.", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r645999777", "createdAt": "2021-06-05T14:51:44Z", "author": {"login": "hugmanrique"}, "path": "api/src/main/java/com/velocitypowered/api/event/player/PlayerResourcePackStatusEvent.java", "diffHunk": "@@ -18,10 +22,29 @@\n \n   private final Player player;\n   private final Status status;\n+  private final @MonotonicNonNull ResourcePackInfo packInfo;\n+  private boolean overwriteKick;\n \n+\n+  /**\n+   * Instates this event.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b29a075e0abe4e9aeca393975a1cfbead35ee9"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA5ODk1NzI4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/event/player/PlayerResourcePackStatusEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNDo1MjowMVrOJoEsxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNDo1MjowMVrOJoEsxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTk5OTgxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Instates this event.\n          \n          \n            \n               * Instantiates this event.", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r645999815", "createdAt": "2021-06-05T14:52:01Z", "author": {"login": "hugmanrique"}, "path": "api/src/main/java/com/velocitypowered/api/event/player/PlayerResourcePackStatusEvent.java", "diffHunk": "@@ -18,10 +22,29 @@\n \n   private final Player player;\n   private final Status status;\n+  private final @MonotonicNonNull ResourcePackInfo packInfo;\n+  private boolean overwriteKick;\n \n+\n+  /**\n+   * Instates this event.\n+   * @deprecated Use {@link PlayerResourcePackStatusEvent#PlayerResourcePackStatusEvent\n+   *             (Player, Status, ResourcePackInfo)} instead.\n+   */\n+  @Deprecated\n   public PlayerResourcePackStatusEvent(Player player, Status status) {\n     this.player = Preconditions.checkNotNull(player, \"player\");\n     this.status = Preconditions.checkNotNull(status, \"status\");\n+    this.packInfo = null;\n+  }\n+\n+  /**\n+   * Instates this event.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b29a075e0abe4e9aeca393975a1cfbead35ee9"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA5ODk1ODM1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/velocitypowered/api/proxy/player/ResourcePackInfo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNDo1MzozM1rOJoEtTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNDo1MzozM1rOJoEtTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NTk5OTk1MQ==", "bodyText": "Nit: use <ul> and <li>.", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r645999951", "createdAt": "2021-06-05T14:53:33Z", "author": {"login": "hugmanrique"}, "path": "api/src/main/java/com/velocitypowered/api/proxy/player/ResourcePackInfo.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright (C) 2018 Velocity Contributors\n+ *\n+ * The Velocity API is licensed under the terms of the MIT License. For more details,\n+ * reference the LICENSE file in the api top-level directory.\n+ */\n+\n+package com.velocitypowered.api.proxy.player;\n+\n+import net.kyori.adventure.text.Component;\n+import org.checkerframework.checker.nullness.qual.Nullable;\n+\n+public interface ResourcePackInfo {\n+\n+  /**\n+   * Gets the link the resource-pack can be found at.\n+   *\n+   * @return the location of the resource-pack\n+   */\n+  String getUrl();\n+\n+  /**\n+   * Gets the {@link Component} that is displayed on the resource-pack prompt.\n+   * This is only displayed if the client version is 1.17 or newer.\n+   *\n+   * @return the prompt if present or null otherwise\n+   */\n+  @Nullable\n+  Component getPrompt();\n+\n+  /**\n+   * Gets whether or not the acceptance of the resource-pack is enforced.\n+   * See {@link Builder#setShouldForce(boolean)} for more information.\n+   *\n+   * @return whether or not to force usage of this resource-pack\n+   */\n+  boolean getShouldForce();\n+\n+  /**\n+   * Gets the SHA-1 hash of the resource-pack\n+   * See {@link Builder#setHash(byte[])} for more information.\n+   *\n+   * @return the hash if present or null otherwise\n+   */\n+  @Nullable\n+  byte[] getHash();\n+\n+  /**\n+   * Gets the {@link Origin} of the resource-pack.\n+   *\n+   * @return the origin of the resource pack\n+   */\n+  Origin getOrigin();\n+\n+  interface Builder {\n+\n+    /**\n+     * Sets the resource-pack as required to play on the network.\n+     * This feature was introduced in 1.17.\n+     * Setting this to true has one of two effects:\n+     * If the client is on 1.17 or newer:\n+     *  - The resource-pack prompt will display without a decline button", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b29a075e0abe4e9aeca393975a1cfbead35ee9"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA5ODk2NDczOnYy", "diffSide": "RIGHT", "path": "proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/GenericTitlePacket.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNTowMDo1OVrOJoEwbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNTo1NzozNVrOJoFGfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjAwMDc0OQ==", "bodyText": "This logic is prone to bugs, I would store two different fields for pre-1.11 and post-1.11.", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r646000749", "createdAt": "2021-06-05T15:00:59Z", "author": {"login": "hugmanrique"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/GenericTitlePacket.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright (C) 2018 Velocity Contributors\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.velocitypowered.proxy.protocol.packet.title;\n+\n+import com.velocitypowered.api.network.ProtocolVersion;\n+import com.velocitypowered.proxy.protocol.MinecraftPacket;\n+import com.velocitypowered.proxy.protocol.ProtocolUtils;\n+import io.netty.buffer.ByteBuf;\n+import org.checkerframework.checker.nullness.qual.Nullable;\n+\n+public abstract class GenericTitlePacket implements MinecraftPacket {\n+\n+  public enum ActionType {\n+    SET_TITLE(0),\n+    SET_SUBTITLE(1),\n+    SET_ACTION_BAR(2),\n+    SET_TIMES(3),\n+    HIDE(4),\n+    RESET(5);\n+\n+    private final int action;\n+\n+    ActionType(int action) {\n+      this.action = action;\n+    }\n+\n+    public int getAction(ProtocolVersion version) {\n+      return version.compareTo(ProtocolVersion.MINECRAFT_1_11) < 0\n+              ? action > 2 ? action - 1 : action : action;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b29a075e0abe4e9aeca393975a1cfbead35ee9"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjAwNTg3OA==", "bodyText": "This is a clientbount packet and we don't expect the server to send wrong data. I'm not keen on duplicate code so this is here to stay.", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r646005878", "createdAt": "2021-06-05T15:52:07Z", "author": {"login": "Xernium"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/GenericTitlePacket.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright (C) 2018 Velocity Contributors\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.velocitypowered.proxy.protocol.packet.title;\n+\n+import com.velocitypowered.api.network.ProtocolVersion;\n+import com.velocitypowered.proxy.protocol.MinecraftPacket;\n+import com.velocitypowered.proxy.protocol.ProtocolUtils;\n+import io.netty.buffer.ByteBuf;\n+import org.checkerframework.checker.nullness.qual.Nullable;\n+\n+public abstract class GenericTitlePacket implements MinecraftPacket {\n+\n+  public enum ActionType {\n+    SET_TITLE(0),\n+    SET_SUBTITLE(1),\n+    SET_ACTION_BAR(2),\n+    SET_TIMES(3),\n+    HIDE(4),\n+    RESET(5);\n+\n+    private final int action;\n+\n+    ActionType(int action) {\n+      this.action = action;\n+    }\n+\n+    public int getAction(ProtocolVersion version) {\n+      return version.compareTo(ProtocolVersion.MINECRAFT_1_11) < 0\n+              ? action > 2 ? action - 1 : action : action;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjAwMDc0OQ=="}, "originalCommit": {"oid": "59b29a075e0abe4e9aeca393975a1cfbead35ee9"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjAwNjM5OA==", "bodyText": "On second thought, adding an extra field isn't necessary, but I would at least add parentheses to make the intention of the nested ternaries clear.", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r646006398", "createdAt": "2021-06-05T15:57:35Z", "author": {"login": "hugmanrique"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/GenericTitlePacket.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright (C) 2018 Velocity Contributors\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.velocitypowered.proxy.protocol.packet.title;\n+\n+import com.velocitypowered.api.network.ProtocolVersion;\n+import com.velocitypowered.proxy.protocol.MinecraftPacket;\n+import com.velocitypowered.proxy.protocol.ProtocolUtils;\n+import io.netty.buffer.ByteBuf;\n+import org.checkerframework.checker.nullness.qual.Nullable;\n+\n+public abstract class GenericTitlePacket implements MinecraftPacket {\n+\n+  public enum ActionType {\n+    SET_TITLE(0),\n+    SET_SUBTITLE(1),\n+    SET_ACTION_BAR(2),\n+    SET_TIMES(3),\n+    HIDE(4),\n+    RESET(5);\n+\n+    private final int action;\n+\n+    ActionType(int action) {\n+      this.action = action;\n+    }\n+\n+    public int getAction(ProtocolVersion version) {\n+      return version.compareTo(ProtocolVersion.MINECRAFT_1_11) < 0\n+              ? action > 2 ? action - 1 : action : action;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjAwMDc0OQ=="}, "originalCommit": {"oid": "59b29a075e0abe4e9aeca393975a1cfbead35ee9"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA5ODk2NTA5OnYy", "diffSide": "RIGHT", "path": "proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/LegacyTitlePacket.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNTowMToyOVrOJoEwlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNlQwMDoyMDoxM1rOJoH5xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjAwMDc5MA==", "bodyText": "I'm on GH so don't have an IDE, is this override needed?", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r646000790", "createdAt": "2021-06-05T15:01:29Z", "author": {"login": "hugmanrique"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/LegacyTitlePacket.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * Copyright (C) 2018 Velocity Contributors\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.velocitypowered.proxy.protocol.packet.title;\n+\n+import com.velocitypowered.api.network.ProtocolVersion;\n+import com.velocitypowered.proxy.connection.MinecraftSessionHandler;\n+import com.velocitypowered.proxy.protocol.ProtocolUtils;\n+import io.netty.buffer.ByteBuf;\n+import org.checkerframework.checker.nullness.qual.Nullable;\n+\n+public class LegacyTitlePacket extends GenericTitlePacket {\n+\n+  private @Nullable String component;\n+  private int fadeIn;\n+  private int stay;\n+  private int fadeOut;\n+\n+  @Override\n+  public void encode(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion version) {\n+    if (version.compareTo(ProtocolVersion.MINECRAFT_1_11) < 0\n+            && getAction() == ActionType.SET_ACTION_BAR) {\n+      throw new IllegalStateException(\"Action bars are only supported on 1.11 and newer\");\n+    }\n+    ProtocolUtils.writeVarInt(buf, getAction().getAction(version));\n+\n+    switch (getAction()) {\n+      case SET_TITLE:\n+      case SET_SUBTITLE:\n+      case SET_ACTION_BAR:\n+        if (component == null) {\n+          throw new IllegalStateException(\"No component found for \" + getAction());\n+        }\n+        ProtocolUtils.writeString(buf, component);\n+        break;\n+      case SET_TIMES:\n+        buf.writeInt(fadeIn);\n+        buf.writeInt(stay);\n+        buf.writeInt(fadeOut);\n+        break;\n+      case HIDE:\n+      case RESET:\n+        break;\n+      default:\n+        throw new UnsupportedOperationException(\"Unknown action \" + getAction());\n+    }\n+\n+  }\n+\n+  @Override\n+  public void setAction(ActionType action) {\n+    super.setAction(action);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b29a075e0abe4e9aeca393975a1cfbead35ee9"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjA1MjI5Mw==", "bodyText": "It doesn't appear to be (it extends GenericTitlePacket and this could be implicitly implemented as an override by deleting this method.)", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r646052293", "createdAt": "2021-06-06T00:20:13Z", "author": {"login": "astei"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/LegacyTitlePacket.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * Copyright (C) 2018 Velocity Contributors\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.velocitypowered.proxy.protocol.packet.title;\n+\n+import com.velocitypowered.api.network.ProtocolVersion;\n+import com.velocitypowered.proxy.connection.MinecraftSessionHandler;\n+import com.velocitypowered.proxy.protocol.ProtocolUtils;\n+import io.netty.buffer.ByteBuf;\n+import org.checkerframework.checker.nullness.qual.Nullable;\n+\n+public class LegacyTitlePacket extends GenericTitlePacket {\n+\n+  private @Nullable String component;\n+  private int fadeIn;\n+  private int stay;\n+  private int fadeOut;\n+\n+  @Override\n+  public void encode(ByteBuf buf, ProtocolUtils.Direction direction, ProtocolVersion version) {\n+    if (version.compareTo(ProtocolVersion.MINECRAFT_1_11) < 0\n+            && getAction() == ActionType.SET_ACTION_BAR) {\n+      throw new IllegalStateException(\"Action bars are only supported on 1.11 and newer\");\n+    }\n+    ProtocolUtils.writeVarInt(buf, getAction().getAction(version));\n+\n+    switch (getAction()) {\n+      case SET_TITLE:\n+      case SET_SUBTITLE:\n+      case SET_ACTION_BAR:\n+        if (component == null) {\n+          throw new IllegalStateException(\"No component found for \" + getAction());\n+        }\n+        ProtocolUtils.writeString(buf, component);\n+        break;\n+      case SET_TIMES:\n+        buf.writeInt(fadeIn);\n+        buf.writeInt(stay);\n+        buf.writeInt(fadeOut);\n+        break;\n+      case HIDE:\n+      case RESET:\n+        break;\n+      default:\n+        throw new UnsupportedOperationException(\"Unknown action \" + getAction());\n+    }\n+\n+  }\n+\n+  @Override\n+  public void setAction(ActionType action) {\n+    super.setAction(action);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjAwMDc5MA=="}, "originalCommit": {"oid": "59b29a075e0abe4e9aeca393975a1cfbead35ee9"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA5ODk2Njk2OnYy", "diffSide": "RIGHT", "path": "proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/TitleTextPacket.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNTowMzo0NVrOJoExdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wNVQxNTowMzo0NVrOJoExdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0NjAwMTAxNA==", "bodyText": "Since some GenericTitlePacket subclasses force an specific action type, I wouldn't expose the setAction method (e.g. used by constructTitlePacket). Instead, I think this is only needed for LegacyTitlePacket? I'm probably wrong though.", "url": "https://github.com/VelocityPowered/Velocity/pull/382#discussion_r646001014", "createdAt": "2021-06-05T15:03:45Z", "author": {"login": "hugmanrique"}, "path": "proxy/src/main/java/com/velocitypowered/proxy/protocol/packet/title/TitleTextPacket.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright (C) 2018 Velocity Contributors\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n+ */\n+\n+package com.velocitypowered.proxy.protocol.packet.title;\n+\n+import com.velocitypowered.api.network.ProtocolVersion;\n+import com.velocitypowered.proxy.connection.MinecraftSessionHandler;\n+import com.velocitypowered.proxy.protocol.ProtocolUtils;\n+import io.netty.buffer.ByteBuf;\n+\n+public class TitleTextPacket extends GenericTitlePacket {\n+\n+  private String component;\n+\n+  public TitleTextPacket() {\n+    setAction(ActionType.SET_TITLE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59b29a075e0abe4e9aeca393975a1cfbead35ee9"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2722, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}