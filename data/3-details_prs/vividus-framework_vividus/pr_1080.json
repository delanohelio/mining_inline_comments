{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMTg5MjIz", "number": 1080, "title": "[extension-selenium] Add ability to verify elements order", "bodyText": "Superseds #807\nCloses #707", "createdAt": "2020-10-30T17:56:34Z", "url": "https://github.com/vividus-framework/vividus/pull/1080", "merged": true, "mergeCommit": {"oid": "82c1c2fe60778dbfc4e93ac69c0e336daa30d989"}, "closed": true, "closedAt": "2020-11-02T10:53:13Z", "author": {"login": "uarlouski"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXtwlGgBqjM5NDMyMjEzMjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYiAHbgFqTUyMTUwNTEzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "48c228c9adb46be11faec6150226b0e285558962", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/48c228c9adb46be11faec6150226b0e285558962", "committedDate": "2020-10-30T17:55:27Z", "message": "[extension-selenium] Add elements number validation"}, "afterCommit": {"oid": "39dc6ac4d1ee17704ec5fac25694a4ab0175f291", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/39dc6ac4d1ee17704ec5fac25694a4ab0175f291", "committedDate": "2020-10-30T21:36:04Z", "message": "draft"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "39dc6ac4d1ee17704ec5fac25694a4ab0175f291", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/39dc6ac4d1ee17704ec5fac25694a4ab0175f291", "committedDate": "2020-10-30T21:36:04Z", "message": "draft"}, "afterCommit": {"oid": "901df0530c10a875509fc6b3764bc1c662906776", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/901df0530c10a875509fc6b3764bc1c662906776", "committedDate": "2020-11-01T12:42:44Z", "message": "[extension-selenium] Add ability to verify elements order"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMjI4OTcy", "url": "https://github.com/vividus-framework/vividus/pull/1080#pullrequestreview-521228972", "createdAt": "2020-11-01T14:20:17Z", "commit": {"oid": "901df0530c10a875509fc6b3764bc1c662906776"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNDoyMDoxN1rOHrvcVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNDozMToxMVrOHrvg3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYyODExOA==", "bodyText": "since it's used I propose to do not move it to a new separate page", "url": "https://github.com/vividus-framework/vividus/pull/1080#discussion_r515628118", "createdAt": "2020-11-01T14:20:17Z", "author": {"login": "valfirst"}, "path": "docs/modules/parameters/pages/string-sorting-rule.adoc", "diffHunk": "@@ -0,0 +1,24 @@\n+= String sorting rule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "901df0530c10a875509fc6b3764bc1c662906776"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYyODgwMQ==", "bodyText": "they are sorted by their text", "url": "https://github.com/vividus-framework/vividus/pull/1080#discussion_r515628801", "createdAt": "2020-11-01T14:26:44Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/partials/generic-ui-steps.adoc", "diffHunk": "@@ -314,3 +314,32 @@ Then element located 'id(banner)' exists for 'PT5S' duration\n  When I navigate back\n  Then number of elements found by `xpath(//*[@*='Welcome'])` is equal to `0`\n  ----\n+\n+=== Verify elements order\n+\n+ ==== *_Info_*\n+\n+ Gets a collection of elements by locator and checks that they are by their text sorted in the specified order. The collection should have more than 1 element with not empty text.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "901df0530c10a875509fc6b3764bc1c662906776"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYyODk2Ng==", "bodyText": "ComparisonRule rule = ComparisonRule.GREATER_THAN;\n        int requiredNumber = 1;\n?", "url": "https://github.com/vividus-framework/vividus/pull/1080#discussion_r515628966", "createdAt": "2020-11-01T14:28:27Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/GenericElementSteps.java", "diffHunk": "@@ -77,4 +95,52 @@ public void assertElementsNumberInState(State state, Locator locator, Comparison\n         assertElementsNumber(locator, comparisonRule, quantity)\n                 .forEach(e -> baseValidations.assertElementState(description, state, e));\n     }\n+\n+    /**\n+     * Verifies if the elements located by the <b>locator</b> are sorted in <b>sortingOrder</b> order by their text\n+     * @param locator locator to locate elements\n+     * @param sortingOrder sorting order, can be either <b>ASCENDING</b> or <b>DESCENDING</b>\n+     */\n+    @Then(\"elements located `$locator` are sorted by text in $sortingOrder order\")\n+    public void areElementSorted(Locator locator, StringSortingOrder sortingOrder)\n+    {\n+        ComparisonRule rule = ComparisonRule.GREATER_THAN_OR_EQUAL_TO;\n+        int requiredNumber = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "901df0530c10a875509fc6b3764bc1c662906776"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYyOTAzMA==", "bodyText": "\"The elements to check the sorting\"?", "url": "https://github.com/vividus-framework/vividus/pull/1080#discussion_r515629030", "createdAt": "2020-11-01T14:29:03Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/GenericElementSteps.java", "diffHunk": "@@ -77,4 +95,52 @@ public void assertElementsNumberInState(State state, Locator locator, Comparison\n         assertElementsNumber(locator, comparisonRule, quantity)\n                 .forEach(e -> baseValidations.assertElementState(description, state, e));\n     }\n+\n+    /**\n+     * Verifies if the elements located by the <b>locator</b> are sorted in <b>sortingOrder</b> order by their text\n+     * @param locator locator to locate elements\n+     * @param sortingOrder sorting order, can be either <b>ASCENDING</b> or <b>DESCENDING</b>\n+     */\n+    @Then(\"elements located `$locator` are sorted by text in $sortingOrder order\")\n+    public void areElementSorted(Locator locator, StringSortingOrder sortingOrder)\n+    {\n+        ComparisonRule rule = ComparisonRule.GREATER_THAN_OR_EQUAL_TO;\n+        int requiredNumber = 2;\n+\n+        String order = sortingOrder.name().toLowerCase();\n+        List<WebElement> elements = baseValidations.assertNumberOfElementsFound(\n+                format(\"The elements to check the %s order\", order), locator,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "901df0530c10a875509fc6b3764bc1c662906776"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYyOTEzMg==", "bodyText": "simple loop is better here", "url": "https://github.com/vividus-framework/vividus/pull/1080#discussion_r515629132", "createdAt": "2020-11-01T14:29:51Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/GenericElementSteps.java", "diffHunk": "@@ -77,4 +95,52 @@ public void assertElementsNumberInState(State state, Locator locator, Comparison\n         assertElementsNumber(locator, comparisonRule, quantity)\n                 .forEach(e -> baseValidations.assertElementState(description, state, e));\n     }\n+\n+    /**\n+     * Verifies if the elements located by the <b>locator</b> are sorted in <b>sortingOrder</b> order by their text\n+     * @param locator locator to locate elements\n+     * @param sortingOrder sorting order, can be either <b>ASCENDING</b> or <b>DESCENDING</b>\n+     */\n+    @Then(\"elements located `$locator` are sorted by text in $sortingOrder order\")\n+    public void areElementSorted(Locator locator, StringSortingOrder sortingOrder)\n+    {\n+        ComparisonRule rule = ComparisonRule.GREATER_THAN_OR_EQUAL_TO;\n+        int requiredNumber = 2;\n+\n+        String order = sortingOrder.name().toLowerCase();\n+        List<WebElement> elements = baseValidations.assertNumberOfElementsFound(\n+                format(\"The elements to check the %s order\", order), locator,\n+                requiredNumber, rule);\n+\n+        Matcher<Integer> requiredSizeMatcher = rule.getComparisonRule(requiredNumber);\n+        if (requiredSizeMatcher.matches(elements.size()))\n+        {\n+            IntStream.range(0, elements.size())\n+                     .mapToObj(index -> entry(index, getText(elements.get(index))))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "901df0530c10a875509fc6b3764bc1c662906776"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYyOTI3Ng==", "bodyText": "validateRule", "url": "https://github.com/vividus-framework/vividus/pull/1080#discussion_r515629276", "createdAt": "2020-11-01T14:31:11Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/validation/BaseValidations.java", "diffHunk": "@@ -381,6 +386,19 @@ public boolean assertIfElementDoesNotExist(String businessDescription, String sy\n         }, List.of());\n     }\n \n+    private static void verifyRule(Locator locator, int number, ComparisonRule comparisonRule)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "901df0530c10a875509fc6b3764bc1c662906776"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "901df0530c10a875509fc6b3764bc1c662906776", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/901df0530c10a875509fc6b3764bc1c662906776", "committedDate": "2020-11-01T12:42:44Z", "message": "[extension-selenium] Add ability to verify elements order"}, "afterCommit": {"oid": "65c211901303dc88f61a77edd74c68fb5cc6a06e", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/65c211901303dc88f61a77edd74c68fb5cc6a06e", "committedDate": "2020-11-02T06:47:02Z", "message": "[extension-selenium] Add ability to verify elements order"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65c211901303dc88f61a77edd74c68fb5cc6a06e", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/65c211901303dc88f61a77edd74c68fb5cc6a06e", "committedDate": "2020-11-02T06:47:02Z", "message": "[extension-selenium] Add ability to verify elements order"}, "afterCommit": {"oid": "83beedbe8e7cb387300c332cb15b937eed35502a", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/83beedbe8e7cb387300c332cb15b937eed35502a", "committedDate": "2020-11-02T07:03:21Z", "message": "[extension-selenium] Add ability to verify elements order"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83beedbe8e7cb387300c332cb15b937eed35502a", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/83beedbe8e7cb387300c332cb15b937eed35502a", "committedDate": "2020-11-02T07:03:21Z", "message": "[extension-selenium] Add ability to verify elements order"}, "afterCommit": {"oid": "5e3bae6ea9bed4b31714a15f203f6d61f5954122", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/5e3bae6ea9bed4b31714a15f203f6d61f5954122", "committedDate": "2020-11-02T08:27:26Z", "message": "[extension-selenium] Add ability to verify elements order"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNDIwNDUw", "url": "https://github.com/vividus-framework/vividus/pull/1080#pullrequestreview-521420450", "createdAt": "2020-11-02T08:36:22Z", "commit": {"oid": "5e3bae6ea9bed4b31714a15f203f6d61f5954122"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODozNjoyMlrOHr6lcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODozNjoyMlrOHr6lcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgxMDY3Mg==", "bodyText": "just size() > 1 ?", "url": "https://github.com/vividus-framework/vividus/pull/1080#discussion_r515810672", "createdAt": "2020-11-02T08:36:22Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/GenericElementSteps.java", "diffHunk": "@@ -77,4 +90,45 @@ public void assertElementsNumberInState(State state, Locator locator, Comparison\n         assertElementsNumber(locator, comparisonRule, quantity)\n                 .forEach(e -> baseValidations.assertElementState(description, state, e));\n     }\n+\n+    /**\n+     * Verifies if the elements located by the <b>locator</b> are sorted in <b>sortingOrder</b> order by their text\n+     * @param locator locator to locate elements\n+     * @param sortingOrder sorting order, can be either <b>ASCENDING</b> or <b>DESCENDING</b>\n+     */\n+    @Then(\"elements located `$locator` are sorted by text in $sortingOrder order\")\n+    public void areElementSorted(Locator locator, StringSortingOrder sortingOrder)\n+    {\n+        ComparisonRule rule = ComparisonRule.GREATER_THAN;\n+        int requiredNumber = 1;\n+\n+        List<WebElement> elements = baseValidations.assertNumberOfElementsFound(\"The elements to check the sorting\",\n+                locator, requiredNumber, rule);\n+\n+        Matcher<Integer> requiredSizeMatcher = rule.getComparisonRule(requiredNumber);\n+        if (requiredSizeMatcher.matches(elements.size()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3bae6ea9bed4b31714a15f203f6d61f5954122"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNDI0NDA4", "url": "https://github.com/vividus-framework/vividus/pull/1080#pullrequestreview-521424408", "createdAt": "2020-11-02T08:42:12Z", "commit": {"oid": "5e3bae6ea9bed4b31714a15f203f6d61f5954122"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODo0MjoxMlrOHr6yIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODo0NTowOVrOHr64ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgxMzkyMg==", "bodyText": "I think this way of assertion produces unclear messages in the report\nI propose to refactor in the following way:\n\"The element with index %d contains not empty text\"", "url": "https://github.com/vividus-framework/vividus/pull/1080#discussion_r515813922", "createdAt": "2020-11-02T08:42:12Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/GenericElementSteps.java", "diffHunk": "@@ -77,4 +90,45 @@ public void assertElementsNumberInState(State state, Locator locator, Comparison\n         assertElementsNumber(locator, comparisonRule, quantity)\n                 .forEach(e -> baseValidations.assertElementState(description, state, e));\n     }\n+\n+    /**\n+     * Verifies if the elements located by the <b>locator</b> are sorted in <b>sortingOrder</b> order by their text\n+     * @param locator locator to locate elements\n+     * @param sortingOrder sorting order, can be either <b>ASCENDING</b> or <b>DESCENDING</b>\n+     */\n+    @Then(\"elements located `$locator` are sorted by text in $sortingOrder order\")\n+    public void areElementSorted(Locator locator, StringSortingOrder sortingOrder)\n+    {\n+        ComparisonRule rule = ComparisonRule.GREATER_THAN;\n+        int requiredNumber = 1;\n+\n+        List<WebElement> elements = baseValidations.assertNumberOfElementsFound(\"The elements to check the sorting\",\n+                locator, requiredNumber, rule);\n+\n+        Matcher<Integer> requiredSizeMatcher = rule.getComparisonRule(requiredNumber);\n+        if (requiredSizeMatcher.matches(elements.size()))\n+        {\n+            List<String> texts = new ArrayList<>();\n+            for (int index = 0; index < elements.size(); index++)\n+            {\n+                String text = elementActions.getElementText(elements.get(index));\n+                if (softAssert.assertTrue(format(\"The element with index %d contains empty text\", index + 1),\n+                        isNotEmpty(text)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3bae6ea9bed4b31714a15f203f6d61f5954122"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgxNTUzMA==", "bodyText": "\"There are not enough elements with text to check sorting: \"", "url": "https://github.com/vividus-framework/vividus/pull/1080#discussion_r515815530", "createdAt": "2020-11-02T08:45:09Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/GenericElementSteps.java", "diffHunk": "@@ -77,4 +90,45 @@ public void assertElementsNumberInState(State state, Locator locator, Comparison\n         assertElementsNumber(locator, comparisonRule, quantity)\n                 .forEach(e -> baseValidations.assertElementState(description, state, e));\n     }\n+\n+    /**\n+     * Verifies if the elements located by the <b>locator</b> are sorted in <b>sortingOrder</b> order by their text\n+     * @param locator locator to locate elements\n+     * @param sortingOrder sorting order, can be either <b>ASCENDING</b> or <b>DESCENDING</b>\n+     */\n+    @Then(\"elements located `$locator` are sorted by text in $sortingOrder order\")\n+    public void areElementSorted(Locator locator, StringSortingOrder sortingOrder)\n+    {\n+        ComparisonRule rule = ComparisonRule.GREATER_THAN;\n+        int requiredNumber = 1;\n+\n+        List<WebElement> elements = baseValidations.assertNumberOfElementsFound(\"The elements to check the sorting\",\n+                locator, requiredNumber, rule);\n+\n+        Matcher<Integer> requiredSizeMatcher = rule.getComparisonRule(requiredNumber);\n+        if (requiredSizeMatcher.matches(elements.size()))\n+        {\n+            List<String> texts = new ArrayList<>();\n+            for (int index = 0; index < elements.size(); index++)\n+            {\n+                String text = elementActions.getElementText(elements.get(index));\n+                if (softAssert.assertTrue(format(\"The element with index %d contains empty text\", index + 1),\n+                        isNotEmpty(text)))\n+                {\n+                    texts.add(text);\n+                }\n+            }\n+\n+            if (requiredSizeMatcher.matches(texts.size()))\n+            {\n+                softAssert.assertEquals(\n+                        String.format(\"The elements are sorted in %s order\", sortingOrder.name().toLowerCase()), texts,\n+                        texts.stream().sorted(sortingOrder.getSortingType()).collect(toList()));\n+            }\n+            else\n+            {\n+                softAssert.recordFailedAssertion(\"There are not enough elements to check sorting: \" + texts);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3bae6ea9bed4b31714a15f203f6d61f5954122"}, "originalPosition": 82}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5e3bae6ea9bed4b31714a15f203f6d61f5954122", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/5e3bae6ea9bed4b31714a15f203f6d61f5954122", "committedDate": "2020-11-02T08:27:26Z", "message": "[extension-selenium] Add ability to verify elements order"}, "afterCommit": {"oid": "e4834f956f28147dde88e9010d630e4e30c05942", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/e4834f956f28147dde88e9010d630e4e30c05942", "committedDate": "2020-11-02T09:04:59Z", "message": "[extension-selenium] Add ability to verify elements order"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNDUxNjUz", "url": "https://github.com/vividus-framework/vividus/pull/1080#pullrequestreview-521451653", "createdAt": "2020-11-02T09:19:49Z", "commit": {"oid": "e4834f956f28147dde88e9010d630e4e30c05942"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNDc1MTU3", "url": "https://github.com/vividus-framework/vividus/pull/1080#pullrequestreview-521475157", "createdAt": "2020-11-02T09:50:04Z", "commit": {"oid": "e4834f956f28147dde88e9010d630e4e30c05942"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOTo1MDowNFrOHr9J7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOTo1MDowNFrOHr9J7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg1Mjc4MA==", "bodyText": "Could you please describe the behavior when 1 element found?", "url": "https://github.com/vividus-framework/vividus/pull/1080#discussion_r515852780", "createdAt": "2020-11-02T09:50:04Z", "author": {"login": "ikalinin1"}, "path": "docs/modules/plugins/partials/generic-ui-steps.adoc", "diffHunk": "@@ -314,3 +314,32 @@ Then element located 'id(banner)' exists for 'PT5S' duration\n  When I navigate back\n  Then number of elements found by `xpath(//*[@*='Welcome'])` is equal to `0`\n  ----\n+\n+=== Verify elements order\n+\n+ ==== *_Info_*\n+\n+ Gets a collection of elements by locator and checks that they are sorted by their text in the specified order. The collection should have more than 1 element with not empty text.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4834f956f28147dde88e9010d630e4e30c05942"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad4fd9c31b486e7b8c2b453d5c4fe28709f76b7d", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/ad4fd9c31b486e7b8c2b453d5c4fe28709f76b7d", "committedDate": "2020-11-02T10:15:24Z", "message": "[extension-selenium] Add ability to verify elements order"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e4834f956f28147dde88e9010d630e4e30c05942", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/e4834f956f28147dde88e9010d630e4e30c05942", "committedDate": "2020-11-02T09:04:59Z", "message": "[extension-selenium] Add ability to verify elements order"}, "afterCommit": {"oid": "ad4fd9c31b486e7b8c2b453d5c4fe28709f76b7d", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/ad4fd9c31b486e7b8c2b453d5c4fe28709f76b7d", "committedDate": "2020-11-02T10:15:24Z", "message": "[extension-selenium] Add ability to verify elements order"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNTA1MTM3", "url": "https://github.com/vividus-framework/vividus/pull/1080#pullrequestreview-521505137", "createdAt": "2020-11-02T10:28:20Z", "commit": {"oid": "ad4fd9c31b486e7b8c2b453d5c4fe28709f76b7d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4861, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}