{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3ODE4MTEy", "number": 466, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNjo0NDo1MFrODuOi2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMTo0MjowMlrODuV3eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Nzk5Mzg3OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-db/src/main/java/org/vividus/bdd/steps/db/DatabaseSteps.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNjo0NDo1MFrOGAG-pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMDowMzoxM1rOGAO5Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc2NzUyNw==", "bodyText": "Left:   %s - tripled space", "url": "https://github.com/vividus-framework/vividus/pull/466#discussion_r402767527", "createdAt": "2020-04-03T06:44:50Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-db/src/main/java/org/vividus/bdd/steps/db/DatabaseSteps.java", "diffHunk": "@@ -136,6 +137,37 @@ public void executeSql(String sqlQuery, String dbKey, Set<VariableScope> scopes,\n         bddVariableContext.putVariable(scopes, variableName, result);\n     }\n \n+    /**\n+     * Joins two data sets from previously executed SQL queries;\n+     * @param left data set to join\n+     * @param right data set to join\n+     * @param scopes The set (comma separated list of scopes e.g.: STORY, NEXT_BATCHES) of variable's scope<br>\n+     * <i>Available scopes:</i>\n+     * <ul>\n+     * <li><b>STEP</b> - the variable will be available only within the step,\n+     * <li><b>SCENARIO</b> - the variable will be available only within the scenario,\n+     * <li><b>STORY</b> - the variable will be available within the whole story,\n+     * <li><b>NEXT_BATCHES</b> - the variable will be available starting from next batch\n+     * </ul>\n+     * @param variableName a name of variable to store a result\n+     */\n+    @When(\"I merge `$left` and `$right` and save result to $scopes variable `$variableName`\")\n+    public void joinDataSets(List<Map<String, Object>> left, List<Map<String, Object>> right,\n+            Set<VariableScope> scopes, String variableName)\n+    {\n+        List<Map<String, Object>> result = new ArrayList<>(left.size() + right.size());\n+        if (!left.isEmpty() && !right.isEmpty())\n+        {\n+            Set<String> leftHeader = left.get(0).keySet();\n+            Set<String> rightHeader = right.get(0).keySet();\n+            Validate.isTrue(leftHeader.equals(rightHeader),\n+                    \"Data sets should have same columns;\\nLeft:   %s\\nRight: %s\", leftHeader, rightHeader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8d2ecc0bc7f9cb1cc30e2b6dbacb08eeaebfb1d"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg5NjE0Mw==", "bodyText": "Left:  [1, 2, 3]\nRight: [1, 2, 3]", "url": "https://github.com/vividus-framework/vividus/pull/466#discussion_r402896143", "createdAt": "2020-04-03T10:01:11Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-db/src/main/java/org/vividus/bdd/steps/db/DatabaseSteps.java", "diffHunk": "@@ -136,6 +137,37 @@ public void executeSql(String sqlQuery, String dbKey, Set<VariableScope> scopes,\n         bddVariableContext.putVariable(scopes, variableName, result);\n     }\n \n+    /**\n+     * Joins two data sets from previously executed SQL queries;\n+     * @param left data set to join\n+     * @param right data set to join\n+     * @param scopes The set (comma separated list of scopes e.g.: STORY, NEXT_BATCHES) of variable's scope<br>\n+     * <i>Available scopes:</i>\n+     * <ul>\n+     * <li><b>STEP</b> - the variable will be available only within the step,\n+     * <li><b>SCENARIO</b> - the variable will be available only within the scenario,\n+     * <li><b>STORY</b> - the variable will be available within the whole story,\n+     * <li><b>NEXT_BATCHES</b> - the variable will be available starting from next batch\n+     * </ul>\n+     * @param variableName a name of variable to store a result\n+     */\n+    @When(\"I merge `$left` and `$right` and save result to $scopes variable `$variableName`\")\n+    public void joinDataSets(List<Map<String, Object>> left, List<Map<String, Object>> right,\n+            Set<VariableScope> scopes, String variableName)\n+    {\n+        List<Map<String, Object>> result = new ArrayList<>(left.size() + right.size());\n+        if (!left.isEmpty() && !right.isEmpty())\n+        {\n+            Set<String> leftHeader = left.get(0).keySet();\n+            Set<String> rightHeader = right.get(0).keySet();\n+            Validate.isTrue(leftHeader.equals(rightHeader),\n+                    \"Data sets should have same columns;\\nLeft:   %s\\nRight: %s\", leftHeader, rightHeader);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc2NzUyNw=="}, "originalCommit": {"oid": "e8d2ecc0bc7f9cb1cc30e2b6dbacb08eeaebfb1d"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg5NzE5NQ==", "bodyText": "Two is enough you're right", "url": "https://github.com/vividus-framework/vividus/pull/466#discussion_r402897195", "createdAt": "2020-04-03T10:03:13Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-db/src/main/java/org/vividus/bdd/steps/db/DatabaseSteps.java", "diffHunk": "@@ -136,6 +137,37 @@ public void executeSql(String sqlQuery, String dbKey, Set<VariableScope> scopes,\n         bddVariableContext.putVariable(scopes, variableName, result);\n     }\n \n+    /**\n+     * Joins two data sets from previously executed SQL queries;\n+     * @param left data set to join\n+     * @param right data set to join\n+     * @param scopes The set (comma separated list of scopes e.g.: STORY, NEXT_BATCHES) of variable's scope<br>\n+     * <i>Available scopes:</i>\n+     * <ul>\n+     * <li><b>STEP</b> - the variable will be available only within the step,\n+     * <li><b>SCENARIO</b> - the variable will be available only within the scenario,\n+     * <li><b>STORY</b> - the variable will be available within the whole story,\n+     * <li><b>NEXT_BATCHES</b> - the variable will be available starting from next batch\n+     * </ul>\n+     * @param variableName a name of variable to store a result\n+     */\n+    @When(\"I merge `$left` and `$right` and save result to $scopes variable `$variableName`\")\n+    public void joinDataSets(List<Map<String, Object>> left, List<Map<String, Object>> right,\n+            Set<VariableScope> scopes, String variableName)\n+    {\n+        List<Map<String, Object>> result = new ArrayList<>(left.size() + right.size());\n+        if (!left.isEmpty() && !right.isEmpty())\n+        {\n+            Set<String> leftHeader = left.get(0).keySet();\n+            Set<String> rightHeader = right.get(0).keySet();\n+            Validate.isTrue(leftHeader.equals(rightHeader),\n+                    \"Data sets should have same columns;\\nLeft:   %s\\nRight: %s\", leftHeader, rightHeader);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc2NzUyNw=="}, "originalCommit": {"oid": "e8d2ecc0bc7f9cb1cc30e2b6dbacb08eeaebfb1d"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTE5MzU0OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-db/src/main/java/org/vividus/bdd/steps/db/DatabaseSteps.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMTo0MjowMlrOGAR46Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMTo0MjowMlrOGAR46Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk0NjI4MQ==", "bodyText": "please mention this in docs", "url": "https://github.com/vividus-framework/vividus/pull/466#discussion_r402946281", "createdAt": "2020-04-03T11:42:02Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-db/src/main/java/org/vividus/bdd/steps/db/DatabaseSteps.java", "diffHunk": "@@ -136,6 +137,37 @@ public void executeSql(String sqlQuery, String dbKey, Set<VariableScope> scopes,\n         bddVariableContext.putVariable(scopes, variableName, result);\n     }\n \n+    /**\n+     * Joins two data sets from previously executed SQL queries;\n+     * @param left data set to join\n+     * @param right data set to join\n+     * @param scopes The set (comma separated list of scopes e.g.: STORY, NEXT_BATCHES) of variable's scope<br>\n+     * <i>Available scopes:</i>\n+     * <ul>\n+     * <li><b>STEP</b> - the variable will be available only within the step,\n+     * <li><b>SCENARIO</b> - the variable will be available only within the scenario,\n+     * <li><b>STORY</b> - the variable will be available within the whole story,\n+     * <li><b>NEXT_BATCHES</b> - the variable will be available starting from next batch\n+     * </ul>\n+     * @param variableName a name of variable to store a result\n+     */\n+    @When(\"I merge `$left` and `$right` and save result to $scopes variable `$variableName`\")\n+    public void joinDataSets(List<Map<String, Object>> left, List<Map<String, Object>> right,\n+            Set<VariableScope> scopes, String variableName)\n+    {\n+        List<Map<String, Object>> result = new ArrayList<>(left.size() + right.size());\n+        if (!left.isEmpty() && !right.isEmpty())\n+        {\n+            Set<String> leftHeader = left.get(0).keySet();\n+            Set<String> rightHeader = right.get(0).keySet();\n+            Validate.isTrue(leftHeader.equals(rightHeader),\n+                    \"Data sets should have same columns;\\nLeft:  %s\\nRight: %s\", leftHeader, rightHeader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60dd0af1678d739819837014291d9bdc0d7a7279"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 390, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}