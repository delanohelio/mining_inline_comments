{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5Mjc3MTk1", "number": 999, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo0Mzo1OVrOEt9FXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMToyNToyNFrOEv-7lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjIyMTc1OnYy", "diffSide": "RIGHT", "path": "vividus-soft-assert/src/main/java/org/vividus/softassert/issue/TestInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo0Mzo1OVrOHiDwNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo0Mzo1OVrOHiDwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3NTEyNg==", "bodyText": "I propose to use Deque", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r505475126", "createdAt": "2020-10-15T11:43:59Z", "author": {"login": "valfirst"}, "path": "vividus-soft-assert/src/main/java/org/vividus/softassert/issue/TestInfo.java", "diffHunk": "@@ -16,11 +16,13 @@\n \n package org.vividus.softassert.issue;\n \n+import java.util.List;\n+\n public class TestInfo\n {\n     private String testSuite;\n     private String testCase;\n-    private String testStep;\n+    private List<String> testSteps;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3629d5920eea40b302b6d235ba566eb748e47055"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjIyOTExOnYy", "diffSide": "RIGHT", "path": "vividus-soft-assert/src/main/java/org/vividus/softassert/issue/KnownIssueChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo0NTo1OFrOHiD0eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODozMTowMlrOHiuK5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3NjIxNw==", "bodyText": "when can testInfo.getTestSteps() be null?", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r505476217", "createdAt": "2020-10-15T11:45:58Z", "author": {"login": "valfirst"}, "path": "vividus-soft-assert/src/main/java/org/vividus/softassert/issue/KnownIssueChecker.java", "diffHunk": "@@ -142,8 +142,10 @@ boolean isPotentiallyKnown(KnownIssueIdentifier knownIssueIdentifier)\n             return testInfo != null && (\n                     isPotentiallyKnown(testInfo.getTestSuite(), knownIssueIdentifier.getTestSuiteCompiledPattern())\n                             || isPotentiallyKnown(testInfo.getTestCase(),\n-                            knownIssueIdentifier.getTestCaseCompiledPattern()) || isPotentiallyKnown(\n-                            testInfo.getTestStep(), knownIssueIdentifier.getTestStepCompiledPattern()));\n+                            knownIssueIdentifier.getTestCaseCompiledPattern())\n+                            || (testInfo.getTestSteps() != null && !testInfo.getTestSteps().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3629d5920eea40b302b6d235ba566eb748e47055"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3MDA4NA==", "bodyText": "I think no, changed (in tests also)", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r506170084", "createdAt": "2020-10-16T08:31:02Z", "author": {"login": "abudevich"}, "path": "vividus-soft-assert/src/main/java/org/vividus/softassert/issue/KnownIssueChecker.java", "diffHunk": "@@ -142,8 +142,10 @@ boolean isPotentiallyKnown(KnownIssueIdentifier knownIssueIdentifier)\n             return testInfo != null && (\n                     isPotentiallyKnown(testInfo.getTestSuite(), knownIssueIdentifier.getTestSuiteCompiledPattern())\n                             || isPotentiallyKnown(testInfo.getTestCase(),\n-                            knownIssueIdentifier.getTestCaseCompiledPattern()) || isPotentiallyKnown(\n-                            testInfo.getTestStep(), knownIssueIdentifier.getTestStepCompiledPattern()));\n+                            knownIssueIdentifier.getTestCaseCompiledPattern())\n+                            || (testInfo.getTestSteps() != null && !testInfo.getTestSteps().stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3NjIxNw=="}, "originalCommit": {"oid": "3629d5920eea40b302b6d235ba566eb748e47055"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjIzMTc0OnYy", "diffSide": "RIGHT", "path": "vividus/src/main/java/org/vividus/bdd/CompositeStepReporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo0Njo0NVrOHiD2Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo0Njo0NVrOHiD2Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3NjYxOA==", "bodyText": "I propose to use Deque", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r505476618", "createdAt": "2020-10-15T11:46:45Z", "author": {"login": "valfirst"}, "path": "vividus/src/main/java/org/vividus/bdd/CompositeStepReporter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd;\n+\n+import java.util.Stack;\n+\n+import org.vividus.bdd.context.IBddRunContext;\n+\n+public class CompositeStepReporter extends ChainedStoryReporter\n+{\n+    private IBddRunContext bddRunContext;\n+\n+    private Stack<String> steps = new Stack<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3629d5920eea40b302b6d235ba566eb748e47055"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjIzNTU2OnYy", "diffSide": "RIGHT", "path": "vividus/src/main/java/org/vividus/bdd/CompositeStepReporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo0Nzo1NFrOHiD4bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo0Nzo1NFrOHiD4bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3NzIzMA==", "bodyText": "Also I think this logic should be moved to BddRunContext", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r505477230", "createdAt": "2020-10-15T11:47:54Z", "author": {"login": "valfirst"}, "path": "vividus/src/main/java/org/vividus/bdd/CompositeStepReporter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd;\n+\n+import java.util.Stack;\n+\n+import org.vividus.bdd.context.IBddRunContext;\n+\n+public class CompositeStepReporter extends ChainedStoryReporter\n+{\n+    private IBddRunContext bddRunContext;\n+\n+    private Stack<String> steps = new Stack<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3629d5920eea40b302b6d235ba566eb748e47055"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjU5MzgxOnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/context/BddRunContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDo1OTo0OVrOHjDWzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDo1OTo0OVrOHjDWzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUxNzE5Ng==", "bodyText": "it's not thread-safe, this field should be a part of RunningStory class and it should replace String runningStep field: private Deque<String> runningSteps = new LinkedList<>();", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r506517196", "createdAt": "2020-10-16T14:59:49Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/context/BddRunContext.java", "diffHunk": "@@ -31,6 +31,7 @@\n \n     // must be initialized for jbehave-junit-runner\n     private Optional<String> runningBatchKey = Optional.of(\"batch-1\");\n+    private Deque<String> steps = new LinkedList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b93ab2cd14e16a174f2910d307c87a0e4071c3c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjU5ODk2OnYy", "diffSide": "RIGHT", "path": "vividus-soft-assert/src/main/java/org/vividus/softassert/issue/KnownIssueChecker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNTowMDozMFrOHjDaQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNTowMDozMFrOHjDaQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUxODA4MQ==", "bodyText": "the formatting could be improved a bit for better readability", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r506518081", "createdAt": "2020-10-16T15:00:30Z", "author": {"login": "valfirst"}, "path": "vividus-soft-assert/src/main/java/org/vividus/softassert/issue/KnownIssueChecker.java", "diffHunk": "@@ -142,8 +142,10 @@ boolean isPotentiallyKnown(KnownIssueIdentifier knownIssueIdentifier)\n             return testInfo != null && (\n                     isPotentiallyKnown(testInfo.getTestSuite(), knownIssueIdentifier.getTestSuiteCompiledPattern())\n                             || isPotentiallyKnown(testInfo.getTestCase(),\n-                            knownIssueIdentifier.getTestCaseCompiledPattern()) || isPotentiallyKnown(\n-                            testInfo.getTestStep(), knownIssueIdentifier.getTestStepCompiledPattern()));\n+                            knownIssueIdentifier.getTestCaseCompiledPattern())\n+                            || !testInfo.getTestSteps().stream()\n+                                .anyMatch(s -> !isPotentiallyKnown(s,\n+                                        knownIssueIdentifier.getTestStepCompiledPattern())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b93ab2cd14e16a174f2910d307c87a0e4071c3c"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjYzMDE5OnYy", "diffSide": "RIGHT", "path": "vividus/src/main/java/org/vividus/bdd/CompositeStepReporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNTowNTowM1rOHjDvcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNTowNTowM1rOHjDvcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUyMzUwNg==", "bodyText": "the logic of this class should be fully merged into org.vividus.bdd.RunContextStoryReporter", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r506523506", "createdAt": "2020-10-16T15:05:03Z", "author": {"login": "valfirst"}, "path": "vividus/src/main/java/org/vividus/bdd/CompositeStepReporter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd;\n+\n+import javax.inject.Inject;\n+\n+import org.vividus.bdd.context.BddRunContext;\n+\n+public class CompositeStepReporter extends ChainedStoryReporter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b93ab2cd14e16a174f2910d307c87a0e4071c3c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjYzNzkxOnYy", "diffSide": "RIGHT", "path": "vividus/src/main/java/org/vividus/bdd/issue/TestInfoProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNTowNjoxNVrOHjD0_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNTowNjoxNVrOHjD0_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUyNDkyNA==", "bodyText": "use constructor to inject the field", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r506524924", "createdAt": "2020-10-16T15:06:15Z", "author": {"login": "valfirst"}, "path": "vividus/src/main/java/org/vividus/bdd/issue/TestInfoProvider.java", "diffHunk": "@@ -18,16 +18,19 @@\n \n import java.util.Optional;\n \n+import javax.inject.Inject;\n+\n import org.jbehave.core.model.Scenario;\n-import org.vividus.bdd.context.IBddRunContext;\n+import org.vividus.bdd.context.BddRunContext;\n import org.vividus.bdd.model.RunningScenario;\n import org.vividus.bdd.model.RunningStory;\n import org.vividus.softassert.issue.ITestInfoProvider;\n import org.vividus.softassert.issue.TestInfo;\n \n public class TestInfoProvider implements ITestInfoProvider\n {\n-    private IBddRunContext bddRunContext;\n+    @Inject\n+    private BddRunContext bddRunContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b93ab2cd14e16a174f2910d307c87a0e4071c3c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDE5Nzk2OnYy", "diffSide": "LEFT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/RunContextStoryReporter.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMjoyMzozMlrOHkLs6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTozOTowMFrOHkznsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcwMjUwNg==", "bodyText": "why are these methods removed? each method indicates completion of the step", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r507702506", "createdAt": "2020-10-19T12:23:32Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/RunContextStoryReporter.java", "diffHunk": "@@ -67,51 +67,22 @@ public void afterScenario()\n     @Override\n     public void beforeStep(String step)\n     {\n-        bddRunContext.getRunningStory().setRunningStep(step);\n+        bddRunContext.getRunningStory().addRunningStep(step);\n         super.beforeStep(step);\n     }\n \n     @Override\n     public void successful(String step)\n     {\n+        bddRunContext.getRunningStory().removeRunningStep();\n         super.successful(step);\n-        finishStep();\n     }\n \n     @Override\n     public void failed(String step, Throwable cause)\n     {\n         super.failed(step, cause);\n         bddRunContext.getRunningStory().fail();\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void ignorable(String step)\n-    {\n-        super.ignorable(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void comment(String step)\n-    {\n-        super.comment(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void pending(String step)\n-    {\n-        super.pending(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void notPerformed(String step)\n-    {\n-        super.notPerformed(step);\n-        finishStep();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5858b412e39a4b71e1923c63a90f3247563b49d2"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg1MTQ0OA==", "bodyText": "I'm not sure, that still needed override these methods and use finishStep() inside. Every step go through beforeStep() -> successful() -> execution -> KnownIssueChecker methods, and at the moment, when step appears in one of methods higher, it's already not running step.", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r507851448", "createdAt": "2020-10-19T15:36:16Z", "author": {"login": "abudevich"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/RunContextStoryReporter.java", "diffHunk": "@@ -67,51 +67,22 @@ public void afterScenario()\n     @Override\n     public void beforeStep(String step)\n     {\n-        bddRunContext.getRunningStory().setRunningStep(step);\n+        bddRunContext.getRunningStory().addRunningStep(step);\n         super.beforeStep(step);\n     }\n \n     @Override\n     public void successful(String step)\n     {\n+        bddRunContext.getRunningStory().removeRunningStep();\n         super.successful(step);\n-        finishStep();\n     }\n \n     @Override\n     public void failed(String step, Throwable cause)\n     {\n         super.failed(step, cause);\n         bddRunContext.getRunningStory().fail();\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void ignorable(String step)\n-    {\n-        super.ignorable(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void comment(String step)\n-    {\n-        super.comment(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void pending(String step)\n-    {\n-        super.pending(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void notPerformed(String step)\n-    {\n-        super.notPerformed(step);\n-        finishStep();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcwMjUwNg=="}, "originalCommit": {"oid": "5858b412e39a4b71e1923c63a90f3247563b49d2"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg2MTQ0Mg==", "bodyText": "Agree about:\n\nignorable\ncomment\npending\nnotPerformed\n\nbut as for failed I believe we need to removeRunningStep, what do you think?", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r507861442", "createdAt": "2020-10-19T15:48:15Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/RunContextStoryReporter.java", "diffHunk": "@@ -67,51 +67,22 @@ public void afterScenario()\n     @Override\n     public void beforeStep(String step)\n     {\n-        bddRunContext.getRunningStory().setRunningStep(step);\n+        bddRunContext.getRunningStory().addRunningStep(step);\n         super.beforeStep(step);\n     }\n \n     @Override\n     public void successful(String step)\n     {\n+        bddRunContext.getRunningStory().removeRunningStep();\n         super.successful(step);\n-        finishStep();\n     }\n \n     @Override\n     public void failed(String step, Throwable cause)\n     {\n         super.failed(step, cause);\n         bddRunContext.getRunningStory().fail();\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void ignorable(String step)\n-    {\n-        super.ignorable(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void comment(String step)\n-    {\n-        super.comment(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void pending(String step)\n-    {\n-        super.pending(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void notPerformed(String step)\n-    {\n-        super.notPerformed(step);\n-        finishStep();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcwMjUwNg=="}, "originalCommit": {"oid": "5858b412e39a4b71e1923c63a90f3247563b49d2"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg3ODgxMg==", "bodyText": "Maybe no, because when we go to failed() method runningSteps deque is empty", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r507878812", "createdAt": "2020-10-19T16:12:56Z", "author": {"login": "abudevich"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/RunContextStoryReporter.java", "diffHunk": "@@ -67,51 +67,22 @@ public void afterScenario()\n     @Override\n     public void beforeStep(String step)\n     {\n-        bddRunContext.getRunningStory().setRunningStep(step);\n+        bddRunContext.getRunningStory().addRunningStep(step);\n         super.beforeStep(step);\n     }\n \n     @Override\n     public void successful(String step)\n     {\n+        bddRunContext.getRunningStory().removeRunningStep();\n         super.successful(step);\n-        finishStep();\n     }\n \n     @Override\n     public void failed(String step, Throwable cause)\n     {\n         super.failed(step, cause);\n         bddRunContext.getRunningStory().fail();\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void ignorable(String step)\n-    {\n-        super.ignorable(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void comment(String step)\n-    {\n-        super.comment(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void pending(String step)\n-    {\n-        super.pending(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void notPerformed(String step)\n-    {\n-        super.notPerformed(step);\n-        finishStep();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcwMjUwNg=="}, "originalCommit": {"oid": "5858b412e39a4b71e1923c63a90f3247563b49d2"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM1NjUzMA==", "bodyText": "Yes, it will be for case with broken step", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r508356530", "createdAt": "2020-10-20T09:39:00Z", "author": {"login": "abudevich"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/RunContextStoryReporter.java", "diffHunk": "@@ -67,51 +67,22 @@ public void afterScenario()\n     @Override\n     public void beforeStep(String step)\n     {\n-        bddRunContext.getRunningStory().setRunningStep(step);\n+        bddRunContext.getRunningStory().addRunningStep(step);\n         super.beforeStep(step);\n     }\n \n     @Override\n     public void successful(String step)\n     {\n+        bddRunContext.getRunningStory().removeRunningStep();\n         super.successful(step);\n-        finishStep();\n     }\n \n     @Override\n     public void failed(String step, Throwable cause)\n     {\n         super.failed(step, cause);\n         bddRunContext.getRunningStory().fail();\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void ignorable(String step)\n-    {\n-        super.ignorable(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void comment(String step)\n-    {\n-        super.comment(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void pending(String step)\n-    {\n-        super.pending(step);\n-        finishStep();\n-    }\n-\n-    @Override\n-    public void notPerformed(String step)\n-    {\n-        super.notPerformed(step);\n-        finishStep();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcwMjUwNg=="}, "originalCommit": {"oid": "5858b412e39a4b71e1923c63a90f3247563b49d2"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDQ0MDE5OnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/model/RunningStory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzoyMTowOFrOHkN_6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzoyMTowOFrOHkN_6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc0MDEzOQ==", "bodyText": "addRunningStep -> putRunningStep", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r507740139", "createdAt": "2020-10-19T13:21:08Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/model/RunningStory.java", "diffHunk": "@@ -85,18 +87,28 @@ public void setRunningScenario(RunningScenario runningScenario)\n         this.runningScenario = runningScenario;\n     }\n \n-    public String getRunningStep()\n+    public String removeRunningStep()\n     {\n-        return runningStep;\n+        return runningSteps.removeLast();\n     }\n \n-    public void setRunningStep(String runningStep)\n+    public void addRunningStep(String runningStep)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5858b412e39a4b71e1923c63a90f3247563b49d2"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDQ0MTI0OnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/model/RunningStory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzoyMToxNVrOHkOAlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzoyMToxNVrOHkOAlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc0MDMxMQ==", "bodyText": "pop()", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r507740311", "createdAt": "2020-10-19T13:21:15Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/model/RunningStory.java", "diffHunk": "@@ -85,18 +87,28 @@ public void setRunningScenario(RunningScenario runningScenario)\n         this.runningScenario = runningScenario;\n     }\n \n-    public String getRunningStep()\n+    public String removeRunningStep()\n     {\n-        return runningStep;\n+        return runningSteps.removeLast();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5858b412e39a4b71e1923c63a90f3247563b49d2"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDQ0NDA2OnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/model/RunningStory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzoyMTo0NFrOHkOCXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzoyMTo0NFrOHkOCXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc0MDc2NQ==", "bodyText": "push(runningStep)", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r507740765", "createdAt": "2020-10-19T13:21:44Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/model/RunningStory.java", "diffHunk": "@@ -85,18 +87,28 @@ public void setRunningScenario(RunningScenario runningScenario)\n         this.runningScenario = runningScenario;\n     }\n \n-    public String getRunningStep()\n+    public String removeRunningStep()\n     {\n-        return runningStep;\n+        return runningSteps.removeLast();\n     }\n \n-    public void setRunningStep(String runningStep)\n+    public void addRunningStep(String runningStep)\n     {\n-        this.runningStep = runningStep;\n+        runningSteps.addLast(runningStep);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5858b412e39a4b71e1923c63a90f3247563b49d2"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDQ1MjU3OnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/RunContextStoryReporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzoyMzo0MVrOHkOHuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzoyMzo0MVrOHkOHuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc0MjEzNg==", "bodyText": "it should go after super.successful(step);", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r507742136", "createdAt": "2020-10-19T13:23:41Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/RunContextStoryReporter.java", "diffHunk": "@@ -67,51 +67,22 @@ public void afterScenario()\n     @Override\n     public void beforeStep(String step)\n     {\n-        bddRunContext.getRunningStory().setRunningStep(step);\n+        bddRunContext.getRunningStory().addRunningStep(step);\n         super.beforeStep(step);\n     }\n \n     @Override\n     public void successful(String step)\n     {\n+        bddRunContext.getRunningStory().removeRunningStep();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5858b412e39a4b71e1923c63a90f3247563b49d2"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDQzMTQwOnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/model/RunningStory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo0NDo1NVrOHkz2yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo0NDo1NVrOHkz2yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2MDM5Mw==", "bodyText": "return a defensive copy:\nnew LinkedList<>(runningSteps);", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r508360393", "createdAt": "2020-10-20T09:44:55Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/model/RunningStory.java", "diffHunk": "@@ -85,18 +87,28 @@ public void setRunningScenario(RunningScenario runningScenario)\n         this.runningScenario = runningScenario;\n     }\n \n-    public String getRunningStep()\n+    public String removeRunningStep()\n     {\n-        return runningStep;\n+        return runningSteps.pollLast();\n     }\n \n-    public void setRunningStep(String runningStep)\n+    public void putRunningStep(String runningStep)\n     {\n-        this.runningStep = runningStep;\n+        runningSteps.push(runningStep);\n     }\n \n     public int calculateNextVariableIndex()\n     {\n         return nextVariableIndex.incrementAndGet();\n     }\n+\n+    public Deque<String> getRunningSteps()\n+    {\n+        return runningSteps;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ef3d2a713735a2786a860a277e85fe1688fcfb2"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NzQ5NTkxOnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/model/RunningStory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMToyNToyNFrOHlRsmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMDowODoyNlrOHlkXaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg0OTMwNw==", "bodyText": "why not pop()?", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r508849307", "createdAt": "2020-10-20T21:25:24Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/model/RunningStory.java", "diffHunk": "@@ -85,18 +87,28 @@ public void setRunningScenario(RunningScenario runningScenario)\n         this.runningScenario = runningScenario;\n     }\n \n-    public String getRunningStep()\n+    public String removeRunningStep()\n     {\n-        return runningStep;\n+        return runningSteps.pollLast();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cc2a3748fa58a5fed8c42b6f3e025b897b2bdaa"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAyOTIyNQ==", "bodyText": "Because pop() throws NoSuchElementException if runningSteps is empty, pollLast() returns null in this case", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r509029225", "createdAt": "2020-10-21T06:50:53Z", "author": {"login": "abudevich"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/model/RunningStory.java", "diffHunk": "@@ -85,18 +87,28 @@ public void setRunningScenario(RunningScenario runningScenario)\n         this.runningScenario = runningScenario;\n     }\n \n-    public String getRunningStep()\n+    public String removeRunningStep()\n     {\n-        return runningStep;\n+        return runningSteps.pollLast();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg0OTMwNw=="}, "originalCommit": {"oid": "8cc2a3748fa58a5fed8c42b6f3e025b897b2bdaa"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE1NTE3OQ==", "bodyText": "Changed on pollFirst()", "url": "https://github.com/vividus-framework/vividus/pull/999#discussion_r509155179", "createdAt": "2020-10-21T10:08:26Z", "author": {"login": "abudevich"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/model/RunningStory.java", "diffHunk": "@@ -85,18 +87,28 @@ public void setRunningScenario(RunningScenario runningScenario)\n         this.runningScenario = runningScenario;\n     }\n \n-    public String getRunningStep()\n+    public String removeRunningStep()\n     {\n-        return runningStep;\n+        return runningSteps.pollLast();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg0OTMwNw=="}, "originalCommit": {"oid": "8cc2a3748fa58a5fed8c42b6f3e025b897b2bdaa"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 174, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}