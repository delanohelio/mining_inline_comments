{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMjU5MTQz", "number": 430, "title": "[vividus-plugin-web-app-to-rest-api] Fix StringIndexOutOfBoundsExcept\u2026", "bodyText": "\u2026ion for empty source in step 'Then all resources by selector $cssSelector from $html are valid'\nCloses #408", "createdAt": "2020-03-24T21:14:05Z", "url": "https://github.com/vividus-framework/vividus/pull/430", "merged": true, "mergeCommit": {"oid": "3a18f42365958b7f251903bb214a8a924a25bf62"}, "closed": true, "closedAt": "2020-03-25T23:02:37Z", "author": {"login": "Ulyana-Yeryksonava"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRBBCbAFqTM4MDg3MzM4OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRPCe8gH2gAyMzkzMjU5MTQzOmNkY2ZmZjAzYWI4NTU2ZGQzMDRhM2MyYmI1YzZiMGZkZjgxMmQxYzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODczMzg4", "url": "https://github.com/vividus-framework/vividus/pull/430#pullrequestreview-380873388", "createdAt": "2020-03-25T05:53:50Z", "commit": {"oid": "7a50c3b65291960924c91c346cb8715e760417a3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTo1Mzo1MFrOF7M-Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTo1Mzo1MFrOF7M-Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyMjg2Ng==", "bodyText": "shouldn't we adjust resource checking logic depending on an element being checked? for examples 'a' element is allowed to be without href attr whereas 'img' isn't\nhttps://www.w3.org/TR/html52/semantics-embedded-content.html#the-img-element\nhttps://www.w3.org/TR/html52/textlevel-semantics.html#the-a-element", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397622866", "createdAt": "2020-03-25T05:53:50Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-web-app-to-rest-api/src/main/java/org/vividus/bdd/steps/integration/ResourceCheckSteps.java", "diffHunk": "@@ -119,24 +119,38 @@ private ResourceValidation validate(ResourceValidation r)\n         return HtmlUtils.getElements(html, cssSelector).parallelStream();\n     }\n \n+    private boolean isSourceAttributeEmpty(Element element)\n+    {\n+        boolean isSourceAttributeEmpty = getElementSourceAttribute(element).isEmpty();\n+        if (isSourceAttributeEmpty)\n+        {\n+            softAssert.recordFailedAssertion(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a50c3b65291960924c91c346cb8715e760417a3"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODczNDUw", "url": "https://github.com/vividus-framework/vividus/pull/430#pullrequestreview-380873450", "createdAt": "2020-03-25T05:54:01Z", "commit": {"oid": "7a50c3b65291960924c91c346cb8715e760417a3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTo1NDowMVrOF7M-lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNTo1NDowMVrOF7M-lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYyMjkzNA==", "bodyText": "isSourceAttributeEmpty -> sourceAttributeEmpty", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397622934", "createdAt": "2020-03-25T05:54:01Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-web-app-to-rest-api/src/main/java/org/vividus/bdd/steps/integration/ResourceCheckSteps.java", "diffHunk": "@@ -119,24 +119,38 @@ private ResourceValidation validate(ResourceValidation r)\n         return HtmlUtils.getElements(html, cssSelector).parallelStream();\n     }\n \n+    private boolean isSourceAttributeEmpty(Element element)\n+    {\n+        boolean isSourceAttributeEmpty = getElementSourceAttribute(element).isEmpty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a50c3b65291960924c91c346cb8715e760417a3"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwOTgwNDA2", "url": "https://github.com/vividus-framework/vividus/pull/430#pullrequestreview-380980406", "createdAt": "2020-03-25T09:30:59Z", "commit": {"oid": "7a50c3b65291960924c91c346cb8715e760417a3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOTozMDo1OVrOF7Sj2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwOTozMDo1OVrOF7Sj2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzcxNDM5NA==", "bodyText": "private Stream<ResourceValidation> createResourceValidations(Stream<Element> elements,\n        Function<Pair<URI, String>, ResourceValidation> resourceValidationFactory)\n{\n    return elements.map(e ->\n        Pair.of(getElementAttribute(e, \"href\").orElseGet(() -> e.attr(\"src\")).trim(), getSelector(e)))\n                   .filter(p -> !p.getKey().isEmpty() || softAssert.recordFailedAssertion(\n                    \"Element by selector \" + p.getValue() + \" doesn't contain href/src attributes\"))\n                   .map(p -> Pair.of(createUri(p.getKey()), p.getValue()))\n                   .map(resourceValidationFactory)\n                   .peek(rv ->\n                   {\n                       if (!Optional.ofNullable(rv.getUri().getScheme()).map(ALLOWED_SCHEMES::contains).orElse(false)\n                               || excludeHrefsPattern.matcher(rv.toString()).matches())\n                       {\n                           rv.setCheckStatus(CheckStatus.FILTERED);\n                       }\n                   });\n}", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397714394", "createdAt": "2020-03-25T09:30:59Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app-to-rest-api/src/main/java/org/vividus/bdd/steps/integration/ResourceCheckSteps.java", "diffHunk": "@@ -119,24 +119,38 @@ private ResourceValidation validate(ResourceValidation r)\n         return HtmlUtils.getElements(html, cssSelector).parallelStream();\n     }\n \n+    private boolean isSourceAttributeEmpty(Element element)\n+    {\n+        boolean isSourceAttributeEmpty = getElementSourceAttribute(element).isEmpty();\n+        if (isSourceAttributeEmpty)\n+        {\n+            softAssert.recordFailedAssertion(\n+                    \"Element by selector \" + getSelector(element) + \" doesn't contain href/src attributes\");\n+        }\n+        return isSourceAttributeEmpty;\n+    }\n+\n+    private String getElementSourceAttribute(Element element)\n+    {\n+        return getElementAttribute(element, \"href\").orElseGet(() -> element.attr(\"src\")).trim();\n+    }\n+\n     private Stream<ResourceValidation> createResourceValidations(Stream<Element> elements,\n             Function<Pair<URI, String>, ResourceValidation> resourceValidationFactory)\n     {\n-        return elements.map(e ->\n-            Pair.of(createUri(getElementAttribute(e, \"href\").orElseGet(() -> e.attr(\"src\")).trim()), getSelector(e)))\n-                       .map(resourceValidationFactory)\n-                       .map(rv -> {\n-                           URI toCheck = rv.getUri();\n-                           boolean validatable = Optional.ofNullable(toCheck.getScheme())\n-                                                         .map(s -> ALLOWED_SCHEMES.contains(s))\n-                                                         .orElse(false)\n-                                                         && !excludeHrefsPattern.matcher(rv.toString()).matches();\n-                           if (!validatable)\n-                           {\n-                               rv.setCheckStatus(CheckStatus.FILTERED);\n-                           }\n-                           return rv;\n-                       });\n+        return elements.filter(e -> !isSourceAttributeEmpty(e))\n+                .map(e -> Pair.of(createUri(getElementSourceAttribute(e)), getSelector(e)))\n+                .map(resourceValidationFactory).map(rv ->\n+                {\n+                    URI toCheck = rv.getUri();\n+                    boolean validatable = Optional.ofNullable(toCheck.getScheme()).map(s -> ALLOWED_SCHEMES.contains(s))\n+                            .orElse(false) && !excludeHrefsPattern.matcher(rv.toString()).matches();\n+                    if (!validatable)\n+                    {\n+                        rv.setCheckStatus(CheckStatus.FILTERED);\n+                    }\n+                    return rv;\n+                });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a50c3b65291960924c91c346cb8715e760417a3"}, "originalPosition": 50}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a50c3b65291960924c91c346cb8715e760417a3", "author": {"user": {"login": "Ulyana-Yeryksonava", "name": "Ulyana Yeryksonava"}}, "url": "https://github.com/vividus-framework/vividus/commit/7a50c3b65291960924c91c346cb8715e760417a3", "committedDate": "2020-03-24T21:13:04Z", "message": "[vividus-plugin-web-app-to-rest-api] Fix StringIndexOutOfBoundsException for empty source in step 'Then all resources by selector `$cssSelector` from $html are valid'"}, "afterCommit": {"oid": "b0bce43e423c3376e70737daa58abbdef6013a2d", "author": {"user": {"login": "Ulyana-Yeryksonava", "name": "Ulyana Yeryksonava"}}, "url": "https://github.com/vividus-framework/vividus/commit/b0bce43e423c3376e70737daa58abbdef6013a2d", "committedDate": "2020-03-25T11:55:45Z", "message": "[vividus-plugin-web-app-to-rest-api] Fix StringIndexOutOfBoundsException for empty source in step 'Then all resources by selector `$cssSelector` from $html are valid'"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0bce43e423c3376e70737daa58abbdef6013a2d", "author": {"user": {"login": "Ulyana-Yeryksonava", "name": "Ulyana Yeryksonava"}}, "url": "https://github.com/vividus-framework/vividus/commit/b0bce43e423c3376e70737daa58abbdef6013a2d", "committedDate": "2020-03-25T11:55:45Z", "message": "[vividus-plugin-web-app-to-rest-api] Fix StringIndexOutOfBoundsException for empty source in step 'Then all resources by selector `$cssSelector` from $html are valid'"}, "afterCommit": {"oid": "688136f61dd1e82170d6c843f7c85c2572d00f97", "author": {"user": {"login": "Ulyana-Yeryksonava", "name": "Ulyana Yeryksonava"}}, "url": "https://github.com/vividus-framework/vividus/commit/688136f61dd1e82170d6c843f7c85c2572d00f97", "committedDate": "2020-03-25T12:00:06Z", "message": "[vividus-plugin-web-app-to-rest-api] Fix StringIndexOutOfBoundsException for empty source in step 'Then all resources by selector `$cssSelector` from $html are valid'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMTA1NzE2", "url": "https://github.com/vividus-framework/vividus/pull/430#pullrequestreview-381105716", "createdAt": "2020-03-25T12:36:49Z", "commit": {"oid": "688136f61dd1e82170d6c843f7c85c2572d00f97"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMjozNjo0OVrOF7ZA3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMjozNjo0OVrOF7ZA3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgyMDEyNw==", "bodyText": "please format it properly (you can use my comment unchanged), for example, take a look at peek operation it's really hard to find it first of all, and it's hard to track the sequence of actions", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397820127", "createdAt": "2020-03-25T12:36:49Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app-to-rest-api/src/main/java/org/vividus/bdd/steps/integration/ResourceCheckSteps.java", "diffHunk": "@@ -122,21 +123,18 @@ private ResourceValidation validate(ResourceValidation r)\n     private Stream<ResourceValidation> createResourceValidations(Stream<Element> elements,\n             Function<Pair<URI, String>, ResourceValidation> resourceValidationFactory)\n     {\n-        return elements.map(e ->\n-            Pair.of(createUri(getElementAttribute(e, \"href\").orElseGet(() -> e.attr(\"src\")).trim()), getSelector(e)))\n-                       .map(resourceValidationFactory)\n-                       .map(rv -> {\n-                           URI toCheck = rv.getUri();\n-                           boolean validatable = Optional.ofNullable(toCheck.getScheme())\n-                                                         .map(s -> ALLOWED_SCHEMES.contains(s))\n-                                                         .orElse(false)\n-                                                         && !excludeHrefsPattern.matcher(rv.toString()).matches();\n-                           if (!validatable)\n-                           {\n-                               rv.setCheckStatus(CheckStatus.FILTERED);\n-                           }\n-                           return rv;\n-                       });\n+        return elements\n+                .map(e -> Pair.of(getElementAttribute(e, \"href\").orElseGet(() -> e.attr(\"src\")).trim(), getSelector(e)))\n+                .filter(p -> !p.getKey().isEmpty() || softAssert.recordFailedAssertion(\n+                        \"Element by selector \" + p.getValue() + \" doesn't contain href/src attributes\"))\n+                .map(p -> Pair.of(createUri(p.getKey()), p.getValue())).map(resourceValidationFactory).peek(rv ->\n+                {\n+                    if (!Optional.ofNullable(rv.getUri().getScheme()).map(ALLOWED_SCHEMES::contains).orElse(false)\n+                            || excludeHrefsPattern.matcher(rv.toString()).matches())\n+                    {\n+                        rv.setCheckStatus(CheckStatus.FILTERED);\n+                    }\n+                });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "688136f61dd1e82170d6c843f7c85c2572d00f97"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMTEzNzMz", "url": "https://github.com/vividus-framework/vividus/pull/430#pullrequestreview-381113733", "createdAt": "2020-03-25T12:48:29Z", "commit": {"oid": "688136f61dd1e82170d6c843f7c85c2572d00f97"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMjo0ODoyOVrOF7Zabw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMjo0ODoyOVrOF7Zabw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzgyNjY3MQ==", "bodyText": "Move into separte method\nprivate boolean notEmpty(Pair<String, String>)\n{\n    return  !p.getKey().isEmpty() || softAssert.recordFailedAssertion(\"Element by selector \" + p.getValue() + \" doesn't contain href/src attributes\");\n}\n// and use it like:\n.filter(this::notEmpty)", "url": "https://github.com/vividus-framework/vividus/pull/430#discussion_r397826671", "createdAt": "2020-03-25T12:48:29Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-web-app-to-rest-api/src/main/java/org/vividus/bdd/steps/integration/ResourceCheckSteps.java", "diffHunk": "@@ -122,21 +123,18 @@ private ResourceValidation validate(ResourceValidation r)\n     private Stream<ResourceValidation> createResourceValidations(Stream<Element> elements,\n             Function<Pair<URI, String>, ResourceValidation> resourceValidationFactory)\n     {\n-        return elements.map(e ->\n-            Pair.of(createUri(getElementAttribute(e, \"href\").orElseGet(() -> e.attr(\"src\")).trim()), getSelector(e)))\n-                       .map(resourceValidationFactory)\n-                       .map(rv -> {\n-                           URI toCheck = rv.getUri();\n-                           boolean validatable = Optional.ofNullable(toCheck.getScheme())\n-                                                         .map(s -> ALLOWED_SCHEMES.contains(s))\n-                                                         .orElse(false)\n-                                                         && !excludeHrefsPattern.matcher(rv.toString()).matches();\n-                           if (!validatable)\n-                           {\n-                               rv.setCheckStatus(CheckStatus.FILTERED);\n-                           }\n-                           return rv;\n-                       });\n+        return elements\n+                .map(e -> Pair.of(getElementAttribute(e, \"href\").orElseGet(() -> e.attr(\"src\")).trim(), getSelector(e)))\n+                .filter(p -> !p.getKey().isEmpty() || softAssert.recordFailedAssertion(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "688136f61dd1e82170d6c843f7c85c2572d00f97"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8c25d4680d01b568461e44e3d05bf9b54eaa4e1", "author": {"user": {"login": "Ulyana-Yeryksonava", "name": "Ulyana Yeryksonava"}}, "url": "https://github.com/vividus-framework/vividus/commit/d8c25d4680d01b568461e44e3d05bf9b54eaa4e1", "committedDate": "2020-03-25T20:57:07Z", "message": "[vividus-plugin-web-app-to-rest-api] Fix StringIndexOutOfBoundsException for empty source in step 'Then all resources by selector `$cssSelector` from $html are valid'"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "688136f61dd1e82170d6c843f7c85c2572d00f97", "author": {"user": {"login": "Ulyana-Yeryksonava", "name": "Ulyana Yeryksonava"}}, "url": "https://github.com/vividus-framework/vividus/commit/688136f61dd1e82170d6c843f7c85c2572d00f97", "committedDate": "2020-03-25T12:00:06Z", "message": "[vividus-plugin-web-app-to-rest-api] Fix StringIndexOutOfBoundsException for empty source in step 'Then all resources by selector `$cssSelector` from $html are valid'"}, "afterCommit": {"oid": "d8c25d4680d01b568461e44e3d05bf9b54eaa4e1", "author": {"user": {"login": "Ulyana-Yeryksonava", "name": "Ulyana Yeryksonava"}}, "url": "https://github.com/vividus-framework/vividus/commit/d8c25d4680d01b568461e44e3d05bf9b54eaa4e1", "committedDate": "2020-03-25T20:57:07Z", "message": "[vividus-plugin-web-app-to-rest-api] Fix StringIndexOutOfBoundsException for empty source in step 'Then all resources by selector `$cssSelector` from $html are valid'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNTY1OTk5", "url": "https://github.com/vividus-framework/vividus/pull/430#pullrequestreview-381565999", "createdAt": "2020-03-25T21:55:53Z", "commit": {"oid": "d8c25d4680d01b568461e44e3d05bf9b54eaa4e1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdcfff03ab8556dd304a3c2bb5c6b0fdf812d1c0", "author": {"user": {"login": "valfirst", "name": "Valery Yatsynovich"}}, "url": "https://github.com/vividus-framework/vividus/commit/cdcfff03ab8556dd304a3c2bb5c6b0fdf812d1c0", "committedDate": "2020-03-25T22:14:05Z", "message": "Merge branch 'master' into task-408"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 259, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}