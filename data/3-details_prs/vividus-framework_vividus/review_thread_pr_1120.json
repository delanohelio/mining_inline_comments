{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5MjY2ODE2", "number": 1120, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNToyMTozOFrOE3wBaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNToyMTozOFrOE3wBaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2ODkzOTI5OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-mongodb/src/main/java/org/vividus/bdd/converter/StringToBsonConverter.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNToyMTozOFrOHxRu5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNToyNjoyOVrOHxR8cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQzMjgwNA==", "bodyText": "It is out of scope, but could you please use StringUtils.defaultIfBlank instead of explicit logic?", "url": "https://github.com/vividus-framework/vividus/pull/1120#discussion_r521432804", "createdAt": "2020-11-11T15:21:38Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-mongodb/src/main/java/org/vividus/bdd/converter/StringToBsonConverter.java", "diffHunk": "@@ -16,22 +16,18 @@\n \n package org.vividus.bdd.converter;\n \n-import java.lang.reflect.Type;\n-\n import javax.inject.Named;\n \n import org.apache.commons.lang3.StringUtils;\n import org.bson.Document;\n import org.bson.conversions.Bson;\n-import org.jbehave.core.steps.ParameterConverters.AbstractParameterConverter;\n+import org.jbehave.core.steps.ParameterConverters.FunctionalParameterConverter;\n \n @Named\n-public class StringToBsonConverter extends AbstractParameterConverter<Bson>\n+public class StringToBsonConverter extends FunctionalParameterConverter<Bson>\n {\n-    @Override\n-    public Bson convertValue(String value, Type type)\n+    public StringToBsonConverter()\n     {\n-        String json = StringUtils.isNoneBlank(value) ? value : \"{}\";\n-        return Document.parse(json);\n+        super(value -> Document.parse(StringUtils.isNoneBlank(value) ? value : \"{}\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d285bad8361d66e65184d2eee5f893eecc7b7257"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQzNDU2Mw==", "bodyText": "Oh, its noneBlank, please ignore", "url": "https://github.com/vividus-framework/vividus/pull/1120#discussion_r521434563", "createdAt": "2020-11-11T15:24:06Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-mongodb/src/main/java/org/vividus/bdd/converter/StringToBsonConverter.java", "diffHunk": "@@ -16,22 +16,18 @@\n \n package org.vividus.bdd.converter;\n \n-import java.lang.reflect.Type;\n-\n import javax.inject.Named;\n \n import org.apache.commons.lang3.StringUtils;\n import org.bson.Document;\n import org.bson.conversions.Bson;\n-import org.jbehave.core.steps.ParameterConverters.AbstractParameterConverter;\n+import org.jbehave.core.steps.ParameterConverters.FunctionalParameterConverter;\n \n @Named\n-public class StringToBsonConverter extends AbstractParameterConverter<Bson>\n+public class StringToBsonConverter extends FunctionalParameterConverter<Bson>\n {\n-    @Override\n-    public Bson convertValue(String value, Type type)\n+    public StringToBsonConverter()\n     {\n-        String json = StringUtils.isNoneBlank(value) ? value : \"{}\";\n-        return Document.parse(json);\n+        super(value -> Document.parse(StringUtils.isNoneBlank(value) ? value : \"{}\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQzMjgwNA=="}, "originalCommit": {"oid": "d285bad8361d66e65184d2eee5f893eecc7b7257"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQzNjA2NQ==", "bodyText": "I believe isNoneBlank  was used mistakenly", "url": "https://github.com/vividus-framework/vividus/pull/1120#discussion_r521436065", "createdAt": "2020-11-11T15:26:12Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mongodb/src/main/java/org/vividus/bdd/converter/StringToBsonConverter.java", "diffHunk": "@@ -16,22 +16,18 @@\n \n package org.vividus.bdd.converter;\n \n-import java.lang.reflect.Type;\n-\n import javax.inject.Named;\n \n import org.apache.commons.lang3.StringUtils;\n import org.bson.Document;\n import org.bson.conversions.Bson;\n-import org.jbehave.core.steps.ParameterConverters.AbstractParameterConverter;\n+import org.jbehave.core.steps.ParameterConverters.FunctionalParameterConverter;\n \n @Named\n-public class StringToBsonConverter extends AbstractParameterConverter<Bson>\n+public class StringToBsonConverter extends FunctionalParameterConverter<Bson>\n {\n-    @Override\n-    public Bson convertValue(String value, Type type)\n+    public StringToBsonConverter()\n     {\n-        String json = StringUtils.isNoneBlank(value) ? value : \"{}\";\n-        return Document.parse(json);\n+        super(value -> Document.parse(StringUtils.isNoneBlank(value) ? value : \"{}\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQzMjgwNA=="}, "originalCommit": {"oid": "d285bad8361d66e65184d2eee5f893eecc7b7257"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQzNjI3Mg==", "bodyText": "Just checked, works for whitespaces too, so it's a valid comment :)", "url": "https://github.com/vividus-framework/vividus/pull/1120#discussion_r521436272", "createdAt": "2020-11-11T15:26:29Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-mongodb/src/main/java/org/vividus/bdd/converter/StringToBsonConverter.java", "diffHunk": "@@ -16,22 +16,18 @@\n \n package org.vividus.bdd.converter;\n \n-import java.lang.reflect.Type;\n-\n import javax.inject.Named;\n \n import org.apache.commons.lang3.StringUtils;\n import org.bson.Document;\n import org.bson.conversions.Bson;\n-import org.jbehave.core.steps.ParameterConverters.AbstractParameterConverter;\n+import org.jbehave.core.steps.ParameterConverters.FunctionalParameterConverter;\n \n @Named\n-public class StringToBsonConverter extends AbstractParameterConverter<Bson>\n+public class StringToBsonConverter extends FunctionalParameterConverter<Bson>\n {\n-    @Override\n-    public Bson convertValue(String value, Type type)\n+    public StringToBsonConverter()\n     {\n-        String json = StringUtils.isNoneBlank(value) ? value : \"{}\";\n-        return Document.parse(json);\n+        super(value -> Document.parse(StringUtils.isNoneBlank(value) ? value : \"{}\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQzMjgwNA=="}, "originalCommit": {"oid": "d285bad8361d66e65184d2eee5f893eecc7b7257"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 71, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}