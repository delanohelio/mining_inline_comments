{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4ODIzMDIx", "number": 827, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzozMzo0OFrOEZDDDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDowMzowMFrOEZ_ipA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Njk5NzkwOnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/FilteringTableTransformer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzozMzo0OFrOHBo8pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzozMzo0OFrOHBo8pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ4MTUwOA==", "bodyText": "byRowIndexes ?", "url": "https://github.com/vividus-framework/vividus/pull/827#discussion_r471481508", "createdAt": "2020-08-17T13:33:48Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/FilteringTableTransformer.java", "diffHunk": "@@ -44,8 +44,11 @@\n     private static final String BY_MAX_COLUMNS_PROPERTY = \"byMaxColumns\";\n     private static final String BY_MAX_ROWS_PROPERTY = \"byMaxRows\";\n     private static final String BY_COLUMNS_NAMES_PROPERTY = \"byColumnNames\";\n+    private static final String BY_ROW_NUMBERS_PROPERTY = \"byRowNumbers\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98b7b4f070be3babf4bf37c34035e381fb1fd0e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzAxNjg3OnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/FilteringTableTransformer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzozODozMVrOHBpH1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzozODozMVrOHBpH1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ4NDM3NQ==", "bodyText": ".mapToInt(Integer::parseInt).", "url": "https://github.com/vividus-framework/vividus/pull/827#discussion_r471484375", "createdAt": "2020-08-17T13:38:31Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/FilteringTableTransformer.java", "diffHunk": "@@ -90,13 +98,22 @@ public String transform(String tableAsString, TableParsers tableParsers, TablePr\n         return result;\n     }\n \n-    private List<Map<String, String>> getFilteredRows(String byMaxRows, List<Map<String, String>> list)\n+    private List<Map<String, String>> getFilteredRows(String byMaxRows, String byRowNumbers,\n+            List<Map<String, String>> list)\n     {\n-        return Optional.ofNullable(byMaxRows)\n-                .map(Integer::parseInt)\n-                .filter(m -> m < list.size())\n-                .map(m -> list.subList(0, m))\n-                .orElse(list);\n+        if (byRowNumbers == null)\n+        {\n+            return Optional.ofNullable(byMaxRows)\n+                    .map(Integer::parseInt)\n+                    .filter(m -> m < list.size())\n+                    .map(m -> list.subList(0, m))\n+                    .orElse(list);\n+        }\n+        else\n+        {\n+            return Stream.of(StringUtils.split(byRowNumbers, ';'))\n+                    .map(Integer::valueOf).map(list::get).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98b7b4f070be3babf4bf37c34035e381fb1fd0e"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NjkwOTE2OnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/FilteringTableTransformer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDowMzowMFrOHDI6ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDowMzowMFrOHDI6ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1MzgzNA==", "bodyText": "please align in tree-like view", "url": "https://github.com/vividus-framework/vividus/pull/827#discussion_r473053834", "createdAt": "2020-08-19T14:03:00Z", "author": {"login": "uarlouski"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/FilteringTableTransformer.java", "diffHunk": "@@ -90,13 +98,22 @@ public String transform(String tableAsString, TableParsers tableParsers, TablePr\n         return result;\n     }\n \n-    private List<Map<String, String>> getFilteredRows(String byMaxRows, List<Map<String, String>> list)\n+    private List<Map<String, String>> getFilteredRows(String byMaxRows, String byRowIndexes,\n+            List<Map<String, String>> list)\n     {\n-        return Optional.ofNullable(byMaxRows)\n-                .map(Integer::parseInt)\n-                .filter(m -> m < list.size())\n-                .map(m -> list.subList(0, m))\n-                .orElse(list);\n+        if (byRowIndexes == null)\n+        {\n+            return Optional.ofNullable(byMaxRows)\n+                    .map(Integer::parseInt)\n+                    .filter(m -> m < list.size())\n+                    .map(m -> list.subList(0, m))\n+                    .orElse(list);\n+        }\n+        else\n+        {\n+            return Stream.of(StringUtils.split(byRowIndexes, ';')).mapToInt(Integer::parseInt)\n+                    .mapToObj(list::get).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a702d6d07cfbb9ea67b8d48f772f7db534530d74"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 201, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}