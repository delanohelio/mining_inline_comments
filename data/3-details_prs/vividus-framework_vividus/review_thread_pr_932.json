{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MjM4ODk2", "number": 932, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwNjoyNTowOFrOEiwEAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwNjoyNTowOFrOEiwEAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0ODc0NDk5OnYy", "diffSide": "RIGHT", "path": "vividus/src/main/java/org/vividus/spring/BeanFactoryUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwNjoyNTowOFrOHQzCmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQwNjoyNTowOFrOHQzCmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzM3NTUxNQ==", "bodyText": "what about Map::entrySet and then flatMap Set::stream (just from point of view of stream-diseased guy ;) )", "url": "https://github.com/vividus-framework/vividus/pull/932#discussion_r487375515", "createdAt": "2020-09-12T06:25:08Z", "author": {"login": "uarlouski"}, "path": "vividus/src/main/java/org/vividus/spring/BeanFactoryUtils.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.spring;\n+\n+import static java.util.stream.Collectors.toList;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.springframework.beans.factory.ListableBeanFactory;\n+\n+public final class BeanFactoryUtils\n+{\n+    private BeanFactoryUtils()\n+    {\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public static <T> List<T> mergeLists(ListableBeanFactory beanFactory, String listBeanNamePrefix)\n+    {\n+        return streamOfBeansByNamePrefix(beanFactory, listBeanNamePrefix, List.class)\n+                .map(m -> (List<T>) m)\n+                .flatMap(List::stream)\n+                .collect(toList());\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public static <K, V> Map<K, V> mergeMaps(ListableBeanFactory beanFactory, String mapBeanNamePrefix)\n+    {\n+        return streamOfBeansByNamePrefix(beanFactory, mapBeanNamePrefix, Map.class)\n+                .map(m -> (Map<K, V>) m)\n+                .flatMap(m -> m.entrySet().stream())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3519e80d2c327abf6308ed76744ba591e61b08f5"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 109, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}