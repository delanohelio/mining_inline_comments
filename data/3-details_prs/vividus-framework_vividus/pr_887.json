{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NTE2OTk0", "number": 887, "title": "[vividus test-transformer] Add new tests", "bodyText": "", "createdAt": "2020-09-03T10:07:11Z", "url": "https://github.com/vividus-framework/vividus/pull/887", "merged": true, "mergeCommit": {"oid": "fd589f2fc75b02a5a88c650139b4a7cfc2bc2765"}, "closed": true, "closedAt": "2020-09-05T07:12:46Z", "author": {"login": "TatianaTochko"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFRQkAAFqTQ4MTg3MzQ2MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdF0a8agFqTQ4MzAzNjg4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxODczNDYw", "url": "https://github.com/vividus-framework/vividus/pull/887#pullrequestreview-481873460", "createdAt": "2020-09-03T14:05:06Z", "commit": {"oid": "8d70a87ac81d68501d200feff706b0b35b18a1b5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNDowNTowNlrOHMoOdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNDoxMjo0MVrOHMojgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwNDAyMw==", "bodyText": "it seems it's not used", "url": "https://github.com/vividus-framework/vividus/pull/887#discussion_r483004023", "createdAt": "2020-09-03T14:05:06Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/transformer/ExtendedTableTransformerTests.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.transformer;\n+\n+import static java.util.Map.entry;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.spy;\n+\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.function.Function;\n+\n+import org.jbehave.core.model.ExamplesTable.TableProperties;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+@ExtendWith(MockitoExtension.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d70a87ac81d68501d200feff706b0b35b18a1b5"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwNDU3Mw==", "bodyText": "java.util.function.Function#identity", "url": "https://github.com/vividus-framework/vividus/pull/887#discussion_r483004573", "createdAt": "2020-09-03T14:05:49Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/transformer/ExtendedTableTransformerTests.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.transformer;\n+\n+import static java.util.Map.entry;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.spy;\n+\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.function.Function;\n+\n+import org.jbehave.core.model.ExamplesTable.TableProperties;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+@ExtendWith(MockitoExtension.class)\n+class ExtendedTableTransformerTests\n+{\n+    private static final String VALUE_1 = \"value-1\";\n+    private static final String VALUE_2 = \"value-2\";\n+    private static final String KEY_1 = \"key-1\";\n+    private static final String KEY_2 = \"key-2\";\n+\n+    private static Function<String, String> func = key -> { return key; };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d70a87ac81d68501d200feff706b0b35b18a1b5"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwNDcyMA==", "bodyText": "why do you need spy?", "url": "https://github.com/vividus-framework/vividus/pull/887#discussion_r483004720", "createdAt": "2020-09-03T14:06:01Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/transformer/ExtendedTableTransformerTests.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.transformer;\n+\n+import static java.util.Map.entry;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.spy;\n+\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.function.Function;\n+\n+import org.jbehave.core.model.ExamplesTable.TableProperties;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+@ExtendWith(MockitoExtension.class)\n+class ExtendedTableTransformerTests\n+{\n+    private static final String VALUE_1 = \"value-1\";\n+    private static final String VALUE_2 = \"value-2\";\n+    private static final String KEY_1 = \"key-1\";\n+    private static final String KEY_2 = \"key-2\";\n+\n+    private static Function<String, String> func = key -> { return key; };\n+    private final ExtendedTableTransformer transformer = spy(ExtendedTableTransformer.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d70a87ac81d68501d200feff706b0b35b18a1b5"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwOTEyMg==", "bodyText": "does it make sense to use org.junit.jupiter.params.ParameterizedTest? it looks like, you can combine this test and the previous one", "url": "https://github.com/vividus-framework/vividus/pull/887#discussion_r483009122", "createdAt": "2020-09-03T14:12:14Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/transformer/ExtendedTableTransformerTests.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.transformer;\n+\n+import static java.util.Map.entry;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.spy;\n+\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.function.Function;\n+\n+import org.jbehave.core.model.ExamplesTable.TableProperties;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+@ExtendWith(MockitoExtension.class)\n+class ExtendedTableTransformerTests\n+{\n+    private static final String VALUE_1 = \"value-1\";\n+    private static final String VALUE_2 = \"value-2\";\n+    private static final String KEY_1 = \"key-1\";\n+    private static final String KEY_2 = \"key-2\";\n+\n+    private static Function<String, String> func = key -> { return key; };\n+    private final ExtendedTableTransformer transformer = spy(ExtendedTableTransformer.class);\n+\n+    @Test\n+    void testProcessCompetingMandatoryNotNullProperties()\n+    {\n+        Map<String, String> values = Map.of(KEY_1, VALUE_1, KEY_2, VALUE_2);\n+        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () ->\n+                transformer.processCompetingMandatoryProperties(createProperties(values),\n+                    entry(KEY_1, func), entry(KEY_2, func)));\n+        assertEquals(\"Only one ExamplesTable property must be set, but found both 'key-1' and 'key-2'\",\n+                     exception.getMessage());\n+    }\n+\n+    @Test\n+    void testProcessCompetingMandatoryNullProperties()\n+    {\n+        Map<String, String> values = Map.of(\"1\", VALUE_1, \"2\", VALUE_2);\n+        IllegalArgumentException exception =\n+               assertThrows(IllegalArgumentException.class, () ->\n+                     transformer.processCompetingMandatoryProperties(createProperties(values),\n+                                 entry(KEY_1, func), entry(KEY_2, func)));\n+        assertEquals(\"One of ExamplesTable properties must be set: either 'key-1' or 'key-2'\", exception.getMessage());\n+    }\n+\n+    @Test\n+    void testProcessCompetingMandatoryFirstNullProperties()\n+    {\n+        Map<String, String> values = Map.of(\"key\", VALUE_1, KEY_2, VALUE_2);\n+        assertEquals(VALUE_2, transformer.processCompetingMandatoryProperties(createProperties(values),\n+                entry(KEY_1, func), entry(KEY_2, func)).toString());\n+    }\n+\n+    @Test\n+    void testProcessCompetingMandatorySecondNullProperties()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d70a87ac81d68501d200feff706b0b35b18a1b5"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAwOTQxMQ==", "bodyText": "does it make sense to use org.junit.jupiter.params.ParameterizedTest? it looks like, you can combine this test and the previous one", "url": "https://github.com/vividus-framework/vividus/pull/887#discussion_r483009411", "createdAt": "2020-09-03T14:12:41Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/transformer/ExtendedTableTransformerTests.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.transformer;\n+\n+import static java.util.Map.entry;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.spy;\n+\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.function.Function;\n+\n+import org.jbehave.core.model.ExamplesTable.TableProperties;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+@ExtendWith(MockitoExtension.class)\n+class ExtendedTableTransformerTests\n+{\n+    private static final String VALUE_1 = \"value-1\";\n+    private static final String VALUE_2 = \"value-2\";\n+    private static final String KEY_1 = \"key-1\";\n+    private static final String KEY_2 = \"key-2\";\n+\n+    private static Function<String, String> func = key -> { return key; };\n+    private final ExtendedTableTransformer transformer = spy(ExtendedTableTransformer.class);\n+\n+    @Test\n+    void testProcessCompetingMandatoryNotNullProperties()\n+    {\n+        Map<String, String> values = Map.of(KEY_1, VALUE_1, KEY_2, VALUE_2);\n+        IllegalArgumentException exception = assertThrows(IllegalArgumentException.class, () ->\n+                transformer.processCompetingMandatoryProperties(createProperties(values),\n+                    entry(KEY_1, func), entry(KEY_2, func)));\n+        assertEquals(\"Only one ExamplesTable property must be set, but found both 'key-1' and 'key-2'\",\n+                     exception.getMessage());\n+    }\n+\n+    @Test\n+    void testProcessCompetingMandatoryNullProperties()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d70a87ac81d68501d200feff706b0b35b18a1b5"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfc256f615667187983853144c113ffba1ce7a0a", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/cfc256f615667187983853144c113ffba1ce7a0a", "committedDate": "2020-09-03T16:51:12Z", "message": "[vividus test-transformer] Add new tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d70a87ac81d68501d200feff706b0b35b18a1b5", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/8d70a87ac81d68501d200feff706b0b35b18a1b5", "committedDate": "2020-09-03T10:00:01Z", "message": "[vividus test-transformer] Add new tests"}, "afterCommit": {"oid": "cfc256f615667187983853144c113ffba1ce7a0a", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/cfc256f615667187983853144c113ffba1ce7a0a", "committedDate": "2020-09-03T16:51:12Z", "message": "[vividus test-transformer] Add new tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMDM2ODg5", "url": "https://github.com/vividus-framework/vividus/pull/887#pullrequestreview-483036889", "createdAt": "2020-09-05T07:11:21Z", "commit": {"oid": "cfc256f615667187983853144c113ffba1ce7a0a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 89, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}