{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NjkyNDIx", "number": 286, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxOToxMjowMVrODce79Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxOToxOTo0OFrODce9Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTkzNTg5OnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/batch/BatchStorage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxOToxMjowMVrOFkjFuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxOToxMjowMVrOFkjFuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2Nzk2MQ==", "bodyText": "Function<T,T> ==> UnaryOperator", "url": "https://github.com/vividus-framework/vividus/pull/286#discussion_r373867961", "createdAt": "2020-02-02T19:12:01Z", "author": {"login": "uarlouski"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/batch/BatchStorage.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.batch;\n+\n+import java.io.IOException;\n+import java.time.Duration;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.vividus.util.property.IPropertyMapper;\n+\n+public class BatchStorage\n+{\n+    private static final String BATCH = \"batch-\";\n+\n+    private final Map<String, BatchResourceConfiguration> batchResourceConfigurations;\n+    private final Map<String, BatchExecutionConfiguration> batchExecutionConfigurations;\n+\n+    private final Duration defaultStoryExecutionTimeout;\n+    private final List<String> defaultMetaFilters;\n+\n+    public BatchStorage(IPropertyMapper propertyMapper, String defaultStoryExecutionTimeout,\n+            List<String> defaultMetaFilters) throws IOException\n+    {\n+        this.defaultMetaFilters = defaultMetaFilters;\n+        this.defaultStoryExecutionTimeout = Duration.ofSeconds(Long.parseLong(defaultStoryExecutionTimeout));\n+\n+        batchResourceConfigurations = readFromProperties(propertyMapper, \"bdd.story-loader.batch-\",\n+                BatchResourceConfiguration.class, Function.identity());\n+\n+        batchExecutionConfigurations = readFromProperties(propertyMapper, \"bdd.batch-\",\n+                BatchExecutionConfiguration.class, batchExecutionConfiguration -> {\n+                if (batchExecutionConfiguration.getMetaFilters() == null)\n+                {\n+                    batchExecutionConfiguration.setMetaFilters(this.defaultMetaFilters);\n+                }\n+                if (batchExecutionConfiguration.getStoryExecutionTimeout() == null)\n+                {\n+                    batchExecutionConfiguration.setStoryExecutionTimeout(this.defaultStoryExecutionTimeout);\n+                }\n+                return batchExecutionConfiguration;\n+            }\n+        );\n+    }\n+\n+    private <T> Map<String, T> readFromProperties(IPropertyMapper propertyMapper, String propertyPrefix,\n+            Class<T> valueType, Function<T, T> valueMapper) throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b46ce757ac6858893d76c71192e3d99a4df537af"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTkzOTM0OnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/parser/StepExamplesTableParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxOToxOTo0OFrOFkjHcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxOToxOTo0OFrOFkjHcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2ODQwMg==", "bodyText": "can be final now?", "url": "https://github.com/vividus-framework/vividus/pull/286#discussion_r373868402", "createdAt": "2020-02-02T19:19:48Z", "author": {"login": "uarlouski"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/parser/StepExamplesTableParser.java", "diffHunk": "@@ -24,14 +24,20 @@\n import org.jbehave.core.embedder.MatchingStepMonitor;\n import org.jbehave.core.model.ExamplesTable;\n import org.jbehave.core.model.Scenario;\n+import org.jbehave.core.steps.InjectableStepsFactory;\n import org.jbehave.core.steps.Step;\n-import org.vividus.bdd.ExtendedEmbedder;\n import org.vividus.bdd.spring.Configuration;\n \n public class StepExamplesTableParser implements IStepExamplesTableParser\n {\n     private Configuration configuration;\n-    private ExtendedEmbedder embedder;\n+    private InjectableStepsFactory stepsFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b46ce757ac6858893d76c71192e3d99a4df537af"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 501, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}