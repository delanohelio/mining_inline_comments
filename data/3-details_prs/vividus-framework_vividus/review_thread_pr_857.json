{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNzE5ODQz", "number": 857, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMDoxMTowN1rOEcghFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwODo1MToyMlrOEeOC1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzI4MzQwOnYy", "diffSide": "RIGHT", "path": "docs/modules/parameters/pages/action-scope.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMDoxMTowN1rOHHFYEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTozNjo0OFrOHIqGvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MDE2Mg==", "bodyText": "Why action scope, but not for example type?", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477190162", "createdAt": "2020-08-26T10:11:07Z", "author": {"login": "uarlouski"}, "path": "docs/modules/parameters/pages/action-scope.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+= Action scope\n+\n+== Description\n+\n+Defines the scope of an action", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDUwOA==", "bodyText": "refactored", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840508", "createdAt": "2020-08-28T05:36:48Z", "author": {"login": "VitaliLebedzeu"}, "path": "docs/modules/parameters/pages/action-scope.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+= Action scope\n+\n+== Description\n+\n+Defines the scope of an action", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MDE2Mg=="}, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzI4NDUxOnYy", "diffSide": "RIGHT", "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMDoxMToyOFrOHHFYyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTozNzowMFrOHIqG7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MDM0NA==", "bodyText": "too cluttered example", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477190344", "createdAt": "2020-08-26T10:11:28Z", "author": {"login": "uarlouski"}, "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "diffHunk": "@@ -85,6 +85,40 @@ Then number of HTTP GET requests with URL pattern `http://httpbin.org/get` is EQ\n ----\n \n \n+=== Execute sequence of actions\n+\n+==== *_Info_*\n+\n+Executes the sequence of web actions\n+\n+==== *_Wording_*\n+\n+[source,gherkin]\n+----\n+When I execute sequence of actions: $actions\n+----\n+\n+==== *_Parameters_*\n+\n+. `$actions` - xref:parameters:action-scope.adoc[table of actions to execute]\n+\n+==== *_Usage_*\n+\n+.ActionSteps.story\n+[source,gherkin]\n+----\n+Scenario: Action verification CLICK with no argument\n+Given I am on a page with the URL '${vividus-test-site-url}/mouseEvents.html'\n+When I initialize the scenario variable `expectedText` with value `Good day!`\n+Then the text '${expectedText}' does not exist\n+When I execute sequence of actions:\n+|type   |argument                             |\n+|MOVE_TO|By.xpath(//button[text()='Click me'])|\n+|CLICK  |                                     |\n+Then the text '${expectedText}' exists", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDU1OA==", "bodyText": "refactored", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840558", "createdAt": "2020-08-28T05:37:00Z", "author": {"login": "VitaliLebedzeu"}, "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "diffHunk": "@@ -85,6 +85,40 @@ Then number of HTTP GET requests with URL pattern `http://httpbin.org/get` is EQ\n ----\n \n \n+=== Execute sequence of actions\n+\n+==== *_Info_*\n+\n+Executes the sequence of web actions\n+\n+==== *_Wording_*\n+\n+[source,gherkin]\n+----\n+When I execute sequence of actions: $actions\n+----\n+\n+==== *_Parameters_*\n+\n+. `$actions` - xref:parameters:action-scope.adoc[table of actions to execute]\n+\n+==== *_Usage_*\n+\n+.ActionSteps.story\n+[source,gherkin]\n+----\n+Scenario: Action verification CLICK with no argument\n+Given I am on a page with the URL '${vividus-test-site-url}/mouseEvents.html'\n+When I initialize the scenario variable `expectedText` with value `Good day!`\n+Then the text '${expectedText}' does not exist\n+When I execute sequence of actions:\n+|type   |argument                             |\n+|MOVE_TO|By.xpath(//button[text()='Click me'])|\n+|CLICK  |                                     |\n+Then the text '${expectedText}' exists", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MDM0NA=="}, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzI4NjQ3OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMDoxMjowM1rOHHFZ-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTozNzoxMFrOHIqHFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MDY0OQ==", "bodyText": "copy-pasted logic", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477190649", "createdAt": "2020-08-26T10:12:03Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -129,6 +133,52 @@ public Type getArgumentType()\n             return argumentType;\n         }\n     },\n+    KEY_DOWN(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)\n+                {\n+                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n+                    actions.keyDown(Keys.valueOf(kye));\n+                }\n+            });\n+        }\n+\n+        @Override\n+        public Type getArgumentType()\n+        {\n+            return argumentType;\n+        }\n+    },\n+    KEY_UP(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)\n+                {\n+                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n+                    actions.keyUp(Keys.valueOf(kye));\n+                }\n+            });\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDU5Nw==", "bodyText": "refactored", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840597", "createdAt": "2020-08-28T05:37:10Z", "author": {"login": "VitaliLebedzeu"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -129,6 +133,52 @@ public Type getArgumentType()\n             return argumentType;\n         }\n     },\n+    KEY_DOWN(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)\n+                {\n+                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n+                    actions.keyDown(Keys.valueOf(kye));\n+                }\n+            });\n+        }\n+\n+        @Override\n+        public Type getArgumentType()\n+        {\n+            return argumentType;\n+        }\n+    },\n+    KEY_UP(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)\n+                {\n+                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n+                    actions.keyUp(Keys.valueOf(kye));\n+                }\n+            });\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MDY0OQ=="}, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzI5Mjc5OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMDoxNDowMlrOHHFeAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTozNzo0NFrOHIqHgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MTY4MQ==", "bodyText": "why public?", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477191681", "createdAt": "2020-08-26T10:14:02Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -144,6 +194,9 @@ public Type getArgumentType()\n         }\n     };\n \n+    public static final String EMPTY_KEY_LIST_EXCEPTION = \"At least one key should be provided.\";\n+    public static final String WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT = \"The '%s' is not allowed as a key\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDcwNA==", "bodyText": "excluded by refactoring", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840704", "createdAt": "2020-08-28T05:37:44Z", "author": {"login": "VitaliLebedzeu"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -144,6 +194,9 @@ public Type getArgumentType()\n         }\n     };\n \n+    public static final String EMPTY_KEY_LIST_EXCEPTION = \"At least one key should be provided.\";\n+    public static final String WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT = \"The '%s' is not allowed as a key\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MTY4MQ=="}, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzMwMTc1OnYy", "diffSide": "RIGHT", "path": "docs/modules/parameters/pages/action-scope.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMDoxNjozOVrOHHFjhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTozODowNVrOHIqH2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzA5NA==", "bodyText": "This action is used in one step only, so there is no reason to extract it to a separate page, please join this doc with the step definition", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477193094", "createdAt": "2020-08-26T10:16:39Z", "author": {"login": "valfirst"}, "path": "docs/modules/parameters/pages/action-scope.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+= Action scope", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDc5Mg==", "bodyText": "refactored", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840792", "createdAt": "2020-08-28T05:38:05Z", "author": {"login": "VitaliLebedzeu"}, "path": "docs/modules/parameters/pages/action-scope.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+= Action scope", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzA5NA=="}, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzMwMzMzOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMDoxNzowNlrOHHFkgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTozODoxOFrOHIqIDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzM0NQ==", "bodyText": "duplicate entry", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477193345", "createdAt": "2020-08-26T10:17:06Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java", "diffHunk": "@@ -173,11 +175,26 @@ public void executeActionsSequence(List<Action> actions)\n      * </tr>\n      * <tr>\n      * <td>PRESS_KEYS</td>\n-     * <td><a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     * <td>\n+     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n      * </td>\n      * <td>BACK_SPACE</td>\n      * </tr>\n      * <tr>\n+     * <td>KEY_DOWN</td>\n+     * <td>\n+     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     * </td>\n+     * <td>CONTROL,SHIFT</td>\n+     * </tr>\n+     * <tr>\n+     * <td>PRESS_KEYS</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1MTk3Mw==", "bodyText": "fixed", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478151973", "createdAt": "2020-08-27T05:50:27Z", "author": {"login": "VitaliLebedzeu"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java", "diffHunk": "@@ -173,11 +175,26 @@ public void executeActionsSequence(List<Action> actions)\n      * </tr>\n      * <tr>\n      * <td>PRESS_KEYS</td>\n-     * <td><a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     * <td>\n+     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n      * </td>\n      * <td>BACK_SPACE</td>\n      * </tr>\n      * <tr>\n+     * <td>KEY_DOWN</td>\n+     * <td>\n+     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     * </td>\n+     * <td>CONTROL,SHIFT</td>\n+     * </tr>\n+     * <tr>\n+     * <td>PRESS_KEYS</td>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzM0NQ=="}, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI4MDQxNQ==", "bodyText": "not fixed", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478280415", "createdAt": "2020-08-27T09:24:38Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java", "diffHunk": "@@ -173,11 +175,26 @@ public void executeActionsSequence(List<Action> actions)\n      * </tr>\n      * <tr>\n      * <td>PRESS_KEYS</td>\n-     * <td><a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     * <td>\n+     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n      * </td>\n      * <td>BACK_SPACE</td>\n      * </tr>\n      * <tr>\n+     * <td>KEY_DOWN</td>\n+     * <td>\n+     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     * </td>\n+     * <td>CONTROL,SHIFT</td>\n+     * </tr>\n+     * <tr>\n+     * <td>PRESS_KEYS</td>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzM0NQ=="}, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI5NDk4Mw==", "bodyText": "Yep, because I haven't pushed it yet.", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478294983", "createdAt": "2020-08-27T09:48:59Z", "author": {"login": "VitaliLebedzeu"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java", "diffHunk": "@@ -173,11 +175,26 @@ public void executeActionsSequence(List<Action> actions)\n      * </tr>\n      * <tr>\n      * <td>PRESS_KEYS</td>\n-     * <td><a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     * <td>\n+     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n      * </td>\n      * <td>BACK_SPACE</td>\n      * </tr>\n      * <tr>\n+     * <td>KEY_DOWN</td>\n+     * <td>\n+     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     * </td>\n+     * <td>CONTROL,SHIFT</td>\n+     * </tr>\n+     * <tr>\n+     * <td>PRESS_KEYS</td>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzM0NQ=="}, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDg0Nw==", "bodyText": "rewrite", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840847", "createdAt": "2020-08-28T05:38:18Z", "author": {"login": "VitaliLebedzeu"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java", "diffHunk": "@@ -173,11 +175,26 @@ public void executeActionsSequence(List<Action> actions)\n      * </tr>\n      * <tr>\n      * <td>PRESS_KEYS</td>\n-     * <td><a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     * <td>\n+     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n      * </td>\n      * <td>BACK_SPACE</td>\n      * </tr>\n      * <tr>\n+     * <td>KEY_DOWN</td>\n+     * <td>\n+     *     <a href=\"https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html\">Keys</a>\n+     * </td>\n+     * <td>CONTROL,SHIFT</td>\n+     * </tr>\n+     * <tr>\n+     * <td>PRESS_KEYS</td>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzM0NQ=="}, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzMwNDI2OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMDoxNzoyNlrOHHFlGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTozODoyNlrOHIqIKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzQ5OA==", "bodyText": "kye -> key", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477193498", "createdAt": "2020-08-26T10:17:26Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -129,6 +133,52 @@ public Type getArgumentType()\n             return argumentType;\n         }\n     },\n+    KEY_DOWN(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDg3Mw==", "bodyText": "refactored", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840873", "createdAt": "2020-08-28T05:38:26Z", "author": {"login": "VitaliLebedzeu"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -129,6 +133,52 @@ public Type getArgumentType()\n             return argumentType;\n         }\n     },\n+    KEY_DOWN(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzQ5OA=="}, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzMwNDQ4OnYy", "diffSide": "RIGHT", "path": "vividus-tests/src/main/resources/story/integration/ActionSteps.story", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMDoxNzozMlrOHHFlQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTozNzo1NVrOHIqHsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzUzOQ==", "bodyText": "check field emptiness", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477193539", "createdAt": "2020-08-26T10:17:32Z", "author": {"login": "uarlouski"}, "path": "vividus-tests/src/main/resources/story/integration/ActionSteps.story", "diffHunk": "@@ -123,3 +123,17 @@ When I find = `1` elements `By.xpath(//div[@id='output' and text()!='mark'])` an\n |!type      !argument   !                                        |\n |!PRESS_KEYS!BACK_SPACE !                                        |\n Then number of elements found by `By.xpath(//div[@id='output' and text()='mark'])` is equal to `1`\n+\n+Scenario: Action verification KEY_DOWN and KEY_UP combiantion\n+Given I am on a page with the URL '${vividus-test-site-url}/inputs.html'\n+When I initialize the scenario variable `input` with value `mark#{generate(regexify '[a-z]{10}')}`\n+When I enter `${input}` in field located `By.id(text)`\n+Then the text '${input}' exists\n+When I click on element located `By.xpath(//label[@for='text'])`\n+When I execute sequence of actions:\n+|type      |argument|\n+|KEY_DOWN  |CONTROL |\n+|PRESS_KEYS|a       |\n+|KEY_UP    |CONTROL |\n+|PRESS_KEYS|DELETE  |\n+Then the text '${input}' does not exist", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDc1NA==", "bodyText": "rewrite", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840754", "createdAt": "2020-08-28T05:37:55Z", "author": {"login": "VitaliLebedzeu"}, "path": "vividus-tests/src/main/resources/story/integration/ActionSteps.story", "diffHunk": "@@ -123,3 +123,17 @@ When I find = `1` elements `By.xpath(//div[@id='output' and text()!='mark'])` an\n |!type      !argument   !                                        |\n |!PRESS_KEYS!BACK_SPACE !                                        |\n Then number of elements found by `By.xpath(//div[@id='output' and text()='mark'])` is equal to `1`\n+\n+Scenario: Action verification KEY_DOWN and KEY_UP combiantion\n+Given I am on a page with the URL '${vividus-test-site-url}/inputs.html'\n+When I initialize the scenario variable `input` with value `mark#{generate(regexify '[a-z]{10}')}`\n+When I enter `${input}` in field located `By.id(text)`\n+Then the text '${input}' exists\n+When I click on element located `By.xpath(//label[@for='text'])`\n+When I execute sequence of actions:\n+|type      |argument|\n+|KEY_DOWN  |CONTROL |\n+|PRESS_KEYS|a       |\n+|KEY_UP    |CONTROL |\n+|PRESS_KEYS|DELETE  |\n+Then the text '${input}' does not exist", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5MzUzOQ=="}, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzMwNjQ5OnYy", "diffSide": "RIGHT", "path": "docs/modules/parameters/pages/action-scope.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMDoxODoxNVrOHHFmmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwNTo1NDozMlrOHIAPeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5Mzg4MA==", "bodyText": "add which keys are allowed for key down", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477193880", "createdAt": "2020-08-26T10:18:15Z", "author": {"login": "uarlouski"}, "path": "docs/modules/parameters/pages/action-scope.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+= Action scope\n+\n+== Description\n+\n+Defines the scope of an action\n+\n+== Possible scopes\n+\n+[cols=\"1,5,3\", options=\"header\"]\n+|===\n+\n+|Type\n+|Argument\n+|Example\n+\n+|DOUBLE_CLICK\n+|Search attribute or empty value\n+|By.linkUrl(http://httpbin.org)\n+\n+|CLICK_AND_HOLD\n+|Search attribute or empty value\n+|By.linkText(Click me)\n+\n+|MOVE_BY_OFFSET\n+|Point\n+|(10, 15) where *x* is 10 and *y* is 15\n+\n+|RELEASE\n+|Search attribute or empty value\n+|By.tagName(div)\n+\n+|ENTER_TEXT\n+|Text\n+|Minsk City\n+\n+|CLICK\n+|Search attribute or empty value\n+|By.caseSensitiveText(Done)\n+\n+|PRESS_KEYS\n+|Press xref:https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html[Keys]\n+|BACK_SPACE\n+\n+|KEY_DOWN", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODE1NDYxNg==", "bodyText": "added", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478154616", "createdAt": "2020-08-27T05:54:32Z", "author": {"login": "VitaliLebedzeu"}, "path": "docs/modules/parameters/pages/action-scope.adoc", "diffHunk": "@@ -0,0 +1,82 @@\n+= Action scope\n+\n+== Description\n+\n+Defines the scope of an action\n+\n+== Possible scopes\n+\n+[cols=\"1,5,3\", options=\"header\"]\n+|===\n+\n+|Type\n+|Argument\n+|Example\n+\n+|DOUBLE_CLICK\n+|Search attribute or empty value\n+|By.linkUrl(http://httpbin.org)\n+\n+|CLICK_AND_HOLD\n+|Search attribute or empty value\n+|By.linkText(Click me)\n+\n+|MOVE_BY_OFFSET\n+|Point\n+|(10, 15) where *x* is 10 and *y* is 15\n+\n+|RELEASE\n+|Search attribute or empty value\n+|By.tagName(div)\n+\n+|ENTER_TEXT\n+|Text\n+|Minsk City\n+\n+|CLICK\n+|Search attribute or empty value\n+|By.caseSensitiveText(Done)\n+\n+|PRESS_KEYS\n+|Press xref:https://selenium.dev/selenium/docs/api/java/org/openqa/selenium/Keys.html[Keys]\n+|BACK_SPACE\n+\n+|KEY_DOWN", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5Mzg4MA=="}, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzMwODc4OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMDoxODo1OFrOHHFn9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTozODozM1rOHIqIRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5NDIyOA==", "bodyText": "this code is very similar to KEY_DOWN entry, please consider refactoring to extract the same code to a new method and then reuse it", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r477194228", "createdAt": "2020-08-26T10:18:58Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -129,6 +133,52 @@ public Type getArgumentType()\n             return argumentType;\n         }\n     },\n+    KEY_DOWN(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)\n+                {\n+                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n+                    actions.keyDown(Keys.valueOf(kye));\n+                }\n+            });\n+        }\n+\n+        @Override\n+        public Type getArgumentType()\n+        {\n+            return argumentType;\n+        }\n+    },\n+    KEY_UP(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)\n+                {\n+                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n+                    actions.keyUp(Keys.valueOf(kye));\n+                }\n+            });\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MDkwMg==", "bodyText": "refactored", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r478840902", "createdAt": "2020-08-28T05:38:33Z", "author": {"login": "VitaliLebedzeu"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -129,6 +133,52 @@ public Type getArgumentType()\n             return argumentType;\n         }\n     },\n+    KEY_DOWN(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)\n+                {\n+                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n+                    actions.keyDown(Keys.valueOf(kye));\n+                }\n+            });\n+        }\n+\n+        @Override\n+        public Type getArgumentType()\n+        {\n+            return argumentType;\n+        }\n+    },\n+    KEY_UP(false)\n+    {\n+        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n+\n+        @Override\n+        public void addAction(Actions actions, Object argument)\n+        {\n+            perform(argument, (List<String> arg) -> {\n+                notEmpty(arg, EMPTY_KEY_LIST_EXCEPTION);\n+                for (String kye : arg)\n+                {\n+                    isTrue(EnumUtils.isValidEnum(Keys.class, kye), WRONG_KEY_LIST_VALUE_EXCEPTION_FORMAT, kye);\n+                    actions.keyUp(Keys.valueOf(kye));\n+                }\n+            });\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5NDIyOA=="}, "originalCommit": {"oid": "c5981cd3406679a0ddfd59f74106c02eb7e0c666"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTUzODIyOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTozODozNVrOHI-eEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwODowOTowNVrOHJg3iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE3NDE2Mw==", "bodyText": "KEY_DOWN(false)\n    {\n        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n\n        @Override\n        public void addAction(Actions actions, Object argument)\n        {\n            perform(argument, (List<String> args) -> buildKeysActions(args, actions::keyDown));\n        }\n\n        @Override\n        public Type getArgumentType()\n        {\n            return argumentType;\n        }\n    },\n    KEY_UP(false)\n    {\n        private final Type argumentType = TypeUtils.parameterize(List.class, String.class);\n\n        @Override\n        public void addAction(Actions actions, Object argument)\n        {\n            perform(argument, (List<String> args) -> buildKeysActions(args, actions::keyUp));\n        }\n\n        @Override\n        public Type getArgumentType()\n        {\n            return argumentType;\n        }\n    },\n...\n\n    private static void buildKeysActions(List<String> keys, Consumer<CharSequence> actionBuilder)\n    {\n        notEmpty(keys, \"At least one key should be provided\");\n        keys.stream()\n            .peek(key -> isTrue(EnumUtils.isValidEnum(Keys.class, key), \"The '%s' is not allowed as a key\", key))\n            .map(Keys::valueOf)\n            .forEach(actionBuilder);\n    }", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r479174163", "createdAt": "2020-08-28T11:38:35Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -179,9 +215,31 @@ public boolean isNullable()\n         }\n         else\n         {\n-            Validate.isTrue(TypeUtils.isAssignable(argument.getClass(), getArgumentType()),\n+            isTrue(TypeUtils.isAssignable(argument.getClass(), getArgumentType()),\n                     \"Argument for %s action must be of type %s\", name(), getArgumentType());\n             argumentConsumer.accept((U) argument);\n         }\n     }\n+\n+    Consumer<List<String>> getKeyConsumer(Actions actions)\n+    {\n+        return (List<String> arg) -> {\n+            notEmpty(arg, \"At least one key should be provided.\");\n+            arg.forEach(key ->\n+            {\n+                isTrue(EnumUtils.isValidEnum(Keys.class, key), \"The '%s' is not allowed as a key\", key);\n+                switch (this.name())\n+                {\n+                    case \"KEY_DOWN\":\n+                        actions.keyDown(Keys.valueOf(key));\n+                        break;\n+                    case \"KEY_UP\":\n+                        actions.keyUp(Keys.valueOf(key));\n+                        break;\n+                    default:\n+                        break;\n+                }\n+            });\n+        };\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31dcce51f74395f554b67326d4610d878ef6fb72"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTczNzczNg==", "bodyText": "Thanks! refactored", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r479737736", "createdAt": "2020-08-30T08:09:05Z", "author": {"login": "VitaliLebedzeu"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -179,9 +215,31 @@ public boolean isNullable()\n         }\n         else\n         {\n-            Validate.isTrue(TypeUtils.isAssignable(argument.getClass(), getArgumentType()),\n+            isTrue(TypeUtils.isAssignable(argument.getClass(), getArgumentType()),\n                     \"Argument for %s action must be of type %s\", name(), getArgumentType());\n             argumentConsumer.accept((U) argument);\n         }\n     }\n+\n+    Consumer<List<String>> getKeyConsumer(Actions actions)\n+    {\n+        return (List<String> arg) -> {\n+            notEmpty(arg, \"At least one key should be provided.\");\n+            arg.forEach(key ->\n+            {\n+                isTrue(EnumUtils.isValidEnum(Keys.class, key), \"The '%s' is not allowed as a key\", key);\n+                switch (this.name())\n+                {\n+                    case \"KEY_DOWN\":\n+                        actions.keyDown(Keys.valueOf(key));\n+                        break;\n+                    case \"KEY_UP\":\n+                        actions.keyUp(Keys.valueOf(key));\n+                        break;\n+                    default:\n+                        break;\n+                }\n+            });\n+        };\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE3NDE2Mw=="}, "originalCommit": {"oid": "31dcce51f74395f554b67326d4610d878ef6fb72"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTIyODM3OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwODo1MToyMlrOHJwLMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNDo0MTo0OVrOHKhQvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk4ODUyOA==", "bodyText": "please align stream method invocations", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r479988528", "createdAt": "2020-08-31T08:51:22Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -179,9 +215,18 @@ public boolean isNullable()\n         }\n         else\n         {\n-            Validate.isTrue(TypeUtils.isAssignable(argument.getClass(), getArgumentType()),\n+            isTrue(TypeUtils.isAssignable(argument.getClass(), getArgumentType()),\n                     \"Argument for %s action must be of type %s\", name(), getArgumentType());\n             argumentConsumer.accept((U) argument);\n         }\n     }\n+\n+    private static void buildKeysActions(List<String> keys, Consumer<CharSequence> actionBuilder)\n+    {\n+        notEmpty(keys, \"At least one key should be provided\");\n+        keys.stream()\n+                .peek(key -> isTrue(EnumUtils.isValidEnum(Keys.class, key), \"The '%s' is not allowed as a key\", key))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4c80a38341384aea3ccdfb89831789b6cbbeb19"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDc5Mjc2NA==", "bodyText": "fixed", "url": "https://github.com/vividus-framework/vividus/pull/857#discussion_r480792764", "createdAt": "2020-09-01T04:41:49Z", "author": {"login": "VitaliLebedzeu"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/SequenceActionType.java", "diffHunk": "@@ -179,9 +215,18 @@ public boolean isNullable()\n         }\n         else\n         {\n-            Validate.isTrue(TypeUtils.isAssignable(argument.getClass(), getArgumentType()),\n+            isTrue(TypeUtils.isAssignable(argument.getClass(), getArgumentType()),\n                     \"Argument for %s action must be of type %s\", name(), getArgumentType());\n             argumentConsumer.accept((U) argument);\n         }\n     }\n+\n+    private static void buildKeysActions(List<String> keys, Consumer<CharSequence> actionBuilder)\n+    {\n+        notEmpty(keys, \"At least one key should be provided\");\n+        keys.stream()\n+                .peek(key -> isTrue(EnumUtils.isValidEnum(Keys.class, key), \"The '%s' is not allowed as a key\", key))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk4ODUyOA=="}, "originalCommit": {"oid": "f4c80a38341384aea3ccdfb89831789b6cbbeb19"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 217, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}