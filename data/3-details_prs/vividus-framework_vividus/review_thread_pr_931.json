{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MDE3NjYw", "number": 931, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzoyNTozN1rOEiiuOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzoyNzoyN1rOEiiw5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjU1OTMwOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/InputActions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzoyNTozN1rOHQevwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzoyNTozN1rOHQevwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA0MzAwOQ==", "bodyText": "typeText", "url": "https://github.com/vividus-framework/vividus/pull/931#discussion_r487043009", "createdAt": "2020-09-11T13:25:37Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/InputActions.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.mobileapp.action;\n+\n+import org.openqa.selenium.WebElement;\n+import org.vividus.selenium.IWebDriverProvider;\n+\n+import io.appium.java_client.HidesKeyboard;\n+\n+public class InputActions\n+{\n+    private final IWebDriverProvider webDriverProvider;\n+\n+    public InputActions(IWebDriverProvider webDriverProvider)\n+    {\n+        this.webDriverProvider = webDriverProvider;\n+    }\n+\n+    /**\n+     * Input <b>text</b> into the <b>element</b>\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>input text into the element</li>\n+     * <li>hide keyboard</li>\n+     * </ol>\n+     * @param element element to input text, must not be {@code null}\n+     * @param text text to input into the element, must not be {@code null}\n+     */\n+    public void inputText(WebElement element, String text)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97db4b84403d04f8825173e56c48c1061d305af3"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjU2MTEzOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/ActionSteps.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzoyNjowNlrOHQew5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzoyNjowNlrOHQew5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA0MzMwMA==", "bodyText": "Enter -> Type", "url": "https://github.com/vividus-framework/vividus/pull/931#discussion_r487043300", "createdAt": "2020-09-11T13:26:06Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/ActionSteps.java", "diffHunk": "@@ -71,8 +74,30 @@ public void tapByLocator(Locator locator)\n         findElementToTap(locator).ifPresent(tapActions::tap);\n     }\n \n+    /**\n+     * Enter <b>text</b> into the <b>element</b>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97db4b84403d04f8825173e56c48c1061d305af3"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjU2NDM2OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/ActionSteps.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzoyNjo1NlrOHQey0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzoyNjo1NlrOHQey0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA0Mzc5NQ==", "bodyText": "enter -> type", "url": "https://github.com/vividus-framework/vividus/pull/931#discussion_r487043795", "createdAt": "2020-09-11T13:26:56Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/ActionSteps.java", "diffHunk": "@@ -71,8 +74,30 @@ public void tapByLocator(Locator locator)\n         findElementToTap(locator).ifPresent(tapActions::tap);\n     }\n \n+    /**\n+     * Enter <b>text</b> into the <b>element</b>\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>enter text into the element</li>\n+     * <li>hide keyboard</li>\n+     * </ol>\n+     * @param text text to enter into the element\n+     * @param locator locator to find an element\n+     */\n+    @When(\"I enter `$text` in field located `$locator`\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97db4b84403d04f8825173e56c48c1061d305af3"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjU2NjE0OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/ActionSteps.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzoyNzoyN1rOHQez6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNDoxMTozMlrOHQgg8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA0NDA3NQ==", "bodyText": "what's the profit?", "url": "https://github.com/vividus-framework/vividus/pull/931#discussion_r487044075", "createdAt": "2020-09-11T13:27:27Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/ActionSteps.java", "diffHunk": "@@ -71,8 +74,30 @@ public void tapByLocator(Locator locator)\n         findElementToTap(locator).ifPresent(tapActions::tap);\n     }\n \n+    /**\n+     * Enter <b>text</b> into the <b>element</b>\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>enter text into the element</li>\n+     * <li>hide keyboard</li>\n+     * </ol>\n+     * @param text text to enter into the element\n+     * @param locator locator to find an element\n+     */\n+    @When(\"I enter `$text` in field located `$locator`\")\n+    public void enterTextInField(String text, Locator locator)\n+    {\n+        findElement(\"The element to enter text\", locator).ifPresent(e -> inputActions.inputText(e, text));\n+    }\n+\n     private Optional<WebElement> findElementToTap(Locator locator)\n     {\n-        return baseValidations.assertElementExists(\"The element to tap\", locator);\n+        return findElement(\"The element to tap\", locator);\n+    }\n+\n+    private Optional<WebElement> findElement(String description, Locator locator)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97db4b84403d04f8825173e56c48c1061d305af3"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA3MTk4NA==", "bodyText": "discussed to remove", "url": "https://github.com/vividus-framework/vividus/pull/931#discussion_r487071984", "createdAt": "2020-09-11T14:11:32Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/ActionSteps.java", "diffHunk": "@@ -71,8 +74,30 @@ public void tapByLocator(Locator locator)\n         findElementToTap(locator).ifPresent(tapActions::tap);\n     }\n \n+    /**\n+     * Enter <b>text</b> into the <b>element</b>\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>enter text into the element</li>\n+     * <li>hide keyboard</li>\n+     * </ol>\n+     * @param text text to enter into the element\n+     * @param locator locator to find an element\n+     */\n+    @When(\"I enter `$text` in field located `$locator`\")\n+    public void enterTextInField(String text, Locator locator)\n+    {\n+        findElement(\"The element to enter text\", locator).ifPresent(e -> inputActions.inputText(e, text));\n+    }\n+\n     private Optional<WebElement> findElementToTap(Locator locator)\n     {\n-        return baseValidations.assertElementExists(\"The element to tap\", locator);\n+        return findElement(\"The element to tap\", locator);\n+    }\n+\n+    private Optional<WebElement> findElement(String description, Locator locator)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA0NDA3NQ=="}, "originalCommit": {"oid": "97db4b84403d04f8825173e56c48c1061d305af3"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 106, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}