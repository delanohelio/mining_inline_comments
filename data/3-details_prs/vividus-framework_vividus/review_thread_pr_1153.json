{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzOTAzMDg3", "number": 1153, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjo1NDozM1rOE7CaRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxODoyOTowNFrOE7L9Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMzQwOTM0OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/proxy/Proxy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjo1NDozM1rOH2c3Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMjo1NDozM1rOH2c3Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1Nzk5NQ==", "bodyText": "String proxyAddress = hostName + ':' + proxyServer.getPort();\nreturn new org.openqa.selenium.Proxy().setHttpProxy(proxyAddress)\n                                      .setSslProxy(proxyAddress);\n\nmaybe", "url": "https://github.com/vividus-framework/vividus/pull/1153#discussion_r526857995", "createdAt": "2020-11-19T12:54:33Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/proxy/Proxy.java", "diffHunk": "@@ -112,7 +115,19 @@ public void clearRequestFilters()\n     @Override\n     public org.openqa.selenium.Proxy createSeleniumProxy()\n     {\n-        return ClientUtil.createSeleniumProxy(proxyServer, InetAddress.getLoopbackAddress());\n+        return Optional.ofNullable(proxyHost)\n+                       .map(this::createSeleniumProxy)\n+                       .orElseGet(() -> ClientUtil.createSeleniumProxy(proxyServer, InetAddress.getLoopbackAddress()));\n+    }\n+\n+    private org.openqa.selenium.Proxy createSeleniumProxy(String hostName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9df98576c6383a09fbfbac0e7d3c6f9570e495f8"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDk2Njk3OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/proxy/Proxy.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxODoyNzoxN1rOH2sAvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwOToxNjowOFrOH3HUqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEwNjIzNg==", "bodyText": "com.browserup.bup.client.ClientUtil#createSeleniumProxy(com.browserup.bup.BrowserUpProxy, java.net.InetAddress) ?", "url": "https://github.com/vividus-framework/vividus/pull/1153#discussion_r527106236", "createdAt": "2020-11-19T18:27:17Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/proxy/Proxy.java", "diffHunk": "@@ -112,7 +115,19 @@ public void clearRequestFilters()\n     @Override\n     public org.openqa.selenium.Proxy createSeleniumProxy()\n     {\n-        return ClientUtil.createSeleniumProxy(proxyServer, InetAddress.getLoopbackAddress());\n+        return Optional.ofNullable(proxyHost)\n+                       .map(this::createSeleniumProxy)\n+                       .orElseGet(() -> ClientUtil.createSeleniumProxy(proxyServer, InetAddress.getLoopbackAddress()));\n+    }\n+\n+    private org.openqa.selenium.Proxy createSeleniumProxy(String hostName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9df98576c6383a09fbfbac0e7d3c6f9570e495f8"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ3MTg2Nw==", "bodyText": "InetAddress will resolve it, and there is no guarantee that it could be resolved from the machine where the tests running", "url": "https://github.com/vividus-framework/vividus/pull/1153#discussion_r527471867", "createdAt": "2020-11-20T06:42:57Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/proxy/Proxy.java", "diffHunk": "@@ -112,7 +115,19 @@ public void clearRequestFilters()\n     @Override\n     public org.openqa.selenium.Proxy createSeleniumProxy()\n     {\n-        return ClientUtil.createSeleniumProxy(proxyServer, InetAddress.getLoopbackAddress());\n+        return Optional.ofNullable(proxyHost)\n+                       .map(this::createSeleniumProxy)\n+                       .orElseGet(() -> ClientUtil.createSeleniumProxy(proxyServer, InetAddress.getLoopbackAddress()));\n+    }\n+\n+    private org.openqa.selenium.Proxy createSeleniumProxy(String hostName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEwNjIzNg=="}, "originalCommit": {"oid": "9df98576c6383a09fbfbac0e7d3c6f9570e495f8"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ3NTQ3MA==", "bodyText": "Having host.docker.internal it will throw UnknownHostException with a trace:\nCaused by: java.net.UnknownHostException: host.docker.internal: nodename nor servname provided, or not known\n\tat java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\n\tat java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(InetAddress.java:930)\n\tat java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1499)\n\tat java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:849)\n\tat java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1489)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1348)\n\tat java.base/java.net.InetAddress.getAllByName(InetAddress.java:1282)\n\tat java.base/java.net.InetAddress.getByName(InetAddress.java:1232)\n\tat org.vividus.proxy.Proxy.createSeleniumProxy(Proxy.java:133)", "url": "https://github.com/vividus-framework/vividus/pull/1153#discussion_r527475470", "createdAt": "2020-11-20T06:52:36Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/proxy/Proxy.java", "diffHunk": "@@ -112,7 +115,19 @@ public void clearRequestFilters()\n     @Override\n     public org.openqa.selenium.Proxy createSeleniumProxy()\n     {\n-        return ClientUtil.createSeleniumProxy(proxyServer, InetAddress.getLoopbackAddress());\n+        return Optional.ofNullable(proxyHost)\n+                       .map(this::createSeleniumProxy)\n+                       .orElseGet(() -> ClientUtil.createSeleniumProxy(proxyServer, InetAddress.getLoopbackAddress()));\n+    }\n+\n+    private org.openqa.selenium.Proxy createSeleniumProxy(String hostName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEwNjIzNg=="}, "originalCommit": {"oid": "9df98576c6383a09fbfbac0e7d3c6f9570e495f8"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU1MzcwNQ==", "bodyText": "FYI: browserup/browserup-proxy#318", "url": "https://github.com/vividus-framework/vividus/pull/1153#discussion_r527553705", "createdAt": "2020-11-20T09:16:08Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/proxy/Proxy.java", "diffHunk": "@@ -112,7 +115,19 @@ public void clearRequestFilters()\n     @Override\n     public org.openqa.selenium.Proxy createSeleniumProxy()\n     {\n-        return ClientUtil.createSeleniumProxy(proxyServer, InetAddress.getLoopbackAddress());\n+        return Optional.ofNullable(proxyHost)\n+                       .map(this::createSeleniumProxy)\n+                       .orElseGet(() -> ClientUtil.createSeleniumProxy(proxyServer, InetAddress.getLoopbackAddress()));\n+    }\n+\n+    private org.openqa.selenium.Proxy createSeleniumProxy(String hostName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEwNjIzNg=="}, "originalCommit": {"oid": "9df98576c6383a09fbfbac0e7d3c6f9570e495f8"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDk3MzM0OnYy", "diffSide": "RIGHT", "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxODoyOTowNFrOH2sE6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxODoyOTowNFrOH2sE6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEwNzMwNg==", "bodyText": "selenium.proxy.host -> proxy.connectable-host ? that's a naming from BrowserUp proxy\n\nconnectableAddress the network address the Selenium Proxy will use to reach this BrowserUpProxy instance", "url": "https://github.com/vividus-framework/vividus/pull/1153#discussion_r527107306", "createdAt": "2020-11-19T18:29:04Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "diffHunk": "@@ -190,6 +190,26 @@ include::partial$selenium-properties.adoc[]\n |proxy\n |empty\n |Provides possibility to attach screenshot for failed proxy steps\n+\n+|proxy.enabled\n+|true/false\n+|false\n+|Enabled proxy for the run\n+\n+|proxy.host\n+|any host name resolving on the machine\n+|empty\n+|Overrides the host which will be used by proxy\n+\n+|proxy.ports\n+|10000-10005\n+|empty\n+|Defines ports range which could be used for proxy\n+\n+|selenium.proxy.host", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9df98576c6383a09fbfbac0e7d3c6f9570e495f8"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4947, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}