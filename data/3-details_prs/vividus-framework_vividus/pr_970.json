{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MTY5MDQ3", "number": 970, "title": "[xray-exporter] Add ability to export cucumber test cases", "bodyText": "", "createdAt": "2020-09-28T14:07:08Z", "url": "https://github.com/vividus-framework/vividus/pull/970", "merged": true, "mergeCommit": {"oid": "3f3d216fa38b7278b39e51cd97ab1a0b7a3f0ecc"}, "closed": true, "closedAt": "2020-09-30T09:17:59Z", "author": {"login": "uarlouski"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNUWDBABqjM4MTQ4MDM2OTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdN5BEAAFqTQ5OTIyNzEwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d3762d1f706fd34d6d693ea04808af0908bbeab", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/9d3762d1f706fd34d6d693ea04808af0908bbeab", "committedDate": "2020-09-28T13:49:11Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}, "afterCommit": {"oid": "3e146cb63c80d2b4a3dc3f65ce920ed7ac9c14da", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/3e146cb63c80d2b4a3dc3f65ce920ed7ac9c14da", "committedDate": "2020-09-28T14:20:10Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e146cb63c80d2b4a3dc3f65ce920ed7ac9c14da", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/3e146cb63c80d2b4a3dc3f65ce920ed7ac9c14da", "committedDate": "2020-09-28T14:20:10Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}, "afterCommit": {"oid": "70b1cfc6441733e8becaf25b532a89b6c5c4b6b2", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/70b1cfc6441733e8becaf25b532a89b6c5c4b6b2", "committedDate": "2020-09-28T14:21:12Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NTg1Mzc4", "url": "https://github.com/vividus-framework/vividus/pull/970#pullrequestreview-497585378", "createdAt": "2020-09-28T14:40:03Z", "commit": {"oid": "70b1cfc6441733e8becaf25b532a89b6c5c4b6b2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNDo0MDowM1rOHZA34A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNDo0MDowM1rOHZA34A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5MDc1Mg==", "bodyText": "private static String processStep(String step) and CucumberScenarioConverter::processStep\n?", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r495990752", "createdAt": "2020-09-28T14:40:03Z", "author": {"login": "ikalinin1"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/converter/CucumberScenarioConverter.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.converter;\n+\n+import static java.lang.System.lineSeparator;\n+\n+import java.util.List;\n+import java.util.function.UnaryOperator;\n+import java.util.stream.Collectors;\n+\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public final class CucumberScenarioConverter\n+{\n+    private static final String COMMENT_KEYWORD = \"!-- \";\n+    private static final String CUCUMBER_SEPARATOR = \"|\";\n+\n+    private CucumberScenarioConverter()\n+    {\n+    }\n+\n+    public static CucumberScenario convert(Scenario scenario)\n+    {\n+        if (scenario.getExamples() != null)\n+        {\n+            return new CucumberScenario(\"Scenario Outline\", buildParameterizedScenario(scenario));\n+        }\n+        return new CucumberScenario(\"Scenario\", buildPlainScenario(scenario));\n+    }\n+\n+    private static String buildPlainScenario(Scenario scenario)\n+    {\n+        return getSteps(scenario, UnaryOperator.identity());\n+    }\n+\n+    private static String buildParameterizedScenario(Scenario scenario)\n+    {\n+        return getSteps(scenario, steps ->\n+        {\n+            String examples = buildScenarioExamplesTable(scenario.getExamples().getParameters());\n+            steps.add(examples);\n+            return steps;\n+        });\n+    }\n+\n+    private static String getSteps(Scenario scenario, UnaryOperator<List<String>> beforeJoining)\n+    {\n+        return scenario.collectSteps()\n+                       .stream()\n+                       .map(Step::getValue)\n+                       .map(processStep())\n+                       .collect(Collectors.collectingAndThen(Collectors.toList(), beforeJoining))\n+                       .stream()\n+                       .collect(Collectors.joining(lineSeparator()));\n+    }\n+\n+    private static UnaryOperator<String> processStep()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70b1cfc6441733e8becaf25b532a89b6c5c4b6b2"}, "originalPosition": 73}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70b1cfc6441733e8becaf25b532a89b6c5c4b6b2", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/70b1cfc6441733e8becaf25b532a89b6c5c4b6b2", "committedDate": "2020-09-28T14:21:12Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}, "afterCommit": {"oid": "3d731bc39968ac8ec27c06c6f70fbc67b52c225b", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/3d731bc39968ac8ec27c06c6f70fbc67b52c225b", "committedDate": "2020-09-28T14:51:08Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NjM2NTI0", "url": "https://github.com/vividus-framework/vividus/pull/970#pullrequestreview-497636524", "createdAt": "2020-09-28T15:16:50Z", "commit": {"oid": "3d731bc39968ac8ec27c06c6f70fbc67b52c225b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNToxNjo1MFrOHZDONw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNToxNjo1MFrOHZDONw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAyOTIzOQ==", "bodyText": "noneMatch", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496029239", "createdAt": "2020-09-28T15:16:50Z", "author": {"login": "ikalinin1"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/model/TestCaseType.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.model;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public enum TestCaseType\n+{\n+    MANUAL, CUCUMBER;\n+\n+    public static TestCaseType getTestCaseType(Scenario scenario)\n+    {\n+        return !scenario.collectSteps().stream().map(Step::getOutcome).allMatch(\"comment\"::equals)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d731bc39968ac8ec27c06c6f70fbc67b52c225b"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NjM3MTQ1", "url": "https://github.com/vividus-framework/vividus/pull/970#pullrequestreview-497637145", "createdAt": "2020-09-28T15:17:31Z", "commit": {"oid": "3d731bc39968ac8ec27c06c6f70fbc67b52c225b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNToxNzozMVrOHZDQ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNToxNzozMVrOHZDQ1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAyOTkwOA==", "bodyText": "don't you mind to align stream? :)", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496029908", "createdAt": "2020-09-28T15:17:31Z", "author": {"login": "ikalinin1"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/util/StoryUtils.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.util;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n+import java.util.stream.Stream;\n+\n+import org.apache.commons.collections4.ListUtils;\n+import org.vividus.bdd.model.jbehave.Example;\n+import org.vividus.bdd.model.jbehave.Lifecycle;\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Story;\n+\n+public final class StoryUtils\n+{\n+    private StoryUtils()\n+    {\n+    }\n+\n+    public static List<Scenario> getFoldScenarios(Story story)\n+    {\n+        Lifecycle lifecycle = story.getLifecycle();\n+        List<Scenario> scenarios = story.getScenarios();\n+\n+        if (lifecycle == null || lifecycle.getParameters() == null)\n+        {\n+            return scenarios;\n+        }\n+\n+        Parameters lifecycleParameters = lifecycle.getParameters();\n+        int partition = scenarios.size() <= 1 ? 1 : scenarios.size() / lifecycleParameters.getValues().size();\n+        List<List<Scenario>> scenariosPerExample = ListUtils.partition(scenarios, partition);\n+\n+        return IntStream.range(0, partition)\n+                .mapToObj(index -> scenariosPerExample.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d731bc39968ac8ec27c06c6f70fbc67b52c225b"}, "originalPosition": 54}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2aa0a5244f61fab0122d6403d1f319712239fc5f", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/2aa0a5244f61fab0122d6403d1f319712239fc5f", "committedDate": "2020-09-28T15:55:09Z", "message": "Iter 0"}, "afterCommit": {"oid": "71dd40d990894249c3d58421af9f67f371116ced", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/71dd40d990894249c3d58421af9f67f371116ced", "committedDate": "2020-09-29T09:54:50Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71dd40d990894249c3d58421af9f67f371116ced", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/71dd40d990894249c3d58421af9f67f371116ced", "committedDate": "2020-09-29T09:54:50Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}, "afterCommit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/fcae1216ea6fb59de2e3254d91222ce55e91eff9", "committedDate": "2020-09-29T10:25:38Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4Mzg1NjEw", "url": "https://github.com/vividus-framework/vividus/pull/970#pullrequestreview-498385610", "createdAt": "2020-09-29T11:51:04Z", "commit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo1MTowNFrOHZpXZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjoxNjoyNFrOHZqN3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NDE4Mw==", "bodyText": "Create and update https://docs.getxray.app/display/XRAY/Test#Test-ManualTests[manual] and https://docs.getxray.app/display/XRAY/Test#Test-AutomatedTests[cucumber] test cases", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496654183", "createdAt": "2020-09-29T11:51:04Z", "author": {"login": "valfirst"}, "path": "docs/modules/integrations/pages/xray-exporter.adoc", "diffHunk": "@@ -5,6 +5,7 @@ Xray Exporter is a tool used to export test cases into Jira Xray Plugin.\n Features:\n \n * Create and update https://docs.getxray.app/display/XRAY/Test#Test-ManualTests[manual test] cases\n+* Create and update https://docs.getxray.app/display/XRAY/Test#Test-AutomatedTests[cucumber test] cases", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NDc2MA==", "bodyText": "the purpose is not clear", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496654760", "createdAt": "2020-09-29T11:52:15Z", "author": {"login": "valfirst"}, "path": "docs/modules/integrations/pages/xray-exporter.adoc", "diffHunk": "@@ -60,6 +61,12 @@ The Xray is a Jira plugin that uses custom Jira fields for it's data, one of the\n |`jira.fields-mapping.manual-steps`\n |Key of a field containing collection of manual steps\n \n+|`jira.fields-mapping.cucumber-scenario-type`\n+|Key of a field containing cucumer scenario type either `Scenario` or `Scenario Outline`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NjMwNg==", "bodyText": "buildParameterizedScenario -> buildExampleScenario", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496656306", "createdAt": "2020-09-29T11:55:16Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/converter/CucumberScenarioConverter.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.converter;\n+\n+import static java.lang.System.lineSeparator;\n+\n+import java.util.List;\n+import java.util.function.UnaryOperator;\n+import java.util.stream.Collectors;\n+\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public final class CucumberScenarioConverter\n+{\n+    private static final String COMMENT_KEYWORD = \"!-- \";\n+    private static final String CUCUMBER_SEPARATOR = \"|\";\n+\n+    private CucumberScenarioConverter()\n+    {\n+    }\n+\n+    public static CucumberScenario convert(Scenario scenario)\n+    {\n+        if (scenario.getExamples() != null)\n+        {\n+            return new CucumberScenario(\"Scenario Outline\", buildParameterizedScenario(scenario));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NjQ4MA==", "bodyText": "buildPlainScenario -> buildNormalScenario - following jbehave naming", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496656480", "createdAt": "2020-09-29T11:55:38Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/converter/CucumberScenarioConverter.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.converter;\n+\n+import static java.lang.System.lineSeparator;\n+\n+import java.util.List;\n+import java.util.function.UnaryOperator;\n+import java.util.stream.Collectors;\n+\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public final class CucumberScenarioConverter\n+{\n+    private static final String COMMENT_KEYWORD = \"!-- \";\n+    private static final String CUCUMBER_SEPARATOR = \"|\";\n+\n+    private CucumberScenarioConverter()\n+    {\n+    }\n+\n+    public static CucumberScenario convert(Scenario scenario)\n+    {\n+        if (scenario.getExamples() != null)\n+        {\n+            return new CucumberScenario(\"Scenario Outline\", buildParameterizedScenario(scenario));\n+        }\n+        return new CucumberScenario(\"Scenario\", buildPlainScenario(scenario));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1Nzk5OA==", "bodyText": "that's a bad design: mutable object is changed and returned", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496657998", "createdAt": "2020-09-29T11:58:30Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/converter/CucumberScenarioConverter.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.converter;\n+\n+import static java.lang.System.lineSeparator;\n+\n+import java.util.List;\n+import java.util.function.UnaryOperator;\n+import java.util.stream.Collectors;\n+\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public final class CucumberScenarioConverter\n+{\n+    private static final String COMMENT_KEYWORD = \"!-- \";\n+    private static final String CUCUMBER_SEPARATOR = \"|\";\n+\n+    private CucumberScenarioConverter()\n+    {\n+    }\n+\n+    public static CucumberScenario convert(Scenario scenario)\n+    {\n+        if (scenario.getExamples() != null)\n+        {\n+            return new CucumberScenario(\"Scenario Outline\", buildParameterizedScenario(scenario));\n+        }\n+        return new CucumberScenario(\"Scenario\", buildPlainScenario(scenario));\n+    }\n+\n+    private static String buildPlainScenario(Scenario scenario)\n+    {\n+        return getSteps(scenario, UnaryOperator.identity());\n+    }\n+\n+    private static String buildParameterizedScenario(Scenario scenario)\n+    {\n+        return getSteps(scenario, steps ->\n+        {\n+            String examples = buildScenarioExamplesTable(scenario.getExamples().getParameters());\n+            steps.add(examples);\n+            return steps;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1OTQyOA==", "bodyText": "customSerialize -> serializeCustomFields", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496659428", "createdAt": "2020-09-29T12:01:06Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/databind/AbstractTestCaseSerializer.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.databind;\n+\n+import java.io.IOException;\n+import java.util.Collection;\n+\n+import com.fasterxml.jackson.core.JsonGenerator;\n+import com.fasterxml.jackson.databind.JsonSerializer;\n+import com.fasterxml.jackson.databind.SerializerProvider;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.vividus.xray.configuration.JiraFieldsMapping;\n+import org.vividus.xray.model.AbstractTestCase;\n+\n+public abstract class AbstractTestCaseSerializer<T extends AbstractTestCase> extends JsonSerializer<T>\n+{\n+    private static final String NAME = \"name\";\n+\n+    @Autowired private JiraFieldsMapping jiraFieldsMapping;\n+\n+    @Override\n+    public void serialize(T testCase, JsonGenerator generator, SerializerProvider serializers) throws IOException\n+    {\n+        generator.writeStartObject();\n+        generator.writeObjectFieldStart(\"fields\");\n+\n+        writeObjectWithField(generator, \"project\", \"key\", testCase.getProjectKey());\n+\n+        String assignee = testCase.getAssignee();\n+        if (assignee != null)\n+        {\n+            writeObjectWithField(generator, \"assignee\", NAME, assignee);\n+        }\n+\n+        writeObjectWithField(generator, \"issuetype\", NAME, \"Test\");\n+\n+        writeObjectWithValueField(generator, jiraFieldsMapping.getTestCaseType(), testCase.getType());\n+\n+        generator.writeStringField(\"summary\", testCase.getSummary());\n+\n+        writeJsonArray(generator, \"labels\", testCase.getLabels(), false);\n+\n+        writeJsonArray(generator, \"components\", testCase.getComponents(), true);\n+\n+        customSerialize(testCase, generator);\n+\n+        generator.writeEndObject();\n+        generator.writeEndObject();\n+    }\n+\n+    protected void writeObjectWithValueField(JsonGenerator generator, String objectKey, String fieldValue)\n+            throws IOException\n+    {\n+        writeObjectWithField(generator, objectKey, \"value\", fieldValue);\n+    }\n+\n+    protected abstract void customSerialize(T testCase, JsonGenerator generator) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2MTQ4Nw==", "bodyText": "T parameters = parametersFactory.get();", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496661487", "createdAt": "2020-09-29T12:05:00Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/exporter/XrayExporter.java", "diffHunk": "@@ -115,17 +142,36 @@ public void exportResults() throws IOException\n         return Optional.empty();\n     }\n \n-    private TestCaseParameters createTestCaseParameters(String storyTitle, Scenario scenario) throws SyntaxException\n+    private ManualTestCaseParameters createManualTestCaseParameters(String storyTitle, Scenario scenario)\n+            throws SyntaxException\n     {\n-        String scenarioTitle = scenario.getTitle();\n-        List<Meta> scenarioMeta = scenario.getMeta();\n+        ManualTestCaseParameters parameters = createTestCaseParameters(TestCaseType.MANUAL, scenario,\n+                ManualTestCaseParameters::new);\n+        parameters.setSteps(ManualStepConverter.convert(storyTitle, scenario.getTitle(), scenario.collectSteps()));\n+        return parameters;\n+    }\n \n-        TestCaseParameters parameters = new TestCaseParameters();\n+    private CucumberTestCaseParameters createCucumberTestCaseParameters(Scenario scenario) throws SyntaxException\n+    {\n+        CucumberTestCaseParameters parameters = createTestCaseParameters(TestCaseType.CUCUMBER, scenario,\n+                CucumberTestCaseParameters::new);\n+        CucumberScenario cucumberScenario = CucumberScenarioConverter.convert(scenario);\n+        parameters.setScenarioType(cucumberScenario.getType());\n+        parameters.setScenario(cucumberScenario.getScenario());\n+        return parameters;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private <T extends AbstractTestCaseParameters> T createTestCaseParameters(TestCaseType type, Scenario scenario,\n+            Supplier<T> parametersFactory)\n+    {\n+        AbstractTestCaseParameters parameters = parametersFactory.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2MzUyOQ==", "bodyText": "AbstractTestCaseParameters parameters = parameterFactories.get(testCaseType).apply(scenarioTitle, scenario);\nAbstractTestCase testCase = testCaseFactories.get(testCaseType).apply(parameters);", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496663529", "createdAt": "2020-09-29T12:08:34Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/exporter/XrayExporter.java", "diffHunk": "@@ -93,16 +116,20 @@ public void exportResults() throws IOException\n \n         try\n         {\n-            TestCaseParameters parameters = createTestCaseParameters(storyTitle, scenario);\n+            TestCaseType testCaseType = TestCaseType.getTestCaseType(scenario);\n \n             String testCaseId = ensureOneValueOrNull(scenarioMeta, \"testCaseId\");\n+\n+            CreateParametersFunction parameters = parameterFactories.get(testCaseType);\n+            AbstractTestCase testCase = testCaseFactories.get(testCaseType)\n+                    .apply(parameters.apply(scenarioTitle, scenario));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2Njg2Nw==", "bodyText": "public ManualTestCase createManualTestCase(ManualTestCaseParameters parameters)\n    {\n        ManualTestCase testCase = new ManualTestCase();\n        fillTestCase(parameters, testCase);\n        testCase.setManualTestSteps(parameters.getSteps());\n        return testCase;\n    }\n\n    public CucumberTestCase createCucumberTestCase(CucumberTestCaseParameters parameters)\n    {\n        CucumberTestCase testCase = new CucumberTestCase();\n        fillTestCase(parameters, cucumberTestCase);\n        testCase.setScenarioType(parameters.getScenarioType());\n        testCase.setScenario(parameters.getScenario());\n        return testCase;\n    }\n\n    private void fillTestCase(AbstractTestCaseParameters parameters, AbstractTestCase testCase)\n    {\n        testCase.setType(parameters.getType().getValue());\n        testCase.setProjectKey(projectKey);\n        testCase.setAssignee(assignee);\n        testCase.setSummary(parameters.getSummary());\n        testCase.setLabels(parameters.getLabels());\n        testCase.setComponents(parameters.getComponents());\n    }", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496666867", "createdAt": "2020-09-29T12:14:20Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/factory/TestCaseFactory.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.factory;\n+\n+import java.util.function.Supplier;\n+\n+import org.vividus.xray.facade.AbstractTestCaseParameters;\n+import org.vividus.xray.facade.CucumberTestCaseParameters;\n+import org.vividus.xray.facade.ManualTestCaseParameters;\n+import org.vividus.xray.model.AbstractTestCase;\n+import org.vividus.xray.model.CucumberTestCase;\n+import org.vividus.xray.model.ManualTestCase;\n+\n+public class TestCaseFactory\n+{\n+    private final String projectKey;\n+    private final String assignee;\n+\n+    public TestCaseFactory(String projectKey, String assignee)\n+    {\n+        this.projectKey = projectKey;\n+        this.assignee = assignee;\n+    }\n+\n+    public ManualTestCase createManualTestCase(ManualTestCaseParameters parameters)\n+    {\n+        ManualTestCase manualTest = createTestCase(ManualTestCase::new, parameters);\n+        manualTest.setManualTestSteps(parameters.getSteps());\n+        return manualTest;\n+    }\n+\n+    public CucumberTestCase createCucumberTestCase(CucumberTestCaseParameters parameters)\n+    {\n+        CucumberTestCase cucumberTest = createTestCase(CucumberTestCase::new, parameters);\n+        cucumberTest.setScenarioType(parameters.getScenarioType());\n+        cucumberTest.setScenario(parameters.getScenario());\n+        return cucumberTest;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private <T extends AbstractTestCase> T createTestCase(Supplier<T> testCaseFactory,\n+            AbstractTestCaseParameters parameters)\n+    {\n+        AbstractTestCase testCase = testCaseFactory.get();\n+        testCase.setType(parameters.getType().getValue());\n+        testCase.setProjectKey(projectKey);\n+        testCase.setAssignee(assignee);\n+        testCase.setSummary(parameters.getSummary());\n+        testCase.setLabels(parameters.getLabels());\n+        testCase.setComponents(parameters.getComponents());\n+        return (T) testCase;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2NzYyMA==", "bodyText": "could you please explain the logic?", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496667620", "createdAt": "2020-09-29T12:15:35Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/model/TestCaseType.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.model;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public enum TestCaseType\n+{\n+    MANUAL, CUCUMBER;\n+\n+    public static TestCaseType getTestCaseType(Scenario scenario)\n+    {\n+        return scenario.collectSteps().stream().map(Step::getOutcome).noneMatch(\"comment\"::equals)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2ODEyNg==", "bodyText": "getFoldedScenarios", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496668126", "createdAt": "2020-09-29T12:16:24Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/util/StoryUtils.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.util;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n+import java.util.stream.Stream;\n+\n+import org.apache.commons.collections4.ListUtils;\n+import org.vividus.bdd.model.jbehave.Example;\n+import org.vividus.bdd.model.jbehave.Lifecycle;\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Story;\n+\n+public final class StoryUtils\n+{\n+    private StoryUtils()\n+    {\n+    }\n+\n+    public static List<Scenario> getFoldScenarios(Story story)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fcae1216ea6fb59de2e3254d91222ce55e91eff9", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/fcae1216ea6fb59de2e3254d91222ce55e91eff9", "committedDate": "2020-09-29T10:25:38Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}, "afterCommit": {"oid": "0a2f3441eea92d2b355573eebe68997cdd2e4c92", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/0a2f3441eea92d2b355573eebe68997cdd2e4c92", "committedDate": "2020-09-29T13:06:12Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a2f3441eea92d2b355573eebe68997cdd2e4c92", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/0a2f3441eea92d2b355573eebe68997cdd2e4c92", "committedDate": "2020-09-29T13:06:12Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}, "afterCommit": {"oid": "933cecb371ae2f294143ffd48a57ff2275e06cc0", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/933cecb371ae2f294143ffd48a57ff2275e06cc0", "committedDate": "2020-09-29T13:07:29Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "933cecb371ae2f294143ffd48a57ff2275e06cc0", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/933cecb371ae2f294143ffd48a57ff2275e06cc0", "committedDate": "2020-09-29T13:07:29Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}, "afterCommit": {"oid": "7e6d446259d516b144bece53eaab639a57b797aa", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/7e6d446259d516b144bece53eaab639a57b797aa", "committedDate": "2020-09-29T13:20:49Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e6d446259d516b144bece53eaab639a57b797aa", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/7e6d446259d516b144bece53eaab639a57b797aa", "committedDate": "2020-09-29T13:20:49Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}, "afterCommit": {"oid": "5f7894207136b25dac96240958c93a67195dab40", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/5f7894207136b25dac96240958c93a67195dab40", "committedDate": "2020-09-29T13:45:47Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f7894207136b25dac96240958c93a67195dab40", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/5f7894207136b25dac96240958c93a67195dab40", "committedDate": "2020-09-29T13:45:47Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}, "afterCommit": {"oid": "c300d45833937fc211fc58d61d7b59699cf02cb0", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/c300d45833937fc211fc58d61d7b59699cf02cb0", "committedDate": "2020-09-29T15:04:07Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NjI2NDEz", "url": "https://github.com/vividus-framework/vividus/pull/970#pullrequestreview-498626413", "createdAt": "2020-09-29T15:39:11Z", "commit": {"oid": "c300d45833937fc211fc58d61d7b59699cf02cb0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTozOToxMVrOHZz3Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTo0MTo0OFrOHZ0B_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgyNjE2Mg==", "bodyText": "getSteps(scenario) can be moved to a variable, placed before if and then re-used twice", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496826162", "createdAt": "2020-09-29T15:39:11Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/converter/CucumberScenarioConverter.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.converter;\n+\n+import static java.lang.System.lineSeparator;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.vividus.bdd.model.jbehave.Parameters;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public final class CucumberScenarioConverter\n+{\n+    private static final String COMMENT_KEYWORD = \"!-- \";\n+    private static final String CUCUMBER_SEPARATOR = \"|\";\n+\n+    private CucumberScenarioConverter()\n+    {\n+    }\n+\n+    public static CucumberScenario convert(Scenario scenario)\n+    {\n+        if (scenario.getExamples() != null)\n+        {\n+            return new CucumberScenario(\"Scenario Outline\", buildExampleScenario(scenario));\n+        }\n+        return new CucumberScenario(\"Scenario\", getSteps(scenario));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c300d45833937fc211fc58d61d7b59699cf02cb0"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgyODkyNg==", "bodyText": "return scenario.collectSteps().stream().map(Step::getOutcome).allMatch(\"comment\"::equals)\n                   ? MANUAL\n                   : CUCUMBER;", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r496828926", "createdAt": "2020-09-29T15:41:48Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/model/TestCaseType.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.model;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.vividus.bdd.model.jbehave.Scenario;\n+import org.vividus.bdd.model.jbehave.Step;\n+\n+public enum TestCaseType\n+{\n+    MANUAL, CUCUMBER;\n+\n+    public static TestCaseType getTestCaseType(Scenario scenario)\n+    {\n+        return !scenario.collectSteps().stream().map(Step::getOutcome).allMatch(\"comment\"::equals)\n+                   ? CUCUMBER\n+                   : MANUAL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c300d45833937fc211fc58d61d7b59699cf02cb0"}, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c300d45833937fc211fc58d61d7b59699cf02cb0", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/c300d45833937fc211fc58d61d7b59699cf02cb0", "committedDate": "2020-09-29T15:04:07Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}, "afterCommit": {"oid": "d4108ae9da7d9198c2f54a7dd8a5c6acb23b6e12", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/d4108ae9da7d9198c2f54a7dd8a5c6acb23b6e12", "committedDate": "2020-09-29T15:56:24Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4108ae9da7d9198c2f54a7dd8a5c6acb23b6e12", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/d4108ae9da7d9198c2f54a7dd8a5c6acb23b6e12", "committedDate": "2020-09-29T15:56:24Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}, "afterCommit": {"oid": "3d9517af08cbf52f7e7dff60d30febb6b8132564", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/3d9517af08cbf52f7e7dff60d30febb6b8132564", "committedDate": "2020-09-29T15:59:59Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MTUwNjcy", "url": "https://github.com/vividus-framework/vividus/pull/970#pullrequestreview-499150672", "createdAt": "2020-09-30T07:25:36Z", "commit": {"oid": "3d9517af08cbf52f7e7dff60d30febb6b8132564"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MTY4NzMx", "url": "https://github.com/vividus-framework/vividus/pull/970#pullrequestreview-499168731", "createdAt": "2020-09-30T07:51:05Z", "commit": {"oid": "3d9517af08cbf52f7e7dff60d30febb6b8132564"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNzo1MTowNVrOHaRZpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwODoxODoyOFrOHaSaHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMxMDExOQ==", "bodyText": "qwe?", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r497310119", "createdAt": "2020-09-30T07:51:05Z", "author": {"login": "valfirst"}, "path": "docs/modules/integrations/pages/xray-exporter.adoc", "diffHunk": "@@ -44,24 +44,60 @@ Please make sure that the `bdd.configuration.formats` property includes JSON val\n \n |===\n \n-== Jira Fields Mapping Properties\n+== Jira Fields Mapping\n \n The Xray is a Jira plugin that uses custom Jira fields for it's data, one of the ways to find out custom field names for particular field used by Xray on Jira UI (if access to Jira configuration is prohibited) is to request description of some issue like https://jira.example.com/rest/api/latest/issue/DUMMY-1.\n \n-[cols=\"1,2\", options=\"header\"]\n+=== Manual Test Case View\n+\n+image::manual.png[qwe]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d9517af08cbf52f7e7dff60d30febb6b8132564"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMxMDU3Nw==", "bodyText": "=== Manual Test Case Properties\n\nimage::manual..\n\n[cols=\"1,3,3\", options=\"header\"]\n...", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r497310577", "createdAt": "2020-09-30T07:51:54Z", "author": {"login": "valfirst"}, "path": "docs/modules/integrations/pages/xray-exporter.adoc", "diffHunk": "@@ -44,24 +44,60 @@ Please make sure that the `bdd.configuration.formats` property includes JSON val\n \n |===\n \n-== Jira Fields Mapping Properties\n+== Jira Fields Mapping\n \n The Xray is a Jira plugin that uses custom Jira fields for it's data, one of the ways to find out custom field names for particular field used by Xray on Jira UI (if access to Jira configuration is prohibited) is to request description of some issue like https://jira.example.com/rest/api/latest/issue/DUMMY-1.\n \n-[cols=\"1,2\", options=\"header\"]\n+=== Manual Test Case View\n+\n+image::manual.png[qwe]\n+\n+=== Manual Test Case Properties\n+\n+[cols=\"1,3,3\", options=\"header\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d9517af08cbf52f7e7dff60d30febb6b8132564"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMxMDg1NA==", "bodyText": "qweeee ?", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r497310854", "createdAt": "2020-09-30T07:52:20Z", "author": {"login": "valfirst"}, "path": "docs/modules/integrations/pages/xray-exporter.adoc", "diffHunk": "@@ -44,24 +44,60 @@ Please make sure that the `bdd.configuration.formats` property includes JSON val\n \n |===\n \n-== Jira Fields Mapping Properties\n+== Jira Fields Mapping\n \n The Xray is a Jira plugin that uses custom Jira fields for it's data, one of the ways to find out custom field names for particular field used by Xray on Jira UI (if access to Jira configuration is prohibited) is to request description of some issue like https://jira.example.com/rest/api/latest/issue/DUMMY-1.\n \n-[cols=\"1,2\", options=\"header\"]\n+=== Manual Test Case View\n+\n+image::manual.png[qwe]\n+\n+=== Manual Test Case Properties\n+\n+[cols=\"1,3,3\", options=\"header\"]\n |===\n \n+|Index\n |Property\n |Description\n \n+|<<#_manual_test_case_view, 1>>\n |`jira.fields-mapping.test-case-type`\n |Key of a field containing test case type\n \n+|<<#_manual_test_case_view, 2>>\n |`jira.fields-mapping.manual-steps`\n |Key of a field containing collection of manual steps\n \n |===\n \n+=== Cucumber Test Case View\n+\n+image::cucumber.png[qweeee]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d9517af08cbf52f7e7dff60d30febb6b8132564"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMxMTI0MQ==", "bodyText": "=== Cucumber Test Case Properties\n\nimage::cucumber.png....\n\n[cols=\"1,3,3\", options=\"header\"]\n...", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r497311241", "createdAt": "2020-09-30T07:52:58Z", "author": {"login": "valfirst"}, "path": "docs/modules/integrations/pages/xray-exporter.adoc", "diffHunk": "@@ -44,24 +44,60 @@ Please make sure that the `bdd.configuration.formats` property includes JSON val\n \n |===\n \n-== Jira Fields Mapping Properties\n+== Jira Fields Mapping\n \n The Xray is a Jira plugin that uses custom Jira fields for it's data, one of the ways to find out custom field names for particular field used by Xray on Jira UI (if access to Jira configuration is prohibited) is to request description of some issue like https://jira.example.com/rest/api/latest/issue/DUMMY-1.\n \n-[cols=\"1,2\", options=\"header\"]\n+=== Manual Test Case View\n+\n+image::manual.png[qwe]\n+\n+=== Manual Test Case Properties\n+\n+[cols=\"1,3,3\", options=\"header\"]\n |===\n \n+|Index\n |Property\n |Description\n \n+|<<#_manual_test_case_view, 1>>\n |`jira.fields-mapping.test-case-type`\n |Key of a field containing test case type\n \n+|<<#_manual_test_case_view, 2>>\n |`jira.fields-mapping.manual-steps`\n |Key of a field containing collection of manual steps\n \n |===\n \n+=== Cucumber Test Case View\n+\n+image::cucumber.png[qweeee]\n+\n+=== Cucumber Test Case Properties\n+\n+[cols=\"1,3,3\", options=\"header\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d9517af08cbf52f7e7dff60d30febb6b8132564"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMxMjYxMg==", "bodyText": "does it make sense to add an example with mixed test case parts: automated and manual?", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r497312612", "createdAt": "2020-09-30T07:55:15Z", "author": {"login": "valfirst"}, "path": "docs/modules/integrations/pages/xray-exporter.adoc", "diffHunk": "@@ -144,6 +180,31 @@ a|<<caching-credentials-link, caching-credentials>>\n \n |===\n \n+== Cucumber Test Cases\n+\n+=== Rules\n+\n+Any scenario that doesn't correspons to the <<_rules_2, manual test case rules>> is considered as cucumber test case\n+\n+=== Example\n+\n+```gherkin\n+Scenario: Verify link\n+Meta: @testCaseID TEST-231\n+      @requirementId STORY-783\n+      @xray.labels link\n+      @xray.components web\n+\n+Given I am on a page with the URL '${vividus-test-site-url}/links.html'\n+When I wait until the page has the title 'Links'\n+Then number of elements found by `<locator>` is equal to `1`\n+Examples:\n+|locator                        |\n+|By.linkUrl(#ElementId)         |\n+|By.linkUrlPart(Element)        |\n+|By.linkText(Link to an element)|\n+```\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d9517af08cbf52f7e7dff60d30febb6b8132564"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMyMzQyMQ==", "bodyText": "ManualTestCaseParameters parameters = new ManualTestCaseParameters();\nfillTestCaseParameters(parameters, TestCaseType.MANUAL, scenario);", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r497323421", "createdAt": "2020-09-30T08:13:14Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/exporter/XrayExporter.java", "diffHunk": "@@ -115,16 +141,34 @@ public void exportResults() throws IOException\n         return Optional.empty();\n     }\n \n-    private TestCaseParameters createTestCaseParameters(String storyTitle, Scenario scenario) throws SyntaxException\n+    private ManualTestCaseParameters createManualTestCaseParameters(String storyTitle, Scenario scenario)\n+            throws SyntaxException\n     {\n-        String scenarioTitle = scenario.getTitle();\n-        List<Meta> scenarioMeta = scenario.getMeta();\n+        ManualTestCaseParameters parameters = createTestCaseParameters(TestCaseType.MANUAL, scenario,\n+                ManualTestCaseParameters::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d9517af08cbf52f7e7dff60d30febb6b8132564"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMyNjYyMw==", "bodyText": "CucumberTestCaseParameters parameters = new CucumberTestCaseParameters();\nfillTestCaseParameters(parameters, TestCaseType.CUCUMBER, scenario);", "url": "https://github.com/vividus-framework/vividus/pull/970#discussion_r497326623", "createdAt": "2020-09-30T08:18:28Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/exporter/XrayExporter.java", "diffHunk": "@@ -115,16 +141,34 @@ public void exportResults() throws IOException\n         return Optional.empty();\n     }\n \n-    private TestCaseParameters createTestCaseParameters(String storyTitle, Scenario scenario) throws SyntaxException\n+    private ManualTestCaseParameters createManualTestCaseParameters(String storyTitle, Scenario scenario)\n+            throws SyntaxException\n     {\n-        String scenarioTitle = scenario.getTitle();\n-        List<Meta> scenarioMeta = scenario.getMeta();\n+        ManualTestCaseParameters parameters = createTestCaseParameters(TestCaseType.MANUAL, scenario,\n+                ManualTestCaseParameters::new);\n+        parameters.setSteps(ManualStepConverter.convert(storyTitle, scenario.getTitle(), scenario.collectSteps()));\n+        return parameters;\n+    }\n+\n+    private CucumberTestCaseParameters createCucumberTestCaseParameters(Scenario scenario)\n+    {\n+        CucumberTestCaseParameters parameters = createTestCaseParameters(TestCaseType.CUCUMBER, scenario,\n+                CucumberTestCaseParameters::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d9517af08cbf52f7e7dff60d30febb6b8132564"}, "originalPosition": 115}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a7ad105ea335d4be5595f6f9f9812aec6af09a3", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/0a7ad105ea335d4be5595f6f9f9812aec6af09a3", "committedDate": "2020-09-30T08:54:49Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d9517af08cbf52f7e7dff60d30febb6b8132564", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/3d9517af08cbf52f7e7dff60d30febb6b8132564", "committedDate": "2020-09-29T15:59:59Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}, "afterCommit": {"oid": "0a7ad105ea335d4be5595f6f9f9812aec6af09a3", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/0a7ad105ea335d4be5595f6f9f9812aec6af09a3", "committedDate": "2020-09-30T08:54:49Z", "message": "[xray-exporter] Add ability to export cucumber test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MjI3MTAz", "url": "https://github.com/vividus-framework/vividus/pull/970#pullrequestreview-499227103", "createdAt": "2020-09-30T09:04:00Z", "commit": {"oid": "0a7ad105ea335d4be5595f6f9f9812aec6af09a3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4981, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}