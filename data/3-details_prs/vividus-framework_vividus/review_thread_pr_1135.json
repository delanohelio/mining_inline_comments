{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNTQ5MTAx", "number": 1135, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMjozNDoxM1rOE4pfpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTozODoyMVrOE-CWOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3ODM1NTU4OnYy", "diffSide": "RIGHT", "path": "vividus/src/main/java/org/vividus/bdd/steps/BddVariableSteps.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMjozNDoxM1rOHysorQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMjozNDoxM1rOHysorQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkyMjE1Nw==", "bodyText": "maybe\n@when(\"I initialize $scopes variable $variableName with binary content of file from path $path\")", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r522922157", "createdAt": "2020-11-13T12:34:13Z", "author": {"login": "uarlouski"}, "path": "vividus/src/main/java/org/vividus/bdd/steps/BddVariableSteps.java", "diffHunk": "@@ -239,6 +240,26 @@ public void initVariableWithGivenValues(Set<VariableScope> scopes, String variab\n         bddVariableContext.putVariable(scopes, variableName, listOfMaps);\n     }\n \n+    /**\n+     * Loads resource located by path as a byte array and puts this variable into context.\n+     * Could be useful for the cases when one needs to pass a variable into step as a binary data.\n+     * @param scopes The set (comma separated list of scopes e.g.: STORY, NEXT_BATCHES) of variable's scope<br>\n+     * <i>Available scopes:</i>\n+     * <ul>\n+     * <li><b>STEP</b> - the variable will be available only within the step,\n+     * <li><b>SCENARIO</b> - the variable will be available only within the scenario,\n+     * <li><b>STORY</b> - the variable will be available within the whole story,\n+     * <li><b>NEXT_BATCHES</b> - the variable will be available starting from next batch\n+     * </ul>\n+     * @param variableName A name of variable to assign the values\n+     * @param path to a file\n+     */\n+    @When(\"I initialize $scopes variable `$variableName` with content of file from path `$path`\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ef0a3107388f7fbec9dfa7b17e5cb076f51dd9"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3ODYwODcwOnYy", "diffSide": "RIGHT", "path": "docs/modules/commons/pages/vividus-steps.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMzo1MDoyNFrOHyvCDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMzo1MDoyNFrOHyvCDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk2MTQyMA==", "bodyText": "I'm really doubtful regarding this step, have you thought about Vividus expression?", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r522961420", "createdAt": "2020-11-13T13:50:24Z", "author": {"login": "valfirst"}, "path": "docs/modules/commons/pages/vividus-steps.adoc", "diffHunk": "@@ -53,3 +53,31 @@ When I execute steps at most 5 times while variable `var` is < `3`:\n |!When I set the text found in search context to the 'scenario' variable 'var'!                                         |\n Then `${var}` is = `3`\n ----\n+\n+=== Save file as binary data\n+\n+==== *_Info_*\n+\n+Saves the file content to a variable as a binary data\n+\n+==== *_Wording_*\n+\n+[source,gherkin]\n+----\n+When I initialize $scopes variable `$variableName` with content of file from path `$path`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ef0a3107388f7fbec9dfa7b17e5cb076f51dd9"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3ODYxNjg1OnYy", "diffSide": "RIGHT", "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMzo1MjozOFrOHyvG4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMzo1MjozOFrOHyvG4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk2MjY1Nw==", "bodyText": "we mock responses, not requests", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r522962657", "createdAt": "2020-11-13T13:52:38Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "diffHunk": "@@ -568,6 +568,60 @@ Then number of HTTP GET requests with URL pattern `http://httpbin\\.org/get` is e\n ----\n \n \n+=== Proxy - Mock request with content", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ef0a3107388f7fbec9dfa7b17e5cb076f51dd9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3ODYzNjY3OnYy", "diffSide": "RIGHT", "path": "vividus-tests/src/main/resources/properties/configuration.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMzo1ODoxMVrOHyvTOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMzo1ODoxMVrOHyvTOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk2NTgxNg==", "bodyText": "unexpected change", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r522965816", "createdAt": "2020-11-13T13:58:11Z", "author": {"login": "valfirst"}, "path": "vividus-tests/src/main/resources/properties/configuration.properties", "diffHunk": "@@ -1,3 +1,3 @@\n-configuration.profiles=web/headless/chrome\n+configuration.profiles=web/desktop/chrome", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ef0a3107388f7fbec9dfa7b17e5cb076f51dd9"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3ODYzNzkzOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/test/java/org/vividus/proxy/steps/ProxyStepsTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMzo1ODoyOVrOHyvT8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMzo1ODoyOVrOHyvT8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk2NjAwMg==", "bodyText": "noisy change? no checkstyle violations?", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r522966002", "createdAt": "2020-11-13T13:58:29Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/test/java/org/vividus/proxy/steps/ProxyStepsTests.java", "diffHunk": "@@ -70,16 +74,21 @@\n import org.vividus.ui.web.action.IWebWaitActions;\n \n import io.netty.handler.codec.http.DefaultHttpHeaders;\n+import io.netty.handler.codec.http.FullHttpResponse;\n import io.netty.handler.codec.http.HttpHeaders;\n import io.netty.handler.codec.http.HttpRequest;\n+import io.netty.handler.codec.http.HttpResponse;\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import io.netty.handler.codec.http.HttpVersion;\n \n @ExtendWith(MockitoExtension.class)\n class ProxyStepsTests\n {\n+    private static final String CONTENT_LENGTH = \"Content-Length\";\n     private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n     private static final String URL = \"www.test.com\";\n     private static final String REQUESTS_MATCHING_URL_ASSERTION_PATTERN =\n-            \"Number of HTTP %s requests matching URL pattern '%s'\";\n+        \"Number of HTTP %s requests matching URL pattern '%s'\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ef0a3107388f7fbec9dfa7b17e5cb076f51dd9"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3ODY0MzE2OnYy", "diffSide": "RIGHT", "path": "vividus-tests/src/main/resources/story/integration/ProxyStepsTests.story", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMzo1OTo0OFrOHyvXHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMzo1OTo0OFrOHyvXHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk2NjgxMg==", "bodyText": "remove this line to stick examples to their scenario", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r522966812", "createdAt": "2020-11-13T13:59:48Z", "author": {"login": "valfirst"}, "path": "vividus-tests/src/main/resources/story/integration/ProxyStepsTests.story", "diffHunk": "@@ -55,3 +55,47 @@ Then a JSON element from '${response}' by the JSON path '$.headers' is equal to\n     \"Testname2\": \"testValue2\"\n }\n 'IGNORING_EXTRA_FIELDS\n+\n+Scenario: Verify step When I mock http requests with URL $rule `$url` with response code `$code` and content `$content`:$headers mocking resource with bytes\n+Meta:\n+    @requirementId 1104\n+Given I am on a page with the URL '${vividus-test-site-url}/frames.html'\n+When I switch to frame located `<frameId>`\n+Then number of elements found by `<elementId>` is = `0`\n+When I initialize scenario variable `mockedPage` with content of file from path `page.html`\n+When I mock HTTP responses with request URL which CONTAINS `example.com` using response code `200`, content `${mockedPage}` and headers:\n+|name        |value    |\n+|Content-Type|text/html|\n+When I refresh the page\n+When I switch to frame located `<frameId>`\n+Then number of elements found by `<elementId>` is = `1`\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ef0a3107388f7fbec9dfa7b17e5cb076f51dd9"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3ODY0NDgyOnYy", "diffSide": "RIGHT", "path": "vividus-tests/src/main/resources/story/integration/ProxyStepsTests.story", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNDowMDoxMlrOHyvYFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNDowMDoxMlrOHyvYFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk2NzA2Mw==", "bodyText": "remove this line to stick examples to their scenario", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r522967063", "createdAt": "2020-11-13T14:00:12Z", "author": {"login": "valfirst"}, "path": "vividus-tests/src/main/resources/story/integration/ProxyStepsTests.story", "diffHunk": "@@ -55,3 +55,47 @@ Then a JSON element from '${response}' by the JSON path '$.headers' is equal to\n     \"Testname2\": \"testValue2\"\n }\n 'IGNORING_EXTRA_FIELDS\n+\n+Scenario: Verify step When I mock http requests with URL $rule `$url` with response code `$code` and content `$content`:$headers mocking resource with bytes\n+Meta:\n+    @requirementId 1104\n+Given I am on a page with the URL '${vividus-test-site-url}/frames.html'\n+When I switch to frame located `<frameId>`\n+Then number of elements found by `<elementId>` is = `0`\n+When I initialize scenario variable `mockedPage` with content of file from path `page.html`\n+When I mock HTTP responses with request URL which CONTAINS `example.com` using response code `200`, content `${mockedPage}` and headers:\n+|name        |value    |\n+|Content-Type|text/html|\n+When I refresh the page\n+When I switch to frame located `<frameId>`\n+Then number of elements found by `<elementId>` is = `1`\n+\n+Examples:\n+|frameId       |elementId|\n+|id(exampleCom)|id(sw)   |\n+\n+Scenario: Verify step When I mock http requests with URL $rule `$url` with response code `$code` and content `$content`:$headers mocking the page\n+Meta:\n+    @requirementId 1104\n+When I mock HTTP responses with request URL which CONTAINS `frames.html` using response code `200`, content `#{loadResource(page.html)}` and headers:\n+|name        |value    |\n+|Content-Type|text/html|\n+Given I am on a page with the URL '${vividus-test-site-url}/frames.html'\n+Then number of elements found by `id(sw)` is = `1`\n+\n+Scenario: Verify step When I mock http requests with URL $rule `$url` with response code `$code`:$headers\n+Meta:\n+    @requirementId 1104\n+Given I am on a page with the URL '${vividus-test-site-url}/frames.html'\n+When I switch to frame located `<frameId>`\n+Then number of elements found by `<elementSelector>` is = `1`\n+When I mock HTTP responses with request URL which CONTAINS `example.com` using response code `404` and headers:\n+|name          |value|\n+|Content-Length|0    |\n+When I refresh the page\n+When I switch to frame located `<frameId>`\n+Then number of elements found by `<elementSelector>` is = `0`\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67ef0a3107388f7fbec9dfa7b17e5cb076f51dd9"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDc5NTEwOnYy", "diffSide": "RIGHT", "path": "docs/modules/commons/pages/expressions.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToxODoxN1rOH7ByTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToxODoxN1rOH7ByTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1NzI5NQ==", "bodyText": "loadBinaryResource ?", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531657295", "createdAt": "2020-11-27T15:18:17Z", "author": {"login": "valfirst"}, "path": "docs/modules/commons/pages/expressions.adoc", "diffHunk": "@@ -193,6 +193,25 @@ Loads the resource found at the provided path and replaces the expression with t\n When I initialize the scenario variable `my-data` with value `#{loadResource(/data/body.txt)}`\n ----\n \n+=== `loadResourceAsByteArray`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3694010764f0365d7a5682a9d1cef610258f7aad"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDc5NTgzOnYy", "diffSide": "RIGHT", "path": "docs/modules/commons/pages/expressions.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToxODozMlrOH7Byvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToxODozMlrOH7Byvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1NzQwNw==", "bodyText": "as bytes array -> as bytes", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531657407", "createdAt": "2020-11-27T15:18:32Z", "author": {"login": "valfirst"}, "path": "docs/modules/commons/pages/expressions.adoc", "diffHunk": "@@ -193,6 +193,25 @@ Loads the resource found at the provided path and replaces the expression with t\n When I initialize the scenario variable `my-data` with value `#{loadResource(/data/body.txt)}`\n ----\n \n+=== `loadResourceAsByteArray`\n+\n+Loads the resource found at the provided path as bytes array. Could be useful for the steps that accepting raw binary data.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3694010764f0365d7a5682a9d1cef610258f7aad"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDc5Nzc5OnYy", "diffSide": "RIGHT", "path": "docs/modules/commons/pages/expressions.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToxOToxNFrOH7Bz4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToxOToxNFrOH7Bz4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1NzY5OQ==", "bodyText": "the example contains invalid expression reference", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531657699", "createdAt": "2020-11-27T15:19:14Z", "author": {"login": "valfirst"}, "path": "docs/modules/commons/pages/expressions.adoc", "diffHunk": "@@ -193,6 +193,25 @@ Loads the resource found at the provided path and replaces the expression with t\n When I initialize the scenario variable `my-data` with value `#{loadResource(/data/body.txt)}`\n ----\n \n+=== `loadResourceAsByteArray`\n+\n+Loads the resource found at the provided path as bytes array. Could be useful for the steps that accepting raw binary data.\n+\n+[source, subs=\"+quotes\"]\n+----\n+#{loadResourceAsByteArray(*$pathToResource*)}\n+----\n+\n+* {path-parameter}\n+\n+.Load data from the project resource as bytes array\n+[source,gherkin]\n+----\n+When I mock HTTP responses with request URL which CONTAINS `frames.html` using response code `200`, content `#{loadResource(page.html)}` and headers:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3694010764f0365d7a5682a9d1cef610258f7aad"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDgwMjE4OnYy", "diffSide": "RIGHT", "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToyMDoyOFrOH7B2Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToyMDoyOFrOH7B2Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1ODMzOA==", "bodyText": "...I mock HTTP responses with request URL which...", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531658338", "createdAt": "2020-11-27T15:20:28Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "diffHunk": "@@ -588,6 +588,59 @@ Then number of HTTP GET requests with URL pattern `http://httpbin\\.org/get` is e\n ----\n \n \n+=== Proxy - Mock response with content\n+\n+{proxy}\n+Mocks HTTP response with a provided content\n+\n+[IMPORTANT]\n+No actual request will be executed. Short-circuited response will be returned.\n+\n+[source,gherkin]\n+----\n+When I mock http requests with URL $rule `$url` with response code `$code` and content `$content`:$headers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3694010764f0365d7a5682a9d1cef610258f7aad"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDgwNTYzOnYy", "diffSide": "RIGHT", "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToyMTo0M1rOH7B4gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToyMTo0M1rOH7B4gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1ODg4Mw==", "bodyText": "...I mock HTTP responses with request URL which...", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531658883", "createdAt": "2020-11-27T15:21:43Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "diffHunk": "@@ -588,6 +588,59 @@ Then number of HTTP GET requests with URL pattern `http://httpbin\\.org/get` is e\n ----\n \n \n+=== Proxy - Mock response with content\n+\n+{proxy}\n+Mocks HTTP response with a provided content\n+\n+[IMPORTANT]\n+No actual request will be executed. Short-circuited response will be returned.\n+\n+[source,gherkin]\n+----\n+When I mock http requests with URL $rule `$url` with response code `$code` and content `$content`:$headers\n+----\n+* `$rule` - xref:parameters:string-comparison-rule.adoc[String comparison rule]\n+* `$url` - the input value of URL to filter by\n+* `$code` - response status code\n+* `$content` - content to send within a response\n+* `$headers` - ExamplesTable representing the list of the headers with columns \"name\" and \"value\" specifying HTTP header names and values respectively\n+\n+.Hijack a page\n+[source,gherkin]\n+----\n+When I mock HTTP responses with request URL which CONTAINS `example.com` using response code `200`, content `#{loadResourceAsByteArray(page.html)}` and headers:\n+|name        |value    |\n+|Content-Type|text/html|\n+----\n+\n+\n+=== Proxy - Mock response without content\n+\n+{proxy}\n+Mocks HTTP response\n+\n+[IMPORTANT]\n+No actual request will be executed. Short-circuited response will be returned.\n+\n+[source,gherkin]\n+----\n+When I mock http requests with URL $rule `$url` with response code `$code` :$headers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3694010764f0365d7a5682a9d1cef610258f7aad"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDgyMjA2OnYy", "diffSide": "RIGHT", "path": "vividus-tests/src/main/resources/properties/configuration.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToyNjo1OFrOH7CCOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToyNzoyN1rOH7CDFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2MTM3MQ==", "bodyText": "configuration.properties is not the best place to configure global variables", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531661371", "createdAt": "2020-11-27T15:26:58Z", "author": {"login": "valfirst"}, "path": "vividus-tests/src/main/resources/properties/configuration.properties", "diffHunk": "@@ -1,3 +1,5 @@\n configuration.profiles=web/headless/chrome\n configuration.suite=integration\n configuration.environments=\n+\n+bdd.variables.global.vividus-test-site-url=https://vividus-test-site.herokuapp.com", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3694010764f0365d7a5682a9d1cef610258f7aad"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2MTU5MA==", "bodyText": "vividus-tests/src/main/resources/properties/environment/envinroment.properties ?", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531661590", "createdAt": "2020-11-27T15:27:27Z", "author": {"login": "valfirst"}, "path": "vividus-tests/src/main/resources/properties/configuration.properties", "diffHunk": "@@ -1,3 +1,5 @@\n configuration.profiles=web/headless/chrome\n configuration.suite=integration\n configuration.environments=\n+\n+bdd.variables.global.vividus-test-site-url=https://vividus-test-site.herokuapp.com", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2MTM3MQ=="}, "originalCommit": {"oid": "3694010764f0365d7a5682a9d1cef610258f7aad"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDgyNDY3OnYy", "diffSide": "RIGHT", "path": "vividus-tests/src/main/resources/story/integration/ProxyStepsTests.story", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToyNzo1NlrOH7CD1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNToyNzo1NlrOH7CD1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2MTc4MQ==", "bodyText": "please update the step syntax here and below", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531661781", "createdAt": "2020-11-27T15:27:56Z", "author": {"login": "valfirst"}, "path": "vividus-tests/src/main/resources/story/integration/ProxyStepsTests.story", "diffHunk": "@@ -55,3 +55,44 @@ Then a JSON element from '${response}' by the JSON path '$.headers' is equal to\n     \"Testname2\": \"testValue2\"\n }\n 'IGNORING_EXTRA_FIELDS\n+\n+Scenario: Verify step When I mock http requests with URL $rule `$url` with response code `$code` and content `$content`:$headers mocking resource with bytes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3694010764f0365d7a5682a9d1cef610258f7aad"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDg0NjMwOnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/IExpressionProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTozNTowN1rOH7CQ3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTozNjoxN1rOH7CTKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2NTExOA==", "bodyText": "public interface IExpressionProcessor<T>\n{\n    Optional<T> execute(String expression);\n}\n?", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531665118", "createdAt": "2020-11-27T15:35:07Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/IExpressionProcessor.java", "diffHunk": "@@ -20,5 +20,5 @@\n \n public interface IExpressionProcessor\n {\n-    Optional<String> execute(String expression);\n+    Optional<Object> execute(String expression);\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3694010764f0365d7a5682a9d1cef610258f7aad"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2NTcwNA==", "bodyText": "and in this case if you keep UnaryExpressionProcessor you won't need to change each and every expression processor", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531665704", "createdAt": "2020-11-27T15:36:17Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/IExpressionProcessor.java", "diffHunk": "@@ -20,5 +20,5 @@\n \n public interface IExpressionProcessor\n {\n-    Optional<String> execute(String expression);\n+    Optional<Object> execute(String expression);\n }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2NTExOA=="}, "originalCommit": {"oid": "3694010764f0365d7a5682a9d1cef610258f7aad"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDg1MzUzOnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/RandomIntExpressionProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTozNzoyNlrOH7CVPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTozNzoyNlrOH7CVPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2NjIzOA==", "bodyText": "Optional<Integer> ?", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531666238", "createdAt": "2020-11-27T15:37:26Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/RandomIntExpressionProcessor.java", "diffHunk": "@@ -31,7 +31,7 @@\n             \"^randomInt\\\\(\" + INT_NUMBER_REGEX + \",\\\\s*\" + INT_NUMBER_REGEX + \"\\\\)$\", Pattern.CASE_INSENSITIVE);\n \n     @Override\n-    public Optional<String> execute(String expression)\n+    public Optional<Object> execute(String expression)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3694010764f0365d7a5682a9d1cef610258f7aad"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDg1NjI3OnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/FunctionalExpressionProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTozODoyMVrOH7CW-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNTozODoyMVrOH7CW-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2NjY4Mg==", "bodyText": "I would kept UnaryExpressionProcessor as a child of FunctionalExpressionProcessor", "url": "https://github.com/vividus-framework/vividus/pull/1135#discussion_r531666682", "createdAt": "2020-11-27T15:38:21Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/FunctionalExpressionProcessor.java", "diffHunk": "@@ -17,25 +17,25 @@\n package org.vividus.bdd.expression;\n \n import java.util.Optional;\n-import java.util.function.UnaryOperator;\n+import java.util.function.Function;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n-public class UnaryExpressionProcessor implements IExpressionProcessor\n+public class FunctionalExpressionProcessor implements IExpressionProcessor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3694010764f0365d7a5682a9d1cef610258f7aad"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4935, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}