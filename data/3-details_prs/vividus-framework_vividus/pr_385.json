{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NzU2MDg0", "number": 385, "title": "Add ability to use filtering transformer for tables from external files", "bodyText": "", "createdAt": "2020-03-11T15:22:39Z", "url": "https://github.com/vividus-framework/vividus/pull/385", "merged": true, "mergeCommit": {"oid": "26b5221d4961cac741b308c7fec55a61fa3d4311"}, "closed": true, "closedAt": "2020-03-12T14:06:45Z", "author": {"login": "abudevich"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMo_ydgFqTM3Mjg3OTM3NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcM8CejgFqTM3MzU3MDk2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyODc5Mzc0", "url": "https://github.com/vividus-framework/vividus/pull/385#pullrequestreview-372879374", "createdAt": "2020-03-11T15:39:03Z", "commit": {"oid": "a3c3631f0c00d9bac6e4a104afad57641cf61096"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTozOTowM1rOF08q7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTozOTowM1rOF08q7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2NDMwMA==", "bodyText": "to avoid circular bean references please use this approach to inject ExamplesTableFactory: \n  \n    \n      vividus/vividus-plugin-applitools/src/main/resources/spring.xml\n    \n    \n         Line 32\n      in\n      8c58ece\n    \n    \n    \n    \n\n        \n          \n           <property name=\"examplesTableFactory\" value=\"#{@'configuration'.getExamplesTableFactory()}\" />", "url": "https://github.com/vividus-framework/vividus/pull/385#discussion_r391064300", "createdAt": "2020-03-11T15:39:03Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/FilteringTableTransformer.java", "diffHunk": "@@ -37,6 +43,8 @@\n     private static final String BY_MAX_ROWS_PROPERTY = \"byMaxRows\";\n     private static final String BY_COLUMNS_NAMES_PROPERTY = \"byColumnNames\";\n \n+    @Inject private ExtendedConfiguration configuration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3c3631f0c00d9bac6e4a104afad57641cf61096"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a3c3631f0c00d9bac6e4a104afad57641cf61096", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/a3c3631f0c00d9bac6e4a104afad57641cf61096", "committedDate": "2020-03-11T15:20:50Z", "message": "Add ability to use filtering transformer for tables from external files"}, "afterCommit": {"oid": "63fa15bc14d1664856b90fa166ca6c8bae1cb438", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/63fa15bc14d1664856b90fa166ca6c8bae1cb438", "committedDate": "2020-03-11T17:55:09Z", "message": "Add ability to use filtering transformer for tables from external files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNDk3MTc1", "url": "https://github.com/vividus-framework/vividus/pull/385#pullrequestreview-373497175", "createdAt": "2020-03-12T12:05:50Z", "commit": {"oid": "63fa15bc14d1664856b90fa166ca6c8bae1cb438"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63fa15bc14d1664856b90fa166ca6c8bae1cb438", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/63fa15bc14d1664856b90fa166ca6c8bae1cb438", "committedDate": "2020-03-11T17:55:09Z", "message": "Add ability to use filtering transformer for tables from external files"}, "afterCommit": {"oid": "b029722a3e1b5707c598501fd2d9eff5c0e4028d", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/b029722a3e1b5707c598501fd2d9eff5c0e4028d", "committedDate": "2020-03-12T12:14:59Z", "message": "to revert"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyOTI4MDY0", "url": "https://github.com/vividus-framework/vividus/pull/385#pullrequestreview-372928064", "createdAt": "2020-03-11T16:32:37Z", "commit": {"oid": "a3c3631f0c00d9bac6e4a104afad57641cf61096"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjozMjozN1rOF0_C4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjozMjozN1rOF0_C4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMzIwMQ==", "bodyText": "Optional.ofNullable(byMaxRows)\n                .map(Integer::parseInt)\n                .filter(m -> m > examplesTable.getRowCount())\n                .map(m -> examplesTable.getRows().subList(0, resultDataRows))\n                .orElseGet(examplesTable::getRows)", "url": "https://github.com/vividus-framework/vividus/pull/385#discussion_r391103201", "createdAt": "2020-03-11T16:32:37Z", "author": {"login": "ikalinin1"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/FilteringTableTransformer.java", "diffHunk": "@@ -49,41 +57,41 @@ public String transform(String tableAsString, ExamplesTableProperties properties\n         checkArgument(!(byMaxColumns != null && byColumnNames != null),\n                 \"Conflicting properties declaration found: '%s' and '%s'\",\n                 BY_MAX_COLUMNS_PROPERTY, BY_COLUMNS_NAMES_PROPERTY);\n+        ExamplesTable examplesTable = configuration.examplesTableFactory().createExamplesTable(tableAsString);\n \n-        List<String> tableRows = ExamplesTableProcessor.parseRows(tableAsString);\n-        List<String> headerValues = TableUtils.parseRow(tableRows.get(0), true, properties);\n-        List<Integer> filteredColumnIndexes = byColumnNames == null\n-                ? getLimitedColumns(headerValues, byMaxColumns) : getFilteredColumns(headerValues, byColumnNames);\n+        List<String> headerValues = examplesTable.getHeaders();\n+        int columnsLimit = byMaxColumns == null\n+                ? headerValues.size() : Math.min(headerValues.size(), Integer.parseInt(byMaxColumns));\n+        List<String> filteredColumnsNames = byColumnNames == null ? headerValues.subList(0, columnsLimit)\n+                : Arrays.stream(StringUtils.split(byColumnNames, ';')).map(String::trim).collect(Collectors.toList());\n+        Set<String> filteredHeaders = new HashSet<>(filteredColumnsNames);\n \n-        int resultDataRows = byMaxRows == null ? tableRows.size() - 1 : Integer.parseInt(byMaxRows);\n-        List<List<String>> updatedDataRows = ExamplesTableProcessor.parseDataRows(tableRows, properties)\n-                .stream()\n-                .limit(resultDataRows)\n-                .map(r -> filterRowByIndexes(filteredColumnIndexes, r))\n-                .collect(Collectors.toList());\n+        List<Map<String, String>> result = filterByHeaders(filteredHeaders, headerValues,\n+                getFilteredRows(byMaxRows, examplesTable));\n \n-        return ExamplesTableProcessor.buildExamplesTable(filterRowByIndexes(filteredColumnIndexes, headerValues),\n-                updatedDataRows, properties, true);\n-    }\n+        List<List<String>> resultRows = result.stream()\n+                .map(TreeMap::new)\n+                .map(Map::values)\n+                .map(ArrayList::new)\n+                .collect(Collectors.toList());\n \n-    private List<Integer> getLimitedColumns(List<String> headerValues, String byMaxColumns)\n-    {\n-        int columnsLimit = byMaxColumns == null\n-                ? headerValues.size() : Math.min(headerValues.size(), Integer.parseInt(byMaxColumns));\n-        return IntStream.rangeClosed(0, columnsLimit - 1).boxed().collect(Collectors.toList());\n+        return ExamplesTableProcessor.buildExamplesTable(filteredHeaders, resultRows, properties, true, true);\n     }\n \n-    private List<Integer> getFilteredColumns(List<String> headerValues, String byColumnNames)\n+    private List<Map<String, String>> filterByHeaders(Set<String> filteredHeaders, List<String> headerValues,\n+            List<Map<String, String>> result)\n     {\n-        return Arrays.stream(StringUtils.split(byColumnNames, ';'))\n-                .map(String::trim)\n-                .map(headerValues::indexOf)\n-                .filter(i -> i > -1)\n-                .collect(Collectors.toList());\n+        Set<String> headersForDeleting = new HashSet<>(headerValues);\n+        headersForDeleting.removeAll(filteredHeaders);\n+        result.stream().map(m -> m.keySet().removeAll(headersForDeleting))\n+            .collect(Collectors.toList());\n+        return result;\n     }\n \n-    private List<String> filterRowByIndexes(List<Integer> columnsToUse, List<String> row)\n+    private List<Map<String, String>> getFilteredRows(String byMaxRows, ExamplesTable examplesTable)\n     {\n-        return row.stream().filter(e -> columnsToUse.contains(row.indexOf(e))).collect(Collectors.toList());\n+        int resultDataRows = byMaxRows == null ? examplesTable.getRowCount()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3c3631f0c00d9bac6e4a104afad57641cf61096"}, "originalPosition": 97}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b029722a3e1b5707c598501fd2d9eff5c0e4028d", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/b029722a3e1b5707c598501fd2d9eff5c0e4028d", "committedDate": "2020-03-12T12:14:59Z", "message": "to revert"}, "afterCommit": {"oid": "7e6a62c51a637c853b3b2b6b282b2470a65c6f8b", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/7e6a62c51a637c853b3b2b6b282b2470a65c6f8b", "committedDate": "2020-03-12T12:44:06Z", "message": "to revert"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e6a62c51a637c853b3b2b6b282b2470a65c6f8b", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/7e6a62c51a637c853b3b2b6b282b2470a65c6f8b", "committedDate": "2020-03-12T12:44:06Z", "message": "to revert"}, "afterCommit": {"oid": "9a8c77d9c374a31c6215166e367ebab1d33bb05d", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/9a8c77d9c374a31c6215166e367ebab1d33bb05d", "committedDate": "2020-03-12T13:16:11Z", "message": "Add ability to use filtering transformer for tables from external files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6761449ffe0a11da92f9f068a1b64cb4b8c445ce", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/6761449ffe0a11da92f9f068a1b64cb4b8c445ce", "committedDate": "2020-03-12T13:32:23Z", "message": "Add ability to use filtering transformer for tables from external files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a8c77d9c374a31c6215166e367ebab1d33bb05d", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/9a8c77d9c374a31c6215166e367ebab1d33bb05d", "committedDate": "2020-03-12T13:16:11Z", "message": "Add ability to use filtering transformer for tables from external files"}, "afterCommit": {"oid": "6761449ffe0a11da92f9f068a1b64cb4b8c445ce", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/6761449ffe0a11da92f9f068a1b64cb4b8c445ce", "committedDate": "2020-03-12T13:32:23Z", "message": "Add ability to use filtering transformer for tables from external files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNTY5OTY0", "url": "https://github.com/vividus-framework/vividus/pull/385#pullrequestreview-373569964", "createdAt": "2020-03-12T13:49:02Z", "commit": {"oid": "6761449ffe0a11da92f9f068a1b64cb4b8c445ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNTcwOTY5", "url": "https://github.com/vividus-framework/vividus/pull/385#pullrequestreview-373570969", "createdAt": "2020-03-12T13:50:11Z", "commit": {"oid": "6761449ffe0a11da92f9f068a1b64cb4b8c445ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 365, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}