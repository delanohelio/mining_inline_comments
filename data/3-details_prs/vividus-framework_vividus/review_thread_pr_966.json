{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNjIzNjcz", "number": 966, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNzoxNDowMFrOEnVhaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODo1ODowMFrOEnkdTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjgyNTM3OnYy", "diffSide": "RIGHT", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/exporter/XrayExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNzoxNDowMFrOHX3v-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNzoxNDowMFrOHX3v-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5MjY5Ng==", "bodyText": "linkTestCasesToTestExecution(testCaseIds);\npublishErrors();", "url": "https://github.com/vividus-framework/vividus/pull/966#discussion_r494792696", "createdAt": "2020-09-25T07:14:00Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/exporter/XrayExporter.java", "diffHunk": "@@ -64,28 +64,29 @@\n \n     public void exportResults() throws IOException\n     {\n+        List<String> testCaseIds = new ArrayList<>();\n         for (Story story : readStories())\n         {\n             LOGGER.atInfo().addArgument(story::getPath).log(\"Exporting scenarios from {} story\");\n \n             for (Scenario scenario : story.getScenarios())\n             {\n-                exportScenario(story.getPath(), scenario);\n+                exportScenario(story.getPath(), scenario).ifPresent(testCaseIds::add);\n             }\n         }\n \n-        publishErrors();\n+        afterExport(testCaseIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c31359ce741f49fde865a818d4be1ebeb1e8b33"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjgyODc4OnYy", "diffSide": "RIGHT", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/facade/XrayFacade.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNzoxNTowNlrOHX3x7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjo0ODowOVrOHYLLxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5MzE5Nw==", "bodyText": "Link or Add ?", "url": "https://github.com/vividus-framework/vividus/pull/966#discussion_r494793197", "createdAt": "2020-09-25T07:15:06Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/facade/XrayFacade.java", "diffHunk": "@@ -75,6 +79,17 @@ public void updateTestCase(String testCaseKey, TestCaseParameters testCaseParame\n         LOGGER.atInfo().addArgument(testCaseKey).log(\"Test with key {} has been updated\");\n     }\n \n+    public void updateTestExecution(String testExecutionKey, List<String> testCaseKeys) throws IOException\n+    {\n+        TestExecution testExecution = new TestExecution(testCaseKeys);\n+        String testExecutionRequest = objectMapper.writeValueAsString(testExecution);\n+        LOGGER.atInfo()\n+              .addArgument(() -> StringUtils.join(testCaseKeys, \", \"))\n+              .addArgument(testExecutionKey)\n+              .log(\"Add {} test cases to {} test execution\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c31359ce741f49fde865a818d4be1ebeb1e8b33"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5NDMxMw==", "bodyText": "from API point of view add, I'll ask end users what they prefer", "url": "https://github.com/vividus-framework/vividus/pull/966#discussion_r494794313", "createdAt": "2020-09-25T07:17:34Z", "author": {"login": "uarlouski"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/facade/XrayFacade.java", "diffHunk": "@@ -75,6 +79,17 @@ public void updateTestCase(String testCaseKey, TestCaseParameters testCaseParame\n         LOGGER.atInfo().addArgument(testCaseKey).log(\"Test with key {} has been updated\");\n     }\n \n+    public void updateTestExecution(String testExecutionKey, List<String> testCaseKeys) throws IOException\n+    {\n+        TestExecution testExecution = new TestExecution(testCaseKeys);\n+        String testExecutionRequest = objectMapper.writeValueAsString(testExecution);\n+        LOGGER.atInfo()\n+              .addArgument(() -> StringUtils.join(testCaseKeys, \", \"))\n+              .addArgument(testExecutionKey)\n+              .log(\"Add {} test cases to {} test execution\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5MzE5Nw=="}, "originalCommit": {"oid": "5c31359ce741f49fde865a818d4be1ebeb1e8b33"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTExMTEwOA==", "bodyText": "decided to use Add", "url": "https://github.com/vividus-framework/vividus/pull/966#discussion_r495111108", "createdAt": "2020-09-25T16:48:09Z", "author": {"login": "uarlouski"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/facade/XrayFacade.java", "diffHunk": "@@ -75,6 +79,17 @@ public void updateTestCase(String testCaseKey, TestCaseParameters testCaseParame\n         LOGGER.atInfo().addArgument(testCaseKey).log(\"Test with key {} has been updated\");\n     }\n \n+    public void updateTestExecution(String testExecutionKey, List<String> testCaseKeys) throws IOException\n+    {\n+        TestExecution testExecution = new TestExecution(testCaseKeys);\n+        String testExecutionRequest = objectMapper.writeValueAsString(testExecution);\n+        LOGGER.atInfo()\n+              .addArgument(() -> StringUtils.join(testCaseKeys, \", \"))\n+              .addArgument(testExecutionKey)\n+              .log(\"Add {} test cases to {} test execution\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5MzE5Nw=="}, "originalCommit": {"oid": "5c31359ce741f49fde865a818d4be1ebeb1e8b33"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NjgzMTAyOnYy", "diffSide": "RIGHT", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/model/TestExecution.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNzoxNTo1MFrOHX3zOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNzoxNTo1MFrOHX3zOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc5MzUyOQ==", "bodyText": "just return it as is", "url": "https://github.com/vividus-framework/vividus/pull/966#discussion_r494793529", "createdAt": "2020-09-25T07:15:50Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/model/TestExecution.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.xray.model;\n+\n+import java.util.List;\n+\n+public class TestExecution\n+{\n+    private final List<String> add;\n+\n+    public TestExecution(List<String> add)\n+    {\n+        this.add = add;\n+    }\n+\n+    public List<String> getAdd()\n+    {\n+        return List.copyOf(add);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c31359ce741f49fde865a818d4be1ebeb1e8b33"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTI3MjQ1OnYy", "diffSide": "RIGHT", "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/exporter/XrayExporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODo1ODowMFrOHYPIgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxODo1ODowMFrOHYPIgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE3NTgxMQ==", "bodyText": "linkTestCasesToTestExecution -> addTestCasesToTestExecution", "url": "https://github.com/vividus-framework/vividus/pull/966#discussion_r495175811", "createdAt": "2020-09-25T18:58:00Z", "author": {"login": "valfirst"}, "path": "vividus-to-xray-exporter/src/main/java/org/vividus/xray/exporter/XrayExporter.java", "diffHunk": "@@ -124,6 +128,15 @@ private TestCaseParameters createTestCaseParameters(String storyTitle, Scenario\n         return parameters;\n     }\n \n+    private void linkTestCasesToTestExecution(List<String> testCaseIds) throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "390a62adc9f858f37e12afb45c0af6302fa67df8"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 143, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}