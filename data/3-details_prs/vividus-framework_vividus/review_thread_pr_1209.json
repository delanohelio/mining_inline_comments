{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MDY1NTE3", "number": 1209, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoxNjoxNlrOFC2AWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzoyODoxOFrOFC7Imw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTI2Mjk3OnYy", "diffSide": "RIGHT", "path": "vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoxNjoxNlrOICM6mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoxOToyMFrOICNDGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3OTY3NA==", "bodyText": "statusesForExport sounds like we should export only test cases with such statuses, but if this is empty we export all test cases, maybe set some default value?", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539179674", "createdAt": "2020-12-09T10:16:16Z", "author": {"login": "uarlouski"}, "path": "vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java", "diffHunk": "@@ -62,10 +62,26 @@ public TestCaseParser(ZephyrExporterProperties zephyrExporterProperties)\n         {\n             testCasesForImporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n         }\n+        testCasesForImporting = filterByStatuses(testCasesForImporting);\n         LOGGER.info(\"Test cases for exporting to JIRA: {}\", testCasesForImporting);\n         return testCasesForImporting;\n     }\n \n+    private List<TestCase> filterByStatuses(List<TestCase> testCases)\n+    {\n+        List<TestCaseStatus> statusesForExport = zephyrExporterProperties.getStatusesForExport();\n+        if (statusesForExport.isEmpty())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a5a197aacd4b6cd0b9fc07a443562fa80108630"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4MTg1MQ==", "bodyText": "Anything like zephyr.exporter.statuses-for-export=FAILD,BROKEN,PENDING,UNKNOWN,SKIPPED,PASSED ?", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539181851", "createdAt": "2020-12-09T10:19:20Z", "author": {"login": "abudevich"}, "path": "vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java", "diffHunk": "@@ -62,10 +62,26 @@ public TestCaseParser(ZephyrExporterProperties zephyrExporterProperties)\n         {\n             testCasesForImporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n         }\n+        testCasesForImporting = filterByStatuses(testCasesForImporting);\n         LOGGER.info(\"Test cases for exporting to JIRA: {}\", testCasesForImporting);\n         return testCasesForImporting;\n     }\n \n+    private List<TestCase> filterByStatuses(List<TestCase> testCases)\n+    {\n+        List<TestCaseStatus> statusesForExport = zephyrExporterProperties.getStatusesForExport();\n+        if (statusesForExport.isEmpty())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3OTY3NA=="}, "originalCommit": {"oid": "7a5a197aacd4b6cd0b9fc07a443562fa80108630"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTI2NDQxOnYy", "diffSide": "RIGHT", "path": "vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoxNjozNFrOICM7dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoxNjozNFrOICM7dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3OTg5Mw==", "bodyText": "redundant else", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539179893", "createdAt": "2020-12-09T10:16:34Z", "author": {"login": "uarlouski"}, "path": "vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java", "diffHunk": "@@ -62,10 +62,26 @@ public TestCaseParser(ZephyrExporterProperties zephyrExporterProperties)\n         {\n             testCasesForImporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n         }\n+        testCasesForImporting = filterByStatuses(testCasesForImporting);\n         LOGGER.info(\"Test cases for exporting to JIRA: {}\", testCasesForImporting);\n         return testCasesForImporting;\n     }\n \n+    private List<TestCase> filterByStatuses(List<TestCase> testCases)\n+    {\n+        List<TestCaseStatus> statusesForExport = zephyrExporterProperties.getStatusesForExport();\n+        if (statusesForExport.isEmpty())\n+        {\n+            return testCases;\n+        }\n+        else", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a5a197aacd4b6cd0b9fc07a443562fa80108630"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTMwNTUzOnYy", "diffSide": "RIGHT", "path": "vividus-to-zephyr-exporter/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoyNTozNFrOICNTzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoyNTozNFrOICNTzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4NjEyNw==", "bodyText": "zephyr.exporter.statuses-of-test-cases-to-add-to-execution", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539186127", "createdAt": "2020-12-09T10:25:34Z", "author": {"login": "valfirst"}, "path": "vividus-to-zephyr-exporter/src/main/resources/application.properties", "diffHunk": "@@ -35,3 +35,5 @@ zephyr.statuses.PENDING=TEST NEEDS REWORK\n zephyr.statuses.UNKNOWN=PASSED WITH REMARKS\n zephyr.statuses.SKIPPED=SCHEDULED\n zephyr.statuses.PASSED=PASSED\n+\n+zephyr.exporter.statuses-for-export=", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a5a197aacd4b6cd0b9fc07a443562fa80108630"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTMwNzE3OnYy", "diffSide": "RIGHT", "path": "vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoyNTo1M1rOICNUuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoyNTo1M1rOICNUuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4NjM2MA==", "bodyText": "Importing -> Exporting", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539186360", "createdAt": "2020-12-09T10:25:53Z", "author": {"login": "valfirst"}, "path": "vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java", "diffHunk": "@@ -62,10 +62,26 @@ public TestCaseParser(ZephyrExporterProperties zephyrExporterProperties)\n         {\n             testCasesForImporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n         }\n+        testCasesForImporting = filterByStatuses(testCasesForImporting);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a5a197aacd4b6cd0b9fc07a443562fa80108630"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTg2Njk2OnYy", "diffSide": "RIGHT", "path": "vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjozNToxN1rOICSbOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjozNToxN1rOICSbOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI2OTk0Ng==", "bodyText": "TestCaseStatus testCaseStatus = entry.getValue().first();\nif (zephyrExporterProperties.getStatusesOfTestCasesToAddToExecution().contains(testCaseStatus))\n{\n    testCasesForExporting.add(new TestCase(entry.getKey(), testCaseStatus));\n}", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539269946", "createdAt": "2020-12-09T12:35:17Z", "author": {"login": "valfirst"}, "path": "vividus-to-zephyr-exporter/src/main/java/org/vividus/zephyr/parser/TestCaseParser.java", "diffHunk": "@@ -57,13 +57,21 @@ public TestCaseParser(ZephyrExporterProperties zephyrExporterProperties)\n                 .collect(Collectors.groupingBy(TestCase::getKey,\n                         Collectors.mapping(TestCase::getStatus, Collectors.toCollection(TreeSet::new))));\n \n-        List<TestCase> testCasesForImporting = new ArrayList<>();\n+        List<TestCase> testCasesForExporting = new ArrayList<>();\n         for (Map.Entry<String, TreeSet<TestCaseStatus>> entry : testCasesMap.entrySet())\n         {\n-            testCasesForImporting.add(new TestCase(entry.getKey(), entry.getValue().first()));\n+            testCasesForExporting.add(new TestCase(entry.getKey(), entry.getValue().first()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ff78dff2860b117e2e9bd582d04c38790ea9ca7"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjEwMTMyOnYy", "diffSide": "RIGHT", "path": "docs/modules/integrations/pages/zephyr-exporter.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzoyNzo1MFrOICUjxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzoyNzo1MFrOICUjxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwNDkwMQ==", "bodyText": "why is it required if it has default val?", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539304901", "createdAt": "2020-12-09T13:27:50Z", "author": {"login": "uarlouski"}, "path": "docs/modules/integrations/pages/zephyr-exporter.adoc", "diffHunk": "@@ -24,6 +24,10 @@ Features:\n |false\n |Property for update existing executions statuses only.\n \n+|`zephyr.exporter.statuses-of-test-cases-to-add-to-execution`\n+|true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bd6214f43bb3e6ad95fc29d3ee02a961c6a34b0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjEwMzMxOnYy", "diffSide": "RIGHT", "path": "vividus-to-zephyr-exporter/src/test/java/org/vividus/zephyr/parser/TestCaseParserTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzoyODoxOFrOICUlCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzoyODoxOFrOICUlCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMwNTIyNg==", "bodyText": "testLogger.getLoggingEvents() cache", "url": "https://github.com/vividus-framework/vividus/pull/1209#discussion_r539305226", "createdAt": "2020-12-09T13:28:18Z", "author": {"login": "uarlouski"}, "path": "vividus-to-zephyr-exporter/src/test/java/org/vividus/zephyr/parser/TestCaseParserTests.java", "diffHunk": "@@ -111,19 +115,39 @@ void testResultsProblemWithReading() throws URISyntaxException\n     void testCreateTestCases() throws URISyntaxException, IOException\n     {\n         configureObjectMapper();\n-        Path sourceDirectory = Paths.get(getClass().getResource(\"/test-cases\").toURI());\n+        Path sourceDirectory = Paths.get(getClass().getResource(RESOURCE_PATH).toURI());\n         when(zephyrExporterProperties.getSourceDirectory()).thenReturn(sourceDirectory);\n+        when(zephyrExporterProperties.getStatusesOfTestCasesToAddToExecution())\n+            .thenReturn(List.of(TestCaseStatus.SKIPPED, TestCaseStatus.PASSED));\n         List<TestCase> testCases = testCaseParser.createTestCases(objectMapper);\n         assertEquals(testCases.size(), 2);\n         assertThat(testLogger.getLoggingEvents().get(0).getMessage(), is(JSON_FILES_STRING));\n         assertThat(testLogger.getLoggingEvents().get(0).getLevel(), is(Level.INFO));\n-        assertThat(testLogger.getLoggingEvents().get(1).getMessage(), is(\"Test cases: {}\"));\n+        assertThat(testLogger.getLoggingEvents().get(1).getMessage(), is(TEST_CASES_STRING));\n         assertThat(testLogger.getLoggingEvents().get(1).getLevel(), is(Level.INFO));\n-        assertThat(testLogger.getLoggingEvents().get(2).getMessage(), is(\"Test cases for exporting to JIRA: {}\"));\n+        assertThat(testLogger.getLoggingEvents().get(2).getMessage(), is(FOR_EXPORTING_STRING));\n         assertThat(testLogger.getLoggingEvents().get(2).getLevel(), is(Level.INFO));\n         assertThat(testLogger.getLoggingEvents().size(), equalTo(3));\n     }\n \n+    @Test\n+    void testCreateTestCasesWithStatusFilter() throws URISyntaxException, IOException\n+    {\n+        configureObjectMapper();\n+        Path sourceDirectory = Paths.get(getClass().getResource(RESOURCE_PATH).toURI());\n+        when(zephyrExporterProperties.getSourceDirectory()).thenReturn(sourceDirectory);\n+        when(zephyrExporterProperties.getStatusesOfTestCasesToAddToExecution())\n+            .thenReturn(List.of(TestCaseStatus.PASSED));\n+        List<TestCase> testCases = testCaseParser.createTestCases(objectMapper);\n+        assertEquals(testCases.size(), 1);\n+        assertThat(testLogger.getLoggingEvents().get(0).getMessage(), is(JSON_FILES_STRING));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bd6214f43bb3e6ad95fc29d3ee02a961c6a34b0"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4970, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}