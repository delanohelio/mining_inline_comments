{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MDU3NDY3", "number": 1090, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDozNDoyMVrOE0ZzKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDozNDoyMVrOE0ZzKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzg0MTA0OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-kafka/src/test/java/org/vividus/bdd/steps/kafka/KafkaStepsTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDozNDoyMVrOHsG5vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDozNDoyMVrOHsG5vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAxMjQ3Nw==", "bodyText": "code smell here", "url": "https://github.com/vividus-framework/vividus/pull/1090#discussion_r516012477", "createdAt": "2020-11-02T14:34:21Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-kafka/src/test/java/org/vividus/bdd/steps/kafka/KafkaStepsTests.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.steps.kafka;\n+\n+import static java.util.stream.Collectors.toMap;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeoutException;\n+\n+import org.apache.kafka.clients.consumer.Consumer;\n+import org.apache.kafka.clients.consumer.ConsumerConfig;\n+import org.apache.kafka.clients.consumer.ConsumerRecord;\n+import org.apache.kafka.clients.consumer.ConsumerRecords;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.kafka.core.ConsumerFactory;\n+import org.springframework.kafka.core.DefaultKafkaConsumerFactory;\n+import org.springframework.kafka.test.EmbeddedKafkaBroker;\n+import org.springframework.kafka.test.context.EmbeddedKafka;\n+import org.springframework.kafka.test.utils.KafkaTestUtils;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+import org.vividus.util.property.IPropertyParser;\n+\n+@EmbeddedKafka(topics = KafkaStepsTests.TOPIC)\n+@ExtendWith({ MockitoExtension.class, SpringExtension.class })\n+public class KafkaStepsTests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b2455a13d4a813918858210dd7ab5450044bf9e"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 50, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}