{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4ODU2NzE1", "number": 996, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzoyNDo0OVrOErLYLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzoyNDo0OVrOErLYLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzEwNjM2OnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/DistinctingTableTransformer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzoyNDo0OVrOHdzKog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzoyNDo0OVrOHdzKog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAwOTA1OA==", "bodyText": "z -> use some menaingful name", "url": "https://github.com/vividus-framework/vividus/pull/996#discussion_r501009058", "createdAt": "2020-10-07T13:24:49Z", "author": {"login": "ikalinin1"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/transformer/DistinctingTableTransformer.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.transformer;\n+\n+import java.util.Collection;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Named;\n+\n+import org.jbehave.core.model.ExamplesTable.TableProperties;\n+import org.jbehave.core.model.ExamplesTable.TableRows;\n+import org.jbehave.core.model.TableParsers;\n+import org.vividus.bdd.util.ExamplesTableProcessor;\n+\n+@Named(\"DISTINCTING\")\n+public class DistinctingTableTransformer extends AbstractFilteringTableTransformer\n+{\n+    @Override\n+    public String transform(String tableAsString, TableParsers tableParsers, TableProperties tableProperties)\n+    {\n+        String byColumnNames = ExtendedTableTransformer.getMandatoryNonBlankProperty(tableProperties,\n+                BY_COLUMNS_NAMES_PROPERTY);\n+        TableRows tableRows = tableParsers.parseRows(tableAsString, tableProperties);\n+        List<String> filteredColumnNames = filterColumnNames(tableRows.getHeaders(), byColumnNames);\n+        List<Map<String, String>> rows = tableRows.getRows();\n+        filterRowsByColumnNames(rows, filteredColumnNames);\n+\n+        Map<Integer, Map<String, String>> z = rows.stream().collect(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8296a9c3f5cfc1ba62359b722da372fd4aa635d9"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 170, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}