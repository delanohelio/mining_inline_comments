{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3ODc3Mzc4", "number": 780, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTo1NDozN1rOES4Qag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTo1NDozN1rOES4Qag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjMxNTMwOnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EvalExpressionProcessor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTo1NDozN1rOG4TYpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDo0ODowNVrOG4eQPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5MTA0Nw==", "bodyText": "\"string\" ->. \"stringUtils\"?\nstring could be ambiguous", "url": "https://github.com/vividus-framework/vividus/pull/780#discussion_r461691047", "createdAt": "2020-07-28T15:54:37Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EvalExpressionProcessor.java", "diffHunk": "@@ -35,10 +37,11 @@\n     private static final Pattern EVAL_PATTERN = Pattern.compile(\"^eval\\\\((.*)\\\\)$\", Pattern.CASE_INSENSITIVE\n             | Pattern.DOTALL);\n     private static final int EVAL_GROUP = 1;\n+    private static final Map<String, Object> NAMESPACES = Map.of(\"math\", Math.class, \"string\", StringUtils.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a464b893d7bd3006b5f55a177a3a1b36715c2bb"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTcxNDIzNw==", "bodyText": "I was thinking about that too, but it looks long and ugly, maybe we could use something shorter? str_ut ?", "url": "https://github.com/vividus-framework/vividus/pull/780#discussion_r461714237", "createdAt": "2020-07-28T16:29:00Z", "author": {"login": "ikalinin1"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EvalExpressionProcessor.java", "diffHunk": "@@ -35,10 +37,11 @@\n     private static final Pattern EVAL_PATTERN = Pattern.compile(\"^eval\\\\((.*)\\\\)$\", Pattern.CASE_INSENSITIVE\n             | Pattern.DOTALL);\n     private static final int EVAL_GROUP = 1;\n+    private static final Map<String, Object> NAMESPACES = Map.of(\"math\", Math.class, \"string\", StringUtils.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5MTA0Nw=="}, "originalCommit": {"oid": "0a464b893d7bd3006b5f55a177a3a1b36715c2bb"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg2OTExOA==", "bodyText": "The practice shows that shortenings don't work well after some time, because it's hard to remember them and sometimes it's not enough clear for new users", "url": "https://github.com/vividus-framework/vividus/pull/780#discussion_r461869118", "createdAt": "2020-07-28T20:48:05Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EvalExpressionProcessor.java", "diffHunk": "@@ -35,10 +37,11 @@\n     private static final Pattern EVAL_PATTERN = Pattern.compile(\"^eval\\\\((.*)\\\\)$\", Pattern.CASE_INSENSITIVE\n             | Pattern.DOTALL);\n     private static final int EVAL_GROUP = 1;\n+    private static final Map<String, Object> NAMESPACES = Map.of(\"math\", Math.class, \"string\", StringUtils.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY5MTA0Nw=="}, "originalCommit": {"oid": "0a464b893d7bd3006b5f55a177a3a1b36715c2bb"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 289, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}