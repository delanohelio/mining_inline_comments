{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2Nzk0NTIw", "number": 977, "title": "[plugin-mobile-app] Add swipe to element", "bodyText": "", "createdAt": "2020-10-02T09:32:26Z", "url": "https://github.com/vividus-framework/vividus/pull/977", "merged": true, "mergeCommit": {"oid": "a2393c44429530bc174ef05a1187e23d6681ae6d"}, "closed": true, "closedAt": "2020-10-05T10:41:36Z", "author": {"login": "uarlouski"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOjBgjAFqTUwMTAwNDk2OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPgQg9AFqTUwMTg2ODk1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMDA0OTY4", "url": "https://github.com/vividus-framework/vividus/pull/977#pullrequestreview-501004968", "createdAt": "2020-10-02T09:55:34Z", "commit": {"oid": "4352dfe5953d3ad746aeab85209c68e054d99849"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo1NTozNVrOHbn4bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo1OTozOFrOHbn_6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyNzAyMg==", "bodyText": "why api scope?", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498727022", "createdAt": "2020-10-02T09:55:35Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/build.gradle", "diffHunk": "@@ -18,6 +18,7 @@ project.description = 'Vividus extension for selenium'\n      api(group: 'io.appium', name: 'java-client', version: '7.1.0') {\n          exclude module: 'selenium-java'\n      }\n+     api(group: 'ru.yandex.qatools.ashot', name: 'ashot', version: '1.5.4')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4352dfe5953d3ad746aeab85209c68e054d99849"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyNzM4NQ==", "bodyText": "why is screenSwipe? but not just swipe?", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498727385", "createdAt": "2020-10-02T09:56:19Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileAppTestConfiguration.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.mobileapp.configuration;\n+\n+import java.time.Duration;\n+\n+public class MobileAppTestConfiguration\n+{\n+    private final Duration screenSwipeStabilizationDuration;\n+    private final int screenSwipeLimit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4352dfe5953d3ad746aeab85209c68e054d99849"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyNzY0Mw==", "bodyText": "the fields doesn't correspond to the name of the class", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498727643", "createdAt": "2020-10-02T09:56:47Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/Location.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.mobileapp.model;\n+\n+public class Location", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4352dfe5953d3ad746aeab85209c68e054d99849"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyODYzNA==", "bodyText": "I propose to have a single class for all mobile actions", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498728634", "createdAt": "2020-10-02T09:58:59Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/SwipeActions.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.mobileapp.action;\n+\n+import static io.appium.java_client.touch.WaitOptions.waitOptions;\n+import static io.appium.java_client.touch.offset.PointOption.point;\n+\n+import java.awt.image.BufferedImage;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.time.Duration;\n+import java.util.function.BooleanSupplier;\n+\n+import org.openqa.selenium.Dimension;\n+import org.vividus.bdd.mobileapp.configuration.MobileAppTestConfiguration;\n+import org.vividus.bdd.mobileapp.model.Location;\n+import org.vividus.bdd.mobileapp.model.SwipeCoordinates;\n+import org.vividus.bdd.mobileapp.model.SwipeDirection;\n+import org.vividus.selenium.IWebDriverProvider;\n+import org.vividus.selenium.manager.GenericWebDriverManager;\n+import org.vividus.selenium.mobileapp.MobileAppScreenshotTaker;\n+import org.vividus.util.Sleeper;\n+\n+import ru.yandex.qatools.ashot.util.ImageTool;\n+\n+public class SwipeActions extends AbstractActions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4352dfe5953d3ad746aeab85209c68e054d99849"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyODkzOA==", "bodyText": "it doesn't look like mobile specific", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498728938", "createdAt": "2020-10-02T09:59:38Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/selenium/mobileapp/MobileAppScreenshotTaker.java", "diffHunk": "@@ -41,7 +47,19 @@ public MobileAppScreenshotTaker(IWebDriverProvider webDriverProvider,\n     public Optional<Screenshot> takeScreenshot(String screenshotName)\n     {\n         String fileName = screenshotFileNameGenerator.generateScreenshotFileName(screenshotName);\n-        byte[] data = webDriverProvider.getUnwrapped(TakesScreenshot.class).getScreenshotAs(OutputType.BYTES);\n-        return Optional.of(new Screenshot(fileName, data));\n+        return Optional.of(new Screenshot(fileName, getScreenshotBytes()));\n+    }\n+\n+    public BufferedImage takeViewportScreenshot() throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4352dfe5953d3ad746aeab85209c68e054d99849"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4352dfe5953d3ad746aeab85209c68e054d99849", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/4352dfe5953d3ad746aeab85209c68e054d99849", "committedDate": "2020-10-02T09:20:07Z", "message": "[plugin-mobile-app] Add swipe to element"}, "afterCommit": {"oid": "5d2c821db8c5ae5d7019a9b82700b87d39352cb1", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/5d2c821db8c5ae5d7019a9b82700b87d39352cb1", "committedDate": "2020-10-02T14:09:37Z", "message": "[plugin-mobile-app] Add swipe to element"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d2c821db8c5ae5d7019a9b82700b87d39352cb1", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/5d2c821db8c5ae5d7019a9b82700b87d39352cb1", "committedDate": "2020-10-02T14:09:37Z", "message": "[plugin-mobile-app] Add swipe to element"}, "afterCommit": {"oid": "5f23ab99a921fd925845581a0668ee1640f238d9", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/5f23ab99a921fd925845581a0668ee1640f238d9", "committedDate": "2020-10-02T14:17:22Z", "message": "[plugin-mobile-app] Add swipe to element"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f23ab99a921fd925845581a0668ee1640f238d9", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/5f23ab99a921fd925845581a0668ee1640f238d9", "committedDate": "2020-10-02T14:17:22Z", "message": "[plugin-mobile-app] Add swipe to element"}, "afterCommit": {"oid": "191a52d26c1ab88661b14c70ce8e70297cb45177", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/191a52d26c1ab88661b14c70ce8e70297cb45177", "committedDate": "2020-10-02T14:26:15Z", "message": "[plugin-mobile-app] Add swipe to element"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "191a52d26c1ab88661b14c70ce8e70297cb45177", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/191a52d26c1ab88661b14c70ce8e70297cb45177", "committedDate": "2020-10-02T14:26:15Z", "message": "[plugin-mobile-app] Add swipe to element"}, "afterCommit": {"oid": "ef7f5eb7210631d612fec6899c1d40069a95c69a", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/ef7f5eb7210631d612fec6899c1d40069a95c69a", "committedDate": "2020-10-02T15:15:30Z", "message": "[plugin-mobile-app] Add swipe to element"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef7f5eb7210631d612fec6899c1d40069a95c69a", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/ef7f5eb7210631d612fec6899c1d40069a95c69a", "committedDate": "2020-10-02T15:15:30Z", "message": "[plugin-mobile-app] Add swipe to element"}, "afterCommit": {"oid": "67b560bdd312f86b426280925eed90ba66f98fc6", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/67b560bdd312f86b426280925eed90ba66f98fc6", "committedDate": "2020-10-02T15:20:09Z", "message": "[plugin-mobile-app] Add swipe to element"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67b560bdd312f86b426280925eed90ba66f98fc6", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/67b560bdd312f86b426280925eed90ba66f98fc6", "committedDate": "2020-10-02T15:20:09Z", "message": "[plugin-mobile-app] Add swipe to element"}, "afterCommit": {"oid": "08c996d6cf95f39519d6193f7519cfd111c87fa5", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/08c996d6cf95f39519d6193f7519cfd111c87fa5", "committedDate": "2020-10-02T15:30:40Z", "message": "[plugin-mobile-app] Add swipe to element"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08c996d6cf95f39519d6193f7519cfd111c87fa5", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/08c996d6cf95f39519d6193f7519cfd111c87fa5", "committedDate": "2020-10-02T15:30:40Z", "message": "[plugin-mobile-app] Add swipe to element"}, "afterCommit": {"oid": "da19c725501f777ea90d5015d01d4164af54312a", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/da19c725501f777ea90d5015d01d4164af54312a", "committedDate": "2020-10-02T15:51:49Z", "message": "[plugin-mobile-app] Add swipe to element"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da19c725501f777ea90d5015d01d4164af54312a", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/da19c725501f777ea90d5015d01d4164af54312a", "committedDate": "2020-10-02T15:51:49Z", "message": "[plugin-mobile-app] Add swipe to element"}, "afterCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "committedDate": "2020-10-02T15:57:11Z", "message": "[plugin-mobile-app] Add swipe to element"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMzAzNjA4", "url": "https://github.com/vividus-framework/vividus/pull/977#pullrequestreview-501303608", "createdAt": "2020-10-02T17:04:46Z", "commit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzowNDo0NlrOHb1D8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxODozNjozMVrOHb31RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk0Mjk2Mg==", "bodyText": "Swipe to an element", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498942962", "createdAt": "2020-10-02T17:04:46Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-mobile-app.adoc", "diffHunk": "@@ -268,5 +268,39 @@ Scenario: Type text\n When I type `Bob` in field located `accessibilityId(username)`\n ----\n \n+=== Swipe to element", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk0MzA5Mw==", "bodyText": "Swipes to an element", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498943093", "createdAt": "2020-10-02T17:05:01Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-mobile-app.adoc", "diffHunk": "@@ -268,5 +268,39 @@ Scenario: Type text\n When I type `Bob` in field located `accessibilityId(username)`\n ----\n \n+=== Swipe to element\n+\n+==== *_Info_*\n+\n+Swipes to element in either UP or DOWN direction with the specified duration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk0Mzc4NQ==", "bodyText": "defines max numbers of swipes to perform (if it's reached the swipe process is stopped and the error is thrown)", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498943785", "createdAt": "2020-10-02T17:06:25Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-mobile-app.adoc", "diffHunk": "@@ -268,5 +268,39 @@ Scenario: Type text\n When I type `Bob` in field located `accessibilityId(username)`\n ----\n \n+=== Swipe to element\n+\n+==== *_Info_*\n+\n+Swipes to element in either UP or DOWN direction with the specified duration\n+\n+==== *_Wording_*\n+\n+[source,gherkin]\n+----\n+When I swipe $direction to element located `$locator` with duration $swipeDuration\n+----\n+\n+==== Properties\n+\n+* `mobile-application.swipe.limit` - defines a swipe limit number by exceeding which swipe process fails", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk0Mzk4NA==", "bodyText": "unchangeable -> stable", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498943984", "createdAt": "2020-10-02T17:06:51Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-mobile-app.adoc", "diffHunk": "@@ -268,5 +268,39 @@ Scenario: Type text\n When I type `Bob` in field located `accessibilityId(username)`\n ----\n \n+=== Swipe to element\n+\n+==== *_Info_*\n+\n+Swipes to element in either UP or DOWN direction with the specified duration\n+\n+==== *_Wording_*\n+\n+[source,gherkin]\n+----\n+When I swipe $direction to element located `$locator` with duration $swipeDuration\n+----\n+\n+==== Properties\n+\n+* `mobile-application.swipe.limit` - defines a swipe limit number by exceeding which swipe process fails\n+* `mobile-application.swipe.stabilization-duration` - defines a duration to wait after swipe until view becomes unchangeable, this plays a role in 'end of scrollable view' determination which is based on image comparison", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk0NDE0OA==", "bodyText": "this plays a role in 'end of scrollable view' determination which is based on image comparison - not clear", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498944148", "createdAt": "2020-10-02T17:07:10Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-mobile-app.adoc", "diffHunk": "@@ -268,5 +268,39 @@ Scenario: Type text\n When I type `Bob` in field located `accessibilityId(username)`\n ----\n \n+=== Swipe to element\n+\n+==== *_Info_*\n+\n+Swipes to element in either UP or DOWN direction with the specified duration\n+\n+==== *_Wording_*\n+\n+[source,gherkin]\n+----\n+When I swipe $direction to element located `$locator` with duration $swipeDuration\n+----\n+\n+==== Properties\n+\n+* `mobile-application.swipe.limit` - defines a swipe limit number by exceeding which swipe process fails\n+* `mobile-application.swipe.stabilization-duration` - defines a duration to wait after swipe until view becomes unchangeable, this plays a role in 'end of scrollable view' determination which is based on image comparison", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk0NDM4OA==", "bodyText": "duration between a touch pointer moves from the start to the end of the swipe coordinates  - not clear", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498944388", "createdAt": "2020-10-02T17:07:41Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-mobile-app.adoc", "diffHunk": "@@ -268,5 +268,39 @@ Scenario: Type text\n When I type `Bob` in field located `accessibilityId(username)`\n ----\n \n+=== Swipe to element\n+\n+==== *_Info_*\n+\n+Swipes to element in either UP or DOWN direction with the specified duration\n+\n+==== *_Wording_*\n+\n+[source,gherkin]\n+----\n+When I swipe $direction to element located `$locator` with duration $swipeDuration\n+----\n+\n+==== Properties\n+\n+* `mobile-application.swipe.limit` - defines a swipe limit number by exceeding which swipe process fails\n+* `mobile-application.swipe.stabilization-duration` - defines a duration to wait after swipe until view becomes unchangeable, this plays a role in 'end of scrollable view' determination which is based on image comparison\n+\n+==== *_Parameters_*\n+\n+. `$direction` - direction to swipe, either UP or DOWN\n+. `$locator` - <<_locator>>\n+. `$duration` - duration between a touch pointer moves from the start to the end of the swipe coordinates in {iso-date-format-link} format", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NDQ4Ng==", "bodyText": "midX -> centerX", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498984486", "createdAt": "2020-10-02T18:28:36Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/SwipeDirection.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.mobileapp.model;\n+\n+import org.openqa.selenium.Dimension;\n+\n+public enum SwipeDirection\n+{\n+    UP\n+    {\n+        @Override\n+        public SwipeCoordinates calculateCoordinates(Dimension dimension)\n+        {\n+            int midX = dimension.getWidth() / 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NDY0OQ==", "bodyText": "midX -> centerX", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498984649", "createdAt": "2020-10-02T18:29:00Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/model/SwipeDirection.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.mobileapp.model;\n+\n+import org.openqa.selenium.Dimension;\n+\n+public enum SwipeDirection\n+{\n+    UP\n+    {\n+        @Override\n+        public SwipeCoordinates calculateCoordinates(Dimension dimension)\n+        {\n+            int midX = dimension.getWidth() / 2;\n+            int indent = dimension.getHeight() / VERTICAL_INDENT_COEFFICIENT;\n+            return new SwipeCoordinates(midX, dimension.getHeight() - indent, midX, indent);\n+        }\n+    },\n+    DOWN\n+    {\n+        @Override\n+        public SwipeCoordinates calculateCoordinates(Dimension dimension)\n+        {\n+            int midX = dimension.getWidth() / 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NTA0NQ==", "bodyText": "not clear", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498985045", "createdAt": "2020-10-02T18:29:41Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java", "diffHunk": "@@ -92,6 +100,33 @@ public void typeTextInField(String text, Locator locator)\n                 .ifPresent(e -> keyboardActions.typeText(e, text));\n     }\n \n+    /**\n+     * Swipes to element in <b>direction</b> direction with duration <b>duration</b>\n+     * @param direction direction to swipe, either <b>UP</b> or <b>DOWN</b>\n+     * @param locator locator to find an element\n+     * @param duration between a pointer moves from the start to the end of the swipe coordinates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NTQyMw==", "bodyText": "it's so by default", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498985423", "createdAt": "2020-10-02T18:30:28Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java", "diffHunk": "@@ -92,6 +100,33 @@ public void typeTextInField(String text, Locator locator)\n                 .ifPresent(e -> keyboardActions.typeText(e, text));\n     }\n \n+    /**\n+     * Swipes to element in <b>direction</b> direction with duration <b>duration</b>\n+     * @param direction direction to swipe, either <b>UP</b> or <b>DOWN</b>\n+     * @param locator locator to find an element\n+     * @param duration between a pointer moves from the start to the end of the swipe coordinates\n+     */\n+    @When(\"I swipe $direction to element located `$locator` with duration $swipeDuration\")\n+    public void swipeToElement(SwipeDirection direction, Locator locator, Duration duration)\n+    {\n+        locator.getSearchParameters()\n+               .setVisibility(Visibility.VISIBLE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NTk1MA==", "bodyText": "swipeWhile -> swipeUntil ?", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498985950", "createdAt": "2020-10-02T18:31:34Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/steps/TouchSteps.java", "diffHunk": "@@ -92,6 +100,33 @@ public void typeTextInField(String text, Locator locator)\n                 .ifPresent(e -> keyboardActions.typeText(e, text));\n     }\n \n+    /**\n+     * Swipes to element in <b>direction</b> direction with duration <b>duration</b>\n+     * @param direction direction to swipe, either <b>UP</b> or <b>DOWN</b>\n+     * @param locator locator to find an element\n+     * @param duration between a pointer moves from the start to the end of the swipe coordinates\n+     */\n+    @When(\"I swipe $direction to element located `$locator` with duration $swipeDuration\")\n+    public void swipeToElement(SwipeDirection direction, Locator locator, Duration duration)\n+    {\n+        locator.getSearchParameters()\n+               .setVisibility(Visibility.VISIBLE)\n+               .setWaitForElement(false);\n+\n+        List<WebElement> elements = searchActions.findElements(locator);\n+        if (elements.isEmpty())\n+        {\n+            touchActions.swipeWhile(direction, duration, () ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NjU1OA==", "bodyText": "MobileAppTestConfiguration -> MobileApplicationConfiguration", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498986558", "createdAt": "2020-10-02T18:32:51Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/configuration/MobileAppTestConfiguration.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.mobileapp.configuration;\n+\n+import java.time.Duration;\n+\n+public class MobileAppTestConfiguration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4NzEwNA==", "bodyText": "add links to appium documentation", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498987104", "createdAt": "2020-10-02T18:33:53Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/TouchActions.java", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.mobileapp.action;\n+\n+import static io.appium.java_client.touch.WaitOptions.waitOptions;\n+import static io.appium.java_client.touch.offset.ElementOption.element;\n+import static io.appium.java_client.touch.offset.PointOption.point;\n+\n+import java.awt.image.BufferedImage;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.time.Duration;\n+import java.util.function.BooleanSupplier;\n+import java.util.function.UnaryOperator;\n+\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.remote.RemoteWebElement;\n+import org.vividus.bdd.mobileapp.configuration.MobileAppTestConfiguration;\n+import org.vividus.bdd.mobileapp.model.SwipeCoordinates;\n+import org.vividus.bdd.mobileapp.model.SwipeDirection;\n+import org.vividus.bdd.monitor.TakeScreenshotOnFailure;\n+import org.vividus.selenium.IWebDriverProvider;\n+import org.vividus.selenium.WebDriverUtil;\n+import org.vividus.selenium.manager.GenericWebDriverManager;\n+import org.vividus.selenium.screenshot.ScreenshotTaker;\n+import org.vividus.util.Sleeper;\n+\n+import io.appium.java_client.PerformsTouchActions;\n+import io.appium.java_client.TouchAction;\n+import io.appium.java_client.touch.offset.ElementOption;\n+import ru.yandex.qatools.ashot.util.ImageTool;\n+\n+@TakeScreenshotOnFailure\n+public class TouchActions\n+{\n+    private static final int HEIGHT_DIVIDER = 3;\n+\n+    private final IWebDriverProvider webDriverProvider;\n+    private final GenericWebDriverManager genericWebDriverManager;\n+    private final ScreenshotTaker screenshotTaker;\n+    private final MobileAppTestConfiguration mobileAppTestConfiguration;\n+\n+    public TouchActions(IWebDriverProvider webDriverProvider, GenericWebDriverManager genericWebDriverManager,\n+            ScreenshotTaker screenshotTaker, MobileAppTestConfiguration mobileAppTestConfiguration)\n+    {\n+        this.webDriverProvider = webDriverProvider;\n+        this.genericWebDriverManager = genericWebDriverManager;\n+        this.screenshotTaker = screenshotTaker;\n+        this.mobileAppTestConfiguration = mobileAppTestConfiguration;\n+    }\n+\n+    /**\n+     * Taps on the <b>element</b>\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>press on the element</li>\n+     * <li>release</li>\n+     * </ol>\n+     * @param element element to tap, must not be {@code null}\n+     */\n+    public void tap(WebElement element)\n+    {\n+        performAction(b -> b.tap(elementOption(element)));\n+    }\n+\n+    /**\n+     * Taps on the <b>element</b> with specified <b>duration</b>\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>press on the element</li>\n+     * <li>wait for the duration</li>\n+     * <li>release</li>\n+     * </ol>\n+     * @param element element to tap, must not be {@code null}\n+     * @param duration between an element is pressed and released in\n+     * <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format, must not be {@code null}\n+     */\n+    public void tap(WebElement element, Duration duration)\n+    {\n+        performAction(b -> b.press(elementOption(element))\n+                            .waitAction(waitOptions(duration))\n+                            .release());\n+    }\n+\n+    /**\n+     * Swipes in <b>swipeDuration</b> direction until one of the following conditions happen:\n+     * <ul>\n+     * <li>the <b>stopCondition</b> return true result</li>\n+     * <li>the end of mobile scroll view is reached</li>\n+     * <li>the swipe limit is exceeded</li>\n+     * </ul>\n+     * @param direction direction to swipe, either <b>UP</b> or <b>DOWN</b>\n+     * @param swipeDuration duration between a pointer moves from the start to the end of the swipe coordinates\n+     * @param stopCondition condition to stop swiping\n+     */\n+    public void swipeWhile(SwipeDirection direction, Duration swipeDuration, BooleanSupplier stopCondition)\n+    {\n+        /*\n+         * mobile:scroll\n+         * iOS\n+         * - scroll to an element works only if the element resides in UP scroll direction\n+         * - if the element in DOWN scroll direction, the command still tries to find the element in UP scroll direction\n+         * - payload is {\"element\" : \"hash\", \"toVisible\" : true}\n+         * Android\n+         * - supports only accessibility id, uiautomator strategies\n+         * - payload is {\"strategy\": \"accessibility id\", \"selector\": \"selector\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4ODE4NQ==", "bodyText": "I believe there is no much sense to wrap it", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498988185", "createdAt": "2020-10-02T18:36:06Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/TouchActions.java", "diffHunk": "@@ -0,0 +1,187 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.mobileapp.action;\n+\n+import static io.appium.java_client.touch.WaitOptions.waitOptions;\n+import static io.appium.java_client.touch.offset.ElementOption.element;\n+import static io.appium.java_client.touch.offset.PointOption.point;\n+\n+import java.awt.image.BufferedImage;\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.time.Duration;\n+import java.util.function.BooleanSupplier;\n+import java.util.function.UnaryOperator;\n+\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.remote.RemoteWebElement;\n+import org.vividus.bdd.mobileapp.configuration.MobileAppTestConfiguration;\n+import org.vividus.bdd.mobileapp.model.SwipeCoordinates;\n+import org.vividus.bdd.mobileapp.model.SwipeDirection;\n+import org.vividus.bdd.monitor.TakeScreenshotOnFailure;\n+import org.vividus.selenium.IWebDriverProvider;\n+import org.vividus.selenium.WebDriverUtil;\n+import org.vividus.selenium.manager.GenericWebDriverManager;\n+import org.vividus.selenium.screenshot.ScreenshotTaker;\n+import org.vividus.util.Sleeper;\n+\n+import io.appium.java_client.PerformsTouchActions;\n+import io.appium.java_client.TouchAction;\n+import io.appium.java_client.touch.offset.ElementOption;\n+import ru.yandex.qatools.ashot.util.ImageTool;\n+\n+@TakeScreenshotOnFailure\n+public class TouchActions\n+{\n+    private static final int HEIGHT_DIVIDER = 3;\n+\n+    private final IWebDriverProvider webDriverProvider;\n+    private final GenericWebDriverManager genericWebDriverManager;\n+    private final ScreenshotTaker screenshotTaker;\n+    private final MobileAppTestConfiguration mobileAppTestConfiguration;\n+\n+    public TouchActions(IWebDriverProvider webDriverProvider, GenericWebDriverManager genericWebDriverManager,\n+            ScreenshotTaker screenshotTaker, MobileAppTestConfiguration mobileAppTestConfiguration)\n+    {\n+        this.webDriverProvider = webDriverProvider;\n+        this.genericWebDriverManager = genericWebDriverManager;\n+        this.screenshotTaker = screenshotTaker;\n+        this.mobileAppTestConfiguration = mobileAppTestConfiguration;\n+    }\n+\n+    /**\n+     * Taps on the <b>element</b>\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>press on the element</li>\n+     * <li>release</li>\n+     * </ol>\n+     * @param element element to tap, must not be {@code null}\n+     */\n+    public void tap(WebElement element)\n+    {\n+        performAction(b -> b.tap(elementOption(element)));\n+    }\n+\n+    /**\n+     * Taps on the <b>element</b> with specified <b>duration</b>\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>press on the element</li>\n+     * <li>wait for the duration</li>\n+     * <li>release</li>\n+     * </ol>\n+     * @param element element to tap, must not be {@code null}\n+     * @param duration between an element is pressed and released in\n+     * <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format, must not be {@code null}\n+     */\n+    public void tap(WebElement element, Duration duration)\n+    {\n+        performAction(b -> b.press(elementOption(element))\n+                            .waitAction(waitOptions(duration))\n+                            .release());\n+    }\n+\n+    /**\n+     * Swipes in <b>swipeDuration</b> direction until one of the following conditions happen:\n+     * <ul>\n+     * <li>the <b>stopCondition</b> return true result</li>\n+     * <li>the end of mobile scroll view is reached</li>\n+     * <li>the swipe limit is exceeded</li>\n+     * </ul>\n+     * @param direction direction to swipe, either <b>UP</b> or <b>DOWN</b>\n+     * @param swipeDuration duration between a pointer moves from the start to the end of the swipe coordinates\n+     * @param stopCondition condition to stop swiping\n+     */\n+    public void swipeWhile(SwipeDirection direction, Duration swipeDuration, BooleanSupplier stopCondition)\n+    {\n+        /*\n+         * mobile:scroll\n+         * iOS\n+         * - scroll to an element works only if the element resides in UP scroll direction\n+         * - if the element in DOWN scroll direction, the command still tries to find the element in UP scroll direction\n+         * - payload is {\"element\" : \"hash\", \"toVisible\" : true}\n+         * Android\n+         * - supports only accessibility id, uiautomator strategies\n+         * - payload is {\"strategy\": \"accessibility id\", \"selector\": \"selector\"}\n+         * */\n+\n+        int screenshotHeightToCompare = genericWebDriverManager.getSize().getHeight() / HEIGHT_DIVIDER;\n+        int heightOffset = screenshotHeightToCompare * 2;\n+\n+        Duration stabilizationDuration = mobileAppTestConfiguration.getSwipeStabilizationDuration();\n+        int swipeLimit = mobileAppTestConfiguration.getSwipeLimit();\n+        BufferedImage previousFrame = null;\n+        for (int count = 0; count <= swipeLimit; count++)\n+        {\n+            swipe(direction, swipeDuration);\n+            Sleeper.sleep(stabilizationDuration);\n+            if (stopCondition.getAsBoolean())\n+            {\n+                break;\n+            }\n+            BufferedImage area = takeScreenshot();\n+            BufferedImage currentFrame = area.getSubimage(0, area.getHeight() - heightOffset, area.getWidth(),\n+                    screenshotHeightToCompare);\n+            if (previousFrame != null && ImageTool.equalImage(currentFrame).matches(previousFrame))\n+            {\n+                break;\n+            }\n+            previousFrame = currentFrame;\n+            if (count == swipeLimit)\n+            {\n+                throw new IllegalStateException(\n+                        String.format(\"Swiping is stopped due to exceeded swipe limit '%d'\", swipeLimit));\n+            }\n+        }\n+    }\n+\n+    private BufferedImage takeScreenshot()\n+    {\n+        try\n+        {\n+            return screenshotTaker.takeViewportScreenshot();\n+        }\n+        catch (IOException e)\n+        {\n+            throw new UncheckedIOException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk4ODM1Nw==", "bodyText": "isn't it to much?", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r498988357", "createdAt": "2020-10-02T18:36:31Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/resources/properties/profile/mobile_app/profile.properties", "diffHunk": "@@ -2,3 +2,5 @@ spring.profiles.active=mobile_app\n \n mobile-app=true\n mobile-application.session-scope=story\n+mobile-application.swipe.stabilization-duration=PT1S", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/bdcad571143eb1fdc3c0042430fd2dcc28aa9bfa", "committedDate": "2020-10-02T15:57:11Z", "message": "[plugin-mobile-app] Add swipe to element"}, "afterCommit": {"oid": "67f35af6460b12642f0fdd760150a6a39ca0e0ae", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/67f35af6460b12642f0fdd760150a6a39ca0e0ae", "committedDate": "2020-10-02T19:22:06Z", "message": "[plugin-mobile-app] Add swipe to element"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57cab5615ae37142447bb00d60e859a2fd98338d", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/57cab5615ae37142447bb00d60e859a2fd98338d", "committedDate": "2020-10-02T20:04:28Z", "message": "[plugin-mobile-app] Add swipe to element"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67f35af6460b12642f0fdd760150a6a39ca0e0ae", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/67f35af6460b12642f0fdd760150a6a39ca0e0ae", "committedDate": "2020-10-02T19:22:06Z", "message": "[plugin-mobile-app] Add swipe to element"}, "afterCommit": {"oid": "57cab5615ae37142447bb00d60e859a2fd98338d", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/57cab5615ae37142447bb00d60e859a2fd98338d", "committedDate": "2020-10-02T20:04:28Z", "message": "[plugin-mobile-app] Add swipe to element"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTMyMDQ2", "url": "https://github.com/vividus-framework/vividus/pull/977#pullrequestreview-501532046", "createdAt": "2020-10-03T08:58:30Z", "commit": {"oid": "57cab5615ae37142447bb00d60e859a2fd98338d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwODo1ODozMFrOHcAfwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwOTowMToyOFrOHcAgjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMDMwNg==", "bodyText": "there is a strategy for this?", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r499130306", "createdAt": "2020-10-03T08:58:30Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/screenshot/ScreenshotTaker.java", "diffHunk": "@@ -16,9 +16,13 @@\n \n package org.vividus.selenium.screenshot;\n \n+import java.awt.image.BufferedImage;\n+import java.io.IOException;\n import java.util.Optional;\n \n public interface ScreenshotTaker\n {\n     Optional<Screenshot> takeScreenshot(String screenshotName);\n+\n+    BufferedImage takeViewportScreenshot() throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57cab5615ae37142447bb00d60e859a2fd98338d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMDM3Mg==", "bodyText": "takeScreenshot(ScreenshotShootingStrategy strategy) ?", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r499130372", "createdAt": "2020-10-03T08:59:38Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/screenshot/ScreenshotTaker.java", "diffHunk": "@@ -16,9 +16,13 @@\n \n package org.vividus.selenium.screenshot;\n \n+import java.awt.image.BufferedImage;\n+import java.io.IOException;\n import java.util.Optional;\n \n public interface ScreenshotTaker\n {\n     Optional<Screenshot> takeScreenshot(String screenshotName);\n+\n+    BufferedImage takeViewportScreenshot() throws IOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMDMwNg=="}, "originalCommit": {"oid": "57cab5615ae37142447bb00d60e859a2fd98338d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEzMDUwOQ==", "bodyText": "How much in % takes one swipe?", "url": "https://github.com/vividus-framework/vividus/pull/977#discussion_r499130509", "createdAt": "2020-10-03T09:01:28Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-mobile-app/src/main/resources/properties/profile/mobile_app/profile.properties", "diffHunk": "@@ -2,3 +2,5 @@ spring.profiles.active=mobile_app\n \n mobile-app=true\n mobile-application.session-scope=story\n+mobile-application.swipe.stabilization-duration=PT1S\n+mobile-application.swipe.limit=10", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57cab5615ae37142447bb00d60e859a2fd98338d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxODI3NDEz", "url": "https://github.com/vividus-framework/vividus/pull/977#pullrequestreview-501827413", "createdAt": "2020-10-05T08:28:34Z", "commit": {"oid": "57cab5615ae37142447bb00d60e859a2fd98338d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxODY4OTU0", "url": "https://github.com/vividus-framework/vividus/pull/977#pullrequestreview-501868954", "createdAt": "2020-10-05T09:21:06Z", "commit": {"oid": "57cab5615ae37142447bb00d60e859a2fd98338d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4987, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}