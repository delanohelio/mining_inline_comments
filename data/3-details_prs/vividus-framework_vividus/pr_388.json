{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3ODA5MDk1", "number": 388, "title": "[plugin-web-app] Add possibility to set capabilities for local run", "bodyText": "closes #363", "createdAt": "2020-03-13T14:32:51Z", "url": "https://github.com/vividus-framework/vividus/pull/388", "merged": true, "mergeCommit": {"oid": "19a958f21465d777ed74a30f5ef462787ad9499d"}, "closed": true, "closedAt": "2020-03-16T08:34:11Z", "author": {"login": "ikalinin1"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNRbEZgBqjMxMjcwMTA1ODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOJ3gsAFqTM3NDk5ODUyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2447c0817097b133ea2ef7525a026bb04bba9d56", "author": {"user": {"login": "ikalinin1", "name": "Ivan Kalinin"}}, "url": "https://github.com/vividus-framework/vividus/commit/2447c0817097b133ea2ef7525a026bb04bba9d56", "committedDate": "2020-03-13T14:30:49Z", "message": "[plugin-web-app] Add possibility to specify capabilities for local run"}, "afterCommit": {"oid": "24f2e07c65bc4b3c2ba3acfd0cc94e2ba5bbb6fc", "author": {"user": {"login": "ikalinin1", "name": "Ivan Kalinin"}}, "url": "https://github.com/vividus-framework/vividus/commit/24f2e07c65bc4b3c2ba3acfd0cc94e2ba5bbb6fc", "committedDate": "2020-03-13T14:44:37Z", "message": "[plugin-web-app] Add possibility to specify capabilities for local run"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "24f2e07c65bc4b3c2ba3acfd0cc94e2ba5bbb6fc", "author": {"user": {"login": "ikalinin1", "name": "Ivan Kalinin"}}, "url": "https://github.com/vividus-framework/vividus/commit/24f2e07c65bc4b3c2ba3acfd0cc94e2ba5bbb6fc", "committedDate": "2020-03-13T14:44:37Z", "message": "[plugin-web-app] Add possibility to specify capabilities for local run"}, "afterCommit": {"oid": "e64fadd7135387497e48d4a72dd17e05f2748b2b", "author": {"user": {"login": "ikalinin1", "name": "Ivan Kalinin"}}, "url": "https://github.com/vividus-framework/vividus/commit/e64fadd7135387497e48d4a72dd17e05f2748b2b", "committedDate": "2020-03-13T14:47:40Z", "message": "[plugin-web-app] Add possibility to specify capabilities for local run"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MzY4NzI4", "url": "https://github.com/vividus-framework/vividus/pull/388#pullrequestreview-374368728", "createdAt": "2020-03-13T14:58:28Z", "commit": {"oid": "e64fadd7135387497e48d4a72dd17e05f2748b2b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDo1ODoyOFrOF2G5ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDo1OTowNVrOF2G7VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MDUwNg==", "bodyText": "WebDriverType webDriverType = Optional.ofNullable(desiredCapabilities.getCapability(CapabilityType.BROWSER_NAME))\n                .map(String.class::cast)\n                .map(WebDriverType::valueOf)\n                .orElse(this.webDriverType);\nreturn getWebDriver(webDriverType, desiredCapabilities);", "url": "https://github.com/vividus-framework/vividus/pull/388#discussion_r392280506", "createdAt": "2020-03-13T14:58:28Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/WebDriverFactory.java", "diffHunk": "@@ -71,35 +79,57 @@\n     private IJsonUtils jsonUtils;\n \n     private final Supplier<DesiredCapabilities> seleniumGridDesiredCapabilities = Suppliers.memoize(\n-        () -> new DesiredCapabilities(propertyParser.getPropertyValuesByPrefix(SELENIUM_GRID_PROPERTY_PREFIX)));\n+        () -> getCapabilitiesByFamily(SELENIUM_GRID_PROPERTY_PREFIX));\n \n-    private final ConcurrentHashMap<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+    private final Supplier<DesiredCapabilities> localDriverDesiredCapabilities = Suppliers.memoize(\n+        () -> getCapabilitiesByFamily(LOCAL_DRIVER_PROPERTY_PREFIX));\n \n-    @Override\n-    public WebDriver getWebDriver(DesiredCapabilities desiredCapabilities)\n+    private final LoadingCache<Boolean, DesiredCapabilities> webDriverCapabilities = CacheBuilder.newBuilder()\n+            .build(new CacheLoader<Boolean, DesiredCapabilities>()\n+            {\n+                public DesiredCapabilities load(Boolean local)\n+                {\n+                    DesiredCapabilities localCapabilities = localDriverDesiredCapabilities.get();\n+                    if (local == true)\n+                    {\n+                        return localCapabilities;\n+                    }\n+                    return localCapabilities.merge(seleniumGridDesiredCapabilities.get());\n+                }\n+            });\n+\n+    private final Map<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+\n+    private DesiredCapabilities getCapabilitiesByFamily(String prefix)\n     {\n-        return getWebDriver(webDriverType, desiredCapabilities);\n+        return propertyParser.getPropertyValuesByPrefix(prefix)\n+            .entrySet()\n+            .stream()\n+            .map(e -> equalsAnyIgnoreCase(e.getValue(), \"true\", \"false\")\n+                ? Map.entry(e.getKey(), Boolean.parseBoolean(e.getValue()))\n+                : e)\n+            .collect(Collectors.collectingAndThen(toMap(Entry::getKey, Entry::getValue), DesiredCapabilities::new));\n     }\n \n     @Override\n-    public WebDriver getWebDriver(WebDriverType webDriverType, DesiredCapabilities desiredCapabilities)\n+    public WebDriver getWebDriver(DesiredCapabilities desiredCapabilities)\n     {\n-        WebDriverConfiguration configuration = getWebDriverConfiguration(webDriverType, true);\n-        return createWebDriver(webDriverType.getWebDriver(desiredCapabilities, configuration));\n+        return Optional.ofNullable(desiredCapabilities.getCapability(CapabilityType.BROWSER_NAME))\n+                       .map(String.class::cast)\n+                       .map(browserName -> getWebDriver(WebDriverType.valueOf(browserName), desiredCapabilities))\n+                       .orElseGet(() -> getWebDriver(this.webDriverType, desiredCapabilities));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e64fadd7135387497e48d4a72dd17e05f2748b2b"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MDkxNg==", "bodyText": "to be fully on a safe side: if (local == Boolean.TRUE)", "url": "https://github.com/vividus-framework/vividus/pull/388#discussion_r392280916", "createdAt": "2020-03-13T14:59:05Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/WebDriverFactory.java", "diffHunk": "@@ -71,35 +79,57 @@\n     private IJsonUtils jsonUtils;\n \n     private final Supplier<DesiredCapabilities> seleniumGridDesiredCapabilities = Suppliers.memoize(\n-        () -> new DesiredCapabilities(propertyParser.getPropertyValuesByPrefix(SELENIUM_GRID_PROPERTY_PREFIX)));\n+        () -> getCapabilitiesByFamily(SELENIUM_GRID_PROPERTY_PREFIX));\n \n-    private final ConcurrentHashMap<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+    private final Supplier<DesiredCapabilities> localDriverDesiredCapabilities = Suppliers.memoize(\n+        () -> getCapabilitiesByFamily(LOCAL_DRIVER_PROPERTY_PREFIX));\n \n-    @Override\n-    public WebDriver getWebDriver(DesiredCapabilities desiredCapabilities)\n+    private final LoadingCache<Boolean, DesiredCapabilities> webDriverCapabilities = CacheBuilder.newBuilder()\n+            .build(new CacheLoader<Boolean, DesiredCapabilities>()\n+            {\n+                public DesiredCapabilities load(Boolean local)\n+                {\n+                    DesiredCapabilities localCapabilities = localDriverDesiredCapabilities.get();\n+                    if (local == true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e64fadd7135387497e48d4a72dd17e05f2748b2b"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NzAyNzE4", "url": "https://github.com/vividus-framework/vividus/pull/388#pullrequestreview-374702718", "createdAt": "2020-03-14T06:38:52Z", "commit": {"oid": "e64fadd7135387497e48d4a72dd17e05f2748b2b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwNjozODo1MlrOF2YGvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwNjozODo1MlrOF2YGvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2MjM2NA==", "bodyText": "getCapabilitiesByFamily(String prefix) -> getCapabilitiesByPrefix(String prefix) ?", "url": "https://github.com/vividus-framework/vividus/pull/388#discussion_r392562364", "createdAt": "2020-03-14T06:38:52Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/WebDriverFactory.java", "diffHunk": "@@ -71,35 +79,57 @@\n     private IJsonUtils jsonUtils;\n \n     private final Supplier<DesiredCapabilities> seleniumGridDesiredCapabilities = Suppliers.memoize(\n-        () -> new DesiredCapabilities(propertyParser.getPropertyValuesByPrefix(SELENIUM_GRID_PROPERTY_PREFIX)));\n+        () -> getCapabilitiesByFamily(SELENIUM_GRID_PROPERTY_PREFIX));\n \n-    private final ConcurrentHashMap<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+    private final Supplier<DesiredCapabilities> localDriverDesiredCapabilities = Suppliers.memoize(\n+        () -> getCapabilitiesByFamily(LOCAL_DRIVER_PROPERTY_PREFIX));\n \n-    @Override\n-    public WebDriver getWebDriver(DesiredCapabilities desiredCapabilities)\n+    private final LoadingCache<Boolean, DesiredCapabilities> webDriverCapabilities = CacheBuilder.newBuilder()\n+            .build(new CacheLoader<Boolean, DesiredCapabilities>()\n+            {\n+                public DesiredCapabilities load(Boolean local)\n+                {\n+                    DesiredCapabilities localCapabilities = localDriverDesiredCapabilities.get();\n+                    if (local == true)\n+                    {\n+                        return localCapabilities;\n+                    }\n+                    return localCapabilities.merge(seleniumGridDesiredCapabilities.get());\n+                }\n+            });\n+\n+    private final Map<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+\n+    private DesiredCapabilities getCapabilitiesByFamily(String prefix)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e64fadd7135387497e48d4a72dd17e05f2748b2b"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NzAyOTIw", "url": "https://github.com/vividus-framework/vividus/pull/388#pullrequestreview-374702920", "createdAt": "2020-03-14T06:43:37Z", "commit": {"oid": "e64fadd7135387497e48d4a72dd17e05f2748b2b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwNjo0MzozN1rOF2YHrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwNjo0MzozN1rOF2YHrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2MjYwNg==", "bodyText": "can we reuse https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/BooleanUtils.html#toBooleanObject-java.lang.String- here?", "url": "https://github.com/vividus-framework/vividus/pull/388#discussion_r392562606", "createdAt": "2020-03-14T06:43:37Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/WebDriverFactory.java", "diffHunk": "@@ -71,35 +79,57 @@\n     private IJsonUtils jsonUtils;\n \n     private final Supplier<DesiredCapabilities> seleniumGridDesiredCapabilities = Suppliers.memoize(\n-        () -> new DesiredCapabilities(propertyParser.getPropertyValuesByPrefix(SELENIUM_GRID_PROPERTY_PREFIX)));\n+        () -> getCapabilitiesByFamily(SELENIUM_GRID_PROPERTY_PREFIX));\n \n-    private final ConcurrentHashMap<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+    private final Supplier<DesiredCapabilities> localDriverDesiredCapabilities = Suppliers.memoize(\n+        () -> getCapabilitiesByFamily(LOCAL_DRIVER_PROPERTY_PREFIX));\n \n-    @Override\n-    public WebDriver getWebDriver(DesiredCapabilities desiredCapabilities)\n+    private final LoadingCache<Boolean, DesiredCapabilities> webDriverCapabilities = CacheBuilder.newBuilder()\n+            .build(new CacheLoader<Boolean, DesiredCapabilities>()\n+            {\n+                public DesiredCapabilities load(Boolean local)\n+                {\n+                    DesiredCapabilities localCapabilities = localDriverDesiredCapabilities.get();\n+                    if (local == true)\n+                    {\n+                        return localCapabilities;\n+                    }\n+                    return localCapabilities.merge(seleniumGridDesiredCapabilities.get());\n+                }\n+            });\n+\n+    private final Map<WebDriverType, WebDriverConfiguration> configurations = new ConcurrentHashMap<>();\n+\n+    private DesiredCapabilities getCapabilitiesByFamily(String prefix)\n     {\n-        return getWebDriver(webDriverType, desiredCapabilities);\n+        return propertyParser.getPropertyValuesByPrefix(prefix)\n+            .entrySet()\n+            .stream()\n+            .map(e -> equalsAnyIgnoreCase(e.getValue(), \"true\", \"false\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e64fadd7135387497e48d4a72dd17e05f2748b2b"}, "originalPosition": 66}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e64fadd7135387497e48d4a72dd17e05f2748b2b", "author": {"user": {"login": "ikalinin1", "name": "Ivan Kalinin"}}, "url": "https://github.com/vividus-framework/vividus/commit/e64fadd7135387497e48d4a72dd17e05f2748b2b", "committedDate": "2020-03-13T14:47:40Z", "message": "[plugin-web-app] Add possibility to specify capabilities for local run"}, "afterCommit": {"oid": "2024cf82400e5ba7f2b2da35f1d9230d2a2b8321", "author": {"user": {"login": "ikalinin1", "name": "Ivan Kalinin"}}, "url": "https://github.com/vividus-framework/vividus/commit/2024cf82400e5ba7f2b2da35f1d9230d2a2b8321", "committedDate": "2020-03-14T06:46:07Z", "message": "[plugin-web-app] Add possibility to specify capabilities for local run"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db26bb7184a0d38c20b4b6398614d6e7c23b5bfe", "author": {"user": {"login": "ikalinin1", "name": "Ivan Kalinin"}}, "url": "https://github.com/vividus-framework/vividus/commit/db26bb7184a0d38c20b4b6398614d6e7c23b5bfe", "committedDate": "2020-03-16T06:40:57Z", "message": "[plugin-web-app] Remove redundant methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28258e5bb4bca81c43ced5474a10060d20182ddc", "author": {"user": {"login": "ikalinin1", "name": "Ivan Kalinin"}}, "url": "https://github.com/vividus-framework/vividus/commit/28258e5bb4bca81c43ced5474a10060d20182ddc", "committedDate": "2020-03-16T06:40:57Z", "message": "[plugin-web-app] Do not expose desired capabilities"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2024cf82400e5ba7f2b2da35f1d9230d2a2b8321", "author": {"user": {"login": "ikalinin1", "name": "Ivan Kalinin"}}, "url": "https://github.com/vividus-framework/vividus/commit/2024cf82400e5ba7f2b2da35f1d9230d2a2b8321", "committedDate": "2020-03-14T06:46:07Z", "message": "[plugin-web-app] Add possibility to specify capabilities for local run"}, "afterCommit": {"oid": "625f48232b67d324eb0b142d4949233865e8603b", "author": {"user": {"login": "ikalinin1", "name": "Ivan Kalinin"}}, "url": "https://github.com/vividus-framework/vividus/commit/625f48232b67d324eb0b142d4949233865e8603b", "committedDate": "2020-03-16T06:40:57Z", "message": "[plugin-web-app] Add possibility to specify capabilities for local run"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65041f235a92e9b2f146396d3776091ee181a89e", "author": {"user": {"login": "ikalinin1", "name": "Ivan Kalinin"}}, "url": "https://github.com/vividus-framework/vividus/commit/65041f235a92e9b2f146396d3776091ee181a89e", "committedDate": "2020-03-16T07:01:24Z", "message": "[plugin-web-app] Add possibility to specify capabilities for local run"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "625f48232b67d324eb0b142d4949233865e8603b", "author": {"user": {"login": "ikalinin1", "name": "Ivan Kalinin"}}, "url": "https://github.com/vividus-framework/vividus/commit/625f48232b67d324eb0b142d4949233865e8603b", "committedDate": "2020-03-16T06:40:57Z", "message": "[plugin-web-app] Add possibility to specify capabilities for local run"}, "afterCommit": {"oid": "65041f235a92e9b2f146396d3776091ee181a89e", "author": {"user": {"login": "ikalinin1", "name": "Ivan Kalinin"}}, "url": "https://github.com/vividus-framework/vividus/commit/65041f235a92e9b2f146396d3776091ee181a89e", "committedDate": "2020-03-16T07:01:24Z", "message": "[plugin-web-app] Add possibility to specify capabilities for local run"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0OTcyNzc3", "url": "https://github.com/vividus-framework/vividus/pull/388#pullrequestreview-374972777", "createdAt": "2020-03-16T07:41:23Z", "commit": {"oid": "65041f235a92e9b2f146396d3776091ee181a89e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0OTk4NTI3", "url": "https://github.com/vividus-framework/vividus/pull/388#pullrequestreview-374998527", "createdAt": "2020-03-16T08:30:48Z", "commit": {"oid": "65041f235a92e9b2f146396d3776091ee181a89e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 367, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}