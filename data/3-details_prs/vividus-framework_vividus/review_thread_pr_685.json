{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NTg1ODcz", "number": 685, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODo0MDowOVrOEG3m6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODo0MDowOVrOEG3m6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjM3OTk1OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/ExpectedSearchContextConditions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODo0MDowOVrOGl7pcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjo0ODowNFrOGmJ6Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQyNzc2Mw==", "bodyText": "would not line breaks make the message readable?", "url": "https://github.com/vividus-framework/vividus/pull/685#discussion_r442427763", "createdAt": "2020-06-18T18:40:09Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/ExpectedSearchContextConditions.java", "diffHunk": "@@ -17,28 +17,56 @@\n package org.vividus.ui.web.action;\n \n import java.util.List;\n+import java.util.function.Supplier;\n \n import org.openqa.selenium.By;\n import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.StaleElementReferenceException;\n import org.openqa.selenium.WebElement;\n \n public final class ExpectedSearchContextConditions extends AbstractExpectedConditions<By>\n {\n     @Override\n     protected List<WebElement> findElements(SearchContext searchContext, By by)\n     {\n-        return searchContext.findElements(by);\n+        return searchInforming(() -> searchContext.findElements(by));\n     }\n \n     @Override\n     protected WebElement findElement(SearchContext searchContext, By by)\n     {\n-        return searchContext.findElement(by);\n+        return searchInforming(() -> searchContext.findElement(by));\n+    }\n+\n+    private <E> E searchInforming(Supplier<E> search)\n+    {\n+        try\n+        {\n+            return search.get();\n+        }\n+        catch (StaleElementReferenceException toWrap)\n+        {\n+            throw new StaleContextException(toWrap);\n+        }\n     }\n \n     @Override\n     protected String toStringParameters(By locator)\n     {\n         return \"located by \" + locator;\n     }\n+\n+    public static class StaleContextException extends StaleElementReferenceException\n+    {\n+        private static final long serialVersionUID = 2449857900556530700L;\n+\n+        private StaleContextException(Throwable throwable)\n+        {\n+            super(\"Search context used for search is stale. \"\n+                + \"Please double check the tests. \"\n+                + \"You have a few options: \"\n+                + \"1. reset context; \"\n+                + \"2. Synchronize the tests to wait for context's stabilization;\", throwable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aeacdabe6d0baac9fca4c19d6388b21eed2212c"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2MTQyMg==", "bodyText": "vs\n\nLooks better with linebreaks for me", "url": "https://github.com/vividus-framework/vividus/pull/685#discussion_r442661422", "createdAt": "2020-06-19T06:48:04Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/ExpectedSearchContextConditions.java", "diffHunk": "@@ -17,28 +17,56 @@\n package org.vividus.ui.web.action;\n \n import java.util.List;\n+import java.util.function.Supplier;\n \n import org.openqa.selenium.By;\n import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.StaleElementReferenceException;\n import org.openqa.selenium.WebElement;\n \n public final class ExpectedSearchContextConditions extends AbstractExpectedConditions<By>\n {\n     @Override\n     protected List<WebElement> findElements(SearchContext searchContext, By by)\n     {\n-        return searchContext.findElements(by);\n+        return searchInforming(() -> searchContext.findElements(by));\n     }\n \n     @Override\n     protected WebElement findElement(SearchContext searchContext, By by)\n     {\n-        return searchContext.findElement(by);\n+        return searchInforming(() -> searchContext.findElement(by));\n+    }\n+\n+    private <E> E searchInforming(Supplier<E> search)\n+    {\n+        try\n+        {\n+            return search.get();\n+        }\n+        catch (StaleElementReferenceException toWrap)\n+        {\n+            throw new StaleContextException(toWrap);\n+        }\n     }\n \n     @Override\n     protected String toStringParameters(By locator)\n     {\n         return \"located by \" + locator;\n     }\n+\n+    public static class StaleContextException extends StaleElementReferenceException\n+    {\n+        private static final long serialVersionUID = 2449857900556530700L;\n+\n+        private StaleContextException(Throwable throwable)\n+        {\n+            super(\"Search context used for search is stale. \"\n+                + \"Please double check the tests. \"\n+                + \"You have a few options: \"\n+                + \"1. reset context; \"\n+                + \"2. Synchronize the tests to wait for context's stabilization;\", throwable);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQyNzc2Mw=="}, "originalCommit": {"oid": "1aeacdabe6d0baac9fca4c19d6388b21eed2212c"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 372, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}