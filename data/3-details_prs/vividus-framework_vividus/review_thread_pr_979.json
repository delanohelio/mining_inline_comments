{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2OTQ3NTA5", "number": 979, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODo1NToxN1rOErFI3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDowNjo0M1rOEuA1aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjA4NDE0OnYy", "diffSide": "RIGHT", "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODo1NToxN1rOHdpVLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMToyNDoxOVrOHdupIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg0NzkxOA==", "bodyText": "null is not clear for end users, I believe it's just an empty property, right?", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500847918", "createdAt": "2020-10-07T08:55:17Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "diffHunk": "@@ -170,6 +170,10 @@ element xref:parameters:state.adoc[State]\n |Description\n \n include::partial$selenium-properties.adoc[]\n+|failure-screenshot-debug-mode\n+|proxy\n+|null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzNDk0Ng==", "bodyText": "Yea, empty property. I'll fix it", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500934946", "createdAt": "2020-10-07T11:24:19Z", "author": {"login": "TatianaTochko"}, "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "diffHunk": "@@ -170,6 +170,10 @@ element xref:parameters:state.adoc[State]\n |Description\n \n include::partial$selenium-properties.adoc[]\n+|failure-screenshot-debug-mode\n+|proxy\n+|null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg0NzkxOA=="}, "originalCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjEwNzIxOnYy", "diffSide": "RIGHT", "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTowMTowOVrOHdpj3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTowMTowOVrOHdpj3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1MTY3OA==", "bodyText": "screenshot.on-failure.debug-modes?", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500851678", "createdAt": "2020-10-07T09:01:09Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "diffHunk": "@@ -170,6 +170,10 @@ element xref:parameters:state.adoc[State]\n |Description\n \n include::partial$selenium-properties.adoc[]\n+|failure-screenshot-debug-mode", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjExMDQ3OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTowMTo1NVrOHdpl1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTowMTo1NVrOHdpl1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1MjE4MQ==", "bodyText": "private List<String> debugModes;", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500852181", "createdAt": "2020-10-07T09:01:55Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -41,6 +41,8 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AbstractScreenshotOnFailureMonitor.class);\n \n+    private static String onlyDebugMode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjExMjk4OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTowMjozNFrOHdpnZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTowMjozNFrOHdpnZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1MjU4MQ==", "bodyText": "let Spring do its work, it should parse everything automatically", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500852581", "createdAt": "2020-10-07T09:02:34Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -128,4 +144,22 @@ private boolean isScenarioHasNoScreenshotsOnFailureMeta()\n                        .map(Scenario::getMeta)\n                        .map(m -> m.hasProperty(NO_SCREENSHOT_ON_FAILURE_META_NAME)).orElse(Boolean.FALSE);\n     }\n+\n+    private static boolean isFailureInDebugMode(String modeProperty, String modeAnnotation)\n+    {\n+        String[] temp = modeProperty.split(\", \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjExNDIxOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTowMjo1NVrOHdpoMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTowMjo1NVrOHdpoMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1Mjc4Nw==", "bodyText": "do not use static setters", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500852787", "createdAt": "2020-10-07T09:02:55Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -128,4 +144,22 @@ private boolean isScenarioHasNoScreenshotsOnFailureMeta()\n                        .map(Scenario::getMeta)\n                        .map(m -> m.hasProperty(NO_SCREENSHOT_ON_FAILURE_META_NAME)).orElse(Boolean.FALSE);\n     }\n+\n+    private static boolean isFailureInDebugMode(String modeProperty, String modeAnnotation)\n+    {\n+        String[] temp = modeProperty.split(\", \");\n+        for (String mode: temp)\n+        {\n+            if (modeAnnotation.contains(mode))\n+            {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    public static void setOnlyDebugMode(String onlyDebugMode)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjExNTQ1OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTowMzoxNVrOHdppAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTowMzoxNVrOHdppAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1Mjk5NQ==", "bodyText": "also please pay attention it shouldn't be static", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500852995", "createdAt": "2020-10-07T09:03:15Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -41,6 +41,8 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AbstractScreenshotOnFailureMonitor.class);\n \n+    private static String onlyDebugMode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzQzMTcwOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozMTo0MlrOHd2W9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozMTo0MlrOHd2W9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2MTM2Nw==", "bodyText": "Consider null as the default value and usage of Optional", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501061367", "createdAt": "2020-10-07T14:31:42Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,23 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (method != null && method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzQ1NjM2OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozNjo0M1rOHd2mdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozNjo0M1rOHd2mdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2NTMzNQ==", "bodyText": "why is so tricky?", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501065335", "createdAt": "2020-10-07T14:36:43Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -128,4 +144,25 @@ private boolean isScenarioHasNoScreenshotsOnFailureMeta()\n                        .map(Scenario::getMeta)\n                        .map(m -> m.hasProperty(NO_SCREENSHOT_ON_FAILURE_META_NAME)).orElse(Boolean.FALSE);\n     }\n+\n+    private boolean isFailureInDebugMode(String modeAnnotation)\n+    {\n+        if (debugModes == null)\n+        {\n+            return false;\n+        }\n+        for (String mode: debugModes)\n+        {\n+            if (modeAnnotation.contains(mode))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzQ1ODExOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozNzowNlrOHd2nlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozNzowNlrOHd2nlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2NTYyMw==", "bodyText": "consider refactoring to avoid duplicate checks", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501065623", "createdAt": "2020-10-07T14:37:06Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,23 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (method != null && method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+        {\n+            String onlyInDebugMode = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class)\n+                                     .onlyInDebugMode();\n+            if (onlyInDebugMode.isEmpty())\n+            {\n+                return true;\n+            }\n+            else\n+            {\n+                return isFailureInDebugMode(onlyInDebugMode);\n+            }\n+        }\n+        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+               || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzgzMDE5OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1NDo0OVrOHd6QtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOTowNDoxN1rOHeU5tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyNTMwMQ==", "bodyText": "And what is the strategy when I have debugOnly annotation at the class level and on the other hand I have a method that annotated to take screenshots always?", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501125301", "createdAt": "2020-10-07T15:54:49Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,23 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (method != null && method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+        {\n+            String onlyInDebugMode = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class)\n+                                     .onlyInDebugMode();\n+            if (onlyInDebugMode.isEmpty())\n+            {\n+                return true;\n+            }\n+            else\n+            {\n+                return isFailureInDebugMode(onlyInDebugMode);\n+            }\n+        }\n+        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU2MTc4MQ==", "bodyText": "Added the ability to add an annotation with debugMode at method level.\nBehavior is as follows now:  If debugOnly annotation presents at the class level and I have a method that annotated to take screenshots, screenshot will be appear", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501561781", "createdAt": "2020-10-08T09:04:17Z", "author": {"login": "TatianaTochko"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,23 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (method != null && method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+        {\n+            String onlyInDebugMode = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class)\n+                                     .onlyInDebugMode();\n+            if (onlyInDebugMode.isEmpty())\n+            {\n+                return true;\n+            }\n+            else\n+            {\n+                return isFailureInDebugMode(onlyInDebugMode);\n+            }\n+        }\n+        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyNTMwMQ=="}, "originalCommit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTg5MDYxOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDoxMjoxNVrOHegm9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTo0MzowN1rOHgeW2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1MzU4OA==", "bodyText": "why contains, but not equals?", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501753588", "createdAt": "2020-10-08T14:12:15Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,27 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (isAnnotationPresent)\n+        {\n+            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n+                                                 : method.getDeclaringClass()\n+                                                 .getAnnotation(TakeScreenshotOnFailure.class);\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n+            {\n+                if (debugModes == null)\n+                {\n+                    return false;\n+                }\n+                return debugModes.stream().anyMatch(s -> debugModeProperty.contains(s));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9cbee4d5b97de11d81e6767c13b8dacfa32acd9"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzczODY1Nw==", "bodyText": "For using in annotation smth like @TakeScreenshotOnFailure(onlyInDebugMode = \"proxy, ui, .., \")", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r503738657", "createdAt": "2020-10-13T07:49:59Z", "author": {"login": "TatianaTochko"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,27 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (isAnnotationPresent)\n+        {\n+            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n+                                                 : method.getDeclaringClass()\n+                                                 .getAnnotation(TakeScreenshotOnFailure.class);\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n+            {\n+                if (debugModes == null)\n+                {\n+                    return false;\n+                }\n+                return debugModes.stream().anyMatch(s -> debugModeProperty.contains(s));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1MzU4OA=="}, "originalCommit": {"oid": "c9cbee4d5b97de11d81e6767c13b8dacfa32acd9"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgxMzg0OA==", "bodyText": "onlyInDebugMode should contain a single debug mode, if collection is needed, it will be implemented separately, and collection will be used as an annotation field", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r503813848", "createdAt": "2020-10-13T09:43:07Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,27 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (isAnnotationPresent)\n+        {\n+            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n+                                                 : method.getDeclaringClass()\n+                                                 .getAnnotation(TakeScreenshotOnFailure.class);\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n+            {\n+                if (debugModes == null)\n+                {\n+                    return false;\n+                }\n+                return debugModes.stream().anyMatch(s -> debugModeProperty.contains(s));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1MzU4OA=="}, "originalCommit": {"oid": "c9cbee4d5b97de11d81e6767c13b8dacfa32acd9"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTg5OTIwOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDoxNDowOFrOHegsVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDoxNDowOFrOHegsVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1NDk2NA==", "bodyText": "please avoid duplicate checks", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501754964", "createdAt": "2020-10-08T14:14:08Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,27 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (isAnnotationPresent)\n+        {\n+            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n+                                                 : method.getDeclaringClass()\n+                                                 .getAnnotation(TakeScreenshotOnFailure.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9cbee4d5b97de11d81e6767c13b8dacfa32acd9"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDM5Mjg1OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTozMToyMlrOHhKdmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTozMToyMlrOHhKdmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzNjQ3Mw==", "bodyText": "use once, so it should be inlined", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r504536473", "createdAt": "2020-10-14T09:31:22Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,35 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isMethodPresent = method != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5e70a66e1952d5da2046eb921b9f353e833829e"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDM5NDc4OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTozMTo1NVrOHhKewg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTozMTo1NVrOHhKewg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzNjc3MA==", "bodyText": "isAnnotationPresent -> annotationPresent", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r504536770", "createdAt": "2020-10-14T09:31:55Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,35 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isMethodPresent = method != null;\n+        TakeScreenshotOnFailure annotation = null;\n+        if (isMethodPresent)\n+        {\n+            if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+            if (method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+        }\n+        boolean isAnnotationPresent = annotation != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5e70a66e1952d5da2046eb921b9f353e833829e"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDU1ODY5OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxNDo1NlrOHhME4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxNDo1NlrOHhME4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MjkxMg==", "bodyText": "return debugModes == null || debugModes.stream().anyMatch(debugModeProperty::equals);", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r504562912", "createdAt": "2020-10-14T10:14:56Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,35 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isMethodPresent = method != null;\n+        TakeScreenshotOnFailure annotation = null;\n+        if (isMethodPresent)\n+        {\n+            if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+            if (method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+        }\n+        boolean isAnnotationPresent = annotation != null;\n+        if (isAnnotationPresent)\n+        {\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n+            {\n+                if (debugModes == null)\n+                {\n+                    return false;\n+                }\n+                return debugModes.stream().anyMatch(s -> debugModeProperty.equals(s));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5e70a66e1952d5da2046eb921b9f353e833829e"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjgzNjI3OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDowNjo0M1rOHiJpew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDowNjo0M1rOHiJpew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU3MTcwNw==", "bodyText": "if (method != null)\n{\n    AnnotatedElement annotatedElement = method.isAnnotationPresent(TakeScreenshotOnFailure.class) ? method\n            : method.getDeclaringClass();\n    TakeScreenshotOnFailure annotation = annotatedElement.getAnnotation(TakeScreenshotOnFailure.class);\n    if (annotation != null)\n    {\n        String debugModeProperty = annotation.onlyInDebugMode();\n        return debugModeProperty.isEmpty() || debugModes == null || debugModes.stream().anyMatch(\n                debugModeProperty::equals);\n    }\n}\nreturn false;", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r505571707", "createdAt": "2020-10-15T14:06:43Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,30 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        TakeScreenshotOnFailure annotation = null;\n+        if (method != null)\n+        {\n+            if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+            if (method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+        }\n+        boolean annotationPresent = annotation != null;\n+        if (annotationPresent)\n+        {\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n+            {\n+                return debugModes == null || debugModes.stream().anyMatch(debugModeProperty::equals);\n+            }\n+        }\n+        return annotationPresent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3c987d0856be609965ce587041457b9ec53c349"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 154, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}