{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2OTQ3NTA5", "number": 979, "title": "Fix915 : Provide possibility to debug API scenarios", "bodyText": "Closes #915\nProvide possibility to debug API scenarios (show screenshot in Allure report when step fails)\nUse\nscreenshot.on-failure.debug-modes=proxy", "createdAt": "2020-10-02T14:34:51Z", "url": "https://github.com/vividus-framework/vividus/pull/979", "merged": true, "mergeCommit": {"oid": "f6d347d7c6a1da8d2937b2fa0814e66badec7b5b"}, "closed": true, "closedAt": "2020-10-21T09:16:31Z", "author": {"login": "TatianaTochko"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPehnTAFqTUwMTc3NjYwNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUoKIDgFqTUxMzM3NTc1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNzc2NjA3", "url": "https://github.com/vividus-framework/vividus/pull/979#pullrequestreview-501776607", "createdAt": "2020-10-05T07:19:58Z", "commit": {"oid": "003df31ea134119a230374aa3e4cdae23f980cc7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "003df31ea134119a230374aa3e4cdae23f980cc7", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/003df31ea134119a230374aa3e4cdae23f980cc7", "committedDate": "2020-10-02T14:05:41Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)"}, "afterCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/2dd1f1f0a59d07526c1804a13e3ed60f322b3890", "committedDate": "2020-10-07T08:52:16Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse failure-screenshot-debug-mode=proxy in properties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjYzMjA4", "url": "https://github.com/vividus-framework/vividus/pull/979#pullrequestreview-503663208", "createdAt": "2020-10-07T08:55:17Z", "commit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODo1NToxN1rOHdpVLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTowMzoxNVrOHdppAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg0NzkxOA==", "bodyText": "null is not clear for end users, I believe it's just an empty property, right?", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500847918", "createdAt": "2020-10-07T08:55:17Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "diffHunk": "@@ -170,6 +170,10 @@ element xref:parameters:state.adoc[State]\n |Description\n \n include::partial$selenium-properties.adoc[]\n+|failure-screenshot-debug-mode\n+|proxy\n+|null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1MTY3OA==", "bodyText": "screenshot.on-failure.debug-modes?", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500851678", "createdAt": "2020-10-07T09:01:09Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-web-app.adoc", "diffHunk": "@@ -170,6 +170,10 @@ element xref:parameters:state.adoc[State]\n |Description\n \n include::partial$selenium-properties.adoc[]\n+|failure-screenshot-debug-mode", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1MjE4MQ==", "bodyText": "private List<String> debugModes;", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500852181", "createdAt": "2020-10-07T09:01:55Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -41,6 +41,8 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AbstractScreenshotOnFailureMonitor.class);\n \n+    private static String onlyDebugMode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1MjU4MQ==", "bodyText": "let Spring do its work, it should parse everything automatically", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500852581", "createdAt": "2020-10-07T09:02:34Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -128,4 +144,22 @@ private boolean isScenarioHasNoScreenshotsOnFailureMeta()\n                        .map(Scenario::getMeta)\n                        .map(m -> m.hasProperty(NO_SCREENSHOT_ON_FAILURE_META_NAME)).orElse(Boolean.FALSE);\n     }\n+\n+    private static boolean isFailureInDebugMode(String modeProperty, String modeAnnotation)\n+    {\n+        String[] temp = modeProperty.split(\", \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1Mjc4Nw==", "bodyText": "do not use static setters", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500852787", "createdAt": "2020-10-07T09:02:55Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -128,4 +144,22 @@ private boolean isScenarioHasNoScreenshotsOnFailureMeta()\n                        .map(Scenario::getMeta)\n                        .map(m -> m.hasProperty(NO_SCREENSHOT_ON_FAILURE_META_NAME)).orElse(Boolean.FALSE);\n     }\n+\n+    private static boolean isFailureInDebugMode(String modeProperty, String modeAnnotation)\n+    {\n+        String[] temp = modeProperty.split(\", \");\n+        for (String mode: temp)\n+        {\n+            if (modeAnnotation.contains(mode))\n+            {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    public static void setOnlyDebugMode(String onlyDebugMode)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg1Mjk5NQ==", "bodyText": "also please pay attention it shouldn't be static", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r500852995", "createdAt": "2020-10-07T09:03:15Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -41,6 +41,8 @@\n \n     private static final Logger LOGGER = LoggerFactory.getLogger(AbstractScreenshotOnFailureMonitor.class);\n \n+    private static String onlyDebugMode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2dd1f1f0a59d07526c1804a13e3ed60f322b3890", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/2dd1f1f0a59d07526c1804a13e3ed60f322b3890", "committedDate": "2020-10-07T08:52:16Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse failure-screenshot-debug-mode=proxy in properties"}, "afterCommit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "committedDate": "2020-10-07T13:53:40Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTQ1MDc1", "url": "https://github.com/vividus-framework/vividus/pull/979#pullrequestreview-503945075", "createdAt": "2020-10-07T14:31:42Z", "commit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozMTo0MlrOHd2W9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozMTo0MlrOHd2W9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2MTM2Nw==", "bodyText": "Consider null as the default value and usage of Optional", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501061367", "createdAt": "2020-10-07T14:31:42Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,23 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (method != null && method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTUwNDcx", "url": "https://github.com/vividus-framework/vividus/pull/979#pullrequestreview-503950471", "createdAt": "2020-10-07T14:36:43Z", "commit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozNjo0M1rOHd2mdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDozNzowNlrOHd2nlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2NTMzNQ==", "bodyText": "why is so tricky?", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501065335", "createdAt": "2020-10-07T14:36:43Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -128,4 +144,25 @@ private boolean isScenarioHasNoScreenshotsOnFailureMeta()\n                        .map(Scenario::getMeta)\n                        .map(m -> m.hasProperty(NO_SCREENSHOT_ON_FAILURE_META_NAME)).orElse(Boolean.FALSE);\n     }\n+\n+    private boolean isFailureInDebugMode(String modeAnnotation)\n+    {\n+        if (debugModes == null)\n+        {\n+            return false;\n+        }\n+        for (String mode: debugModes)\n+        {\n+            if (modeAnnotation.contains(mode))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA2NTYyMw==", "bodyText": "consider refactoring to avoid duplicate checks", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501065623", "createdAt": "2020-10-07T14:37:06Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,23 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (method != null && method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+        {\n+            String onlyInDebugMode = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class)\n+                                     .onlyInDebugMode();\n+            if (onlyInDebugMode.isEmpty())\n+            {\n+                return true;\n+            }\n+            else\n+            {\n+                return isFailureInDebugMode(onlyInDebugMode);\n+            }\n+        }\n+        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+               || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDMwMzk4", "url": "https://github.com/vividus-framework/vividus/pull/979#pullrequestreview-504030398", "createdAt": "2020-10-07T15:54:49Z", "commit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1NDo0OVrOHd6QtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1NDo0OVrOHd6QtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyNTMwMQ==", "bodyText": "And what is the strategy when I have debugOnly annotation at the class level and on the other hand I have a method that annotated to take screenshots always?", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501125301", "createdAt": "2020-10-07T15:54:49Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,23 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (method != null && method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+        {\n+            String onlyInDebugMode = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class)\n+                                     .onlyInDebugMode();\n+            if (onlyInDebugMode.isEmpty())\n+            {\n+                return true;\n+            }\n+            else\n+            {\n+                return isFailureInDebugMode(onlyInDebugMode);\n+            }\n+        }\n+        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/6a55dbb622e1670ca822cec171f8c9cbfcec8cc3", "committedDate": "2020-10-07T13:53:40Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties"}, "afterCommit": {"oid": "10c0109f14c76271cb334baa998ad4dee7350265", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/10c0109f14c76271cb334baa998ad4dee7350265", "committedDate": "2020-10-08T08:51:53Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10c0109f14c76271cb334baa998ad4dee7350265", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/10c0109f14c76271cb334baa998ad4dee7350265", "committedDate": "2020-10-08T08:51:53Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties"}, "afterCommit": {"oid": "2817a75c549ecd60620b658c69e12265c24ac41f", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/2817a75c549ecd60620b658c69e12265c24ac41f", "committedDate": "2020-10-08T11:18:19Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0ODI3MDQz", "url": "https://github.com/vividus-framework/vividus/pull/979#pullrequestreview-504827043", "createdAt": "2020-10-08T14:12:15Z", "commit": {"oid": "c9cbee4d5b97de11d81e6767c13b8dacfa32acd9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDoxMjoxNVrOHegm9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDoxNDowOFrOHegsVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1MzU4OA==", "bodyText": "why contains, but not equals?", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501753588", "createdAt": "2020-10-08T14:12:15Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,27 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (isAnnotationPresent)\n+        {\n+            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n+                                                 : method.getDeclaringClass()\n+                                                 .getAnnotation(TakeScreenshotOnFailure.class);\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n+            {\n+                if (debugModes == null)\n+                {\n+                    return false;\n+                }\n+                return debugModes.stream().anyMatch(s -> debugModeProperty.contains(s));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9cbee4d5b97de11d81e6767c13b8dacfa32acd9"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1NDk2NA==", "bodyText": "please avoid duplicate checks", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r501754964", "createdAt": "2020-10-08T14:14:08Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,27 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (isAnnotationPresent)\n+        {\n+            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n+                                                 : method.getDeclaringClass()\n+                                                 .getAnnotation(TakeScreenshotOnFailure.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9cbee4d5b97de11d81e6767c13b8dacfa32acd9"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MjU1MDA4", "url": "https://github.com/vividus-framework/vividus/pull/979#pullrequestreview-507255008", "createdAt": "2020-10-13T09:43:06Z", "commit": {"oid": "c9cbee4d5b97de11d81e6767c13b8dacfa32acd9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTo0MzowN1rOHgeW2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTo0MzowN1rOHgeW2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgxMzg0OA==", "bodyText": "onlyInDebugMode should contain a single debug mode, if collection is needed, it will be implemented separately, and collection will be used as an annotation field", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r503813848", "createdAt": "2020-10-13T09:43:07Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,27 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isAnnotationPresent = method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                     || method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        if (isAnnotationPresent)\n+        {\n+            TakeScreenshotOnFailure annotation = method.isAnnotationPresent(TakeScreenshotOnFailure.class)\n+                                                 ? method.getAnnotation(TakeScreenshotOnFailure.class)\n+                                                 : method.getDeclaringClass()\n+                                                 .getAnnotation(TakeScreenshotOnFailure.class);\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n+            {\n+                if (debugModes == null)\n+                {\n+                    return false;\n+                }\n+                return debugModes.stream().anyMatch(s -> debugModeProperty.contains(s));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc1MzU4OA=="}, "originalCommit": {"oid": "c9cbee4d5b97de11d81e6767c13b8dacfa32acd9"}, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9cbee4d5b97de11d81e6767c13b8dacfa32acd9", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/c9cbee4d5b97de11d81e6767c13b8dacfa32acd9", "committedDate": "2020-10-08T11:46:03Z", "message": "Update AbstractScreenshotOnFailureMonitor.java"}, "afterCommit": {"oid": "e5e70a66e1952d5da2046eb921b9f353e833829e", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/e5e70a66e1952d5da2046eb921b9f353e833829e", "committedDate": "2020-10-13T10:56:25Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MTYzOTk2", "url": "https://github.com/vividus-framework/vividus/pull/979#pullrequestreview-508163996", "createdAt": "2020-10-14T09:31:22Z", "commit": {"oid": "e5e70a66e1952d5da2046eb921b9f353e833829e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOTozMToyMlrOHhKdmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDoxNDo1NlrOHhME4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzNjQ3Mw==", "bodyText": "use once, so it should be inlined", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r504536473", "createdAt": "2020-10-14T09:31:22Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,35 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isMethodPresent = method != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5e70a66e1952d5da2046eb921b9f353e833829e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUzNjc3MA==", "bodyText": "isAnnotationPresent -> annotationPresent", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r504536770", "createdAt": "2020-10-14T09:31:55Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,35 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isMethodPresent = method != null;\n+        TakeScreenshotOnFailure annotation = null;\n+        if (isMethodPresent)\n+        {\n+            if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+            if (method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+        }\n+        boolean isAnnotationPresent = annotation != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5e70a66e1952d5da2046eb921b9f353e833829e"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU2MjkxMg==", "bodyText": "return debugModes == null || debugModes.stream().anyMatch(debugModeProperty::equals);", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r504562912", "createdAt": "2020-10-14T10:14:56Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,35 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        boolean isMethodPresent = method != null;\n+        TakeScreenshotOnFailure annotation = null;\n+        if (isMethodPresent)\n+        {\n+            if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+            if (method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+        }\n+        boolean isAnnotationPresent = annotation != null;\n+        if (isAnnotationPresent)\n+        {\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n+            {\n+                if (debugModes == null)\n+                {\n+                    return false;\n+                }\n+                return debugModes.stream().anyMatch(s -> debugModeProperty.equals(s));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5e70a66e1952d5da2046eb921b9f353e833829e"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5e70a66e1952d5da2046eb921b9f353e833829e", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/e5e70a66e1952d5da2046eb921b9f353e833829e", "committedDate": "2020-10-13T10:56:25Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties"}, "afterCommit": {"oid": "e3c987d0856be609965ce587041457b9ec53c349", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/e3c987d0856be609965ce587041457b9ec53c349", "committedDate": "2020-10-15T08:00:33Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NDE4ODIx", "url": "https://github.com/vividus-framework/vividus/pull/979#pullrequestreview-509418821", "createdAt": "2020-10-15T14:06:43Z", "commit": {"oid": "e3c987d0856be609965ce587041457b9ec53c349"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDowNjo0M1rOHiJpew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDowNjo0M1rOHiJpew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU3MTcwNw==", "bodyText": "if (method != null)\n{\n    AnnotatedElement annotatedElement = method.isAnnotationPresent(TakeScreenshotOnFailure.class) ? method\n            : method.getDeclaringClass();\n    TakeScreenshotOnFailure annotation = annotatedElement.getAnnotation(TakeScreenshotOnFailure.class);\n    if (annotation != null)\n    {\n        String debugModeProperty = annotation.onlyInDebugMode();\n        return debugModeProperty.isEmpty() || debugModes == null || debugModes.stream().anyMatch(\n                debugModeProperty::equals);\n    }\n}\nreturn false;", "url": "https://github.com/vividus-framework/vividus/pull/979#discussion_r505571707", "createdAt": "2020-10-15T14:06:43Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -98,10 +101,30 @@ public void onAssertionFailure(AssertionFailedEvent event)\n \n     protected abstract Optional<Screenshot> takeAssertionFailureScreenshot(String screenshotName);\n \n-    private static boolean takeScreenshotOnFailure(Method method)\n+    private boolean takeScreenshotOnFailure(Method method)\n     {\n-        return method != null && (method.isAnnotationPresent(TakeScreenshotOnFailure.class) || method\n-                .getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class));\n+        TakeScreenshotOnFailure annotation = null;\n+        if (method != null)\n+        {\n+            if (method.isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+            if (method.getDeclaringClass().isAnnotationPresent(TakeScreenshotOnFailure.class))\n+            {\n+                annotation = method.getDeclaringClass().getAnnotation(TakeScreenshotOnFailure.class);\n+            }\n+        }\n+        boolean annotationPresent = annotation != null;\n+        if (annotationPresent)\n+        {\n+            String debugModeProperty = annotation.onlyInDebugMode();\n+            if (!debugModeProperty.isEmpty())\n+            {\n+                return debugModes == null || debugModes.stream().anyMatch(debugModeProperty::equals);\n+            }\n+        }\n+        return annotationPresent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3c987d0856be609965ce587041457b9ec53c349"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66000103a3e8a6e803ab217495b7b3bae7ec9004", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/66000103a3e8a6e803ab217495b7b3bae7ec9004", "committedDate": "2020-10-16T10:33:56Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e3c987d0856be609965ce587041457b9ec53c349", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/e3c987d0856be609965ce587041457b9ec53c349", "committedDate": "2020-10-15T08:00:33Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties"}, "afterCommit": {"oid": "66000103a3e8a6e803ab217495b7b3bae7ec9004", "author": {"user": {"login": "TatianaTochko", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/66000103a3e8a6e803ab217495b7b3bae7ec9004", "committedDate": "2020-10-16T10:33:56Z", "message": "Fix915 : Provide possibility to debug API scenarios (show screenshot in Allure report when step fails)\n\nuse screenshot.on-failure.debug-modes=proxy in properties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNTQzMjI1", "url": "https://github.com/vividus-framework/vividus/pull/979#pullrequestreview-510543225", "createdAt": "2020-10-16T14:49:07Z", "commit": {"oid": "66000103a3e8a6e803ab217495b7b3bae7ec9004"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNTg5ODc5", "url": "https://github.com/vividus-framework/vividus/pull/979#pullrequestreview-510589879", "createdAt": "2020-10-16T15:43:15Z", "commit": {"oid": "66000103a3e8a6e803ab217495b7b3bae7ec9004"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMzc1NzU3", "url": "https://github.com/vividus-framework/vividus/pull/979#pullrequestreview-513375757", "createdAt": "2020-10-21T07:22:59Z", "commit": {"oid": "66000103a3e8a6e803ab217495b7b3bae7ec9004"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4991, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}