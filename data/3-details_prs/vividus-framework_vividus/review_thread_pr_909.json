{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMTQ4NDE3", "number": 909, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoyMTowMFrOEhj5jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDo1Mzo0MFrOEhtlpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjI2NjM3OnYy", "diffSide": "RIGHT", "path": "vividus/src/integrationTest/java/org/vividus/action/IntegrationElementAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoyMTowMFrOHO8Hvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoyOTozMVrOHO8dAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyNzEzNA==", "bodyText": "why is it needed?", "url": "https://github.com/vividus-framework/vividus/pull/909#discussion_r485427134", "createdAt": "2020-09-09T08:21:00Z", "author": {"login": "valfirst"}, "path": "vividus/src/integrationTest/java/org/vividus/action/IntegrationElementAction.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.action;\n+\n+import org.vividus.ui.action.search.IElementAction;\n+import org.vividus.ui.action.search.LocatorType;\n+\n+public class IntegrationElementAction implements IElementAction", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3804584b7cc29064365551d9dde3ae093209dfd"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQzMjU3OQ==", "bodyText": "At least one IElementAction is required to satisfy @Inject Set, btw just declaring set collection with IElementAction typing doesn't work", "url": "https://github.com/vividus-framework/vividus/pull/909#discussion_r485432579", "createdAt": "2020-09-09T08:29:31Z", "author": {"login": "uarlouski"}, "path": "vividus/src/integrationTest/java/org/vividus/action/IntegrationElementAction.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.action;\n+\n+import org.vividus.ui.action.search.IElementAction;\n+import org.vividus.ui.action.search.LocatorType;\n+\n+public class IntegrationElementAction implements IElementAction", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyNzEzNA=="}, "originalCommit": {"oid": "c3804584b7cc29064365551d9dde3ae093209dfd"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzQyNTI4OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/resources/spring.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoyNToyM1rOHPHMtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDozMzo1OFrOHPKaEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwODYyOQ==", "bodyText": "Why it is required?", "url": "https://github.com/vividus-framework/vividus/pull/909#discussion_r485608629", "createdAt": "2020-09-09T13:25:23Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/resources/spring.xml", "diffHunk": "@@ -9,6 +9,10 @@\n         http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd\"\n         default-lazy-init=\"true\" profile=\"web,mobile_app\">\n \n+    <context:component-scan base-package=\"org.vividus.bdd.converter.ui\" >", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baa75d12e413bee9523b6aa478a920b380cd1e73"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY2MTIwMQ==", "bodyText": "resolved in other pr, but the goal is to scan Named converters depending on profile, so plugin-web-app scans only web converters, extension-selenium scans only converters applicable for mobile and web", "url": "https://github.com/vividus-framework/vividus/pull/909#discussion_r485661201", "createdAt": "2020-09-09T14:33:58Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/main/resources/spring.xml", "diffHunk": "@@ -9,6 +9,10 @@\n         http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd\"\n         default-lazy-init=\"true\" profile=\"web,mobile_app\">\n \n+    <context:component-scan base-package=\"org.vividus.bdd.converter.ui\" >", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYwODYyOQ=="}, "originalCommit": {"oid": "baa75d12e413bee9523b6aa478a920b380cd1e73"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzg1MzgxOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/test/java/org/vividus/ui/action/search/ElementActionServiceTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDo1Mzo0MFrOHPLW5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDo1Mzo0MFrOHPLW5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY3Njc3Mw==", "bodyText": "what about mockito Spy?", "url": "https://github.com/vividus-framework/vividus/pull/909#discussion_r485676773", "createdAt": "2020-09-09T14:53:40Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/test/java/org/vividus/ui/action/search/ElementActionServiceTests.java", "diffHunk": "@@ -20,22 +20,36 @@\n import static org.hamcrest.Matchers.instanceOf;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.platform.commons.util.ReflectionUtils.findFields;\n+import static org.junit.platform.commons.util.ReflectionUtils.makeAccessible;\n \n+import java.lang.reflect.Field;\n import java.util.Set;\n \n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.params.ParameterizedTest;\n import org.junit.jupiter.params.provider.CsvSource;\n+import org.junit.platform.commons.util.ReflectionUtils.HierarchyTraversalMode;\n import org.vividus.testdouble.TestElementFilter;\n import org.vividus.testdouble.TestElementSearch;\n import org.vividus.testdouble.TestLocatorType;\n \n class ElementActionServiceTests\n {\n-    private final ElementActionService service = new ElementActionService(Set.of(\n-        new TestElementFilter(),\n-        new TestElementSearch()\n-    ));\n+    private ElementActionService service;\n+\n+    @BeforeEach\n+    void init() throws IllegalArgumentException, IllegalAccessException\n+    {\n+        service = new ElementActionService();\n+        Set<IElementAction> elementActions = Set.of(new TestElementFilter(), new TestElementSearch());\n+        Field field = findFields(ElementActionService.class, f -> \"elementActions\".equals(f.getName()),\n+                HierarchyTraversalMode.TOP_DOWN).get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c938520f9593ba482cfafeb784a17ecd2d6ce1f4"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 80, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}