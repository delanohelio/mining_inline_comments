{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNjA0NTc2", "number": 713, "title": "Add step to check secure protocols supported by server", "bodyText": "Closes #681", "createdAt": "2020-07-01T10:28:36Z", "url": "https://github.com/vividus-framework/vividus/pull/713", "merged": true, "mergeCommit": {"oid": "42f2508518998bad55f6c5ac0b893a42901a7e48"}, "closed": true, "closedAt": "2020-07-02T15:28:06Z", "author": {"login": "uarlouski"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwn8w_gBqjM1MDE4NjU2NjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxAaylAFqTQ0MTc4NTU1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46f4faaf434ed03a4e1974900ddac1b577c42fec", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/46f4faaf434ed03a4e1974900ddac1b577c42fec", "committedDate": "2020-07-01T10:28:09Z", "message": "Add step to check secure protocols supported by server"}, "afterCommit": {"oid": "11dab07bd8f7707a6480fe39c1947bad2bb08da4", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/11dab07bd8f7707a6480fe39c1947bad2bb08da4", "committedDate": "2020-07-01T10:46:58Z", "message": "Add step to check secure protocols supported by server"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11dab07bd8f7707a6480fe39c1947bad2bb08da4", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/11dab07bd8f7707a6480fe39c1947bad2bb08da4", "committedDate": "2020-07-01T10:46:58Z", "message": "Add step to check secure protocols supported by server"}, "afterCommit": {"oid": "4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89", "committedDate": "2020-07-01T10:59:36Z", "message": "Add step to check secure protocols supported by server"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMTcyODkx", "url": "https://github.com/vividus-framework/vividus/pull/713#pullrequestreview-441172891", "createdAt": "2020-07-01T20:24:51Z", "commit": {"oid": "4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMDoyNDo1MVrOGr0Nmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMDo0Mjo1M1rOGr0t4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5NzQwMg==", "bodyText": "org.vividus.util.function.CheckedSupplier", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r448597402", "createdAt": "2020-07-01T20:24:51Z", "author": {"login": "valfirst"}, "path": "vividus-http-client/src/main/java/org/vividus/http/client/SslContextFactory.java", "diffHunk": "@@ -93,4 +96,10 @@ public void setPrivateKeyPassword(String privateKeyPassword)\n     {\n         this.privateKeyPassword = privateKeyPassword;\n     }\n+\n+    @FunctionalInterface\n+    private interface GeneralSecurityExceptionSupplier<T>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5ODI3Nw==", "bodyText": "why do you need this change?", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r448598277", "createdAt": "2020-07-01T20:26:48Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-rest-api/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker", "diffHunk": "@@ -0,0 +1 @@\n+mock-maker-inline", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5ODc0Mw==", "bodyText": "can we use https://vividus-test-site.herokuapp.com/ ?", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r448598743", "createdAt": "2020-07-01T20:27:48Z", "author": {"login": "valfirst"}, "path": "vividus-tests/src/main/resources/story/integration/SslSteps.story", "diffHunk": "@@ -0,0 +1,9 @@\n+Description: Integration tests for SslSteps functionality\n+\n+Meta:\n+    @epic vividus-plugin-rest-api\n+\n+Scenario: Verify step: \"Then server `$hostname` supports secure protocols that $rule `$protocols`\"\n+Meta:\n+    @issueId 681\n+Then server `example.com` supports secure protocols that CONTAIN `TLSv1.3,TLSv1.2`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5ODg3Mg==", "bodyText": "CONTAIN -> contain", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r448598872", "createdAt": "2020-07-01T20:28:03Z", "author": {"login": "valfirst"}, "path": "vividus-tests/src/main/resources/story/integration/SslSteps.story", "diffHunk": "@@ -0,0 +1,9 @@\n+Description: Integration tests for SslSteps functionality\n+\n+Meta:\n+    @epic vividus-plugin-rest-api\n+\n+Scenario: Verify step: \"Then server `$hostname` supports secure protocols that $rule `$protocols`\"\n+Meta:\n+    @issueId 681\n+Then server `example.com` supports secure protocols that CONTAIN `TLSv1.3,TLSv1.2`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5OTE3OQ==", "bodyText": "what about overloading method getComparisonRule to accept also array as input parameter?", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r448599179", "createdAt": "2020-07-01T20:28:43Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-rest-api/src/main/java/org/vividus/bdd/steps/ssl/SslSteps.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.steps.ssl;\n+\n+import java.io.IOException;\n+import java.security.GeneralSecurityException;\n+import java.util.List;\n+\n+import javax.net.ssl.SSLSocket;\n+import javax.net.ssl.SSLSocketFactory;\n+\n+import org.jbehave.core.annotations.Then;\n+import org.vividus.bdd.steps.ListComparisonRule;\n+import org.vividus.http.client.ISslContextFactory;\n+import org.vividus.softassert.ISoftAssert;\n+\n+public class SslSteps\n+{\n+    private static final int SSL_PORT = 443;\n+\n+    private final ISoftAssert softAssert;\n+    private final ISslContextFactory sslContextFactory;\n+\n+    public SslSteps(ISoftAssert softAssert, ISslContextFactory sslContextFactory)\n+    {\n+        this.softAssert = softAssert;\n+        this.sslContextFactory = sslContextFactory;\n+    }\n+\n+    /**\n+     * Checks that a server defined by the <b>hostname</b> supports secure protocols defined by the\n+     * <b>protocols</b> parameter.\n+     *\n+     * @param hostname server host e.g. example.com\n+     * @param rule one of the CONTAIN, ARE_EQUAL_TO, ARE_EQUAL_TO_ORDERED_LIST rules\n+     * @param protocols comma separated list of protocols\n+     * @throws GeneralSecurityException If a security exception occurred\n+     * @throws IOException If an input or output exception occurred\n+     */\n+    @Then(\"server `$hostname` supports secure protocols that $rule `$protocols`\")\n+    public void checkSupportedSecureProtocols(String hostname, ListComparisonRule rule, List<String> protocols)\n+            throws GeneralSecurityException, IOException\n+    {\n+        SSLSocketFactory socketFactory = sslContextFactory.getDefaultSslContext().getSocketFactory();\n+        try (SSLSocket socket = (SSLSocket) socketFactory.createSocket(hostname, SSL_PORT))\n+        {\n+            List<String> enabledProtocols = List.of(socket.getEnabledProtocols());\n+            softAssert.assertThat(\"Enabled secure protocols\", enabledProtocols, rule.getComparisonRule(protocols));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5OTQxMA==", "bodyText": "would you mind adding the documentation for this rule?", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r448599410", "createdAt": "2020-07-01T20:29:16Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/steps/ListComparisonRule.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.steps;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.hamcrest.Matcher;\n+import org.hamcrest.Matchers;\n+\n+public enum ListComparisonRule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYwMDg0OQ==", "bodyText": "GeneralSecurityException is not thrown", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r448600849", "createdAt": "2020-07-01T20:32:21Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-rest-api/src/main/java/org/vividus/bdd/steps/ssl/SslSteps.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.steps.ssl;\n+\n+import java.io.IOException;\n+import java.security.GeneralSecurityException;\n+import java.util.List;\n+\n+import javax.net.ssl.SSLSocket;\n+import javax.net.ssl.SSLSocketFactory;\n+\n+import org.jbehave.core.annotations.Then;\n+import org.vividus.bdd.steps.ListComparisonRule;\n+import org.vividus.http.client.ISslContextFactory;\n+import org.vividus.softassert.ISoftAssert;\n+\n+public class SslSteps\n+{\n+    private static final int SSL_PORT = 443;\n+\n+    private final ISoftAssert softAssert;\n+    private final ISslContextFactory sslContextFactory;\n+\n+    public SslSteps(ISoftAssert softAssert, ISslContextFactory sslContextFactory)\n+    {\n+        this.softAssert = softAssert;\n+        this.sslContextFactory = sslContextFactory;\n+    }\n+\n+    /**\n+     * Checks that a server defined by the <b>hostname</b> supports secure protocols defined by the\n+     * <b>protocols</b> parameter.\n+     *\n+     * @param hostname server host e.g. example.com\n+     * @param rule one of the CONTAIN, ARE_EQUAL_TO, ARE_EQUAL_TO_ORDERED_LIST rules\n+     * @param protocols comma separated list of protocols\n+     * @throws GeneralSecurityException If a security exception occurred\n+     * @throws IOException If an input or output exception occurred\n+     */\n+    @Then(\"server `$hostname` supports secure protocols that $rule `$protocols`\")\n+    public void checkSupportedSecureProtocols(String hostname, ListComparisonRule rule, List<String> protocols)\n+            throws GeneralSecurityException, IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYwNTQ1OQ==", "bodyText": "return Matchers.hasItems((T[]) values.toArray(new Object[0]));", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r448605459", "createdAt": "2020-07-01T20:42:25Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/steps/ListComparisonRule.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.steps;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.hamcrest.Matcher;\n+import org.hamcrest.Matchers;\n+\n+public enum ListComparisonRule\n+{\n+    CONTAIN\n+    {\n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+        @Override\n+        public <T> Matcher<Iterable<T>> getComparisonRule(List<T> values)\n+        {\n+            return values.stream()\n+                         .map(Matchers::hasItem)\n+                         .collect(Collectors.collectingAndThen(Collectors.toList(),\n+                             m -> Matchers.allOf((List) m)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYwNTY2Ng==", "bodyText": "the same for another items", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r448605666", "createdAt": "2020-07-01T20:42:53Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/steps/ListComparisonRule.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.steps;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.hamcrest.Matcher;\n+import org.hamcrest.Matchers;\n+\n+public enum ListComparisonRule\n+{\n+    CONTAIN\n+    {\n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+        @Override\n+        public <T> Matcher<Iterable<T>> getComparisonRule(List<T> values)\n+        {\n+            return values.stream()\n+                         .map(Matchers::hasItem)\n+                         .collect(Collectors.collectingAndThen(Collectors.toList(),\n+                             m -> Matchers.allOf((List) m)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYwNTQ1OQ=="}, "originalCommit": {"oid": "4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/4387a7ee2ea9b5f61b7975ae846d5f71ec3d3c89", "committedDate": "2020-07-01T10:59:36Z", "message": "Add step to check secure protocols supported by server"}, "afterCommit": {"oid": "304d798014d67226397b562faac7d5b4d27ad8e5", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/304d798014d67226397b562faac7d5b4d27ad8e5", "committedDate": "2020-07-02T09:39:29Z", "message": "Add step to check secure protocols supported by server"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTE3MzE2", "url": "https://github.com/vividus-framework/vividus/pull/713#pullrequestreview-441517316", "createdAt": "2020-07-02T09:41:00Z", "commit": {"oid": "304d798014d67226397b562faac7d5b4d27ad8e5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo0MTowMFrOGsFa0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo0NToxN1rOGsFkmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg3OTMxMw==", "bodyText": "let's group comparison rules:\n* xref:comparison-rule.adoc[Comparison Rule]\n* xref:collection-comparison-rule.adoc[Collection Comparison Rule]\n* xref:variable-scope.adoc[Variable Scope]", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r448879313", "createdAt": "2020-07-02T09:41:00Z", "author": {"login": "valfirst"}, "path": "docs/modules/parameters/nav.adoc", "diffHunk": "@@ -1,3 +1,4 @@\n .Parameter types\n * xref:comparison-rule.adoc[Comparison Rule]\n * xref:variable-scope.adoc[Variable Scope]\n+* xref:collection-comparison-rule.adoc[Collection Comparison Rule]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304d798014d67226397b562faac7d5b4d27ad8e5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4MTgxNw==", "bodyText": "why do you need allOf here?", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r448881817", "createdAt": "2020-07-02T09:45:17Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/steps/CollectionComparisonRule.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.steps;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.hamcrest.Matcher;\n+import org.hamcrest.Matchers;\n+\n+public enum CollectionComparisonRule\n+{\n+    CONTAIN\n+    {\n+        @Override\n+        public <T> Matcher<Iterable<T>> getComparisonRule(List<T> items)\n+        {\n+            return Matchers.hasItems(asArray(items));\n+        }\n+\n+        @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+        @Override\n+        public <T> Matcher<T[]> getComparisonRule(T[] items)\n+        {\n+            return Stream.of(items)\n+                         .map(Matchers::hasItemInArray)\n+                         .collect(Collectors.collectingAndThen(Collectors.toList(),\n+                             m -> Matchers.allOf((Iterable) m)));\n+        }\n+    },\n+    ARE_EQUAL_TO\n+    {\n+        @Override\n+        public <T> Matcher<Iterable<T>> getComparisonRule(List<T> items)\n+        {\n+            return Matchers.allOf(Matchers.containsInAnyOrder(asArray(items)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "304d798014d67226397b562faac7d5b4d27ad8e5"}, "originalPosition": 51}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "304d798014d67226397b562faac7d5b4d27ad8e5", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/304d798014d67226397b562faac7d5b4d27ad8e5", "committedDate": "2020-07-02T09:39:29Z", "message": "Add step to check secure protocols supported by server"}, "afterCommit": {"oid": "6375f0a4a0bc67c37790ab380ba56893a85548a4", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/6375f0a4a0bc67c37790ab380ba56893a85548a4", "committedDate": "2020-07-02T12:17:06Z", "message": "Add step to check secure protocols supported by server"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6375f0a4a0bc67c37790ab380ba56893a85548a4", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/6375f0a4a0bc67c37790ab380ba56893a85548a4", "committedDate": "2020-07-02T12:17:06Z", "message": "Add step to check secure protocols supported by server"}, "afterCommit": {"oid": "7f5244ee7e55f2a4a6217c1c2bdc14a7e8c42df7", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/7f5244ee7e55f2a4a6217c1c2bdc14a7e8c42df7", "committedDate": "2020-07-02T12:27:12Z", "message": "Add step to check secure protocols supported by server"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f5244ee7e55f2a4a6217c1c2bdc14a7e8c42df7", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/7f5244ee7e55f2a4a6217c1c2bdc14a7e8c42df7", "committedDate": "2020-07-02T12:27:12Z", "message": "Add step to check secure protocols supported by server"}, "afterCommit": {"oid": "bdc557cae17552d6c9eeffb3e4657e1d4717d532", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/bdc557cae17552d6c9eeffb3e4657e1d4717d532", "committedDate": "2020-07-02T12:28:23Z", "message": "Add step to check secure protocols supported by server"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjY1Nzc4", "url": "https://github.com/vividus-framework/vividus/pull/713#pullrequestreview-441665778", "createdAt": "2020-07-02T13:14:26Z", "commit": {"oid": "bdc557cae17552d6c9eeffb3e4657e1d4717d532"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjY4Njkx", "url": "https://github.com/vividus-framework/vividus/pull/713#pullrequestreview-441668691", "createdAt": "2020-07-02T13:17:44Z", "commit": {"oid": "bdc557cae17552d6c9eeffb3e4657e1d4717d532"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMzoxNzo0NVrOGsMdVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMzoxNzo0NVrOGsMdVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk5NDY0NA==", "bodyText": "would you mind adding the documentation for this step?", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r448994644", "createdAt": "2020-07-02T13:17:45Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-rest-api/src/main/java/org/vividus/bdd/steps/ssl/SslSteps.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.steps.ssl;\n+\n+import java.io.IOException;\n+\n+import javax.net.ssl.SSLSocket;\n+import javax.net.ssl.SSLSocketFactory;\n+\n+import org.jbehave.core.annotations.Then;\n+import org.vividus.bdd.steps.CollectionComparisonRule;\n+import org.vividus.http.client.ISslContextFactory;\n+import org.vividus.softassert.ISoftAssert;\n+\n+public class SslSteps\n+{\n+    private static final int SSL_PORT = 443;\n+\n+    private final ISoftAssert softAssert;\n+    private final ISslContextFactory sslContextFactory;\n+\n+    public SslSteps(ISoftAssert softAssert, ISslContextFactory sslContextFactory)\n+    {\n+        this.softAssert = softAssert;\n+        this.sslContextFactory = sslContextFactory;\n+    }\n+\n+    /**\n+     * Checks that a server defined by the <b>hostname</b> supports secure protocols defined by the\n+     * <b>protocols</b> parameter.\n+     *\n+     * @param hostname server host e.g. example.com\n+     * @param rule one of the CONTAIN, ARE_EQUAL_TO, ARE_EQUAL_TO_ORDERED_COLLECTION rules\n+     * @param protocols comma separated list of protocols\n+     * @throws IOException If an input or output exception occurred\n+     */\n+    @Then(\"server `$hostname` supports secure protocols that $rule `$protocols`\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdc557cae17552d6c9eeffb3e4657e1d4717d532"}, "originalPosition": 51}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bdc557cae17552d6c9eeffb3e4657e1d4717d532", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/bdc557cae17552d6c9eeffb3e4657e1d4717d532", "committedDate": "2020-07-02T12:28:23Z", "message": "Add step to check secure protocols supported by server"}, "afterCommit": {"oid": "da0e7fc87bb19e4431375eb2f42fdcd0bafa879c", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/da0e7fc87bb19e4431375eb2f42fdcd0bafa879c", "committedDate": "2020-07-02T13:44:27Z", "message": "Add step to check secure protocols supported by server"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da0e7fc87bb19e4431375eb2f42fdcd0bafa879c", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/da0e7fc87bb19e4431375eb2f42fdcd0bafa879c", "committedDate": "2020-07-02T13:44:27Z", "message": "Add step to check secure protocols supported by server"}, "afterCommit": {"oid": "fe07a9c54d31096c52b1f15bec6b8fa6b84684cf", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/fe07a9c54d31096c52b1f15bec6b8fa6b84684cf", "committedDate": "2020-07-02T13:50:59Z", "message": "Add step to check secure protocols supported by server"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNzM5ODMx", "url": "https://github.com/vividus-framework/vividus/pull/713#pullrequestreview-441739831", "createdAt": "2020-07-02T14:35:18Z", "commit": {"oid": "fe07a9c54d31096c52b1f15bec6b8fa6b84684cf"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDozNToxOFrOGsPtRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDozOTo0OVrOGsP5ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA0Nzg3OA==", "bodyText": "[WARNING]\nTo be implemented\n?", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r449047878", "createdAt": "2020-07-02T14:35:18Z", "author": {"login": "ikalinin1"}, "path": "docs/modules/plugins/pages/plugin-rest-api.adoc", "diffHunk": "@@ -1 +1,49 @@\n-include::ROOT:page$under-construction.adoc[]\n+= Plugin REST API\n+\n+== General Info\n+* Validation of HTTP responses (headers, codes, content, etc.)\n+* Validation of `application/json` content in response using JSON Path\n+* Constructing and sending of HTTP requests\n+\n+== Installation\n+\n+.build.gradle\n+[source,gradle]\n+----\n+implementation(group: 'org.vividus', name: 'vividus-plugin-rest-api', version: '0.2.3')\n+----\n+\n+\n+== Properties\n+\n+TO-DO", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe07a9c54d31096c52b1f15bec6b8fa6b84684cf"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1MDAzNw==", "bodyText": "From my point of view, it is easier to read using a data source\nCONTAIN, List.of(1, 0), List.of(1, 1, 1), false\nwhere\nrule, expected, actual, comparisonResult", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r449050037", "createdAt": "2020-07-02T14:38:24Z", "author": {"login": "ikalinin1"}, "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/steps/CollectionComparisonRuleTests.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.steps;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.DynamicTest.dynamicTest;\n+import static org.vividus.bdd.steps.CollectionComparisonRule.ARE_EQUAL_TO;\n+import static org.vividus.bdd.steps.CollectionComparisonRule.ARE_EQUAL_TO_ORDERED_COLLECTION;\n+import static org.vividus.bdd.steps.CollectionComparisonRule.CONTAIN;\n+\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import org.junit.jupiter.api.DynamicTest;\n+import org.junit.jupiter.api.TestFactory;\n+\n+class CollectionComparisonRuleTests\n+{\n+    @TestFactory\n+    Stream<DynamicTest> listRules()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe07a9c54d31096c52b1f15bec6b8fa6b84684cf"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA1MDk4Ng==", "bodyText": "@requirementId ?", "url": "https://github.com/vividus-framework/vividus/pull/713#discussion_r449050986", "createdAt": "2020-07-02T14:39:49Z", "author": {"login": "ikalinin1"}, "path": "vividus-tests/src/main/resources/story/integration/SslSteps.story", "diffHunk": "@@ -0,0 +1,9 @@\n+Description: Integration tests for SslSteps functionality\n+\n+Meta:\n+    @epic vividus-plugin-rest-api\n+\n+Scenario: Verify step: \"Then server `$hostname` supports secure protocols that $rule `$protocols`\"\n+Meta:\n+    @issueId 681", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe07a9c54d31096c52b1f15bec6b8fa6b84684cf"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bd5acf11f7f83cc0c17228c6781991b44e037be", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/4bd5acf11f7f83cc0c17228c6781991b44e037be", "committedDate": "2020-07-02T14:59:56Z", "message": "Add step to check secure protocols supported by server"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe07a9c54d31096c52b1f15bec6b8fa6b84684cf", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/fe07a9c54d31096c52b1f15bec6b8fa6b84684cf", "committedDate": "2020-07-02T13:50:59Z", "message": "Add step to check secure protocols supported by server"}, "afterCommit": {"oid": "4bd5acf11f7f83cc0c17228c6781991b44e037be", "author": {"user": {"login": "uarlouski", "name": "Uladzislau Arlouski"}}, "url": "https://github.com/vividus-framework/vividus/commit/4bd5acf11f7f83cc0c17228c6781991b44e037be", "committedDate": "2020-07-02T14:59:56Z", "message": "Add step to check secure protocols supported by server"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNzg1NTU2", "url": "https://github.com/vividus-framework/vividus/pull/713#pullrequestreview-441785556", "createdAt": "2020-07-02T15:17:38Z", "commit": {"oid": "4bd5acf11f7f83cc0c17228c6781991b44e037be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 134, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}