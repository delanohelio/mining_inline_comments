{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMjE3NDE4", "number": 1019, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMjo0MTozMVrOEtBOMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDowNDozMVrOEtDoRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjQxMzkyOnYy", "diffSide": "RIGHT", "path": "docs/modules/plugins/pages/plugin-mobile-app.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMjo0MTozMVrOHgksRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMjo0MTozMVrOHgksRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkxNzYzOQ==", "bodyText": "Clear field ?", "url": "https://github.com/vividus-framework/vividus/pull/1019#discussion_r503917639", "createdAt": "2020-10-13T12:41:31Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-mobile-app.adoc", "diffHunk": "@@ -321,6 +321,36 @@ Scenario: Type text\n When I type `Bob` in field located `accessibilityId(username)`\n ----\n \n+=== Clear text", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c8ee0050ea0d3a030bc7e4da10bbf20e2b79082"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjQxODI0OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/KeyboardActions.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMjo0MjozMVrOHgku3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNzo1ODo0OVrOHhG02Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkxODMwMQ==", "bodyText": "why is this check needed?", "url": "https://github.com/vividus-framework/vividus/pull/1019#discussion_r503918301", "createdAt": "2020-10-13T12:42:31Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/KeyboardActions.java", "diffHunk": "@@ -75,4 +76,23 @@ public void typeText(WebElement element, String text)\n             webDriverProvider.getUnwrapped(HidesKeyboard.class).hideKeyboard();\n         }\n     }\n+\n+    /**\n+     * Clear the <b>element</b>'s text\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>check if the element's text is empty</li>\n+     * <li>if the element's text is not empty then clear the element, otherwise do nothing</li>\n+     * </ol>\n+     * @param element element to clear, must not be {@code null}\n+     */\n+    public void clearText(WebElement element)\n+    {\n+        String elementText = element.getText();\n+        if (!StringUtils.isEmpty(elementText))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c8ee0050ea0d3a030bc7e4da10bbf20e2b79082"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3MDkzMA==", "bodyText": "getText is ~5 times faster than clear command, so if field is empty we will not spend time on clearing it", "url": "https://github.com/vividus-framework/vividus/pull/1019#discussion_r503970930", "createdAt": "2020-10-13T13:53:42Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/KeyboardActions.java", "diffHunk": "@@ -75,4 +76,23 @@ public void typeText(WebElement element, String text)\n             webDriverProvider.getUnwrapped(HidesKeyboard.class).hideKeyboard();\n         }\n     }\n+\n+    /**\n+     * Clear the <b>element</b>'s text\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>check if the element's text is empty</li>\n+     * <li>if the element's text is not empty then clear the element, otherwise do nothing</li>\n+     * </ol>\n+     * @param element element to clear, must not be {@code null}\n+     */\n+    public void clearText(WebElement element)\n+    {\n+        String elementText = element.getText();\n+        if (!StringUtils.isEmpty(elementText))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkxODMwMQ=="}, "originalCommit": {"oid": "2c8ee0050ea0d3a030bc7e4da10bbf20e2b79082"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3OTI5NA==", "bodyText": "any platform?\n5x, but what is absolute value? is it like 1ms vs 5ms or 1 min vs 5 min?", "url": "https://github.com/vividus-framework/vividus/pull/1019#discussion_r503979294", "createdAt": "2020-10-13T14:03:56Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/KeyboardActions.java", "diffHunk": "@@ -75,4 +76,23 @@ public void typeText(WebElement element, String text)\n             webDriverProvider.getUnwrapped(HidesKeyboard.class).hideKeyboard();\n         }\n     }\n+\n+    /**\n+     * Clear the <b>element</b>'s text\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>check if the element's text is empty</li>\n+     * <li>if the element's text is not empty then clear the element, otherwise do nothing</li>\n+     * </ol>\n+     * @param element element to clear, must not be {@code null}\n+     */\n+    public void clearText(WebElement element)\n+    {\n+        String elementText = element.getText();\n+        if (!StringUtils.isEmpty(elementText))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkxODMwMQ=="}, "originalCommit": {"oid": "2c8ee0050ea0d3a030bc7e4da10bbf20e2b79082"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE4Mjc4MA==", "bodyText": "iOS platform: ~300ms vs ~1600ms", "url": "https://github.com/vividus-framework/vividus/pull/1019#discussion_r504182780", "createdAt": "2020-10-13T18:50:29Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/KeyboardActions.java", "diffHunk": "@@ -75,4 +76,23 @@ public void typeText(WebElement element, String text)\n             webDriverProvider.getUnwrapped(HidesKeyboard.class).hideKeyboard();\n         }\n     }\n+\n+    /**\n+     * Clear the <b>element</b>'s text\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>check if the element's text is empty</li>\n+     * <li>if the element's text is not empty then clear the element, otherwise do nothing</li>\n+     * </ol>\n+     * @param element element to clear, must not be {@code null}\n+     */\n+    public void clearText(WebElement element)\n+    {\n+        String elementText = element.getText();\n+        if (!StringUtils.isEmpty(elementText))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkxODMwMQ=="}, "originalCommit": {"oid": "2c8ee0050ea0d3a030bc7e4da10bbf20e2b79082"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ3Njg4OQ==", "bodyText": "So in the most common case it is 1600 + 300 = 1800 ? :)", "url": "https://github.com/vividus-framework/vividus/pull/1019#discussion_r504476889", "createdAt": "2020-10-14T07:58:49Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/mobileapp/action/KeyboardActions.java", "diffHunk": "@@ -75,4 +76,23 @@ public void typeText(WebElement element, String text)\n             webDriverProvider.getUnwrapped(HidesKeyboard.class).hideKeyboard();\n         }\n     }\n+\n+    /**\n+     * Clear the <b>element</b>'s text\n+     * <br>\n+     * The atomic actions performed are:\n+     * <ol>\n+     * <li>check if the element's text is empty</li>\n+     * <li>if the element's text is not empty then clear the element, otherwise do nothing</li>\n+     * </ol>\n+     * @param element element to clear, must not be {@code null}\n+     */\n+    public void clearText(WebElement element)\n+    {\n+        String elementText = element.getText();\n+        if (!StringUtils.isEmpty(elementText))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkxODMwMQ=="}, "originalCommit": {"oid": "2c8ee0050ea0d3a030bc7e4da10bbf20e2b79082"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjgwMTc2OnYy", "diffSide": "RIGHT", "path": "docs/modules/plugins/pages/plugin-mobile-app.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDowMjo1OVrOHgoaig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDowMjo1OVrOHgoaig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3ODYzNA==", "bodyText": "clears field...", "url": "https://github.com/vividus-framework/vividus/pull/1019#discussion_r503978634", "createdAt": "2020-10-13T14:02:59Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/pages/plugin-mobile-app.adoc", "diffHunk": "@@ -321,6 +321,36 @@ Scenario: Type text\n When I type `Bob` in field located `accessibilityId(username)`\n ----\n \n+=== Clear field\n+\n+==== *_Info_*\n+\n+Clears text of element located by the locator.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c6b867418f1a8b51ab4c21698272b08800a5f11"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjgwODM5OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-mobile-app/src/test/java/org/vividus/mobileapp/action/KeyboardActionsTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDowNDozMVrOHgoe4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDowNDozMVrOHgoe4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk3OTc0NA==", "bodyText": "@NullAndEmptySource", "url": "https://github.com/vividus-framework/vividus/pull/1019#discussion_r503979744", "createdAt": "2020-10-13T14:04:31Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/test/java/org/vividus/mobileapp/action/KeyboardActionsTests.java", "diffHunk": "@@ -109,6 +111,30 @@ void shouldTypeTextAndHideForIOSRealDeviceNoKeyboardFound()\n         assertEquals(\"Unable to find 'Return' button to close the keyboard\", exception.getMessage());\n     }\n \n+    @Test\n+    void shouldClearText()\n+    {\n+        init(true);\n+        when(element.getText()).thenReturn(TEXT);\n+\n+        keyboardActions.clearText(element);\n+\n+        verify(element).clear();\n+    }\n+\n+    @NullSource\n+    @EmptySource", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c6b867418f1a8b51ab4c21698272b08800a5f11"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 8, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}