{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MTk1MTQ5", "number": 697, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTozMjozMFrOEIa2KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTo0MjowNVrOEIbFMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjYzOTEyOnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EvalExpressionProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTozMjozMFrOGoXrCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTozMjozMFrOGoXrCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NDA3NQ==", "bodyText": "what about extending org.apache.commons.jexl3.MapContext ?", "url": "https://github.com/vividus-framework/vividus/pull/697#discussion_r444984075", "createdAt": "2020-06-24T15:32:30Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EvalExpressionProcessor.java", "diffHunk": "@@ -46,8 +57,38 @@\n         {\n             String expressionToEvaluate = expressionMatcher.group(EVAL_GROUP);\n             JexlScript jexlScript = jexlEngine.get().createScript(expressionToEvaluate);\n-            return Optional.of(jexlScript.execute(JexlEngine.EMPTY_CONTEXT).toString());\n+            return Optional.of(jexlScript.execute(new JexlBddVariableContext(bddVariableContext)).toString());\n         }\n         return Optional.empty();\n     }\n+\n+    private static final class JexlBddVariableContext implements JexlContext", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "970fd0929b19679fa9c59228fce375a937bfba47"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjY1MzY4OnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/expression/EvalExpressionProcessorTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTozNjowOFrOGoX0jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTozNjowOFrOGoX0jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4NjUwOA==", "bodyText": "@Mock private IBddVariableContext bddVariableContext;\n@InjectMocks private EvalExpressionProcessor processor;\n?", "url": "https://github.com/vividus-framework/vividus/pull/697#discussion_r444986508", "createdAt": "2020-06-24T15:36:08Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/expression/EvalExpressionProcessorTests.java", "diffHunk": "@@ -17,19 +17,30 @@\n package org.vividus.bdd.expression;\n \n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n \n import java.util.Optional;\n import java.util.stream.Stream;\n \n+import org.apache.commons.jexl3.JexlException;\n import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n import org.junit.jupiter.params.ParameterizedTest;\n import org.junit.jupiter.params.provider.Arguments;\n import org.junit.jupiter.params.provider.MethodSource;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.vividus.bdd.context.IBddVariableContext;\n \n+@ExtendWith(MockitoExtension.class)\n class EvalExpressionProcessorTests\n {\n+    private static final String TRUE = \"true\";\n+    private static final String VALUE = \"Value\";\n     private static final String FALSE = \"false\";\n-    private final EvalExpressionProcessor processor = new EvalExpressionProcessor();\n+    private final IBddVariableContext bddVariableContext = mock(IBddVariableContext.class);\n+    private final EvalExpressionProcessor processor = new EvalExpressionProcessor(bddVariableContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "970fd0929b19679fa9c59228fce375a937bfba47"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjY3NzYzOnYy", "diffSide": "RIGHT", "path": "vividus-tests/src/main/resources/story/integration/Expressions.story", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTo0MjowNVrOGoYELA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTo0MjowNVrOGoYELA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk5MDUwOA==", "bodyText": "Meta is missing", "url": "https://github.com/vividus-framework/vividus/pull/697#discussion_r444990508", "createdAt": "2020-06-24T15:42:05Z", "author": {"login": "uarlouski"}, "path": "vividus-tests/src/main/resources/story/integration/Expressions.story", "diffHunk": "@@ -21,3 +21,11 @@ Then `#{anyOf(1, 2\\,3,3)}` matches `1|2,3|3`\n \n Scenario: Verify diffDate with formatting\n Then `777` is = `#{diffDate(2019-01-01T12:00:00.223Z,yyyy-MM-dd'T'HH:mm:ss.SSSVV, 2019-01-01T12:00:01.000Z,yyyy-MM-dd'T'HH:mm:ss.SSSVV, milliS)}`\n+\n+Scenario: Verify eval has an access to a variable context\n+    @requirementId 696", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "970fd0929b19679fa9c59228fce375a937bfba47"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 265, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}