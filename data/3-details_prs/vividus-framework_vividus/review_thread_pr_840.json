{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNTc4MDkx", "number": 840, "reviewThreads": {"totalCount": 50, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwODo1ODo1NVrOEdIJwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzowNjowNlrOEe5Qtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTc3NzI4OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/converter/StringToSearchAttributesConverter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwODo1ODo1NVrOHIG_fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwODo1ODo1NVrOHIG_fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI2NTIxNA==", "bodyText": "use FunctionalParameterConverter, it fits better now", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478265214", "createdAt": "2020-08-27T08:58:55Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/converter/StringToSearchAttributesConverter.java", "diffHunk": "@@ -21,15 +21,22 @@\n import javax.inject.Named;\n \n import org.jbehave.core.steps.ParameterConverters.AbstractParameterConverter;\n-import org.vividus.ui.web.action.search.SearchAttributes;\n-import org.vividus.ui.web.util.SearchAttributesConversionUtils;\n+import org.vividus.ui.action.search.SearchAttributes;\n+import org.vividus.ui.util.SearchAttributesConversionUtils;\n \n @Named\n public class StringToSearchAttributesConverter extends AbstractParameterConverter<SearchAttributes>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTc3ODgxOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/converter/StringToSearchAttributesSetConverter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwODo1OToxOFrOHIHAZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwODo1OToxOFrOHIHAZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI2NTQ0NA==", "bodyText": "use FunctionalParameterConverter, it fits better now", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478265444", "createdAt": "2020-08-27T08:59:18Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/converter/StringToSearchAttributesSetConverter.java", "diffHunk": "@@ -22,15 +22,22 @@\n import javax.inject.Named;\n \n import org.jbehave.core.steps.ParameterConverters.AbstractParameterConverter;\n-import org.vividus.ui.web.action.search.SearchAttributes;\n-import org.vividus.ui.web.util.SearchAttributesConversionUtils;\n+import org.vividus.ui.action.search.SearchAttributes;\n+import org.vividus.ui.util.SearchAttributesConversionUtils;\n \n @Named\n public class StringToSearchAttributesSetConverter extends AbstractParameterConverter<Set<SearchAttributes>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTc5MzY4OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/validation/BaseValidations.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTowMzoxMVrOHIHJXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTowMzoxMVrOHIHJXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI2Nzc0MQ==", "bodyText": "I think highlighting is applicable to web elements only", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478267741", "createdAt": "2020-08-27T09:03:11Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/validation/BaseValidations.java", "diffHunk": "@@ -323,8 +311,13 @@ public boolean assertPageWithURLPartIsLoaded(String urlPart)\n                 number, comparisonRule);\n     }\n \n-    private WebDriver getWebDriver()\n+    protected WebDriver getWebDriver()\n     {\n         return webDriverProvider.get();\n     }\n+\n+    protected IHighlightingSoftAssert getSoftAssert()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTc5NTg5OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/validation/DescriptiveSoftAssert.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTowMzo0N1rOHIHKrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTo0OTozMFrOHII06w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI2ODA3OA==", "bodyText": "What is the reason to change the name?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478268078", "createdAt": "2020-08-27T09:03:47Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/validation/DescriptiveSoftAssert.java", "diffHunk": "@@ -36,17 +36,17 @@\n         if (!isMatches)\n         {\n             String assertionDescription = getAssertionDescriptionString(actual, matcher);\n-            return recordAssertion(format(businessDescription, assertionDescription),\n+            return recordAssertionOutcome(format(businessDescription, assertionDescription),\n                     format(systemDescription, assertionDescription), isMatches);\n         }\n         StringDescription description = new StringDescription();\n         matcher.describeTo(description);\n         String matchedString = description.toString();\n-        return recordAssertion(businessDescription + StringUtils.SPACE + matchedString,\n+        return recordAssertionOutcome(businessDescription + StringUtils.SPACE + matchedString,\n                 systemDescription + StringUtils.SPACE + matchedString, isMatches);\n     }\n \n-    private boolean recordAssertion(String businessDescription, String systemDescription, boolean passed)\n+    private boolean recordAssertionOutcome(String businessDescription, String systemDescription, boolean passed)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI5NTI3NQ==", "bodyText": "code smell to have a  method with the same names in parent and in child class", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478295275", "createdAt": "2020-08-27T09:49:30Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/validation/DescriptiveSoftAssert.java", "diffHunk": "@@ -36,17 +36,17 @@\n         if (!isMatches)\n         {\n             String assertionDescription = getAssertionDescriptionString(actual, matcher);\n-            return recordAssertion(format(businessDescription, assertionDescription),\n+            return recordAssertionOutcome(format(businessDescription, assertionDescription),\n                     format(systemDescription, assertionDescription), isMatches);\n         }\n         StringDescription description = new StringDescription();\n         matcher.describeTo(description);\n         String matchedString = description.toString();\n-        return recordAssertion(businessDescription + StringUtils.SPACE + matchedString,\n+        return recordAssertionOutcome(businessDescription + StringUtils.SPACE + matchedString,\n                 systemDescription + StringUtils.SPACE + matchedString, isMatches);\n     }\n \n-    private boolean recordAssertion(String businessDescription, String systemDescription, boolean passed)\n+    private boolean recordAssertionOutcome(String businessDescription, String systemDescription, boolean passed)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI2ODA3OA=="}, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTc5OTY2OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/IScrollActions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTowNDo0N1rOHIHNAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTowNDo0N1rOHIHNAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI2ODY3NA==", "bodyText": "it looks like web-only", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478268674", "createdAt": "2020-08-27T09:04:47Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/IScrollActions.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.action;\n+\n+import org.openqa.selenium.WebElement;\n+\n+public interface IScrollActions\n+{\n+    void scrollIntoView(WebElement webElement, boolean alignedToTheTop);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTgwMjIyOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/SearchActions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTowNToyN1rOHIHOlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTowNToyN1rOHIHOlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI2OTA3Nw==", "bodyText": "what's the reason to change parameter name?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478269077", "createdAt": "2020-08-27T09:05:27Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/SearchActions.java", "diffHunk": "@@ -125,18 +114,13 @@ private DefaultSearch getDefaultSearchAction()\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    private <T extends IElementAction> T getAction(IActionAttributeType actionAttributeType)\n+    private <T extends IElementAction> T getAction(IActionAttributeType actionAttributeKey)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTgwNDM3OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/WaitActions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTowNTo1OVrOHIHP2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTo1MTo0MFrOHII51g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI2OTQwMg==", "bodyText": "LOGGER.debug(wait);", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478269402", "createdAt": "2020-08-27T09:05:59Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/WaitActions.java", "diffHunk": "@@ -155,7 +89,8 @@ private boolean checkDocumentReadyState(WebDriver webDriver, boolean isIExplore)\n             {\n                 V value = wait.until(isTrue);\n                 result.setWaitPassed(true);\n-                LOGGER.debug(wait.toString());\n+                LOGGER.atDebug()\n+                      .log(wait::toString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI5NjUzNA==", "bodyText": "there is not such signature", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478296534", "createdAt": "2020-08-27T09:51:40Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/WaitActions.java", "diffHunk": "@@ -155,7 +89,8 @@ private boolean checkDocumentReadyState(WebDriver webDriver, boolean isIExplore)\n             {\n                 V value = wait.until(isTrue);\n                 result.setWaitPassed(true);\n-                LOGGER.debug(wait.toString());\n+                LOGGER.atDebug()\n+                      .log(wait::toString);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI2OTQwMg=="}, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTgxMTA5OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/ElementActionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTowNzo1MVrOHIHUBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTowNzo1MVrOHIHUBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3MDQ3MA==", "bodyText": "attributeKey -> attributeType", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478270470", "createdAt": "2020-08-27T09:07:51Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/ElementActionService.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.action.search;\n+\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+public class ElementActionService implements IElementActionService\n+{\n+    private final Set<IElementAction> attributeTypes;\n+\n+    private final Set<IElementAction> searchTypes;\n+    private final Set<IElementAction> filterTypes;\n+\n+    public ElementActionService(Set<IElementAction> attributeTypes)\n+    {\n+        this.attributeTypes = attributeTypes;\n+        this.searchTypes = filterByActionClass(IElementSearchAction.class);\n+        this.filterTypes = filterByActionClass(IElementFilterAction.class);\n+    }\n+\n+    @Override\n+    public IElementAction find(IActionAttributeType attributeKey)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTgxODcxOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/listener/WebUiContextListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTowOTo1OVrOHIHY4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOTowOTo1OVrOHIHY4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3MTcxNA==", "bodyText": "is it web-only?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478271714", "createdAt": "2020-08-27T09:09:59Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/listener/WebUiContextListener.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.listener;\n+\n+import com.google.common.eventbus.Subscribe;\n+\n+import org.vividus.selenium.event.WebDriverCreateEvent;\n+import org.vividus.selenium.event.WebDriverQuitEvent;\n+import org.vividus.ui.context.IWebUiContext;\n+\n+public class WebUiContextListener", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTgyMTgxOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/util/LocatorUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOToxMDo0NlrOHIHa0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOToxMDo0NlrOHIHa0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3MjIxMQ==", "bodyText": "it doesn't seem to be generic utility", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478272211", "createdAt": "2020-08-27T09:10:46Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/util/LocatorUtil.java", "diffHunk": "@@ -14,7 +14,7 @@\n  * limitations under the License.\n  */\n \n-package org.vividus.ui.web.util;\n+package org.vividus.ui.util;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTgzNTY2OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/action/MobileAppScrollActions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOToxNDozNFrOHIHjNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMToyOTowMVrOHI9uyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3NDM1Nw==", "bodyText": "bad design, this API is not applicable to mobile, so it shouldn't be implemented at all (even empty)", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478274357", "createdAt": "2020-08-27T09:14:34Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/action/MobileAppScrollActions.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.mobileapp.action;\n+\n+import org.openqa.selenium.WebElement;\n+import org.vividus.ui.action.IScrollActions;\n+\n+public class MobileAppScrollActions implements IScrollActions\n+{\n+    @Override\n+    public void scrollIntoView(WebElement webElement, boolean alignedToTheTop)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE2MjA1Nw==", "bodyText": "discussed to have own set of search attribute beans for each profile without moving similar beans into selenium extension module", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479162057", "createdAt": "2020-08-28T11:29:01Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-mobile-app/src/main/java/org/vividus/bdd/mobileapp/action/MobileAppScrollActions.java", "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.mobileapp.action;\n+\n+import org.openqa.selenium.WebElement;\n+import org.vividus.ui.action.IScrollActions;\n+\n+public class MobileAppScrollActions implements IScrollActions\n+{\n+    @Override\n+    public void scrollIntoView(WebElement webElement, boolean alignedToTheTop)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3NDM1Nw=="}, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4OTg0MzAzOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/validation/IWebBaseValidations.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOToxNjoyM1rOHIHncw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwOToxNjoyM1rOHIHncw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI3NTQ0Mw==", "bodyText": "is it used once? does it make sense to inline this method?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r478275443", "createdAt": "2020-08-27T09:16:23Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/validation/IWebBaseValidations.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.steps.ui.web.validation;\n+\n+import org.vividus.bdd.steps.ui.validation.IBaseValidations;\n+\n+public interface IWebBaseValidations extends IBaseValidations\n+{\n+    boolean assertPageWithURLPartIsLoaded(String urlPart);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54b6b7612b3dccedca3fcc5f16f573476e1d36bf"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTk1OTE3OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/WaitActions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo0MDowM1rOHJC1xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo0MDowM1rOHJC1xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI0NTc2Ng==", "bodyText": "place it on one line: LOGGER.atDebug().log(wait::toString);", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479245766", "createdAt": "2020-08-28T12:40:03Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/WaitActions.java", "diffHunk": "@@ -155,7 +89,8 @@ private boolean checkDocumentReadyState(WebDriver webDriver, boolean isIExplore)\n             {\n                 V value = wait.until(isTrue);\n                 result.setWaitPassed(true);\n-                LOGGER.debug(wait.toString());\n+                LOGGER.atDebug()\n+                      .log(wait::toString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73c8c43226a693395fa5257563ae9c93a9a9121c"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NTk5ODY5OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/test/java/org/vividus/selenium/LocatorFactoryTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo0Njo0NlrOHJDPAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNToxMToxNlrOHJKVBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI1MjIyNw==", "bodyText": "invalid change", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479252227", "createdAt": "2020-08-28T12:46:46Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/test/java/org/vividus/selenium/LocatorFactoryTests.java", "diffHunk": "@@ -110,7 +109,7 @@ void convertStringToLocatorsSourceIsBlankTest()\n     @Test\n     void locatorEquals()\n     {\n-        assertTrue(FIRST_LOCATOR.equals(FIRST_LOCATOR));\n+        assertEquals(FIRST_LOCATOR, FIRST_LOCATOR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73c8c43226a693395fa5257563ae9c93a9a9121c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MjUwMA==", "bodyText": "why? assert equals calls obj1.equals(obj2) under the hood", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479342500", "createdAt": "2020-08-28T14:28:54Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/test/java/org/vividus/selenium/LocatorFactoryTests.java", "diffHunk": "@@ -110,7 +109,7 @@ void convertStringToLocatorsSourceIsBlankTest()\n     @Test\n     void locatorEquals()\n     {\n-        assertTrue(FIRST_LOCATOR.equals(FIRST_LOCATOR));\n+        assertEquals(FIRST_LOCATOR, FIRST_LOCATOR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI1MjIyNw=="}, "originalCommit": {"oid": "73c8c43226a693395fa5257563ae9c93a9a9121c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM2ODQ1NQ==", "bodyText": "Revert back to not depend in asserting mechanism", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479368455", "createdAt": "2020-08-28T15:11:16Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/test/java/org/vividus/selenium/LocatorFactoryTests.java", "diffHunk": "@@ -110,7 +109,7 @@ void convertStringToLocatorsSourceIsBlankTest()\n     @Test\n     void locatorEquals()\n     {\n-        assertTrue(FIRST_LOCATOR.equals(FIRST_LOCATOR));\n+        assertEquals(FIRST_LOCATOR, FIRST_LOCATOR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI1MjIyNw=="}, "originalCommit": {"oid": "73c8c43226a693395fa5257563ae9c93a9a9121c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjAwMjc2OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo0NzozN1rOHJDRoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo0NzozN1rOHJDRoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI1Mjg5Ng==", "bodyText": "Used once dependencies should not be moved to versions because dependabot unable to update them", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479252896", "createdAt": "2020-08-28T12:47:37Z", "author": {"login": "ikalinin1"}, "path": "build.gradle", "diffHunk": "@@ -69,6 +69,7 @@ project.description = 'Vividus'\n ext {\n     versions = [\n         allure:                 '2.13.5',\n+        commonsCollections4:    '4.4',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73c8c43226a693395fa5257563ae9c93a9a9121c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjAxNjcwOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/util/SearchAttributesConversionUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo1MDoyMlrOHJDavg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzoyODo0OVrOHJFhxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI1NTIzMA==", "bodyText": "What will be result of this locator parsing? xpath(//a):", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479255230", "createdAt": "2020-08-28T12:50:22Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/util/SearchAttributesConversionUtils.java", "diffHunk": "@@ -25,33 +25,37 @@\n \n import org.apache.commons.lang3.StringUtils;\n import org.vividus.selenium.LocatorFactory;\n-import org.vividus.ui.web.action.search.ActionAttributeType;\n-import org.vividus.ui.web.action.search.SearchAttributes;\n-import org.vividus.ui.web.action.search.Visibility;\n+import org.vividus.ui.action.search.IElementAction;\n+import org.vividus.ui.action.search.IElementActionService;\n+import org.vividus.ui.action.search.SearchAttributes;\n+import org.vividus.ui.action.search.Visibility;\n \n-public final class SearchAttributesConversionUtils\n+public class SearchAttributesConversionUtils\n {\n     private static final int SEARCH_VALUE_GROUP = 2;\n     private static final int ATTRIBURTE_TYPE_GROUP = 1;\n     private static final String EMPTY = \"\";\n     private static final int ELEMENT_TYPE_GROUP = 3;\n     private static final char CLOSING_BRACKET = ']';\n-    private static final String LOCATOR_FORMAT = \"(?:By\\\\.)?([a-zA-Z]+)\\\\((.+?)\\\\):?([a-zA-Z]*)?\";\n+    private static final String LOCATOR_FORMAT = \"(?:By\\\\.)?([a-zA-Z]+)\\\\((.+?)\\\\):?([a-zA-Z]*)\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73c8c43226a693395fa5257563ae9c93a9a9121c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI4OTc5Nw==", "bodyText": "xpath: //a visibility: visible", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479289797", "createdAt": "2020-08-28T13:28:49Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/util/SearchAttributesConversionUtils.java", "diffHunk": "@@ -25,33 +25,37 @@\n \n import org.apache.commons.lang3.StringUtils;\n import org.vividus.selenium.LocatorFactory;\n-import org.vividus.ui.web.action.search.ActionAttributeType;\n-import org.vividus.ui.web.action.search.SearchAttributes;\n-import org.vividus.ui.web.action.search.Visibility;\n+import org.vividus.ui.action.search.IElementAction;\n+import org.vividus.ui.action.search.IElementActionService;\n+import org.vividus.ui.action.search.SearchAttributes;\n+import org.vividus.ui.action.search.Visibility;\n \n-public final class SearchAttributesConversionUtils\n+public class SearchAttributesConversionUtils\n {\n     private static final int SEARCH_VALUE_GROUP = 2;\n     private static final int ATTRIBURTE_TYPE_GROUP = 1;\n     private static final String EMPTY = \"\";\n     private static final int ELEMENT_TYPE_GROUP = 3;\n     private static final char CLOSING_BRACKET = ']';\n-    private static final String LOCATOR_FORMAT = \"(?:By\\\\.)?([a-zA-Z]+)\\\\((.+?)\\\\):?([a-zA-Z]*)?\";\n+    private static final String LOCATOR_FORMAT = \"(?:By\\\\.)?([a-zA-Z]+)\\\\((.+?)\\\\):?([a-zA-Z]*)\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI1NTIzMA=="}, "originalCommit": {"oid": "73c8c43226a693395fa5257563ae9c93a9a9121c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjAzMTE3OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/WaitSteps.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo1MzoxOFrOHJDjyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo1MzoxOFrOHJDjyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI1NzU0NA==", "bodyText": "noisy change", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479257544", "createdAt": "2020-08-28T12:53:18Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/WaitSteps.java", "diffHunk": "@@ -497,8 +497,9 @@ public boolean waitForElementPresence(SearchContext searchContext, By by)\n             public Boolean apply(WebDriver driver)\n             {\n                 navigateActions.refresh(driver);\n-                SearchAttributes attributes = new SearchAttributes(ActionAttributeType.CASE_SENSITIVE_TEXT, textToFind);\n-                List<WebElement> elements = searchActions.findElements(webUiContext.getSearchContext(WebDriver.class),\n+                SearchAttributes attributes = new SearchAttributes(ActionAttributeType.CASE_SENSITIVE_TEXT,\n+                        textToFind);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73c8c43226a693395fa5257563ae9c93a9a9121c"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjAzODMyOnYy", "diffSide": "LEFT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/IJavascriptActions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo1NDo0NFrOHJDoeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo1NDo0NFrOHJDoeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI1ODc0NQ==", "bodyText": "noisy change", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479258745", "createdAt": "2020-08-28T12:54:44Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/IJavascriptActions.java", "diffHunk": "@@ -47,8 +49,6 @@\n      */\n     <T> T executeAsyncScriptFromResource(Class<?> clazz, String jsResourceName, Object... args);\n \n-    void scrollIntoView(WebElement webElement, boolean alignedToTheTop);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73c8c43226a693395fa5257563ae9c93a9a9121c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjA1MzI5OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/search/CaseInsensitiveTextSearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo1NzozMFrOHJDx6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjo1NzozMFrOHJDx6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI2MTE2MA==", "bodyText": "instead of bunch of such getters it's better to move this method to the parent class and pass this parameter via constructor", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479261160", "createdAt": "2020-08-28T12:57:30Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/search/CaseInsensitiveTextSearch.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.web.action.search;\n+\n+import java.util.List;\n+\n+import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.WebElement;\n+import org.vividus.ui.action.search.IActionAttributeType;\n+import org.vividus.ui.action.search.IElementSearchAction;\n+import org.vividus.ui.action.search.SearchParameters;\n+\n+public class CaseInsensitiveTextSearch extends AbstractWebElementSearchAction implements IElementSearchAction\n+{\n+    @Override\n+    public List<WebElement> search(SearchContext searchContext, SearchParameters parameters)\n+    {\n+        return findElements(searchContext, generateCaseInsensitiveLocator(parameters.getValue().toLowerCase(), \"*\"),\n+                parameters);\n+    }\n+\n+    @Override\n+    public IActionAttributeType getAttributeType()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73c8c43226a693395fa5257563ae9c93a9a9121c"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjA3ODQyOnYy", "diffSide": "RIGHT", "path": "vividus/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzowMjowNlrOHJECTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDoyOToxNlrOHJIwhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI2NTM1Ng==", "bodyText": "why is it needed?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479265356", "createdAt": "2020-08-28T13:02:06Z", "author": {"login": "valfirst"}, "path": "vividus/build.gradle", "diffHunk": "@@ -90,6 +90,7 @@ dependencies {\n     integrationTestImplementation project(':vividus-plugin-web-app-to-rest-api')\n     integrationTestImplementation project(':vividus-plugin-web-app')\n     integrationTestImplementation project(':vividus-plugin-xml')\n+    integrationTestImplementation project(':vividus-extension-selenium')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73c8c43226a693395fa5257563ae9c93a9a9121c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MjcyNQ==", "bodyText": "noisy changes :)", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479342725", "createdAt": "2020-08-28T14:29:16Z", "author": {"login": "uarlouski"}, "path": "vividus/build.gradle", "diffHunk": "@@ -90,6 +90,7 @@ dependencies {\n     integrationTestImplementation project(':vividus-plugin-web-app-to-rest-api')\n     integrationTestImplementation project(':vividus-plugin-web-app')\n     integrationTestImplementation project(':vividus-plugin-xml')\n+    integrationTestImplementation project(':vividus-extension-selenium')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI2NTM1Ng=="}, "originalCommit": {"oid": "73c8c43226a693395fa5257563ae9c93a9a9121c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjA4MDQ2OnYy", "diffSide": "RIGHT", "path": "vividus/src/main/resources/properties/deprecated/deprecated.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzowMjozMFrOHJEDqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzowMjozMFrOHJEDqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI2NTcwNg==", "bodyText": "it should be in the corresponding plugin", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r479265706", "createdAt": "2020-08-28T13:02:30Z", "author": {"login": "valfirst"}, "path": "vividus/src/main/resources/properties/deprecated/deprecated.properties", "diffHunk": "@@ -2,3 +2,8 @@\n # deprecated.property.name=new.property.name\n \n configuration.profile=configuration.profiles\n+\n+web.wait.timeout=ui.wait.timeout\n+web.wait.polling-period=ui.wait.polling-period\n+web.search.wait-for-element-timeout=ui.search.wait-for-element-timeout\n+web.search.retry-search-if-stale=ui.search.retry-search-if-stale", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73c8c43226a693395fa5257563ae9c93a9a9121c"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjE4NjI1OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/validation/BaseValidations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzozNTo1M1rOHJ5Ifw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDowODo1MVrOHJ6ZWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEzNTI5NQ==", "bodyText": "Is this state valid for mobile apps?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r480135295", "createdAt": "2020-08-31T13:35:53Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/validation/BaseValidations.java", "diffHunk": "@@ -14,48 +14,45 @@\n  * limitations under the License.\n  */\n \n-package org.vividus.bdd.steps.ui.web.validation;\n+package org.vividus.bdd.steps.ui.validation;\n \n import static org.hamcrest.Matchers.greaterThan;\n import static org.vividus.ui.validation.matcher.WebElementMatchers.elementNumber;\n \n-import java.net.URI;\n import java.util.List;\n import java.util.Optional;\n \n import org.hamcrest.Matcher;\n import org.hamcrest.Matchers;\n import org.openqa.selenium.SearchContext;\n-import org.openqa.selenium.WebDriver;\n import org.openqa.selenium.WebElement;\n import org.openqa.selenium.WrapsElement;\n import org.openqa.selenium.support.ui.ExpectedCondition;\n import org.vividus.bdd.steps.ComparisonRule;\n import org.vividus.selenium.IWebDriverProvider;\n+import org.vividus.ui.IState;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37f7ca21359e77ecee437997ed18d177a481ec4e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE1NTk5Mw==", "bodyText": "yes, basic verifications like is disabled, selected etc are applicable for mobiles", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r480155993", "createdAt": "2020-08-31T14:08:51Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/steps/ui/validation/BaseValidations.java", "diffHunk": "@@ -14,48 +14,45 @@\n  * limitations under the License.\n  */\n \n-package org.vividus.bdd.steps.ui.web.validation;\n+package org.vividus.bdd.steps.ui.validation;\n \n import static org.hamcrest.Matchers.greaterThan;\n import static org.vividus.ui.validation.matcher.WebElementMatchers.elementNumber;\n \n-import java.net.URI;\n import java.util.List;\n import java.util.Optional;\n \n import org.hamcrest.Matcher;\n import org.hamcrest.Matchers;\n import org.openqa.selenium.SearchContext;\n-import org.openqa.selenium.WebDriver;\n import org.openqa.selenium.WebElement;\n import org.openqa.selenium.WrapsElement;\n import org.openqa.selenium.support.ui.ExpectedCondition;\n import org.vividus.bdd.steps.ComparisonRule;\n import org.vividus.selenium.IWebDriverProvider;\n+import org.vividus.ui.IState;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEzNTI5NQ=="}, "originalCommit": {"oid": "37f7ca21359e77ecee437997ed18d177a481ec4e"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjIwODY4OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/AbstractElementAction.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzo0MTozMlrOHJ5V2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTozNjo1NlrOHJ90rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEzODcxMg==", "bodyText": "use constructor?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r480138712", "createdAt": "2020-08-31T13:41:32Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/AbstractElementAction.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.action.search;\n+\n+import java.time.Duration;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.StaleElementReferenceException;\n+import org.openqa.selenium.WebElement;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.vividus.ui.action.IExpectedConditions;\n+import org.vividus.ui.action.IWaitActions;\n+\n+public abstract class AbstractElementAction implements IElementAction\n+{\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AbstractElementAction.class);\n+\n+    @Inject private IWaitActions waitActions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37f7ca21359e77ecee437997ed18d177a481ec4e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxMTU2NA==", "bodyText": "refactoring this to constructors will spawn approximately 30 actions with 3-5 arg constructors which makes refactoring or adding new service beans to this class really hard", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r480211564", "createdAt": "2020-08-31T15:35:59Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/AbstractElementAction.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.action.search;\n+\n+import java.time.Duration;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.StaleElementReferenceException;\n+import org.openqa.selenium.WebElement;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.vividus.ui.action.IExpectedConditions;\n+import org.vividus.ui.action.IWaitActions;\n+\n+public abstract class AbstractElementAction implements IElementAction\n+{\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AbstractElementAction.class);\n+\n+    @Inject private IWaitActions waitActions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEzODcxMg=="}, "originalCommit": {"oid": "37f7ca21359e77ecee437997ed18d177a481ec4e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxMjE0MQ==", "bodyText": "Resolved", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r480212141", "createdAt": "2020-08-31T15:36:56Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/AbstractElementAction.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.action.search;\n+\n+import java.time.Duration;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.StaleElementReferenceException;\n+import org.openqa.selenium.WebElement;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.vividus.ui.action.IExpectedConditions;\n+import org.vividus.ui.action.IWaitActions;\n+\n+public abstract class AbstractElementAction implements IElementAction\n+{\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AbstractElementAction.class);\n+\n+    @Inject private IWaitActions waitActions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEzODcxMg=="}, "originalCommit": {"oid": "37f7ca21359e77ecee437997ed18d177a481ec4e"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjIxMjc0OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/ElementActionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzo0MjoyN1rOHJ5YMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzo0MjoyN1rOHJ5YMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEzOTMxNA==", "bodyText": "I believe we do not use an interface like this anymore", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r480139314", "createdAt": "2020-08-31T13:42:27Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/ElementActionService.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.action.search;\n+\n+import java.util.Collections;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+public class ElementActionService implements IElementActionService", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37f7ca21359e77ecee437997ed18d177a481ec4e"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjIyMTUzOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/SearchAttributes.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMzo0NDo0NVrOHJ5dyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTozNDo0MlrOHJ9vOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0MDc0Ng==", "bodyText": "Since you're renaming ActionAttributeType can we use some meaningful name? SearchType or something else", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r480140746", "createdAt": "2020-08-31T13:44:45Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/SearchAttributes.java", "diffHunk": "@@ -32,15 +33,12 @@\n \n     public SearchAttributes(IActionAttributeType searchAttributeType, SearchParameters searchParameters)\n     {\n-        if (searchAttributeType.getSearchLocatorBuilder() == null)\n-        {\n-            checkIfApplicable(searchAttributeType, IElementSearchAction.class, \"Search\");\n-        }\n+        checkIfApplicable(searchAttributeType, IElementSearchAction.class, \"Search\");\n         this.searchAttributeType = searchAttributeType;\n         this.searchParameters = searchParameters;\n     }\n \n-    public SearchAttributes(ActionAttributeType searchAttributeType, String searchValue)\n+    public SearchAttributes(IActionAttributeType searchAttributeType, String searchValue)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37f7ca21359e77ecee437997ed18d177a481ec4e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxMDc0Ng==", "bodyText": "renamed to ElementActionType", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r480210746", "createdAt": "2020-08-31T15:34:42Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/SearchAttributes.java", "diffHunk": "@@ -32,15 +33,12 @@\n \n     public SearchAttributes(IActionAttributeType searchAttributeType, SearchParameters searchParameters)\n     {\n-        if (searchAttributeType.getSearchLocatorBuilder() == null)\n-        {\n-            checkIfApplicable(searchAttributeType, IElementSearchAction.class, \"Search\");\n-        }\n+        checkIfApplicable(searchAttributeType, IElementSearchAction.class, \"Search\");\n         this.searchAttributeType = searchAttributeType;\n         this.searchParameters = searchParameters;\n     }\n \n-    public SearchAttributes(ActionAttributeType searchAttributeType, String searchValue)\n+    public SearchAttributes(IActionAttributeType searchAttributeType, String searchValue)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0MDc0Ng=="}, "originalCommit": {"oid": "37f7ca21359e77ecee437997ed18d177a481ec4e"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjQ3NTMwOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/SearchActions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDo0NTo1OVrOHJ72cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDo0NTo1OVrOHJ72cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE3OTgyNw==", "bodyText": "what about moving this method to ElementActionService", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r480179827", "createdAt": "2020-08-31T14:45:59Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/SearchActions.java", "diffHunk": "@@ -101,28 +86,18 @@\n     @Override\n     public Optional<WebElement> findElement(SearchAttributes attributes)\n     {\n-        List<WebElement> elements = findElements(webUiContext.getSearchContext(), attributes);\n+        List<WebElement> elements = findElements(uiContext.getSearchContext(), attributes);\n         return elements.isEmpty() ? Optional.empty() : Optional.of(elements.get(0));\n     }\n \n-    private DefaultSearch getDefaultSearchAction()\n-    {\n-        return getAction(ActionAttributeType.DEFAULT);\n-    }\n-\n     @SuppressWarnings(\"unchecked\")\n     private <T extends IElementAction> T getAction(IActionAttributeType actionAttributeType)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37f7ca21359e77ecee437997ed18d177a481ec4e"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzU0MTM1OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/search/HowSearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTozNTo0MFrOHKuJJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTozNTo0MFrOHKuJJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAwMzgxNQ==", "bodyText": "HowSearch -> BySeleniumLocatorSearch ?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481003815", "createdAt": "2020-09-01T09:35:40Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/search/HowSearch.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.web.action.search;\n+\n+import java.util.List;\n+\n+import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.How;\n+import org.vividus.ui.action.search.AbstractElementAction;\n+import org.vividus.ui.action.search.IElementSearchAction;\n+import org.vividus.ui.action.search.LocatorType;\n+import org.vividus.ui.action.search.SearchParameters;\n+\n+public class HowSearch extends AbstractElementAction implements IElementSearchAction", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09cf98d4c5cb7b2fca2c0fb859182e6bfd7e54c2"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzU0MzMyOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/search/ElementNameSearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTozNjoxNFrOHKuKTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTozNjoxNFrOHKuKTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAwNDEwOQ==", "bodyText": "Can it be just a bean?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481004109", "createdAt": "2020-09-01T09:36:14Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/search/ElementNameSearch.java", "diffHunk": "@@ -16,23 +16,10 @@\n \n package org.vividus.ui.web.action.search;\n \n-import java.util.List;\n-\n-import org.openqa.selenium.SearchContext;\n-import org.openqa.selenium.WebElement;\n-import org.vividus.ui.web.util.LocatorUtil;\n-\n-public class ElementNameSearch extends AbstractElementSearchAction implements IElementSearchAction\n+public class ElementNameSearch extends AbstractElementNameSearch", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09cf98d4c5cb7b2fca2c0fb859182e6bfd7e54c2"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzU1NjIxOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/search/NameSearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTozOTo0MlrOHKuSFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTozOTo0MlrOHKuSFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAwNjEwMg==", "bodyText": "Can it be just a bean?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481006102", "createdAt": "2020-09-01T09:39:42Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/search/NameSearch.java", "diffHunk": "@@ -16,6 +16,10 @@\n \n package org.vividus.ui.web.action.search;\n \n-public class DefaultSearch extends AbstractElementSearchAction implements IElementAction\n+public class NameSearch extends AbstractElementNameSearch", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09cf98d4c5cb7b2fca2c0fb859182e6bfd7e54c2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzU5NDgxOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/CaseInsensitiveTestSearchTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTo0OTowNFrOHKupFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTo0OTowNFrOHKupFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAxMTk4OA==", "bodyText": "no mocks to inject", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481011988", "createdAt": "2020-09-01T09:49:04Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/CaseInsensitiveTestSearchTests.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.web.action.search;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.WebElement;\n+import org.vividus.ui.action.search.SearchParameters;\n+import org.vividus.ui.action.search.Visibility;\n+\n+@ExtendWith(MockitoExtension.class)\n+class CaseInsensitiveTestSearchTests\n+{\n+    @InjectMocks private CaseInsensitiveTextSearch search;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09cf98d4c5cb7b2fca2c0fb859182e6bfd7e54c2"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzYwMDE4OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/FieldNameSearchTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTo1MDoxN1rOHKur_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTo1MDoxN1rOHKur_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAxMjczNA==", "bodyText": "no mocks to inject", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481012734", "createdAt": "2020-09-01T09:50:17Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/FieldNameSearchTests.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.web.action.search;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.WebElement;\n+import org.vividus.ui.action.search.SearchParameters;\n+import org.vividus.ui.action.search.Visibility;\n+\n+@ExtendWith(MockitoExtension.class)\n+class FieldNameSearchTests\n+{\n+    @InjectMocks private FieldNameSearch search;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09cf98d4c5cb7b2fca2c0fb859182e6bfd7e54c2"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzYwMjY4OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/ImageWithSourceSearchTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTo1MDo1MlrOHKutcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTo1MDo1MlrOHKutcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAxMzEwNA==", "bodyText": "no mocks to inject", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481013104", "createdAt": "2020-09-01T09:50:52Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/ImageWithSourceSearchTests.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.web.action.search;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.WebElement;\n+import org.vividus.ui.action.search.SearchParameters;\n+import org.vividus.ui.action.search.Visibility;\n+\n+@ExtendWith(MockitoExtension.class)\n+class ImageWithSourceSearchTests\n+{\n+    @InjectMocks private ImageWithSourceSearch search;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09cf98d4c5cb7b2fca2c0fb859182e6bfd7e54c2"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzYwODIyOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/PartialLinkTextSearchTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTo1MjoxM1rOHKuwvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTo1MjoxM1rOHKuwvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAxMzk1MQ==", "bodyText": "no mocks to inject", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481013951", "createdAt": "2020-09-01T09:52:13Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/PartialLinkTextSearchTests.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.web.action.search;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.WebElement;\n+import org.vividus.ui.action.search.SearchParameters;\n+import org.vividus.ui.action.search.Visibility;\n+\n+@ExtendWith(MockitoExtension.class)\n+class PartialLinkTextSearchTests\n+{\n+    @InjectMocks private PartialLinkTextSearch search;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09cf98d4c5cb7b2fca2c0fb859182e6bfd7e54c2"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzYxMjQ2OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/VisibilityTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTo1MzoyMlrOHKuzVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTo1MzoyMlrOHKuzVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAxNDYxMg==", "bodyText": "package for this class should be updated to org.vividus.ui.action.search and this class should be moved to vividus-extension-selenium", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481014612", "createdAt": "2020-09-01T09:53:22Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/VisibilityTests.java", "diffHunk": "@@ -27,6 +27,7 @@\n import org.junit.jupiter.params.ParameterizedTest;\n import org.junit.jupiter.params.provider.Arguments;\n import org.junit.jupiter.params.provider.MethodSource;\n+import org.vividus.ui.action.search.Visibility;\n \n class VisibilityTests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09cf98d4c5cb7b2fca2c0fb859182e6bfd7e54c2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzYxMzY2OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/XpathSearchTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTo1Mzo0NFrOHKu0HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwOTo1Mzo0NFrOHKu0HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAxNDgxMg==", "bodyText": "no mocks to inject", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481014812", "createdAt": "2020-09-01T09:53:44Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/XpathSearchTests.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.web.action.search;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.WebElement;\n+import org.vividus.ui.action.search.SearchParameters;\n+import org.vividus.ui.action.search.Visibility;\n+\n+@ExtendWith(MockitoExtension.class)\n+class XpathSearchTests\n+{\n+    @InjectMocks private XpathSearch search;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09cf98d4c5cb7b2fca2c0fb859182e6bfd7e54c2"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzk2MTM4OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/util/LocatorConversionUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTozMDozNlrOHKyGdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTozMDozNlrOHKyGdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA2ODY2MQ==", "bodyText": "Why it is still utils? Can we name it Locator(Converter|Parser|Creator)?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481068661", "createdAt": "2020-09-01T11:30:36Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/util/LocatorConversionUtils.java", "diffHunk": "@@ -25,11 +25,12 @@\n \n import org.apache.commons.lang3.StringUtils;\n import org.vividus.selenium.LocatorFactory;\n-import org.vividus.ui.web.action.search.ActionAttributeType;\n-import org.vividus.ui.web.action.search.SearchAttributes;\n-import org.vividus.ui.web.action.search.Visibility;\n+import org.vividus.ui.action.search.ElementActionService;\n+import org.vividus.ui.action.search.IElementAction;\n+import org.vividus.ui.action.search.Locator;\n+import org.vividus.ui.action.search.Visibility;\n \n-public final class SearchAttributesConversionUtils\n+public class LocatorConversionUtils", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzk3NDQ2OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/test/java/org/vividus/bdd/steps/ui/validation/BaseValidationsTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTozNDozOFrOHKyOaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTozNDozOFrOHKyOaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA3MDY5Ng==", "bodyText": "Search -> Locator", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481070696", "createdAt": "2020-09-01T11:34:38Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/test/java/org/vividus/bdd/steps/ui/validation/BaseValidationsTests.java", "diffHunk": "@@ -70,7 +69,7 @@\n     private static final String PATTERN_ELEMENTS = \"Number %1$s of elements found by '%2$s'\";\n     private static final String BUSINESS_DESCRIPTION = \"Test business description\";\n     private static final String SYSTEM_DESCRIPTION =\n-            \"An element with attributes: ' XPath: './/xpath=1'; Visibility: VISIBLE;'\";\n+            \"An element with attributes: ' Search: './/xpath=1'; Visibility: VISIBLE;'\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzk4MjE3OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/test/java/org/vividus/testdouble/TestLocatorType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTozNjo1MVrOHKyS-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTozNjo1MVrOHKyS-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA3MTg2Nw==", "bodyText": "testdouble - why this package name?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481071867", "createdAt": "2020-09-01T11:36:51Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/test/java/org/vividus/testdouble/TestLocatorType.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.testdouble;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzk5MDA4OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/test/java/org/vividus/ui/action/SearchActionsTests.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTozOToxNlrOHKyXhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo0ODozM1rOHK3IjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA3MzAyOA==", "bodyText": "please, define lenient at mock definition via Mock annotation", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481073028", "createdAt": "2020-09-01T11:39:16Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/test/java/org/vividus/ui/action/SearchActionsTests.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.action;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.lenient;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.WebElement;\n+import org.vividus.testdouble.TestElementFilter;\n+import org.vividus.testdouble.TestElementSearch;\n+import org.vividus.testdouble.TestLocatorType;\n+import org.vividus.ui.action.search.ElementActionService;\n+import org.vividus.ui.action.search.IElementFilterAction;\n+import org.vividus.ui.action.search.Locator;\n+import org.vividus.ui.action.search.SearchParameters;\n+import org.vividus.ui.context.IUiContext;\n+\n+@ExtendWith(MockitoExtension.class)\n+class SearchActionsTests\n+{\n+    private static final String VALUE = \"value\";\n+\n+    @Mock\n+    private WebElement webElement;\n+\n+    @Mock\n+    private SearchContext searchContext;\n+\n+    @Mock\n+    private TestElementSearch testSearch;\n+\n+    @Mock\n+    private TestElementFilter testFilter;\n+\n+    @Mock\n+    private IUiContext uiContext;\n+\n+    @Mock\n+    private ElementActionService elementActionService;\n+\n+    @InjectMocks\n+    private SearchActions searchActions;\n+\n+    @BeforeEach\n+    void init()\n+    {\n+        lenient().when(elementActionService.find(TestLocatorType.SEARCH))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1MTExNg==", "bodyText": "there are other elementActionService mocked invocations that are not expected to be lenient", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481151116", "createdAt": "2020-09-01T13:48:33Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/test/java/org/vividus/ui/action/SearchActionsTests.java", "diffHunk": "@@ -0,0 +1,178 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.action;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.lenient;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openqa.selenium.SearchContext;\n+import org.openqa.selenium.WebElement;\n+import org.vividus.testdouble.TestElementFilter;\n+import org.vividus.testdouble.TestElementSearch;\n+import org.vividus.testdouble.TestLocatorType;\n+import org.vividus.ui.action.search.ElementActionService;\n+import org.vividus.ui.action.search.IElementFilterAction;\n+import org.vividus.ui.action.search.Locator;\n+import org.vividus.ui.action.search.SearchParameters;\n+import org.vividus.ui.context.IUiContext;\n+\n+@ExtendWith(MockitoExtension.class)\n+class SearchActionsTests\n+{\n+    private static final String VALUE = \"value\";\n+\n+    @Mock\n+    private WebElement webElement;\n+\n+    @Mock\n+    private SearchContext searchContext;\n+\n+    @Mock\n+    private TestElementSearch testSearch;\n+\n+    @Mock\n+    private TestElementFilter testFilter;\n+\n+    @Mock\n+    private IUiContext uiContext;\n+\n+    @Mock\n+    private ElementActionService elementActionService;\n+\n+    @InjectMocks\n+    private SearchActions searchActions;\n+\n+    @BeforeEach\n+    void init()\n+    {\n+        lenient().when(elementActionService.find(TestLocatorType.SEARCH))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA3MzAyOA=="}, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODAwMTg5OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-applitools/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTo0Mjo1MFrOHKyelg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo0NToyOVrOHK3Aeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA3NDgzOA==", "bodyText": "is plugin-web-app still required?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481074838", "createdAt": "2020-09-01T11:42:50Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-applitools/build.gradle", "diffHunk": "@@ -5,6 +5,7 @@ dependencies {\n     implementation project(':vividus-extension-visual-testing')\n     implementation project(':vividus-http-client')\n     implementation project(':vividus-plugin-web-app')\n+    implementation project(':vividus-extension-selenium')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0OTA1MA==", "bodyText": "plugin-web-app contains logic responsible for screenshots;\nadjusted alphabetical order;", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481149050", "createdAt": "2020-09-01T13:45:29Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-applitools/build.gradle", "diffHunk": "@@ -5,6 +5,7 @@ dependencies {\n     implementation project(':vividus-extension-visual-testing')\n     implementation project(':vividus-http-client')\n     implementation project(':vividus-plugin-web-app')\n+    implementation project(':vividus-extension-selenium')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA3NDgzOA=="}, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODAwNTM5OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-visual/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTo0NDowMFrOHKygsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo0NTozN1rOHK3A4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA3NTM3OA==", "bodyText": "Do we still need web-app plugin here?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481075378", "createdAt": "2020-09-01T11:44:00Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-visual/build.gradle", "diffHunk": "@@ -3,6 +3,7 @@ project.description = 'Vividus plugin for Visual Testing'\n dependencies {\n     implementation project(':vividus-bdd-engine')\n     implementation project(':vividus-plugin-web-app')\n+    implementation project(':vividus-extension-selenium')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0OTE1Mw==", "bodyText": "plugin-web-app contains logic responsible for screenshots;\nadjusted alphabetical order;", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481149153", "createdAt": "2020-09-01T13:45:37Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-visual/build.gradle", "diffHunk": "@@ -3,6 +3,7 @@ project.description = 'Vividus plugin for Visual Testing'\n dependencies {\n     implementation project(':vividus-bdd-engine')\n     implementation project(':vividus-plugin-web-app')\n+    implementation project(':vividus-extension-selenium')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA3NTM3OA=="}, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODAyNTU0OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTo0OTo1N1rOHKysnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo0ODowMlrOHK3HRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA3ODQzMQ==", "bodyText": "Please update javadoc", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481078431", "createdAt": "2020-09-01T11:49:57Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java", "diffHunk": "@@ -90,11 +90,11 @@ public void executeActionsSequence(List<Action> actions)\n             }\n             else\n             {\n-                Optional<SearchAttributes> searchAttributes = action.getSearchAttributes();\n+                Optional<Locator> locator = action.getSearchAttributes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1MDc5MQ==", "bodyText": "this step is coupled to searchAttributes column name, I think we should create issue to handle this case safely", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481150791", "createdAt": "2020-09-01T13:48:02Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/ActionSteps.java", "diffHunk": "@@ -90,11 +90,11 @@ public void executeActionsSequence(List<Action> actions)\n             }\n             else\n             {\n-                Optional<SearchAttributes> searchAttributes = action.getSearchAttributes();\n+                Optional<Locator> locator = action.getSearchAttributes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA3ODQzMQ=="}, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODA2MTYwOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/WebElementsSteps.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjowMDoxOFrOHKzCQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjowMDoxOFrOHKzCQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA4Mzk2OA==", "bodyText": "attributes -> locator", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481083968", "createdAt": "2020-09-01T12:00:18Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/WebElementsSteps.java", "diffHunk": "@@ -116,7 +116,7 @@ public void ifTextExists(String text)\n \n             if (!assertCondition)\n             {\n-                SearchAttributes attributes = new SearchAttributes(ActionAttributeType.CASE_SENSITIVE_TEXT, text);\n+                Locator attributes = new Locator(WebLocatorType.CASE_SENSITIVE_TEXT, text);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODA2NDI2OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/Action.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjowMDo1OVrOHKzD3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjowMDo1OVrOHKzD3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA4NDM4MQ==", "bodyText": "locator", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481084381", "createdAt": "2020-09-01T12:00:59Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/model/Action.java", "diffHunk": "@@ -39,12 +39,12 @@ public void setType(ActionType type)\n         this.type = type;\n     }\n \n-    public Optional<SearchAttributes> getSearchAttributes()\n+    public Optional<Locator> getSearchAttributes()\n     {\n         return searchAttributes;\n     }\n \n-    public void setSearchAttributes(Optional<SearchAttributes> searchAttributes)\n+    public void setSearchAttributes(Optional<Locator> searchAttributes)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODA5ODkwOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/search/AbstractStateFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjoxMDo1NlrOHKzYhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjoxMDo1NlrOHKzYhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA4OTY3MQ==", "bodyText": "elementActionType -> locatorType", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481089671", "createdAt": "2020-09-01T12:10:56Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/search/AbstractStateFilter.java", "diffHunk": "@@ -23,16 +23,18 @@\n import org.openqa.selenium.WebElement;\n import org.openqa.selenium.support.ui.ExpectedCondition;\n import org.vividus.selenium.IWebDriverProvider;\n-import org.vividus.ui.web.IState;\n+import org.vividus.ui.IState;\n+import org.vividus.ui.action.search.LocatorType;\n \n public abstract class AbstractStateFilter<T extends Enum<T> & IState> extends AbstractElementFilterAction\n {\n     private final Class<T> enumType;\n     @Inject private IWebDriverProvider webDriverProvider;\n \n     @SuppressWarnings(\"unchecked\")\n-    public AbstractStateFilter()\n+    public AbstractStateFilter(LocatorType elementActionType)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODExMzc1OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/search/WebLocatorType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjoxNToyN1rOHKzhfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjoxNToyN1rOHKzhfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA5MTk2NA==", "bodyText": "attributeName -> locatorName ?", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481091964", "createdAt": "2020-09-01T12:15:27Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/ui/web/action/search/WebLocatorType.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.web.action.search;\n+\n+import java.util.Set;\n+\n+import org.vividus.ui.action.search.IElementAction;\n+import org.vividus.ui.action.search.LocatorType;\n+\n+public enum WebLocatorType implements LocatorType\n+{\n+    LINK_TEXT(\"Link text\", LinkTextSearch.class),\n+    LINK_URL(\"URL\", LinkUrlSearch.class),\n+    LINK_URL_PART(\"URL part\", LinkUrlPartSearch.class),\n+    CASE_SENSITIVE_TEXT(\"Case sensitive text\", CaseSensitiveTextSearch.class),\n+    CASE_INSENSITIVE_TEXT(\"Case insensitive text\", CaseInsensitiveTextSearch.class),\n+    TOOLTIP(\"Tooltip\", TooltipFilter.class),\n+    CSS_SELECTOR(\"CSS selector\", BySeleniumLocatorSearch.class),\n+    IMAGE_SRC(\"Image source\", ImageWithSourceSearch.class),\n+    IMAGE_SRC_PART(\"Image source part\", ImageWithSourcePartFilter.class),\n+    BUTTON_NAME(\"Button name\", ButtonNameSearch.class),\n+    FIELD_NAME(\"Field name\", FieldNameSearch.class),\n+    TEXT_PART(\"Text part\", TextPartFilter.class),\n+    PLACEHOLDER(\"Placeholder\", PlaceholderFilter.class),\n+    STATE(\"State\", StateFilter.class),\n+    DROP_DOWN_STATE(\"Drop down state\", DropDownStateFilter.class),\n+    VALIDATION_ICON_SOURCE(\"Validation icon source\", ValidationIconSourceFilter.class),\n+    RELATIVE_TO_PARENT_WIDTH(\"Relative to parent width\", RelativeToParentWidthFilter.class),\n+    CLASS_ATTRIBUTE_PART(\"Attribute class part\", ClassAttributePartFilter.class),\n+    CHECKBOX_NAME(\"Checkbox name\", CheckboxNameSearch.class),\n+    FIELD_TEXT(\"Field text\", FieldTextFilter.class),\n+    FIELD_TEXT_PART(\"Field text part\", FieldTextPartFilter.class),\n+    DROP_DOWN_TEXT(\"Drop down text\", DropDownTextFilter.class),\n+    ELEMENT_NAME(\"Element name\", ElementNameSearch.class),\n+    NAME(\"Name\", ElementNameSearch.class),\n+    PARTIAL_LINK_TEXT(\"Partial link text\", PartialLinkTextSearch.class),\n+    CLASS_NAME(\"Class name\", BySeleniumLocatorSearch.class),\n+    XPATH(\"XPath\", XpathSearch.class),\n+    ID(\"Id\", BySeleniumLocatorSearch.class),\n+    TAG_NAME(\"Tag name\", BySeleniumLocatorSearch.class);\n+\n+    private final String attributeName;\n+    private final Class<? extends IElementAction> actionClass;\n+    private Set<LocatorType> competingKeys;\n+\n+    WebLocatorType(String attributeName, Class<? extends IElementAction> actionClass)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODEzMDY4OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/test/java/org/vividus/bdd/steps/ui/web/ElementStepsTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjoyMDoyM1rOHKzr8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjoyMDoyM1rOHKzr8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA5NDY0MA==", "bodyText": "elementAttributes -> elementLocator", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481094640", "createdAt": "2020-09-01T12:20:23Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-web-app/src/test/java/org/vividus/bdd/steps/ui/web/ElementStepsTests.java", "diffHunk": "@@ -246,18 +246,18 @@ public void testThePageContainsQuantityElements()\n     {\n         ComparisonRule comparisonRule = ComparisonRule.EQUAL_TO;\n         int number = 1;\n-        SearchAttributes searchAttributes = new SearchAttributes(ActionAttributeType.XPATH, XPATH);\n-        elementSteps.thePageContainsQuantityElements(searchAttributes, comparisonRule, number);\n+        Locator locator = new Locator(WebLocatorType.XPATH, XPATH);\n+        elementSteps.thePageContainsQuantityElements(locator, comparisonRule, number);\n         verify(baseValidations).assertIfNumberOfElementsFound(THE_NUMBER_OF_FOUND_ELEMENTS,\n-                searchAttributes, number, comparisonRule);\n+                locator, number, comparisonRule);\n     }\n \n     @Test\n     public void doesEachElementByLocatorHaveChildWithLocatorSuccess()\n     {\n-        SearchAttributes elementAttributes = new SearchAttributes(ActionAttributeType.XPATH,\n+        Locator elementAttributes = new Locator(WebLocatorType.XPATH,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 157}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODE1MTg3OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/test/java/org/vividus/bdd/steps/ui/web/LinkStepsTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjoyNjowOFrOHKz4dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjoyNjoyNVrOHKz5HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA5Nzg0NQ==", "bodyText": "locator", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481097845", "createdAt": "2020-09-01T12:26:08Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-web-app/src/test/java/org/vividus/bdd/steps/ui/web/LinkStepsTests.java", "diffHunk": "@@ -45,8 +45,8 @@ void testIfLinkItemsWithTextAndLink()\n     {\n         ExamplesTable expectedLinkItems = new ExamplesTable(\"|text|link|\\n|Home|/|\\n\");\n         webUiLinkSteps.ifLinkItemsWithTextAndLink(expectedLinkItems);\n-        SearchAttributes attributes = new SearchAttributes(ActionAttributeType.LINK_TEXT, HOME).addFilter(\n-                ActionAttributeType.LINK_URL, SLASH);\n+        Locator attributes = new Locator(WebLocatorType.LINK_TEXT, HOME).addFilter(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA5ODAxMw==", "bodyText": "Here and at line 58", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481098013", "createdAt": "2020-09-01T12:26:25Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-web-app/src/test/java/org/vividus/bdd/steps/ui/web/LinkStepsTests.java", "diffHunk": "@@ -45,8 +45,8 @@ void testIfLinkItemsWithTextAndLink()\n     {\n         ExamplesTable expectedLinkItems = new ExamplesTable(\"|text|link|\\n|Home|/|\\n\");\n         webUiLinkSteps.ifLinkItemsWithTextAndLink(expectedLinkItems);\n-        SearchAttributes attributes = new SearchAttributes(ActionAttributeType.LINK_TEXT, HOME).addFilter(\n-                ActionAttributeType.LINK_URL, SLASH);\n+        Locator attributes = new Locator(WebLocatorType.LINK_TEXT, HOME).addFilter(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA5Nzg0NQ=="}, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODE2MTU2OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/test/java/org/vividus/bdd/steps/ui/web/WaitStepsTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjoyODo0N1rOHKz-gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjoyODo0N1rOHKz-gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA5OTM5NA==", "bodyText": "attributes -> locator everywhere", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481099394", "createdAt": "2020-09-01T12:28:47Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-web-app/src/test/java/org/vividus/bdd/steps/ui/web/WaitStepsTests.java", "diffHunk": "@@ -119,9 +119,9 @@ void testElementByIdDisappears()\n     @Test\n     void testElementByNameDisappearsWithTimeout()\n     {\n-        when(webUiContext.getSearchContext()).thenReturn(webElement);\n+        when(uiContext.getSearchContext()).thenReturn(webElement);\n         WaitResult<Boolean> waitResult = mock(WaitResult.class);\n-        SearchAttributes attributes = new SearchAttributes(ActionAttributeType.ELEMENT_NAME, NAME);\n+        Locator attributes = new Locator(WebLocatorType.ELEMENT_NAME, NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODMwOTAyOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/LocatorTypeTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzowNjowNlrOHK1YCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzowNjowNlrOHK1YCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEyMjMxNA==", "bodyText": "getLocatorClass ? :)", "url": "https://github.com/vividus-framework/vividus/pull/840#discussion_r481122314", "createdAt": "2020-09-01T13:06:06Z", "author": {"login": "ikalinin1"}, "path": "vividus-plugin-web-app/src/test/java/org/vividus/ui/web/action/search/LocatorTypeTests.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.ui.web.action.search;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.empty;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.params.provider.Arguments.arguments;\n+\n+import java.util.stream.Stream;\n+\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+class LocatorTypeTests\n+{\n+    static Stream<Arguments> dataSet()\n+    {\n+        return Stream.of(\n+            arguments(WebLocatorType.XPATH, \"XPath\", XpathSearch.class),\n+            arguments(WebLocatorType.ID, \"Id\", BySeleniumLocatorSearch.class),\n+            arguments(WebLocatorType.TAG_NAME, \"Tag name\", BySeleniumLocatorSearch.class)\n+        );\n+    }\n+\n+    @MethodSource(\"dataSet\")\n+    @ParameterizedTest\n+    void testWebAttributeType(WebLocatorType type, String name, Class<?> actionClass)\n+    {\n+        assertEquals(type.getAttributeName(), name);\n+        assertEquals(type.getActionClass(), actionClass);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19c8603f6a8fd336fc59717bcfec491ea6fa5e05"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 213, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}