{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3ODM1MDU4", "number": 815, "title": "Introduce set of expressions for URI parts encoding", "bodyText": "", "createdAt": "2020-08-14T07:59:36Z", "url": "https://github.com/vividus-framework/vividus/pull/815", "merged": true, "mergeCommit": {"oid": "ff144974c392be78c1e71727b845dbc6360b6754"}, "closed": true, "closedAt": "2020-08-14T20:29:02Z", "author": {"login": "valfirst"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-wFOMABqjM2NTUyMjk2OTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-58NAABqjM2NTc0NzM3Njg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5dc59e248cc4b0b36aa21a2886a352aa7447051", "author": {"user": {"login": "valfirst", "name": "Valery Yatsynovich"}}, "url": "https://github.com/vividus-framework/vividus/commit/e5dc59e248cc4b0b36aa21a2886a352aa7447051", "committedDate": "2020-08-14T07:56:29Z", "message": "Introduce set of expressions for URI parts encoding"}, "afterCommit": {"oid": "c4b3fe559b0afbafc847bfc18fd5e4f129046cc4", "author": {"user": {"login": "valfirst", "name": "Valery Yatsynovich"}}, "url": "https://github.com/vividus-framework/vividus/commit/c4b3fe559b0afbafc847bfc18fd5e4f129046cc4", "committedDate": "2020-08-14T08:10:19Z", "message": "Introduce set of expressions for URI parts encoding"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4b3fe559b0afbafc847bfc18fd5e4f129046cc4", "author": {"user": {"login": "valfirst", "name": "Valery Yatsynovich"}}, "url": "https://github.com/vividus-framework/vividus/commit/c4b3fe559b0afbafc847bfc18fd5e4f129046cc4", "committedDate": "2020-08-14T08:10:19Z", "message": "Introduce set of expressions for URI parts encoding"}, "afterCommit": {"oid": "ecd1d921d70a9f05cacae035183ac75eb5f17fcb", "author": {"user": {"login": "valfirst", "name": "Valery Yatsynovich"}}, "url": "https://github.com/vividus-framework/vividus/commit/ecd1d921d70a9f05cacae035183ac75eb5f17fcb", "committedDate": "2020-08-14T08:12:17Z", "message": "Introduce set of expressions for URI parts encoding"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MzkwNzc0", "url": "https://github.com/vividus-framework/vividus/pull/815#pullrequestreview-467390774", "createdAt": "2020-08-14T08:18:47Z", "commit": {"oid": "ecd1d921d70a9f05cacae035183ac75eb5f17fcb"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODoxODo0N1rOHAry0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODozMzoxOFrOHAsPaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ3OTU2OA==", "bodyText": "Users will try to use it as is #{encideUriXyz()} :)", "url": "https://github.com/vividus-framework/vividus/pull/815#discussion_r470479568", "createdAt": "2020-08-14T08:18:47Z", "author": {"login": "ikalinin1"}, "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/expression/EncodeUrlExpressionProcessorTests.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.expression;\n+\n+import static com.github.valfirst.slf4jtest.LoggingEvent.warn;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import com.github.valfirst.slf4jtest.TestLogger;\n+import com.github.valfirst.slf4jtest.TestLoggerFactory;\n+import com.github.valfirst.slf4jtest.TestLoggerFactoryExtension;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.CsvSource;\n+\n+@ExtendWith(TestLoggerFactoryExtension.class)\n+class EncodeUrlExpressionProcessorTests\n+{\n+    private final IExpressionProcessor processor = new EncodeUrlExpressionProcessor();\n+\n+    private final TestLogger logger = TestLoggerFactory.getTestLogger(EncodeUrlExpressionProcessor.class);\n+\n+    @Test\n+    void testExecuteWithUnsupportedException()\n+    {\n+        assertEquals(Optional.empty(), processor.execute(\"encodeUri(value)\"));\n+    }\n+\n+    @ParameterizedTest(name = \"{index}: for expression \\\"{0}\\\", result is \\\"{1}\\\"\")\n+    @CsvSource({\n+        \"encodeUrl(/wiki/w3schools), %2Fwiki%2Fw3schools\",\n+        \"encodeUrl(/wls/recipes#!/), %2Fwls%2Frecipes%23%21%2F\"\n+    })\n+    void testExecute(String expression, String expected)\n+    {\n+        assertEquals(Optional.of(expected), processor.execute(expression));\n+        assertThat(logger.getLoggingEvents(), equalTo(List.of(warn(\n+                \"#{encodeUrl(..)} expression is deprecated, use set of #{encodeUriXyz(..)} expressions instead\"))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecd1d921d70a9f05cacae035183ac75eb5f17fcb"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ4MTU0Mg==", "bodyText": "Can we just refactor this expression to delegate proper part encoding to a valid method?", "url": "https://github.com/vividus-framework/vividus/pull/815#discussion_r470481542", "createdAt": "2020-08-14T08:22:58Z", "author": {"login": "ikalinin1"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/expression/EncodeUrlExpressionProcessor.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.bdd.expression;\n+\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n+import java.net.URLEncoder;\n+import java.util.Optional;\n+\n+import javax.inject.Named;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * @deprecated use set of #{encodeUriXyz(..)} expressions instead\n+ */\n+@Named\n+@Deprecated(forRemoval = true, since = \"0.2.7\")\n+public class EncodeUrlExpressionProcessor extends UnaryExpressionProcessor\n+{\n+    private static final Logger LOGGER = LoggerFactory.getLogger(EncodeUrlExpressionProcessor.class);\n+\n+    public EncodeUrlExpressionProcessor()\n+    {\n+        super(\"encodeUrl\", input -> URLEncoder.encode(input, UTF_8));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecd1d921d70a9f05cacae035183ac75eb5f17fcb"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ4MzM2OQ==", "bodyText": "|Expression\n|Result", "url": "https://github.com/vividus-framework/vividus/pull/815#discussion_r470483369", "createdAt": "2020-08-14T08:26:45Z", "author": {"login": "ikalinin1"}, "path": "docs/modules/plugins/pages/plugin-rest-api.adoc", "diffHunk": "@@ -48,3 +48,69 @@ Then server `$hostname` supports secure protocols that $rule `$protocols`\n Scenario: Verify that the server supports TLSv1.3 and TLSv1.2 protocols\n Then server `vividus-test-site.herokuapp.com` supports secure protocols that contain `TLSv1.3,TLSv1.2`\n ----\n+\n+\n+== Expressions\n+\n+\n+=== URI Encoding\n+\n+`${encodeUriXyz(..)}` is a family of expressions that encode specific URI components (e.g. path, query)\n+by percent encoding illegal characters, which includes non-US-ASCII characters, and also characters that\n+are otherwise illegal within the given URI component type, as defined in\n+https://www.ietf.org/rfc/rfc3986.txt[RFC 3986].\n+\n+[cols=\"3,2\", options=\"header\"]\n+|===\n+|Syntax\n+|Description\n+\n+|`#{encodeUriUserInfo($userInfo)}`\n+|Encode the given URI user info\n+\n+|`#{encodeUriHost($host)}`\n+|Encode the given URI host\n+\n+|`#{encodeUriPath($path)}`\n+|Encode the given URI path\n+\n+|`#{encodeUriPathSegment($segment)}`\n+|Encode the given URI path segment\n+\n+|`#{encodeUriQuery($query)}`\n+|Encode the given URI query\n+\n+|`#{encodeUriQueryParameter($queryParameter)}`\n+|Encode the given URI query parameter\n+\n+|`#{encodeUriFragment($fragment)}`\n+|Encode the given URI fragment\n+|===\n+\n+==== Examples\n+\n+|===\n+|Expression |Result", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecd1d921d70a9f05cacae035183ac75eb5f17fcb"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ4Njg4OQ==", "bodyText": "I propose to use URI the same as for expression.", "url": "https://github.com/vividus-framework/vividus/pull/815#discussion_r470486889", "createdAt": "2020-08-14T08:33:18Z", "author": {"login": "ikalinin1"}, "path": "vividus-tests/src/main/resources/story/integration/HTTP.story", "diffHunk": "@@ -22,12 +22,12 @@ When I send HTTP GET to the relative URL '/anything/path-with-&-ampersand'\n Then the response code is equal to '200'\n Then a JSON element by the JSON path '$.url' is equal to '${http-endpoint}anything/path-with-&-ampersand'\n \n-Scenario: Verify handling of ampersand character in URL query\n-When I send HTTP GET to the relative URL '/get?key=#{encodeUrl(a&b)}'\n+Scenario: Verify handling of ampersand and space characters in URL query parameter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecd1d921d70a9f05cacae035183ac75eb5f17fcb"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecd1d921d70a9f05cacae035183ac75eb5f17fcb", "author": {"user": {"login": "valfirst", "name": "Valery Yatsynovich"}}, "url": "https://github.com/vividus-framework/vividus/commit/ecd1d921d70a9f05cacae035183ac75eb5f17fcb", "committedDate": "2020-08-14T08:12:17Z", "message": "Introduce set of expressions for URI parts encoding"}, "afterCommit": {"oid": "df04a7be419ab1efeba61ef999f7339c8dc65c95", "author": {"user": {"login": "valfirst", "name": "Valery Yatsynovich"}}, "url": "https://github.com/vividus-framework/vividus/commit/df04a7be419ab1efeba61ef999f7339c8dc65c95", "committedDate": "2020-08-14T08:48:27Z", "message": "Introduce set of expressions for URI parts encoding"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df04a7be419ab1efeba61ef999f7339c8dc65c95", "author": {"user": {"login": "valfirst", "name": "Valery Yatsynovich"}}, "url": "https://github.com/vividus-framework/vividus/commit/df04a7be419ab1efeba61ef999f7339c8dc65c95", "committedDate": "2020-08-14T08:48:27Z", "message": "Introduce set of expressions for URI parts encoding"}, "afterCommit": {"oid": "a5bfdb2e260d77f99bb731fc2c621972b07068f4", "author": {"user": {"login": "valfirst", "name": "Valery Yatsynovich"}}, "url": "https://github.com/vividus-framework/vividus/commit/a5bfdb2e260d77f99bb731fc2c621972b07068f4", "committedDate": "2020-08-14T11:52:48Z", "message": "Introduce set of expressions for URI parts encoding"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NzA2NjAz", "url": "https://github.com/vividus-framework/vividus/pull/815#pullrequestreview-467706603", "createdAt": "2020-08-14T16:21:58Z", "commit": {"oid": "a5bfdb2e260d77f99bb731fc2c621972b07068f4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab08fa8216ea257424a50e1d1e3eca5eae541af7", "author": {"user": {"login": "valfirst", "name": "Valery Yatsynovich"}}, "url": "https://github.com/vividus-framework/vividus/commit/ab08fa8216ea257424a50e1d1e3eca5eae541af7", "committedDate": "2020-08-14T19:39:32Z", "message": "Introduce set of expressions for URI parts encoding"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a5bfdb2e260d77f99bb731fc2c621972b07068f4", "author": {"user": {"login": "valfirst", "name": "Valery Yatsynovich"}}, "url": "https://github.com/vividus-framework/vividus/commit/a5bfdb2e260d77f99bb731fc2c621972b07068f4", "committedDate": "2020-08-14T11:52:48Z", "message": "Introduce set of expressions for URI parts encoding"}, "afterCommit": {"oid": "ab08fa8216ea257424a50e1d1e3eca5eae541af7", "author": {"user": {"login": "valfirst", "name": "Valery Yatsynovich"}}, "url": "https://github.com/vividus-framework/vividus/commit/ab08fa8216ea257424a50e1d1e3eca5eae541af7", "committedDate": "2020-08-14T19:39:32Z", "message": "Introduce set of expressions for URI parts encoding"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 31, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}