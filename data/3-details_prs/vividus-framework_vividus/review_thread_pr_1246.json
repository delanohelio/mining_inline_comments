{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNjcxMjM4", "number": 1246, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNzo0MzozNlrOFGkXPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzo0NDowNFrOFHMGhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDMxNTQ5OnYy", "diffSide": "LEFT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/SetContextSteps.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNzo0MzozNlrOIHof8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNzo0MzozNlrOIHof8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg3NDQ4Mg==", "bodyText": "known issues might be broken here, I propose to keep the commit, but postpone it till 0.3.0", "url": "https://github.com/vividus-framework/vividus/pull/1246#discussion_r544874482", "createdAt": "2020-12-17T07:43:36Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/SetContextSteps.java", "diffHunk": "@@ -66,66 +61,6 @@ public SetContextSteps(IUiContext uiContext, IWebDriverProvider webDriverProvide\n         this.baseValidations = baseValidations;\n     }\n \n-    /**\n-     * Set the context for further localization of elements to an <b>element</b> specified by the <b>name</b> and\n-     * <b>state</b>\n-     * @param name Any attribute or text value of the element\n-     * @param state A state value of the element\n-     * (<i>Possible values:</i> <b>ENABLED, DISABLED, SELECTED, NOT_SELECTED, VISIBLE, NOT_VISIBLE</b>)\n-    */\n-    @When(\"I change context to a [$state] element with the name '$name'\")\n-    public void changeContextToElementWithName(State state, String name)\n-    {\n-        resetContext();\n-        WebElement element = baseValidations.assertIfElementExists(\n-                String.format(\"An element with the name '%1$s'\", name),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c77b714fb3937ee2dd596a079388dd10eda65bc"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDMxNTc5OnYy", "diffSide": "LEFT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/SetContextSteps.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNzo0Mzo0MlrOIHogIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNzo0Mzo0MlrOIHogIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg3NDUzMA==", "bodyText": "known issues might be broken here, I propose to keep the commit, but postpone it till 0.3.0", "url": "https://github.com/vividus-framework/vividus/pull/1246#discussion_r544874530", "createdAt": "2020-12-17T07:43:42Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/SetContextSteps.java", "diffHunk": "@@ -66,66 +61,6 @@ public SetContextSteps(IUiContext uiContext, IWebDriverProvider webDriverProvide\n         this.baseValidations = baseValidations;\n     }\n \n-    /**\n-     * Set the context for further localization of elements to an <b>element</b> specified by the <b>name</b> and\n-     * <b>state</b>\n-     * @param name Any attribute or text value of the element\n-     * @param state A state value of the element\n-     * (<i>Possible values:</i> <b>ENABLED, DISABLED, SELECTED, NOT_SELECTED, VISIBLE, NOT_VISIBLE</b>)\n-    */\n-    @When(\"I change context to a [$state] element with the name '$name'\")\n-    public void changeContextToElementWithName(State state, String name)\n-    {\n-        resetContext();\n-        WebElement element = baseValidations.assertIfElementExists(\n-                String.format(\"An element with the name '%1$s'\", name),\n-                new Locator(WebLocatorType.ELEMENT_NAME, name)\n-                        .addFilter(WebLocatorType.STATE, state.toString()));\n-        uiContext.putSearchContext(element, () -> changeContextToElementWithName(state, name));\n-    }\n-\n-    /**\n-     * Set the context for further localization of elements to an <b>element</b>\n-     * with the specified <b>attribute</b>\n-     * @param attributeType A type of the element's attribute\n-     * @param attributeValue A value of the element's attribute\n-    */\n-    @When(\"I change context to an element with the attribute '$attributeType'='$attributeValue'\")\n-    public void changeContextToElementWithAttribute(String attributeType, String attributeValue)\n-    {\n-        resetContext();\n-\n-        WebElement element = baseValidations.assertIfElementExists(\n-                String.format(AN_ELEMENT_WITH_THE_ATTRIBUTE, attributeType, attributeValue),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c77b714fb3937ee2dd596a079388dd10eda65bc"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDMxNjU0OnYy", "diffSide": "LEFT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/SetContextSteps.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNzo0Mzo1M1rOIHogiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwNzo0Mzo1M1rOIHogiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg3NDYzNQ==", "bodyText": "known issues might be broken here, I propose to keep the commit, but postpone it till 0.3.0", "url": "https://github.com/vividus-framework/vividus/pull/1246#discussion_r544874635", "createdAt": "2020-12-17T07:43:53Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/SetContextSteps.java", "diffHunk": "@@ -66,66 +61,6 @@ public SetContextSteps(IUiContext uiContext, IWebDriverProvider webDriverProvide\n         this.baseValidations = baseValidations;\n     }\n \n-    /**\n-     * Set the context for further localization of elements to an <b>element</b> specified by the <b>name</b> and\n-     * <b>state</b>\n-     * @param name Any attribute or text value of the element\n-     * @param state A state value of the element\n-     * (<i>Possible values:</i> <b>ENABLED, DISABLED, SELECTED, NOT_SELECTED, VISIBLE, NOT_VISIBLE</b>)\n-    */\n-    @When(\"I change context to a [$state] element with the name '$name'\")\n-    public void changeContextToElementWithName(State state, String name)\n-    {\n-        resetContext();\n-        WebElement element = baseValidations.assertIfElementExists(\n-                String.format(\"An element with the name '%1$s'\", name),\n-                new Locator(WebLocatorType.ELEMENT_NAME, name)\n-                        .addFilter(WebLocatorType.STATE, state.toString()));\n-        uiContext.putSearchContext(element, () -> changeContextToElementWithName(state, name));\n-    }\n-\n-    /**\n-     * Set the context for further localization of elements to an <b>element</b>\n-     * with the specified <b>attribute</b>\n-     * @param attributeType A type of the element's attribute\n-     * @param attributeValue A value of the element's attribute\n-    */\n-    @When(\"I change context to an element with the attribute '$attributeType'='$attributeValue'\")\n-    public void changeContextToElementWithAttribute(String attributeType, String attributeValue)\n-    {\n-        resetContext();\n-\n-        WebElement element = baseValidations.assertIfElementExists(\n-                String.format(AN_ELEMENT_WITH_THE_ATTRIBUTE, attributeType, attributeValue),\n-                new Locator(WebLocatorType.XPATH,\n-                        LocatorUtil.getXPathByAttribute(attributeType, attributeValue)));\n-        uiContext.putSearchContext(element, () -> changeContextToElementWithAttribute(attributeType,\n-                attributeValue));\n-    }\n-\n-    /**\n-     * Set the context for further localization of elements to an <b>element</b>\n-     * with the specified <b>attribute</b> and <b>state</b>\n-     * @param attributeType A type of the element's attribute\n-     * @param attributeValue A value of the element's attribute\n-     * @param state A state value of the element\n-     * (<i>Possible values:</i> <b>ENABLED, DISABLED, SELECTED, NOT_SELECTED, VISIBLE, NOT_VISIBLE</b>)\n-    */\n-    @When(\"I change context to a [$state] element with the attribute '$attributeType'='$attributeValue'\")\n-    public void changeContextToStateElementWithAttribute(State state, String attributeType, String attributeValue)\n-    {\n-        resetContext();\n-        WebElement element = baseValidations.assertIfElementExists(String.format(AN_ELEMENT_WITH_THE_ATTRIBUTE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c77b714fb3937ee2dd596a079388dd10eda65bc"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDgyNjI4OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/WebElementsSteps.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzo0NDowNFrOIIjXEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzo0NDowNFrOIIjXEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgzODg2NA==", "bodyText": "isWebElement -> webElement :)", "url": "https://github.com/vividus-framework/vividus/pull/1246#discussion_r545838864", "createdAt": "2020-12-18T13:44:04Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/bdd/steps/ui/web/WebElementsSteps.java", "diffHunk": "@@ -68,48 +68,45 @@ public void ifTextMatchesRegex(String regex)\n         }\n         if (!actualText.isEmpty())\n         {\n-            Pattern pattern = Pattern.compile(regex);\n-            assertCondition = pattern.matcher(actualText).find();\n-            if (!assertCondition && isWebElement)\n-            {\n-                String pseudoElementContent = webElementActions\n-                        .getPseudoElementContent((WebElement) getSearchContext());\n-                if (!pseudoElementContent.isEmpty())\n-                {\n-                    assertCondition = pattern.matcher(pseudoElementContent).find();\n-                }\n-            }\n+            assertCondition = verifyText(regex, actualText, isWebElement);\n         }\n         softAssert.assertTrue(\"The text in search context matches regular expression \" + regex,\n                 assertCondition);\n     }\n \n+    private boolean verifyText(String regex, String actualText, boolean isWebElement)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "881de97b853f0d9361408780f72f4f68ec702916"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4997, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}