{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2OTY5NTI0", "number": 876, "title": "Add new step for waiting for presence of element by JSON path using polling interval", "bodyText": "\u2026erval  retrying retryTimes times stepsToExecute", "createdAt": "2020-09-01T10:04:50Z", "url": "https://github.com/vividus-framework/vividus/pull/876", "merged": true, "mergeCommit": {"oid": "52fb90eb3133edcceb8660ca8d2f91f19aeb844a"}, "closed": true, "closedAt": "2020-09-07T08:19:33Z", "author": {"login": "abudevich"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEmZE_gFqTQ3OTY3NTY1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGeZSMgFqTQ4MzMzODk5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5Njc1NjU4", "url": "https://github.com/vividus-framework/vividus/pull/876#pullrequestreview-479675658", "createdAt": "2020-09-01T12:10:26Z", "commit": {"oid": "6253c88b3531a6f8627fa02c4280ffc8e3d00ca3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjoxMDoyNlrOHKzXlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMjoxNjozM1rOHKzj0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA4OTQzMA==", "bodyText": "I think it makes sense to have 2 implementations of waiter:\n\nduration based\nretry times based\n\nin this case logic won't be mixed up", "url": "https://github.com/vividus-framework/vividus/pull/876#discussion_r481089430", "createdAt": "2020-09-01T12:10:26Z", "author": {"login": "valfirst"}, "path": "vividus-util/src/main/java/org/vividus/util/wait/Waiter.java", "diffHunk": "@@ -28,24 +29,35 @@\n {\n     private final long durationInMillis;\n     private final long pollingTimeoutMillis;\n+    private final int pollingRetries;\n \n     public Waiter(WaitMode waitMode)\n     {\n         durationInMillis = waitMode.getDuration().toMillis();\n         pollingTimeoutMillis = waitMode.calculatePollingTimeout(TimeUnit.MILLISECONDS);\n+        pollingRetries = waitMode.getRetryTimes();\n     }\n \n-    public <T, E extends Exception> T wait(FailableSupplier<T, E> valueProvider, Predicate<T> stopCondition) throws E\n+    public Waiter(Duration pollingTimeoutMillis, int pollingRetries)\n     {\n-        long endTime = System.currentTimeMillis() + durationInMillis;\n+        this.durationInMillis = 0;\n+        this.pollingTimeoutMillis = pollingTimeoutMillis.toMillis();\n+        this.pollingRetries = pollingRetries;\n+    }\n \n+    public <T, E extends Exception> T wait(FailableSupplier<T, E> valueProvider, Predicate<T> stopCondition) throws E\n+    {\n         T value;\n+        long endTime = System.currentTimeMillis() + durationInMillis;\n+        int counter = 0;\n         do\n         {\n             value = valueProvider.get();\n             Sleeper.sleep(pollingTimeoutMillis, TimeUnit.MILLISECONDS);\n+            counter++;\n         }\n-        while (!stopCondition.test(value) && System.currentTimeMillis() <= endTime);\n+        while (!stopCondition.test(value) && (durationInMillis > 0\n+                ? System.currentTimeMillis() <= endTime : counter < pollingRetries));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6253c88b3531a6f8627fa02c4280ffc8e3d00ca3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA4OTc3OQ==", "bodyText": "there should be 2 unit tests, such if-s can't be used in unit tests", "url": "https://github.com/vividus-framework/vividus/pull/876#discussion_r481089779", "createdAt": "2020-09-01T12:11:10Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-rest-api/src/test/java/org/vividus/bdd/steps/api/JsonResponseValidationStepsTests.java", "diffHunk": "@@ -400,7 +401,16 @@ void shouldWaitForJsonElement()\n                 .thenReturn(createHttpResponse(JSON));\n         when(httpTestContext.getJsonContext()).thenReturn(JSON);\n         int retryTimes = 4;\n-        jsonResponseValidationSteps.waitForJsonElement(STRING_PATH, Duration.ofSeconds(2), retryTimes, stepsToExecute);\n+        if (withPollingInterval)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6253c88b3531a6f8627fa02c4280ffc8e3d00ca3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA5MTk3Nw==", "bodyText": "When I wait for presence of element by `$jsonPath` with `$pollingInterval` polling interval retrying $retryTimes times$stepsToExecute", "url": "https://github.com/vividus-framework/vividus/pull/876#discussion_r481091977", "createdAt": "2020-09-01T12:15:29Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-rest-api/src/main/java/org/vividus/bdd/steps/api/JsonResponseValidationSteps.java", "diffHunk": "@@ -308,9 +308,39 @@ public void waitForJsonFieldAppearance(String jsonPath, String resourceUrl, Dura\n             + \"$stepsToExecute\")\n     public void waitForJsonElement(String jsonPath, Duration duration, int retryTimes, SubSteps stepsToExecute)\n     {\n-        new Waiter(new WaitMode(duration, retryTimes)).wait(\n-                () -> stepsToExecute.execute(Optional.empty()),\n-                () -> isJsonElementSearchCompleted(httpTestContext.getResponse(), jsonPath)\n+        waitForJsonElement(new Waiter(new WaitMode(duration, retryTimes)), jsonPath, stepsToExecute);\n+    }\n+\n+    /**\n+     * Execute a specified amount of retries using polling interval of time until\n+     * HTTP response body contains an element by the specified JSON path.\n+     * <p>\n+     * <b>Actions performed:</b>\n+     * </p>\n+     * <ul>\n+     * <li>Execute sub-steps</li>\n+     * <li>Check if HTTP response is present and response body contains an element by JSON path</li>\n+     * <li>Stop step execution if HTTP response is not present or JSON element is found, otherwise\n+     * sleep for the calculated part of specified polling interval and repeat actions from the start</li>\n+     * </ul>\n+     * @param jsonPath JSON path of element to find\n+     * @param interval Duration of time to wait\n+     * @param retryTimes Number of attempts\n+     * @param stepsToExecute Steps to execute at each wait iteration\n+     */\n+    @When(\"I wait for presence of element by `$jsonPath` with polling interval `$interval` retrying $retryTimes times\"\n+            + \"$stepsToExecute\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6253c88b3531a6f8627fa02c4280ffc8e3d00ca3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA5MjEyOQ==", "bodyText": "also please add docs for new step", "url": "https://github.com/vividus-framework/vividus/pull/876#discussion_r481092129", "createdAt": "2020-09-01T12:15:46Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-rest-api/src/main/java/org/vividus/bdd/steps/api/JsonResponseValidationSteps.java", "diffHunk": "@@ -308,9 +308,39 @@ public void waitForJsonFieldAppearance(String jsonPath, String resourceUrl, Dura\n             + \"$stepsToExecute\")\n     public void waitForJsonElement(String jsonPath, Duration duration, int retryTimes, SubSteps stepsToExecute)\n     {\n-        new Waiter(new WaitMode(duration, retryTimes)).wait(\n-                () -> stepsToExecute.execute(Optional.empty()),\n-                () -> isJsonElementSearchCompleted(httpTestContext.getResponse(), jsonPath)\n+        waitForJsonElement(new Waiter(new WaitMode(duration, retryTimes)), jsonPath, stepsToExecute);\n+    }\n+\n+    /**\n+     * Execute a specified amount of retries using polling interval of time until\n+     * HTTP response body contains an element by the specified JSON path.\n+     * <p>\n+     * <b>Actions performed:</b>\n+     * </p>\n+     * <ul>\n+     * <li>Execute sub-steps</li>\n+     * <li>Check if HTTP response is present and response body contains an element by JSON path</li>\n+     * <li>Stop step execution if HTTP response is not present or JSON element is found, otherwise\n+     * sleep for the calculated part of specified polling interval and repeat actions from the start</li>\n+     * </ul>\n+     * @param jsonPath JSON path of element to find\n+     * @param interval Duration of time to wait\n+     * @param retryTimes Number of attempts\n+     * @param stepsToExecute Steps to execute at each wait iteration\n+     */\n+    @When(\"I wait for presence of element by `$jsonPath` with polling interval `$interval` retrying $retryTimes times\"\n+            + \"$stepsToExecute\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6253c88b3531a6f8627fa02c4280ffc8e3d00ca3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA5MjU2Mg==", "bodyText": "pollingRetries -> retryTimes - to keep naming consistency", "url": "https://github.com/vividus-framework/vividus/pull/876#discussion_r481092562", "createdAt": "2020-09-01T12:16:33Z", "author": {"login": "valfirst"}, "path": "vividus-util/src/main/java/org/vividus/util/wait/Waiter.java", "diffHunk": "@@ -28,24 +29,35 @@\n {\n     private final long durationInMillis;\n     private final long pollingTimeoutMillis;\n+    private final int pollingRetries;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6253c88b3531a6f8627fa02c4280ffc8e3d00ca3"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6253c88b3531a6f8627fa02c4280ffc8e3d00ca3", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/6253c88b3531a6f8627fa02c4280ffc8e3d00ca3", "committedDate": "2020-09-01T10:01:37Z", "message": "Add new step When I wait for presence of element by  with polling interval  retrying retryTimes times stepsToExecute"}, "afterCommit": {"oid": "bd612a60734a844b92f38385752549ae3da784fd", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/bd612a60734a844b92f38385752549ae3da784fd", "committedDate": "2020-09-01T18:00:48Z", "message": "Add new step for waiting for presence of element by JSON path using polling interval"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDAyNzg3", "url": "https://github.com/vividus-framework/vividus/pull/876#pullrequestreview-480002787", "createdAt": "2020-09-01T18:19:19Z", "commit": {"oid": "bd612a60734a844b92f38385752549ae3da784fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODoxOToxOVrOHLCwIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODoxOToxOVrOHLCwIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM0MTQ3Mw==", "bodyText": "execute what? :)", "url": "https://github.com/vividus-framework/vividus/pull/876#discussion_r481341473", "createdAt": "2020-09-01T18:19:19Z", "author": {"login": "uarlouski"}, "path": "docs/modules/plugins/pages/plugin-rest-api.adoc", "diffHunk": "@@ -50,6 +50,40 @@ Scenario: Verify that the server supports TLSv1.3 and TLSv1.2 protocols\n Then server `vividus-test-site.herokuapp.com` supports secure protocols that contain `TLSv1.3,TLSv1.2`\n ----\n \n+=== Wait for presence of element by JSON path\n+\n+==== *_Info_*\n+\n+Execute a specified amount of `retries` using `polling interval` of time until HTTP response body contains an element by the specified `JSON path`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd612a60734a844b92f38385752549ae3da784fd"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd612a60734a844b92f38385752549ae3da784fd", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/bd612a60734a844b92f38385752549ae3da784fd", "committedDate": "2020-09-01T18:00:48Z", "message": "Add new step for waiting for presence of element by JSON path using polling interval"}, "afterCommit": {"oid": "b3ece3feaf0dd7e4a70b92fad899605bae262308", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/b3ece3feaf0dd7e4a70b92fad899605bae262308", "committedDate": "2020-09-01T18:23:35Z", "message": "Add new step for waiting for presence of element by JSON path using polling interval"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNTczMzY3", "url": "https://github.com/vividus-framework/vividus/pull/876#pullrequestreview-480573367", "createdAt": "2020-09-02T07:57:26Z", "commit": {"oid": "b3ece3feaf0dd7e4a70b92fad899605bae262308"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNzo1NzoyN1rOHLiH3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjoyNTowOVrOHLsmWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg1NTQ1Mg==", "bodyText": "protected?", "url": "https://github.com/vividus-framework/vividus/pull/876#discussion_r481855452", "createdAt": "2020-09-02T07:57:27Z", "author": {"login": "valfirst"}, "path": "vividus-util/src/main/java/org/vividus/util/wait/Waiter.java", "diffHunk": "@@ -59,4 +44,9 @@ public Waiter(WaitMode waitMode)\n             alwaysNull -> stopCondition.getAsBoolean()\n         );\n     }\n+\n+    public long getPollingTimeoutMillis()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3ece3feaf0dd7e4a70b92fad899605bae262308"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg1NTYzNg==", "bodyText": "package-private ?", "url": "https://github.com/vividus-framework/vividus/pull/876#discussion_r481855636", "createdAt": "2020-09-02T07:57:39Z", "author": {"login": "valfirst"}, "path": "vividus-util/src/main/java/org/vividus/util/wait/Waiter.java", "diffHunk": "@@ -16,38 +16,23 @@\n \n package org.vividus.util.wait;\n \n-import java.util.concurrent.TimeUnit;\n import java.util.function.BooleanSupplier;\n import java.util.function.Predicate;\n \n import org.apache.commons.lang3.function.FailableRunnable;\n import org.apache.commons.lang3.function.FailableSupplier;\n-import org.vividus.util.Sleeper;\n \n-public final class Waiter\n+public abstract class Waiter\n {\n-    private final long durationInMillis;\n     private final long pollingTimeoutMillis;\n \n-    public Waiter(WaitMode waitMode)\n+    public Waiter(long pollingTimeoutMillis)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3ece3feaf0dd7e4a70b92fad899605bae262308"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg1NzYzMg==", "bodyText": "you can reduce the polling interval (in the previous unit tests there is a kind of race condition, that's why we need to put some seconds there)", "url": "https://github.com/vividus-framework/vividus/pull/876#discussion_r481857632", "createdAt": "2020-09-02T07:59:52Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-rest-api/src/test/java/org/vividus/bdd/steps/api/JsonResponseValidationStepsTests.java", "diffHunk": "@@ -407,6 +408,25 @@ void shouldWaitForJsonElement()\n                 verifyMatcher(1));\n     }\n \n+    @Test\n+    void shouldWaitForJsonElementWithPollingInterval()\n+    {\n+        SubSteps stepsToExecute = mock(SubSteps.class);\n+        when(httpTestContext.getResponse())\n+                .thenReturn(createHttpResponse(HTML))\n+                .thenReturn(createHttpResponse(OBJECT_PATH_RESULT))\n+                .thenReturn(new HttpResponse())\n+                .thenReturn(createHttpResponse(JSON));\n+        when(httpTestContext.getJsonContext()).thenReturn(JSON);\n+        int retryTimes = 4;\n+        jsonResponseValidationSteps.waitForJsonElementWithPollingInterval(STRING_PATH,\n+                Duration.ofSeconds(2), retryTimes, stepsToExecute);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3ece3feaf0dd7e4a70b92fad899605bae262308"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAyNzA5OA==", "bodyText": "I believe you can check exact number of invocations here", "url": "https://github.com/vividus-framework/vividus/pull/876#discussion_r482027098", "createdAt": "2020-09-02T12:25:09Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-rest-api/src/test/java/org/vividus/bdd/steps/api/JsonResponseValidationStepsTests.java", "diffHunk": "@@ -407,6 +408,25 @@ void shouldWaitForJsonElement()\n                 verifyMatcher(1));\n     }\n \n+    @Test\n+    void shouldWaitForJsonElementWithPollingInterval()\n+    {\n+        SubSteps stepsToExecute = mock(SubSteps.class);\n+        when(httpTestContext.getResponse())\n+                .thenReturn(createHttpResponse(HTML))\n+                .thenReturn(createHttpResponse(OBJECT_PATH_RESULT))\n+                .thenReturn(new HttpResponse())\n+                .thenReturn(createHttpResponse(JSON));\n+        when(httpTestContext.getJsonContext()).thenReturn(JSON);\n+        int retryTimes = 4;\n+        jsonResponseValidationSteps.waitForJsonElementWithPollingInterval(STRING_PATH,\n+                Duration.ofSeconds(2), retryTimes, stepsToExecute);\n+        verify(stepsToExecute, atLeast(retryTimes - 1)).execute(Optional.empty());\n+        verify(stepsToExecute, atMost(retryTimes)).execute(Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3ece3feaf0dd7e4a70b92fad899605bae262308"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3ece3feaf0dd7e4a70b92fad899605bae262308", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/b3ece3feaf0dd7e4a70b92fad899605bae262308", "committedDate": "2020-09-01T18:23:35Z", "message": "Add new step for waiting for presence of element by JSON path using polling interval"}, "afterCommit": {"oid": "bb7f4e15931a673f491da9e9ed98cb443ea3a233", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/bb7f4e15931a673f491da9e9ed98cb443ea3a233", "committedDate": "2020-09-02T12:51:31Z", "message": "Add new step for waiting for presence of element by JSON path using polling interval"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3fcfd83a1e9d6019c4c430155ea94bd26dd69901", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/3fcfd83a1e9d6019c4c430155ea94bd26dd69901", "committedDate": "2020-09-02T13:43:58Z", "message": "Update integration tests for image steps"}, "afterCommit": {"oid": "bb7f4e15931a673f491da9e9ed98cb443ea3a233", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/bb7f4e15931a673f491da9e9ed98cb443ea3a233", "committedDate": "2020-09-02T12:51:31Z", "message": "Add new step for waiting for presence of element by JSON path using polling interval"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb7f4e15931a673f491da9e9ed98cb443ea3a233", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/bb7f4e15931a673f491da9e9ed98cb443ea3a233", "committedDate": "2020-09-02T12:51:31Z", "message": "Add new step for waiting for presence of element by JSON path using polling interval"}, "afterCommit": {"oid": "a69ef5cd1bbf60702da9af2d43a4164f93c037d1", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/a69ef5cd1bbf60702da9af2d43a4164f93c037d1", "committedDate": "2020-09-02T14:46:09Z", "message": "Add new step for waiting for presence of element by JSON path using polling interval"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNzY3Mjk3", "url": "https://github.com/vividus-framework/vividus/pull/876#pullrequestreview-480767297", "createdAt": "2020-09-02T12:28:06Z", "commit": {"oid": "b3ece3feaf0dd7e4a70b92fad899605bae262308"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjoyODowNlrOHLssvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTozMjowMlrOHL_6GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAyODczNQ==", "bodyText": "it looks more clear of we refer to parameters by their actual names", "url": "https://github.com/vividus-framework/vividus/pull/876#discussion_r482028735", "createdAt": "2020-09-02T12:28:06Z", "author": {"login": "uarlouski"}, "path": "docs/modules/plugins/pages/plugin-rest-api.adoc", "diffHunk": "@@ -50,6 +50,40 @@ Scenario: Verify that the server supports TLSv1.3 and TLSv1.2 protocols\n Then server `vividus-test-site.herokuapp.com` supports secure protocols that contain `TLSv1.3,TLSv1.2`\n ----\n \n+=== Wait for presence of element by JSON path\n+\n+==== *_Info_*\n+\n+Execute `steps to execute` a specified amount of `retries` using `polling interval` of time until HTTP response body contains an element by the specified `JSON path`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3ece3feaf0dd7e4a70b92fad899605bae262308"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM0MzQ0OA==", "bodyText": "add override annotation for both waiters", "url": "https://github.com/vividus-framework/vividus/pull/876#discussion_r482343448", "createdAt": "2020-09-02T19:32:02Z", "author": {"login": "uarlouski"}, "path": "vividus-util/src/main/java/org/vividus/util/wait/DurationBasedWaiter.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.util.wait;\n+\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Predicate;\n+\n+import org.apache.commons.lang3.function.FailableSupplier;\n+import org.vividus.util.Sleeper;\n+\n+public final class DurationBasedWaiter extends Waiter\n+{\n+    private final long durationInMillis;\n+\n+    public DurationBasedWaiter(WaitMode waitMode)\n+    {\n+        super(waitMode.calculatePollingTimeout(TimeUnit.MILLISECONDS));\n+        durationInMillis = waitMode.getDuration().toMillis();\n+    }\n+\n+    public <T, E extends Exception> T wait(FailableSupplier<T, E> valueProvider, Predicate<T> stopCondition) throws E", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a69ef5cd1bbf60702da9af2d43a4164f93c037d1"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c566a66b63cbd8c20c1f70e593e643af152e2d8", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/1c566a66b63cbd8c20c1f70e593e643af152e2d8", "committedDate": "2020-09-02T20:28:10Z", "message": "Add new step for waiting for presence of element by JSON path using polling interval"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a69ef5cd1bbf60702da9af2d43a4164f93c037d1", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/a69ef5cd1bbf60702da9af2d43a4164f93c037d1", "committedDate": "2020-09-02T14:46:09Z", "message": "Add new step for waiting for presence of element by JSON path using polling interval"}, "afterCommit": {"oid": "1c566a66b63cbd8c20c1f70e593e643af152e2d8", "author": {"user": {"login": "abudevich", "name": null}}, "url": "https://github.com/vividus-framework/vividus/commit/1c566a66b63cbd8c20c1f70e593e643af152e2d8", "committedDate": "2020-09-02T20:28:10Z", "message": "Add new step for waiting for presence of element by JSON path using polling interval"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9c4fd72032f3c4f04627bbd7f86edad93b85506", "author": {"user": {"login": "valfirst", "name": "Valery Yatsynovich"}}, "url": "https://github.com/vividus-framework/vividus/commit/b9c4fd72032f3c4f04627bbd7f86edad93b85506", "committedDate": "2020-09-06T19:08:09Z", "message": "Improve docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMjg5ODI2", "url": "https://github.com/vividus-framework/vividus/pull/876#pullrequestreview-483289826", "createdAt": "2020-09-07T07:05:14Z", "commit": {"oid": "b9c4fd72032f3c4f04627bbd7f86edad93b85506"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMjk4NDUz", "url": "https://github.com/vividus-framework/vividus/pull/876#pullrequestreview-483298453", "createdAt": "2020-09-07T07:19:47Z", "commit": {"oid": "b9c4fd72032f3c4f04627bbd7f86edad93b85506"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMzM4OTky", "url": "https://github.com/vividus-framework/vividus/pull/876#pullrequestreview-483338992", "createdAt": "2020-09-07T08:05:34Z", "commit": {"oid": "b9c4fd72032f3c4f04627bbd7f86edad93b85506"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 84, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}