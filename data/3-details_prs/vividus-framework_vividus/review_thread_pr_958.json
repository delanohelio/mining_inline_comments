{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NzMyOTE4", "number": 958, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQwOTo1Nzo0NVrOElaTlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxMDo0NzozMlrOElagjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NjYzNzY0OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/screenshot/IScreenshotTaker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQwOTo1Nzo0NVrOHU5dRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQwOTo1Nzo0NVrOHU5dRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3NDk1MQ==", "bodyText": "IScreenshotTaker -> ScreenshotTaker", "url": "https://github.com/vividus-framework/vividus/pull/958#discussion_r491674951", "createdAt": "2020-09-20T09:57:45Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/screenshot/IScreenshotTaker.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium.screenshot;\n+\n+import java.util.Optional;\n+\n+public interface IScreenshotTaker", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b3b436c797b36cfdf13b1e78d7afb7f8d3caa43"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NjYzODU2OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/screenshot/IWebScreenshotTaker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQwOTo1OToyOFrOHU5dtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQwOTo1OToyOFrOHU5dtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3NTA2Mw==", "bodyText": "IWebScreenshotTaker -> WebScreenshotTaker", "url": "https://github.com/vividus-framework/vividus/pull/958#discussion_r491675063", "createdAt": "2020-09-20T09:59:28Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/screenshot/IWebScreenshotTaker.java", "diffHunk": "@@ -24,10 +24,8 @@\n import org.openqa.selenium.SearchContext;\n import org.openqa.selenium.WebElement;\n \n-public interface IScreenshotTaker\n+public interface IWebScreenshotTaker extends IScreenshotTaker", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b3b436c797b36cfdf13b1e78d7afb7f8d3caa43"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NjYzOTg4OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/screenshot/ScreenshotTaker.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxMDowMTowMlrOHU5eSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxMDo0NToyOFrOHU5r7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3NTIxMA==", "bodyText": "return screenshotData.length > 0\n            ? Optional.of(new Screenshot(generateScreenshotFileName(screenshotName), screenshotData))\n            : Optional.empty();", "url": "https://github.com/vividus-framework/vividus/pull/958#discussion_r491675210", "createdAt": "2020-09-20T10:01:02Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/screenshot/ScreenshotTaker.java", "diffHunk": "@@ -154,14 +154,10 @@ public void takeScreenshot(Path screenshotFilePath, boolean viewportScreenshot)\n \n     private Optional<Screenshot> createScreenshot(byte[] screenshotData, String screenshotName)\n     {\n-        if (screenshotData.length > 0)\n-        {\n-            Screenshot screenshot = new Screenshot();\n-            screenshot.setData(screenshotData);\n-            screenshot.setFileName(generateScreenshotFileName(screenshotName));\n-            return Optional.of(screenshot);\n-        }\n-        return Optional.empty();\n+        Screenshot screenshot = screenshotData.length > 0\n+                ? new Screenshot(generateScreenshotFileName(screenshotName), screenshotData)\n+                : null;\n+        return Optional.ofNullable(screenshot);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b3b436c797b36cfdf13b1e78d7afb7f8d3caa43"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3ODIyNA==", "bodyText": "fixed, but imho too many method invocations per line", "url": "https://github.com/vividus-framework/vividus/pull/958#discussion_r491678224", "createdAt": "2020-09-20T10:40:03Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/screenshot/ScreenshotTaker.java", "diffHunk": "@@ -154,14 +154,10 @@ public void takeScreenshot(Path screenshotFilePath, boolean viewportScreenshot)\n \n     private Optional<Screenshot> createScreenshot(byte[] screenshotData, String screenshotName)\n     {\n-        if (screenshotData.length > 0)\n-        {\n-            Screenshot screenshot = new Screenshot();\n-            screenshot.setData(screenshotData);\n-            screenshot.setFileName(generateScreenshotFileName(screenshotName));\n-            return Optional.of(screenshot);\n-        }\n-        return Optional.empty();\n+        Screenshot screenshot = screenshotData.length > 0\n+                ? new Screenshot(generateScreenshotFileName(screenshotName), screenshotData)\n+                : null;\n+        return Optional.ofNullable(screenshot);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3NTIxMA=="}, "originalCommit": {"oid": "6b3b436c797b36cfdf13b1e78d7afb7f8d3caa43"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3ODcwMA==", "bodyText": "in this case you can keep old if", "url": "https://github.com/vividus-framework/vividus/pull/958#discussion_r491678700", "createdAt": "2020-09-20T10:45:28Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/selenium/screenshot/ScreenshotTaker.java", "diffHunk": "@@ -154,14 +154,10 @@ public void takeScreenshot(Path screenshotFilePath, boolean viewportScreenshot)\n \n     private Optional<Screenshot> createScreenshot(byte[] screenshotData, String screenshotName)\n     {\n-        if (screenshotData.length > 0)\n-        {\n-            Screenshot screenshot = new Screenshot();\n-            screenshot.setData(screenshotData);\n-            screenshot.setFileName(generateScreenshotFileName(screenshotName));\n-            return Optional.of(screenshot);\n-        }\n-        return Optional.empty();\n+        Screenshot screenshot = screenshotData.length > 0\n+                ? new Screenshot(generateScreenshotFileName(screenshotName), screenshotData)\n+                : null;\n+        return Optional.ofNullable(screenshot);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3NTIxMA=="}, "originalCommit": {"oid": "6b3b436c797b36cfdf13b1e78d7afb7f8d3caa43"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NjY3MDg1OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxMDo0NzozMlrOHU5sfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQxMTo1MTozMVrOHU6ASw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3ODg0Ng==", "bodyText": "why is it needed?", "url": "https://github.com/vividus-framework/vividus/pull/958#discussion_r491678846", "createdAt": "2020-09-20T10:47:32Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -37,26 +32,30 @@\n import org.vividus.reporter.event.AttachmentPublishEvent;\n import org.vividus.reporter.model.Attachment;\n import org.vividus.selenium.IWebDriverProvider;\n-import org.vividus.selenium.screenshot.IScreenshotTaker;\n+import org.vividus.selenium.screenshot.Screenshot;\n import org.vividus.softassert.event.AssertionFailedEvent;\n-import org.vividus.ui.context.IUiContext;\n \n-public class ScreenshotOnFailureMonitor extends NullStepMonitor\n+public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n {\n     private static final String NO_SCREENSHOT_ON_FAILURE_META_NAME = \"noScreenshotOnFailure\";\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(ScreenshotOnFailureMonitor.class);\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AbstractScreenshotOnFailureMonitor.class);\n \n     private final ThreadLocal<Boolean> takeScreenshotOnFailureEnabled = InheritableThreadLocal.withInitial(\n         () -> Boolean.FALSE);\n \n-    @Inject private EventBus eventBus;\n-\n-    @Inject private IBddRunContext bddRunContext;\n+    private final EventBus eventBus;\n+    private final IBddRunContext bddRunContext;\n+    private final IWebDriverProvider webDriverProvider;\n \n-    @Inject private IWebDriverProvider webDriverProvider;\n-    @Inject private IUiContext uiContext;\n-    @Inject private IScreenshotTaker screenshotTaker;\n+    public AbstractScreenshotOnFailureMonitor(EventBus eventBus, IBddRunContext bddRunContext,\n+            IWebDriverProvider webDriverProvider)\n+    {\n+        this.eventBus = eventBus;\n+        this.bddRunContext = bddRunContext;\n+        this.webDriverProvider = webDriverProvider;\n+        this.eventBus.register(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b4c1e517a6efb6fe05fb51299fb2b821c9c1719"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY4MTExNg==", "bodyText": "SubscriberRegisteringBeanPostProcessor doesn't support finding of subscribers in parent classes, this should be separate commit", "url": "https://github.com/vividus-framework/vividus/pull/958#discussion_r491681116", "createdAt": "2020-09-20T11:15:24Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -37,26 +32,30 @@\n import org.vividus.reporter.event.AttachmentPublishEvent;\n import org.vividus.reporter.model.Attachment;\n import org.vividus.selenium.IWebDriverProvider;\n-import org.vividus.selenium.screenshot.IScreenshotTaker;\n+import org.vividus.selenium.screenshot.Screenshot;\n import org.vividus.softassert.event.AssertionFailedEvent;\n-import org.vividus.ui.context.IUiContext;\n \n-public class ScreenshotOnFailureMonitor extends NullStepMonitor\n+public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n {\n     private static final String NO_SCREENSHOT_ON_FAILURE_META_NAME = \"noScreenshotOnFailure\";\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(ScreenshotOnFailureMonitor.class);\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AbstractScreenshotOnFailureMonitor.class);\n \n     private final ThreadLocal<Boolean> takeScreenshotOnFailureEnabled = InheritableThreadLocal.withInitial(\n         () -> Boolean.FALSE);\n \n-    @Inject private EventBus eventBus;\n-\n-    @Inject private IBddRunContext bddRunContext;\n+    private final EventBus eventBus;\n+    private final IBddRunContext bddRunContext;\n+    private final IWebDriverProvider webDriverProvider;\n \n-    @Inject private IWebDriverProvider webDriverProvider;\n-    @Inject private IUiContext uiContext;\n-    @Inject private IScreenshotTaker screenshotTaker;\n+    public AbstractScreenshotOnFailureMonitor(EventBus eventBus, IBddRunContext bddRunContext,\n+            IWebDriverProvider webDriverProvider)\n+    {\n+        this.eventBus = eventBus;\n+        this.bddRunContext = bddRunContext;\n+        this.webDriverProvider = webDriverProvider;\n+        this.eventBus.register(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3ODg0Ng=="}, "originalCommit": {"oid": "5b4c1e517a6efb6fe05fb51299fb2b821c9c1719"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY4MTM2MA==", "bodyText": "let's fix this issue first?", "url": "https://github.com/vividus-framework/vividus/pull/958#discussion_r491681360", "createdAt": "2020-09-20T11:19:15Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -37,26 +32,30 @@\n import org.vividus.reporter.event.AttachmentPublishEvent;\n import org.vividus.reporter.model.Attachment;\n import org.vividus.selenium.IWebDriverProvider;\n-import org.vividus.selenium.screenshot.IScreenshotTaker;\n+import org.vividus.selenium.screenshot.Screenshot;\n import org.vividus.softassert.event.AssertionFailedEvent;\n-import org.vividus.ui.context.IUiContext;\n \n-public class ScreenshotOnFailureMonitor extends NullStepMonitor\n+public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n {\n     private static final String NO_SCREENSHOT_ON_FAILURE_META_NAME = \"noScreenshotOnFailure\";\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(ScreenshotOnFailureMonitor.class);\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AbstractScreenshotOnFailureMonitor.class);\n \n     private final ThreadLocal<Boolean> takeScreenshotOnFailureEnabled = InheritableThreadLocal.withInitial(\n         () -> Boolean.FALSE);\n \n-    @Inject private EventBus eventBus;\n-\n-    @Inject private IBddRunContext bddRunContext;\n+    private final EventBus eventBus;\n+    private final IBddRunContext bddRunContext;\n+    private final IWebDriverProvider webDriverProvider;\n \n-    @Inject private IWebDriverProvider webDriverProvider;\n-    @Inject private IUiContext uiContext;\n-    @Inject private IScreenshotTaker screenshotTaker;\n+    public AbstractScreenshotOnFailureMonitor(EventBus eventBus, IBddRunContext bddRunContext,\n+            IWebDriverProvider webDriverProvider)\n+    {\n+        this.eventBus = eventBus;\n+        this.bddRunContext = bddRunContext;\n+        this.webDriverProvider = webDriverProvider;\n+        this.eventBus.register(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3ODg0Ng=="}, "originalCommit": {"oid": "5b4c1e517a6efb6fe05fb51299fb2b821c9c1719"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY4Mjk4Mg==", "bodyText": "in progress", "url": "https://github.com/vividus-framework/vividus/pull/958#discussion_r491682982", "createdAt": "2020-09-20T11:40:02Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -37,26 +32,30 @@\n import org.vividus.reporter.event.AttachmentPublishEvent;\n import org.vividus.reporter.model.Attachment;\n import org.vividus.selenium.IWebDriverProvider;\n-import org.vividus.selenium.screenshot.IScreenshotTaker;\n+import org.vividus.selenium.screenshot.Screenshot;\n import org.vividus.softassert.event.AssertionFailedEvent;\n-import org.vividus.ui.context.IUiContext;\n \n-public class ScreenshotOnFailureMonitor extends NullStepMonitor\n+public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n {\n     private static final String NO_SCREENSHOT_ON_FAILURE_META_NAME = \"noScreenshotOnFailure\";\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(ScreenshotOnFailureMonitor.class);\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AbstractScreenshotOnFailureMonitor.class);\n \n     private final ThreadLocal<Boolean> takeScreenshotOnFailureEnabled = InheritableThreadLocal.withInitial(\n         () -> Boolean.FALSE);\n \n-    @Inject private EventBus eventBus;\n-\n-    @Inject private IBddRunContext bddRunContext;\n+    private final EventBus eventBus;\n+    private final IBddRunContext bddRunContext;\n+    private final IWebDriverProvider webDriverProvider;\n \n-    @Inject private IWebDriverProvider webDriverProvider;\n-    @Inject private IUiContext uiContext;\n-    @Inject private IScreenshotTaker screenshotTaker;\n+    public AbstractScreenshotOnFailureMonitor(EventBus eventBus, IBddRunContext bddRunContext,\n+            IWebDriverProvider webDriverProvider)\n+    {\n+        this.eventBus = eventBus;\n+        this.bddRunContext = bddRunContext;\n+        this.webDriverProvider = webDriverProvider;\n+        this.eventBus.register(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3ODg0Ng=="}, "originalCommit": {"oid": "5b4c1e517a6efb6fe05fb51299fb2b821c9c1719"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY4MzkxNQ==", "bodyText": "Will rebase after #961", "url": "https://github.com/vividus-framework/vividus/pull/958#discussion_r491683915", "createdAt": "2020-09-20T11:51:31Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/bdd/monitor/AbstractScreenshotOnFailureMonitor.java", "diffHunk": "@@ -37,26 +32,30 @@\n import org.vividus.reporter.event.AttachmentPublishEvent;\n import org.vividus.reporter.model.Attachment;\n import org.vividus.selenium.IWebDriverProvider;\n-import org.vividus.selenium.screenshot.IScreenshotTaker;\n+import org.vividus.selenium.screenshot.Screenshot;\n import org.vividus.softassert.event.AssertionFailedEvent;\n-import org.vividus.ui.context.IUiContext;\n \n-public class ScreenshotOnFailureMonitor extends NullStepMonitor\n+public abstract class AbstractScreenshotOnFailureMonitor extends NullStepMonitor\n {\n     private static final String NO_SCREENSHOT_ON_FAILURE_META_NAME = \"noScreenshotOnFailure\";\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(ScreenshotOnFailureMonitor.class);\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AbstractScreenshotOnFailureMonitor.class);\n \n     private final ThreadLocal<Boolean> takeScreenshotOnFailureEnabled = InheritableThreadLocal.withInitial(\n         () -> Boolean.FALSE);\n \n-    @Inject private EventBus eventBus;\n-\n-    @Inject private IBddRunContext bddRunContext;\n+    private final EventBus eventBus;\n+    private final IBddRunContext bddRunContext;\n+    private final IWebDriverProvider webDriverProvider;\n \n-    @Inject private IWebDriverProvider webDriverProvider;\n-    @Inject private IUiContext uiContext;\n-    @Inject private IScreenshotTaker screenshotTaker;\n+    public AbstractScreenshotOnFailureMonitor(EventBus eventBus, IBddRunContext bddRunContext,\n+            IWebDriverProvider webDriverProvider)\n+    {\n+        this.eventBus = eventBus;\n+        this.bddRunContext = bddRunContext;\n+        this.webDriverProvider = webDriverProvider;\n+        this.eventBus.register(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3ODg0Ng=="}, "originalCommit": {"oid": "5b4c1e517a6efb6fe05fb51299fb2b821c9c1719"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 128, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}