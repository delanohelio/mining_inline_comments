{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2ODQ3OTM5", "number": 814, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOTowNDoyM1rOEX9qWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOTowNDoyM1rOEX9qWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTYyOTY4OnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/variable/Variables.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOTowNDoyM1rOHACsig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDowMzowNVrOHAEz-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwNjIxOA==", "bodyText": "have you considered using arraydeque?", "url": "https://github.com/vividus-framework/vividus/pull/814#discussion_r469806218", "createdAt": "2020-08-13T09:04:23Z", "author": {"login": "uarlouski"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/variable/Variables.java", "diffHunk": "@@ -16,27 +16,170 @@\n \n package org.vividus.bdd.variable;\n \n-import java.util.EnumMap;\n+import java.util.Deque;\n import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n import java.util.Map;\n+import java.util.Optional;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n \n public class Variables\n {\n-    private Map<VariableScope, Map<String, Object>> variablesPerScope = new EnumMap<>(VariableScope.class);\n+    private static final int VARIABLE_NAME_GROUP = 1;\n+    private static final int LIST_INDEX_GROUP = 2;\n+    private static final int MAP_KEY_GROUP = 3;\n+    private static final Pattern COMPOUND_VARIABLE_PATTERN = Pattern.compile(\n+            \"([^\\\\[\\\\].:]+):?(?:\\\\[(\\\\d+)])?:?(?:\\\\.([^:]+))?:?\");\n \n-    public Variables()\n+    private final Map<String, Object> batchVariables;\n+    private final Map<String, Object> storyVariables;\n+    private final Map<String, Object> scenarioVariables;\n+    private final Deque<Map<String, Object>> stepVariables;\n+\n+    public Variables(Map<String, Object> batchVariables)\n+    {\n+        this.batchVariables = batchVariables;\n+        storyVariables = new HashMap<>();\n+        scenarioVariables = new HashMap<>();\n+        stepVariables = new LinkedList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90b895979204b483fd23aa6a233c3dd79201d95e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg0MDg5MA==", "bodyText": "need to be benchmarked", "url": "https://github.com/vividus-framework/vividus/pull/814#discussion_r469840890", "createdAt": "2020-08-13T10:03:05Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/main/java/org/vividus/bdd/variable/Variables.java", "diffHunk": "@@ -16,27 +16,170 @@\n \n package org.vividus.bdd.variable;\n \n-import java.util.EnumMap;\n+import java.util.Deque;\n import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.List;\n import java.util.Map;\n+import java.util.Optional;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n import java.util.stream.Stream;\n+import java.util.stream.StreamSupport;\n \n public class Variables\n {\n-    private Map<VariableScope, Map<String, Object>> variablesPerScope = new EnumMap<>(VariableScope.class);\n+    private static final int VARIABLE_NAME_GROUP = 1;\n+    private static final int LIST_INDEX_GROUP = 2;\n+    private static final int MAP_KEY_GROUP = 3;\n+    private static final Pattern COMPOUND_VARIABLE_PATTERN = Pattern.compile(\n+            \"([^\\\\[\\\\].:]+):?(?:\\\\[(\\\\d+)])?:?(?:\\\\.([^:]+))?:?\");\n \n-    public Variables()\n+    private final Map<String, Object> batchVariables;\n+    private final Map<String, Object> storyVariables;\n+    private final Map<String, Object> scenarioVariables;\n+    private final Deque<Map<String, Object>> stepVariables;\n+\n+    public Variables(Map<String, Object> batchVariables)\n+    {\n+        this.batchVariables = batchVariables;\n+        storyVariables = new HashMap<>();\n+        scenarioVariables = new HashMap<>();\n+        stepVariables = new LinkedList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgwNjIxOA=="}, "originalCommit": {"oid": "90b895979204b483fd23aa6a233c3dd79201d95e"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 191, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}