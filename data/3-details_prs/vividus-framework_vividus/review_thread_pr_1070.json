{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwODUwOTQ4", "number": 1070, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDowNTozOFrOEyiHOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoyMzozNFrOEyspeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDIzMTYwOnYy", "diffSide": "RIGHT", "path": "docs/modules/plugins/partials/locator-header.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDowNTozOFrOHpOz7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDowNTozOFrOHpOz7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk5NjMzMg==", "bodyText": "Get -> Filter", "url": "https://github.com/vividus-framework/vividus/pull/1070#discussion_r512996332", "createdAt": "2020-10-27T20:05:38Z", "author": {"login": "valfirst"}, "path": "docs/modules/plugins/partials/locator-header.adoc", "diffHunk": "@@ -35,4 +35,8 @@ By. prefix is optional.\n |Get an element by the specified index from a collection of elements found by a locator. Indexes start from 1.\n |tagName(div)->filter.index(2)\n \n+|textPart\n+|Get an element by it's text part.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b386ad339b8f1876a775e17775ba878fe85fe598"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDI1MTQ3OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/IElementFilterAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDoxMToyNlrOHpPANw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDoxMToyNlrOHpPANw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk5OTQ3OQ==", "bodyText": "I don't think it should be in the interface, since it's the actual implementation\nI propose to move it to the class level and even exception message can be skipped", "url": "https://github.com/vividus-framework/vividus/pull/1070#discussion_r512999479", "createdAt": "2020-10-27T20:11:26Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/IElementFilterAction.java", "diffHunk": "@@ -17,10 +17,28 @@\n package org.vividus.ui.action.search;\n \n import java.util.List;\n+import java.util.stream.Collectors;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.openqa.selenium.WebElement;\n \n public interface IElementFilterAction extends IElementAction\n {\n-    List<WebElement> filter(List<WebElement> elements, String value);\n+    default UnsupportedOperationException unsupportedMatchesOperationException()\n+    {\n+        return new UnsupportedOperationException(\n+            \"The matches(WebElement, String) operation is not supported for the \" + getType().getAttributeName()\n+                + \" filter\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b386ad339b8f1876a775e17775ba878fe85fe598"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTk1NzY5OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/GenericTextPartFilter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoyMzozNFrOHpenCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoyODozNlrOHpeySA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI1NTE3Nw==", "bodyText": "Do we really need a \"contains\", could we just use regex for this?", "url": "https://github.com/vividus-framework/vividus/pull/1070#discussion_r513255177", "createdAt": "2020-10-28T08:23:34Z", "author": {"login": "ikalinin1"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/GenericTextPartFilter.java", "diffHunk": "@@ -14,25 +14,31 @@\n  * limitations under the License.\n  */\n \n-package org.vividus.ui.web.action.search;\n-\n-import javax.inject.Inject;\n+package org.vividus.ui.action.search;\n \n import org.openqa.selenium.WebElement;\n-import org.vividus.ui.web.action.IWebElementActions;\n+import org.vividus.ui.action.ElementActions;\n \n-public class TextPartFilter extends AbstractElementFilterAction\n+public class GenericTextPartFilter implements IElementFilterAction\n {\n-    @Inject private IWebElementActions webElementActions;\n+    private final LocatorType locatorType;\n+    private final ElementActions elementActions;\n \n-    public TextPartFilter()\n+    public GenericTextPartFilter(LocatorType locatorType, ElementActions elementActions)\n+    {\n+        this.locatorType = locatorType;\n+        this.elementActions = elementActions;\n+    }\n+\n+    @Override\n+    public boolean matches(WebElement element, String textPart)\n     {\n-        super(WebLocatorType.TEXT_PART);\n+        return elementActions.getElementText(element).contains(textPart);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77485968b4f7ef173c623585a86abe9fa6683c17"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI1ODA1Ng==", "bodyText": "I think it can break use cases if someone used in his text part special symbols", "url": "https://github.com/vividus-framework/vividus/pull/1070#discussion_r513258056", "createdAt": "2020-10-28T08:28:36Z", "author": {"login": "uarlouski"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/ui/action/search/GenericTextPartFilter.java", "diffHunk": "@@ -14,25 +14,31 @@\n  * limitations under the License.\n  */\n \n-package org.vividus.ui.web.action.search;\n-\n-import javax.inject.Inject;\n+package org.vividus.ui.action.search;\n \n import org.openqa.selenium.WebElement;\n-import org.vividus.ui.web.action.IWebElementActions;\n+import org.vividus.ui.action.ElementActions;\n \n-public class TextPartFilter extends AbstractElementFilterAction\n+public class GenericTextPartFilter implements IElementFilterAction\n {\n-    @Inject private IWebElementActions webElementActions;\n+    private final LocatorType locatorType;\n+    private final ElementActions elementActions;\n \n-    public TextPartFilter()\n+    public GenericTextPartFilter(LocatorType locatorType, ElementActions elementActions)\n+    {\n+        this.locatorType = locatorType;\n+        this.elementActions = elementActions;\n+    }\n+\n+    @Override\n+    public boolean matches(WebElement element, String textPart)\n     {\n-        super(WebLocatorType.TEXT_PART);\n+        return elementActions.getElementText(element).contains(textPart);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI1NTE3Nw=="}, "originalCommit": {"oid": "77485968b4f7ef173c623585a86abe9fa6683c17"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 41, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}