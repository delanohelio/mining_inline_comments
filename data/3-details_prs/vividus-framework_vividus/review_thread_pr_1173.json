{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3OTA5NjMz", "number": 1173, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOTowNDozN1rOE9iiUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOTowNDozN1rOE9iiUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTY0NDM0OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-web-app/src/main/java/org/vividus/proxy/steps/ProxySteps.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOTowNDozN1rOH6R2vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOToxMzo1NFrOH6SMlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg3MTk5Nw==", "bodyText": "maybe something like Network Logs.har ?", "url": "https://github.com/vividus-framework/vividus/pull/1173#discussion_r530871997", "createdAt": "2020-11-26T09:04:37Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/proxy/steps/ProxySteps.java", "diffHunk": "@@ -96,11 +95,16 @@ public void clearProxyLog()\n      */\n     @Then(\"number of HTTP $httpMethods requests with URL pattern `$urlPattern` is $comparisonRule `$number`\")\n     public List<HarEntry> checkNumberOfRequests(Set<HttpMethod> httpMethods, Pattern urlPattern,\n-            ComparisonRule comparisonRule, long number) throws IOException\n+            ComparisonRule comparisonRule, int number) throws IOException\n     {\n         List<HarEntry> harEntries = getLogEntries(httpMethods, urlPattern);\n-        assertSize(String.format(\"Number of HTTP %s requests matching URL pattern '%s'\",\n-                methodsToString(httpMethods, \", \"), urlPattern), harEntries, comparisonRule, number);\n+        String description = String.format(\"Number of HTTP %s requests matching URL pattern '%s'\",\n+                methodsToString(httpMethods, \", \"), urlPattern);\n+        if (!softAssert.assertThat(description, harEntries.size(), comparisonRule.getComparisonRule(number)))\n+        {\n+            byte[] harBytes = OBJECT_MAPPER.writeValueAsBytes(proxy.getRecordedData());\n+            attachmentPublisher.publishAttachment(harBytes, \"har.har\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f84a9ff4943705c16ce6bf8cf6339eec9b4086c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg3NzU5MA==", "bodyText": "makes sense, but it should go as a separate commit\nPS: the goal of this PR is to make new logic of proxy check clearer", "url": "https://github.com/vividus-framework/vividus/pull/1173#discussion_r530877590", "createdAt": "2020-11-26T09:13:54Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-web-app/src/main/java/org/vividus/proxy/steps/ProxySteps.java", "diffHunk": "@@ -96,11 +95,16 @@ public void clearProxyLog()\n      */\n     @Then(\"number of HTTP $httpMethods requests with URL pattern `$urlPattern` is $comparisonRule `$number`\")\n     public List<HarEntry> checkNumberOfRequests(Set<HttpMethod> httpMethods, Pattern urlPattern,\n-            ComparisonRule comparisonRule, long number) throws IOException\n+            ComparisonRule comparisonRule, int number) throws IOException\n     {\n         List<HarEntry> harEntries = getLogEntries(httpMethods, urlPattern);\n-        assertSize(String.format(\"Number of HTTP %s requests matching URL pattern '%s'\",\n-                methodsToString(httpMethods, \", \"), urlPattern), harEntries, comparisonRule, number);\n+        String description = String.format(\"Number of HTTP %s requests matching URL pattern '%s'\",\n+                methodsToString(httpMethods, \", \"), urlPattern);\n+        if (!softAssert.assertThat(description, harEntries.size(), comparisonRule.getComparisonRule(number)))\n+        {\n+            byte[] harBytes = OBJECT_MAPPER.writeValueAsBytes(proxy.getRecordedData());\n+            attachmentPublisher.publishAttachment(harBytes, \"har.har\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg3MTk5Nw=="}, "originalCommit": {"oid": "7f84a9ff4943705c16ce6bf8cf6339eec9b4086c"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4952, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}