{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5OTY2ODkw", "number": 1066, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjoyNjowNFrOEx4I9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxOToyNjoxNFrOEyDcHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzM1NDc4OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjoyNjowNFrOHoNK3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjoyNjowNFrOHoNK3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkyMDg2Mw==", "bodyText": "sauceOptions -> nestedOptions", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r511920863", "createdAt": "2020-10-26T12:26:04Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+\n+public abstract class AbstractDesiredCapabilitiesConfigurer implements DesiredCapabilitiesConfigurer\n+{\n+    @SuppressWarnings(\"unchecked\")\n+    protected void putCapabilityIntoMap(DesiredCapabilities capabilities, String mapKey, String capabilityKey,\n+            Object capabilityValue)\n+    {\n+        Map<String, Object> sauceOptions = (Map<String, Object>) capabilities.getCapability(mapKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d67c6131b2d265741979c5c47f213745e94f727"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzM3MjMyOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjozMDo1MlrOHoNVQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjozMDo1MlrOHoNVQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkyMzUyMg==", "bodyText": "putNestedCapability", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r511923522", "createdAt": "2020-10-26T12:30:52Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+\n+public abstract class AbstractDesiredCapabilitiesConfigurer implements DesiredCapabilitiesConfigurer\n+{\n+    @SuppressWarnings(\"unchecked\")\n+    protected void putCapabilityIntoMap(DesiredCapabilities capabilities, String mapKey, String capabilityKey,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d67c6131b2d265741979c5c47f213745e94f727"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzM3NTY2OnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjozMTo0OVrOHoNXNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjozMTo0OVrOHoNXNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkyNDAyMw==", "bodyText": "mapKey -> outerKey", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r511924023", "createdAt": "2020-10-26T12:31:49Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+\n+public abstract class AbstractDesiredCapabilitiesConfigurer implements DesiredCapabilitiesConfigurer\n+{\n+    @SuppressWarnings(\"unchecked\")\n+    protected void putCapabilityIntoMap(DesiredCapabilities capabilities, String mapKey, String capabilityKey,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d67c6131b2d265741979c5c47f213745e94f727"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzM3NjYxOnYy", "diffSide": "RIGHT", "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjozMjowMlrOHoNXug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMjozMjowMlrOHoNXug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkyNDE1NA==", "bodyText": "capabilityKey -> innerKey", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r511924154", "createdAt": "2020-10-26T12:32:02Z", "author": {"login": "valfirst"}, "path": "vividus-extension-selenium/src/main/java/org/vividus/selenium/AbstractDesiredCapabilitiesConfigurer.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+\n+public abstract class AbstractDesiredCapabilitiesConfigurer implements DesiredCapabilitiesConfigurer\n+{\n+    @SuppressWarnings(\"unchecked\")\n+    protected void putCapabilityIntoMap(DesiredCapabilities capabilities, String mapKey, String capabilityKey,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d67c6131b2d265741979c5c47f213745e94f727"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzkxMzEwOnYy", "diffSide": "LEFT", "path": ".github/workflows/gradle.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDozNTo1MVrOHoSg5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDo0NjowMVrOHoTAkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwODQyMw==", "bodyText": "Noisy changes?", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512008423", "createdAt": "2020-10-26T14:35:51Z", "author": {"login": "ikalinin1"}, "path": ".github/workflows/gradle.yml", "diffHunk": "@@ -292,7 +292,7 @@ jobs:\n             ./gradlew :vividus-tests:runStories -x testVividusInitialization \\\n                                                 -Pvividus.configuration.environments=system/mobile_app/browserstack/ios \\\n                                                 -Pvividus.configuration.suite=system/mobile_app/healthcheck \\\n-                                                -Pvividus.configuration.profiles=mobile_app/ios,browserstack/mobile_app \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0ce53f21bbea2e11beae937a0e2b0daccc70ba"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAxNjUzMQ==", "bodyText": "browserstack/mobile_app should go first to override data in mobile_app/iOS, as we did this in saucelabs", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512016531", "createdAt": "2020-10-26T14:46:01Z", "author": {"login": "uarlouski"}, "path": ".github/workflows/gradle.yml", "diffHunk": "@@ -292,7 +292,7 @@ jobs:\n             ./gradlew :vividus-tests:runStories -x testVividusInitialization \\\n                                                 -Pvividus.configuration.environments=system/mobile_app/browserstack/ios \\\n                                                 -Pvividus.configuration.suite=system/mobile_app/healthcheck \\\n-                                                -Pvividus.configuration.profiles=mobile_app/ios,browserstack/mobile_app \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwODQyMw=="}, "originalCommit": {"oid": "8e0ce53f21bbea2e11beae937a0e2b0daccc70ba"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzk3NjI0OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-browserstack/src/main/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDo0ODowMlrOHoTGpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDo0ODowMlrOHoTGpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAxODA4NA==", "bodyText": "n -> name", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512018084", "createdAt": "2020-10-26T14:48:02Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-browserstack/src/main/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurer.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium.browserstack;\n+\n+import java.util.Optional;\n+\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+import org.vividus.bdd.context.IBddRunContext;\n+import org.vividus.bdd.model.RunningStory;\n+import org.vividus.selenium.AbstractDesiredCapabilitiesConfigurer;\n+\n+public class BrowserStackCapabilitiesConfigurer extends AbstractDesiredCapabilitiesConfigurer\n+{\n+    private final IBddRunContext bddRunContext;\n+    private boolean browserStackEnabled;\n+\n+    public BrowserStackCapabilitiesConfigurer(IBddRunContext bddRunContext)\n+    {\n+        this.bddRunContext = bddRunContext;\n+    }\n+\n+    @Override\n+    public void configure(DesiredCapabilities desiredCapabilities)\n+    {\n+        if (browserStackEnabled)\n+        {\n+            Optional.ofNullable(bddRunContext.getRunningStory())\n+                    .map(RunningStory::getName)\n+                    .ifPresent(n -> putNestedCapability(desiredCapabilities, \"bstack:options\", \"sessionName\", n));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0ce53f21bbea2e11beae937a0e2b0daccc70ba"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzk4NjQyOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-browserstack/src/main/resources/spring.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDo0OTo0M1rOHoTMWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNTowMDo0MVrOHoTvjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAxOTU0NA==", "bodyText": "lazy-init=\"false\" - why is it needed?", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512019544", "createdAt": "2020-10-26T14:49:43Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-browserstack/src/main/resources/spring.xml", "diffHunk": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\"\n+       profile=\"browserstack\">\n+\n+    <bean class=\"org.vividus.selenium.browserstack.BrowserStackCapabilitiesConfigurer\" lazy-init=\"false\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0ce53f21bbea2e11beae937a0e2b0daccc70ba"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAyODU1OQ==", "bodyText": "removed, misunderstood some concept about collection wiring", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512028559", "createdAt": "2020-10-26T15:00:41Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-browserstack/src/main/resources/spring.xml", "diffHunk": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+       xsi:schemaLocation=\"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\"\n+       profile=\"browserstack\">\n+\n+    <bean class=\"org.vividus.selenium.browserstack.BrowserStackCapabilitiesConfigurer\" lazy-init=\"false\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAxOTU0NA=="}, "originalCommit": {"oid": "8e0ce53f21bbea2e11beae937a0e2b0daccc70ba"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwODI5MDczOnYy", "diffSide": "RIGHT", "path": "vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNTo1MDoyMVrOHoWJGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxOTozNzoxMVrOHofZfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA2Nzg2NQ==", "bodyText": "this test doesn't look correct: it has neither assert not verify\n(I see the logic of afterEach, but that's wrong: single test logic is spread across multiple methods without explicit relation)", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512067865", "createdAt": "2020-10-26T15:50:21Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium.browserstack;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+import org.vividus.bdd.context.IBddRunContext;\n+import org.vividus.bdd.model.RunningStory;\n+\n+@ExtendWith(MockitoExtension.class)\n+class BrowserStackCapabilitiesConfigurerTests\n+{\n+    @Mock private IBddRunContext bddRunContext;\n+    @Mock private DesiredCapabilities desiredCapabilities;\n+    @InjectMocks private BrowserStackCapabilitiesConfigurer configurer;\n+\n+    @AfterEach\n+    void afterEach()\n+    {\n+        verifyNoMoreInteractions(bddRunContext, desiredCapabilities);\n+    }\n+\n+    @Test\n+    void shouldNotConfigureCapabilitiesIfBrowserStackInDisabled()\n+    {\n+        configurer.setBrowserStackEnabled(false);\n+        configurer.configure(desiredCapabilities);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "673efdccfeae5f3bc67bcda5ea60c726b714ee68"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1OTk4MQ==", "bodyText": "hmm why single test logic is spread? afterEach() contains test logic that is applicable for all the tests in this class, additionally the verification in afterEach makes all verifications in this test redundant", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512159981", "createdAt": "2020-10-26T17:56:14Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium.browserstack;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+import org.vividus.bdd.context.IBddRunContext;\n+import org.vividus.bdd.model.RunningStory;\n+\n+@ExtendWith(MockitoExtension.class)\n+class BrowserStackCapabilitiesConfigurerTests\n+{\n+    @Mock private IBddRunContext bddRunContext;\n+    @Mock private DesiredCapabilities desiredCapabilities;\n+    @InjectMocks private BrowserStackCapabilitiesConfigurer configurer;\n+\n+    @AfterEach\n+    void afterEach()\n+    {\n+        verifyNoMoreInteractions(bddRunContext, desiredCapabilities);\n+    }\n+\n+    @Test\n+    void shouldNotConfigureCapabilitiesIfBrowserStackInDisabled()\n+    {\n+        configurer.setBrowserStackEnabled(false);\n+        configurer.configure(desiredCapabilities);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA2Nzg2NQ=="}, "originalCommit": {"oid": "673efdccfeae5f3bc67bcda5ea60c726b714ee68"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIxOTUxOQ==", "bodyText": "#1067 adding unit testing agreement to avoid test business logic in before and after each", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512219519", "createdAt": "2020-10-26T19:37:11Z", "author": {"login": "uarlouski"}, "path": "vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium.browserstack;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+import org.vividus.bdd.context.IBddRunContext;\n+import org.vividus.bdd.model.RunningStory;\n+\n+@ExtendWith(MockitoExtension.class)\n+class BrowserStackCapabilitiesConfigurerTests\n+{\n+    @Mock private IBddRunContext bddRunContext;\n+    @Mock private DesiredCapabilities desiredCapabilities;\n+    @InjectMocks private BrowserStackCapabilitiesConfigurer configurer;\n+\n+    @AfterEach\n+    void afterEach()\n+    {\n+        verifyNoMoreInteractions(bddRunContext, desiredCapabilities);\n+    }\n+\n+    @Test\n+    void shouldNotConfigureCapabilitiesIfBrowserStackInDisabled()\n+    {\n+        configurer.setBrowserStackEnabled(false);\n+        configurer.configure(desiredCapabilities);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA2Nzg2NQ=="}, "originalCommit": {"oid": "673efdccfeae5f3bc67bcda5ea60c726b714ee68"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwOTIwNjA1OnYy", "diffSide": "RIGHT", "path": "vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxOToyNjoxNFrOHofBbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxOToyNjoxNFrOHofBbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjIxMzM1OA==", "bodyText": "verifyNoMoreInteractions -> verifyNoInteractions", "url": "https://github.com/vividus-framework/vividus/pull/1066#discussion_r512213358", "createdAt": "2020-10-26T19:26:14Z", "author": {"login": "valfirst"}, "path": "vividus-plugin-browserstack/src/test/java/org/vividus/selenium/browserstack/BrowserStackCapabilitiesConfigurerTests.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2019-2020 the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.vividus.selenium.browserstack;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.openqa.selenium.remote.DesiredCapabilities;\n+import org.vividus.bdd.context.IBddRunContext;\n+import org.vividus.bdd.model.RunningStory;\n+\n+@ExtendWith(MockitoExtension.class)\n+class BrowserStackCapabilitiesConfigurerTests\n+{\n+    @Mock private IBddRunContext bddRunContext;\n+    @Mock private DesiredCapabilities desiredCapabilities;\n+    @InjectMocks private BrowserStackCapabilitiesConfigurer configurer;\n+\n+    @Test\n+    void shouldNotConfigureCapabilitiesIfBrowserStackInDisabled()\n+    {\n+        configurer.setBrowserStackEnabled(false);\n+        configurer.configure(desiredCapabilities);\n+        verifyNoMoreInteractions(bddRunContext, desiredCapabilities);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae3384cb0cc4f230317cd15f13c36bcc78d571cd"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 35, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}