{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNDUzMjE2", "number": 1254, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDowNjo1NlrOFHMoxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDowNjo1NlrOFHMoxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDkxMzk5OnYy", "diffSide": "RIGHT", "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/steps/VariableResolverTests.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDowNjo1NlrOIIkKMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODoxOToxMVrOIJPzeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg1MTk1Mw==", "bodyText": "why is lenient required now?", "url": "https://github.com/vividus-framework/vividus/pull/1254#discussion_r545851953", "createdAt": "2020-12-18T14:06:56Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/steps/VariableResolverTests.java", "diffHunk": "@@ -61,11 +61,13 @@ private Object convert(String value)\n             \" ${var:default},                       var:default,     value, value\",\n             \" ${var:},                              var:,            value, value\",\n             \" '{\\\"ids\\\": [\\\"${var}\\\", \\\"12-ce\\\"]}', var,             value, '{\\\"ids\\\": [\\\"value\\\", \\\"12-ce\\\"]}'\",\n-            \" ${var${varPartName}},                 varPartName,     value, ${varvalue}\"\n+            \" ${var${varPartName}},                 varPartName,     value, ${varvalue}\",\n+            \" '#{exp(\\\\}{BNS_TRX_ID=, A, ${var})}', var,             value, '#{exp(\\\\}{BNS_TRX_ID=, A, value)}'\",\n+            \" [JAVA_HOME=].*[^${PATH}].*,           var,             value, [JAVA_HOME=].*[^${PATH}].*\"\n     })\n     void shouldResolveVariables(String valueToResolve, String variableKey, String variableValue, String expected)\n     {\n-        when(bddVariableContext.getVariable(variableKey)).thenReturn(variableValue);\n+        lenient().when(bddVariableContext.getVariable(variableKey)).thenReturn(variableValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d96e1228d8dd0c9c2a2609c50f2f74dc8a137d72"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2MTE5Ng==", "bodyText": "Because there is an unnecessary mocking for the last example, but I feel it is better to keep all the cases in one place", "url": "https://github.com/vividus-framework/vividus/pull/1254#discussion_r546561196", "createdAt": "2020-12-21T08:04:35Z", "author": {"login": "ikalinin1"}, "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/steps/VariableResolverTests.java", "diffHunk": "@@ -61,11 +61,13 @@ private Object convert(String value)\n             \" ${var:default},                       var:default,     value, value\",\n             \" ${var:},                              var:,            value, value\",\n             \" '{\\\"ids\\\": [\\\"${var}\\\", \\\"12-ce\\\"]}', var,             value, '{\\\"ids\\\": [\\\"value\\\", \\\"12-ce\\\"]}'\",\n-            \" ${var${varPartName}},                 varPartName,     value, ${varvalue}\"\n+            \" ${var${varPartName}},                 varPartName,     value, ${varvalue}\",\n+            \" '#{exp(\\\\}{BNS_TRX_ID=, A, ${var})}', var,             value, '#{exp(\\\\}{BNS_TRX_ID=, A, value)}'\",\n+            \" [JAVA_HOME=].*[^${PATH}].*,           var,             value, [JAVA_HOME=].*[^${PATH}].*\"\n     })\n     void shouldResolveVariables(String valueToResolve, String variableKey, String variableValue, String expected)\n     {\n-        when(bddVariableContext.getVariable(variableKey)).thenReturn(variableValue);\n+        lenient().when(bddVariableContext.getVariable(variableKey)).thenReturn(variableValue);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg1MTk1Mw=="}, "originalCommit": {"oid": "d96e1228d8dd0c9c2a2609c50f2f74dc8a137d72"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU2NzAzMg==", "bodyText": "in this case the last value can be moved to shouldReturnTheSameValueWhenNothingToResolve", "url": "https://github.com/vividus-framework/vividus/pull/1254#discussion_r546567032", "createdAt": "2020-12-21T08:19:11Z", "author": {"login": "valfirst"}, "path": "vividus-bdd-engine/src/test/java/org/vividus/bdd/steps/VariableResolverTests.java", "diffHunk": "@@ -61,11 +61,13 @@ private Object convert(String value)\n             \" ${var:default},                       var:default,     value, value\",\n             \" ${var:},                              var:,            value, value\",\n             \" '{\\\"ids\\\": [\\\"${var}\\\", \\\"12-ce\\\"]}', var,             value, '{\\\"ids\\\": [\\\"value\\\", \\\"12-ce\\\"]}'\",\n-            \" ${var${varPartName}},                 varPartName,     value, ${varvalue}\"\n+            \" ${var${varPartName}},                 varPartName,     value, ${varvalue}\",\n+            \" '#{exp(\\\\}{BNS_TRX_ID=, A, ${var})}', var,             value, '#{exp(\\\\}{BNS_TRX_ID=, A, value)}'\",\n+            \" [JAVA_HOME=].*[^${PATH}].*,           var,             value, [JAVA_HOME=].*[^${PATH}].*\"\n     })\n     void shouldResolveVariables(String valueToResolve, String variableKey, String variableValue, String expected)\n     {\n-        when(bddVariableContext.getVariable(variableKey)).thenReturn(variableValue);\n+        lenient().when(bddVariableContext.getVariable(variableKey)).thenReturn(variableValue);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg1MTk1Mw=="}, "originalCommit": {"oid": "d96e1228d8dd0c9c2a2609c50f2f74dc8a137d72"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4906, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}