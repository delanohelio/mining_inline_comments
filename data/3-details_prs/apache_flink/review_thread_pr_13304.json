{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NzQwMzMy", "number": 13304, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMjoxNzoxNFrOEfylPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzowMDowN1rOEf2WwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzcwMDQ0OnYy", "diffSide": "RIGHT", "path": "flink-python/pyflink/table/tests/test_pandas_udf.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMjoxNzoxNFrOHMSzYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMjoxNzoxNFrOHMSzYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY1MzAyNw==", "bodyText": "combine to one string?", "url": "https://github.com/apache/flink/pull/13304#discussion_r482653027", "createdAt": "2020-09-03T02:17:14Z", "author": {"login": "WeiZhong94"}, "path": "flink-python/pyflink/table/tests/test_pandas_udf.py", "diffHunk": "@@ -58,8 +59,8 @@ def test_basic_functionality(self):\n \n         t = self.t_env.from_elements([(1, 2, 3), (2, 5, 6), (3, 1, 9)], ['a', 'b', 'c'])\n         exec_insert_table(\n-            t.where(\"add_one(b) <= 3\").select(\"a, b + 1, add(a + 1, subtract_one(c)) + 2, \"\n-                                              \"add(add_one(a), 1L)\"),\n+            t.where(E.call('add_one', t.b) <= 3)\n+             .select(\"a, b + 1, add(a + 1, subtract_one(c)) + 2, \" \"add(add_one(a), 1L)\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d308fe842311e794be70b21c1f9335c93fb29b5b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzc3MDYwOnYy", "diffSide": "RIGHT", "path": "flink-python/pyflink/table/tests/test_window.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMjozMDo0OVrOHMTiig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMjozMDo0OVrOHMTiig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY2NTA5OA==", "bodyText": "\".rows\" seems not supported. Maybe we should support it or use \"row_interval()\" instead?", "url": "https://github.com/apache/flink/pull/13304#discussion_r482665098", "createdAt": "2020-09-03T02:30:49Z", "author": {"login": "WeiZhong94"}, "path": "flink-python/pyflink/table/tests/test_window.py", "diffHunk": "@@ -40,8 +41,8 @@ class BatchTableWindowTests(PyFlinkBatchTableTestCase):\n \n     def test_tumble_window(self):\n         t = self.t_env.from_elements([(1, 1, \"Hello\")], [\"a\", \"b\", \"c\"])\n-        result = t.window(Tumble.over(\"2.rows\").on(\"a\").alias(\"w\"))\\\n-            .group_by(\"w, c\").select(\"b.sum\")\n+        result = t.window(Tumble.over(E.lit(2).rows).on(\"a\").alias(\"w\"))\\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d308fe842311e794be70b21c1f9335c93fb29b5b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODIwMDI4OnYy", "diffSide": "RIGHT", "path": "flink-python/pyflink/table/examples/batch/word_count.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoyMDo1OVrOHMXetw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjoyMDo1OVrOHMXetw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyOTY1NQ==", "bodyText": "How about  E -> expr(Shorthand in lowercase)? some as pandas did?  e.g.: import numpy as np\nhttps://github.com/pandas-dev/pandas/blob/master/pandas/tests/dtypes/test_dtypes.py", "url": "https://github.com/apache/flink/pull/13304#discussion_r482729655", "createdAt": "2020-09-03T06:20:59Z", "author": {"login": "sunjincheng121"}, "path": "flink-python/pyflink/table/examples/batch/word_count.py", "diffHunk": "@@ -23,6 +23,7 @@\n \n from pyflink.dataset import ExecutionEnvironment\n from pyflink.table import BatchTableEnvironment, TableConfig\n+from pyflink.table import expressions as E", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad8edefaaa28a0459b40b3587013d9ca7c14933"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODI4MDc3OnYy", "diffSide": "RIGHT", "path": "flink-python/pyflink/table/tests/test_calc.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjo0ODowM1rOHMYORA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjo0ODowM1rOHMYORA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0MTgyOA==", "bodyText": "How about do a little bit change as follows?:\n t2 = t.alias(\"d, e, f\")\n result = t2.select(t2.d, t2.e, t2.f)", "url": "https://github.com/apache/flink/pull/13304#discussion_r482741828", "createdAt": "2020-09-03T06:48:03Z", "author": {"login": "sunjincheng121"}, "path": "flink-python/pyflink/table/tests/test_calc.py", "diffHunk": "@@ -31,21 +32,21 @@ class StreamTableCalcTests(PyFlinkStreamTableTestCase):\n \n     def test_select(self):\n         t = self.t_env.from_elements([(1, 'hi', 'hello')], ['a', 'b', 'c'])\n-        result = t.select(\"a + 1, b, c\")\n+        result = t.select(t.a + 1, t.b, t.c)\n         query_operation = result._j_table.getQueryOperation()\n         self.assertEqual('[plus(a, 1), b, c]',\n                          query_operation.getProjectList().toString())\n \n     def test_alias(self):\n         t = self.t_env.from_elements([(1, 'Hi', 'Hello')], ['a', 'b', 'c'])\n-        result = t.alias(\"d, e, f\").select(\"d, e, f\")\n+        result = t.alias(\"d, e, f\").select(E.col('d'), E.col('e'), E.col('f'))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad8edefaaa28a0459b40b3587013d9ca7c14933"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODI5NTU3OnYy", "diffSide": "RIGHT", "path": "flink-python/pyflink/table/tests/test_column_operation.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjo1Mjo1N1rOHMYXGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjo1Mjo1N1rOHMYXGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0NDA4OA==", "bodyText": "t.select(\"a, b, c\") -> t.select(t.a, t.b, t.c)\nE.col('a') -> t.a?", "url": "https://github.com/apache/flink/pull/13304#discussion_r482744088", "createdAt": "2020-09-03T06:52:57Z", "author": {"login": "sunjincheng121"}, "path": "flink-python/pyflink/table/tests/test_column_operation.py", "diffHunk": "@@ -16,36 +16,37 @@\n # limitations under the License.\n ################################################################################\n \n+from pyflink.table import expressions as E\n from pyflink.testing.test_case_utils import PyFlinkStreamTableTestCase\n \n \n class StreamTableColumnsOperationTests(PyFlinkStreamTableTestCase):\n \n     def test_add_columns(self):\n         t = self.t_env.from_elements([(1, 'Hi', 'Hello')], ['a', 'b', 'c'])\n-        result = t.select(\"a\").add_columns(\"a + 1 as b, a + 2 as c\")\n+        result = t.select(t.a).add_columns((t.a + 1).alias('b'), (t.a + 2).alias('c'))\n         query_operation = result._j_table.getQueryOperation()\n         self.assertEqual('[a, plus(a, 1), '\n                          'plus(a, 2)]',\n                          query_operation.getProjectList().toString())\n \n     def test_add_or_replace_columns(self):\n         t = self.t_env.from_elements([(1, 'Hi', 'Hello')], ['a', 'b', 'c'])\n-        result = t.select(\"a\").add_or_replace_columns(\"a + 1 as b, a + 2 as a\")\n+        result = t.select(\"a\").add_or_replace_columns((t.a + 1).alias('b'), (t.a + 2).alias('a'))\n         query_operation = result._j_table.getQueryOperation()\n         self.assertEqual('[plus(a, 2), '\n                          'plus(a, 1)]',\n                          query_operation.getProjectList().toString())\n \n     def test_rename_columns(self):\n         t = self.t_env.from_elements([(1, 'Hi', 'Hello')], ['a', 'b', 'c'])\n-        result = t.select(\"a, b, c\").rename_columns(\"a as d, c as f, b as e\")\n+        result = t.select(\"a, b, c\").rename_columns(t.a.alias('d'), t.c.alias('f'), t.b.alias('e'))\n         table_schema = result._j_table.getQueryOperation().getTableSchema()\n         self.assertEqual(['d', 'e', 'f'], list(table_schema.getFieldNames()))\n \n     def test_drop_columns(self):\n         t = self.t_env.from_elements([(1, 'Hi', 'Hello')], ['a', 'b', 'c'])\n-        result = t.select(\"a, b, c\").drop_columns(\"a, c\")\n+        result = t.select(\"a, b, c\").drop_columns(E.col('a'), E.col('c'))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad8edefaaa28a0459b40b3587013d9ca7c14933"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODMxMjAzOnYy", "diffSide": "RIGHT", "path": "flink-python/pyflink/table/tests/test_correlate.py", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNjo1Nzo1MlrOHMYgvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwOToyNjoxOVrOHMeGEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0NjU1OA==", "bodyText": "E.col('id') == E.col('word') -> source.id == source.word", "url": "https://github.com/apache/flink/pull/13304#discussion_r482746558", "createdAt": "2020-09-03T06:57:52Z", "author": {"login": "sunjincheng121"}, "path": "flink-python/pyflink/table/tests/test_correlate.py", "diffHunk": "@@ -39,7 +40,8 @@ def test_join_lateral_with_join_predicate(self):\n                                                     \"org.apache.flink.table.utils.TableFunc1\")\n         source = t_env.from_elements([(\"1\", \"1#3#5#7\"), (\"2\", \"2#4#6#8\")], [\"id\", \"words\"])\n \n-        result = source.join_lateral(\"split(words) as (word)\", \"id = word\")\n+        result = source.join_lateral(E.call('split', source.words).alias('word'),\n+                                     E.col('id') == E.col('word'))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad8edefaaa28a0459b40b3587013d9ca7c14933"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgxNjg5Nw==", "bodyText": "word is not from the source table and so we could not do that.", "url": "https://github.com/apache/flink/pull/13304#discussion_r482816897", "createdAt": "2020-09-03T08:54:02Z", "author": {"login": "dianfu"}, "path": "flink-python/pyflink/table/tests/test_correlate.py", "diffHunk": "@@ -39,7 +40,8 @@ def test_join_lateral_with_join_predicate(self):\n                                                     \"org.apache.flink.table.utils.TableFunc1\")\n         source = t_env.from_elements([(\"1\", \"1#3#5#7\"), (\"2\", \"2#4#6#8\")], [\"id\", \"words\"])\n \n-        result = source.join_lateral(\"split(words) as (word)\", \"id = word\")\n+        result = source.join_lateral(E.call('split', source.words).alias('word'),\n+                                     E.col('id') == E.col('word'))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0NjU1OA=="}, "originalCommit": {"oid": "8ad8edefaaa28a0459b40b3587013d9ca7c14933"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjgzODAzMw==", "bodyText": "Yes, I see.", "url": "https://github.com/apache/flink/pull/13304#discussion_r482838033", "createdAt": "2020-09-03T09:26:19Z", "author": {"login": "sunjincheng121"}, "path": "flink-python/pyflink/table/tests/test_correlate.py", "diffHunk": "@@ -39,7 +40,8 @@ def test_join_lateral_with_join_predicate(self):\n                                                     \"org.apache.flink.table.utils.TableFunc1\")\n         source = t_env.from_elements([(\"1\", \"1#3#5#7\"), (\"2\", \"2#4#6#8\")], [\"id\", \"words\"])\n \n-        result = source.join_lateral(\"split(words) as (word)\", \"id = word\")\n+        result = source.join_lateral(E.call('split', source.words).alias('word'),\n+                                     E.col('id') == E.col('word'))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0NjU1OA=="}, "originalCommit": {"oid": "8ad8edefaaa28a0459b40b3587013d9ca7c14933"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODMxODczOnYy", "diffSide": "RIGHT", "path": "flink-python/pyflink/table/tests/test_dependency.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzowMDowN1rOHMYkrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzowMDowN1rOHMYkrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0NzU2Nw==", "bodyText": "E.col('a') -> t.a", "url": "https://github.com/apache/flink/pull/13304#discussion_r482747567", "createdAt": "2020-09-03T07:00:07Z", "author": {"login": "sunjincheng121"}, "path": "flink-python/pyflink/table/tests/test_dependency.py", "diffHunk": "@@ -112,7 +113,7 @@ def check_requirements(i):\n             ['a', 'b'], [DataTypes.BIGINT(), DataTypes.BIGINT()])\n         self.t_env.register_table_sink(\"Results\", table_sink)\n         t = self.t_env.from_elements([(1, 2), (2, 5), (3, 1)], ['a', 'b'])\n-        exec_insert_table(t.select(\"check_requirements(a), a\"), \"Results\")\n+        exec_insert_table(t.select(E.call('check_requirements', E.col('a')), E.col('a')), \"Results\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad8edefaaa28a0459b40b3587013d9ca7c14933"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 404, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}