{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5MDA1OTI1", "number": 14029, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNzoyNDowOFrOE3lgeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNzo1Mjo0M1rOE3mADw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzIxNjU3OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/SourceWatermarkITCase.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNzoyNDowOFrOHxBVWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNzoyNDowOFrOHxBVWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE2NDEyMw==", "bodyText": "instead of replacing the existing row, I tend to add a new row", "url": "https://github.com/apache/flink/pull/14029#discussion_r521164123", "createdAt": "2020-11-11T07:24:08Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/SourceWatermarkITCase.scala", "diffHunk": "@@ -39,7 +39,7 @@ class SourceWatermarkITCase extends StreamingTestBase{\n   def testWatermarkWithNestedRow(): Unit = {\n     val data = Seq(\n       row(1, 2L, row(\"i1\", row(\"i2\", LocalDateTime.parse(\"2020-11-21T19:00:05.23\")))),\n-      row(2, 3L, row(\"j1\", row(\"j2\", LocalDateTime.parse(\"2020-11-21T21:00:05.23\"))))\n+      row(2, 3L, row(\"j1\", row(\"j2\", null)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a128055b2b0d97ce6673363c7885c97b17ba6e07"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NzI5NzQzOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/PushWatermarkIntoTableSourceScanRuleBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNzo1Mjo0M1rOHxCFBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNzo1Mjo0M1rOHxCFBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE3NjMyNQ==", "bodyText": "Do not calculate it again.", "url": "https://github.com/apache/flink/pull/14029#discussion_r521176325", "createdAt": "2020-11-11T07:52:43Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/PushWatermarkIntoTableSourceScanRuleBase.java", "diffHunk": "@@ -180,7 +180,10 @@ public DefaultWatermarkGenerator(\n \t\t\t@Override\n \t\t\tpublic void onEvent(RowData event, long eventTimestamp, WatermarkOutput output) {\n \t\t\t\ttry {\n-\t\t\t\t\tcurrentWatermark = innerWatermarkGenerator.currentWatermark(event);\n+\t\t\t\t\tLong watermark = innerWatermarkGenerator.currentWatermark(event);\n+\t\t\t\t\tif (watermark != null) {\n+\t\t\t\t\t\tcurrentWatermark = innerWatermarkGenerator.currentWatermark(event);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "820895764bfe9e83648c470a53f19fe232ce6518"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4881, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}