{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NTM3NzAy", "number": 14224, "title": "[FLINK-20274][docs-zh] Translate page 'testing' into Chinese", "bodyText": "What is the purpose of the change\nTranslate page \"testing\" into Chinese.\nthe page url is https://ci.apache.org/projects/flink/flink-docs-master/zh/dev/stream/testing.html.\nThe doc located in \"flink/docs/dev/stream/testing.zh.md\"\nBrief change log\n\ntranslate \"flink/docs/dev/stream/testing.zh.md\"\n\nVerifying this change\nThis change is a trivial rework / code cleanup without any test coverage.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? no", "createdAt": "2020-11-25T15:47:05Z", "url": "https://github.com/apache/flink/pull/14224", "merged": true, "mergeCommit": {"oid": "0a354c74598114c7966edc5e68be78979ba2a488"}, "closed": true, "closedAt": "2020-12-01T11:37:16Z", "author": {"login": "metaotao"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgARHBAH2gAyNTI3NTM3NzAyOmU2Y2U4NTBhZTBkMmVlOTMzZmJiNTE5NTY3NmI3Mzg2ODkxNmRhODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh4Wv4AFqTU0MTgxMDA3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e6ce850ae0d2ee933fbb5195676b73868916da88", "author": {"user": {"login": "metaotao", "name": "Flora Tao"}}, "url": "https://github.com/apache/flink/commit/e6ce850ae0d2ee933fbb5195676b73868916da88", "committedDate": "2020-11-25T15:41:30Z", "message": "[FLINK-20274][docs-zh] Translate page 'testing' into Chinese"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNTYxODA0", "url": "https://github.com/apache/flink/pull/14224#pullrequestreview-540561804", "createdAt": "2020-11-30T02:20:41Z", "commit": {"oid": "e6ce850ae0d2ee933fbb5195676b73868916da88"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwMjoyMDo0MVrOH7p4-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwMzowMToxMVrOH7qcTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxNDM2MQ==", "bodyText": "\u7f3a\u4e86\u4e3b\u8bed\n\"\u7684\" -> \"\u5730\"", "url": "https://github.com/apache/flink/pull/14224#discussion_r532314361", "createdAt": "2020-11-30T02:20:41Z", "author": {"login": "fsk119"}, "path": "docs/dev/stream/testing.zh.md", "diffHunk": "@@ -62,7 +62,7 @@ class IncrementMapFunction extends MapFunction[Long, Long] {\n </div>\n </div>\n \n-It is very easy to unit test such a function with your favorite testing framework by passing suitable arguments and verifying the output.\n+\u901a\u8fc7\u4f20\u9012\u5408\u9002\u7684\u53c2\u6570\u5e76\u9a8c\u8bc1\u8f93\u51fa\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u4f7f\u7528\u4f60\u559c\u6b22\u7684\u6d4b\u8bd5\u6846\u67b6\u5bf9\u8fd9\u6837\u7684\u51fd\u6570\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ce850ae0d2ee933fbb5195676b73868916da88"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxNDk0Nw==", "bodyText": "\u6d4b\u8bd5\u4f7f\u7528\u7ba1\u7406\u72b6\u6001\u6216\u5b9a\u65f6\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u529f\u80fd\u66f4\u52a0\u56f0\u96be -> \u5bf9\u4f7f\u7528\u7ba1\u7406\u72b6\u6001\u6216\u5b9a\u65f6\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u529f\u80fd\u6d4b\u8bd5\u4f1a\u66f4\u52a0\u56f0\u96be", "url": "https://github.com/apache/flink/pull/14224#discussion_r532314947", "createdAt": "2020-11-30T02:23:17Z", "author": {"login": "fsk119"}, "path": "docs/dev/stream/testing.zh.md", "diffHunk": "@@ -142,17 +142,17 @@ class IncrementFlatMapFunctionTest extends FlatSpec with MockFactory {\n </div>\n </div>\n \n-### Unit Testing Stateful or Timely UDFs & Custom Operators\n+### \u5bf9\u6709\u72b6\u6001\u6216\u53ca\u65f6 UDF \u548c\u81ea\u5b9a\u4e49\u7b97\u5b50\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\n \n-Testing the functionality of a user-defined function, which makes use of managed state or timers is more difficult because it involves testing the interaction between the user code and Flink's runtime.\n-For this Flink comes with a collection of so called test harnesses, which can be used to test such user-defined functions as well as custom operators:\n+\u6d4b\u8bd5\u4f7f\u7528\u7ba1\u7406\u72b6\u6001\u6216\u5b9a\u65f6\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u529f\u80fd\u66f4\u52a0\u56f0\u96be\uff0c\u56e0\u4e3a\u5b83\u6d89\u53ca\u5230\u6d4b\u8bd5\u7528\u6237\u4ee3\u7801\u548c Flink \u8fd0\u884c\u65f6\u7684\u4ea4\u4e92\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ce850ae0d2ee933fbb5195676b73868916da88"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxNTkwOA==", "bodyText": "'assert' -> \u6821\u9a8c", "url": "https://github.com/apache/flink/pull/14224#discussion_r532315908", "createdAt": "2020-11-30T02:27:17Z", "author": {"login": "fsk119"}, "path": "docs/dev/stream/testing.zh.md", "diffHunk": "@@ -177,7 +177,7 @@ To use the test harnesses a set of additional dependencies (test scoped) is need\n </dependency>\n {% endhighlight %}\n \n-Now, the test harnesses can be used to push records and watermarks into your user-defined functions or custom operators, control processing time and finally assert on the output of the operator (including side outputs).\n+\u73b0\u5728\uff0c\u53ef\u4ee5\u4f7f\u7528\u6d4b\u8bd5\u5de5\u5177\u5c06\u8bb0\u5f55\u548c watermark \u63a8\u9001\u5230\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u6216\u81ea\u5b9a\u4e49\u7b97\u5b50\u4e2d\uff0c\u63a7\u5236\u5904\u7406\u65f6\u95f4\uff0c\u6700\u540e\u5bf9\u7b97\u5b50\u7684\u8f93\u51fa\uff08\u5305\u62ec\u65c1\u8def\u8f93\u51fa\uff09\u8fdb\u884c\u65ad\u8a00\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ce850ae0d2ee933fbb5195676b73868916da88"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxNjY5MA==", "bodyText": "\u628a \u201cclass of the key\u201d  \u7ffb\u8bd1\u6210\u952e\u7c7b\u5f88\u5947\u602a\uff0c\u4e5f\u4e0d\u76f4\u89c2\u3002\u611f\u89c9\u7ffb\u8bd1\u6210 \u7c7b\u7684\u952e \u66f4\u597d\u4e00\u70b9\u3002", "url": "https://github.com/apache/flink/pull/14224#discussion_r532316690", "createdAt": "2020-11-30T02:31:01Z", "author": {"login": "fsk119"}, "path": "docs/dev/stream/testing.zh.md", "diffHunk": "@@ -270,7 +270,7 @@ class StatefulFlatMapFunctionTest extends FlatSpec with Matchers with BeforeAndA\n </div>\n </div>\n \n-`KeyedOneInputStreamOperatorTestHarness` and `KeyedTwoInputStreamOperatorTestHarness` are instantiated by additionally providing a `KeySelector` including `TypeInformation` for the class of the key.\n+`KeyedOneInputStreamOperatorTestHarness` \u548c `KeyedTwoInputStreamOperatorTestHarness` \u53ef\u4ee5\u901a\u8fc7\u4e3a\u952e\u7c7b\u53e6\u5916\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b `TypeInformation` \u7684 `KeySelector` \u6765\u5b9e\u4f8b\u5316\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ce850ae0d2ee933fbb5195676b73868916da88"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxNzIxMw==", "bodyText": "\"make sources and sinks pluggable in your production code\" -> \u8ba9\u4f60\u7684source && sink \u5728\u751f\u4ea7\u4ee3\u7801\u4e2d\u662f\u53ef\u63d2\u62d4\u7684\nIn test env, it's more easily to test the pipeline with the test source/sink, e.g DataGen && Blackhole.", "url": "https://github.com/apache/flink/pull/14224#discussion_r532317213", "createdAt": "2020-11-30T02:33:42Z", "author": {"login": "fsk119"}, "path": "docs/dev/stream/testing.zh.md", "diffHunk": "@@ -568,20 +568,20 @@ object CollectSink {\n </div>\n </div>\n \n-A few remarks on integration testing with `MiniClusterWithClientResource`:\n+\u5173\u4e8e\u4f7f\u7528 `MiniClusterWithClientResource` \u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\u7684\u51e0\u70b9\u5907\u6ce8\uff1a\n \n-* In order not to copy your whole pipeline code from production to test, make sources and sinks pluggable in your production code and inject special test sources and test sinks in your tests.\n+* \u4e3a\u4e86\u4e0d\u5c06\u6574\u4e2a pipeline \u4ee3\u7801\u4ece\u751f\u4ea7\u590d\u5236\u5230\u6d4b\u8bd5\uff0c\u8bf7\u5c06 source \u548c sink \u63d2\u5165\u5230\u751f\u4ea7\u4ee3\u7801\u4e2d\uff0c\u5e76\u5728\u6d4b\u8bd5\u4e2d\u6ce8\u5165\u7279\u6b8a\u7684\u6d4b\u8bd5 source \u548c\u6d4b\u8bd5 sink\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ce850ae0d2ee933fbb5195676b73868916da88"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxOTIxNw==", "bodyText": "The static variable in CollectSink is used here\n\nI think it's more straightforward to illustrate which static field is used. Therefore, I think we'd better to modify to\n\"The static variable values in CollectSink\"", "url": "https://github.com/apache/flink/pull/14224#discussion_r532319217", "createdAt": "2020-11-30T02:43:02Z", "author": {"login": "fsk119"}, "path": "docs/dev/stream/testing.zh.md", "diffHunk": "@@ -568,20 +568,20 @@ object CollectSink {\n </div>\n </div>\n \n-A few remarks on integration testing with `MiniClusterWithClientResource`:\n+\u5173\u4e8e\u4f7f\u7528 `MiniClusterWithClientResource` \u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\u7684\u51e0\u70b9\u5907\u6ce8\uff1a\n \n-* In order not to copy your whole pipeline code from production to test, make sources and sinks pluggable in your production code and inject special test sources and test sinks in your tests.\n+* \u4e3a\u4e86\u4e0d\u5c06\u6574\u4e2a pipeline \u4ee3\u7801\u4ece\u751f\u4ea7\u590d\u5236\u5230\u6d4b\u8bd5\uff0c\u8bf7\u5c06 source \u548c sink \u63d2\u5165\u5230\u751f\u4ea7\u4ee3\u7801\u4e2d\uff0c\u5e76\u5728\u6d4b\u8bd5\u4e2d\u6ce8\u5165\u7279\u6b8a\u7684\u6d4b\u8bd5 source \u548c\u6d4b\u8bd5 sink\u3002\n \n-* The static variable in `CollectSink` is used here because Flink serializes all operators before distributing them across a cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ce850ae0d2ee933fbb5195676b73868916da88"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxOTY0Ng==", "bodyText": "\"\u9759\u6001\u53d8\u91cf\u5b9e\u4f8b\u5316\u7684\u7b97\u5b50\" -> \"\u5b9e\u4f8b\u5316\u7b97\u5b50\u7684\u9759\u6001\u53d8\u91cf\"", "url": "https://github.com/apache/flink/pull/14224#discussion_r532319646", "createdAt": "2020-11-30T02:44:51Z", "author": {"login": "fsk119"}, "path": "docs/dev/stream/testing.zh.md", "diffHunk": "@@ -568,20 +568,20 @@ object CollectSink {\n </div>\n </div>\n \n-A few remarks on integration testing with `MiniClusterWithClientResource`:\n+\u5173\u4e8e\u4f7f\u7528 `MiniClusterWithClientResource` \u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\u7684\u51e0\u70b9\u5907\u6ce8\uff1a\n \n-* In order not to copy your whole pipeline code from production to test, make sources and sinks pluggable in your production code and inject special test sources and test sinks in your tests.\n+* \u4e3a\u4e86\u4e0d\u5c06\u6574\u4e2a pipeline \u4ee3\u7801\u4ece\u751f\u4ea7\u590d\u5236\u5230\u6d4b\u8bd5\uff0c\u8bf7\u5c06 source \u548c sink \u63d2\u5165\u5230\u751f\u4ea7\u4ee3\u7801\u4e2d\uff0c\u5e76\u5728\u6d4b\u8bd5\u4e2d\u6ce8\u5165\u7279\u6b8a\u7684\u6d4b\u8bd5 source \u548c\u6d4b\u8bd5 sink\u3002\n \n-* The static variable in `CollectSink` is used here because Flink serializes all operators before distributing them across a cluster.\n-Communicating with operators instantiated by a local Flink mini cluster via static variables is one way around this issue.\n-Alternatively, you could write the data to files in a temporary directory with your test sink.\n+* \u8fd9\u91cc\u4f7f\u7528 `CollectSink` \u4e2d\u7684\u9759\u6001\u53d8\u91cf\uff0c\u662f\u56e0\u4e3aFlink \u5728\u5c06\u6240\u6709\u7b97\u5b50\u5206\u5e03\u5230\u6574\u4e2a\u96c6\u7fa4\u4e4b\u524d\u5148\u5bf9\u5176\u8fdb\u884c\u4e86\u5e8f\u5217\u5316\u3002\n+\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4e0e\u672c\u5730 Flink \u5c0f\u578b\u96c6\u7fa4\u901a\u8fc7\u9759\u6001\u53d8\u91cf\u5b9e\u4f8b\u5316\u7684\u7b97\u5b50\u8fdb\u884c\u901a\u4fe1\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ce850ae0d2ee933fbb5195676b73868916da88"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMyMTk1NQ==", "bodyText": "\u4f7f\u7528 org.apache.flink.util.Collector \u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\n\n\u52a0\u4e2a \u201c\u5bf9\u4e8e\u201d \u5728\u201c\u4f7f\u7528\u201d\u4e4b\u524d\u4f1a\u66f4\u52a0\u901a\u987a", "url": "https://github.com/apache/flink/pull/14224#discussion_r532321955", "createdAt": "2020-11-30T02:54:59Z", "author": {"login": "fsk119"}, "path": "docs/dev/stream/testing.zh.md", "diffHunk": "@@ -97,7 +97,7 @@ class IncrementMapFunctionTest extends FlatSpec with Matchers {\n </div>\n </div>\n \n-Similarly, a user-defined function which uses an `org.apache.flink.util.Collector` (e.g. a `FlatMapFunction` or `ProcessFunction`) can be easily tested by providing a mock object instead of a real collector.  A `FlatMapFunction` with the same functionality as the `IncrementMapFunction` could be unit tested as follows.\n+\u7c7b\u4f3c\u5730\uff0c\u4f7f\u7528 `org.apache.flink.util.Collector` \u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\uff08\u4f8b\u5982`FlatMapFunction` \u6216\u8005 `ProcessFunction`\uff09\uff0c\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u6a21\u62df\u5bf9\u8c61\u800c\u4e0d\u662f\u771f\u6b63\u7684 collector \u6765\u8f7b\u677e\u6d4b\u8bd5\u3002\u5177\u6709\u4e0e `IncrementMapFunction` \u76f8\u540c\u529f\u80fd\u7684 `FlatMapFunction` \u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ce850ae0d2ee933fbb5195676b73868916da88"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMyMjc5NQ==", "bodyText": "\u591a\u4e86\u4e00\u4e2a \u201c\u02d9\u201d\n\u7528\u4e24\u4e2a\u6ce8\u610f\u770b\u4e0a\u53bb\u5f88\u91cd\u590d\uff0c\u611f\u89c9\u53ef\u4ee5\u53bb\u6389\u4e00\u4e2a\u3002", "url": "https://github.com/apache/flink/pull/14224#discussion_r532322795", "createdAt": "2020-11-30T02:58:50Z", "author": {"login": "fsk119"}, "path": "docs/dev/stream/testing.zh.md", "diffHunk": "@@ -325,18 +325,18 @@ class StatefulFlatMapTest extends FlatSpec with Matchers with BeforeAndAfter {\n </div>\n </div>\n \n-Many more examples for the usage of these test harnesses can be found in the Flink code base, e.g.:\n+\u5728 Flink \u4ee3\u7801\u5e93\u91cc\u53ef\u4ee5\u627e\u5230\u66f4\u591a\u4f7f\u7528\u8fd9\u4e9b\u6d4b\u8bd5\u5de5\u5177\u7684\u793a\u4f8b\uff0c\u4f8b\u5982\uff1a\n \n-* `org.apache.flink.streaming.runtime.operators.windowing.WindowOperatorTest` is a good example for testing operators and user-defined functions, which depend on processing or event time.\n-* `org.apache.flink.streaming.api.functions.sink.filesystem.LocalStreamingFileSinkTest` shows how to test a custom sink with the `AbstractStreamOperatorTestHarness`. Specifically, it uses `AbstractStreamOperatorTestHarness.snapshot` and `AbstractStreamOperatorTestHarness.initializeState` to tests its interaction with Flink's checkpointing mechanism.\n+* `org.apache.flink.streaming.runtime.operators.windowing.WindowOperatorTest` \u662f\u6d4b\u8bd5\u7b97\u5b50\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\uff08\u53d6\u51b3\u4e8e\u5904\u7406\u65f6\u95f4\u548c\u4e8b\u4ef6\u65f6\u95f4\uff09\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\n+* `org.apache.flink.streaming.api.functions.sink.filesystem.LocalStreamingFileSinkTest` \u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 `AbstractStreamOperatorTestHarness` \u6d4b\u8bd5\u81ea\u5b9a\u4e49 sink\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u4f7f\u7528 `AbstractStreamOperatorTestHarness.snapshot` \u548c `AbstractStreamOperatorTestHarness.initializeState` \u6765\u6d4b\u8bd5\u5b83\u4e0e Flink checkpoint \u673a\u5236\u7684\u4ea4\u4e92\u3002\n \n-<span class=\"label label-info\">Note</span> Be aware that `AbstractStreamOperatorTestHarness` and its derived classes are currently not part of the public API and can be subject to change.\n+<span class=\"label label-info\">\u6ce8\u610f</span> \u8bf7\u6ce8\u610f\uff0c`AbstractStreamOperatorTestHarness` \u53ca\u5176\u6d3e\u751f\u7c7b\u76ee\u524d\u4e0d\u5c5e\u4e8e\u516c\u5171 API\uff0c\u53ef\u4ee5\u8fdb\u884c\u66f4\u6539\u3002\n \n-#### Unit Testing ProcessFunction\n+#### \u5355\u5143\u6d4b\u8bd5 Process Function\n \n-Given its importance, in addition to the previous test harnesses that can be used directly to test a `ProcessFunction`, Flink provides a test harness factory named `ProcessFunctionTestHarnesses` that allows for easier test harness instantiation. Considering this example:\n+\u8003\u8651\u5230\u5b83\u7684\u91cd\u8981\u6027\uff0c\u9664\u4e86\u4e4b\u524d\u53ef\u4ee5\u76f4\u63a5\u7528\u4e8e\u6d4b\u8bd5 `ProcessFunction` \u7684\u6d4b\u8bd5\u5de5\u5177\u4e4b\u5916\uff0cFlink \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a `ProcessFunctionTestHarnesses` \u7684\u6d4b\u8bd5\u5de5\u5177\u5de5\u5382\u7c7b\uff0c\u53ef\u4ee5\u7b80\u5316\u6d4b\u8bd5\u5de5\u5177\u7684\u5b9e\u4f8b\u5316\u3002\u8003\u8651\u4ee5\u4e0b\u793a\u4f8b\uff1a\n \n-<span class=\"label label-info\">Note</span> Be aware that to use this test harness, you also need to introduce the dependencies mentioned in the last section.\n+<span class=\"label label-info\">\u02d9\u6ce8\u610f</span> \u8bf7\u6ce8\u610f\uff0c\u8981\u4f7f\u7528\u6b64\u6d4b\u8bd5\u5de5\u5177\uff0c\u8fd8\u9700\u8981\u5f15\u5165\u4e0a\u4e00\u8282\u4e2d\u4ecb\u7ecd\u7684\u4f9d\u8d56\u9879\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ce850ae0d2ee933fbb5195676b73868916da88"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMyMzQwNQ==", "bodyText": "\u901a\u8fc7\u4f20\u9012\u5408\u9002\u7684\u53c2\u6570\uff0c\u4f7f\u7528ProcessFunctionTestHarnesses \u662f\u5f88\u5bb9\u6613\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u5e76\u9a8c\u8bc1\u8f93\u51fa\u3002", "url": "https://github.com/apache/flink/pull/14224#discussion_r532323405", "createdAt": "2020-11-30T03:01:11Z", "author": {"login": "fsk119"}, "path": "docs/dev/stream/testing.zh.md", "diffHunk": "@@ -364,7 +364,7 @@ class PassThroughProcessFunction extends ProcessFunction[Integer, Integer] {\n </div>\n </div>\n \n-It is very easy to unit test such a function with `ProcessFunctionTestHarnesses` by passing suitable arguments and verifying the output.\n+\u901a\u8fc7\u4f20\u9012\u5408\u9002\u7684\u53c2\u6570\u5e76\u9a8c\u8bc1\u8f93\u51fa\uff0c\u5bf9\u4f7f\u7528 `ProcessFunctionTestHarnesses` \u8fd9\u6837\u7684\u51fd\u6570\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6ce850ae0d2ee933fbb5195676b73868916da88"}, "originalPosition": 118}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93d71a48aa1e57c390191b3e6bfb99566d18cbe5", "author": {"user": {"login": "metaotao", "name": "Flora Tao"}}, "url": "https://github.com/apache/flink/commit/93d71a48aa1e57c390191b3e6bfb99566d18cbe5", "committedDate": "2020-11-30T15:39:00Z", "message": "append some info"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxODA5MTc0", "url": "https://github.com/apache/flink/pull/14224#pullrequestreview-541809174", "createdAt": "2020-12-01T11:35:12Z", "commit": {"oid": "93d71a48aa1e57c390191b3e6bfb99566d18cbe5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxODEwMDc2", "url": "https://github.com/apache/flink/pull/14224#pullrequestreview-541810076", "createdAt": "2020-12-01T11:36:16Z", "commit": {"oid": "93d71a48aa1e57c390191b3e6bfb99566d18cbe5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4165, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}