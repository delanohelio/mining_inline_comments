{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3ODA5NjYy", "number": 12484, "title": "[FLINK-18127][tests] Streamline manual execution of Java E2E tests", "bodyText": "With this PR it should be possible to run the Java e2e tests in the IDE without having to manually set any property.\nFor the moduleDir property we just use the current working directory, which in IntelliJ is the module that the test resides in, which is exactly what we want.\nFor distDir we move up the module tree and check for the present of flink-dist, and then drill down into its target directory to find the actual distribution.", "createdAt": "2020-06-04T12:44:32Z", "url": "https://github.com/apache/flink/pull/12484", "merged": true, "mergeCommit": {"oid": "64f8f657f7c1b5fff052394c7fa09b1208e21ba8"}, "closed": true, "closedAt": "2020-06-09T06:58:05Z", "author": {"login": "zentol"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoU5dfgFqTQyNTQyMzI2OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpTcLUgBqjM0MjEwNzI1Mzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NDIzMjY4", "url": "https://github.com/apache/flink/pull/12484#pullrequestreview-425423268", "createdAt": "2020-06-05T15:52:27Z", "commit": {"oid": "30b3c3dfdc501e2f8c54877d6a9c950e688dfd09"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNTo1MjoyN1rOGf0C5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjowMjo1OVrOGf0aeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxMTc1MA==", "bodyText": "I guess this can be removed.", "url": "https://github.com/apache/flink/pull/12484#discussion_r436011750", "createdAt": "2020-06-05T15:52:27Z", "author": {"login": "tillrohrmann"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/LocalStandaloneFlinkResourceFactory.java", "diffHunk": "@@ -33,19 +37,83 @@\n public final class LocalStandaloneFlinkResourceFactory implements FlinkResourceFactory {\n \tprivate static final Logger LOG = LoggerFactory.getLogger(LocalStandaloneFlinkResourceFactory.class);\n \n+\tprivate static final ParameterProperty<Path> PROJECT_ROOT_DIRECTORY = new ParameterProperty<>(\"rootDir\", Paths::get);\n \tprivate static final ParameterProperty<Path> DISTRIBUTION_DIRECTORY = new ParameterProperty<>(\"distDir\", Paths::get);\n \tprivate static final ParameterProperty<Path> DISTRIBUTION_LOG_BACKUP_DIRECTORY = new ParameterProperty<>(\"logBackupDir\", Paths::get);\n \n \t@Override\n \tpublic FlinkResource create(FlinkResourceSetup setup) {\n \t\tOptional<Path> distributionDirectory = DISTRIBUTION_DIRECTORY.get();\n \t\tif (!distributionDirectory.isPresent()) {\n-\t\t\tthrow new IllegalArgumentException(\"The distDir property was not set. You can set it when running maven via -DdistDir=<path> .\");\n+\t\t\t// distDir was not explicitly set, let's search for it\n+\n+\t\t\tPath projectRootPath;\n+\t\t\tOptional<Path> projectRoot = PROJECT_ROOT_DIRECTORY.get();\n+\t\t\tif (projectRoot.isPresent()) {\n+\t\t\t\t// running with maven\n+\t\t\t\tprojectRootPath = projectRoot.get();\n+\t\t\t} else {\n+\t\t\t\t// running in the IDE; working directory is test module\n+\t\t\t\tOptional<Path> projectRootDirectory = findProjectRootDirectory(Paths.get(\"\").toAbsolutePath());\n+\t\t\t\t// this distinction is required in case this class is used outside of Flink\n+\t\t\t\tif (projectRootDirectory.isPresent()) {\n+\t\t\t\t\tprojectRootPath = projectRootDirectory.get();\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\t\"The 'distDir' property was not set and the flink-dist module could not be found automatically.\" +\n+\t\t\t\t\t\t\t\" Please point the 'distDir' property to the directory containing distribution; you can set it when running maven via -DdistDir=<path> .\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tOptional<Path> distribution = findDistribution(projectRootPath);\n+\t\t\tif (!distribution.isPresent()) {\n+\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\"The 'distDir' property was not set and a distribution could not be found automatically.\" +\n+\t\t\t\t\t\t\" Please point the 'distDir' property to the directory containing distribution; you can set it when running maven via -DdistDir=<path> .\");\n+\t\t\t} else {\n+\t\t\t\tdistributionDirectory = distribution;\n+\t\t\t}\n \t\t}\n \t\tOptional<Path> logBackupDirectory = DISTRIBUTION_LOG_BACKUP_DIRECTORY.get();\n \t\tif (!logBackupDirectory.isPresent()) {\n \t\t\tLOG.warn(\"Property {} not set, logs will not be backed up in case of test failures.\", DISTRIBUTION_LOG_BACKUP_DIRECTORY.getPropertyName());\n \t\t}\n \t\treturn new LocalStandaloneFlinkResource(distributionDirectory.get(), logBackupDirectory.orElse(null), setup);\n \t}\n+\n+\tpublic static void main(String[] args) {\n+\t\tSystem.out.println(findProjectRootDirectory(Paths.get(\"\").toAbsolutePath()));\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30b3c3dfdc501e2f8c54877d6a9c950e688dfd09"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxNDI0NA==", "bodyText": "Won't flink-dist/target also contain flink-dist_2.11-1.12-SNAPSHOT.jar? At least this is the case for me. Can this be a problem?", "url": "https://github.com/apache/flink/pull/12484#discussion_r436014244", "createdAt": "2020-06-05T15:56:45Z", "author": {"login": "tillrohrmann"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/LocalStandaloneFlinkResourceFactory.java", "diffHunk": "@@ -33,19 +37,83 @@\n public final class LocalStandaloneFlinkResourceFactory implements FlinkResourceFactory {\n \tprivate static final Logger LOG = LoggerFactory.getLogger(LocalStandaloneFlinkResourceFactory.class);\n \n+\tprivate static final ParameterProperty<Path> PROJECT_ROOT_DIRECTORY = new ParameterProperty<>(\"rootDir\", Paths::get);\n \tprivate static final ParameterProperty<Path> DISTRIBUTION_DIRECTORY = new ParameterProperty<>(\"distDir\", Paths::get);\n \tprivate static final ParameterProperty<Path> DISTRIBUTION_LOG_BACKUP_DIRECTORY = new ParameterProperty<>(\"logBackupDir\", Paths::get);\n \n \t@Override\n \tpublic FlinkResource create(FlinkResourceSetup setup) {\n \t\tOptional<Path> distributionDirectory = DISTRIBUTION_DIRECTORY.get();\n \t\tif (!distributionDirectory.isPresent()) {\n-\t\t\tthrow new IllegalArgumentException(\"The distDir property was not set. You can set it when running maven via -DdistDir=<path> .\");\n+\t\t\t// distDir was not explicitly set, let's search for it\n+\n+\t\t\tPath projectRootPath;\n+\t\t\tOptional<Path> projectRoot = PROJECT_ROOT_DIRECTORY.get();\n+\t\t\tif (projectRoot.isPresent()) {\n+\t\t\t\t// running with maven\n+\t\t\t\tprojectRootPath = projectRoot.get();\n+\t\t\t} else {\n+\t\t\t\t// running in the IDE; working directory is test module\n+\t\t\t\tOptional<Path> projectRootDirectory = findProjectRootDirectory(Paths.get(\"\").toAbsolutePath());\n+\t\t\t\t// this distinction is required in case this class is used outside of Flink\n+\t\t\t\tif (projectRootDirectory.isPresent()) {\n+\t\t\t\t\tprojectRootPath = projectRootDirectory.get();\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\t\"The 'distDir' property was not set and the flink-dist module could not be found automatically.\" +\n+\t\t\t\t\t\t\t\" Please point the 'distDir' property to the directory containing distribution; you can set it when running maven via -DdistDir=<path> .\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tOptional<Path> distribution = findDistribution(projectRootPath);\n+\t\t\tif (!distribution.isPresent()) {\n+\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\"The 'distDir' property was not set and a distribution could not be found automatically.\" +\n+\t\t\t\t\t\t\" Please point the 'distDir' property to the directory containing distribution; you can set it when running maven via -DdistDir=<path> .\");\n+\t\t\t} else {\n+\t\t\t\tdistributionDirectory = distribution;\n+\t\t\t}\n \t\t}\n \t\tOptional<Path> logBackupDirectory = DISTRIBUTION_LOG_BACKUP_DIRECTORY.get();\n \t\tif (!logBackupDirectory.isPresent()) {\n \t\t\tLOG.warn(\"Property {} not set, logs will not be backed up in case of test failures.\", DISTRIBUTION_LOG_BACKUP_DIRECTORY.getPropertyName());\n \t\t}\n \t\treturn new LocalStandaloneFlinkResource(distributionDirectory.get(), logBackupDirectory.orElse(null), setup);\n \t}\n+\n+\tpublic static void main(String[] args) {\n+\t\tSystem.out.println(findProjectRootDirectory(Paths.get(\"\").toAbsolutePath()));\n+\t}\n+\n+\tprivate static Optional<Path> findProjectRootDirectory(Path currentDirectory) {\n+\t\t// move up the module structure until we find flink-dist; relies on all modules being prefixed with 'flink'\n+\t\tdo {\n+\t\t\tif (Files.exists(currentDirectory.resolve(\"flink-dist\"))) {\n+\t\t\t\treturn Optional.of(currentDirectory);\n+\t\t\t}\n+\t\t\tcurrentDirectory = currentDirectory.getParent();\n+\t\t}  while (currentDirectory.getFileName().toString().startsWith(\"flink\"));\n+\t\treturn Optional.empty();\n+\t}\n+\n+\tprivate static Optional<Path> findDistribution(Path projectRootDirectory) {\n+\t\tfinal Path distTargetDirectory = projectRootDirectory.resolve(\"flink-dist\").resolve(\"target\");\n+\t\ttry {\n+\t\t\tCollection<Path> paths = FileUtils.listFilesInDirectory(distTargetDirectory, p -> p.getFileName().toString().contains(\"flink-dist\"));\n+\t\t\tif (paths.size() == 0) {\n+\t\t\t\t// likely due to flink-dist not having been built\n+\t\t\t\treturn Optional.empty();\n+\t\t\t}\n+\t\t\tif (paths.size() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30b3c3dfdc501e2f8c54877d6a9c950e688dfd09"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxNzc4NQ==", "bodyText": "I guess this works because we first descend recursively in a dfs manner so that we find the flink/flink-dist/target/flink-1.12-SNAPSHOT-bin/flink-1.12-SNAPSHOT/lib/flink-dist_2.11-1.12-SNAPSHOT.jar", "url": "https://github.com/apache/flink/pull/12484#discussion_r436017785", "createdAt": "2020-06-05T16:02:59Z", "author": {"login": "tillrohrmann"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/LocalStandaloneFlinkResourceFactory.java", "diffHunk": "@@ -33,19 +37,83 @@\n public final class LocalStandaloneFlinkResourceFactory implements FlinkResourceFactory {\n \tprivate static final Logger LOG = LoggerFactory.getLogger(LocalStandaloneFlinkResourceFactory.class);\n \n+\tprivate static final ParameterProperty<Path> PROJECT_ROOT_DIRECTORY = new ParameterProperty<>(\"rootDir\", Paths::get);\n \tprivate static final ParameterProperty<Path> DISTRIBUTION_DIRECTORY = new ParameterProperty<>(\"distDir\", Paths::get);\n \tprivate static final ParameterProperty<Path> DISTRIBUTION_LOG_BACKUP_DIRECTORY = new ParameterProperty<>(\"logBackupDir\", Paths::get);\n \n \t@Override\n \tpublic FlinkResource create(FlinkResourceSetup setup) {\n \t\tOptional<Path> distributionDirectory = DISTRIBUTION_DIRECTORY.get();\n \t\tif (!distributionDirectory.isPresent()) {\n-\t\t\tthrow new IllegalArgumentException(\"The distDir property was not set. You can set it when running maven via -DdistDir=<path> .\");\n+\t\t\t// distDir was not explicitly set, let's search for it\n+\n+\t\t\tPath projectRootPath;\n+\t\t\tOptional<Path> projectRoot = PROJECT_ROOT_DIRECTORY.get();\n+\t\t\tif (projectRoot.isPresent()) {\n+\t\t\t\t// running with maven\n+\t\t\t\tprojectRootPath = projectRoot.get();\n+\t\t\t} else {\n+\t\t\t\t// running in the IDE; working directory is test module\n+\t\t\t\tOptional<Path> projectRootDirectory = findProjectRootDirectory(Paths.get(\"\").toAbsolutePath());\n+\t\t\t\t// this distinction is required in case this class is used outside of Flink\n+\t\t\t\tif (projectRootDirectory.isPresent()) {\n+\t\t\t\t\tprojectRootPath = projectRootDirectory.get();\n+\t\t\t\t} else {\n+\t\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\t\"The 'distDir' property was not set and the flink-dist module could not be found automatically.\" +\n+\t\t\t\t\t\t\t\" Please point the 'distDir' property to the directory containing distribution; you can set it when running maven via -DdistDir=<path> .\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tOptional<Path> distribution = findDistribution(projectRootPath);\n+\t\t\tif (!distribution.isPresent()) {\n+\t\t\t\tthrow new IllegalArgumentException(\n+\t\t\t\t\t\"The 'distDir' property was not set and a distribution could not be found automatically.\" +\n+\t\t\t\t\t\t\" Please point the 'distDir' property to the directory containing distribution; you can set it when running maven via -DdistDir=<path> .\");\n+\t\t\t} else {\n+\t\t\t\tdistributionDirectory = distribution;\n+\t\t\t}\n \t\t}\n \t\tOptional<Path> logBackupDirectory = DISTRIBUTION_LOG_BACKUP_DIRECTORY.get();\n \t\tif (!logBackupDirectory.isPresent()) {\n \t\t\tLOG.warn(\"Property {} not set, logs will not be backed up in case of test failures.\", DISTRIBUTION_LOG_BACKUP_DIRECTORY.getPropertyName());\n \t\t}\n \t\treturn new LocalStandaloneFlinkResource(distributionDirectory.get(), logBackupDirectory.orElse(null), setup);\n \t}\n+\n+\tpublic static void main(String[] args) {\n+\t\tSystem.out.println(findProjectRootDirectory(Paths.get(\"\").toAbsolutePath()));\n+\t}\n+\n+\tprivate static Optional<Path> findProjectRootDirectory(Path currentDirectory) {\n+\t\t// move up the module structure until we find flink-dist; relies on all modules being prefixed with 'flink'\n+\t\tdo {\n+\t\t\tif (Files.exists(currentDirectory.resolve(\"flink-dist\"))) {\n+\t\t\t\treturn Optional.of(currentDirectory);\n+\t\t\t}\n+\t\t\tcurrentDirectory = currentDirectory.getParent();\n+\t\t}  while (currentDirectory.getFileName().toString().startsWith(\"flink\"));\n+\t\treturn Optional.empty();\n+\t}\n+\n+\tprivate static Optional<Path> findDistribution(Path projectRootDirectory) {\n+\t\tfinal Path distTargetDirectory = projectRootDirectory.resolve(\"flink-dist\").resolve(\"target\");\n+\t\ttry {\n+\t\t\tCollection<Path> paths = FileUtils.listFilesInDirectory(distTargetDirectory, p -> p.getFileName().toString().contains(\"flink-dist\"));\n+\t\t\tif (paths.size() == 0) {\n+\t\t\t\t// likely due to flink-dist not having been built\n+\t\t\t\treturn Optional.empty();\n+\t\t\t}\n+\t\t\tif (paths.size() > 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAxNDI0NA=="}, "originalCommit": {"oid": "30b3c3dfdc501e2f8c54877d6a9c950e688dfd09"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46b5fa0b9c408360a69469a5eaceed902ae3dfeb", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/46b5fa0b9c408360a69469a5eaceed902ae3dfeb", "committedDate": "2020-06-08T16:55:48Z", "message": "[FLINK-18042][tests] Log path of used distribution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a00c4924c99ec35e97cb31e93a54882e4e5c1448", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/a00c4924c99ec35e97cb31e93a54882e4e5c1448", "committedDate": "2020-06-08T16:55:48Z", "message": "[FLINK-18042][tests] Auto-detect moduleDir"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0ba8d82be72df77d87b55cf089bd1fbd4f7f74c", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/e0ba8d82be72df77d87b55cf089bd1fbd4f7f74c", "committedDate": "2020-06-08T16:55:48Z", "message": "[FLINK-18042][tests] More helpful error message if jar cannot be found"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63e7c7bc83847ad7e2bc383081e051875e3429f9", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/63e7c7bc83847ad7e2bc383081e051875e3429f9", "committedDate": "2020-06-08T16:55:48Z", "message": "[FLINK-18042][tests] Auto-detect distDir"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8d4d1d49a30bf86aa5a8cb5f1ad98c3548c9702", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/f8d4d1d49a30bf86aa5a8cb5f1ad98c3548c9702", "committedDate": "2020-06-08T10:53:39Z", "message": "harder distribution detection"}, "afterCommit": {"oid": "63e7c7bc83847ad7e2bc383081e051875e3429f9", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/63e7c7bc83847ad7e2bc383081e051875e3429f9", "committedDate": "2020-06-08T16:55:48Z", "message": "[FLINK-18042][tests] Auto-detect distDir"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4307, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}