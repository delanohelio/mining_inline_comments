{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNDkyNzc5", "number": 12260, "title": "[FLINK-17189][table-planner] Table with proctime attribute cannot be read from Hive catalog", "bodyText": "What is the purpose of the change\nCREATE TABLE PROD_LINEITEM (\n  ...\n  L_ORDERTIME      TIMESTAMP(3),\n  WATERMARK FOR L_ORDERTIME AS L_ORDERTIME - INTERVAL '5' MINUTE,\n  L_PROCTIME       AS PROCTIME()\n) WITH (...)\nSELECT * FROM prod_lineitem;\n\nFailed by AssertionError: Conversion to relational algebra failed to preserve datatypes.\nBrief change log\nTableSourceUtil.getSourceRowType should not only adjust rowtime from watermarkSpec, but also adjust proctime fields from computed column.\nVerifying this change\nHiveCatalogITCase.testReadWriteCsvWithProctime\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no", "createdAt": "2020-05-20T04:05:57Z", "url": "https://github.com/apache/flink/pull/12260", "merged": true, "mergeCommit": {"oid": "f08c8309738e519d246aeda163ef1b1f5e7855c7"}, "closed": true, "closedAt": "2020-05-26T05:29:12Z", "author": {"login": "JingsongLi"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjZnyZgFqTQxNTk3ODI3MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABckpidRAH2gAyNDIwNDkyNzc5OmNiOTlhMzAxYTNkMTYyNTkwOWZiZjk0ZTg1NDNlM2E3YjA3MjY2ODU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1OTc4Mjcw", "url": "https://github.com/apache/flink/pull/12260#pullrequestreview-415978270", "createdAt": "2020-05-21T08:44:30Z", "commit": {"oid": "87d0b478bf38fc74639f8ac2c065e4e6d2fc2156"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwODo0NDozMFrOGYrEfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwODo0NDozMFrOGYrEfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUyNDY3MA==", "bodyText": "Actually proctime(    ) should also work, i'm thinking if we can use the Sqlparser to parse the expr first, if we got one SqlUnresolvedFunction with no operands and its name matches proctime, the we can go ahead.", "url": "https://github.com/apache/flink/pull/12260#discussion_r428524670", "createdAt": "2020-05-21T08:44:30Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/sources/TableSourceUtil.scala", "diffHunk": "@@ -238,6 +250,14 @@ object TableSourceUtil {\n     }\n   }\n \n+  private def containsTimeAttribute(tableSchema: TableSchema): Boolean = {\n+    tableSchema.getWatermarkSpecs.nonEmpty || tableSchema.getTableColumns.exists(isProctime)\n+  }\n+\n+  private def isProctime(column: TableColumn): Boolean = {\n+    toScala(column.getExpr).exists(_.equalsIgnoreCase(\"proctime()\"))\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87d0b478bf38fc74639f8ac2c065e4e6d2fc2156"}, "originalPosition": 111}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87d0b478bf38fc74639f8ac2c065e4e6d2fc2156", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/87d0b478bf38fc74639f8ac2c065e4e6d2fc2156", "committedDate": "2020-05-20T09:20:55Z", "message": "Fix case"}, "afterCommit": {"oid": "401be6000cf497ea1f598494c70dfbc2fa2fea65", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/401be6000cf497ea1f598494c70dfbc2fa2fea65", "committedDate": "2020-05-21T09:04:57Z", "message": "Fix comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MDQ5NDQ1", "url": "https://github.com/apache/flink/pull/12260#pullrequestreview-416049445", "createdAt": "2020-05-21T10:46:15Z", "commit": {"oid": "ed086581e9bdc7cc60830294a3ddd1cf8d9e0bbe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "081a62a66ef0a1b687b10e6b41ed8066b0c7992d", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/081a62a66ef0a1b687b10e6b41ed8066b0c7992d", "committedDate": "2020-05-25T03:14:33Z", "message": "[FLINK-17189][table-planner] Table with processing time attribute can not be read from Hive catalog"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a698382d50881375b4b08e4e6f103d492d5e0964", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/a698382d50881375b4b08e4e6f103d492d5e0964", "committedDate": "2020-05-21T13:09:30Z", "message": "Fix batch proctime"}, "afterCommit": {"oid": "081a62a66ef0a1b687b10e6b41ed8066b0c7992d", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/081a62a66ef0a1b687b10e6b41ed8066b0c7992d", "committedDate": "2020-05-25T03:14:33Z", "message": "[FLINK-17189][table-planner] Table with processing time attribute can not be read from Hive catalog"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDM3NTE4", "url": "https://github.com/apache/flink/pull/12260#pullrequestreview-417437518", "createdAt": "2020-05-25T03:21:33Z", "commit": {"oid": "081a62a66ef0a1b687b10e6b41ed8066b0c7992d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMzoyMTozNFrOGZzz8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMzoyMTozNFrOGZzz8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcxNjQ2NQ==", "bodyText": "Could you add a short comment for this field to explain why we need this? The same to CatalogManagerCalciteSchema, CatalogSchemaTable, DatabaseCalciteSchema. For example:\nThe SQL expression converter factory is used to derive correct result type of computed column, because the date type of computed column from catalog table is not trusted.", "url": "https://github.com/apache/flink/pull/12260#discussion_r429716465", "createdAt": "2020-05-25T03:21:34Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/catalog/CatalogCalciteSchema.java", "diffHunk": "@@ -42,10 +43,16 @@\n \tprivate final CatalogManager catalogManager;\n \t// Flag that tells if the current planner should work in a batch or streaming mode.\n \tprivate final boolean isStreamingMode;\n+\tprivate final SqlExprToRexConverterFactory converterFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081a62a66ef0a1b687b10e6b41ed8066b0c7992d"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb99a301a3d1625909fbf94e8543e3a7b0726685", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/cb99a301a3d1625909fbf94e8543e3a7b0726685", "committedDate": "2020-05-25T05:51:06Z", "message": "Fix comments&case"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4650, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}