{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0OTkyNTQ1", "number": 12403, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODowMToyOFrOEC20Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODowMToyOFrOEC20Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDMwNjc5OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTypeUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODowMToyOFrOGfkWlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwMjozODozNVrOGgNxQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1NDY0NQ==", "bodyText": "Also modify varchar?", "url": "https://github.com/apache/flink/pull/12403#discussion_r435754645", "createdAt": "2020-06-05T08:01:28Z", "author": {"login": "JingsongLi"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTypeUtil.java", "diffHunk": "@@ -182,11 +182,17 @@ private static DataType toFlinkPrimitiveType(PrimitiveTypeInfo hiveType) {\n \n \t\t@Override\n \t\tpublic TypeInfo visit(CharType charType) {\n-\t\t\tif (charType.getLength() > HiveChar.MAX_CHAR_LENGTH) {\n-\t\t\t\tthrow new CatalogException(\n-\t\t\t\t\t\tString.format(\"HiveCatalog doesn't support char type with length of '%d'. \" +\n-\t\t\t\t\t\t\t\t\t\"The maximum length is %d\",\n+\t\t\t// Flink treats string literal UDF parameters as CHAR. Such types may have precisions not supported by\n+\t\t\t// Hive, e.g. CHAR(0). Promote it to STRING in such case if we're told not to check precision.\n+\t\t\tif (charType.getLength() > HiveChar.MAX_CHAR_LENGTH || charType.getLength() < 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e667a3bd702288955808b79493a09244513d202"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkxNzI0Mg==", "bodyText": "I'm not sure whether that makes sense because currently we don't have a use case to involve a VARCHAR(0).\nEven for CHAR, Flink also has some logic to verify the length is > 0. So having this CHAR(0) as UDF parameter type seems a little inconsistent in the first place.", "url": "https://github.com/apache/flink/pull/12403#discussion_r435917242", "createdAt": "2020-06-05T13:23:15Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTypeUtil.java", "diffHunk": "@@ -182,11 +182,17 @@ private static DataType toFlinkPrimitiveType(PrimitiveTypeInfo hiveType) {\n \n \t\t@Override\n \t\tpublic TypeInfo visit(CharType charType) {\n-\t\t\tif (charType.getLength() > HiveChar.MAX_CHAR_LENGTH) {\n-\t\t\t\tthrow new CatalogException(\n-\t\t\t\t\t\tString.format(\"HiveCatalog doesn't support char type with length of '%d'. \" +\n-\t\t\t\t\t\t\t\t\t\"The maximum length is %d\",\n+\t\t\t// Flink treats string literal UDF parameters as CHAR. Such types may have precisions not supported by\n+\t\t\t// Hive, e.g. CHAR(0). Promote it to STRING in such case if we're told not to check precision.\n+\t\t\tif (charType.getLength() > HiveChar.MAX_CHAR_LENGTH || charType.getLength() < 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1NDY0NQ=="}, "originalCommit": {"oid": "0e667a3bd702288955808b79493a09244513d202"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQzMzIxNw==", "bodyText": "No, you can not have this assumption.\nMaybe there is a VarChar with zero precision in somewhere.", "url": "https://github.com/apache/flink/pull/12403#discussion_r436433217", "createdAt": "2020-06-08T02:38:35Z", "author": {"login": "JingsongLi"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTypeUtil.java", "diffHunk": "@@ -182,11 +182,17 @@ private static DataType toFlinkPrimitiveType(PrimitiveTypeInfo hiveType) {\n \n \t\t@Override\n \t\tpublic TypeInfo visit(CharType charType) {\n-\t\t\tif (charType.getLength() > HiveChar.MAX_CHAR_LENGTH) {\n-\t\t\t\tthrow new CatalogException(\n-\t\t\t\t\t\tString.format(\"HiveCatalog doesn't support char type with length of '%d'. \" +\n-\t\t\t\t\t\t\t\t\t\"The maximum length is %d\",\n+\t\t\t// Flink treats string literal UDF parameters as CHAR. Such types may have precisions not supported by\n+\t\t\t// Hive, e.g. CHAR(0). Promote it to STRING in such case if we're told not to check precision.\n+\t\t\tif (charType.getLength() > HiveChar.MAX_CHAR_LENGTH || charType.getLength() < 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc1NDY0NQ=="}, "originalCommit": {"oid": "0e667a3bd702288955808b79493a09244513d202"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4495, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}