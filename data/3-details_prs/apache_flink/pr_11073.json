{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MzgzMDI3", "number": 11073, "title": "[FLINK-15672][build] Migrate to log4j2 ", "bodyText": "Incorporates #10984.\nThis PR migrates the entire project to log4j2 (we still use SLF4J!).\nLet me walk you through all the changes that were necessary for this to work:\nDependencies\nPreviously we relied on log4j:log4j (the logging framework) and org.slf4j:slf4j-log4j12 (adapter from log4j to slf4j); collectively referred to as \"log4j1 dependencies\" from now on.\nWe now rely on org.apache.logging.log4j:log4j-api (logging framework API, somewhat similar to what slf4j does), org.apache.logging.log4j:log4j-core (logging framework implementation), org.apache.logging.log4j:log4j-slf4j-impl (adapter from log4j to slf4j) and org.apache.logging.log4j:log4j-1.2-api (API bridge between log4j1 and 2).\nThe version of all new dependencies is 2.12.1, which was released August 2019.\nThese dependencies are all on the test classpath.\nTo prevent multiple log4j bindings from existing on the classpath, all traces of log4j 1 dependencies have been removed from the dependency tree through the gratuitous use of exclusions.\nAn enforcer rule was additionally put into place to prevent these from slipping in again.\nThis should not affect any transitive dependencies relying on log4j1 due to the log4j API bridge also being on the test and runtime classpath.\nThe transition also allowed us to simplify the test logging setup for the ES connectors, as they no longer have to manually swap out log4j 1.\nQuickstarts/Walkthroughs\nThe archetypes were naturally adjusted to use log4j2 as well, and the log4j version is now derived from the parent project instead of being hard-coded.\nPackaging\nThe new log4j2 dependencies are bundled in flink-dist just like the old dependencies; i.e. under lib. Now however there will be 4 jars instead of 2.\nModules that were previously explicitly bundling log4j2 (ES5-7) now longer do so.\nLicensing\nWith the removal of org.slf4j:slf4j-log4j12 we no longer need the dedicated slf4j NOTICE preamble nor license in the binary licensing.\nThe ES5-7 modules no longer bundle log4j2 separately and hence had their relevant NOTICE entries removed.\nAPI changes\nSome tests are directly working against the log4j API (for various, and partially justified, reasons).\nThese had to be migrated to new APIs.\nTo unify this a new TestLoggerResource was introduced, and relevant tests adjusted.\nConfiguration\nfile property\nLog4j can automatically pick of configurations from the classpath, but traditionally we opted to explicitly configure the file location through a property instead for actual deployments.\nFor log4j1 this property was log4j.configuration, whereas for log4j2 it is log4j.configurationFile.\nThe latter aligns log4j with logback.\nNote that this change currently prevents users from using log4j1 as their logging framework.\n*.properties file names\nLog4j2 by default looks for log4j2[-test].properties.Accordingly,\nall log4j-test.properties were renamed to log4j2-test.properties,\nall log4j.properties used for examples were renamed to log4j2.properties.\nThis should result in them automatically being picked up in the IDE.\nHowever, all *.properties files that are exposed to users have retained their old name (like log4j-cli.properties), in an attempt to prevent setups from being broken that do some move/copy operations on them.\n*.properties file contents\nAll existing log4j properties files have been migrated to the new syntax that log4j2 uses, as have all instances where we generated/modified the configuration programmatically.\nThe old syntax is no longer supported, and will either be ignored or cause errors.\nThe new syntax is a bit of a mixed bag, so let's dive into an example:\nrootLogger.level = INFO\nrootLogger.appenderRef.name_1.ref = name_4\n\nlogger.name_2.name = akka\nlogger.name_2.level = INFO\n\nappender.name_3.name = name_4\nappender.name_3.type = File\nappender.name_3.append = false\nappender.name_3.fileName = ${sys:log.file}\nappender.name_3.layout.type = PatternLayout\nappender.name_3.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n\n\nMost things are self-explanatory (like layout being split into 2 properties).\nThere's a new syntax for referring to variables; e.g., ${sys:log.file} refers to a JVM system property.\nThe most confusing thing in this syntax is the concept of \"names\" since the semantics vary significantly.\nAll loggers and appenders have an identifier (e.g., name_2/3) that identifies it for options configured on that object; this conceptually works just like our reporters do.\nI.e., all options with the same identifier are applied to the same appender/logger.\nLoggers also have a name parameter that controls the package/class for which it is used.\nAppenders also have a name parameter, but this one instead is a reference that loggers can use as an appenderRef, which controls what appenders should be used for this logger.\nAnd while we're on the topic of appenderRef; these always take the form logger.<logger_idenfitier>.appenderRef.<some_name>.<appender_name_ref>, where some_name is literally arbitrary, the only important thing being that you don't have 2 refs on the same logger with the same name.", "createdAt": "2020-02-12T15:49:25Z", "url": "https://github.com/apache/flink/pull/11073", "merged": true, "mergeCommit": {"oid": "ee7fb5e40afb10346a3c606472e188431fedf1f7"}, "closed": true, "closedAt": "2020-02-21T13:48:18Z", "author": {"login": "zentol"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDoX6zgBqjMwMzEzNTk1NTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGdTBTgBqjMwNjAwMjM5ODA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9dc4387306011021979db1f94c0a3a25c5b8366f", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/9dc4387306011021979db1f94c0a3a25c5b8366f", "committedDate": "2020-02-12T15:32:27Z", "message": "[FLINK-15672][build][tests] Migrate test log4j configurations to log4j2"}, "afterCommit": {"oid": "29034cb85769cd69b09b121c4b88f54b4483aafe", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/29034cb85769cd69b09b121c4b88f54b4483aafe", "committedDate": "2020-02-12T15:50:00Z", "message": "[FLINK-15672][build][tests] Migrate test log4j configurations to log4j2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMTc3NTEx", "url": "https://github.com/apache/flink/pull/11073#pullrequestreview-360177511", "createdAt": "2020-02-18T09:21:09Z", "commit": {"oid": "c12fcd377c584bed78d892e11febfda736f287ed"}, "state": "COMMENTED", "comments": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwOToyMTowOVrOFq6sbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjo0NzoyOVrOFrmxRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU0NjE1Nw==", "bodyText": "did it already cause a problem? it just looks that in this cases the plugins order is straightforward", "url": "https://github.com/apache/flink/pull/11073#discussion_r380546157", "createdAt": "2020-02-18T09:21:09Z", "author": {"login": "azagrebin"}, "path": "flink-dist/pom.xml", "diffHunk": "@@ -623,7 +623,7 @@ under the License.\n \t\t\t\t<executions>\n \t\t\t\t\t<execution>\n \t\t\t\t\t\t<id>unpack-javax-libraries</id>\n-\t\t\t\t\t\t<phase>process-resources</phase>\n+\t\t\t\t\t\t<phase>compile</phase>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12fcd377c584bed78d892e11febfda736f287ed"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU1OTMxNw==", "bodyText": "since log4j-to-slf4j is not needed anymore, can its config file META-INF/log4j-provider.properties, adjusted for shading, be deleted?\nThere are also some comments in ElasticsearchSinkITCase classes with probably old mentioning of log4j-to-slf4j which are not relevant or even correct anymore", "url": "https://github.com/apache/flink/pull/11073#discussion_r380559317", "createdAt": "2020-02-18T09:43:50Z", "author": {"login": "azagrebin"}, "path": "flink-connectors/flink-connector-elasticsearch5/pom.xml", "diffHunk": "@@ -270,17 +222,6 @@ under the License.\n \t\t\t\t\t\t\t\t\t\t<exclude>META-INF/maven/org.y*/**</exclude>\n \t\t\t\t\t\t\t\t\t</excludes>\n \t\t\t\t\t\t\t\t</filter>\n-\t\t\t\t\t\t\t\t<!--\n-\t\t\t\t\t\t\t\t  Since we relocate the dependency, the paths specified in the providers file\n-\t\t\t\t\t\t\t\t  will be incorrect. We exclude it here, and re-package a new providers file\n-\t\t\t\t\t\t\t\t  with the correct re-located paths.\n-\t\t\t\t\t\t\t\t-->\n-\t\t\t\t\t\t\t\t<filter>\n-\t\t\t\t\t\t\t\t\t<artifact>org.apache.logging.log4j:log4j-to-slf4j</artifact>\n-\t\t\t\t\t\t\t\t\t<excludes>\n-\t\t\t\t\t\t\t\t\t\t<exclude>META-INF/log4j-provider.properties</exclude>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2aa679446b439e7a296418159afcc97e64feefb"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU2MDg1Nw==", "bodyText": "Not sure whether it is relevant but this is not done for ES 2", "url": "https://github.com/apache/flink/pull/11073#discussion_r380560857", "createdAt": "2020-02-18T09:46:19Z", "author": {"login": "azagrebin"}, "path": "flink-connectors/flink-connector-elasticsearch5/pom.xml", "diffHunk": "@@ -213,7 +165,7 @@ under the License.\n \t\t\t\t\t\t\t\t\t<excludes>\n \t\t\t\t\t\t\t\t\t\t<!-- keep flink classes as they are (exceptions as above) -->\n \t\t\t\t\t\t\t\t\t\t<exclude>org.apache.flink.**</exclude>\n-\t\t\t\t\t\t\t\t\t\t<exclude>org.apache.log4j.**</exclude> <!-- provided -->\n+\t\t\t\t\t\t\t\t\t\t<exclude>org.apache.logging.log4j.**</exclude> <!-- provided -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2aa679446b439e7a296418159afcc97e64feefb"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU2NzIxOA==", "bodyText": "nit: weird line order change, also on some other places below", "url": "https://github.com/apache/flink/pull/11073#discussion_r380567218", "createdAt": "2020-02-18T09:56:53Z", "author": {"login": "azagrebin"}, "path": "flink-connectors/flink-connector-filesystem/pom.xml", "diffHunk": "@@ -138,8 +152,14 @@ under the License.\n \t\t<dependency>\n \t\t\t<groupId>org.apache.hadoop</groupId>\n \t\t\t<artifactId>hadoop-minikdc</artifactId>\n-\t\t\t<version>${minikdc.version}</version>\n \t\t\t<scope>test</scope>\n+\t\t\t<version>${minikdc.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2aa679446b439e7a296418159afcc97e64feefb"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU3NjUzNA==", "bodyText": "Is this comment relevant only for this exclusion or also for same others?", "url": "https://github.com/apache/flink/pull/11073#discussion_r380576534", "createdAt": "2020-02-18T10:13:16Z", "author": {"login": "azagrebin"}, "path": "flink-connectors/flink-connector-kafka-0.10/pom.xml", "diffHunk": "@@ -133,6 +133,14 @@ under the License.\n \t\t\t<artifactId>kafka_${scala.binary.version}</artifactId>\n \t\t\t<version>${kafka.version}</version>\n \t\t\t<scope>test</scope>\n+\t\t\t<exclusions>\n+\t\t\t\t<exclusion>\n+\t\t\t\t\t<!-- conflicts with log4j2, since 2 slf4j bindings are on the classpath\n+\t\t\t\t\t\ttests will use the log4j API bridge defined in root pom instead -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2aa679446b439e7a296418159afcc97e64feefb"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE1NTA4MQ==", "bodyText": "something unfinished?", "url": "https://github.com/apache/flink/pull/11073#discussion_r381155081", "createdAt": "2020-02-19T09:01:34Z", "author": {"login": "azagrebin"}, "path": "flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.testutils.logging;\n+\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.core.Appender;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.LoggerContext;\n+import org.apache.logging.log4j.core.appender.AbstractAppender;\n+import org.apache.logging.log4j.core.config.AppenderRef;\n+import org.apache.logging.log4j.core.config.LoggerConfig;\n+import org.junit.rules.ExternalResource;\n+\n+import javax.annotation.concurrent.GuardedBy;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Utility for auditing logged messages.\n+ *\n+ * <p>When using this class, keep", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2aa679446b439e7a296418159afcc97e64feefb"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE1Nzk1Nw==", "bodyText": "any particular reason to use org.slf4j.event.Level here instead of org.apache.logging.log4j.Level?", "url": "https://github.com/apache/flink/pull/11073#discussion_r381157957", "createdAt": "2020-02-19T09:07:11Z", "author": {"login": "azagrebin"}, "path": "flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.testutils.logging;\n+\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.core.Appender;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.LoggerContext;\n+import org.apache.logging.log4j.core.appender.AbstractAppender;\n+import org.apache.logging.log4j.core.config.AppenderRef;\n+import org.apache.logging.log4j.core.config.LoggerConfig;\n+import org.junit.rules.ExternalResource;\n+\n+import javax.annotation.concurrent.GuardedBy;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Utility for auditing logged messages.\n+ *\n+ * <p>When using this class, keep\n+ *\n+ * <p>Implementation note: Make sure to not expose log4j dependencies in the interface of this class to ease updates\n+ * in logging infrastructure.\n+ */\n+public class TestLoggerResource extends ExternalResource {\n+\tprivate static final LoggerContext LOGGER_CONTEXT = (LoggerContext) LogManager.getContext(false);\n+\n+\tprivate final String loggerName;\n+\tprivate final org.slf4j.event.Level level;\n+\n+\tprivate final Object lock = new Object();\n+\n+\t@GuardedBy(\"lock\")\n+\tprivate List<String> loggingEvents;\n+\n+\tpublic TestLoggerResource(Class<?> clazz, org.slf4j.event.Level level) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2aa679446b439e7a296418159afcc97e64feefb"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE2MTYzMQ==", "bodyText": "Why do we need to exclude logging here if its dependencies have been already marked only for runtime?", "url": "https://github.com/apache/flink/pull/11073#discussion_r381161631", "createdAt": "2020-02-19T09:14:39Z", "author": {"login": "azagrebin"}, "path": "flink-quickstart/flink-quickstart-scala/src/main/resources/archetype-resources/pom.xml", "diffHunk": "@@ -122,7 +129,7 @@ under the License.\n \t\t\t\t\t\t\t\t\t<exclude>org.apache.flink:force-shading</exclude>\n \t\t\t\t\t\t\t\t\t<exclude>com.google.code.findbugs:jsr305</exclude>\n \t\t\t\t\t\t\t\t\t<exclude>org.slf4j:*</exclude>\n-\t\t\t\t\t\t\t\t\t<exclude>log4j:*</exclude>\n+\t\t\t\t\t\t\t\t\t<exclude>org.apache.logging.log4j:*</exclude>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2aa679446b439e7a296418159afcc97e64feefb"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE2NjQ2NQ==", "bodyText": "maybe then just e.g. a ConcurrentLinkedQueue?", "url": "https://github.com/apache/flink/pull/11073#discussion_r381166465", "createdAt": "2020-02-19T09:23:37Z", "author": {"login": "azagrebin"}, "path": "flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/logging/TestLoggerResource.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.testutils.logging;\n+\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.core.Appender;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.LoggerContext;\n+import org.apache.logging.log4j.core.appender.AbstractAppender;\n+import org.apache.logging.log4j.core.config.AppenderRef;\n+import org.apache.logging.log4j.core.config.LoggerConfig;\n+import org.junit.rules.ExternalResource;\n+\n+import javax.annotation.concurrent.GuardedBy;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Utility for auditing logged messages.\n+ *\n+ * <p>When using this class, keep\n+ *\n+ * <p>Implementation note: Make sure to not expose log4j dependencies in the interface of this class to ease updates\n+ * in logging infrastructure.\n+ */\n+public class TestLoggerResource extends ExternalResource {\n+\tprivate static final LoggerContext LOGGER_CONTEXT = (LoggerContext) LogManager.getContext(false);\n+\n+\tprivate final String loggerName;\n+\tprivate final org.slf4j.event.Level level;\n+\n+\tprivate final Object lock = new Object();\n+\n+\t@GuardedBy(\"lock\")\n+\tprivate List<String> loggingEvents;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2aa679446b439e7a296418159afcc97e64feefb"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE3MzUxMA==", "bodyText": "do we want to keep this log message for testPassedFromLog4j = true?", "url": "https://github.com/apache/flink/pull/11073#discussion_r381173510", "createdAt": "2020-02-19T09:35:37Z", "author": {"login": "azagrebin"}, "path": "flink-yarn-tests/src/test/java/org/apache/flink/yarn/YarnTestBase.java", "diffHunk": "@@ -816,14 +816,7 @@ protected void runWithArgs(String[] args, String terminateAfterString, String[]\n \t\t\t\t}\n \t\t\t}\n \t\t\t// check output for the expected terminateAfterString.\n-\t\t\tif (checkLogForTerminateString) {\n-\t\t\t\tLoggingEvent matchedEvent = UtilsTest.getEventContainingString(terminateAfterString);\n-\t\t\t\tif (matchedEvent != null) {\n-\t\t\t\t\ttestPassedFromLog4j = true;\n-\t\t\t\t\tLOG.info(\"Found expected output in logging event {}\", matchedEvent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2aa679446b439e7a296418159afcc97e64feefb"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE3NTQ2NA==", "bodyText": "CliFrontend - > FlinkYarnSessionCli?\nNot sure whether we need this though at all", "url": "https://github.com/apache/flink/pull/11073#discussion_r381175464", "createdAt": "2020-02-19T09:38:52Z", "author": {"login": "azagrebin"}, "path": "flink-yarn-tests/src/test/java/org/apache/flink/yarn/YARNSessionFIFOITCase.java", "diffHunk": "@@ -60,6 +64,12 @@\n public class YARNSessionFIFOITCase extends YarnTestBase {\n \tprivate static final Logger LOG = LoggerFactory.getLogger(YARNSessionFIFOITCase.class);\n \n+\t@Rule\n+\tpublic final TestLoggerResource cliTestLoggerResource = new TestLoggerResource(CliFrontend.class, Level.INFO);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2aa679446b439e7a296418159afcc97e64feefb"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE4MzQ4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                logger.netty.level = OFF\n          \n          \n            \n                logger.netty.level = ERROR\n          \n      \n    \n    \n  \n\nor there was a reason? also below", "url": "https://github.com/apache/flink/pull/11073#discussion_r381183483", "createdAt": "2020-02-19T09:51:36Z", "author": {"login": "azagrebin"}, "path": "docs/ops/deployment/kubernetes.md", "diffHunk": "@@ -133,16 +133,24 @@ data:\n     jobmanager.heap.size: 1024m\n     taskmanager.memory.process.size: 1024m\n   log4j.properties: |+\n-    log4j.rootLogger=INFO, file\n-    log4j.logger.akka=INFO\n-    log4j.logger.org.apache.kafka=INFO\n-    log4j.logger.org.apache.hadoop=INFO\n-    log4j.logger.org.apache.zookeeper=INFO\n-    log4j.appender.file=org.apache.log4j.FileAppender\n-    log4j.appender.file.file=${log.file}\n-    log4j.appender.file.layout=org.apache.log4j.PatternLayout\n-    log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n\n-    log4j.logger.org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline=ERROR, file\n+    rootLogger.level = INFO\n+    rootLogger.appenderRef.file.ref = MainAppender\n+    logger.akka.name = akka\n+    logger.akka.level = INFO\n+    logger.kafka.name= org.apache.kafka\n+    logger.kafka.level = INFO\n+    logger.hadoop.name = org.apache.hadoop\n+    logger.hadoop.level = INFO\n+    logger.zookeeper.name = org.apache.zookeeper\n+    logger.zookeeper.level = INFO\n+    appender.main.name = MainAppender\n+    appender.main.type = File\n+    appender.main.append = false\n+    appender.main.fileName = ${sys:log.file}\n+    appender.main.layout.type = PatternLayout\n+    appender.main.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n\n+    logger.netty.name = org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline\n+    logger.netty.level = OFF", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa30bf5f00b6195aed0037ee4b54c40ce07ce27"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE4NDc2NQ==", "bodyText": "all concrete loggers will inherit rootLogger.appenderRef.file.ref, right?", "url": "https://github.com/apache/flink/pull/11073#discussion_r381184765", "createdAt": "2020-02-19T09:53:49Z", "author": {"login": "azagrebin"}, "path": "docs/ops/deployment/kubernetes.md", "diffHunk": "@@ -133,16 +133,24 @@ data:\n     jobmanager.heap.size: 1024m\n     taskmanager.memory.process.size: 1024m\n   log4j.properties: |+\n-    log4j.rootLogger=INFO, file\n-    log4j.logger.akka=INFO\n-    log4j.logger.org.apache.kafka=INFO\n-    log4j.logger.org.apache.hadoop=INFO\n-    log4j.logger.org.apache.zookeeper=INFO\n-    log4j.appender.file=org.apache.log4j.FileAppender\n-    log4j.appender.file.file=${log.file}\n-    log4j.appender.file.layout=org.apache.log4j.PatternLayout\n-    log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n\n-    log4j.logger.org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline=ERROR, file\n+    rootLogger.level = INFO\n+    rootLogger.appenderRef.file.ref = MainAppender\n+    logger.akka.name = akka", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa30bf5f00b6195aed0037ee4b54c40ce07ce27"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE4NzA4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            appender.console.name = org.apache.log4j.ConsoleAppender\n          \n          \n            \n            appender.console.name = ConsoleAppender\n          \n      \n    \n    \n  \n\nor then also: 'rootLogger.appenderRef.console.ref = org.apache.log4j.ConsoleAppender' above", "url": "https://github.com/apache/flink/pull/11073#discussion_r381187080", "createdAt": "2020-02-19T09:57:46Z", "author": {"login": "azagrebin"}, "path": "docs/ops/deployment/native_kubernetes.md", "diffHunk": "@@ -134,15 +134,16 @@ By default, the JobManager and TaskManager only store logs under `/opt/flink/log\n If you want to use `kubectl logs <PodName>` to view the logs, you must perform the following:\n \n 1. Add a new appender to the log4j.properties in the Flink client.\n-2. Update the rootLogger in log4j.properties to `log4j.rootLogger=INFO, file, console`.\n+2. Add the following 'appenderRef' the rootLogger in log4j.properties `rootLogger.appenderRef.console.ref = ConsoleAppender`.\n 3. Remove the redirect args by adding config option `-Dkubernetes.container-start-command-template=\"%java% %classpath% %jvmmem% %jvmopts% %logging% %class% %args%\"`.\n 4. Stop and start your session again. Now you could use `kubectl logs` to view your logs.\n \n {% highlight bash %}\n # Log all infos to the console\n-log4j.appender.console=org.apache.log4j.ConsoleAppender\n-log4j.appender.console.layout=org.apache.log4j.PatternLayout\n-log4j.appender.console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n\n+appender.console.name = org.apache.log4j.ConsoleAppender", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa30bf5f00b6195aed0037ee4b54c40ce07ce27"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE4OTQ5OQ==", "bodyText": "a bit strange there is different case style for File and CONSOLE appender types", "url": "https://github.com/apache/flink/pull/11073#discussion_r381189499", "createdAt": "2020-02-19T10:01:52Z", "author": {"login": "azagrebin"}, "path": "docs/ops/deployment/native_kubernetes.zh.md", "diffHunk": "@@ -134,15 +134,16 @@ By default, the JobManager and TaskManager only store logs under `/opt/flink/log\n If you want to use `kubectl logs <PodName>` to view the logs, you must perform the following:\n \n 1. Add a new appender to the log4j.properties in the Flink client.\n-2. Update the rootLogger in log4j.properties to `log4j.rootLogger=INFO, file, console`.\n+2. Add the following 'appenderRef' the rootLogger in log4j.properties `rootLogger.appenderRef.console.ref = ConsoleAppender`.\n 3. Remove the redirect args by adding config option `-Dkubernetes.container-start-command-template=\"%java% %classpath% %jvmmem% %jvmopts% %logging% %class% %args%\"`.\n 4. Stop and start your session again. Now you could use `kubectl logs` to view your logs.\n \n {% highlight bash %}\n # Log all infos to the console\n-log4j.appender.console=org.apache.log4j.ConsoleAppender\n-log4j.appender.console.layout=org.apache.log4j.PatternLayout\n-log4j.appender.console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n\n+appender.console.name = org.apache.log4j.ConsoleAppender\n+appender.console.type = CONSOLE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa30bf5f00b6195aed0037ee4b54c40ce07ce27"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE5MTM4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            rootLogger.appenderRef.file.ref = FileAppender\n          \n          \n            \n            rootLogger.appenderRef.file.ref = FileLogger", "url": "https://github.com/apache/flink/pull/11073#discussion_r381191382", "createdAt": "2020-02-19T10:05:10Z", "author": {"login": "azagrebin"}, "path": "flink-dist/src/main/flink-bin/conf/log4j-cli.properties", "diffHunk": "@@ -16,28 +16,38 @@\n # limitations under the License.\n ################################################################################\n \n-log4j.rootLogger=INFO, file\n+rootLogger.level = INFO\n+rootLogger.appenderRef.file.ref = FileAppender", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa30bf5f00b6195aed0037ee4b54c40ce07ce27"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE5NjcxNA==", "bodyText": "maybe not much important, but any reason to name it stderr?", "url": "https://github.com/apache/flink/pull/11073#discussion_r381196714", "createdAt": "2020-02-19T10:14:33Z", "author": {"login": "azagrebin"}, "path": "flink-dist/src/main/flink-bin/conf/log4j-console.properties", "diffHunk": "@@ -17,23 +17,30 @@\n ################################################################################\n \n # This affects logging for both user code and Flink\n-log4j.rootLogger=INFO, console\n+rootLogger.level = INFO\n+rootLogger.appenderRef.stderr.ref = ConsoleLogger", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa30bf5f00b6195aed0037ee4b54c40ce07ce27"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE5NzAyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            rootLogger.appenderRef.stderr.ref = ConsoleLogger\n          \n          \n            \n            rootLogger.appenderRef.stderr.ref = ConsoleAppender", "url": "https://github.com/apache/flink/pull/11073#discussion_r381197022", "createdAt": "2020-02-19T10:15:05Z", "author": {"login": "azagrebin"}, "path": "flink-dist/src/main/flink-bin/conf/log4j-console.properties", "diffHunk": "@@ -17,23 +17,30 @@\n ################################################################################\n \n # This affects logging for both user code and Flink\n-log4j.rootLogger=INFO, console\n+rootLogger.level = INFO\n+rootLogger.appenderRef.stderr.ref = ConsoleLogger", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa30bf5f00b6195aed0037ee4b54c40ce07ce27"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE5NzYyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            logger.netty.level = OFFlog4j.logger.org.apache.zookeeper=WARN, stdout\n          \n          \n            \n            logger.netty.level = ERROR", "url": "https://github.com/apache/flink/pull/11073#discussion_r381197620", "createdAt": "2020-02-19T10:16:16Z", "author": {"login": "azagrebin"}, "path": "flink-dist/src/main/flink-bin/conf/log4j-yarn-session.properties", "diffHunk": "@@ -16,16 +16,20 @@\n # limitations under the License.\n ################################################################################\n \n-log4j.rootLogger=INFO, stdout\n+rootLogger.level = INFO\n+rootLogger.appenderRef.console.ref = ConsoleAppender\n \n-# Log all infos in the given file\n-log4j.appender.stdout=org.apache.log4j.ConsoleAppender\n-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout\n-log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n\n+appender.console.name = ConsoleAppender\n+appender.console.type = CONSOLE\n+appender.console.layout.type = PatternLayout\n+appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n\n \n-# suppress the irrelevant (wrong) warnings from the netty channel handler\n-log4j.logger.org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline=ERROR, stdout\n-log4j.logger.org.apache.zookeeper=WARN, stdout\n-log4j.logger.org.apache.flink.shaded.org.apache.curator.framework=WARN, stdout\n-log4j.logger.org.apache.flink.runtime.util.ZooKeeperUtils=WARN, stdout\n-log4j.logger.org.apache.flink.runtime.leaderretrieval.ZooKeeperLeaderRetrievalService=WARN, stdout\n+# Suppress the irrelevant (wrong) warnings from the Netty channel handler\n+logger.netty.name = org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline\n+logger.netty.level = OFFlog4j.logger.org.apache.zookeeper=WARN, stdout", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa30bf5f00b6195aed0037ee4b54c40ce07ce27"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIxNjMwMQ==", "bodyText": "is this needed if there is already:\nrootLogger.appenderRef.console.ref = ConsoleAppender\n?\nor this is because levels differ for rootLogger  and sink ?\nalso for scala and LoggerOutputFormat", "url": "https://github.com/apache/flink/pull/11073#discussion_r381216301", "createdAt": "2020-02-19T10:50:43Z", "author": {"login": "azagrebin"}, "path": "flink-walkthroughs/flink-walkthrough-datastream-java/src/main/resources/archetype-resources/src/main/resources/log4j2.properties", "diffHunk": "@@ -0,0 +1,29 @@\n+################################################################################\n+#  Licensed to the Apache Software Foundation (ASF) under one\n+#  or more contributor license agreements.  See the NOTICE file\n+#  distributed with this work for additional information\n+#  regarding copyright ownership.  The ASF licenses this file\n+#  to you under the Apache License, Version 2.0 (the\n+#  \"License\"); you may not use this file except in compliance\n+#  with the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+# limitations under the License.\n+################################################################################\n+\n+rootLogger.level = WARN\n+rootLogger.appenderRef.console.ref = ConsoleAppender\n+\n+logger.sink.name = org.apache.flink.walkthrough.common.sink.AlertSink\n+logger.sink.level = INFO\n+logger.sink.appenderRef.console.ref = ConsoleAppender", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa30bf5f00b6195aed0037ee4b54c40ce07ce27"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIxODg2OQ==", "bodyText": "it would be nice to have the same naming convention for all file/console appenders", "url": "https://github.com/apache/flink/pull/11073#discussion_r381218869", "createdAt": "2020-02-19T10:55:47Z", "author": {"login": "azagrebin"}, "path": "tools/log4j-travis.properties", "diffHunk": "@@ -16,35 +16,52 @@\n # limitations under the License.\n ################################################################################\n \n-log4j.rootLogger=INFO, file\n+rootLogger.level = INFO\n+rootLogger.appenderRef.out.ref = file\n \n # -----------------------------------------------------------------------------\n # Console (use 'console')\n # -----------------------------------------------------------------------------\n-log4j.appender.console=org.apache.log4j.ConsoleAppender\n-log4j.appender.console.layout=org.apache.log4j.PatternLayout\n-log4j.appender.console.layout.ConversionPattern=%d{HH:mm:ss,SSS} [%20t] %-5p %-60c %x - %m%n\n+\n+appender.console.name = console", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa30bf5f00b6195aed0037ee4b54c40ce07ce27"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIxOTM2Mw==", "bodyText": "true by default?", "url": "https://github.com/apache/flink/pull/11073#discussion_r381219363", "createdAt": "2020-02-19T10:56:42Z", "author": {"login": "azagrebin"}, "path": "tools/log4j-travis.properties", "diffHunk": "@@ -16,35 +16,52 @@\n # limitations under the License.\n ################################################################################\n \n-log4j.rootLogger=INFO, file\n+rootLogger.level = INFO\n+rootLogger.appenderRef.out.ref = file\n \n # -----------------------------------------------------------------------------\n # Console (use 'console')\n # -----------------------------------------------------------------------------\n-log4j.appender.console=org.apache.log4j.ConsoleAppender\n-log4j.appender.console.layout=org.apache.log4j.PatternLayout\n-log4j.appender.console.layout.ConversionPattern=%d{HH:mm:ss,SSS} [%20t] %-5p %-60c %x - %m%n\n+\n+appender.console.name = console\n+appender.console.type = CONSOLE\n+appender.console.layout.type = PatternLayout\n+appender.console.layout.pattern = %d{HH:mm:ss,SSS} [%20t] %-5p %-60c %x - %m%n\n \n # -----------------------------------------------------------------------------\n # File (use 'file')\n # -----------------------------------------------------------------------------\n-log4j.appender.file=org.apache.log4j.FileAppender\n-log4j.appender.file.file=${log.dir}/mvn-${mvn.forkNumber}.log\n-log4j.appender.file.append=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa30bf5f00b6195aed0037ee4b54c40ce07ce27"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTIyMDg5Ng==", "bodyText": "maybe also naming convention for logger names containing only some package suffix (e.g. dash separated if needed) or class name or something like that\nI understand names do not matter too much here, just yarn1,2 looks confusing imo", "url": "https://github.com/apache/flink/pull/11073#discussion_r381220896", "createdAt": "2020-02-19T10:59:41Z", "author": {"login": "azagrebin"}, "path": "tools/log4j-travis.properties", "diffHunk": "@@ -16,35 +16,52 @@\n # limitations under the License.\n ################################################################################\n \n-log4j.rootLogger=INFO, file\n+rootLogger.level = INFO\n+rootLogger.appenderRef.out.ref = file\n \n # -----------------------------------------------------------------------------\n # Console (use 'console')\n # -----------------------------------------------------------------------------\n-log4j.appender.console=org.apache.log4j.ConsoleAppender\n-log4j.appender.console.layout=org.apache.log4j.PatternLayout\n-log4j.appender.console.layout.ConversionPattern=%d{HH:mm:ss,SSS} [%20t] %-5p %-60c %x - %m%n\n+\n+appender.console.name = console\n+appender.console.type = CONSOLE\n+appender.console.layout.type = PatternLayout\n+appender.console.layout.pattern = %d{HH:mm:ss,SSS} [%20t] %-5p %-60c %x - %m%n\n \n # -----------------------------------------------------------------------------\n # File (use 'file')\n # -----------------------------------------------------------------------------\n-log4j.appender.file=org.apache.log4j.FileAppender\n-log4j.appender.file.file=${log.dir}/mvn-${mvn.forkNumber}.log\n-log4j.appender.file.append=true\n-log4j.appender.file.layout=org.apache.log4j.PatternLayout\n-log4j.appender.file.layout.ConversionPattern=%d{HH:mm:ss,SSS} [%20t] %-5p %-60c %x - %m%n\n+appender.file.name = file\n+appender.file.type = FILE\n+appender.file.fileName = ${sys:log.dir}/mvn-${sys:mvn.forkNumber}.log\n+appender.file.layout.type = PatternLayout\n+appender.file.layout.pattern = %d{HH:mm:ss,SSS} [%20t] %-5p %-60c %x - %m%n\n \n # suppress the irrelevant (wrong) warnings from the netty channel handler\n-log4j.logger.org.jboss.netty.channel.DefaultChannelPipeline=ERROR\n-log4j.logger.org.apache.zookeeper=ERROR\n-log4j.logger.org.apache.zookeeper.server.quorum.QuorumCnxManager=OFF\n-log4j.logger.org.apache.flink.runtime.leaderelection=DEBUG\n-log4j.logger.org.apache.flink.runtime.leaderretrieval=DEBUG\n+logger.netty.name = org.jboss.netty.channel.DefaultChannelPipeline\n+logger.netty.level = ERROR\n+logger.zookeeper.name = org.apache.zookeeper\n+logger.zookeeper.level = ERROR\n+logger.zkquorum.name = org.apache.zookeeper.server.quorum.QuorumCnxManager\n+logger.zkquorum.level = OFF\n+logger.leaderretrieval.name = org.apache.flink.runtime.leaderretrieval\n+logger.leaderretrieval.level = DEBUG\n+logger.leaderelection.name = org.apache.flink.runtime.leaderelection\n+logger.leaderelection.level = DEBUG\n \n # Log a bit when running the flink-yarn-tests to avoid running into the 5 minutes timeout for\n # the tests\n-log4j.logger.org.apache.flink.yarn.YARNSessionFIFOITCase=INFO, console\n-log4j.logger.org.apache.flink.yarn.YARNSessionCapacitySchedulerITCase=INFO, console\n-log4j.logger.org.apache.flink.streaming.connectors.kafka=INFO, console\n-log4j.logger.org.I0Itec.zkclient=INFO, console\n-log4j.logger.org.apache.flink.streaming.connectors.kafka.internals.SimpleConsumerThread=OFF\n+logger.yarn1.name = org.apache.flink.yarn.YARNSessionFIFOITCase", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afa30bf5f00b6195aed0037ee4b54c40ce07ce27"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2ODI5Mw==", "bodyText": "org.I0Itec was not previously, but DefaultChannelPipeline \nalso other things do not always match the previous state", "url": "https://github.com/apache/flink/pull/11073#discussion_r381268293", "createdAt": "2020-02-19T12:47:29Z", "author": {"login": "azagrebin"}, "path": "flink-connectors/flink-connector-kafka-0.10/src/test/resources/log4j2-test.properties", "diffHunk": "@@ -18,13 +18,21 @@\n \n # Set root logger level to OFF to not flood build logs\n # set manually to INFO for debugging purposes\n-log4j.rootLogger=OFF, testlogger\n+rootLogger.level = OFF\n+rootLogger.appenderRef.test.ref = TestLogger\n \n-# A1 is set to be a ConsoleAppender.\n-log4j.appender.testlogger=org.apache.log4j.ConsoleAppender\n-log4j.appender.testlogger.target = System.err\n-log4j.appender.testlogger.layout=org.apache.log4j.PatternLayout\n-log4j.appender.testlogger.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n\n+appender.testlogger.name = TestLogger\n+appender.testlogger.type = CONSOLE\n+appender.testlogger.target = SYSTEM_ERR\n+appender.testlogger.layout.type = PatternLayout\n+appender.testlogger.layout.pattern = %-4r [%t] %-5p %c %x - %m%n\n \n-# suppress the irrelevant (wrong) warnings from the netty channel handler\n-log4j.logger.org.jboss.netty.channel.DefaultChannelPipeline=ERROR, testlogger\n+logger.kafka.name = kafka\n+logger.kafka.level = OFF\n+logger.kafka2.name = state.change\n+logger.kafka2.level = OFF\n+\n+logger.zookeeper.name = org.apache.zookeeper\n+logger.zookeeper.level = OFF\n+logger.I0Itec.name = org.I0Itec", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29034cb85769cd69b09b121c4b88f54b4483aafe"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b470ecd97705ea90c1273084cba11329f65efd5", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/8b470ecd97705ea90c1273084cba11329f65efd5", "committedDate": "2020-02-19T16:32:09Z", "message": "remove obsolete provider file"}, "afterCommit": {"oid": "a214fcca8d4557d2e4962a713cd8f2d9caf1d5cd", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/a214fcca8d4557d2e4962a713cd8f2d9caf1d5cd", "committedDate": "2020-02-19T16:41:50Z", "message": "remove obsolete provider file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNzc5Mzk4", "url": "https://github.com/apache/flink/pull/11073#pullrequestreview-361779398", "createdAt": "2020-02-20T10:13:35Z", "commit": {"oid": "acdbe3a5b41c7c9a0ac20b74a36633d977de7881"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDoxMzozNlrOFsNizA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDoxOTo0NFrOFsNwPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwMzU2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            appender.console.name = ConsoleAppenderW\n          \n          \n            \n            appender.console.name = ConsoleAppender", "url": "https://github.com/apache/flink/pull/11073#discussion_r381903564", "createdAt": "2020-02-20T10:13:36Z", "author": {"login": "azagrebin"}, "path": "docs/ops/deployment/native_kubernetes.md", "diffHunk": "@@ -140,7 +140,7 @@ If you want to use `kubectl logs <PodName>` to view the logs, you must perform t\n \n {% highlight bash %}\n # Log all infos to the console\n-appender.console.name = org.apache.log4j.ConsoleAppender\n+appender.console.name = ConsoleAppenderW", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acdbe3a5b41c7c9a0ac20b74a36633d977de7881"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwNjQ1Mg==", "bodyText": "will it not throw if the stream is empty after the filtering?", "url": "https://github.com/apache/flink/pull/11073#discussion_r381906452", "createdAt": "2020-02-20T10:18:44Z", "author": {"login": "azagrebin"}, "path": "flink-yarn-tests/src/test/java/org/apache/flink/yarn/YarnTestBase.java", "diffHunk": "@@ -817,7 +817,12 @@ protected void runWithArgs(String[] args, String terminateAfterString, String[]\n \t\t\t\t}\n \t\t\t}\n \t\t\t// check output for the expected terminateAfterString.\n-\t\t\ttestPassedFromLog4j = logMessageSupplier.get().stream().anyMatch(s -> s.contains(terminateAfterString));\n+\t\t\ttestPassedFromLog4j = logMessageSupplier.get().stream()\n+\t\t\t\t.filter(s -> s.contains(terminateAfterString))\n+\t\t\t\t.limit(1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e8fd83e7450b1b408661d7d259a47cd83473ce1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwNzAwNg==", "bodyText": "and comments in tests?", "url": "https://github.com/apache/flink/pull/11073#discussion_r381907006", "createdAt": "2020-02-20T10:19:44Z", "author": {"login": "azagrebin"}, "path": "flink-connectors/flink-connector-elasticsearch5/pom.xml", "diffHunk": "@@ -270,17 +222,6 @@ under the License.\n \t\t\t\t\t\t\t\t\t\t<exclude>META-INF/maven/org.y*/**</exclude>\n \t\t\t\t\t\t\t\t\t</excludes>\n \t\t\t\t\t\t\t\t</filter>\n-\t\t\t\t\t\t\t\t<!--\n-\t\t\t\t\t\t\t\t  Since we relocate the dependency, the paths specified in the providers file\n-\t\t\t\t\t\t\t\t  will be incorrect. We exclude it here, and re-package a new providers file\n-\t\t\t\t\t\t\t\t  with the correct re-located paths.\n-\t\t\t\t\t\t\t\t-->\n-\t\t\t\t\t\t\t\t<filter>\n-\t\t\t\t\t\t\t\t\t<artifact>org.apache.logging.log4j:log4j-to-slf4j</artifact>\n-\t\t\t\t\t\t\t\t\t<excludes>\n-\t\t\t\t\t\t\t\t\t\t<exclude>META-INF/log4j-provider.properties</exclude>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU1OTMxNw=="}, "originalCommit": {"oid": "d2aa679446b439e7a296418159afcc97e64feefb"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTAxMzk5", "url": "https://github.com/apache/flink/pull/11073#pullrequestreview-361901399", "createdAt": "2020-02-20T13:33:07Z", "commit": {"oid": "cc0a443df07fd97291c40b32dab427584600a37e"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMzozMzowN1rOFsTZeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMzozNDo0MFrOFsTc9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk5OTQ4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In the IDE this means to replacing such dependencies defined in your pom, and possible adding exclusions on dependencies that transitively depend on them.\n          \n          \n            \n            In the IDE this means you have to replace such dependencies defined in your pom, and possible adding exclusions on dependencies that transitively depend on them.", "url": "https://github.com/apache/flink/pull/11073#discussion_r381999481", "createdAt": "2020-02-20T13:33:07Z", "author": {"login": "azagrebin"}, "path": "docs/monitoring/logging.md", "diffHunk": "@@ -38,6 +38,23 @@ Flink ships with the following default properties files:\n - `log4j-yarn-session.properties`: Used by the Flink command line client when starting a YARN session (`yarn-session.sh`)\n - `log4j.properties`: JobManager/Taskmanager logs (both standalone and YARN)\n \n+### Compatibility with Log4j1\n+\n+Flink ships with the [Log4j API bridge](https://logging.apache.org/log4j/log4j-2.2/log4j-1.2-api/index.html), allowing existing applications that work against Log4j1 classes to continue working.\n+\n+If you have custom Log4j1 properties files or code that relies on Log4j1, please check out the official Log4j [compatibility](https://logging.apache.org/log4j/2.x/manual/compatibility.html) and [migration](https://logging.apache.org/log4j/2.x/manual/migration.html) guides.\n+\n+## Configuring Log4j1\n+\n+To use Flink with Log4j1 you must ensure that:\n+- `org.apache.logging.log4j:log4j-slf4j-impl` and `org.apache.logging.log4j:log4j-1.2-api` are not on the classpath,\n+- `org.slf4j:slf4j-log4j12`and `log4j:log4j` are on the classpath.\n+\n+In the IDE this means to replacing such dependencies defined in your pom, and possible adding exclusions on dependencies that transitively depend on them.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc0a443df07fd97291c40b32dab427584600a37e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwMDAzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For Flink distributions this means to replace the respective jars in the `lib` directory, and\n          \n          \n            \n            For Flink distributions this means you have to to replace the respective jars in the `lib` directory, and", "url": "https://github.com/apache/flink/pull/11073#discussion_r382000038", "createdAt": "2020-02-20T13:34:05Z", "author": {"login": "azagrebin"}, "path": "docs/monitoring/logging.md", "diffHunk": "@@ -38,6 +38,23 @@ Flink ships with the following default properties files:\n - `log4j-yarn-session.properties`: Used by the Flink command line client when starting a YARN session (`yarn-session.sh`)\n - `log4j.properties`: JobManager/Taskmanager logs (both standalone and YARN)\n \n+### Compatibility with Log4j1\n+\n+Flink ships with the [Log4j API bridge](https://logging.apache.org/log4j/log4j-2.2/log4j-1.2-api/index.html), allowing existing applications that work against Log4j1 classes to continue working.\n+\n+If you have custom Log4j1 properties files or code that relies on Log4j1, please check out the official Log4j [compatibility](https://logging.apache.org/log4j/2.x/manual/compatibility.html) and [migration](https://logging.apache.org/log4j/2.x/manual/migration.html) guides.\n+\n+## Configuring Log4j1\n+\n+To use Flink with Log4j1 you must ensure that:\n+- `org.apache.logging.log4j:log4j-slf4j-impl` and `org.apache.logging.log4j:log4j-1.2-api` are not on the classpath,\n+- `org.slf4j:slf4j-log4j12`and `log4j:log4j` are on the classpath.\n+\n+In the IDE this means to replacing such dependencies defined in your pom, and possible adding exclusions on dependencies that transitively depend on them.\n+\n+For Flink distributions this means to replace the respective jars in the `lib` directory, and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc0a443df07fd97291c40b32dab427584600a37e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwMDM3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            replacing all log4j properties files in the `conf` directory with Log4j1-compliant versions.\n          \n          \n            \n            all log4j properties files in the `conf` directory with Log4j1-compliant versions.", "url": "https://github.com/apache/flink/pull/11073#discussion_r382000375", "createdAt": "2020-02-20T13:34:40Z", "author": {"login": "azagrebin"}, "path": "docs/monitoring/logging.md", "diffHunk": "@@ -38,6 +38,23 @@ Flink ships with the following default properties files:\n - `log4j-yarn-session.properties`: Used by the Flink command line client when starting a YARN session (`yarn-session.sh`)\n - `log4j.properties`: JobManager/Taskmanager logs (both standalone and YARN)\n \n+### Compatibility with Log4j1\n+\n+Flink ships with the [Log4j API bridge](https://logging.apache.org/log4j/log4j-2.2/log4j-1.2-api/index.html), allowing existing applications that work against Log4j1 classes to continue working.\n+\n+If you have custom Log4j1 properties files or code that relies on Log4j1, please check out the official Log4j [compatibility](https://logging.apache.org/log4j/2.x/manual/compatibility.html) and [migration](https://logging.apache.org/log4j/2.x/manual/migration.html) guides.\n+\n+## Configuring Log4j1\n+\n+To use Flink with Log4j1 you must ensure that:\n+- `org.apache.logging.log4j:log4j-slf4j-impl` and `org.apache.logging.log4j:log4j-1.2-api` are not on the classpath,\n+- `org.slf4j:slf4j-log4j12`and `log4j:log4j` are on the classpath.\n+\n+In the IDE this means to replacing such dependencies defined in your pom, and possible adding exclusions on dependencies that transitively depend on them.\n+\n+For Flink distributions this means to replace the respective jars in the `lib` directory, and\n+replacing all log4j properties files in the `conf` directory with Log4j1-compliant versions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc0a443df07fd97291c40b32dab427584600a37e"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTA0MjAw", "url": "https://github.com/apache/flink/pull/11073#pullrequestreview-361904200", "createdAt": "2020-02-20T13:37:04Z", "commit": {"oid": "cc0a443df07fd97291c40b32dab427584600a37e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMzozNzowNVrOFsTiAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMzozNzowNVrOFsTiAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAwMTY2Nw==", "bodyText": "Maybe also a note that native log4j2 deps should stay in /lib for ES", "url": "https://github.com/apache/flink/pull/11073#discussion_r382001667", "createdAt": "2020-02-20T13:37:05Z", "author": {"login": "azagrebin"}, "path": "docs/monitoring/logging.md", "diffHunk": "@@ -38,6 +38,23 @@ Flink ships with the following default properties files:\n - `log4j-yarn-session.properties`: Used by the Flink command line client when starting a YARN session (`yarn-session.sh`)\n - `log4j.properties`: JobManager/Taskmanager logs (both standalone and YARN)\n \n+### Compatibility with Log4j1\n+\n+Flink ships with the [Log4j API bridge](https://logging.apache.org/log4j/log4j-2.2/log4j-1.2-api/index.html), allowing existing applications that work against Log4j1 classes to continue working.\n+\n+If you have custom Log4j1 properties files or code that relies on Log4j1, please check out the official Log4j [compatibility](https://logging.apache.org/log4j/2.x/manual/compatibility.html) and [migration](https://logging.apache.org/log4j/2.x/manual/migration.html) guides.\n+\n+## Configuring Log4j1\n+\n+To use Flink with Log4j1 you must ensure that:\n+- `org.apache.logging.log4j:log4j-slf4j-impl` and `org.apache.logging.log4j:log4j-1.2-api` are not on the classpath,\n+- `org.slf4j:slf4j-log4j12`and `log4j:log4j` are on the classpath.\n+\n+In the IDE this means to replacing such dependencies defined in your pom, and possible adding exclusions on dependencies that transitively depend on them.\n+\n+For Flink distributions this means to replace the respective jars in the `lib` directory, and\n+replacing all log4j properties files in the `conf` directory with Log4j1-compliant versions.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc0a443df07fd97291c40b32dab427584600a37e"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDUzMDA1", "url": "https://github.com/apache/flink/pull/11073#pullrequestreview-362053005", "createdAt": "2020-02-20T16:34:18Z", "commit": {"oid": "ad174d1c0b5584c3ec74167f75c4d48b44cef657"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjozNDoxOFrOFsaicg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjozNDoxOFrOFsaicg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjExNjQ2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In the IDE this means you have to replace such dependencies defined in your pom, and possible add exclusions on dependencies that transitively depend on them.\n          \n          \n            \n            In the IDE this means you have to replace such dependencies defined in your pom, and possibly add exclusions on dependencies that transitively depend on them.", "url": "https://github.com/apache/flink/pull/11073#discussion_r382116466", "createdAt": "2020-02-20T16:34:18Z", "author": {"login": "azagrebin"}, "path": "docs/monitoring/logging.md", "diffHunk": "@@ -47,13 +47,15 @@ If you have custom Log4j1 properties files or code that relies on Log4j1, please\n ## Configuring Log4j1\n \n To use Flink with Log4j1 you must ensure that:\n-- `org.apache.logging.log4j:log4j-slf4j-impl` and `org.apache.logging.log4j:log4j-1.2-api` are not on the classpath,\n-- `org.slf4j:slf4j-log4j12`and `log4j:log4j` are on the classpath.\n+- `org.apache.logging.log4j:log4j-core`, `org.apache.logging.log4j:log4j-slf4j-impl` and `org.apache.logging.log4j:log4j-1.2-api` are not on the classpath,\n+- `log4j:log4j`, `org.slf4j:slf4j-log4j12`, `org.apache.logging.log4j:log4j-to-slf4j` and `org.apache.logging.log4j:log4j-api` are on the classpath.\n \n-In the IDE this means to replacing such dependencies defined in your pom, and possible adding exclusions on dependencies that transitively depend on them.\n+In the IDE this means you have to replace such dependencies defined in your pom, and possible add exclusions on dependencies that transitively depend on them.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad174d1c0b5584c3ec74167f75c4d48b44cef657"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61bb4cb16196729d63bf44071bb2aef63a8b5457", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/61bb4cb16196729d63bf44071bb2aef63a8b5457", "committedDate": "2020-02-21T10:37:18Z", "message": "[FLINK-15672][build] Migrate to log4j2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f911d085f42f3077eb8742ea54577a54089f2222", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/f911d085f42f3077eb8742ea54577a54089f2222", "committedDate": "2020-02-21T10:37:18Z", "message": "[FLINK-15672][build] Migrate production log4j configuration to log4j2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0fa7ff0de573f9be8aaebe6791dbc5b9dc0fb74", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/c0fa7ff0de573f9be8aaebe6791dbc5b9dc0fb74", "committedDate": "2020-02-21T10:37:19Z", "message": "[FLINK-15672][build][tests] Migrate test log4j configurations to log4j2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bca4c1aa6cc4a15cf8b958cd395ef0c92cb0a57f", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/bca4c1aa6cc4a15cf8b958cd395ef0c92cb0a57f", "committedDate": "2020-02-21T10:32:35Z", "message": "fix bash utils logging"}, "afterCommit": {"oid": "c0fa7ff0de573f9be8aaebe6791dbc5b9dc0fb74", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/c0fa7ff0de573f9be8aaebe6791dbc5b9dc0fb74", "committedDate": "2020-02-21T10:37:19Z", "message": "[FLINK-15672][build][tests] Migrate test log4j configurations to log4j2"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4338, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}