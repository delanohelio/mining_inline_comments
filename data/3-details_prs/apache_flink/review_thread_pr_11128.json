{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NzA3OTE2", "number": 11128, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNToyOToxNFrODhxO1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNToyOToxNFrODhxO1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzM2MjE0OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/streaming/index.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNToyOToxNFrOFssFWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNToyOToxNFrOFssFWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMzkyOA==", "bodyText": "temporal \u4e0d\u662f\u4e34\u65f6\u7684\u610f\u601d\u3002 \u53ef\u80fd\u7ffb\u8bd1\u6210 \u201c\u65f6\u6001\u8868\u201d\u4f1a\u66f4\u8d34\u5207\u4e9b\u3002", "url": "https://github.com/apache/flink/pull/11128#discussion_r382403928", "createdAt": "2020-02-21T05:29:14Z", "author": {"login": "wuchong"}, "path": "docs/dev/table/streaming/index.zh.md", "diffHunk": "@@ -25,20 +25,20 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-Flink's [Table API]({{ site.baseurl }}/dev/table/tableApi.html) and [SQL support]({{ site.baseurl }}/dev/table/sql/index.html) are unified APIs for batch and stream processing.\n-This means that Table API and SQL queries have the same semantics regardless whether their input is bounded batch input or unbounded stream input.\n-Because the relational algebra and SQL were originally designed for batch processing,\n-relational queries on unbounded streaming input are not as well understood as relational queries on bounded batch input.\n+Flink \u7684 [Table API]({{ site.baseurl }}/zh/dev/table/tableApi.html) \u548c [SQL]({{ site.baseurl }}/zh/dev/table/sql/index.html) \u662f\u6d41\u6279\u7edf\u4e00\u7684 API\u3002\n+\u8fd9\u610f\u5473\u7740 Table API & SQL \u5728\u65e0\u8bba\u6709\u9650\u7684\u6279\u5f0f\u8f93\u5165\u8fd8\u662f\u65e0\u9650\u7684\u6d41\u5f0f\u8f93\u5165\u4e0b\uff0c\u90fd\u5177\u6709\u76f8\u540c\u7684\u8bed\u4e49\u3002\n+\u56e0\u4e3a\u4f20\u7edf\u7684\u5173\u7cfb\u4ee3\u6570\u4ee5\u53ca SQL \u6700\u5f00\u59cb\u90fd\u662f\u4e3a\u4e86\u6279\u5f0f\u5904\u7406\u800c\u8bbe\u8ba1\u7684\uff0c\n+\u5173\u7cfb\u578b\u67e5\u8be2\u5728\u6d41\u5f0f\u573a\u666f\u4e0b\u4e0d\u5982\u5728\u6279\u5f0f\u573a\u666f\u4e0b\u5bb9\u6613\u61c2\u3002\n \n-The following pages explain concepts, practical limitations, and stream-specific configuration parameters of Flink's relational APIs on streaming data.\n+\u4e0b\u9762\u8fd9\u4e9b\u9875\u9762\u5305\u542b\u4e86\u6982\u5ff5\u3001\u5b9e\u9645\u7684\u9650\u5236\uff0c\u4ee5\u53ca\u6d41\u5f0f\u6570\u636e\u5904\u7406\u4e2d\u7684\u4e00\u4e9b\u7279\u5b9a\u7684\u914d\u7f6e\u3002\n \n-Where to go next?\n+\u63a5\u4e0b\u6765\uff1f\n -----------------\n \n-* [Dynamic Tables]({{ site.baseurl }}/dev/table/streaming/dynamic_tables.html): Describes the concept of dynamic tables.\n-* [Time attributes]({{ site.baseurl }}/dev/table/streaming/time_attributes.html): Explains time attributes and how time attributes are handled in Table API & SQL.\n-* [Joins in Continuous Queries]({{ site.baseurl }}/dev/table/streaming/joins.html): Different supported types of Joins in Continuous Queries.\n-* [Temporal Tables]({{ site.baseurl }}/dev/table/streaming/temporal_tables.html): Describes the Temporal Table concept.\n-* [Query configuration]({{ site.baseurl }}/dev/table/streaming/query_configuration.html): Lists Table API & SQL specific configuration options.\n+* [\u52a8\u6001\u8868]({{ site.baseurl }}/zh/dev/table/streaming/dynamic_tables.html): \u63cf\u8ff0\u4e86\u52a8\u6001\u8868\u7684\u6982\u5ff5\u3002\n+* [\u65f6\u95f4\u5c5e\u6027]({{ site.baseurl }}/zh/dev/table/streaming/time_attributes.html): \u89e3\u91ca\u4e86\u65f6\u95f4\u5c5e\u6027\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u5728 Table API & SQL \u4e2d\u4f7f\u7528\u7684\u3002\n+* [\u6d41\u4e0a\u7684 Join]({{ site.baseurl }}/zh/dev/table/streaming/joins.html): \u652f\u6301\u7684\u51e0\u79cd\u6d41\u4e0a\u7684 Join\u3002\n+* [\u4e34\u65f6\u8868]({{ site.baseurl }}/zh/dev/table/streaming/temporal_tables.html): \u63cf\u8ff0\u4e86\u4e34\u65f6\u8868\u7684\u6982\u5ff5\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17ca315c74804ebe0f81dcfac7dfead7e83b590"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 950, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}