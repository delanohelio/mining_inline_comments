{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MDA0MTUw", "number": 12006, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODowNzo0OFrOD6I08Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODowNzo0OFrOD6I08Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjg4NjI1OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/internals/KeyedSerializationSchemaWrapper.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODowNzo0OFrOGRzLKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOTowNTo1MlrOGR1XYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNzQxNg==", "bodyText": "Why don't we forward the open() call but need to do casts when invoking?", "url": "https://github.com/apache/flink/pull/12006#discussion_r421317416", "createdAt": "2020-05-07T08:07:48Z", "author": {"login": "aljoscha"}, "path": "flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/internals/KeyedSerializationSchemaWrapper.java", "diffHunk": "@@ -37,6 +37,10 @@ public KeyedSerializationSchemaWrapper(SerializationSchema<T> serializationSchem\n \t\tthis.serializationSchema = serializationSchema;\n \t}\n \n+\tpublic SerializationSchema<T> getSerializationSchema() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01fc239c8c30cfcc8d5f12bf6aaf6a55041ad25a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMyMjA0NA==", "bodyText": "I did not want to add new features to a deprecated interface. The KeyedSerializationSchema is deprecated and that's why I did not want to add the open() method there. Therefore there is no method where I can forward it. Still I wanted to support the open for the top-level SerializationSchema, which is wrapped in that deprecated class.", "url": "https://github.com/apache/flink/pull/12006#discussion_r421322044", "createdAt": "2020-05-07T08:15:36Z", "author": {"login": "dawidwys"}, "path": "flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/internals/KeyedSerializationSchemaWrapper.java", "diffHunk": "@@ -37,6 +37,10 @@ public KeyedSerializationSchemaWrapper(SerializationSchema<T> serializationSchem\n \t\tthis.serializationSchema = serializationSchema;\n \t}\n \n+\tpublic SerializationSchema<T> getSerializationSchema() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNzQxNg=="}, "originalCommit": {"oid": "01fc239c8c30cfcc8d5f12bf6aaf6a55041ad25a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM1MzMxMw==", "bodyText": "Ok, that seems fine. Good to merge then.", "url": "https://github.com/apache/flink/pull/12006#discussion_r421353313", "createdAt": "2020-05-07T09:05:52Z", "author": {"login": "aljoscha"}, "path": "flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/internals/KeyedSerializationSchemaWrapper.java", "diffHunk": "@@ -37,6 +37,10 @@ public KeyedSerializationSchemaWrapper(SerializationSchema<T> serializationSchem\n \t\tthis.serializationSchema = serializationSchema;\n \t}\n \n+\tpublic SerializationSchema<T> getSerializationSchema() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNzQxNg=="}, "originalCommit": {"oid": "01fc239c8c30cfcc8d5f12bf6aaf6a55041ad25a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1513, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}