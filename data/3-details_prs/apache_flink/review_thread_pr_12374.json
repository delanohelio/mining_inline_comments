{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MjkzNjk3", "number": 12374, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwOTozNToyMVrOEAbtpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMTo0NDozM1rOEAeOGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODg5NTEwOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/CreditBasedPartitionRequestClientHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwOTozNToyMVrOGbtTxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMToyNToxMVrOGbw1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTcwNzA3OQ==", "bodyText": "assertEquals(expectedMessage, ignored.getMessage()) ?", "url": "https://github.com/apache/flink/pull/12374#discussion_r431707079", "createdAt": "2020-05-28T09:35:21Z", "author": {"login": "Jiayi-Liao"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/CreditBasedPartitionRequestClientHandlerTest.java", "diffHunk": "@@ -486,6 +488,47 @@ public void testReadBufferResponseAfterRemovingChannel() throws Exception {\n \t\ttestReadBufferResponseWithReleasingOrRemovingChannel(true, false);\n \t}\n \n+\t@Test\n+\tpublic void testRemoteInputChannelOnBufferException() throws Exception {\n+\t\t// Setup\n+\t\tfinal int bufferSize = 1024;\n+\t\tfinal String expectedMessage = \"test exception on buffer\";\n+\t\tfinal NetworkBufferPool networkBufferPool = new NetworkBufferPool(10, bufferSize, 2);\n+\t\tfinal SingleInputGate inputGate = createSingleInputGate(1, networkBufferPool);\n+\t\tfinal RemoteInputChannel inputChannel = new TestRemoteInputChannelForError(inputGate, expectedMessage);\n+\t\tfinal CreditBasedPartitionRequestClientHandler handler = new CreditBasedPartitionRequestClientHandler();\n+\n+\t\ttry {\n+\t\t\tinputGate.setInputChannels(inputChannel);\n+\t\t\tinputGate.assignExclusiveSegments();\n+\t\t\tinputGate.requestPartitions();\n+\t\t\thandler.addInputChannel(inputChannel);\n+\n+\t\t\tfinal BufferResponse bufferResponse = createBufferResponse(\n+\t\t\t\tTestBufferFactory.createBuffer(bufferSize),\n+\t\t\t\t0,\n+\t\t\t\tinputChannel.getInputChannelId(),\n+\t\t\t\t1,\n+\t\t\t\tnew NetworkBufferAllocator(handler));\n+\n+\t\t\t// It will trigger an expected exception from TestRemoteInputChannelForError#onBuffer\n+\t\t\thandler.channelRead(null, bufferResponse);\n+\n+\t\t\t// The handler should not be tagged as error for above excepted exception\n+\t\t\thandler.checkError();\n+\n+\t\t\ttry {\n+\t\t\t\t// The input channel should be tagged as error and the respective exception is thrown via #getNext\n+\t\t\t\tinputGate.getNext();\n+\t\t\t} catch (IOException ignored) {\n+\t\t\t\tassertEquals(\"exception for test\", ignored.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eeaa680286b6dd389acebbf1d8695ba94ff5ec59"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc2NDc5Mg==", "bodyText": "yes, forgot updating it while introducing the expectedMessage variable.", "url": "https://github.com/apache/flink/pull/12374#discussion_r431764792", "createdAt": "2020-05-28T11:25:11Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/CreditBasedPartitionRequestClientHandlerTest.java", "diffHunk": "@@ -486,6 +488,47 @@ public void testReadBufferResponseAfterRemovingChannel() throws Exception {\n \t\ttestReadBufferResponseWithReleasingOrRemovingChannel(true, false);\n \t}\n \n+\t@Test\n+\tpublic void testRemoteInputChannelOnBufferException() throws Exception {\n+\t\t// Setup\n+\t\tfinal int bufferSize = 1024;\n+\t\tfinal String expectedMessage = \"test exception on buffer\";\n+\t\tfinal NetworkBufferPool networkBufferPool = new NetworkBufferPool(10, bufferSize, 2);\n+\t\tfinal SingleInputGate inputGate = createSingleInputGate(1, networkBufferPool);\n+\t\tfinal RemoteInputChannel inputChannel = new TestRemoteInputChannelForError(inputGate, expectedMessage);\n+\t\tfinal CreditBasedPartitionRequestClientHandler handler = new CreditBasedPartitionRequestClientHandler();\n+\n+\t\ttry {\n+\t\t\tinputGate.setInputChannels(inputChannel);\n+\t\t\tinputGate.assignExclusiveSegments();\n+\t\t\tinputGate.requestPartitions();\n+\t\t\thandler.addInputChannel(inputChannel);\n+\n+\t\t\tfinal BufferResponse bufferResponse = createBufferResponse(\n+\t\t\t\tTestBufferFactory.createBuffer(bufferSize),\n+\t\t\t\t0,\n+\t\t\t\tinputChannel.getInputChannelId(),\n+\t\t\t\t1,\n+\t\t\t\tnew NetworkBufferAllocator(handler));\n+\n+\t\t\t// It will trigger an expected exception from TestRemoteInputChannelForError#onBuffer\n+\t\t\thandler.channelRead(null, bufferResponse);\n+\n+\t\t\t// The handler should not be tagged as error for above excepted exception\n+\t\t\thandler.checkError();\n+\n+\t\t\ttry {\n+\t\t\t\t// The input channel should be tagged as error and the respective exception is thrown via #getNext\n+\t\t\t\tinputGate.getNext();\n+\t\t\t} catch (IOException ignored) {\n+\t\t\t\tassertEquals(\"exception for test\", ignored.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTcwNzA3OQ=="}, "originalCommit": {"oid": "eeaa680286b6dd389acebbf1d8695ba94ff5ec59"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTMwNTg3OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/CreditBasedPartitionRequestClientHandlerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMTo0NDozM1rOGbxa9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMTo0NDozM1rOGbxa9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc3NDQ1Mw==", "bodyText": "nit rename to:\ntestDoNotFailHandlerOnSingleChannelFailure()\nor\ntestDoNotFailHandlerOnSingleChannelOnBufferFailure()\n? I think that would convey the purpose of the test better, instead of describing what's happening inside.", "url": "https://github.com/apache/flink/pull/12374#discussion_r431774453", "createdAt": "2020-05-28T11:44:33Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/CreditBasedPartitionRequestClientHandlerTest.java", "diffHunk": "@@ -486,6 +488,47 @@ public void testReadBufferResponseAfterRemovingChannel() throws Exception {\n \t\ttestReadBufferResponseWithReleasingOrRemovingChannel(true, false);\n \t}\n \n+\t@Test\n+\tpublic void testRemoteInputChannelOnBufferException() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a4f7c5d2e2db50eda956b89b6b38e0f0c2e0b3"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4483, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}