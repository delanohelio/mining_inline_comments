{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NDIyNDcw", "number": 12945, "title": "[FLINK-18629] Add type to ConnectedStreams#keyBy", "bodyText": "What is the purpose of the change\nAdding a generic type to the method makes it possible to pass the type\nfrom a lambda function. Otherwise a wildcard type '?' is derived as\nObject and thus TypeExtractor extract a GenericTypeInfo for the\nkey.\nBrief change log\n\nChanged method ConnctedStream#keyBy to accept KeySelector of the same generic type in both scala and java API\nReplaced an internal KeySelectorWithType class in scala API with explicitly passing the keyType to the underlying java API.\n\nVerifying this change\nAdded test:\n\nDataStreamTest#testKeyedConnectedStreamsType\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know) -> can change serializer for keys in StateBackends\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-07-21T11:43:06Z", "url": "https://github.com/apache/flink/pull/12945", "merged": true, "mergeCommit": {"oid": "094cd530c052c2f0776883521e71c53748e7eb2c"}, "closed": true, "closedAt": "2020-07-24T08:50:57Z", "author": {"login": "dawidwys"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3FeX0gBqjM1NzEwMjI2MjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3zKAIABqjM1ODEwNzAyMDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "849a7a97e2536f429f8869beb4b76be6f3354570", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/849a7a97e2536f429f8869beb4b76be6f3354570", "committedDate": "2020-07-21T11:38:26Z", "message": "[FLINK-18629] Add type to ConnectedStreams#keyBy\n\nAdding a generic type to the method makes it possible to pass the type\nfrom a lambda function. Otherwise a wildcard type '?' is derived as\nObject and thus TypeExtractor extract a GenericTypeInfo<Object> for the\nkey."}, "afterCommit": {"oid": "996f5157c9bbf1c48989fe92187038549df0e0fd", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/996f5157c9bbf1c48989fe92187038549df0e0fd", "committedDate": "2020-07-21T12:34:22Z", "message": "[FLINK-18629] Add type to ConnectedStreams#keyBy\n\nAdding a generic type to the method makes it possible to pass the type\nfrom a lambda function. Otherwise a wildcard type '?' is derived as\nObject and thus TypeExtractor extract a GenericTypeInfo<Object> for the\nkey."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MTIzNzAy", "url": "https://github.com/apache/flink/pull/12945#pullrequestreview-454123702", "createdAt": "2020-07-23T13:21:41Z", "commit": {"oid": "996f5157c9bbf1c48989fe92187038549df0e0fd"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzoyMTo0MVrOG2KOSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMzoyMTo0MVrOG2KOSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQ0Mzc4Ng==", "bodyText": "nit: I like the simplicity of the code but I think stacktraces are harder to parse with anonymous classes thrown in the mix. Just a thought, though.", "url": "https://github.com/apache/flink/pull/12945#discussion_r459443786", "createdAt": "2020-07-23T13:21:41Z", "author": {"login": "aljoscha"}, "path": "flink-streaming-scala/src/main/scala/org/apache/flink/streaming/api/scala/ConnectedStreams.scala", "diffHunk": "@@ -300,19 +300,22 @@ class ConnectedStreams[IN1, IN2](javaStream: JavaCStream[IN1, IN2]) {\n    * @param fun2 The second stream's key function\n    * @return The key-grouped connected streams\n    */\n-  def keyBy[K1: TypeInformation, K2: TypeInformation](fun1: IN1 => K1, fun2: IN2 => K2):\n+  def keyBy[KEY: TypeInformation](fun1: IN1 => KEY, fun2: IN2 => KEY):\n       ConnectedStreams[IN1, IN2] = {\n \n-    val keyType1 = implicitly[TypeInformation[K1]]\n-    val keyType2 = implicitly[TypeInformation[K2]]\n-    \n+    val keyType = implicitly[TypeInformation[KEY]]\n+\n     val cleanFun1 = clean(fun1)\n     val cleanFun2 = clean(fun2)\n-    \n-    val keyExtractor1 = new KeySelectorWithType[IN1, K1](cleanFun1, keyType1)\n-    val keyExtractor2 = new KeySelectorWithType[IN2, K2](cleanFun2, keyType2)\n-    \n-    asScalaStream(javaStream.keyBy(keyExtractor1, keyExtractor2))\n+\n+    val keyExtractor1 = new KeySelector[IN1, KEY] {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "996f5157c9bbf1c48989fe92187038549df0e0fd"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "996f5157c9bbf1c48989fe92187038549df0e0fd", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/996f5157c9bbf1c48989fe92187038549df0e0fd", "committedDate": "2020-07-21T12:34:22Z", "message": "[FLINK-18629] Add type to ConnectedStreams#keyBy\n\nAdding a generic type to the method makes it possible to pass the type\nfrom a lambda function. Otherwise a wildcard type '?' is derived as\nObject and thus TypeExtractor extract a GenericTypeInfo<Object> for the\nkey."}, "afterCommit": {"oid": "397cbb0e3bd97f630ae58b989dec87972e5c6d3c", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/397cbb0e3bd97f630ae58b989dec87972e5c6d3c", "committedDate": "2020-07-23T17:13:34Z", "message": "[FLINK-18629] Add type to ConnectedStreams#keyBy\n\nAdding a generic type to the method makes it possible to pass the type\nfrom a lambda function. Otherwise a wildcard type '?' is derived as\nObject and thus TypeExtractor extract a GenericTypeInfo<Object> for the\nkey."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "397cbb0e3bd97f630ae58b989dec87972e5c6d3c", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/397cbb0e3bd97f630ae58b989dec87972e5c6d3c", "committedDate": "2020-07-23T17:13:34Z", "message": "[FLINK-18629] Add type to ConnectedStreams#keyBy\n\nAdding a generic type to the method makes it possible to pass the type\nfrom a lambda function. Otherwise a wildcard type '?' is derived as\nObject and thus TypeExtractor extract a GenericTypeInfo<Object> for the\nkey."}, "afterCommit": {"oid": "ad777d7b78e3ae98dea1a3b0b845418c2fd3524b", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/ad777d7b78e3ae98dea1a3b0b845418c2fd3524b", "committedDate": "2020-07-23T17:19:04Z", "message": "[FLINK-18629] Add type to ConnectedStreams#keyBy\n\nAdding a generic type to the method makes it possible to pass the type\nfrom a lambda function. Otherwise a wildcard type '?' is derived as\nObject and thus TypeExtractor extract a GenericTypeInfo<Object> for the\nkey."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5aef5007f883d62f11c2e4247f2f5682e9b081e", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/b5aef5007f883d62f11c2e4247f2f5682e9b081e", "committedDate": "2020-07-23T17:47:47Z", "message": "[FLINK-18629] Add type to ConnectedStreams#keyBy\n\nAdding a generic type to the method makes it possible to pass the type\nfrom a lambda function. Otherwise a wildcard type '?' is derived as\nObject and thus TypeExtractor extract a GenericTypeInfo<Object> for the\nkey."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad777d7b78e3ae98dea1a3b0b845418c2fd3524b", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/ad777d7b78e3ae98dea1a3b0b845418c2fd3524b", "committedDate": "2020-07-23T17:19:04Z", "message": "[FLINK-18629] Add type to ConnectedStreams#keyBy\n\nAdding a generic type to the method makes it possible to pass the type\nfrom a lambda function. Otherwise a wildcard type '?' is derived as\nObject and thus TypeExtractor extract a GenericTypeInfo<Object> for the\nkey."}, "afterCommit": {"oid": "b5aef5007f883d62f11c2e4247f2f5682e9b081e", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/b5aef5007f883d62f11c2e4247f2f5682e9b081e", "committedDate": "2020-07-23T17:47:47Z", "message": "[FLINK-18629] Add type to ConnectedStreams#keyBy\n\nAdding a generic type to the method makes it possible to pass the type\nfrom a lambda function. Otherwise a wildcard type '?' is derived as\nObject and thus TypeExtractor extract a GenericTypeInfo<Object> for the\nkey."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2914, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}