{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MzI3MTQ2", "number": 13157, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoyMDozMFrOEY57eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMTozOTo0N1rOEafR7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTUwMzk0OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoyMDozMFrOHBbCSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoyMDozMFrOHBbCSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI1MzU3OQ==", "bodyText": "In case of invalid partition spec, we should throw PartitionSpecInvalidException", "url": "https://github.com/apache/flink/pull/13157#discussion_r471253579", "createdAt": "2020-08-17T06:20:30Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "diffHunk": "@@ -765,7 +765,7 @@ public void dropPartition(ObjectPath tablePath, CatalogPartitionSpec partitionSp\n \n \t@Override\n \tpublic List<CatalogPartitionSpec> listPartitions(ObjectPath tablePath, CatalogPartitionSpec partitionSpec)\n-\t\t\tthrows TableNotExistException, TableNotPartitionedException, CatalogException {\n+\t\t\tthrows TableNotExistException, TableNotPartitionedException, PartitionNotExistException, CatalogException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b64a33a3e57e4af2522aeaf274c4711ddb2b00ef"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTUwNjQ0OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoyMTo0MVrOHBbD1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoyMTo0MVrOHBbD1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI1Mzk3Mg==", "bodyText": "We can simply try calling getOrderedFullPartitionValues, which will check if the spec is valid", "url": "https://github.com/apache/flink/pull/13157#discussion_r471253972", "createdAt": "2020-08-17T06:21:41Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "diffHunk": "@@ -777,8 +777,15 @@ public void dropPartition(ObjectPath tablePath, CatalogPartitionSpec partitionSp\n \t\t\t// partition spec can be partial\n \t\t\tList<String> partialVals = HiveReflectionUtils.getPvals(hiveShim, hiveTable.getPartitionKeys(),\n \t\t\t\tpartitionSpec.getPartitionSpec());\n-\t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), partialVals,\n-\t\t\t\t(short) -1).stream().map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n+\t\t\tif (partialVals.size() == 1 && StringUtils.isNullOrWhitespaceOnly(partialVals.get(0))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b64a33a3e57e4af2522aeaf274c4711ddb2b00ef"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NTUxMzEzOnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/HiveDialectITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoyNDo1MlrOHBbIBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoyNDo1MlrOHBbIBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI1NTA0NA==", "bodyText": "Why do we need a different table schema? I think you can just reuse the table in this test", "url": "https://github.com/apache/flink/pull/13157#discussion_r471255044", "createdAt": "2020-08-17T06:24:52Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/HiveDialectITCase.java", "diffHunk": "@@ -467,14 +468,36 @@ public void testAddDropPartitions() throws Exception {\n \n \t@Test\n \tpublic void testShowPartitions() throws Exception {\n-\t\ttableEnv.executeSql(\"create table tbl (x int,y binary) partitioned by (dt date, country string)\");\n-\t\ttableEnv.executeSql(\"alter table tbl add partition (dt='2020-04-30',country='china') partition (dt='2020-04-30',country='us')\");\n+\t\ttableEnv.executeSql(\"create table tbl (x int,y binary) partitioned by (country string)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b64a33a3e57e4af2522aeaf274c4711ddb2b00ef"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjEwNTg5OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMTozODo0OVrOHD83ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMTozODo0OVrOHD83ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkwNTA1NA==", "bodyText": "Why do we need to catch the exception and throw another one?", "url": "https://github.com/apache/flink/pull/13157#discussion_r473905054", "createdAt": "2020-08-20T11:38:49Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "diffHunk": "@@ -777,8 +777,11 @@ public void dropPartition(ObjectPath tablePath, CatalogPartitionSpec partitionSp\n \t\t\t// partition spec can be partial\n \t\t\tList<String> partialVals = HiveReflectionUtils.getPvals(hiveShim, hiveTable.getPartitionKeys(),\n \t\t\t\tpartitionSpec.getPartitionSpec());\n+\t\t\tcheckValidPartitionSpec(partitionSpec, getFieldNames(hiveTable.getPartitionKeys()), tablePath);\n \t\t\treturn client.listPartitionNames(tablePath.getDatabaseName(), tablePath.getObjectName(), partialVals,\n \t\t\t\t(short) -1).stream().map(HiveCatalog::createPartitionSpec).collect(Collectors.toList());\n+\t\t} catch (PartitionSpecInvalidException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f77481fbdf9900bd2f411ef045cd91985ebb1085"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjEwOTI2OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMTozOTo0N1rOHD85oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMTozOTo0N1rOHD85oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkwNTU2OA==", "bodyText": "This should be done before we call HiveReflectionUtils.getPvals", "url": "https://github.com/apache/flink/pull/13157#discussion_r473905568", "createdAt": "2020-08-20T11:39:47Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "diffHunk": "@@ -777,8 +777,11 @@ public void dropPartition(ObjectPath tablePath, CatalogPartitionSpec partitionSp\n \t\t\t// partition spec can be partial\n \t\t\tList<String> partialVals = HiveReflectionUtils.getPvals(hiveShim, hiveTable.getPartitionKeys(),\n \t\t\t\tpartitionSpec.getPartitionSpec());\n+\t\t\tcheckValidPartitionSpec(partitionSpec, getFieldNames(hiveTable.getPartitionKeys()), tablePath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f77481fbdf9900bd2f411ef045cd91985ebb1085"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 563, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}