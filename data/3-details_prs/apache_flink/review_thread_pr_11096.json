{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MzgxNjE5", "number": 11096, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDo1MjowNFrODf6inQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwODowNTo1MFrODgmIiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NzkxNTgxOnYy", "diffSide": "RIGHT", "path": "flink-fs-tests/src/test/java/org/apache/flink/hdfstests/ContinuousFileProcessingITCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDo1MjowNFrOFp5GWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDo1MjowNFrOFp5GWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ3MTQ1MA==", "bodyText": "should that also complete future?", "url": "https://github.com/apache/flink/pull/11096#discussion_r379471450", "createdAt": "2020-02-14T14:52:04Z", "author": {"login": "AHeise"}, "path": "flink-fs-tests/src/test/java/org/apache/flink/hdfstests/ContinuousFileProcessingITCase.java", "diffHunk": "@@ -140,29 +141,25 @@ public void testProgram() throws Exception {\n \t\tTestingSinkFunction sink = new TestingSinkFunction();\n \t\tcontent.addSink(sink).setParallelism(1);\n \n-\t\tThread job = new Thread() {\n-\n-\t\t\t@Override\n-\t\t\tpublic void run() {\n-\t\t\t\ttry {\n-\t\t\t\t\tenv.execute(\"ContinuousFileProcessingITCase Job.\");\n-\t\t\t\t} catch (Exception e) {\n-\t\t\t\t\tThrowable th = e;\n-\t\t\t\t\tfor (int depth = 0; depth < 20; depth++) {\n-\t\t\t\t\t\tif (th instanceof SuccessException) {\n-\t\t\t\t\t\t\treturn;\n-\t\t\t\t\t\t} else if (th.getCause() != null) {\n-\t\t\t\t\t\t\tth = th.getCause();\n-\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t}\n+\t\tCompletableFuture<Void> jobFuture = new CompletableFuture<>();\n+\t\tnew Thread(() -> {\n+\t\t\ttry {\n+\t\t\t\tenv.execute(\"ContinuousFileProcessingITCase Job.\");\n+\t\t\t\tjobFuture.complete(null);\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tThrowable th = e;\n+\t\t\t\tfor (int depth = 0; depth < 20; depth++) {\n+\t\t\t\t\tif (th instanceof SuccessException) {\n+\t\t\t\t\t\treturn;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42cb3bf3fb7e78c0525d330c6289861601d68ba6"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NTA1ODAzOnYy", "diffSide": "LEFT", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwODowNTo1MFrOFq4fNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjo0MDoyNVrOFrA00A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUxMDAwNA==", "bodyText": "One more thing. Doesn't removal of line brake the java docs for this class (@Public so quite important)?\nReplace {@link ContinuousFileReaderOperator readers} with full class reference?", "url": "https://github.com/apache/flink/pull/11096#discussion_r380510004", "createdAt": "2020-02-18T08:05:50Z", "author": {"login": "pnowojski"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java", "diffHunk": "@@ -70,7 +70,6 @@\n import org.apache.flink.streaming.api.datastream.DataStreamSource;\n import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;\n import org.apache.flink.streaming.api.functions.source.ContinuousFileMonitoringFunction;\n-import org.apache.flink.streaming.api.functions.source.ContinuousFileReaderOperator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03ed8e68f6175a3fa9cb86e4ab1e22fe3844b56b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUxOTk0Ng==", "bodyText": "Yes, but the actual operator type is now hidden in the factory, so I'd rather remove the reference at all and leave just plain \"readers\".", "url": "https://github.com/apache/flink/pull/11096#discussion_r380519946", "createdAt": "2020-02-18T08:29:41Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java", "diffHunk": "@@ -70,7 +70,6 @@\n import org.apache.flink.streaming.api.datastream.DataStreamSource;\n import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;\n import org.apache.flink.streaming.api.functions.source.ContinuousFileMonitoringFunction;\n-import org.apache.flink.streaming.api.functions.source.ContinuousFileReaderOperator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUxMDAwNA=="}, "originalCommit": {"oid": "03ed8e68f6175a3fa9cb86e4ab1e22fe3844b56b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUyNjc2MA==", "bodyText": "I think a reference to the code might be helpful for some more power users. I would be also fine with referencing ContinuousFileReaderOperatorFactory itself, as that wouldn't explode the comment's length.", "url": "https://github.com/apache/flink/pull/11096#discussion_r380526760", "createdAt": "2020-02-18T08:44:34Z", "author": {"login": "pnowojski"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java", "diffHunk": "@@ -70,7 +70,6 @@\n import org.apache.flink.streaming.api.datastream.DataStreamSource;\n import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;\n import org.apache.flink.streaming.api.functions.source.ContinuousFileMonitoringFunction;\n-import org.apache.flink.streaming.api.functions.source.ContinuousFileReaderOperator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUxMDAwNA=="}, "originalCommit": {"oid": "03ed8e68f6175a3fa9cb86e4ab1e22fe3844b56b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUzNDA0OQ==", "bodyText": "IMO javadoc of public API shouldn't talk about the implementation classes at all, unless there is a need (here there isn't). And \"power users\" should be able to go inside the method and see the implementation:)", "url": "https://github.com/apache/flink/pull/11096#discussion_r380534049", "createdAt": "2020-02-18T08:59:00Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java", "diffHunk": "@@ -70,7 +70,6 @@\n import org.apache.flink.streaming.api.datastream.DataStreamSource;\n import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;\n import org.apache.flink.streaming.api.functions.source.ContinuousFileMonitoringFunction;\n-import org.apache.flink.streaming.api.functions.source.ContinuousFileReaderOperator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUxMDAwNA=="}, "originalCommit": {"oid": "03ed8e68f6175a3fa9cb86e4ab1e22fe3844b56b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYyMzE2Mg==", "bodyText": "Ok, in that case please update the java docs.", "url": "https://github.com/apache/flink/pull/11096#discussion_r380623162", "createdAt": "2020-02-18T11:47:35Z", "author": {"login": "pnowojski"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java", "diffHunk": "@@ -70,7 +70,6 @@\n import org.apache.flink.streaming.api.datastream.DataStreamSource;\n import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;\n import org.apache.flink.streaming.api.functions.source.ContinuousFileMonitoringFunction;\n-import org.apache.flink.streaming.api.functions.source.ContinuousFileReaderOperator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUxMDAwNA=="}, "originalCommit": {"oid": "03ed8e68f6175a3fa9cb86e4ab1e22fe3844b56b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0NjYwOA==", "bodyText": "Done.", "url": "https://github.com/apache/flink/pull/11096#discussion_r380646608", "createdAt": "2020-02-18T12:40:25Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java", "diffHunk": "@@ -70,7 +70,6 @@\n import org.apache.flink.streaming.api.datastream.DataStreamSource;\n import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;\n import org.apache.flink.streaming.api.functions.source.ContinuousFileMonitoringFunction;\n-import org.apache.flink.streaming.api.functions.source.ContinuousFileReaderOperator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUxMDAwNA=="}, "originalCommit": {"oid": "03ed8e68f6175a3fa9cb86e4ab1e22fe3844b56b"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1078, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}