{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5ODcyNzEz", "number": 10989, "title": "[FLINK-15840][table-planner-blink] ClassCastException is thrown when use tEnv.from for temp/catalog table", "bodyText": "What is the purpose of the change\nTableEnvironment.from/scan(string path) cannot be used for all temporaryTable and CatalogTable (not DataStreamTable and ConnectorCatalogTable). Of course, it can be bypassed by TableEnvironment.sqlQuery(\"select * from t\"), but from/scan are very important api of TableEnvironment and pure TableApi can't be used seriously.\nBrief change log\nBug 1\nThe problem is that CatalogSourceTable.toRel wants to get the translator of the compute column. At present, CatalogSourceTable.toRe has two places to call:\n\nThe parser stage, which passes the correct compute column translator.\nIn the rule optimization stage, the correct compute column translator is not passed in the TableScanRule, so an error is reported.\n\nThere are three solutions:\n\nDon't use ToRelContext to transfer the translators of compute column. Use FlinkContext to transfer so that we can get the correct translators of compute columns at any stage.\nIn CatalogSourceTable.toRel, when there is a compute column and the compute column translator cannot be obtained, an error is reported, and other cases pass normally. The disadvantage of this is that it is currently unable to support compute columns on TableApi.\n@danny0405 suggestion, In the next version, separate the computed column and watermark translation to parser stage. But this need calcite interface modification too. No guarantee.\n\nBug 2\nAnother bug is CatalogSourceTable need override explainSourceAsString. Otherwise hep rule optimizer can not distinguish CatalogSourceTable and TableSourceTable.\nVerifying this change\nTableScanTest\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)", "createdAt": "2020-02-01T08:21:14Z", "url": "https://github.com/apache/flink/pull/10989", "merged": true, "mergeCommit": {"oid": "183c8d143bc3bb5a31747417355690adaba3d226"}, "closed": true, "closedAt": "2020-02-03T11:10:58Z", "author": {"login": "JingsongLi"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb__UXGgH2gAyMzY5ODcyNzEzOjY1YzEyOGM5OTEwMDhjMWYwMmVjNmNmNTkxYTg3ZWJjNjdjYWQ3Zjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcAnmWUAFqTM1MjA1MzgzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "65c128c991008c1f02ec6cf591a87ebc67cad7f7", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/65c128c991008c1f02ec6cf591a87ebc67cad7f7", "committedDate": "2020-02-01T08:18:25Z", "message": "[FLINK-15840][table-planner-blink] ClassCastException is thrown when use tEnv.from for temp/catalog table under Blink planner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c779b02a840dd3c6ed0968ef3ca2146f7178c6d", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/9c779b02a840dd3c6ed0968ef3ca2146f7178c6d", "committedDate": "2020-02-02T03:58:50Z", "message": "FIXUP! Solution 1: Obtain ToRexConverterFactory from FlinkContext"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxOTM5NDUy", "url": "https://github.com/apache/flink/pull/10989#pullrequestreview-351939452", "createdAt": "2020-02-02T12:48:32Z", "commit": {"oid": "9c779b02a840dd3c6ed0968ef3ca2146f7178c6d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxMjo0ODozMlrOFkhlwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxNDowMDo0NVrOFkh47A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg0MzM5NA==", "bodyText": "\u00a0Would SqlExprToRexConverterFactory be a better name?", "url": "https://github.com/apache/flink/pull/10989#discussion_r373843394", "createdAt": "2020-02-02T12:48:32Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/calcite/ToRexConverterFactory.java", "diffHunk": "@@ -18,26 +18,11 @@\n \n package org.apache.flink.table.planner.calcite;\n \n-import org.apache.calcite.plan.RelOptTable;\n import org.apache.calcite.rel.type.RelDataType;\n \n /**\n- * A ToRelContext impl that takes the context variables\n- * used for sql expression transformation.\n+ * Factory to create {@link SqlExprToRexConverter}.\n  */\n-public interface FlinkToRelContext extends RelOptTable.ToRelContext {\n-\n-\t/**\n-\t * Creates a new instance of {@link SqlExprToRexConverter} to convert sql statements\n-\t * to {@link org.apache.calcite.rex.RexNode}.\n-\t *\n-\t * <p>See {@link org.apache.flink.table.planner.plan.schema.FlinkPreparingTableBase#toRel}\n-\t * for details.\n-\t */\n-\tSqlExprToRexConverter createSqlExprToRexConverter(RelDataType tableRowType);\n-\n-\t/**\n-\t * Creates a new instance of {@link FlinkRelBuilder} to build relational expressions.\n-\t */\n-\tFlinkRelBuilder createRelBuilder();\n+public interface ToRexConverterFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c779b02a840dd3c6ed0968ef3ca2146f7178c6d"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg0NjU5NQ==", "bodyText": "Can we move the prepareWatermarkDDL and prepareComputedColumnDDL to the before stage and give the tables a more readable name, e.g. computed_column_tbl, watermark_tbl? So that the tests doens't need to invoke these methods.", "url": "https://github.com/apache/flink/pull/10989#discussion_r373846595", "createdAt": "2020-02-02T13:37:07Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/batch/sql/TableScanTest.scala", "diffHunk": "@@ -68,12 +70,15 @@ class TableScanTest extends TableTestBase {\n          |  'is-bounded' = 'true'\n          |)\n        \"\"\".stripMargin)\n-    util.verifyPlan(\"SELECT * FROM t1\")\n   }\n \n-\n   @Test\n-  def testDDLWithWatermarkComputedColumn(): Unit = {\n+  def testDDLWithComputedColumn(): Unit = {\n+    prepareComputedColumnDDL()\n+    util.verifyPlan(\"SELECT * FROM t1\")\n+  }\n+\n+  private def prepareWatermarkDDL(): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c779b02a840dd3c6ed0968ef3ca2146f7178c6d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg0NjgxMA==", "bodyText": "Add javadoc to the method.\n  /**\n    * Creates a new instance of {@link SqlExprToRexConverter} to convert SQL expression\n    * to RexNode.\n    */", "url": "https://github.com/apache/flink/pull/10989#discussion_r373846810", "createdAt": "2020-02-02T13:40:12Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/calcite/ToRexConverterFactory.java", "diffHunk": "@@ -18,26 +18,11 @@\n \n package org.apache.flink.table.planner.calcite;\n \n-import org.apache.calcite.plan.RelOptTable;\n import org.apache.calcite.rel.type.RelDataType;\n \n /**\n- * A ToRelContext impl that takes the context variables\n- * used for sql expression transformation.\n+ * Factory to create {@link SqlExprToRexConverter}.\n  */\n-public interface FlinkToRelContext extends RelOptTable.ToRelContext {\n-\n-\t/**\n-\t * Creates a new instance of {@link SqlExprToRexConverter} to convert sql statements\n-\t * to {@link org.apache.calcite.rex.RexNode}.\n-\t *\n-\t * <p>See {@link org.apache.flink.table.planner.plan.schema.FlinkPreparingTableBase#toRel}\n-\t * for details.\n-\t */\n-\tSqlExprToRexConverter createSqlExprToRexConverter(RelDataType tableRowType);\n-\n-\t/**\n-\t * Creates a new instance of {@link FlinkRelBuilder} to build relational expressions.\n-\t */\n-\tFlinkRelBuilder createRelBuilder();\n+public interface ToRexConverterFactory {\n+\tSqlExprToRexConverter create(RelDataType tableRowType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c779b02a840dd3c6ed0968ef3ca2146f7178c6d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg0ODMwMA==", "bodyText": "Mutable member field and lazy assignement is not a good practice. I would suggest to make FlinkContextImpl constructor accepts a supplier function to create the SqlExprToRexConverterFactory.\nclass FlinkContextImpl(\n    tableConfig: TableConfig,\n    functionCatalog: FunctionCatalog,\n    catalogManager: CatalogManager,\n    factorySupplier: Supplier[ToRexConverterFactory])\n  extends FlinkContext {\n\n  ...\n\n  override def getToRexConverterFactory: ToRexConverterFactory = factorySupplier.get()\n}\nThen in the PlannerContext, we can instantiate the context early.\n    public PlannerContext(...) {\n       ...\n       this.context = new FlinkContextImpl(\n           tableConfig, \n           functionCatalog, \n           catalogManager, \n           this::createToRexConverterFactory);\n       ...\n    }\n\n    private ToRexConverterFactory createToRexConverterFactory() {\n\t\treturn t -> new SqlExprToRexConverterImpl(createFrameworkConfig(), typeFactory, cluster, t);\n\t}", "url": "https://github.com/apache/flink/pull/10989#discussion_r373848300", "createdAt": "2020-02-02T14:00:45Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/delegation/PlannerContext.java", "diffHunk": "@@ -109,6 +109,9 @@ public PlannerContext(\n \t\t\tplanner.addRelTraitDef(traitDef);\n \t\t}\n \t\tthis.cluster = FlinkRelOptClusterFactory.create(planner, new RexBuilder(typeFactory));\n+\n+\t\tthis.context.toRexConverterFactory_$eq(t -> new SqlExprToRexConverterImpl(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c779b02a840dd3c6ed0968ef3ca2146f7178c6d"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cad981173bcdee76bb71a4fb8bd7739a94a27db0", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/cad981173bcdee76bb71a4fb8bd7739a94a27db0", "committedDate": "2020-02-03T02:13:08Z", "message": "Fix comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxOTk0NDc1", "url": "https://github.com/apache/flink/pull/10989#pullrequestreview-351994475", "createdAt": "2020-02-03T02:21:01Z", "commit": {"oid": "cad981173bcdee76bb71a4fb8bd7739a94a27db0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMjoyMTowMVrOFklD9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMjoyMTowMVrOFklD9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkwMDI3OA==", "bodyText": "t -> rowType ?", "url": "https://github.com/apache/flink/pull/10989#discussion_r373900278", "createdAt": "2020-02-03T02:21:01Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/delegation/PlannerContext.java", "diffHunk": "@@ -95,13 +98,23 @@ public PlannerContext(\n \t\t\tCalciteSchema rootSchema,\n \t\t\tList<RelTraitDef> traitDefs) {\n \t\tthis.tableConfig = tableConfig;\n-\t\tthis.context = new FlinkContextImpl(tableConfig, functionCatalog, catalogManager);\n+\n+\t\tthis.context = new FlinkContextImpl(\n+\t\t\t\ttableConfig,\n+\t\t\t\tfunctionCatalog,\n+\t\t\t\tcatalogManager,\n+\t\t\t\tt -> new SqlExprToRexConverterImpl(\n+\t\t\t\t\t\tcheckNotNull(frameworkConfig),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cad981173bcdee76bb71a4fb8bd7739a94a27db0"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxOTk0NTU2", "url": "https://github.com/apache/flink/pull/10989#pullrequestreview-351994556", "createdAt": "2020-02-03T02:21:29Z", "commit": {"oid": "cad981173bcdee76bb71a4fb8bd7739a94a27db0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMjoyMToyOVrOFklERg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMjoyMToyOVrOFklERg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkwMDM1OA==", "bodyText": "FlinkContextImpl -> FlinkContext ?", "url": "https://github.com/apache/flink/pull/10989#discussion_r373900358", "createdAt": "2020-02-03T02:21:29Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/delegation/PlannerContext.java", "diffHunk": "@@ -80,13 +81,15 @@\n  */\n @Internal\n public class PlannerContext {\n+\n \tprivate final RelDataTypeSystem typeSystem = new FlinkTypeSystem();\n \tprivate final FlinkTypeFactory typeFactory = new FlinkTypeFactory(typeSystem);\n \tprivate final TableConfig tableConfig;\n-\tprivate final RelOptCluster cluster;\n-\tprivate final FlinkContext context;\n+\tprivate final FlinkContextImpl context;\n \tprivate final CalciteSchema rootSchema;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cad981173bcdee76bb71a4fb8bd7739a94a27db0"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb337d645d4278e7da22776f5b7aeef5e43af38c", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/eb337d645d4278e7da22776f5b7aeef5e43af38c", "committedDate": "2020-02-03T02:28:04Z", "message": "Fix comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxOTk3NDA4", "url": "https://github.com/apache/flink/pull/10989#pullrequestreview-351997408", "createdAt": "2020-02-03T02:38:37Z", "commit": {"oid": "eb337d645d4278e7da22776f5b7aeef5e43af38c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMjozODozN1rOFklNgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMjozODozN1rOFklNgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkwMjcyMA==", "bodyText": "Can these member fields to be final?", "url": "https://github.com/apache/flink/pull/10989#discussion_r373902720", "createdAt": "2020-02-03T02:38:37Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/delegation/PlannerContext.java", "diffHunk": "@@ -80,13 +82,15 @@\n  */\n @Internal\n public class PlannerContext {\n+\n \tprivate final RelDataTypeSystem typeSystem = new FlinkTypeSystem();\n \tprivate final FlinkTypeFactory typeFactory = new FlinkTypeFactory(typeSystem);\n \tprivate final TableConfig tableConfig;\n-\tprivate final RelOptCluster cluster;\n \tprivate final FlinkContext context;\n \tprivate final CalciteSchema rootSchema;\n \tprivate final List<RelTraitDef> traitDefs;\n+\tprivate FrameworkConfig frameworkConfig;\n+\tprivate RelOptCluster cluster;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb337d645d4278e7da22776f5b7aeef5e43af38c"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMDAxNDIx", "url": "https://github.com/apache/flink/pull/10989#pullrequestreview-352001421", "createdAt": "2020-02-03T03:02:09Z", "commit": {"oid": "eb337d645d4278e7da22776f5b7aeef5e43af38c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMzowMjowOVrOFklbXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMzowMjowOVrOFklbXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzkwNjI2OA==", "bodyText": "Maybe we can inline this code with line 92 ~ 94", "url": "https://github.com/apache/flink/pull/10989#discussion_r373906268", "createdAt": "2020-02-03T03:02:09Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/optimize/BatchCommonSubGraphBasedOptimizer.scala", "diffHunk": "@@ -80,12 +81,17 @@ class BatchCommonSubGraphBasedOptimizer(planner: BatchPlanner)\n       .getOrElse(FlinkBatchProgram.buildProgram(config.getConfiguration))\n     Preconditions.checkNotNull(programs)\n \n+    val context = relNode.getCluster.getPlanner.getContext.unwrap(classOf[FlinkContext])\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb337d645d4278e7da22776f5b7aeef5e43af38c"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "620d9437f57c76595417f4381fad09ee7859f7f5", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/620d9437f57c76595417f4381fad09ee7859f7f5", "committedDate": "2020-02-03T07:07:18Z", "message": "Make PlannerContext fields final"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMDUzODM1", "url": "https://github.com/apache/flink/pull/10989#pullrequestreview-352053835", "createdAt": "2020-02-03T07:14:16Z", "commit": {"oid": "620d9437f57c76595417f4381fad09ee7859f7f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4569, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}