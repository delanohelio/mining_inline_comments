{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NDY5MjYy", "number": 13723, "title": "[FlINK-19688][network] Don't cache InterruptedExceptions in PartitionRequestClientFactory", "bodyText": "What is the purpose of the change\nThis is a fix for the following case(s):\n\nclientA requests a connection\nclientB  requests the same connection and waits on the same future\nclientA is interrupted; PartitionRequestClientFactory caches the InterruptedException\nclientB as well as all subsequent clients get cached InterruptedException\n\nVerifying this change\nAdded PartitionRequestClientFactoryTest.testInterruptsNotCached\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? no", "createdAt": "2020-10-21T11:39:24Z", "url": "https://github.com/apache/flink/pull/13723", "merged": true, "mergeCommit": {"oid": "840e8af879e69c1bf9ad121b670a2703eb88b858"}, "closed": true, "closedAt": "2020-10-22T08:20:09Z", "author": {"login": "rkhachatryan"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUtN9pAFqTUxMzY1NjU5MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUt3qlgBqjM5MDQwODI5NDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNjU2NTkx", "url": "https://github.com/apache/flink/pull/13723#pullrequestreview-513656591", "createdAt": "2020-10-21T13:08:33Z", "commit": {"oid": "18772dddf0714c8ee47354a40d70f70ab9ac6387"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzowODozNFrOHlq7Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzoxNjoyOVrOHlrSrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2MjY5MQ==", "bodyText": "nit: let others know", "url": "https://github.com/apache/flink/pull/13723#discussion_r509262691", "createdAt": "2020-10-21T13:08:34Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactory.java", "diffHunk": "@@ -75,12 +73,24 @@ NettyPartitionRequestClient createPartitionRequestClient(ConnectionID connection\n \t\t\t\treturn new CompletableFuture<>();\n \t\t\t});\n \t\t\tif (isTheFirstOne.get()) {\n-\t\t\t\tcompleteFromCallable(clientFuture, () -> connectWithRetries(connectionId));\n+\t\t\t\ttry {\n+\t\t\t\t\tclientFuture.complete(connectWithRetries(connectionId));\n+\t\t\t\t} catch (InterruptedException e) {\n+\t\t\t\t\tclientFuture.complete(null); // let know others waiting that they should retry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18772dddf0714c8ee47354a40d70f70ab9ac6387"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NDgwOQ==", "bodyText": "Sorry for the stupid question, but is this actually using the port for network traffic or is it just a dummy value?\nIf it's actually using, I'd propose to use port 0 (random free port).", "url": "https://github.com/apache/flink/pull/13723#discussion_r509264809", "createdAt": "2020-10-21T13:11:33Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "diffHunk": "@@ -58,6 +59,38 @@\n \n \tprivate static final int SERVER_PORT = NetUtils.getAvailablePort();\n \n+\t@Test\n+\tpublic void testInterruptsNotCached() throws Exception {\n+\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(InetAddress.getLocalHost(), 8080), 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18772dddf0714c8ee47354a40d70f70ab9ac6387"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2ODY1Mw==", "bodyText": "Could we use CompleteChannelFuture as a base to avoid all the no-ops?", "url": "https://github.com/apache/flink/pull/13723#discussion_r509268653", "createdAt": "2020-10-21T13:16:29Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/NeverCompletingChannelFuture.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.io.network.netty;\n+\n+import org.apache.flink.shaded.netty4.io.netty.channel.Channel;\n+import org.apache.flink.shaded.netty4.io.netty.channel.ChannelFuture;\n+import org.apache.flink.shaded.netty4.io.netty.util.concurrent.Future;\n+import org.apache.flink.shaded.netty4.io.netty.util.concurrent.GenericFutureListener;\n+\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+@SuppressWarnings({\"InfiniteLoopStatement\", \"BusyWait\"})\n+class NeverCompletingChannelFuture implements ChannelFuture {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18772dddf0714c8ee47354a40d70f70ab9ac6387"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71c15ebc8f5ee9d06956bdb4e0f7ff36b7a3a656", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/71c15ebc8f5ee9d06956bdb4e0f7ff36b7a3a656", "committedDate": "2020-10-21T14:02:02Z", "message": "[FlINK-19688][network] Don't cache InterruptedExceptions in PartitionRequestClientFactory"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "18772dddf0714c8ee47354a40d70f70ab9ac6387", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/18772dddf0714c8ee47354a40d70f70ab9ac6387", "committedDate": "2020-10-21T11:29:16Z", "message": "[FlINK-19688][network] Don't cache InterruptedExceptions in PartitionRequestClientFactory"}, "afterCommit": {"oid": "71c15ebc8f5ee9d06956bdb4e0f7ff36b7a3a656", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/71c15ebc8f5ee9d06956bdb4e0f7ff36b7a3a656", "committedDate": "2020-10-21T14:02:02Z", "message": "[FlINK-19688][network] Don't cache InterruptedExceptions in PartitionRequestClientFactory"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2976, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}