{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MjM4Njc2", "number": 12985, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjoxOTozN1rOEWF8Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjoyMToyNFrOEWF-Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjAxNDc1OnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-orc/src/main/java/org/apache/flink/orc/vector/OrcLegacyTimestampColumnVector.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjoxOTozN1rOG9N3PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjoxOTozN1rOG9N3PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg0MzQ1Mg==", "bodyText": "Why use reflection? why not just use OrcTimestampColumnVector?", "url": "https://github.com/apache/flink/pull/12985#discussion_r466843452", "createdAt": "2020-08-07T06:19:37Z", "author": {"login": "JingsongLi"}, "path": "flink-formats/flink-orc/src/main/java/org/apache/flink/orc/vector/OrcLegacyTimestampColumnVector.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.orc.vector;\n+\n+import org.apache.flink.table.data.TimestampData;\n+import org.apache.flink.util.FlinkRuntimeException;\n+\n+import org.apache.hadoop.hive.ql.exec.vector.ColumnVector;\n+import org.apache.hadoop.hive.ql.exec.vector.LongColumnVector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.sql.Timestamp;\n+import java.time.LocalDateTime;\n+\n+/**\n+ * This class is used to adapt to Hive's legacy (2.0.x) timestamp column vector which is a LongColumnVector.\n+ * This class does not import TimestampColumnVector and provides utils to decide whether new or legacy column\n+ * vector should be used.\n+ */\n+public class OrcLegacyTimestampColumnVector extends AbstractOrcColumnVector implements\n+\t\torg.apache.flink.table.data.vector.TimestampColumnVector {\n+\n+\tprivate static final Logger LOG = LoggerFactory.getLogger(OrcLegacyTimestampColumnVector.class);\n+\n+\tprivate static Class hiveTSColVectorClz;\n+\tprivate static Constructor constructor;\n+\tprivate static Method getTimeMethod;\n+\tprivate static Method getNanosMethod;\n+\tprivate static Method fillMethod;\n+\tprivate static boolean hiveTSColVectorAvailable = false;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\thiveTSColVectorClz = Class.forName(\"org.apache.hadoop.hive.ql.exec.vector.TimestampColumnVector\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c2efee79228f39d19301d15a4ff6d733db85cf4"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjAxOTMwOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-orc/src/main/java/org/apache/flink/orc/vector/OrcLegacyTimestampColumnVector.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjoyMToyNFrOG9N5tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjoyMToyNFrOG9N5tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg0NDA4NQ==", "bodyText": "Can you have a TimestampUtil,  and then decide using OrcTimestampColumnVector or a OrcLongTimestampVector?", "url": "https://github.com/apache/flink/pull/12985#discussion_r466844085", "createdAt": "2020-08-07T06:21:24Z", "author": {"login": "JingsongLi"}, "path": "flink-formats/flink-orc/src/main/java/org/apache/flink/orc/vector/OrcLegacyTimestampColumnVector.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.orc.vector;\n+\n+import org.apache.flink.table.data.TimestampData;\n+import org.apache.flink.util.FlinkRuntimeException;\n+\n+import org.apache.hadoop.hive.ql.exec.vector.ColumnVector;\n+import org.apache.hadoop.hive.ql.exec.vector.LongColumnVector;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.sql.Timestamp;\n+import java.time.LocalDateTime;\n+\n+/**\n+ * This class is used to adapt to Hive's legacy (2.0.x) timestamp column vector which is a LongColumnVector.\n+ * This class does not import TimestampColumnVector and provides utils to decide whether new or legacy column\n+ * vector should be used.\n+ */\n+public class OrcLegacyTimestampColumnVector extends AbstractOrcColumnVector implements\n+\t\torg.apache.flink.table.data.vector.TimestampColumnVector {\n+\n+\tprivate static final Logger LOG = LoggerFactory.getLogger(OrcLegacyTimestampColumnVector.class);\n+\n+\tprivate static Class hiveTSColVectorClz;\n+\tprivate static Constructor constructor;\n+\tprivate static Method getTimeMethod;\n+\tprivate static Method getNanosMethod;\n+\tprivate static Method fillMethod;\n+\tprivate static boolean hiveTSColVectorAvailable = false;\n+\n+\tstatic {\n+\t\ttry {\n+\t\t\thiveTSColVectorClz = Class.forName(\"org.apache.hadoop.hive.ql.exec.vector.TimestampColumnVector\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c2efee79228f39d19301d15a4ff6d733db85cf4"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4988, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}