{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNDIwNTU2", "number": 12303, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzoxNjowOFrOECjfKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzoxNzoyOVrOECjhgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTE0MDI2OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/AppendOnlyTopNFunction.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzoxNjowOFrOGfFLqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzoxNDo1NFrOGffDlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI0Mzk0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tlastElement = lastList.get(size - 1);\n          \n          \n            \n            \t\t\t\tlastElement = lastList.remove(size - 1);", "url": "https://github.com/apache/flink/pull/12303#discussion_r435243944", "createdAt": "2020-06-04T13:16:08Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/AppendOnlyTopNFunction.java", "diffHunk": "@@ -210,14 +210,19 @@ private void processElementWithoutRowNumber(RowData input, Collector<RowData> ou\n \t\t\tRowData lastKey = lastEntry.getKey();\n \t\t\tList<RowData> lastList = (List<RowData>) lastEntry.getValue();\n \t\t\t// remove last one\n-\t\t\tRowData lastElement = lastList.remove(lastList.size() - 1);\n-\t\t\tif (lastList.isEmpty()) {\n+\t\t\tint size = lastList.size();\n+\t\t\tRowData lastElement = null;\n+\t\t\tif (size > 0) {\n+\t\t\t\tlastElement = lastList.get(size - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f6b52073802835bc193796a41d095c5670f5d59"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI0NDQxMg==", "bodyText": "Remove on the list use index will be more efficient than buffer.remove.", "url": "https://github.com/apache/flink/pull/12303#discussion_r435244412", "createdAt": "2020-06-04T13:16:48Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/AppendOnlyTopNFunction.java", "diffHunk": "@@ -210,14 +210,19 @@ private void processElementWithoutRowNumber(RowData input, Collector<RowData> ou\n \t\t\tRowData lastKey = lastEntry.getKey();\n \t\t\tList<RowData> lastList = (List<RowData>) lastEntry.getValue();\n \t\t\t// remove last one\n-\t\t\tRowData lastElement = lastList.remove(lastList.size() - 1);\n-\t\t\tif (lastList.isEmpty()) {\n+\t\t\tint size = lastList.size();\n+\t\t\tRowData lastElement = null;\n+\t\t\tif (size > 0) {\n+\t\t\t\tlastElement = lastList.get(size - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI0Mzk0NA=="}, "originalCommit": {"oid": "3f6b52073802835bc193796a41d095c5670f5d59"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMzMzEzOA==", "bodyText": "@wuchong  I agree with you, but I think we also should subtract buffer.currentTopNum =  buffer.currentTopNum - 1 after remove lastElement, So is it appropriate to add a method in TopNBuffer such as public void minusTopNum(int delta) { currentTopNum -= delta; },\nwe should call this method behind dataState.put(lastKey, new ArrayList<>(lastList)), what do you think it?", "url": "https://github.com/apache/flink/pull/12303#discussion_r435333138", "createdAt": "2020-06-04T15:08:44Z", "author": {"login": "lsyldliu"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/AppendOnlyTopNFunction.java", "diffHunk": "@@ -210,14 +210,19 @@ private void processElementWithoutRowNumber(RowData input, Collector<RowData> ou\n \t\t\tRowData lastKey = lastEntry.getKey();\n \t\t\tList<RowData> lastList = (List<RowData>) lastEntry.getValue();\n \t\t\t// remove last one\n-\t\t\tRowData lastElement = lastList.remove(lastList.size() - 1);\n-\t\t\tif (lastList.isEmpty()) {\n+\t\t\tint size = lastList.size();\n+\t\t\tRowData lastElement = null;\n+\t\t\tif (size > 0) {\n+\t\t\t\tlastElement = lastList.get(size - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI0Mzk0NA=="}, "originalCommit": {"oid": "3f6b52073802835bc193796a41d095c5670f5d59"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM0MDMyOA==", "bodyText": "Good point. I just find that maybe we can use TopNBuffer#removeLast directly here.", "url": "https://github.com/apache/flink/pull/12303#discussion_r435340328", "createdAt": "2020-06-04T15:18:40Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/AppendOnlyTopNFunction.java", "diffHunk": "@@ -210,14 +210,19 @@ private void processElementWithoutRowNumber(RowData input, Collector<RowData> ou\n \t\t\tRowData lastKey = lastEntry.getKey();\n \t\t\tList<RowData> lastList = (List<RowData>) lastEntry.getValue();\n \t\t\t// remove last one\n-\t\t\tRowData lastElement = lastList.remove(lastList.size() - 1);\n-\t\t\tif (lastList.isEmpty()) {\n+\t\t\tint size = lastList.size();\n+\t\t\tRowData lastElement = null;\n+\t\t\tif (size > 0) {\n+\t\t\t\tlastElement = lastList.get(size - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI0Mzk0NA=="}, "originalCommit": {"oid": "3f6b52073802835bc193796a41d095c5670f5d59"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY1MjQ0NQ==", "bodyText": "Good idea, I don't want to break the atomicity of TopNBuffer,  so I don't want to add new method which can operate currentTopNum directly in this class,  prefer to use TopNBuffer#removeLast", "url": "https://github.com/apache/flink/pull/12303#discussion_r435652445", "createdAt": "2020-06-05T02:10:29Z", "author": {"login": "lsyldliu"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/AppendOnlyTopNFunction.java", "diffHunk": "@@ -210,14 +210,19 @@ private void processElementWithoutRowNumber(RowData input, Collector<RowData> ou\n \t\t\tRowData lastKey = lastEntry.getKey();\n \t\t\tList<RowData> lastList = (List<RowData>) lastEntry.getValue();\n \t\t\t// remove last one\n-\t\t\tRowData lastElement = lastList.remove(lastList.size() - 1);\n-\t\t\tif (lastList.isEmpty()) {\n+\t\t\tint size = lastList.size();\n+\t\t\tRowData lastElement = null;\n+\t\t\tif (size > 0) {\n+\t\t\t\tlastElement = lastList.get(size - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI0Mzk0NA=="}, "originalCommit": {"oid": "3f6b52073802835bc193796a41d095c5670f5d59"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY1ODE3Ng==", "bodyText": "But, I find TopNBuffer#removeLast also iterate the list, the efficient problem also exist.", "url": "https://github.com/apache/flink/pull/12303#discussion_r435658176", "createdAt": "2020-06-05T02:34:46Z", "author": {"login": "lsyldliu"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/AppendOnlyTopNFunction.java", "diffHunk": "@@ -210,14 +210,19 @@ private void processElementWithoutRowNumber(RowData input, Collector<RowData> ou\n \t\t\tRowData lastKey = lastEntry.getKey();\n \t\t\tList<RowData> lastList = (List<RowData>) lastEntry.getValue();\n \t\t\t// remove last one\n-\t\t\tRowData lastElement = lastList.remove(lastList.size() - 1);\n-\t\t\tif (lastList.isEmpty()) {\n+\t\t\tint size = lastList.size();\n+\t\t\tRowData lastElement = null;\n+\t\t\tif (size > 0) {\n+\t\t\t\tlastElement = lastList.get(size - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI0Mzk0NA=="}, "originalCommit": {"oid": "3f6b52073802835bc193796a41d095c5670f5d59"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2Nzg2MQ==", "bodyText": "Yes. I think we should improve TopNBuffer#removeLast, we can call remove(index) and get(index) when it is a List.", "url": "https://github.com/apache/flink/pull/12303#discussion_r435667861", "createdAt": "2020-06-05T03:14:54Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/AppendOnlyTopNFunction.java", "diffHunk": "@@ -210,14 +210,19 @@ private void processElementWithoutRowNumber(RowData input, Collector<RowData> ou\n \t\t\tRowData lastKey = lastEntry.getKey();\n \t\t\tList<RowData> lastList = (List<RowData>) lastEntry.getValue();\n \t\t\t// remove last one\n-\t\t\tRowData lastElement = lastList.remove(lastList.size() - 1);\n-\t\t\tif (lastList.isEmpty()) {\n+\t\t\tint size = lastList.size();\n+\t\t\tRowData lastElement = null;\n+\t\t\tif (size > 0) {\n+\t\t\t\tlastElement = lastList.get(size - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI0Mzk0NA=="}, "originalCommit": {"oid": "3f6b52073802835bc193796a41d095c5670f5d59"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTE0NjI2OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/AppendOnlyTopNFunction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzoxNzoyOVrOGfFPfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzoxNzoyOVrOGfFPfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI0NDkyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tdataState.put(lastKey, lastList);\n          \n          \n            \n            \t\t\t\tdataState.put(lastKey, new ArrayList<>(lastList));\n          \n      \n    \n    \n  \n\nWe should do a shallow copy for the lastList, see FLINK-17918.", "url": "https://github.com/apache/flink/pull/12303#discussion_r435244924", "createdAt": "2020-06-04T13:17:29Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/AppendOnlyTopNFunction.java", "diffHunk": "@@ -210,14 +210,19 @@ private void processElementWithoutRowNumber(RowData input, Collector<RowData> ou\n \t\t\tRowData lastKey = lastEntry.getKey();\n \t\t\tList<RowData> lastList = (List<RowData>) lastEntry.getValue();\n \t\t\t// remove last one\n-\t\t\tRowData lastElement = lastList.remove(lastList.size() - 1);\n-\t\t\tif (lastList.isEmpty()) {\n+\t\t\tint size = lastList.size();\n+\t\t\tRowData lastElement = null;\n+\t\t\tif (size > 0) {\n+\t\t\t\tlastElement = lastList.get(size - 1);\n+\t\t\t}\n+\t\t\tif (size <= 1) {\n \t\t\t\tbuffer.removeAll(lastKey);\n \t\t\t\tdataState.remove(lastKey);\n \t\t\t} else {\n+\t\t\t\tbuffer.remove(lastKey, lastElement);\n \t\t\t\tdataState.put(lastKey, lastList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f6b52073802835bc193796a41d095c5670f5d59"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4557, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}