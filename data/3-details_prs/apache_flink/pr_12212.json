{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MzEyNDUx", "number": 12212, "title": "[FLINK-17626][fs-connector] Fs connector should use FLIP-122 format options style", "bodyText": "What is the purpose of the change\nFs connector should use FLIP-122 format options style. Like:\ncreate table t (...) with (\n  'connector'='filesystem',\n  'path'='...',\n  'format'='csv',\n  'csv.field-delimiter'=';'\n)\n\nBrief change log\n\nFileSystemFormatFactory implements FLIP-95 Factory\nUpdate formats\n\nVerifying this change\nThis change is already covered by existing tests.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes)\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no", "createdAt": "2020-05-18T07:31:46Z", "url": "https://github.com/apache/flink/pull/12212", "merged": true, "mergeCommit": {"oid": "92d674245c72a64efca83eb4343f37422ccf9e6f"}, "closed": true, "closedAt": "2020-05-19T10:23:18Z", "author": {"login": "JingsongLi"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcicJGFgFqTQxMzM3NjU5NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcivR7vAH2gAyNDE5MzEyNDUxOjhkYjNjMmRlNTU1OGVhOTVlNzA4M2I5N2Y2MGZkY2FjNjBlZjgxNzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMzc2NTk1", "url": "https://github.com/apache/flink/pull/12212#pullrequestreview-413376595", "createdAt": "2020-05-18T08:29:07Z", "commit": {"oid": "0ec02542ed4721376e60ea71090cbb335885e6b0"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwODoyOTowOFrOGWssCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTowNDozOFrOGWuDAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ1NDAyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic static final ConfigOption<Long> SINK_ROLLING_POLICY_TIME_INTERVAL = key(\"sink.rolling-policy.time.interval\")\n          \n          \n            \n            \tpublic static final ConfigOption<Long> SINK_ROLLING_POLICY_TIME_INTERVAL = key(\"sink.rolling-policy.time-interval\")\n          \n      \n    \n    \n  \n\nhow about rename to sink.rolling-policy.time-interval which is closer to  FLIP-122's style ?", "url": "https://github.com/apache/flink/pull/12212#discussion_r426454025", "createdAt": "2020-05-18T08:29:08Z", "author": {"login": "leonardBang"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/filesystem/FileSystemOptions.java", "diffHunk": "@@ -29,6 +29,35 @@\n  */\n public class FileSystemOptions {\n \n+\tpublic static final ConfigOption<String> PATH = key(\"path\")\n+\t\t\t.stringType()\n+\t\t\t.noDefaultValue()\n+\t\t\t.withDescription(\"The path of a directory\");\n+\n+\tpublic static final ConfigOption<String> PARTITION_DEFAULT_NAME = key(\"partition.default-name\")\n+\t\t\t.stringType()\n+\t\t\t.defaultValue(\"__DEFAULT_PARTITION__\")\n+\t\t\t.withDescription(\"The default partition name in case the dynamic partition\" +\n+\t\t\t\t\t\" column value is null/empty string\");\n+\n+\tpublic static final ConfigOption<Long> SINK_ROLLING_POLICY_FILE_SIZE = key(\"sink.rolling-policy.file-size\")\n+\t\t\t.longType()\n+\t\t\t.defaultValue(1024L * 1024L * 128L)\n+\t\t\t.withDescription(\"The maximum part file size before rolling (by default 128MB).\");\n+\n+\tpublic static final ConfigOption<Long> SINK_ROLLING_POLICY_TIME_INTERVAL = key(\"sink.rolling-policy.time.interval\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ec02542ed4721376e60ea71090cbb335885e6b0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ3NjI4OQ==", "bodyText": "could we list all supported Options here? if yes please add for orc too.", "url": "https://github.com/apache/flink/pull/12212#discussion_r426476289", "createdAt": "2020-05-18T09:04:38Z", "author": {"login": "leonardBang"}, "path": "flink-formats/flink-parquet/src/main/java/org/apache/flink/formats/parquet/ParquetFileSystemFormatFactory.java", "diffHunk": "@@ -23,137 +23,104 @@\n import org.apache.flink.api.common.serialization.BulkWriter;\n import org.apache.flink.api.common.serialization.Encoder;\n import org.apache.flink.configuration.ConfigOption;\n+import org.apache.flink.configuration.ReadableConfig;\n import org.apache.flink.core.fs.FileInputSplit;\n import org.apache.flink.core.fs.Path;\n import org.apache.flink.formats.parquet.row.ParquetRowDataBuilder;\n import org.apache.flink.formats.parquet.utils.SerializableConfiguration;\n import org.apache.flink.formats.parquet.vector.ParquetColumnarRowSplitReader;\n import org.apache.flink.formats.parquet.vector.ParquetSplitReaderUtil;\n import org.apache.flink.table.data.RowData;\n-import org.apache.flink.table.descriptors.DescriptorProperties;\n import org.apache.flink.table.factories.FileSystemFormatFactory;\n import org.apache.flink.table.types.DataType;\n import org.apache.flink.table.types.logical.LogicalType;\n import org.apache.flink.table.types.logical.RowType;\n import org.apache.flink.table.utils.PartitionPathUtils;\n \n import org.apache.hadoop.conf.Configuration;\n-import org.apache.parquet.hadoop.ParquetOutputFormat;\n \n import java.io.IOException;\n import java.util.Arrays;\n-import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.LinkedHashMap;\n import java.util.List;\n-import java.util.Map;\n import java.util.Optional;\n+import java.util.Properties;\n+import java.util.Set;\n \n import static org.apache.flink.configuration.ConfigOptions.key;\n import static org.apache.flink.table.data.vector.VectorizedColumnBatch.DEFAULT_SIZE;\n-import static org.apache.flink.table.descriptors.FormatDescriptorValidator.FORMAT;\n import static org.apache.flink.table.filesystem.RowPartitionComputer.restorePartValueFromType;\n \n /**\n  * Parquet {@link FileSystemFormatFactory} for file system.\n  */\n public class ParquetFileSystemFormatFactory implements FileSystemFormatFactory {\n \n-\tpublic static final ConfigOption<Boolean> UTC_TIMEZONE = key(\"format.utc-timezone\")\n+\tpublic static final String IDENTIFIER = \"parquet\";\n+\n+\tpublic static final ConfigOption<Boolean> UTC_TIMEZONE = key(\"utc-timezone\")\n \t\t\t.booleanType()\n \t\t\t.defaultValue(false)\n \t\t\t.withDescription(\"Use UTC timezone or local timezone to the conversion between epoch\" +\n \t\t\t\t\t\" time and LocalDateTime. Hive 0.x/1.x/2.x use local timezone. But Hive 3.x\" +\n \t\t\t\t\t\" use UTC timezone\");\n \n-\t/**\n-\t * Prefix for parquet-related properties, besides format, start with \"parquet\".\n-\t * See more in {@link ParquetOutputFormat}.\n-\t * - parquet.compression\n-\t * - parquet.block.size\n-\t * - parquet.page.size\n-\t * - parquet.dictionary.page.size\n-\t * - parquet.writer.max-padding\n-\t * - parquet.enable.dictionary\n-\t * - parquet.validation\n-\t * - parquet.writer.version\n-\t * ...\n-\t */\n-\tpublic static final String PARQUET_PROPERTIES = \"format.parquet\";\n-\n \t@Override\n-\tpublic Map<String, String> requiredContext() {\n-\t\tMap<String, String> context = new HashMap<>();\n-\t\tcontext.put(FORMAT, \"parquet\");\n-\t\treturn context;\n+\tpublic String factoryIdentifier() {\n+\t\treturn IDENTIFIER;\n \t}\n \n \t@Override\n-\tpublic List<String> supportedProperties() {\n-\t\treturn Arrays.asList(\n-\t\t\t\tUTC_TIMEZONE.key(),\n-\t\t\t\tPARQUET_PROPERTIES + \".*\"\n-\t\t);\n+\tpublic Set<ConfigOption<?>> requiredOptions() {\n+\t\treturn new HashSet<>();\n \t}\n \n-\tprivate static boolean isUtcTimestamp(DescriptorProperties properties) {\n-\t\treturn properties.getOptionalBoolean(UTC_TIMEZONE.key())\n-\t\t\t\t.orElse(UTC_TIMEZONE.defaultValue());\n+\t@Override\n+\tpublic Set<ConfigOption<?>> optionalOptions() {\n+\t\tSet<ConfigOption<?>> options = new HashSet<>();\n+\t\toptions.add(UTC_TIMEZONE);\n+\t\t// support \"parquet.*\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ec02542ed4721376e60ea71090cbb335885e6b0"}, "originalPosition": 94}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ec02542ed4721376e60ea71090cbb335885e6b0", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/0ec02542ed4721376e60ea71090cbb335885e6b0", "committedDate": "2020-05-18T07:28:30Z", "message": "[FLINK-17626][fs-connector] Fs connector should use FLIP-122 format options style"}, "afterCommit": {"oid": "e75af21b408e758c07fdf56e5d67b17e714b3eea", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/e75af21b408e758c07fdf56e5d67b17e714b3eea", "committedDate": "2020-05-19T04:00:46Z", "message": "[FLINK-17626][fs-connector] Fs connector should use FLIP-122 format options style"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e75af21b408e758c07fdf56e5d67b17e714b3eea", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/e75af21b408e758c07fdf56e5d67b17e714b3eea", "committedDate": "2020-05-19T04:00:46Z", "message": "[FLINK-17626][fs-connector] Fs connector should use FLIP-122 format options style"}, "afterCommit": {"oid": "14ab5f81d7f9d7324e3a0f7ab51d47bf9242abee", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/14ab5f81d7f9d7324e3a0f7ab51d47bf9242abee", "committedDate": "2020-05-19T04:04:05Z", "message": "[FLINK-17626][fs-connector] Fs connector should use FLIP-122 format options style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a972db935a0bcc39d7979358962538fd8790a9c", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/7a972db935a0bcc39d7979358962538fd8790a9c", "committedDate": "2020-05-19T04:38:15Z", "message": "[FLINK-17626][fs-connector] Fs connector should use FLIP-122 format options style"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14ab5f81d7f9d7324e3a0f7ab51d47bf9242abee", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/14ab5f81d7f9d7324e3a0f7ab51d47bf9242abee", "committedDate": "2020-05-19T04:04:05Z", "message": "[FLINK-17626][fs-connector] Fs connector should use FLIP-122 format options style"}, "afterCommit": {"oid": "7a972db935a0bcc39d7979358962538fd8790a9c", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/7a972db935a0bcc39d7979358962538fd8790a9c", "committedDate": "2020-05-19T04:38:15Z", "message": "[FLINK-17626][fs-connector] Fs connector should use FLIP-122 format options style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8db3c2de5558ea95e7083b97f60fdcac60ef8179", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/flink/commit/8db3c2de5558ea95e7083b97f60fdcac60ef8179", "committedDate": "2020-05-19T07:24:38Z", "message": "Fix cases"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4151, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}