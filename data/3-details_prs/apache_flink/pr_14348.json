{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MTg0Nzc4", "number": 14348, "title": "[FLINK-20433][tests] Stabilizing UnalignedCheckpointITCase.", "bodyText": "What is the purpose of the change\nUnalignedCheckpointITCase may timeout because of some invalid assumptions and rare issues caused by overloading of the test machines.\nBrief change log\nImproves UnalignedCheckpointITCase in the following ways to avoid running into rare issues or better deal with them:\n\nReduce load on test machine: Executing a test with p=10 may spawn up to 70 tasks that until backpressured can potentially lead to a full load on 70 cores. This may causes larger GC pauses and other JVM freezes that will trigger the rare PartitionNotFound exception. Now, sources are throttled until the sink backpressures.\nKeep track of restart attempts in split enumerator and sink with source instances. Only finish sources if the desired numbers of failures occurred to avoid finishing too quickly.\nAvoid relying completely on notifyCheckpointComplete to finish test: notifyCheckpointComplete is not guaranteed to be called but the test completely relied on it. This may lead to indefinite test runs: Some sources are finished while others are still running, but new checkpoints are canceled because of the finished sources. Thus, too many aborted checkpoints will also lead to a completed test.\nReadding splits to enumerator (after FLINK-20290 has been fixed). Any unexpected failure may have caused all splits to be dropped, which causes indefinite running tests.\nRemoving test-class level timeout - AZP has its own timeout that also provides thread dumps - something that would require a tremendous effort in JUnit4.\n\nVerifying this change\nStabilizing test.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-12-09T13:36:03Z", "url": "https://github.com/apache/flink/pull/14348", "merged": true, "mergeCommit": {"oid": "d07140c7a2dfe33a067454a7a802e25e81c0d168"}, "closed": true, "closedAt": "2020-12-17T20:26:24Z", "author": {"login": "AHeise"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkfUrSgFqTU0ODIwNzI2OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnFRHTABqjQxMjU2Njg5MzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MjA3MjY4", "url": "https://github.com/apache/flink/pull/14348#pullrequestreview-548207268", "createdAt": "2020-12-09T13:57:54Z", "commit": {"oid": "a64501c9e87e70f3093abc558d57d370e0645e8c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMzo1Nzo1NVrOICV6Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDowNzozM1rOICWXgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyNzAzNA==", "bodyText": "Drawback of removing such timeout is, that if there are multiple deadlocks in single azure build, test level timeout would show all of them. Azure level would show just the first one. Secondly won't the Azure level timeout would take longer to kick in?\nI'm not saying I'm strictly against removing it. But I'm just pointing this out. Having test level timeout is also sometimes annoying during debugging, so all in all I'm +/- 0 for this change.", "url": "https://github.com/apache/flink/pull/14348#discussion_r539327034", "createdAt": "2020-12-09T13:57:55Z", "author": {"login": "pnowojski"}, "path": "flink-tests/src/test/java/org/apache/flink/test/checkpointing/UnalignedCheckpointTestBase.java", "diffHunk": "@@ -103,11 +101,6 @@\n \t@Rule\n \tpublic final TemporaryFolder temp = new TemporaryFolder();\n \n-\t@Rule\n-\tpublic final Timeout timeout = Timeout.builder()\n-\t\t.withTimeout(300, TimeUnit.SECONDS)\n-\t\t.build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a64501c9e87e70f3093abc558d57d370e0645e8c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzMTY4NA==", "bodyText": "Simplify to just Thread.sleep(1)?", "url": "https://github.com/apache/flink/pull/14348#discussion_r539331684", "createdAt": "2020-12-09T14:03:51Z", "author": {"login": "pnowojski"}, "path": "flink-tests/src/test/java/org/apache/flink/test/checkpointing/UnalignedCheckpointITCase.java", "diffHunk": "@@ -321,7 +321,7 @@ public void invoke(Long value, Context context) throws Exception {\n \t\t\tif (backpressure) {\n \t\t\t\t// induce backpressure until enough checkpoints have been written\n \t\t\t\tif (random.nextInt(100) == 42) {\n-\t\t\t\t\tThread.sleep(0, 100_000);\n+\t\t\t\t\tThread.sleep(100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a64501c9e87e70f3093abc558d57d370e0645e8c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzNDUyOA==", "bodyText": "With modified Thread.sleep() I presume CPU usage went down, right?\nBut what about test duration? Has it increased? If so maybe\nif (random.nextInt(100) == 42) {\n\tThread.sleep(1);\n}\n\nis better?\nNote that previous Thread.sleep(0, 100_000); was basically an equivalent of Thread.sleep(0); which in turn was burning 100% cpu. In other words\nif (random() % 100 == 0) {\n  Thread.sleep(1);\n}\n\nworks usually much better and more like you would be expecting compared to\nThread.sleep(0, 100_000);\n\nwhich is for the most purposes just broken and not sleeping at all.", "url": "https://github.com/apache/flink/pull/14348#discussion_r539334528", "createdAt": "2020-12-09T14:07:33Z", "author": {"login": "pnowojski"}, "path": "flink-tests/src/test/java/org/apache/flink/test/checkpointing/UnalignedCheckpointITCase.java", "diffHunk": "@@ -321,7 +321,7 @@ public void invoke(Long value, Context context) throws Exception {\n \t\t\tif (backpressure) {\n \t\t\t\t// induce backpressure until enough checkpoints have been written\n \t\t\t\tif (random.nextInt(100) == 42) {\n-\t\t\t\t\tThread.sleep(0, 100_000);\n+\t\t\t\t\tThread.sleep(100);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzMTY4NA=="}, "originalCommit": {"oid": "a64501c9e87e70f3093abc558d57d370e0645e8c"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a64501c9e87e70f3093abc558d57d370e0645e8c", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/a64501c9e87e70f3093abc558d57d370e0645e8c", "committedDate": "2020-12-09T13:34:34Z", "message": "[FLINK-20433][tests] Stabilizing UnalignedCheckpointITCase.\n\nImproves UnalignedCheckpointITCase in three ways to avoid running into rare issues or better deal with them:\n- Reduce load on test machine: Executing a test with p=10 may spawn up to 70 tasks that until backpressured can potentially lead to a full load on 70 cores. This may causes larger GC pauses and other JVM freezes that will trigger the rare PartitionNotFound exception. Now, only the first source subtask is producing data as fast as possible until backpressured, while the other source instances are increasingly throttled. Hence p=10 has only little more load than p=1.\n- Avoid relying completely on notifyCheckpointComplete to finish test: notifyCheckpointComplete is not guaranteed to be called but the test completely relied on it. This may lead to indefinite test runs: Some sources are finished while others are still running, but new checkpoints are canceled because of the finished sources. Thus, too many aborted checkpoints will also lead to a completed test.\n- Readding splits to enumerator (after FLINK-20290 has been fixed). Any unexpected failure may have caused all splits to be dropped, which causes indefinite running tests.\n- Removing test-class level timeout - AZP has its own timeout that also provides thread dumps - something that would require a tremendous effort in JUnit4."}, "afterCommit": {"oid": "65f1903561a4d725112998ccc18e4e031b25fcf4", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/65f1903561a4d725112998ccc18e4e031b25fcf4", "committedDate": "2020-12-16T17:12:05Z", "message": "[FLINK-20433][tests] Stabilizing UnalignedCheckpointITCase.\n\nImproves UnalignedCheckpointITCase in the following ways to avoid running into rare issues or better deal with them:\n- Reduce load on test machine: Executing a test with p=10 may spawn up to 70 tasks that until backpressured can potentially lead to a full load on 70 cores. This may causes larger GC pauses and other JVM freezes that will trigger the rare PartitionNotFound exception. Now, sources are throttled until the sink backpressures.\n- Avoid relying completely on notifyCheckpointComplete to finish test: notifyCheckpointComplete is not guaranteed to be called but the test completely relied on it. This may lead to indefinite test runs: Some sources are finished while others are still running, but new checkpoints are canceled because of the finished sources. Thus, too many aborted checkpoints will also lead to a completed test.\n- Readding splits to enumerator (after FLINK-20290 has been fixed). Any unexpected failure may have caused all splits to be dropped, which causes indefinite running tests.\n- Removing test-class level timeout - AZP has its own timeout that also provides thread dumps - something that would require a tremendous effort in JUnit4."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7d5ff197d8a692bf2baa24e47c2548dc1be956ac", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/7d5ff197d8a692bf2baa24e47c2548dc1be956ac", "committedDate": "2020-12-17T11:29:56Z", "message": "To be squashed:\n\n- Keep track of restart attempts in split enumerator and sink with source instances. Only finish sources if the desired numbers of failures occurred to avoid finishing too quickly."}, "afterCommit": {"oid": "562b597f6cbf499120f813a7e076b4915878f7b4", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/562b597f6cbf499120f813a7e076b4915878f7b4", "committedDate": "2020-12-17T13:04:46Z", "message": "To be squashed:\n\n- Keep track of restart attempts in split enumerator and sink with source instances. Only finish sources if the desired numbers of failures occurred to avoid finishing too quickly."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NTM3NTEz", "url": "https://github.com/apache/flink/pull/14348#pullrequestreview-554537513", "createdAt": "2020-12-17T11:59:45Z", "commit": {"oid": "7d5ff197d8a692bf2baa24e47c2548dc1be956ac"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMTo1OTo0NVrOIHyVhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMTo1OTo0NVrOIHyVhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTAzNTY1NQ==", "bodyText": "why ~?", "url": "https://github.com/apache/flink/pull/14348#discussion_r545035655", "createdAt": "2020-12-17T11:59:45Z", "author": {"login": "pnowojski"}, "path": "flink-tests/src/test/java/org/apache/flink/test/checkpointing/UnalignedCheckpointTestBase.java", "diffHunk": "@@ -219,14 +219,17 @@ public InputStatus pollNext(ReaderOutput<Long> output) throws InterruptedExcepti\n \t\t\t\t\treturn Collections.emptyList();\n \t\t\t\t}\n \t\t\t\tthrottle = split.numCompletedCheckpoints >= minCheckpoints;\n-\t\t\t\tLOG.info(\"Snapshotted {} @ {} subtask (? attempt)\", split, split.nextNumber % split.increment);\n+\t\t\t\tLOG.info(\"Snapshotted {} @ {} subtask (~{} attempt)\", split, split.nextNumber % split.increment, numRestarts);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d5ff197d8a692bf2baa24e47c2548dc1be956ac"}, "originalPosition": 105}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "562b597f6cbf499120f813a7e076b4915878f7b4", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/562b597f6cbf499120f813a7e076b4915878f7b4", "committedDate": "2020-12-17T13:04:46Z", "message": "To be squashed:\n\n- Keep track of restart attempts in split enumerator and sink with source instances. Only finish sources if the desired numbers of failures occurred to avoid finishing too quickly."}, "afterCommit": {"oid": "8d3b97de924fbbe87f5f37c8c572ea0194ccfa3f", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/8d3b97de924fbbe87f5f37c8c572ea0194ccfa3f", "committedDate": "2020-12-17T15:27:12Z", "message": "To be squashed:\n\n- Keep track of restart attempts in split enumerator and sink with source instances. Only finish sources if the desired numbers of failures occurred to avoid finishing too quickly."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d13d56cb93c745ca2af5b7f5ef72a27027af43f1", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/d13d56cb93c745ca2af5b7f5ef72a27027af43f1", "committedDate": "2020-12-17T15:28:22Z", "message": "[FLINK-20433][tests] Stabilizing UnalignedCheckpointITCase.\n\nImproves UnalignedCheckpointITCase in the following ways to avoid running into rare issues or better deal with them:\n- Reduce load on test machine: Executing a test with p=10 may spawn up to 70 tasks that until backpressured can potentially lead to a full load on 70 cores. This may causes larger GC pauses and other JVM freezes that will trigger the rare PartitionNotFound exception. Now, sources are throttled until the sink backpressures.\n- Keep track of restart attempts in split enumerator and sink with source instances. Only finish sources if the desired numbers of failures occurred to avoid finishing too quickly.\n- Avoid relying completely on notifyCheckpointComplete to finish test: notifyCheckpointComplete is not guaranteed to be called but the test completely relied on it. This may lead to indefinite test runs: Some sources are finished while others are still running, but new checkpoints are canceled because of the finished sources. Thus, too many aborted checkpoints will also lead to a completed test.\n- Readding splits to enumerator (after FLINK-20290 has been fixed). Any unexpected failure may have caused all splits to be dropped, which causes indefinite running tests.\n- Removing test-class level timeout - AZP has its own timeout that also provides thread dumps - something that would require a tremendous effort in JUnit4."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d3b97de924fbbe87f5f37c8c572ea0194ccfa3f", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/8d3b97de924fbbe87f5f37c8c572ea0194ccfa3f", "committedDate": "2020-12-17T15:27:12Z", "message": "To be squashed:\n\n- Keep track of restart attempts in split enumerator and sink with source instances. Only finish sources if the desired numbers of failures occurred to avoid finishing too quickly."}, "afterCommit": {"oid": "d13d56cb93c745ca2af5b7f5ef72a27027af43f1", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/d13d56cb93c745ca2af5b7f5ef72a27027af43f1", "committedDate": "2020-12-17T15:28:22Z", "message": "[FLINK-20433][tests] Stabilizing UnalignedCheckpointITCase.\n\nImproves UnalignedCheckpointITCase in the following ways to avoid running into rare issues or better deal with them:\n- Reduce load on test machine: Executing a test with p=10 may spawn up to 70 tasks that until backpressured can potentially lead to a full load on 70 cores. This may causes larger GC pauses and other JVM freezes that will trigger the rare PartitionNotFound exception. Now, sources are throttled until the sink backpressures.\n- Keep track of restart attempts in split enumerator and sink with source instances. Only finish sources if the desired numbers of failures occurred to avoid finishing too quickly.\n- Avoid relying completely on notifyCheckpointComplete to finish test: notifyCheckpointComplete is not guaranteed to be called but the test completely relied on it. This may lead to indefinite test runs: Some sources are finished while others are still running, but new checkpoints are canceled because of the finished sources. Thus, too many aborted checkpoints will also lead to a completed test.\n- Readding splits to enumerator (after FLINK-20290 has been fixed). Any unexpected failure may have caused all splits to be dropped, which causes indefinite running tests.\n- Removing test-class level timeout - AZP has its own timeout that also provides thread dumps - something that would require a tremendous effort in JUnit4."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3518, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}