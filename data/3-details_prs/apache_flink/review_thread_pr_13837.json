{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMDc1NzI3", "number": 13837, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNzoyNTozNlrOEzrTtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNzoxNjoyMlrOE0QWEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjIyMzg4OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/FlinkBatchRuleSets.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNzoyNTozNlrOHrDvSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNzoyNTozNlrOHrDvSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkxMjA3NQ==", "bodyText": "It's better we do not put JoinDeriveNullFilterRule  into JOIN_COND_EQUAL_TRANSFER_RULES collection, instead I suggest we can add a program into  JOIN_REWRITE stage after JOIN_COND_EQUAL_TRANSFER_RULES", "url": "https://github.com/apache/flink/pull/13837#discussion_r514912075", "createdAt": "2020-10-30T07:25:36Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/FlinkBatchRuleSets.scala", "diffHunk": "@@ -222,7 +222,8 @@ object FlinkBatchRuleSets {\n   val JOIN_COND_EQUAL_TRANSFER_RULES: RuleSet = RuleSets.ofList((\n     RuleSets.ofList(JoinConditionEqualityTransferRule.INSTANCE).asScala ++\n       PREDICATE_SIMPLIFY_EXPRESSION_RULES.asScala ++\n-      FILTER_RULES.asScala\n+      FILTER_RULES.asScala ++\n+      RuleSets.ofList(JoinDeriveNullFilterRule.INSTANCE).asScala", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247a8b4a1ac69558d38fa82b8c346dbc407b79c6"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjIyNzIyOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/common/JoinReorderTestBase.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNzoyNzowNlrOHrDxOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNzoyNzowNlrOHrDxOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkxMjU3MQ==", "bodyText": "if they are only used in one test method, we can move them into the specific method", "url": "https://github.com/apache/flink/pull/13837#discussion_r514912571", "createdAt": "2020-10-30T07:27:06Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/common/JoinReorderTestBase.scala", "diffHunk": "@@ -69,6 +70,27 @@ abstract class JoinReorderTestBase extends TableTestBase {\n         \"b5\" -> new ColumnStats(200L, 0L, 8.0, 8, null, null)\n       ))).build())\n \n+    util.addTableSource(\"T6\", types, Array(\"a6\", \"b6\", \"c6\"), FlinkStatistic.builder()\n+      .tableStats(new TableStats(500000L, Map(\n+        \"a6\" -> new ColumnStats(200000L, 50000L, 4.0, 4, null, null),\n+        \"b6\" -> new ColumnStats(100000L, 0L, 8.0, 8, null, null),\n+        \"c6\" -> new ColumnStats(50000L, 20000L, 8.0, 8, null, null)\n+      ))).build())\n+\n+    util.addTableSource(\"T7\", types, Array(\"a7\", \"b7\", \"c7\"), FlinkStatistic.builder()\n+      .tableStats(new TableStats(500000L, Map(\n+        \"a7\" -> new ColumnStats(200000L, 50000L, 4.0, 4, null, null),\n+        \"b7\" -> new ColumnStats(100000L, 0L, 8.0, 8, null, null),\n+        \"c7\" -> new ColumnStats(50000L, 20000L, 8.0, 8, null, null)\n+      ))).build())\n+\n+    util.addTableSource(\"T8\", types, Array(\"a8\", \"b8\", \"c8\"), FlinkStatistic.builder()\n+      .tableStats(new TableStats(500000L, Map(\n+        \"a8\" -> new ColumnStats(200000L, 50000L, 4.0, 4, null, null),\n+        \"b8\" -> new ColumnStats(100000L, 0L, 8.0, 8, null, null),\n+        \"c8\" -> new ColumnStats(50000L, 20000L, 8.0, 8, null, null)\n+      ))).build())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247a8b4a1ac69558d38fa82b8c346dbc407b79c6"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjIyOTkyOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/common/JoinReorderTestBase.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNzoyODoxN1rOHrDy0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNzoyODoxN1rOHrDy0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkxMjk3Ng==", "bodyText": "please do not use deprecated constructor", "url": "https://github.com/apache/flink/pull/13837#discussion_r514912976", "createdAt": "2020-10-30T07:28:17Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/common/JoinReorderTestBase.scala", "diffHunk": "@@ -69,6 +70,27 @@ abstract class JoinReorderTestBase extends TableTestBase {\n         \"b5\" -> new ColumnStats(200L, 0L, 8.0, 8, null, null)\n       ))).build())\n \n+    util.addTableSource(\"T6\", types, Array(\"a6\", \"b6\", \"c6\"), FlinkStatistic.builder()\n+      .tableStats(new TableStats(500000L, Map(\n+        \"a6\" -> new ColumnStats(200000L, 50000L, 4.0, 4, null, null),\n+        \"b6\" -> new ColumnStats(100000L, 0L, 8.0, 8, null, null),\n+        \"c6\" -> new ColumnStats(50000L, 20000L, 8.0, 8, null, null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247a8b4a1ac69558d38fa82b8c346dbc407b79c6"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjI5MjAyOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/FlinkBatchRuleSets.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNzoxNjoyMlrOHr4d3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwNzoxNjoyMlrOHr4d3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTc3NTk2NQ==", "bodyText": "It's better JOIN_PREDICATE_REWRITE_RULES could reuse this rule set", "url": "https://github.com/apache/flink/pull/13837#discussion_r515775965", "createdAt": "2020-11-02T07:16:22Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/FlinkBatchRuleSets.scala", "diffHunk": "@@ -222,10 +222,13 @@ object FlinkBatchRuleSets {\n   val JOIN_COND_EQUAL_TRANSFER_RULES: RuleSet = RuleSets.ofList((\n     RuleSets.ofList(JoinConditionEqualityTransferRule.INSTANCE).asScala ++\n       PREDICATE_SIMPLIFY_EXPRESSION_RULES.asScala ++\n-      FILTER_RULES.asScala ++\n-      RuleSets.ofList(JoinDeriveNullFilterRule.INSTANCE).asScala\n+      FILTER_RULES.asScala\n     ).asJava)\n \n+  val JOIN_NULL_FILTER_RULES: RuleSet = RuleSets.ofList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70ef6a8a21a39d9f6811baed3e2ca080fec2cd36"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4983, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}