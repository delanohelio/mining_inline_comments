{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NTc3MDU3", "number": 13902, "title": "[FLINK-19941][Connectors / Kafka]Support sink parallelism configuration to Kafka connector", "bodyText": "What is the purpose of the change\nSupport sink parallelism configuration to Kafka connector\nBrief change log\n\nSupport sink parallelism configuration to Kafka connector\n\nVerifying this change\nThis change added tests and can be verified as follows:\n\nKafkaDynamicTableFactoryTest#testSinkWithParallelism\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)\nIf yes, how is the feature documented? (no)", "createdAt": "2020-11-03T08:45:05Z", "url": "https://github.com/apache/flink/pull/13902", "merged": true, "mergeCommit": {"oid": "c55420b28095c33ba9bf3a7623a0a7ac6b684272"}, "closed": true, "closedAt": "2020-11-05T04:29:50Z", "author": {"login": "zhuxiaoshang"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdY1DQ0gH2gAyNTE0NTc3MDU3OmEyNTZhMjhmNmNlYmY1ODYzMDlhN2NmYjhkMTVjNWRkYjE4OTBlOWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZH1hKAH2gAyNTE0NTc3MDU3OjJiODg3MTRkMGZjMWZmYzBmMzVlMzA4NmI1ZmM1MmY5Yjc3OGVhMDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a256a28f6cebf586309a7cfb8d15c5ddb1890e9f", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/a256a28f6cebf586309a7cfb8d15c5ddb1890e9f", "committedDate": "2020-11-03T08:39:57Z", "message": "[FLINK-19941][Connectors / Kafka]Support sink parallelism configuration to Kafka connector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3c798b00f7596f539c9bd9e206611f2c981bd98", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/a3c798b00f7596f539c9bd9e206611f2c981bd98", "committedDate": "2020-11-03T09:46:26Z", "message": "[FLINK-19941][Connectors / Kafka]Support sink parallelism configuration to Kafka connector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46ec64b96f816e080f4e8d25024c0ffea4884a1a", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/46ec64b96f816e080f4e8d25024c0ffea4884a1a", "committedDate": "2020-11-03T11:29:11Z", "message": "add docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b19dd363604fb00239da34f02762c9bc194a300", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/0b19dd363604fb00239da34f02762c9bc194a300", "committedDate": "2020-11-03T16:36:54Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb8469feac8cd4d4ba5032e5306a57aa3e41d6dc", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/bb8469feac8cd4d4ba5032e5306a57aa3e41d6dc", "committedDate": "2020-11-03T16:46:00Z", "message": "fix doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c50df79274b61c21aefbae266cdabef63ff4e07", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/1c50df79274b61c21aefbae266cdabef63ff4e07", "committedDate": "2020-11-04T02:51:30Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc78068f8b87f8a82df7574095d2f5695c690112", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/dc78068f8b87f8a82df7574095d2f5695c690112", "committedDate": "2020-11-04T02:54:50Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMDEwNzQ0", "url": "https://github.com/apache/flink/pull/13902#pullrequestreview-523010744", "createdAt": "2020-11-04T02:52:02Z", "commit": {"oid": "bb8469feac8cd4d4ba5032e5306a57aa3e41d6dc"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjo1MjowMlrOHtHalg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMzowNDo1OFrOHtHnqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA2OTQ2Mg==", "bodyText": "Can simplify to Optional.ofNullable(parallelism).", "url": "https://github.com/apache/flink/pull/13902#discussion_r517069462", "createdAt": "2020-11-04T02:52:02Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSink.java", "diffHunk": "@@ -282,6 +288,20 @@ public int hashCode() {\n \t\treturn format.createRuntimeEncoder(context, physicalFormatDataType);\n \t}\n \n+\t/**\n+\t * Returns the parallelism for this instance.\n+\t *\n+\t * <p>The parallelism denotes how many parallel instances of a source or sink will be spawned\n+\t * during the execution.\n+\t *\n+\t * @return empty if the connector does not provide a custom parallelism, then the planner will\n+\t * decide the number of parallel instances by itself.\n+\t */\n+\t@Override\n+\tpublic Optional<Integer> getParallelism() {\n+\t\treturn parallelism != null ? Optional.of(parallelism) : Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb8469feac8cd4d4ba5032e5306a57aa3e41d6dc"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA3MTc0Mw==", "bodyText": "I think it's confusing what is \"parallelism are chained.\".\nWhat do you think about:\n\nDefines the parallelism of the Kafka sink operator. By default, the parallelism is determined by the framework using the same parallelism of the upstream chained operator.", "url": "https://github.com/apache/flink/pull/13902#discussion_r517071743", "createdAt": "2020-11-04T03:01:05Z", "author": {"login": "wuchong"}, "path": "docs/dev/table/connectors/kafka.md", "diffHunk": "@@ -184,6 +184,18 @@ Connector Options\n       <td>String</td>\n       <td>Defines the delivery semantic for the Kafka sink. Valid enumerationns are <code>'at-lease-once'</code>, <code>'exactly-once'</code> and <code>'none'</code>. See <a href='#consistency-guarantees'>Consistency guarantees</a> for more details. </td>\n     </tr>\n+    <tr>\n+      <td><h5>sink.parallelism</h5></td>\n+      <td>optional</td>\n+      <td style=\"word-wrap: break-word;\">(none)</td>\n+      <td>Integer</td>\n+      <td>Defines the parallelism for the Kafka sink. If not specified, the parallelism are\n+      <ul>\n+        <li><code>Chained</code>: Use upstream parallelism.</li>\n+        <li><code>Non-Chained</code>: Use global parallelism setting.</li>\n+      </ul>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc78068f8b87f8a82df7574095d2f5695c690112"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA3MjgxMQ==", "bodyText": "Could you add a new util method in SinkFunctionProvider? I think most of the connector can use this new method.\n\t/**\n\t * Helper method for creating a SinkFunction provider with a provided sink parallelism.\n\t */\n\tstatic SinkFunctionProvider of(SinkFunction<RowData> sinkFunction, Integer sinkParallelism) {\n\t\treturn new SinkFunctionProvider() {\n\n\t\t\t@Override\n\t\t\tpublic SinkFunction<RowData> createSinkFunction() {\n\t\t\t\treturn sinkFunction;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic Optional<Integer> getParallelism() {\n\t\t\t\treturn Optional.ofNullable(sinkParallelism);\n\t\t\t}\n\t\t};\n\t}", "url": "https://github.com/apache/flink/pull/13902#discussion_r517072811", "createdAt": "2020-11-04T03:04:58Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSink.java", "diffHunk": "@@ -145,7 +150,17 @@ public SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n \t\tfinal FlinkKafkaProducer<RowData> kafkaProducer =\n \t\t\t\tcreateKafkaProducer(keySerialization, valueSerialization);\n \n-\t\treturn SinkFunctionProvider.of(kafkaProducer);\n+\t\treturn new SinkFunctionProvider() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc78068f8b87f8a82df7574095d2f5695c690112"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7d8e95015408dc337e9ccc71f51a23b067f3e23", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/f7d8e95015408dc337e9ccc71f51a23b067f3e23", "committedDate": "2020-11-04T03:16:50Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMDE5ODA1", "url": "https://github.com/apache/flink/pull/13902#pullrequestreview-523019805", "createdAt": "2020-11-04T03:23:32Z", "commit": {"oid": "f7d8e95015408dc337e9ccc71f51a23b067f3e23"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b88714d0fc1ffc0f35e3086b5fc52f9b778ea09", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/2b88714d0fc1ffc0f35e3086b5fc52f9b778ea09", "committedDate": "2020-11-04T06:33:08Z", "message": "fix checkstyle"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4714, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}