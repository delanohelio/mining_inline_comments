{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5MTQ0NTk5", "number": 14033, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzo0ODoxNVrOE4xPhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxODowNDoxMlrOE4xlDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTYyNTAzOnYy", "diffSide": "RIGHT", "path": "flink-end-to-end-tests/test-scripts/common.sh", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzo0ODoxNVrOHy43xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQyMjowOTo0M1rOHzjgKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyMjYzMA==", "bodyText": "Shouldn't we move that out into its own common utility function considering that we used almost the exact same code in PR #14062 (FLINK-17470)?", "url": "https://github.com/apache/flink/pull/14033#discussion_r523122630", "createdAt": "2020-11-13T17:48:15Z", "author": {"login": "XComp"}, "path": "flink-end-to-end-tests/test-scripts/common.sh", "diffHunk": "@@ -587,9 +588,25 @@ function tm_kill_all {\n \n # Kills all processes that match the given name.\n function kill_all {\n-  local pid=`jps | grep -E \"${1}\" | cut -d \" \" -f 1 || true`\n-  kill ${pid} 2> /dev/null || true\n-  wait ${pid} 2> /dev/null || true\n+  # using ps instead of jps to identify jvms in shutdown as well, so that we can wait for the shutdown to finish (jps doesn't show killed JVMs while shutting down)\n+  # use awk to strip leading and trailing whitespaces\n+  # use cut to get the pid\n+  for pid in $(ps ax | grep \"java\" | grep -E \"${1}\" | awk '{$1=$1;print}' | cut -d \" \" -f 1)\n+  do\n+      echo \"Waiting till process is stopped: pid = $pid pattern = '${1}'\"\n+      kill ${pid} 2> /dev/null || true\n+      if [[ \"$OS_TYPE\" == \"mac\" ]]; then\n+          # works on mac, but does seem to return before the process has finished on Linux\n+          wait ${pid} 2> /dev/null || true\n+      else\n+          # use tail to wait for a process to finish: https://stackoverflow.com/questions/1058047/wait-for-a-process-to-finish/11719943\n+          timeout 60 tail --pid=${pid} -f /dev/null\n+          if [ \"$?\" -eq 124 ]; then\n+            echo \"Process (pid = $pid) didn't stop within 60 seconds. Killing it:\"\n+            kill -9 $pid\n+          fi\n+      fi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e5179d99ac3f1ee67388f6236a5ffd087941a94"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE0NzA2MA==", "bodyText": "The problem is that the scripts in #14062 is shipped to the users as part of the Flink distribution for starting Flink.\nThe code here is solely for the testing infrastructure. We could in theory source a script from the distribution here, but that would be a weird dependency.", "url": "https://github.com/apache/flink/pull/14033#discussion_r523147060", "createdAt": "2020-11-13T18:31:15Z", "author": {"login": "rmetzger"}, "path": "flink-end-to-end-tests/test-scripts/common.sh", "diffHunk": "@@ -587,9 +588,25 @@ function tm_kill_all {\n \n # Kills all processes that match the given name.\n function kill_all {\n-  local pid=`jps | grep -E \"${1}\" | cut -d \" \" -f 1 || true`\n-  kill ${pid} 2> /dev/null || true\n-  wait ${pid} 2> /dev/null || true\n+  # using ps instead of jps to identify jvms in shutdown as well, so that we can wait for the shutdown to finish (jps doesn't show killed JVMs while shutting down)\n+  # use awk to strip leading and trailing whitespaces\n+  # use cut to get the pid\n+  for pid in $(ps ax | grep \"java\" | grep -E \"${1}\" | awk '{$1=$1;print}' | cut -d \" \" -f 1)\n+  do\n+      echo \"Waiting till process is stopped: pid = $pid pattern = '${1}'\"\n+      kill ${pid} 2> /dev/null || true\n+      if [[ \"$OS_TYPE\" == \"mac\" ]]; then\n+          # works on mac, but does seem to return before the process has finished on Linux\n+          wait ${pid} 2> /dev/null || true\n+      else\n+          # use tail to wait for a process to finish: https://stackoverflow.com/questions/1058047/wait-for-a-process-to-finish/11719943\n+          timeout 60 tail --pid=${pid} -f /dev/null\n+          if [ \"$?\" -eq 124 ]; then\n+            echo \"Process (pid = $pid) didn't stop within 60 seconds. Killing it:\"\n+            kill -9 $pid\n+          fi\n+      fi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyMjYzMA=="}, "originalCommit": {"oid": "9e5179d99ac3f1ee67388f6236a5ffd087941a94"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyMTA5Ng==", "bodyText": "I see. Makes sense.", "url": "https://github.com/apache/flink/pull/14033#discussion_r523821096", "createdAt": "2020-11-15T22:09:43Z", "author": {"login": "XComp"}, "path": "flink-end-to-end-tests/test-scripts/common.sh", "diffHunk": "@@ -587,9 +588,25 @@ function tm_kill_all {\n \n # Kills all processes that match the given name.\n function kill_all {\n-  local pid=`jps | grep -E \"${1}\" | cut -d \" \" -f 1 || true`\n-  kill ${pid} 2> /dev/null || true\n-  wait ${pid} 2> /dev/null || true\n+  # using ps instead of jps to identify jvms in shutdown as well, so that we can wait for the shutdown to finish (jps doesn't show killed JVMs while shutting down)\n+  # use awk to strip leading and trailing whitespaces\n+  # use cut to get the pid\n+  for pid in $(ps ax | grep \"java\" | grep -E \"${1}\" | awk '{$1=$1;print}' | cut -d \" \" -f 1)\n+  do\n+      echo \"Waiting till process is stopped: pid = $pid pattern = '${1}'\"\n+      kill ${pid} 2> /dev/null || true\n+      if [[ \"$OS_TYPE\" == \"mac\" ]]; then\n+          # works on mac, but does seem to return before the process has finished on Linux\n+          wait ${pid} 2> /dev/null || true\n+      else\n+          # use tail to wait for a process to finish: https://stackoverflow.com/questions/1058047/wait-for-a-process-to-finish/11719943\n+          timeout 60 tail --pid=${pid} -f /dev/null\n+          if [ \"$?\" -eq 124 ]; then\n+            echo \"Process (pid = $pid) didn't stop within 60 seconds. Killing it:\"\n+            kill -9 $pid\n+          fi\n+      fi", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyMjYzMA=="}, "originalCommit": {"oid": "9e5179d99ac3f1ee67388f6236a5ffd087941a94"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTY1NTI0OnYy", "diffSide": "RIGHT", "path": "flink-end-to-end-tests/test-scripts/common.sh", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzo1Njo1MFrOHy5JvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQyMjoyNzozOVrOHzjo2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyNzIyOQ==", "bodyText": "I couldn't verify it that's why I'm asking: Are you sure that this is what you want to do? AFAIK, pkill would need some pattern and -P just restricts the parent PID?! \ud83e\udd14", "url": "https://github.com/apache/flink/pull/14033#discussion_r523127229", "createdAt": "2020-11-13T17:56:50Z", "author": {"login": "XComp"}, "path": "flink-end-to-end-tests/test-scripts/common.sh", "diffHunk": "@@ -822,11 +839,20 @@ internal_run_with_timeout() {\n \n   (\n       command_pid=$BASHPID\n-      (sleep \"${timeout_in_seconds}\" # set a timeout for this command\n-      echo \"${command_label:-\"The command '${command}'\"} (pid: $command_pid) did not finish after $timeout_in_seconds seconds.\"\n-      eval \"${on_failure}\"\n-      kill \"$command_pid\") & watchdog_pid=$!\n+      (# this subshell contains the watchdog\n+        local wakeup_time=$(( ${timeout_in_seconds} + $(date +%s) ))\n+        while true; do\n+          sleep 1\n+          if [ $wakeup_time -le $(date +%s) ]; then\n+            echo \"${command_label:-\"The command '${command}'\"} (pid: $command_pid) did not finish after $timeout_in_seconds seconds.\"\n+            eval \"${on_failure}\"\n+            kill \"$command_pid\"\n+            pkill -P \"$command_pid\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e5179d99ac3f1ee67388f6236a5ffd087941a94"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE1MTQyMw==", "bodyText": "My understanding is that this command kills all children of $command_pid, and if there's no pattern, it'll kill all of them", "url": "https://github.com/apache/flink/pull/14033#discussion_r523151423", "createdAt": "2020-11-13T18:36:55Z", "author": {"login": "rmetzger"}, "path": "flink-end-to-end-tests/test-scripts/common.sh", "diffHunk": "@@ -822,11 +839,20 @@ internal_run_with_timeout() {\n \n   (\n       command_pid=$BASHPID\n-      (sleep \"${timeout_in_seconds}\" # set a timeout for this command\n-      echo \"${command_label:-\"The command '${command}'\"} (pid: $command_pid) did not finish after $timeout_in_seconds seconds.\"\n-      eval \"${on_failure}\"\n-      kill \"$command_pid\") & watchdog_pid=$!\n+      (# this subshell contains the watchdog\n+        local wakeup_time=$(( ${timeout_in_seconds} + $(date +%s) ))\n+        while true; do\n+          sleep 1\n+          if [ $wakeup_time -le $(date +%s) ]; then\n+            echo \"${command_label:-\"The command '${command}'\"} (pid: $command_pid) did not finish after $timeout_in_seconds seconds.\"\n+            eval \"${on_failure}\"\n+            kill \"$command_pid\"\n+            pkill -P \"$command_pid\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyNzIyOQ=="}, "originalCommit": {"oid": "9e5179d99ac3f1ee67388f6236a5ffd087941a94"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyMzMyMw==", "bodyText": "Ok, I did some more research on it. Looks like it works like that.", "url": "https://github.com/apache/flink/pull/14033#discussion_r523823323", "createdAt": "2020-11-15T22:27:39Z", "author": {"login": "XComp"}, "path": "flink-end-to-end-tests/test-scripts/common.sh", "diffHunk": "@@ -822,11 +839,20 @@ internal_run_with_timeout() {\n \n   (\n       command_pid=$BASHPID\n-      (sleep \"${timeout_in_seconds}\" # set a timeout for this command\n-      echo \"${command_label:-\"The command '${command}'\"} (pid: $command_pid) did not finish after $timeout_in_seconds seconds.\"\n-      eval \"${on_failure}\"\n-      kill \"$command_pid\") & watchdog_pid=$!\n+      (# this subshell contains the watchdog\n+        local wakeup_time=$(( ${timeout_in_seconds} + $(date +%s) ))\n+        while true; do\n+          sleep 1\n+          if [ $wakeup_time -le $(date +%s) ]; then\n+            echo \"${command_label:-\"The command '${command}'\"} (pid: $command_pid) did not finish after $timeout_in_seconds seconds.\"\n+            eval \"${on_failure}\"\n+            kill \"$command_pid\"\n+            pkill -P \"$command_pid\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEyNzIyOQ=="}, "originalCommit": {"oid": "9e5179d99ac3f1ee67388f6236a5ffd087941a94"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTY4MDE0OnYy", "diffSide": "RIGHT", "path": "flink-end-to-end-tests/test-scripts/test-runner-common.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxODowNDoxMlrOHy5ZLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxODozODo0OFrOHy6r0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEzMTE4Mw==", "bodyText": "why do we have to run sudo here? Isn't the test executed by root? \ud83e\udd14", "url": "https://github.com/apache/flink/pull/14033#discussion_r523131183", "createdAt": "2020-11-13T18:04:12Z", "author": {"login": "XComp"}, "path": "flink-end-to-end-tests/test-scripts/test-runner-common.sh", "diffHunk": "@@ -110,10 +114,40 @@ function post_test_validation {\n     fi\n }\n \n+# returns the number of allocated ports\n+function get_num_ports {\n+    # \"ps --ppid 2 -p 2 --deselect\" shows all non-kernel processes\n+    # \"ps --ppid $$\" shows all children of this bash process\n+    # \"ps -o pid= -o comm=\" removes the header line\n+    echo $(sudo netstat -tulpn | wc -l)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e5179d99ac3f1ee67388f6236a5ffd087941a94"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE1MjMzOA==", "bodyText": "afaik the tests are run by vsts user on Azure. I just want to be sure that we are catching all ports", "url": "https://github.com/apache/flink/pull/14033#discussion_r523152338", "createdAt": "2020-11-13T18:38:48Z", "author": {"login": "rmetzger"}, "path": "flink-end-to-end-tests/test-scripts/test-runner-common.sh", "diffHunk": "@@ -110,10 +114,40 @@ function post_test_validation {\n     fi\n }\n \n+# returns the number of allocated ports\n+function get_num_ports {\n+    # \"ps --ppid 2 -p 2 --deselect\" shows all non-kernel processes\n+    # \"ps --ppid $$\" shows all children of this bash process\n+    # \"ps -o pid= -o comm=\" removes the header line\n+    echo $(sudo netstat -tulpn | wc -l)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzEzMTE4Mw=="}, "originalCommit": {"oid": "9e5179d99ac3f1ee67388f6236a5ffd087941a94"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4886, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}