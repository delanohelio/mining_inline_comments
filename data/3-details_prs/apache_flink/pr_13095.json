{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MTcyMjAx", "number": 13095, "title": "[FLINK-18861][python] Support add_source() to get a DataStream for Py\u2026", "bodyText": "What is the purpose of the change\nSupport add_source() to get a DataStream for Python StreamExecutionEnvironment.\nBrief change log\n\nAdd SourceFunction interface in connectors module.\nAdd add_source() interface for StreamExecutionEnvironment.\nAdd a CustomSourceFunction interface for users to create a Java implemented SourceFunction.\n\nVerifying this change\nThis change has test case covered by test_add_source() in test_connectors.py.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)\nIf yes, how is the feature documented? (not documented)", "createdAt": "2020-08-09T16:24:30Z", "url": "https://github.com/apache/flink/pull/13095", "merged": true, "mergeCommit": {"oid": "0dad895b03ece20008b1a3194bc960c4709df878"}, "closed": true, "closedAt": "2020-08-11T01:55:07Z", "author": {"login": "shuiqiangchen"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9at8xgFqTQ2Mzk0MDMxMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9hFtdABqjM2Mzg0NjI3NjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTQwMzEx", "url": "https://github.com/apache/flink/pull/13095#pullrequestreview-463940311", "createdAt": "2020-08-10T03:19:41Z", "commit": {"oid": "f76786840b2ef177ff8eea018e075370e0505891"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMzoxOTo0MVrOG-Aa7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNDo0MjoyNVrOG-BPZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3MTc4OA==", "bodyText": "Same as the comments here, so that we don't need to introduce the CustomSourceFunction.", "url": "https://github.com/apache/flink/pull/13095#discussion_r467671788", "createdAt": "2020-08-10T03:19:41Z", "author": {"login": "hequn8128"}, "path": "flink-python/pyflink/datastream/connectors.py", "diffHunk": "@@ -0,0 +1,61 @@\n+################################################################################\n+#  Licensed to the Apache Software Foundation (ASF) under one\n+#  or more contributor license agreements.  See the NOTICE file\n+#  distributed with this work for additional information\n+#  regarding copyright ownership.  The ASF licenses this file\n+#  to you under the Apache License, Version 2.0 (the\n+#  \"License\"); you may not use this file except in compliance\n+#  with the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+# limitations under the License.\n+################################################################################\n+from pyflink.java_gateway import get_gateway\n+\n+\n+class SourceFunction(object):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f76786840b2ef177ff8eea018e075370e0505891"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3MzAwOQ==", "bodyText": "remove the unnecessary changes.", "url": "https://github.com/apache/flink/pull/13095#discussion_r467673009", "createdAt": "2020-08-10T03:27:39Z", "author": {"login": "hequn8128"}, "path": "flink-python/pyflink/datastream/stream_execution_environment.py", "diffHunk": "@@ -17,7 +17,6 @@\n ################################################################################\n import os\n import tempfile\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f76786840b2ef177ff8eea018e075370e0505891"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3NTAzMA==", "bodyText": "If the type_info is None, we should call _j_stream_execution_environment.addSource(SourceFunction<OUT> function, String sourceName)", "url": "https://github.com/apache/flink/pull/13095#discussion_r467675030", "createdAt": "2020-08-10T03:41:10Z", "author": {"login": "hequn8128"}, "path": "flink-python/pyflink/datastream/stream_execution_environment.py", "diffHunk": "@@ -447,6 +447,23 @@ def get_execution_environment():\n             .StreamExecutionEnvironment.getExecutionEnvironment()\n         return StreamExecutionEnvironment(j_stream_exection_environment)\n \n+    def add_source(self, source_func: SourceFunction, source_name: str = 'Custom Source',\n+                   type_info: TypeInformation = None) -> 'DataStream':\n+        \"\"\"\n+        Adds a data source to the streaming topology.\n+\n+        :param source_func: the user defined function.\n+        :param source_name: name of the data source. Optional.\n+        :param type_info: type of the returned stream. Optional.\n+        :return: the data stream constructed.\n+        \"\"\"\n+        j_type_info = type_info.get_java_type_info() if type_info is not None else None\n+        j_data_stream = self._j_stream_execution_environment.addSource(source_func", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f76786840b2ef177ff8eea018e075370e0505891"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3NTY0MA==", "bodyText": "A custom source function for testing adds a custom source in Python StreamExecutionEnvironment.", "url": "https://github.com/apache/flink/pull/13095#discussion_r467675640", "createdAt": "2020-08-10T03:45:18Z", "author": {"login": "hequn8128"}, "path": "flink-python/src/test/java/org/apache/flink/python/util/MyCustomSourceFunction.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.python.util;\n+\n+import org.apache.flink.streaming.api.functions.source.SourceFunction;\n+import org.apache.flink.types.Row;\n+\n+import java.util.Random;\n+\n+/**\n+ * A custom source function to for testing add a custom source in Python StreamExecutionEnvironment.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f76786840b2ef177ff8eea018e075370e0505891"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY4NTIyMw==", "bodyText": "Remove the empty line.", "url": "https://github.com/apache/flink/pull/13095#discussion_r467685223", "createdAt": "2020-08-10T04:42:25Z", "author": {"login": "hequn8128"}, "path": "flink-python/src/test/java/org/apache/flink/python/util/MyCustomSourceFunction.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.python.util;\n+\n+import org.apache.flink.streaming.api.functions.source.SourceFunction;\n+import org.apache.flink.types.Row;\n+\n+import java.util.Random;\n+\n+/**\n+ * A custom source function to for testing add a custom source in Python StreamExecutionEnvironment.\n+ */\n+public class MyCustomSourceFunction implements SourceFunction<Row> {\n+\n+\tprivate static final String[] NAMES = {\"Bob\", \"Marry\", \"Henry\", \"Mike\", \"Ted\", \"Jack\"};\n+\n+\tprivate int recordCount = 50;\n+\n+\tpublic MyCustomSourceFunction() {\n+\t}\n+\n+\tpublic MyCustomSourceFunction(int recordCount) {\n+\t\tthis.recordCount = recordCount;\n+\t}\n+\n+\tpublic void run(SourceContext sourceContext) {\n+\t\tRandom random = new Random();\n+\t\tfor (int i = 0; i < recordCount; i++) {\n+\t\t\tRow row = Row.of(random.nextInt(1000), NAMES[random.nextInt(NAMES.length)], random.nextDouble());\n+\t\t\tsourceContext.collect(row);\n+\t\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f76786840b2ef177ff8eea018e075370e0505891"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "116a22008d334d085c6861c8d325c010cbb11f04", "author": {"user": {"login": "shuiqiangchen", "name": "Shuiqiang Chen"}}, "url": "https://github.com/apache/flink/commit/116a22008d334d085c6861c8d325c010cbb11f04", "committedDate": "2020-08-10T11:53:06Z", "message": "[FLINK-18861][python] Support add_source() to get a DataStream for Python StreamExecutionEnvironment."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "055b4468aecff16d562740c5e2c81504ca15f37e", "author": {"user": {"login": "shuiqiangchen", "name": "Shuiqiang Chen"}}, "url": "https://github.com/apache/flink/commit/055b4468aecff16d562740c5e2c81504ca15f37e", "committedDate": "2020-08-10T11:53:06Z", "message": "tmp commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2395efe294a7eed7dae338ca7958afa597669be", "author": {"user": {"login": "shuiqiangchen", "name": "Shuiqiang Chen"}}, "url": "https://github.com/apache/flink/commit/b2395efe294a7eed7dae338ca7958afa597669be", "committedDate": "2020-08-10T12:08:10Z", "message": "- rebase master branch"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f76786840b2ef177ff8eea018e075370e0505891", "author": {"user": {"login": "shuiqiangchen", "name": "Shuiqiang Chen"}}, "url": "https://github.com/apache/flink/commit/f76786840b2ef177ff8eea018e075370e0505891", "committedDate": "2020-08-09T16:19:53Z", "message": "[FLINK-18861][python] Support add_source() to get a DataStream for Python StreamExecutionEnvironment."}, "afterCommit": {"oid": "b2395efe294a7eed7dae338ca7958afa597669be", "author": {"user": {"login": "shuiqiangchen", "name": "Shuiqiang Chen"}}, "url": "https://github.com/apache/flink/commit/b2395efe294a7eed7dae338ca7958afa597669be", "committedDate": "2020-08-10T12:08:10Z", "message": "- rebase master branch"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2830, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}