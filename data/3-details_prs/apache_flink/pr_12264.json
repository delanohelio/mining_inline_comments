{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNjA2MzQy", "number": 12264, "title": "[FLINK-17558][netty] Release partitions asynchronously", "bodyText": "With this PR the local release of partitions in the NettyShuffleEnvironment is executed asynchronously. This primarily includes the deletion of files. We have seen instances where this operation was taking a long time, blocking the TaskExecutor main thread.\nFor this we are re-using the existing ioExecutor from the TaskExecutor and also pass it into the NettyShuffleEnvironment. This executor was so far only used for handling log file requests.\nThe number of threads of this executor was increased from 1 -> 2.\nGiven that at most 1 thread should be busy handling log file requests (?), we should at least 1 thread processing the partition releases, which should be sufficient as we so far only used 1 thread as well (a busy one at that).\nWe still want these partitions to be cleaned up in a timely fashion; not for correctness, but to reduce disk usage.\nThere is a new (hidden) option for increasing this thread count, but ideally users should never have to use it.\nThere are ultimately 3 places where we could introduce the asynchronous behavior; in the TaskExecutor, PartitionTracker or ShuffleEnvironment.\nDoing this in the TaskExecutor would imply doing all operations on the PartitionTracker with the ioExecutor, since the tracker requires single-threaded access. This would add complexity where we want it the least, and could easily lead to bugs since we start switching back and forth between executors.\nThe PartitionTracker is a good candidate; it can selectively use the executor for the release call into the ShuffleEnvironment, and would guard the TaskExecutor against such blocking calls regardless of ShuffleEnvironment implementations. So far the tracker was not aware of any asynchronous stuff however, and there may be value in keeping it that way.\nFor this PR I opted for the ShuffleEnvironment. It seems reasonable that the local release should be a non-blocking operation; any ShuffleEnvironment that communicates to the outside will necessarily have to do some non-blocking operations, and being provided an Executor through the ShuffleEnvironmentContext may make this easier, although it has the downside that the ShuffleEnvironment may over-use it and potentially deny other other usages of the executor. On the flip-side, this implies that we only use the executor when necessary; for a ShuffleEnvironment that implements the local release in a non-blocking fashion the safeguard in the PartitionTracker would just be a waste of resources.\nOne thing left to do is adding a test to ensure a blocking partition release is not blocking the TaskExecutor main thread.", "createdAt": "2020-05-20T08:53:46Z", "url": "https://github.com/apache/flink/pull/12264", "merged": true, "mergeCommit": {"oid": "44fba5fe8e4be383795211ab3d3f6259331e68f4"}, "closed": true, "closedAt": "2020-05-28T11:57:34Z", "author": {"login": "zentol"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjFwl9ABqjMzNTU1OTUzNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclskojgBqjMzODI0MzY0Njk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "19c5f57b94cc56b70002031618c32d9e6f68effb", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/19c5f57b94cc56b70002031618c32d9e6f68effb", "committedDate": "2020-05-19T14:58:22Z", "message": "[FLINK-17668][netty] Release partitions asynchronously"}, "afterCommit": {"oid": "9dbaf3094c0942b96a01060aba9d4ffbad9d1857", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/9dbaf3094c0942b96a01060aba9d4ffbad9d1857", "committedDate": "2020-05-20T09:35:48Z", "message": "[FLINK-17558][netty] Release partitions asynchronously"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb313e40f5a72dbf20cd0a8b48267063fd4f00af", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/bb313e40f5a72dbf20cd0a8b48267063fd4f00af", "committedDate": "2020-05-20T13:33:54Z", "message": "test"}, "afterCommit": {"oid": "eafbd98c812227cb7d9ce7158de1a23309855509", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/eafbd98c812227cb7d9ce7158de1a23309855509", "committedDate": "2020-05-20T13:40:38Z", "message": "test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzY0Mzk0", "url": "https://github.com/apache/flink/pull/12264#pullrequestreview-415364394", "createdAt": "2020-05-20T13:58:41Z", "commit": {"oid": "eafbd98c812227cb7d9ce7158de1a23309855509"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1ODo0MVrOGYNI4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoxNDozN1rOGYN6uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzNDI3Mg==", "bodyText": "We might be able to unify this configuration option with ClusterOptions.CLUSTER_IO_EXECUTOR_POOL_SIZE.", "url": "https://github.com/apache/flink/pull/12264#discussion_r428034272", "createdAt": "2020-05-20T13:58:41Z", "author": {"login": "tillrohrmann"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/TaskManagerOptions.java", "diffHunk": "@@ -490,6 +490,13 @@\n \t\t\t\t+ \" size will be used. The exact size of JVM Overhead can be explicitly specified by setting the min/max\"\n \t\t\t\t+ \" size to the same value.\");\n \n+\t@Documentation.ExcludeFromDocumentation(\"This option just serves as a last-ditch escape hatch.\")\n+\tpublic static final ConfigOption<Integer> NUM_IO_THREADS =\n+\t\tkey(\"taskmanager.io.threads.num\")\n+\t\t\t.intType()\n+\t\t\t.defaultValue(2)\n+\t\t\t.withDescription(\"The number of threads to use for non-critical IO operations.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eafbd98c812227cb7d9ce7158de1a23309855509"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzOTkzNQ==", "bodyText": "Can the ioExecutor also replace the taskIOExecutor?", "url": "https://github.com/apache/flink/pull/12264#discussion_r428039935", "createdAt": "2020-05-20T14:05:39Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/taskexecutor/TaskManagerServices.java", "diffHunk": "@@ -265,10 +265,15 @@ public static TaskManagerServices fromConfiguration(\n \t\t// start the I/O manager, it will create some temp directories.\n \t\tfinal IOManager ioManager = new IOManagerAsync(taskManagerServicesConfiguration.getTmpDirPaths());\n \n+\t\tfinal ExecutorService ioExecutor = Executors.newFixedThreadPool(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eafbd98c812227cb7d9ce7158de1a23309855509"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0MjAxMA==", "bodyText": "I guess a OneShotLatch would also work here if the test threads call the trigger on it.", "url": "https://github.com/apache/flink/pull/12264#discussion_r428042010", "createdAt": "2020-05-20T14:08:19Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/NettyShuffleEnvironmentTest.java", "diffHunk": "@@ -100,6 +105,27 @@ public void testRegisterTaskWithInsufficientBuffers() throws Exception {\n \t\ttestRegisterTaskWithLimitedBuffers(bufferCount);\n \t}\n \n+\t@Test\n+\tpublic void testSlowIODoesNotBlockRelease() throws Exception {\n+\t\tBlockerSync sync = new BlockerSync();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eafbd98c812227cb7d9ce7158de1a23309855509"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0NzAzNQ==", "bodyText": "I would suggest to also shut this executor service down at the end of the test. It might be necessary to unblock the release operation for this.", "url": "https://github.com/apache/flink/pull/12264#discussion_r428047035", "createdAt": "2020-05-20T14:14:37Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/taskexecutor/TaskExecutorPartitionLifecycleTest.java", "diffHunk": "@@ -280,7 +273,65 @@ public void testClusterPartitionRelease() throws Exception {\n \t\t);\n \t}\n \n-\tprivate <C> void testPartitionRelease(PartitionTrackerSetup<C> partitionTrackerSetup, TestAction<C> testAction) throws Exception {\n+\t@Test\n+\tpublic void testBlockingLocalPartitionReleaseDoesNotBlockTaskExecutor() throws Exception {\n+\t\tBlockerSync sync = new BlockerSync();\n+\t\tResultPartitionManager blockingResultPartitionManager = new ResultPartitionManager() {\n+\t\t\t@Override\n+\t\t\tpublic void releasePartition(ResultPartitionID partitionId, Throwable cause) {\n+\t\t\t\tsync.blockNonInterruptible();\n+\t\t\t\tsuper.releasePartition(partitionId, cause);\n+\t\t\t}\n+\t\t};\n+\n+\t\tNettyShuffleEnvironment shuffleEnvironment = new NettyShuffleEnvironmentBuilder()\n+\t\t\t.setResultPartitionManager(blockingResultPartitionManager)\n+\t\t\t.setIoExecutor(java.util.concurrent.Executors.newFixedThreadPool(1))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eafbd98c812227cb7d9ce7158de1a23309855509"}, "originalPosition": 110}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MjY0NTAy", "url": "https://github.com/apache/flink/pull/12264#pullrequestreview-418264502", "createdAt": "2020-05-26T12:51:14Z", "commit": {"oid": "f5cc207a54d0adfd24c548c544f34a9ca13d145a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo1MToxNFrOGacwAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo1MjozN1rOGaczTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4NzIwMA==", "bodyText": "I would suggest to use ExecutorUtils.gracefulShutdown.", "url": "https://github.com/apache/flink/pull/12264#discussion_r430387200", "createdAt": "2020-05-26T12:51:14Z", "author": {"login": "tillrohrmann"}, "path": "flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/executor/TestExecutorServiceResource.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.testutils.executor;\n+\n+import org.junit.rules.ExternalResource;\n+\n+import java.util.concurrent.ExecutorService;\n+import java.util.function.Supplier;\n+\n+/**\n+ * Resource which starts an {@link ExecutorService} for testing purposes.\n+ */\n+public class TestExecutorServiceResource extends ExternalResource {\n+\n+\tprivate final Supplier<ExecutorService> serviceFactory;\n+\n+\tprivate ExecutorService executorService;\n+\n+\tpublic TestExecutorServiceResource(Supplier<ExecutorService> serviceFactory) {\n+\t\tthis.serviceFactory = serviceFactory;\n+\t}\n+\n+\t@Override\n+\tprotected void before() throws Throwable {\n+\t\texecutorService = serviceFactory.get();\n+\t}\n+\n+\tpublic ExecutorService getExecutorService() {\n+\t\treturn executorService;\n+\t}\n+\n+\t@Override\n+\tprotected void after() {\n+\t\tif (executorService != null) {\n+\t\t\texecutorService.shutdown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5cc207a54d0adfd24c548c544f34a9ca13d145a"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4ODA0Ng==", "bodyText": "This class seems to duplicate TestingScheduledExecutor.", "url": "https://github.com/apache/flink/pull/12264#discussion_r430388046", "createdAt": "2020-05-26T12:52:37Z", "author": {"login": "tillrohrmann"}, "path": "flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/executor/TestExecutorServiceResource.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.testutils.executor;\n+\n+import org.junit.rules.ExternalResource;\n+\n+import java.util.concurrent.ExecutorService;\n+import java.util.function.Supplier;\n+\n+/**\n+ * Resource which starts an {@link ExecutorService} for testing purposes.\n+ */\n+public class TestExecutorServiceResource extends ExternalResource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5cc207a54d0adfd24c548c544f34a9ca13d145a"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTI1MjI1", "url": "https://github.com/apache/flink/pull/12264#pullrequestreview-419125225", "createdAt": "2020-05-27T12:06:46Z", "commit": {"oid": "084e28079e239e9485c36f843348323c9a81ad6a"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjowNjo0NlrOGbGLyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjoxMToxMlrOGbGU6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2NjA1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfinal int numIoThreads = ClusterEntrypointUtils.getPoolSize(configuration) * 4;\n          \n          \n            \n            \t\tfinal int numIoThreads = ClusterEntrypointUtils.getPoolSize(configuration);\n          \n      \n    \n    \n  \n\nI will update getPoolSize to return the new default value of 4 * cores as part of changing the type of the thread pool on the JM side.", "url": "https://github.com/apache/flink/pull/12264#discussion_r431066056", "createdAt": "2020-05-27T12:06:46Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/taskexecutor/TaskManagerServicesConfiguration.java", "diffHunk": "@@ -270,7 +271,8 @@ public static TaskManagerServicesConfiguration fromConfiguration(\n \n \t\tfinal String[] alwaysParentFirstLoaderPatterns = CoreOptions.getParentFirstLoaderPatterns(configuration);\n \n-\t\tfinal int numIoThreads = configuration.get(TaskManagerOptions.NUM_IO_THREADS);\n+\t\t// multiply core-count to be on the safer side, since we used a pool with size=64 in the past\n+\t\tfinal int numIoThreads = ClusterEntrypointUtils.getPoolSize(configuration) * 4;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "084e28079e239e9485c36f843348323c9a81ad6a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2NjczMw==", "bodyText": "The name executorService could have been kept.", "url": "https://github.com/apache/flink/pull/12264#discussion_r431066733", "createdAt": "2020-05-27T12:08:02Z", "author": {"login": "tillrohrmann"}, "path": "flink-test-utils-parent/flink-test-utils-junit/src/main/java/org/apache/flink/testutils/executor/TestExecutorResource.java", "diffHunk": "@@ -19,35 +19,37 @@\n \n import org.junit.rules.ExternalResource;\n \n+import java.util.concurrent.Executor;\n import java.util.concurrent.ExecutorService;\n import java.util.function.Supplier;\n \n /**\n- * Resource which starts an {@link ExecutorService} for testing purposes.\n+ * Resource which starts/stops an {@link ExecutorService} for testing purposes.\n  */\n-public class TestExecutorServiceResource extends ExternalResource {\n+public class TestExecutorResource extends ExternalResource {\n \n \tprivate final Supplier<ExecutorService> serviceFactory;\n \n-\tprivate ExecutorService executorService;\n+\tprivate ExecutorService executor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "084e28079e239e9485c36f843348323c9a81ad6a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2ODM5NQ==", "bodyText": "This could be moved into the fromConfiguration method. Given that the TaskManagerServices is responsible for managing the created ExecutorService, I think it is fine to move the creation into the fromConfiguration method.", "url": "https://github.com/apache/flink/pull/12264#discussion_r431068395", "createdAt": "2020-05-27T12:11:12Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/taskexecutor/TaskManagerRunner.java", "diffHunk": "@@ -366,11 +367,15 @@ public static TaskExecutor startTaskManager(\n \t\t\tresourceID,\n \t\t\ttaskManagerServicesConfiguration.getSystemResourceMetricsProbingInterval());\n \n+\t\tfinal ExecutorService ioExecutor = Executors.newCachedThreadPool(\n+\t\t\ttaskManagerServicesConfiguration.getNumIoThreads(),\n+\t\t\tnew ExecutorThreadFactory(\"flink-taskexecutor-io\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "084e28079e239e9485c36f843348323c9a81ad6a"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42ae0c981090777aef671df310ec77eadbed5608", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/42ae0c981090777aef671df310ec77eadbed5608", "committedDate": "2020-05-27T19:23:16Z", "message": "[hotfix][tests] Remove unused TestingScheduledExecutor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2f7396d4ddf39a1a4dedf257fb4156ae89fd1ed", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/b2f7396d4ddf39a1a4dedf257fb4156ae89fd1ed", "committedDate": "2020-05-27T19:23:29Z", "message": "[hotfix][tests] Shutdown TaskmanagerServices"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59111304bfc04b61f87daae0fd5c3f46fc3ef254", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/59111304bfc04b61f87daae0fd5c3f46fc3ef254", "committedDate": "2020-05-27T13:01:11Z", "message": "revert pool size multiplication"}, "afterCommit": {"oid": "8cf00b9f6fd8b76256883eedbdb8e79dea3c35dc", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/8cf00b9f6fd8b76256883eedbdb8e79dea3c35dc", "committedDate": "2020-05-27T19:23:41Z", "message": "[FLINK-17558][netty] Release partitions asynchronously"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f174f4d49ca01b532d30e5dd7b11b6e28ebd3de6", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/f174f4d49ca01b532d30e5dd7b11b6e28ebd3de6", "committedDate": "2020-05-28T11:40:02Z", "message": "[FLINK-17558][runtime] Add Executors#newCachedThreadPool"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d538076ce98ffcdae3092366f413009e8b611c1f", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/d538076ce98ffcdae3092366f413009e8b611c1f", "committedDate": "2020-05-28T11:40:02Z", "message": "[FLINK-17558][tests] Simplify partition tracker setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "001b5c3e983799e49ef6822414ea6315dbbb9092", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/001b5c3e983799e49ef6822414ea6315dbbb9092", "committedDate": "2020-05-28T11:40:02Z", "message": "[FLINK-17558][tests] Extract ShuffleEnvironment/PartitionTracker setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5df317832afdf91eadf36967ac5d0ed6e9f4b3fc", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/5df317832afdf91eadf36967ac5d0ed6e9f4b3fc", "committedDate": "2020-05-28T11:40:02Z", "message": "[FLINK-17558][netty] Release partitions asynchronously"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5dcd45e890a076e0a66d4e6e24fdab192e3a724", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/c5dcd45e890a076e0a66d4e6e24fdab192e3a724", "committedDate": "2020-05-28T07:25:25Z", "message": "use LinkedBlockingQueue"}, "afterCommit": {"oid": "5df317832afdf91eadf36967ac5d0ed6e9f4b3fc", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/5df317832afdf91eadf36967ac5d0ed6e9f4b3fc", "committedDate": "2020-05-28T11:40:02Z", "message": "[FLINK-17558][netty] Release partitions asynchronously"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4667, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}