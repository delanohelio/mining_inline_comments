{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MDczMzM2", "number": 11853, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo0ODoyNFrOD1z-JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1MDoyOFrOD10B9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzUyNjEzOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/filesystem/FileSystemTableFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo0ODoyNFrOGLbTgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo0ODoyNFrOGLbTgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYzNDg4Mw==", "bodyText": "How about this \uff1f\"The option to enable shuffle data by dynamic partition fields in sink phase, this can greatly reduce the number of file for filesystem sink but may lead data skew, the default value is disabled.\"", "url": "https://github.com/apache/flink/pull/11853#discussion_r414634883", "createdAt": "2020-04-24T14:48:24Z", "author": {"login": "leonardBang"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/filesystem/FileSystemTableFactory.java", "diffHunk": "@@ -71,6 +71,12 @@\n \t\t\t.withDescription(\"The default partition name in case the dynamic partition\" +\n \t\t\t\t\t\" column value is null/empty string\");\n \n+\tpublic static final ConfigOption<Boolean> SINK_SHUFFLE_BY_PARTITION = key(\"sink.shuffle-by-partition.enable\")\n+\t\t\t.booleanType()\n+\t\t\t.defaultValue(false)\n+\t\t\t.withDescription(\"Before sink, can shuffle by dynamic partition fields to sink parallelisms,\" +\n+\t\t\t\t\t\" this can greatly reduce the number of files. But will lead to data skew too.\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258a96c64c409102c679382b054d17602df65953"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzUzNTg4OnYy", "diffSide": "LEFT", "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/physical/stream/StreamExecSinkRule.scala", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1MDoyOFrOGLbZbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNDozNjozN1rOGL-mRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYzNjM5Ng==", "bodyText": "DataStreamTableSink is a special Type, this change will make all stream sink nodes have chance to use the shuffle enable config?", "url": "https://github.com/apache/flink/pull/11853#discussion_r414636396", "createdAt": "2020-04-24T14:50:28Z", "author": {"login": "leonardBang"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/physical/stream/StreamExecSinkRule.scala", "diffHunk": "@@ -53,15 +53,20 @@ class StreamExecSinkRule extends ConverterRule(\n             val dynamicPartIndices =\n               dynamicPartFields.map(partitionSink.getTableSchema.getFieldNames.indexOf(_))\n \n-            if (partitionSink.configurePartitionGrouping(false)) {\n-              throw new TableException(\"Partition grouping in stream mode is not supported yet!\")\n-            }\n+            val shuffleEnable = sinkNode\n+                .catalogTable\n+                .getProperties\n+                .get(FileSystemTableFactory.SINK_SHUFFLE_BY_PARTITION.key())\n \n-            if (!partitionSink.isInstanceOf[DataStreamTableSink[_]]) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258a96c64c409102c679382b054d17602df65953"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5MzU0Nw==", "bodyText": "See above case partitionSink: PartitionableTableSink, it should never be a DataStreamTableSink.", "url": "https://github.com/apache/flink/pull/11853#discussion_r415193547", "createdAt": "2020-04-26T02:26:13Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/physical/stream/StreamExecSinkRule.scala", "diffHunk": "@@ -53,15 +53,20 @@ class StreamExecSinkRule extends ConverterRule(\n             val dynamicPartIndices =\n               dynamicPartFields.map(partitionSink.getTableSchema.getFieldNames.indexOf(_))\n \n-            if (partitionSink.configurePartitionGrouping(false)) {\n-              throw new TableException(\"Partition grouping in stream mode is not supported yet!\")\n-            }\n+            val shuffleEnable = sinkNode\n+                .catalogTable\n+                .getProperties\n+                .get(FileSystemTableFactory.SINK_SHUFFLE_BY_PARTITION.key())\n \n-            if (!partitionSink.isInstanceOf[DataStreamTableSink[_]]) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYzNjM5Ng=="}, "originalCommit": {"oid": "258a96c64c409102c679382b054d17602df65953"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5MzYyMw==", "bodyText": "DataStreamTableSink is not a user interface, it is a internal util class.", "url": "https://github.com/apache/flink/pull/11853#discussion_r415193623", "createdAt": "2020-04-26T02:26:37Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/physical/stream/StreamExecSinkRule.scala", "diffHunk": "@@ -53,15 +53,20 @@ class StreamExecSinkRule extends ConverterRule(\n             val dynamicPartIndices =\n               dynamicPartFields.map(partitionSink.getTableSchema.getFieldNames.indexOf(_))\n \n-            if (partitionSink.configurePartitionGrouping(false)) {\n-              throw new TableException(\"Partition grouping in stream mode is not supported yet!\")\n-            }\n+            val shuffleEnable = sinkNode\n+                .catalogTable\n+                .getProperties\n+                .get(FileSystemTableFactory.SINK_SHUFFLE_BY_PARTITION.key())\n \n-            if (!partitionSink.isInstanceOf[DataStreamTableSink[_]]) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYzNjM5Ng=="}, "originalCommit": {"oid": "258a96c64c409102c679382b054d17602df65953"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIxMzEyNw==", "bodyText": "I got your point, it's redundant here,  because DataStreamTableSink only extends TableSink from now.", "url": "https://github.com/apache/flink/pull/11853#discussion_r415213127", "createdAt": "2020-04-26T04:36:37Z", "author": {"login": "leonardBang"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/physical/stream/StreamExecSinkRule.scala", "diffHunk": "@@ -53,15 +53,20 @@ class StreamExecSinkRule extends ConverterRule(\n             val dynamicPartIndices =\n               dynamicPartFields.map(partitionSink.getTableSchema.getFieldNames.indexOf(_))\n \n-            if (partitionSink.configurePartitionGrouping(false)) {\n-              throw new TableException(\"Partition grouping in stream mode is not supported yet!\")\n-            }\n+            val shuffleEnable = sinkNode\n+                .catalogTable\n+                .getProperties\n+                .get(FileSystemTableFactory.SINK_SHUFFLE_BY_PARTITION.key())\n \n-            if (!partitionSink.isInstanceOf[DataStreamTableSink[_]]) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYzNjM5Ng=="}, "originalCommit": {"oid": "258a96c64c409102c679382b054d17602df65953"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1561, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}