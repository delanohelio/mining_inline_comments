{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMjM4MjA2", "number": 13472, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDoxODo1MFrOEr5WQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDoxOToyOFrOEr5W1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDYzODExOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDoxODo1MVrOHe6rsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMTozMDoxMFrOHfF5UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4MDc4NA==", "bodyText": "I think this will conflict if a field name is \"row_0\".", "url": "https://github.com/apache/flink/pull/13472#discussion_r502180784", "createdAt": "2020-10-09T04:18:51Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverter.java", "diffHunk": "@@ -297,10 +297,10 @@ private static DataType convertToDataType(Schema schema) {\n \t * @return Avro's {@link Schema} matching this logical type.\n \t */\n \tpublic static Schema convertToSchema(LogicalType logicalType) {\n-\t\treturn convertToSchema(logicalType, 0);\n+\t\treturn convertToSchema(logicalType, \"row_0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e70b29f47767a4221cc15888d469e1e9d90d22e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM2NDQ5Nw==", "bodyText": "Yeah, I think we can use \"row_\" append the current timestamp as default row name. Do you have any good idea?", "url": "https://github.com/apache/flink/pull/13472#discussion_r502364497", "createdAt": "2020-10-09T11:30:10Z", "author": {"login": "V1ncentzzZ"}, "path": "flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverter.java", "diffHunk": "@@ -297,10 +297,10 @@ private static DataType convertToDataType(Schema schema) {\n \t * @return Avro's {@link Schema} matching this logical type.\n \t */\n \tpublic static Schema convertToSchema(LogicalType logicalType) {\n-\t\treturn convertToSchema(logicalType, 0);\n+\t\treturn convertToSchema(logicalType, \"row_0\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4MDc4NA=="}, "originalCommit": {"oid": "3e70b29f47767a4221cc15888d469e1e9d90d22e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NDYzOTU4OnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverter.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDoxOToyOFrOHe6sbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwMzoxMDowNVrOHfctwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4MDk3NA==", "bodyText": "I think this doesn't work. Because field names may conflict. We may need to concat the parent row name and the field name as the child name.", "url": "https://github.com/apache/flink/pull/13472#discussion_r502180974", "createdAt": "2020-10-09T04:19:28Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverter.java", "diffHunk": "@@ -359,13 +359,13 @@ public static Schema convertToSchema(LogicalType logicalType, int rowTypeCounter\n \t\t\t\t// we have to make sure the record name is different in a Schema\n \t\t\t\tSchemaBuilder.FieldAssembler<Schema> builder = SchemaBuilder\n \t\t\t\t\t.builder()\n-\t\t\t\t\t.record(\"row_\" + rowTypeCounter)\n+\t\t\t\t\t.record(rowName)\n \t\t\t\t\t.fields();\n-\t\t\t\trowTypeCounter++;\n \t\t\t\tfor (int i = 0; i < rowType.getFieldCount(); i++) {\n+\t\t\t\t\tString fieldName = fieldNames.get(i);\n \t\t\t\t\tbuilder = builder\n-\t\t\t\t\t\t.name(fieldNames.get(i))\n-\t\t\t\t\t\t.type(convertToSchema(rowType.getTypeAt(i), rowTypeCounter))\n+\t\t\t\t\t\t.name(fieldName)\n+\t\t\t\t\t\t.type(convertToSchema(rowType.getTypeAt(i), fieldName))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e70b29f47767a4221cc15888d469e1e9d90d22e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM2NDgxNw==", "bodyText": "It works fine after test when the same field name in each different row type. Because fields in different namespaces.", "url": "https://github.com/apache/flink/pull/13472#discussion_r502364817", "createdAt": "2020-10-09T11:30:53Z", "author": {"login": "V1ncentzzZ"}, "path": "flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverter.java", "diffHunk": "@@ -359,13 +359,13 @@ public static Schema convertToSchema(LogicalType logicalType, int rowTypeCounter\n \t\t\t\t// we have to make sure the record name is different in a Schema\n \t\t\t\tSchemaBuilder.FieldAssembler<Schema> builder = SchemaBuilder\n \t\t\t\t\t.builder()\n-\t\t\t\t\t.record(\"row_\" + rowTypeCounter)\n+\t\t\t\t\t.record(rowName)\n \t\t\t\t\t.fields();\n-\t\t\t\trowTypeCounter++;\n \t\t\t\tfor (int i = 0; i < rowType.getFieldCount(); i++) {\n+\t\t\t\t\tString fieldName = fieldNames.get(i);\n \t\t\t\t\tbuilder = builder\n-\t\t\t\t\t\t.name(fieldNames.get(i))\n-\t\t\t\t\t\t.type(convertToSchema(rowType.getTypeAt(i), rowTypeCounter))\n+\t\t\t\t\t\t.name(fieldName)\n+\t\t\t\t\t\t.type(convertToSchema(rowType.getTypeAt(i), fieldName))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4MDk3NA=="}, "originalCommit": {"oid": "3e70b29f47767a4221cc15888d469e1e9d90d22e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjczNDY0Ng==", "bodyText": "However, if the parant field name is the same to the child name, there still will be an avro exception. For example, the following example is still failed:\n\t@Test\n\tpublic void test() {\n\t\tRowType rowType = (RowType) TableSchema.builder()\n\t\t\t.field(\"row1\", DataTypes.ROW(DataTypes.FIELD(\"a\", DataTypes.STRING())))\n\t\t\t.field(\"row2\", DataTypes.ROW(DataTypes.FIELD(\"b\", DataTypes.STRING())))\n\t\t\t.field(\"row3\", DataTypes.ROW(\n\t\t\t\tDataTypes.FIELD(\"row3\", DataTypes.ROW(DataTypes.FIELD(\"c\", DataTypes.STRING())))))\n\t\t\t.build().toRowDataType().getLogicalType();\n\t\tSchema schema = AvroSchemaConverter.convertToSchema(rowType);\n\t\tSystem.out.println(schema.toString(true));\n\t}\nThis can be fixed by concating parant and child name:\nString fieldName = rowName + \"_\" + fieldNames.get(i);", "url": "https://github.com/apache/flink/pull/13472#discussion_r502734646", "createdAt": "2020-10-10T02:26:15Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverter.java", "diffHunk": "@@ -359,13 +359,13 @@ public static Schema convertToSchema(LogicalType logicalType, int rowTypeCounter\n \t\t\t\t// we have to make sure the record name is different in a Schema\n \t\t\t\tSchemaBuilder.FieldAssembler<Schema> builder = SchemaBuilder\n \t\t\t\t\t.builder()\n-\t\t\t\t\t.record(\"row_\" + rowTypeCounter)\n+\t\t\t\t\t.record(rowName)\n \t\t\t\t\t.fields();\n-\t\t\t\trowTypeCounter++;\n \t\t\t\tfor (int i = 0; i < rowType.getFieldCount(); i++) {\n+\t\t\t\t\tString fieldName = fieldNames.get(i);\n \t\t\t\t\tbuilder = builder\n-\t\t\t\t\t\t.name(fieldNames.get(i))\n-\t\t\t\t\t\t.type(convertToSchema(rowType.getTypeAt(i), rowTypeCounter))\n+\t\t\t\t\t\t.name(fieldName)\n+\t\t\t\t\t\t.type(convertToSchema(rowType.getTypeAt(i), fieldName))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4MDk3NA=="}, "originalCommit": {"oid": "3e70b29f47767a4221cc15888d469e1e9d90d22e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjczODM2OA==", "bodyText": "Okay, I will be update code to fix this problem by concating parant and child name. At the same time, i will update the test case also. Thanks!", "url": "https://github.com/apache/flink/pull/13472#discussion_r502738368", "createdAt": "2020-10-10T03:10:05Z", "author": {"login": "V1ncentzzZ"}, "path": "flink-formats/flink-avro/src/main/java/org/apache/flink/formats/avro/typeutils/AvroSchemaConverter.java", "diffHunk": "@@ -359,13 +359,13 @@ public static Schema convertToSchema(LogicalType logicalType, int rowTypeCounter\n \t\t\t\t// we have to make sure the record name is different in a Schema\n \t\t\t\tSchemaBuilder.FieldAssembler<Schema> builder = SchemaBuilder\n \t\t\t\t\t.builder()\n-\t\t\t\t\t.record(\"row_\" + rowTypeCounter)\n+\t\t\t\t\t.record(rowName)\n \t\t\t\t\t.fields();\n-\t\t\t\trowTypeCounter++;\n \t\t\t\tfor (int i = 0; i < rowType.getFieldCount(); i++) {\n+\t\t\t\t\tString fieldName = fieldNames.get(i);\n \t\t\t\t\tbuilder = builder\n-\t\t\t\t\t\t.name(fieldNames.get(i))\n-\t\t\t\t\t\t.type(convertToSchema(rowType.getTypeAt(i), rowTypeCounter))\n+\t\t\t\t\t\t.name(fieldName)\n+\t\t\t\t\t\t.type(convertToSchema(rowType.getTypeAt(i), fieldName))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4MDk3NA=="}, "originalCommit": {"oid": "3e70b29f47767a4221cc15888d469e1e9d90d22e"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 177, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}