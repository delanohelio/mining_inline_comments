{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NzgxOTAw", "number": 12101, "title": "[FLINK-17350][task] StreamTask should always fail immediately on failures in synchronous part of a checkpoint", "bodyText": "https://issues.apache.org/jira/browse/FLINK-17350\nAs described in the ticket StreamTask should always fail immediately on failures in synchronous part of a checkpoint\nVerifying this change\nThis is covered by slightly modified existing case in StreamTaskTest\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-05-12T14:57:57Z", "url": "https://github.com/apache/flink/pull/12101", "merged": true, "mergeCommit": {"oid": "8ea458137e2cac4ca2d5525b57c1834e4115327f"}, "closed": true, "closedAt": "2020-05-16T08:04:19Z", "author": {"login": "pnowojski"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcglnWyABqjMzMjc5Mjk0NzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchyA0kABqjMzNDMzMzk3NTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "211c8743901a001f12e86993832c1a80340f06c4", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/211c8743901a001f12e86993832c1a80340f06c4", "committedDate": "2020-05-12T14:54:45Z", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket."}, "afterCommit": {"oid": "4b9d045efa47e8b69c58a517153756d57abb9941", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/4b9d045efa47e8b69c58a517153756d57abb9941", "committedDate": "2020-05-12T15:00:55Z", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b9d045efa47e8b69c58a517153756d57abb9941", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/4b9d045efa47e8b69c58a517153756d57abb9941", "committedDate": "2020-05-12T15:00:55Z", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket."}, "afterCommit": {"oid": "5865cd7c4170d741d1d6f9e41b792b7388e7c305", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/5865cd7c4170d741d1d6f9e41b792b7388e7c305", "committedDate": "2020-05-13T13:50:05Z", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5865cd7c4170d741d1d6f9e41b792b7388e7c305", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/5865cd7c4170d741d1d6f9e41b792b7388e7c305", "committedDate": "2020-05-13T13:50:05Z", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket."}, "afterCommit": {"oid": "e0d50525387d232af7cf0d79fe51dbc39757aa6b", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/e0d50525387d232af7cf0d79fe51dbc39757aa6b", "committedDate": "2020-05-13T14:03:17Z", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDU2MTIz", "url": "https://github.com/apache/flink/pull/12101#pullrequestreview-413056123", "createdAt": "2020-05-16T07:33:37Z", "commit": {"oid": "e0d50525387d232af7cf0d79fe51dbc39757aa6b"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwNzozMzozOFrOGWY1Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwNzozOTowNlrOGWY2hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyODY5OA==", "bodyText": "nit: same line?", "url": "https://github.com/apache/flink/pull/12101#discussion_r426128698", "createdAt": "2020-05-16T07:33:38Z", "author": {"login": "AHeise"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/TaskCheckpointingBehaviourTest.java", "diffHunk": "@@ -141,13 +141,18 @@ public void testBlockingNonInterruptibleCheckpoint() throws Exception {\n \t\tassertNull(task.getFailureCause());\n \t}\n \n-\tprivate void runTestDeclineOnCheckpointError(AbstractStateBackend backend) throws Exception{\n-\n+\tprivate void runTestDeclineOnCheckpointError(AbstractStateBackend backend, boolean expectFailure) throws Exception {\n \t\tTestDeclinedCheckpointResponder checkpointResponder = new TestDeclinedCheckpointResponder();\n+\t\tTask task = createTask(new FilterOperator(), backend, checkpointResponder);\n+\t\tif (expectFailure) {\n+\t\t\trunTaskExpectFailure(task);\n+\t\t}\n+\t\telse {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d50525387d232af7cf0d79fe51dbc39757aa6b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEyOTAyOA==", "bodyText": "It feels as if the test logic is hidden in this method from the actual test case perspective.\nCan we instead of expectFailure pass this::runTaskExpectFailure and this::runTaskExpectCheckpointDeclined? (probably BiConsumer?)\nOr maybe inline this method altogether. I see the value rather limited.\nLast option is to use Roman's pattern in ChannelStateWriterImplTest\n    @Test\n\tpublic void testDeclineOnCheckpointErrorInAsyncPart() throws Exception {\n       runWithResponder((task, checkpointResponder) -> runTaskExpectCheckpointDeclined(task, checkpointResponder));\n\t}", "url": "https://github.com/apache/flink/pull/12101#discussion_r426129028", "createdAt": "2020-05-16T07:39:06Z", "author": {"login": "AHeise"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/TaskCheckpointingBehaviourTest.java", "diffHunk": "@@ -141,13 +141,18 @@ public void testBlockingNonInterruptibleCheckpoint() throws Exception {\n \t\tassertNull(task.getFailureCause());\n \t}\n \n-\tprivate void runTestDeclineOnCheckpointError(AbstractStateBackend backend) throws Exception{\n-\n+\tprivate void runTestDeclineOnCheckpointError(AbstractStateBackend backend, boolean expectFailure) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d50525387d232af7cf0d79fe51dbc39757aa6b"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2cd3daceca16ae841119d94a24328b4af37dcd8", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/a2cd3daceca16ae841119d94a24328b4af37dcd8", "committedDate": "2020-05-16T08:01:29Z", "message": "[FLINK-17350][task][hotfix] Simplify checkpoint exception handling\n\nCheckpoint exceptions do not need to report failures via Environment#failExternally\nsince Mailbox can properly handle exceptions in the mails (by shutting down the\ntask)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17815c9e8d321dc3ee64b771e52dbf525e52b1fb", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/17815c9e8d321dc3ee64b771e52dbf525e52b1fb", "committedDate": "2020-05-16T08:01:29Z", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e0d50525387d232af7cf0d79fe51dbc39757aa6b", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/e0d50525387d232af7cf0d79fe51dbc39757aa6b", "committedDate": "2020-05-13T14:03:17Z", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket."}, "afterCommit": {"oid": "17815c9e8d321dc3ee64b771e52dbf525e52b1fb", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/17815c9e8d321dc3ee64b771e52dbf525e52b1fb", "committedDate": "2020-05-16T08:01:29Z", "message": "[FLINK-17350][task] Fail task immediately if synchronous part snapshotState throws an exception\n\nTolerating synchronous part failures can lead to operators being left in an incosistent state.\nFor more details please take a look in the ticket."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4317, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}