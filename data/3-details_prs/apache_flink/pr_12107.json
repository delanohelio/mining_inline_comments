{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MDk0Mzk5", "number": 12107, "title": "[FLINK-17640][network][tests] Fix the unstable unit tests in RecoveredInputChannelTest", "bodyText": "What is the purpose of the change\nFix the unstable unit test in RecoveredInputChannelTest#testConcurrentReadStateAndProcessAndRelease\nBrief change log\n\nVerify the released state of input channel instead of verifying the illegal state message\n\nVerifying this change\nThis change is already covered by existing tests.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-05-13T03:37:23Z", "url": "https://github.com/apache/flink/pull/12107", "merged": true, "mergeCommit": {"oid": "3771835ac76822f4d5eefba8a7ea0afbe9057f4e"}, "closed": true, "closedAt": "2020-05-14T02:25:52Z", "author": {"login": "zhijiangW"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgwbxPABqjMzMzAxNzAyNTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg-ZzAgFqTQxMTI1MTAzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "afde7491da7836eafe5317087be06f3d55b1e456", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/afde7491da7836eafe5317087be06f3d55b1e456", "committedDate": "2020-05-13T03:30:58Z", "message": "[FLINK-17640][network][tests] Fix the unstable unit tests in RecoveredInputChannelTest"}, "afterCommit": {"oid": "e873c1ae8ee8bf318b5beae2c8030bd9051cb3c2", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/e873c1ae8ee8bf318b5beae2c8030bd9051cb3c2", "committedDate": "2020-05-13T03:37:08Z", "message": "[FLINK-17640][network][tests] Fix the unstable unit tests in RecoveredInputChannelTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e873c1ae8ee8bf318b5beae2c8030bd9051cb3c2", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/e873c1ae8ee8bf318b5beae2c8030bd9051cb3c2", "committedDate": "2020-05-13T03:37:08Z", "message": "[FLINK-17640][network][tests] Fix the unstable unit tests in RecoveredInputChannelTest"}, "afterCommit": {"oid": "387b8c2d181de89398fe0f16c6d1749e5024be40", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/387b8c2d181de89398fe0f16c6d1749e5024be40", "committedDate": "2020-05-13T05:59:52Z", "message": "[FLINK-17640][network][tests] Fix the unstable unit tests in RecoveredInputChannelTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNjM0Nzgw", "url": "https://github.com/apache/flink/pull/12107#pullrequestreview-410634780", "createdAt": "2020-05-13T06:54:39Z", "commit": {"oid": "387b8c2d181de89398fe0f16c6d1749e5024be40"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNjo1NDozOVrOGUjxPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNjo1NDozOVrOGUjxPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIxMDc1MA==", "bodyText": "Just to clarify: do we expect an exception to be thrown in this case or is it a possible (undeterministic) outcome?\nIf we expect it, then the test needs to be modified.\nIf it\u2019s undeterministic, is there a way to make it deterministic?", "url": "https://github.com/apache/flink/pull/12107#discussion_r424210750", "createdAt": "2020-05-13T06:54:39Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RecoveredInputChannelTest.java", "diffHunk": "@@ -220,24 +223,24 @@ private void testConcurrentReadStateAndProcessAndRelease(boolean isRemote) throw\n \t\t}\n \t}\n \n-\tprivate Callable<Void> readRecoveredStateTask(RecoveredInputChannel inputChannel, ChannelStateReader reader) {\n+\tprivate Callable<Void> readRecoveredStateTask(RecoveredInputChannel inputChannel, ChannelStateReader reader, boolean verifyRelease) {\n \t\treturn () -> {\n \t\t\ttry {\n \t\t\t\tinputChannel.readRecoveredState(reader);\n-\t\t\t} catch (CancelTaskException ex) {\n-\t\t\t\t// within expectation\n+\t\t\t} catch (Throwable t) {\n+\t\t\t\tassertTrue(\"The expected exception should only happen in the case of released channel.\", verifyRelease && inputChannel.isReleased());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "387b8c2d181de89398fe0f16c6d1749e5024be40"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNjUzMTM4", "url": "https://github.com/apache/flink/pull/12107#pullrequestreview-410653138", "createdAt": "2020-05-13T07:24:08Z", "commit": {"oid": "387b8c2d181de89398fe0f16c6d1749e5024be40"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzoyNDowOVrOGUkpJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzozNTowOVrOGUlBAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyNTA2MQ==", "bodyText": "It's better to not hide an original exception in case of failure (to speed up understanding why the test is failing). Either throw the original exception, or embed it into the failure message (as cause) etc.", "url": "https://github.com/apache/flink/pull/12107#discussion_r424225061", "createdAt": "2020-05-13T07:24:09Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RecoveredInputChannelTest.java", "diffHunk": "@@ -252,10 +255,8 @@ private void testConcurrentReadStateAndProcessAndRelease(boolean isRemote) throw\n \t\t\t\t\t\tbuffer.recycleBuffer();\n \t\t\t\t\t\tnumProcessedStates++;\n \t\t\t\t\t}\n-\t\t\t\t} catch (IllegalStateException e) {\n-\t\t\t\t\tif (!e.getMessage().contains(\"Queried for a buffer after channel has been closed\")) {\n-\t\t\t\t\t\tthrow e;\n-\t\t\t\t\t}\n+\t\t\t\t} catch (Throwable t) {\n+\t\t\t\t\tassertTrue(\"The expected exception should only happen in the case of released channel.\", verifyRelease && inputChannel.isReleased());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "387b8c2d181de89398fe0f16c6d1749e5024be40"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzMTE2OA==", "bodyText": "I'm still not convinced about this test. It's reimplementing production code in many aspects. For example exception handling (this exception ignoring during cancelation/closing) and threading model from Task/StreamTask, so at any time we modify those, this test has a chance to fail.\nAlso I'm pretty sure there are ITCases testing for that and the logic there is simpler and more stable manner.", "url": "https://github.com/apache/flink/pull/12107#discussion_r424231168", "createdAt": "2020-05-13T07:35:09Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RecoveredInputChannelTest.java", "diffHunk": "@@ -220,24 +223,24 @@ private void testConcurrentReadStateAndProcessAndRelease(boolean isRemote) throw\n \t\t}\n \t}\n \n-\tprivate Callable<Void> readRecoveredStateTask(RecoveredInputChannel inputChannel, ChannelStateReader reader) {\n+\tprivate Callable<Void> readRecoveredStateTask(RecoveredInputChannel inputChannel, ChannelStateReader reader, boolean verifyRelease) {\n \t\treturn () -> {\n \t\t\ttry {\n \t\t\t\tinputChannel.readRecoveredState(reader);\n-\t\t\t} catch (CancelTaskException ex) {\n-\t\t\t\t// within expectation\n+\t\t\t} catch (Throwable t) {\n+\t\t\t\tassertTrue(\"The expected exception should only happen in the case of released channel.\", verifyRelease && inputChannel.isReleased());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIxMDc1MA=="}, "originalCommit": {"oid": "387b8c2d181de89398fe0f16c6d1749e5024be40"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNjYyMjQ3", "url": "https://github.com/apache/flink/pull/12107#pullrequestreview-410662247", "createdAt": "2020-05-13T07:37:23Z", "commit": {"oid": "387b8c2d181de89398fe0f16c6d1749e5024be40"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzozNzoyM1rOGUlFkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNzozNzoyM1rOGUlFkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzMjMzNg==", "bodyText": "As below, it's better not to hide the original exception.", "url": "https://github.com/apache/flink/pull/12107#discussion_r424232336", "createdAt": "2020-05-13T07:37:23Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RecoveredInputChannelTest.java", "diffHunk": "@@ -220,24 +223,24 @@ private void testConcurrentReadStateAndProcessAndRelease(boolean isRemote) throw\n \t\t}\n \t}\n \n-\tprivate Callable<Void> readRecoveredStateTask(RecoveredInputChannel inputChannel, ChannelStateReader reader) {\n+\tprivate Callable<Void> readRecoveredStateTask(RecoveredInputChannel inputChannel, ChannelStateReader reader, boolean verifyRelease) {\n \t\treturn () -> {\n \t\t\ttry {\n \t\t\t\tinputChannel.readRecoveredState(reader);\n-\t\t\t} catch (CancelTaskException ex) {\n-\t\t\t\t// within expectation\n+\t\t\t} catch (Throwable t) {\n+\t\t\t\tassertTrue(\"The expected exception should only happen in the case of released channel.\", verifyRelease && inputChannel.isReleased());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "387b8c2d181de89398fe0f16c6d1749e5024be40"}, "originalPosition": 72}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "387b8c2d181de89398fe0f16c6d1749e5024be40", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/387b8c2d181de89398fe0f16c6d1749e5024be40", "committedDate": "2020-05-13T05:59:52Z", "message": "[FLINK-17640][network][tests] Fix the unstable unit tests in RecoveredInputChannelTest"}, "afterCommit": {"oid": "26319fb2d3dad1c3e4f652051dfa42189df3a2cb", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/26319fb2d3dad1c3e4f652051dfa42189df3a2cb", "committedDate": "2020-05-13T09:22:29Z", "message": "[FLINK-17640][network][tests] Fix the unstable unit tests in RecoveredInputChannelTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNzU5OTcz", "url": "https://github.com/apache/flink/pull/12107#pullrequestreview-410759973", "createdAt": "2020-05-13T09:42:44Z", "commit": {"oid": "26319fb2d3dad1c3e4f652051dfa42189df3a2cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwOTo0Mjo0NFrOGUpycA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwOTo0Mjo0NFrOGUpycA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMwOTM2MA==", "bodyText": "nit: you could keep the cause by throwing new AssertionError(msg, t), which would preserve the stack trace as well.", "url": "https://github.com/apache/flink/pull/12107#discussion_r424309360", "createdAt": "2020-05-13T09:42:44Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RecoveredInputChannelTest.java", "diffHunk": "@@ -252,10 +255,8 @@ private void testConcurrentReadStateAndProcessAndRelease(boolean isRemote) throw\n \t\t\t\t\t\tbuffer.recycleBuffer();\n \t\t\t\t\t\tnumProcessedStates++;\n \t\t\t\t\t}\n-\t\t\t\t} catch (IllegalStateException e) {\n-\t\t\t\t\tif (!e.getMessage().contains(\"Queried for a buffer after channel has been closed\")) {\n-\t\t\t\t\t\tthrow e;\n-\t\t\t\t\t}\n+\t\t\t\t} catch (Throwable t) {\n+\t\t\t\t\tassertTrue(\"The released channel is expected, but the actual exception is \" + t.getMessage(), verifyRelease && inputChannel.isReleased());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26319fb2d3dad1c3e4f652051dfa42189df3a2cb"}, "originalPosition": 99}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90311e5d41df4d03184e03e535c865b3859e5efb", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/90311e5d41df4d03184e03e535c865b3859e5efb", "committedDate": "2020-05-13T10:15:07Z", "message": "[FLINK-17640][network][tests] Fix the unstable unit tests in RecoveredInputChannelTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "26319fb2d3dad1c3e4f652051dfa42189df3a2cb", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/26319fb2d3dad1c3e4f652051dfa42189df3a2cb", "committedDate": "2020-05-13T09:22:29Z", "message": "[FLINK-17640][network][tests] Fix the unstable unit tests in RecoveredInputChannelTest"}, "afterCommit": {"oid": "90311e5d41df4d03184e03e535c865b3859e5efb", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/90311e5d41df4d03184e03e535c865b3859e5efb", "committedDate": "2020-05-13T10:15:07Z", "message": "[FLINK-17640][network][tests] Fix the unstable unit tests in RecoveredInputChannelTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMjUxMDM5", "url": "https://github.com/apache/flink/pull/12107#pullrequestreview-411251039", "createdAt": "2020-05-13T19:53:57Z", "commit": {"oid": "90311e5d41df4d03184e03e535c865b3859e5efb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4336, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}