{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNTIxMjg4", "number": 10801, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzo1NjowOFrODXhy6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzo1NjowOFrODXhy6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTk3NTQ1OnYy", "diffSide": "RIGHT", "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/TestUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzo1NjowOFrOFc3obg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMDo1NzozMlrOFd0jrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxNTkxOA==", "bodyText": "Why are we swallowing the exception if targetDir is a directory?", "url": "https://github.com/apache/flink/pull/10801#discussion_r365815918", "createdAt": "2020-01-13T13:56:08Z", "author": {"login": "GJL"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/TestUtils.java", "diffHunk": "@@ -87,15 +89,15 @@ public static Path getResourceJar(final String jarNameRegex) {\n \t * @throws IOException if any IO error happen.\n \t */\n \tpublic static Path copyDirectory(final Path source, final Path destination) throws IOException {\n-\t\tFiles.walkFileTree(source, new SimpleFileVisitor<Path>() {\n+\t\tFiles.walkFileTree(source, EnumSet.of(FileVisitOption.FOLLOW_LINKS), Integer.MAX_VALUE, new SimpleFileVisitor<Path>() {\n \t\t\t@Override\n \t\t\tpublic FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes ignored)\n \t\t\t\tthrows IOException {\n-\t\t\t\tfinal Path targetRir = destination.resolve(source.relativize(dir));\n+\t\t\t\tfinal Path targetDir = destination.resolve(source.relativize(dir));\n \t\t\t\ttry {\n-\t\t\t\t\tFiles.copy(dir, targetRir, StandardCopyOption.COPY_ATTRIBUTES);\n+\t\t\t\t\tFiles.copy(dir, targetDir, StandardCopyOption.COPY_ATTRIBUTES);\n \t\t\t\t} catch (FileAlreadyExistsException e) {\n-\t\t\t\t\tif (!Files.isDirectory(targetRir)) {\n+\t\t\t\t\tif (!Files.isDirectory(targetDir)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee810d1cbf22046bb237506c74e885a6c29b4b5c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxNDEyNA==", "bodyText": "I have to guess since it's been a while, but I suppose the idea is that if a file already exists it is likely that the contents are different (hence affecting the correctness of the operation), while this is not the case for directories generally.", "url": "https://github.com/apache/flink/pull/10801#discussion_r366814124", "createdAt": "2020-01-15T10:57:32Z", "author": {"login": "zentol"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/TestUtils.java", "diffHunk": "@@ -87,15 +89,15 @@ public static Path getResourceJar(final String jarNameRegex) {\n \t * @throws IOException if any IO error happen.\n \t */\n \tpublic static Path copyDirectory(final Path source, final Path destination) throws IOException {\n-\t\tFiles.walkFileTree(source, new SimpleFileVisitor<Path>() {\n+\t\tFiles.walkFileTree(source, EnumSet.of(FileVisitOption.FOLLOW_LINKS), Integer.MAX_VALUE, new SimpleFileVisitor<Path>() {\n \t\t\t@Override\n \t\t\tpublic FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes ignored)\n \t\t\t\tthrows IOException {\n-\t\t\t\tfinal Path targetRir = destination.resolve(source.relativize(dir));\n+\t\t\t\tfinal Path targetDir = destination.resolve(source.relativize(dir));\n \t\t\t\ttry {\n-\t\t\t\t\tFiles.copy(dir, targetRir, StandardCopyOption.COPY_ATTRIBUTES);\n+\t\t\t\t\tFiles.copy(dir, targetDir, StandardCopyOption.COPY_ATTRIBUTES);\n \t\t\t\t} catch (FileAlreadyExistsException e) {\n-\t\t\t\t\tif (!Files.isDirectory(targetRir)) {\n+\t\t\t\t\tif (!Files.isDirectory(targetDir)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgxNTkxOA=="}, "originalCommit": {"oid": "ee810d1cbf22046bb237506c74e885a6c29b4b5c"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1300, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}