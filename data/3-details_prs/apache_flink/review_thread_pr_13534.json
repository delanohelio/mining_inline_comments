{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MDQ2ODkx", "number": 13534, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzowODoyNlrOEql-xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzozMjoyNVrOEqmd8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMDk3OTI0OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/connectors/formats/avro-confluent.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzowODoyNlrOHc4q0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwODowMDoyMlrOHc6afQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1MDY0Mg==", "bodyText": "nit: To be precise we could write something like:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            When writing (serializing) a record with this format the Avro schema is inferred from the table schema and registered in the configured Confluent Schema Registry under the [subject](https://docs.confluent.io/current/schema-registry/index.html#schemas-subjects-and-topics) given in `avro-confluent.schema-registry.subject`.\n          \n          \n            \n            When writing (serializing) a record with this format the Avro schema is inferred from the table schema and used to retrieve a schema id to be encoded with the data. The lookup is performed with in the configured Confluent Schema Registry under the [subject](https://docs.confluent.io/current/schema-registry/index.html#schemas-subjects-and-topics) given in `avro-confluent.schema-registry.subject`.\n          \n      \n    \n    \n  \n\nBut I am also fine with the current version. It's just that the operation is not CREATE, but GET_OR_CREATE.", "url": "https://github.com/apache/flink/pull/13534#discussion_r500050642", "createdAt": "2020-10-06T07:08:26Z", "author": {"login": "dawidwys"}, "path": "docs/dev/table/connectors/formats/avro-confluent.md", "diffHunk": "@@ -0,0 +1,132 @@\n+---\n+title: \"Confluent Avro Format\"\n+nav-title: Confluent Avro\n+nav-parent_id: sql-formats\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<span class=\"label label-info\">Format: Serialization Schema</span>\n+<span class=\"label label-info\">Format: Deserialization Schema</span>\n+\n+* This will be replaced by the TOC\n+{:toc}\n+\n+The Avro Schema Registry (``avro-confluent``) format allows you to read records that were serialized by the ``io.confluent.kafka.serializers.KafkaAvroSerializer`` and to write records that can in turn be read by the ``io.confluent.kafka.serializers.KafkaAvroDeserializer``. \n+\n+When reading (deserializing) a record with this format the Avro writer schema is fetched from the configured Confluent Schema Registry based on the schema version id encoded in the record while the reader schema is inferred from table schema. \n+\n+When writing (serializing) a record with this format the Avro schema is inferred from the table schema and registered in the configured Confluent Schema Registry under the [subject](https://docs.confluent.io/current/schema-registry/index.html#schemas-subjects-and-topics) given in `avro-confluent.schema-registry.subject`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c942c423c14c35800e2a7ceb2f1d1b2889b87fca"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3OTIyOQ==", "bodyText": "Good point.", "url": "https://github.com/apache/flink/pull/13534#discussion_r500079229", "createdAt": "2020-10-06T08:00:22Z", "author": {"login": "knaufk"}, "path": "docs/dev/table/connectors/formats/avro-confluent.md", "diffHunk": "@@ -0,0 +1,132 @@\n+---\n+title: \"Confluent Avro Format\"\n+nav-title: Confluent Avro\n+nav-parent_id: sql-formats\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<span class=\"label label-info\">Format: Serialization Schema</span>\n+<span class=\"label label-info\">Format: Deserialization Schema</span>\n+\n+* This will be replaced by the TOC\n+{:toc}\n+\n+The Avro Schema Registry (``avro-confluent``) format allows you to read records that were serialized by the ``io.confluent.kafka.serializers.KafkaAvroSerializer`` and to write records that can in turn be read by the ``io.confluent.kafka.serializers.KafkaAvroDeserializer``. \n+\n+When reading (deserializing) a record with this format the Avro writer schema is fetched from the configured Confluent Schema Registry based on the schema version id encoded in the record while the reader schema is inferred from table schema. \n+\n+When writing (serializing) a record with this format the Avro schema is inferred from the table schema and registered in the configured Confluent Schema Registry under the [subject](https://docs.confluent.io/current/schema-registry/index.html#schemas-subjects-and-topics) given in `avro-confluent.schema-registry.subject`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1MDY0Mg=="}, "originalCommit": {"oid": "c942c423c14c35800e2a7ceb2f1d1b2889b87fca"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMDk5OTY0OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/connectors/formats/avro-confluent.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzoxNTowMVrOHc43iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzoxNTowMVrOHc43iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1Mzg5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The Avro Schema Registry format can only be used in conjunction with <a href=\"{% link dev/table/connectors/kafka.md %}\"> Apache Kafka SQL connector</a> . \n          \n          \n            \n            The Avro Schema Registry format can only be used in conjunction with [Apache Kafka SQL connector]({% link dev/table/connectors/kafka.md %}) .", "url": "https://github.com/apache/flink/pull/13534#discussion_r500053896", "createdAt": "2020-10-06T07:15:01Z", "author": {"login": "dawidwys"}, "path": "docs/dev/table/connectors/formats/avro-confluent.md", "diffHunk": "@@ -0,0 +1,132 @@\n+---\n+title: \"Confluent Avro Format\"\n+nav-title: Confluent Avro\n+nav-parent_id: sql-formats\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<span class=\"label label-info\">Format: Serialization Schema</span>\n+<span class=\"label label-info\">Format: Deserialization Schema</span>\n+\n+* This will be replaced by the TOC\n+{:toc}\n+\n+The Avro Schema Registry (``avro-confluent``) format allows you to read records that were serialized by the ``io.confluent.kafka.serializers.KafkaAvroSerializer`` and to write records that can in turn be read by the ``io.confluent.kafka.serializers.KafkaAvroDeserializer``. \n+\n+When reading (deserializing) a record with this format the Avro writer schema is fetched from the configured Confluent Schema Registry based on the schema version id encoded in the record while the reader schema is inferred from table schema. \n+\n+When writing (serializing) a record with this format the Avro schema is inferred from the table schema and registered in the configured Confluent Schema Registry under the [subject](https://docs.confluent.io/current/schema-registry/index.html#schemas-subjects-and-topics) given in `avro-confluent.schema-registry.subject`.\n+\n+The Avro Schema Registry format can only be used in conjunction with <a href=\"{% link dev/table/connectors/kafka.md %}\"> Apache Kafka SQL connector</a> . ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c942c423c14c35800e2a7ceb2f1d1b2889b87fca"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTAyMDY0OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/connectors/formats/avro-confluent.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzoyMTo0MVrOHc5EcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzoyMTo0MVrOHc5EcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1NzIwMA==", "bodyText": "Lets do it in the same way as we do it for other connectors:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <div class=\"codetabs\" markdown=\"1\">\n          \n          \n            \n            <div data-lang=\"SQL Client JAR\" markdown=\"1\">\n          \n          \n            \n            You can download flink-sql-avro-confluent-registry from [Download](https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-avro-confluent-registry/{{site.version}}/flink-sql-avro-confluent-registry-{{site.version}}.jar)\n          \n          \n            \n            </div>\n          \n          \n            \n            <div data-lang=\"Maven dependency\" markdown=\"1\">\n          \n          \n            \n            {% highlight xml %}\n          \n          \n            \n            <dependency>\n          \n          \n            \n              <groupId>org.apache.flink</groupId>\n          \n          \n            \n              <artifactId>flink-avro-confluent-registry</artifactId>\n          \n          \n            \n              <version>{{ site.version }}</version>\n          \n          \n            \n            </dependency>\n          \n          \n            \n            {% endhighlight %}\n          \n          \n            \n            </div>\n          \n          \n            \n            </div>\n          \n          \n            \n            | Maven dependency                     | SQL Client JAR         |\n          \n          \n            \n            | :----------------------------------- | :----------------------|\n          \n          \n            \n            | `flink-avro-confluent-registry`      | {% if site.is_stable %} [Download](https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-avro-confluent-registry/{{site.version}}/flink-sql-avro-confluent-registry-{{site.version}}.jar) {% else %} Only available for stable releases. {% endif %} |", "url": "https://github.com/apache/flink/pull/13534#discussion_r500057200", "createdAt": "2020-10-06T07:21:41Z", "author": {"login": "dawidwys"}, "path": "docs/dev/table/connectors/formats/avro-confluent.md", "diffHunk": "@@ -0,0 +1,132 @@\n+---\n+title: \"Confluent Avro Format\"\n+nav-title: Confluent Avro\n+nav-parent_id: sql-formats\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<span class=\"label label-info\">Format: Serialization Schema</span>\n+<span class=\"label label-info\">Format: Deserialization Schema</span>\n+\n+* This will be replaced by the TOC\n+{:toc}\n+\n+The Avro Schema Registry (``avro-confluent``) format allows you to read records that were serialized by the ``io.confluent.kafka.serializers.KafkaAvroSerializer`` and to write records that can in turn be read by the ``io.confluent.kafka.serializers.KafkaAvroDeserializer``. \n+\n+When reading (deserializing) a record with this format the Avro writer schema is fetched from the configured Confluent Schema Registry based on the schema version id encoded in the record while the reader schema is inferred from table schema. \n+\n+When writing (serializing) a record with this format the Avro schema is inferred from the table schema and registered in the configured Confluent Schema Registry under the [subject](https://docs.confluent.io/current/schema-registry/index.html#schemas-subjects-and-topics) given in `avro-confluent.schema-registry.subject`.\n+\n+The Avro Schema Registry format can only be used in conjunction with <a href=\"{% link dev/table/connectors/kafka.md %}\"> Apache Kafka SQL connector</a> . \n+\n+Dependencies\n+------------\n+\n+In order to use the Avro Schema Registry format the following dependencies are required for both projects using a build automation tool (such as Maven or SBT) and SQL Client with SQL JAR bundles.\n+\n+<div class=\"codetabs\" markdown=\"1\">\n+<div data-lang=\"SQL Client JAR\" markdown=\"1\">\n+You can download flink-sql-avro-confluent-registry from [Download](https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-avro-confluent-registry/{{site.version}}/flink-sql-avro-confluent-registry-{{site.version}}.jar)\n+</div>\n+<div data-lang=\"Maven dependency\" markdown=\"1\">\n+{% highlight xml %}\n+<dependency>\n+  <groupId>org.apache.flink</groupId>\n+  <artifactId>flink-avro-confluent-registry</artifactId>\n+  <version>{{ site.version }}</version>\n+</dependency>\n+{% endhighlight %}\n+</div>\n+</div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c942c423c14c35800e2a7ceb2f1d1b2889b87fca"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTA0OTMwOnYy", "diffSide": "RIGHT", "path": "docs/dev/table/connectors/formats/avro-confluent.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzoyOTo1NlrOHc5WDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzoyOTo1NlrOHc5WDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA2MTcxMQ==", "bodyText": "I am good with this for now, as other formats/connector do that as well. At some point would be nice though to auto generate that from the ConfigOptions. We have the ConfigOptions already in place, we would probably need to add a dependency in the flink-docs module and replace this table with the auto generated one.", "url": "https://github.com/apache/flink/pull/13534#discussion_r500061711", "createdAt": "2020-10-06T07:29:56Z", "author": {"login": "dawidwys"}, "path": "docs/dev/table/connectors/formats/avro-confluent.md", "diffHunk": "@@ -0,0 +1,132 @@\n+---\n+title: \"Confluent Avro Format\"\n+nav-title: Confluent Avro\n+nav-parent_id: sql-formats\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<span class=\"label label-info\">Format: Serialization Schema</span>\n+<span class=\"label label-info\">Format: Deserialization Schema</span>\n+\n+* This will be replaced by the TOC\n+{:toc}\n+\n+The Avro Schema Registry (``avro-confluent``) format allows you to read records that were serialized by the ``io.confluent.kafka.serializers.KafkaAvroSerializer`` and to write records that can in turn be read by the ``io.confluent.kafka.serializers.KafkaAvroDeserializer``. \n+\n+When reading (deserializing) a record with this format the Avro writer schema is fetched from the configured Confluent Schema Registry based on the schema version id encoded in the record while the reader schema is inferred from table schema. \n+\n+When writing (serializing) a record with this format the Avro schema is inferred from the table schema and registered in the configured Confluent Schema Registry under the [subject](https://docs.confluent.io/current/schema-registry/index.html#schemas-subjects-and-topics) given in `avro-confluent.schema-registry.subject`.\n+\n+The Avro Schema Registry format can only be used in conjunction with <a href=\"{% link dev/table/connectors/kafka.md %}\"> Apache Kafka SQL connector</a> . \n+\n+Dependencies\n+------------\n+\n+In order to use the Avro Schema Registry format the following dependencies are required for both projects using a build automation tool (such as Maven or SBT) and SQL Client with SQL JAR bundles.\n+\n+<div class=\"codetabs\" markdown=\"1\">\n+<div data-lang=\"SQL Client JAR\" markdown=\"1\">\n+You can download flink-sql-avro-confluent-registry from [Download](https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-avro-confluent-registry/{{site.version}}/flink-sql-avro-confluent-registry-{{site.version}}.jar)\n+</div>\n+<div data-lang=\"Maven dependency\" markdown=\"1\">\n+{% highlight xml %}\n+<dependency>\n+  <groupId>org.apache.flink</groupId>\n+  <artifactId>flink-avro-confluent-registry</artifactId>\n+  <version>{{ site.version }}</version>\n+</dependency>\n+{% endhighlight %}\n+</div>\n+</div>\n+\n+How to create a table with Avro-Confluent format\n+----------------\n+\n+Here is an example to create a table using Kafka connector and Avro format.\n+\n+<div class=\"codetabs\" markdown=\"1\">\n+<div data-lang=\"SQL\" markdown=\"1\">\n+{% highlight sql %}\n+CREATE TABLE user_behavior (\n+  user_id BIGINT,\n+  item_id BIGINT,\n+  category_id BIGINT,\n+  behavior STRING,\n+  ts TIMESTAMP(3)\n+) WITH (\n+  'connector' = 'kafka',\n+  'properties.bootstrap.servers' = 'localhost:9092',\n+  'topic' = 'user_behavior'\n+  'format' = 'avro-confluent',\n+  'avro-confluent.schema-registry.url' = 'http://localhost:8081',\n+  'avro-confluent.schema-registry.subject' = 'user_behavior'\n+)\n+{% endhighlight %}\n+</div>\n+</div>\n+\n+Format Options\n+----------------\n+\n+<table class=\"table table-bordered\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c942c423c14c35800e2a7ceb2f1d1b2889b87fca"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTA1OTA0OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/connectors/formats/avro-confluent.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzozMjoyNVrOHc5b6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNzozMjoyNVrOHc5b6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA2MzIxMQ==", "bodyText": "Let's stick to a single formatting:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            See the <a href=\"{% link dev/table/connectors/formats/avro.md%}#data-type-mapping\"> Apache Avro Format</a> for the mapping between Avro and Flink DataTypes. \n          \n          \n            \n            See the [Apache Avro Format]({% link dev/table/connectors/formats/avro.md%}#data-type-mapping) for the mapping between Avro and Flink DataTypes.", "url": "https://github.com/apache/flink/pull/13534#discussion_r500063211", "createdAt": "2020-10-06T07:32:25Z", "author": {"login": "dawidwys"}, "path": "docs/dev/table/connectors/formats/avro-confluent.md", "diffHunk": "@@ -0,0 +1,132 @@\n+---\n+title: \"Confluent Avro Format\"\n+nav-title: Confluent Avro\n+nav-parent_id: sql-formats\n+nav-pos: 3\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<span class=\"label label-info\">Format: Serialization Schema</span>\n+<span class=\"label label-info\">Format: Deserialization Schema</span>\n+\n+* This will be replaced by the TOC\n+{:toc}\n+\n+The Avro Schema Registry (``avro-confluent``) format allows you to read records that were serialized by the ``io.confluent.kafka.serializers.KafkaAvroSerializer`` and to write records that can in turn be read by the ``io.confluent.kafka.serializers.KafkaAvroDeserializer``. \n+\n+When reading (deserializing) a record with this format the Avro writer schema is fetched from the configured Confluent Schema Registry based on the schema version id encoded in the record while the reader schema is inferred from table schema. \n+\n+When writing (serializing) a record with this format the Avro schema is inferred from the table schema and registered in the configured Confluent Schema Registry under the [subject](https://docs.confluent.io/current/schema-registry/index.html#schemas-subjects-and-topics) given in `avro-confluent.schema-registry.subject`.\n+\n+The Avro Schema Registry format can only be used in conjunction with <a href=\"{% link dev/table/connectors/kafka.md %}\"> Apache Kafka SQL connector</a> . \n+\n+Dependencies\n+------------\n+\n+In order to use the Avro Schema Registry format the following dependencies are required for both projects using a build automation tool (such as Maven or SBT) and SQL Client with SQL JAR bundles.\n+\n+<div class=\"codetabs\" markdown=\"1\">\n+<div data-lang=\"SQL Client JAR\" markdown=\"1\">\n+You can download flink-sql-avro-confluent-registry from [Download](https://repo.maven.apache.org/maven2/org/apache/flink/flink-sql-avro-confluent-registry/{{site.version}}/flink-sql-avro-confluent-registry-{{site.version}}.jar)\n+</div>\n+<div data-lang=\"Maven dependency\" markdown=\"1\">\n+{% highlight xml %}\n+<dependency>\n+  <groupId>org.apache.flink</groupId>\n+  <artifactId>flink-avro-confluent-registry</artifactId>\n+  <version>{{ site.version }}</version>\n+</dependency>\n+{% endhighlight %}\n+</div>\n+</div>\n+\n+How to create a table with Avro-Confluent format\n+----------------\n+\n+Here is an example to create a table using Kafka connector and Avro format.\n+\n+<div class=\"codetabs\" markdown=\"1\">\n+<div data-lang=\"SQL\" markdown=\"1\">\n+{% highlight sql %}\n+CREATE TABLE user_behavior (\n+  user_id BIGINT,\n+  item_id BIGINT,\n+  category_id BIGINT,\n+  behavior STRING,\n+  ts TIMESTAMP(3)\n+) WITH (\n+  'connector' = 'kafka',\n+  'properties.bootstrap.servers' = 'localhost:9092',\n+  'topic' = 'user_behavior'\n+  'format' = 'avro-confluent',\n+  'avro-confluent.schema-registry.url' = 'http://localhost:8081',\n+  'avro-confluent.schema-registry.subject' = 'user_behavior'\n+)\n+{% endhighlight %}\n+</div>\n+</div>\n+\n+Format Options\n+----------------\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+      <tr>\n+        <th class=\"text-left\" style=\"width: 25%\">Option</th>\n+        <th class=\"text-center\" style=\"width: 8%\">Required</th>\n+        <th class=\"text-center\" style=\"width: 7%\">Default</th>\n+        <th class=\"text-center\" style=\"width: 10%\">Type</th>\n+        <th class=\"text-center\" style=\"width: 50%\">Description</th>\n+      </tr>\n+    </thead>\n+    <tbody>\n+    <tr>\n+      <td><h5>format</h5></td>\n+      <td>required</td>\n+      <td style=\"word-wrap: break-word;\">(none)</td>\n+      <td>String</td>\n+      <td>Specify what format to use, here should be <code>'avro-confluent'</code>.</td>\n+    </tr>\n+    <tr>\n+      <td><h5>avro-confluent.schema-registry.url</h5></td>\n+      <td>required</td>\n+      <td style=\"word-wrap: break-word;\">(none)</td>\n+      <td>String</td>\n+      <td>The URL of the Confluent Schema Registry to fetch/register schemas</td>\n+    </tr>\n+    <tr>\n+      <td><h5>avro-confluent.schema-registry.subject</h5></td>\n+      <td>required by sink</td>\n+      <td style=\"word-wrap: break-word;\">(none)</td>\n+      <td>String</td>\n+      <td>The Confluent Schema Registry subject under which to register the schema used by this format during serialization</td>\n+    </tr>\n+    </tbody>\n+</table>\n+\n+Data Type Mapping\n+----------------\n+\n+Currently, the Avro schema is always derived from table schema. Explicitly defining an Avro schema is not supported yet.\n+See the <a href=\"{% link dev/table/connectors/formats/avro.md%}#data-type-mapping\"> Apache Avro Format</a> for the mapping between Avro and Flink DataTypes. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c942c423c14c35800e2a7ceb2f1d1b2889b87fca"}, "originalPosition": 128}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 211, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}