{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNjU4MjMz", "number": 13869, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQyMDozNTo1MlrOE0Ll1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQyMDozNTo1MlrOE0Ll1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMTUxMzE2OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/batch/sql/SubplanReuseTest.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQyMDozNTo1MlrOHrx7Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQyMDozNTo1MlrOHrx7Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY2ODgzMA==", "bodyText": "extract them into a common method?", "url": "https://github.com/apache/flink/pull/13869#discussion_r515668830", "createdAt": "2020-11-01T20:35:52Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/batch/sql/SubplanReuseTest.scala", "diffHunk": "@@ -448,4 +448,61 @@ class SubplanReuseTest extends TableTestBase {\n       \"\"\".stripMargin\n     util.verifyPlan(sqlQuery)\n   }\n+\n+  @Test\n+  def testEnableReuseTableSourceOnNewSource(): Unit = {\n+    util.tableEnv.getConfig.getConfiguration.setBoolean(\n+      OptimizerConfigOptions.TABLE_OPTIMIZER_REUSE_SOURCE_ENABLED, true)\n+    addNewSource()\n+    val sqlQuery =\n+      \"\"\"\n+        |WITH t AS (\n+        |  SELECT newX.a AS a, newX.b AS b, newY.d AS d, newY.e AS e\n+        |  FROM newX, newY\n+        |  WHERE newX.a = newY.d)\n+        |SELECT t1.*, t2.* FROM t t1, t t2 WHERE t1.b = t2.e AND t1.a < 10 AND t2.a > 5\n+      \"\"\".stripMargin\n+    util.verifyPlan(sqlQuery)\n+  }\n+\n+  @Test\n+  def testDisableReuseTableSourceOnNewSource(): Unit = {\n+    util.tableEnv.getConfig.getConfiguration.setBoolean(\n+      OptimizerConfigOptions.TABLE_OPTIMIZER_REUSE_SOURCE_ENABLED, false)\n+    addNewSource()\n+    val sqlQuery =\n+      \"\"\"\n+        |WITH t AS (\n+        |  SELECT newX.a AS a, newX.b AS b, newY.d AS d, newY.e AS e\n+        |  FROM newX, newY\n+        |  WHERE newX.a = newY.d)\n+        |SELECT t1.*, t2.* FROM t t1, t t2 WHERE t1.b = t2.e AND t1.a < 10 AND t2.a > 5\n+      \"\"\".stripMargin\n+    util.verifyPlan(sqlQuery)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "310c53eaf0a92dee1bfdea726f5a5f489c56b2cb"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 9, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}