{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjE3NjUz", "number": 11717, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzozMDo1MlrODxhC3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzozNzoxN1rODxhLmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMjQ4MjIzOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/PythonCorrelateSplitRule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzozMDo1MlrOGFBrww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzozMDo1MlrOGFBrww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkyMzY1MQ==", "bodyText": "Maybe add some document about split RexFieldAccess from PythonCorrelate for the PythonCorrelateSplitRule?", "url": "https://github.com/apache/flink/pull/11717#discussion_r407923651", "createdAt": "2020-04-14T07:30:52Z", "author": {"login": "hequn8128"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/PythonCorrelateSplitRule.java", "diffHunk": "@@ -188,12 +203,20 @@ private FlinkLogicalCalc createTopCalc(\n \n \tprivate ScalarFunctionSplitter createScalarFunctionSplitter(\n \t\tint primitiveLeftFieldCount,\n-\t\tArrayBuffer<RexCall> extractedRexCalls,\n-\t\tboolean isJavaTableFunction) {\n+\t\tArrayBuffer<RexNode> extractedRexNodes,\n+\t\tRexNode tableFunctionNode) {\n \t\treturn new ScalarFunctionSplitter(\n \t\t\tprimitiveLeftFieldCount,\n-\t\t\textractedRexCalls,\n-\t\t\tisJavaTableFunction ? x -> PythonUtil.isPythonCall(x, null) : PythonUtil::isNonPythonCall\n+\t\t\textractedRexNodes,\n+\t\t\tnode -> {\n+\t\t\t\tif (PythonUtil.isNonPythonCall(tableFunctionNode)) {\n+\t\t\t\t\treturn PythonUtil.isPythonCall(node, null);\n+\t\t\t\t} else if (PythonUtil.containsNonPythonCall(node)) {\n+\t\t\t\t\treturn PythonUtil.isNonPythonCall(node);\n+\t\t\t\t} else {\n+\t\t\t\t\treturn node instanceof RexFieldAccess;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3161ea77da21b591ab76eaae3a5950ff73625971"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMjUwNDU4OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/PythonCorrelateSplitRule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzozNzoxN1rOGFB5Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzozNzoxN1rOGFB5Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkyNzA3MQ==", "bodyText": "We don't need this method, use RexUtil.containsFieldAccess() directly.", "url": "https://github.com/apache/flink/pull/11717#discussion_r407927071", "createdAt": "2020-04-14T07:37:17Z", "author": {"login": "hequn8128"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/PythonCorrelateSplitRule.java", "diffHunk": "@@ -93,22 +94,36 @@ public boolean matches(RelOptRuleCall call) {\n \t\tRexNode rexNode = tableFunctionScan.getCall();\n \t\tif (rexNode instanceof RexCall) {\n \t\t\treturn PythonUtil.isPythonCall(rexNode, null) && PythonUtil.containsNonPythonCall(rexNode)\n-\t\t\t\t|| PythonUtil.isNonPythonCall(rexNode) && PythonUtil.containsPythonCall(rexNode, null);\n+\t\t\t\t|| PythonUtil.isNonPythonCall(rexNode) && PythonUtil.containsPythonCall(rexNode, null)\n+\t\t\t\t|| (PythonUtil.isPythonCall(rexNode, null) && containsFieldAccessInputs(rexNode));\n \t\t}\n \t\treturn false;\n \t}\n \n+\tprivate boolean containsFieldAccessInputs(RexNode node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3161ea77da21b591ab76eaae3a5950ff73625971"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1721, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}