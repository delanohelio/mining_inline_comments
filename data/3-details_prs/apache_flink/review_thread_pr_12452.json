{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2OTI4MDI0", "number": 12452, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo0NTo1N1rOEC3thA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo1OToxM1rOEC3-7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDQ1MzgwOnYy", "diffSide": "LEFT", "path": "flink-formats/flink-hadoop-bulk/src/test/resources/log4j2-test.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo0NTo1N1rOGflzLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo0NTo1N1rOGflzLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc3ODM0OQ==", "bodyText": "OFF?", "url": "https://github.com/apache/flink/pull/12452#discussion_r435778349", "createdAt": "2020-06-05T08:45:57Z", "author": {"login": "JingsongLi"}, "path": "flink-formats/flink-hadoop-bulk/src/test/resources/log4j2-test.properties", "diffHunk": "@@ -18,7 +18,7 @@\n \n # Set root logger level to OFF to not flood build logs\n # set manually to INFO for debugging purposes\n-rootLogger.level = OFF", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7e6da089bea0dd3a2f2fc2bfafb88a13aa482c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDQ3ODQyOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-hadoop-bulk/src/main/java/org/apache/flink/formats/hadoop/bulk/HadoopPathBasedPartFileWriter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo1MzoxNFrOGfmC_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo1MzoxNFrOGfmC_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4MjM5OA==", "bodyText": "just 12 + pathBytes.length + inProgressBytes.length", "url": "https://github.com/apache/flink/pull/12452#discussion_r435782398", "createdAt": "2020-06-05T08:53:14Z", "author": {"login": "JingsongLi"}, "path": "flink-formats/flink-hadoop-bulk/src/main/java/org/apache/flink/formats/hadoop/bulk/HadoopPathBasedPartFileWriter.java", "diffHunk": "@@ -142,14 +150,21 @@ public int getVersion() {\n \t\t\t\tthrow new UnsupportedOperationException(\"Only HadoopPathBasedPendingFileRecoverable is supported.\");\n \t\t\t}\n \n-\t\t\tPath path = ((HadoopPathBasedPendingFileRecoverable) pendingFileRecoverable).getPath();\n+\t\t\tHadoopPathBasedPendingFileRecoverable hadoopRecoverable =\n+\t\t\t\t(HadoopPathBasedPendingFileRecoverable) pendingFileRecoverable;\n+\t\t\tPath path = hadoopRecoverable.getPath();\n+\t\t\tPath inProgressPath = hadoopRecoverable.getInProgressPath();\n+\n \t\t\tbyte[] pathBytes = path.toUri().toString().getBytes(CHARSET);\n+\t\t\tbyte[] inProgressBytes = inProgressPath.toUri().toString().getBytes(CHARSET);\n \n-\t\t\tbyte[] targetBytes = new byte[8 + pathBytes.length];\n+\t\t\tbyte[] targetBytes = new byte[8 + pathBytes.length + 4 + inProgressBytes.length];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7e6da089bea0dd3a2f2fc2bfafb88a13aa482c"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDQ4Mjg2OnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-hadoop-bulk/src/main/java/org/apache/flink/formats/hadoop/bulk/HadoopPathBasedPartFileWriter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo1NDozOVrOGfmF-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo1NDozOVrOGfmF-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4MzE2Mg==", "bodyText": "I think you can add some comments to explain in HadoopPathBasedPartFileWriter, what we store in state.", "url": "https://github.com/apache/flink/pull/12452#discussion_r435783162", "createdAt": "2020-06-05T08:54:39Z", "author": {"login": "JingsongLi"}, "path": "flink-formats/flink-hadoop-bulk/src/main/java/org/apache/flink/formats/hadoop/bulk/HadoopPathBasedPartFileWriter.java", "diffHunk": "@@ -142,14 +150,21 @@ public int getVersion() {\n \t\t\t\tthrow new UnsupportedOperationException(\"Only HadoopPathBasedPendingFileRecoverable is supported.\");\n \t\t\t}\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7e6da089bea0dd3a2f2fc2bfafb88a13aa482c"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDQ4NzMxOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-hadoop-bulk/src/main/java/org/apache/flink/formats/hadoop/bulk/HadoopPathBasedPartFileWriter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo1NjowMFrOGfmI5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo1NjowMFrOGfmI5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4MzkxMA==", "bodyText": "Can be consistent with HadoopFsRecoverable, Path targetFile, Path tempFile", "url": "https://github.com/apache/flink/pull/12452#discussion_r435783910", "createdAt": "2020-06-05T08:56:00Z", "author": {"login": "JingsongLi"}, "path": "flink-formats/flink-hadoop-bulk/src/main/java/org/apache/flink/formats/hadoop/bulk/HadoopPathBasedPartFileWriter.java", "diffHunk": "@@ -103,21 +103,29 @@ public void commitAfterRecovery() throws IOException {\n \n \t\tpublic PendingFileRecoverable getRecoverable() {\n \t\t\treturn new HadoopPathBasedPendingFileRecoverable(\n-\t\t\t\tfileCommitter.getTargetFilePath());\n+\t\t\t\tfileCommitter.getTargetFilePath(),\n+\t\t\t\tfileCommitter.getInProgressFilePath());\n \t\t}\n \t}\n \n \t@VisibleForTesting\n \tstatic class HadoopPathBasedPendingFileRecoverable implements PendingFileRecoverable {\n \t\tprivate final Path path;\n \n-\t\tpublic HadoopPathBasedPendingFileRecoverable(Path path) {\n+\t\tprivate final Path inProgressPath;\n+\n+\t\tpublic HadoopPathBasedPendingFileRecoverable(Path path, Path inProgressPath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7e6da089bea0dd3a2f2fc2bfafb88a13aa482c"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDQ5ODM3OnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-hadoop-bulk/src/main/java/org/apache/flink/formats/hadoop/bulk/committer/HadoopRenameFileCommitter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo1OToxM1rOGfmQIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo1OToxM1rOGfmQIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NTc2Mw==", "bodyText": "\".inprogress\" -> \".inprogress.\"", "url": "https://github.com/apache/flink/pull/12452#discussion_r435785763", "createdAt": "2020-06-05T08:59:13Z", "author": {"login": "JingsongLi"}, "path": "flink-formats/flink-hadoop-bulk/src/main/java/org/apache/flink/formats/hadoop/bulk/committer/HadoopRenameFileCommitter.java", "diffHunk": "@@ -96,12 +107,19 @@ private void rename(boolean assertFileExists) throws IOException {\n \t\t}\n \t}\n \n-\tprivate Path generateInProgressFilePath() {\n+\tprivate Path generateInProgressFilePath() throws IOException {\n \t\tcheckArgument(targetFilePath.isAbsolute(), \"Target file must be absolute\");\n \n+\t\tFileSystem fileSystem = FileSystem.get(targetFilePath.toUri(), configuration);\n+\n \t\tPath parent = targetFilePath.getParent();\n \t\tString name = targetFilePath.getName();\n \n-\t\treturn new Path(parent, \".\" + name + \".inprogress\");\n+\t\twhile (true) {\n+\t\t\tPath candidate = new Path(parent, \".\" + name + \".inprogress\" + UUID.randomUUID().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f7e6da089bea0dd3a2f2fc2bfafb88a13aa482c"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4413, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}