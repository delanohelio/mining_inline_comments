{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MjkzMzU3", "number": 11802, "title": "[FLINK-17197][runtime] switch ContinuousFileReaderOperator state to FAILED on error", "bodyText": "What is the purpose of the change\nCurrently, ContinuousFileReaderOperator switches state to CLOSED on processing error.\nBut such a transition is illegal and leads to an exception. This exception hides the original one.\nThis PR introduces a new state FAILED for this situation, so that:\n\nno processing can be done\nit still can be disposed\n\nVerifying this change\nAdded ContinuousFileReaderOperatorTest.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? not applicable", "createdAt": "2020-04-17T19:04:53Z", "url": "https://github.com/apache/flink/pull/11802", "merged": true, "mergeCommit": {"oid": "7269e6c41db6818df3834bfad6649c87553775ae"}, "closed": true, "closedAt": "2020-04-21T07:17:49Z", "author": {"login": "rkhachatryan"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYmIUygFqTM5NTcwNDU5MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZuXtRgFqTM5NzA0OTEwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzA0NTkw", "url": "https://github.com/apache/flink/pull/11802#pullrequestreview-395704590", "createdAt": "2020-04-17T19:05:44Z", "commit": {"oid": "1f63e9f1b9f77c0b16ce16a743de535333ba7fff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTowNTo0NVrOGHZ1bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTowNTo0NVrOGHZ1bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQxNjQ5NA==", "bodyText": "allows avoiding initializeState() which requires a lot of setup", "url": "https://github.com/apache/flink/pull/11802#discussion_r410416494", "createdAt": "2020-04-17T19:05:45Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/source/ContinuousFileReaderOperator.java", "diffHunk": "@@ -202,15 +212,15 @@ public void onNoMoreData(ContinuousFileReaderOperator<?> op) {\n \t * MUST only be changed via {@link #switchState(ReaderState) switchState}.\n \t */\n \tprivate transient ReaderState state = ReaderState.IDLE;\n-\tprivate transient PriorityQueue<TimestampedFileInputSplit> splits;\n+\tprivate transient PriorityQueue<TimestampedFileInputSplit> splits = new PriorityQueue<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f63e9f1b9f77c0b16ce16a743de535333ba7fff"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f63e9f1b9f77c0b16ce16a743de535333ba7fff", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/1f63e9f1b9f77c0b16ce16a743de535333ba7fff", "committedDate": "2020-04-17T16:20:48Z", "message": "[FLINK-17197][runtime] switch ContinuousFileReaderOperator state to FAILED on error"}, "afterCommit": {"oid": "b3a5ba58720be5eee04eb2b13cd265ed24144a90", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/b3a5ba58720be5eee04eb2b13cd265ed24144a90", "committedDate": "2020-04-20T08:12:28Z", "message": "[FLINK-17197][runtime] switch ContinuousFileReaderOperator state to FAILED on error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NTIzNDk4", "url": "https://github.com/apache/flink/pull/11802#pullrequestreview-396523498", "createdAt": "2020-04-20T14:45:45Z", "commit": {"oid": "b3a5ba58720be5eee04eb2b13cd265ed24144a90"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNDo0NTo0NVrOGIYKVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNDo1Mzo1MlrOGIYkYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQzNzY1NQ==", "bodyText": "Why have you created a separate class to add this unit test? There is already a similar test org.apache.flink.hdfstests.ContinuousFileProcessingTest#testExceptionHandling so definitely those two should be together.\nA good questions is why is the test for a class ContinuousFileReaderOperator named ContinuousFileProcessingTest but I guess that's a story for another time. (I would be +1 for renaming all ContinuousFileProcessing*** classes to ContinuousFileReaderOperator***)", "url": "https://github.com/apache/flink/pull/11802#discussion_r411437655", "createdAt": "2020-04-20T14:45:45Z", "author": {"login": "pnowojski"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/source/ContinuousFileReaderOperatorTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.functions.source;\n+\n+import org.apache.flink.api.common.io.FileInputFormat;\n+import org.apache.flink.core.fs.FileInputSplit;\n+import org.apache.flink.core.fs.Path;\n+import org.apache.flink.streaming.runtime.streamrecord.StreamRecord;\n+import org.apache.flink.streaming.runtime.tasks.StreamTaskActionExecutor;\n+import org.apache.flink.streaming.runtime.tasks.TestProcessingTimeService;\n+import org.apache.flink.streaming.runtime.tasks.mailbox.Mail;\n+import org.apache.flink.streaming.runtime.tasks.mailbox.MailboxExecutorImpl;\n+import org.apache.flink.streaming.runtime.tasks.mailbox.TaskMailboxImpl;\n+\n+import org.junit.Test;\n+\n+/**\n+ * {@link ContinuousFileReaderOperator} test.\n+ */\n+public class ContinuousFileReaderOperatorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3a5ba58720be5eee04eb2b13cd265ed24144a90"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ0MzI0NQ==", "bodyText": "This test is violating the operator's contract here, by not calling open() and initializeState() methods. As it is know, it relays on the private implementation detail that those method are not doing anything important for this particular test case. It could lead to false positive errors if someone would add some valid logic to the ContinuousFileReaderOperator#processElement(), which would (legally) relay on any logic being done in those two methods.\nCouldn't you re-use pattern from org.apache.flink.hdfstests.ContinuousFileProcessingTest#testExceptionHandling?", "url": "https://github.com/apache/flink/pull/11802#discussion_r411443245", "createdAt": "2020-04-20T14:52:37Z", "author": {"login": "pnowojski"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/source/ContinuousFileReaderOperatorTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.functions.source;\n+\n+import org.apache.flink.api.common.io.FileInputFormat;\n+import org.apache.flink.core.fs.FileInputSplit;\n+import org.apache.flink.core.fs.Path;\n+import org.apache.flink.streaming.runtime.streamrecord.StreamRecord;\n+import org.apache.flink.streaming.runtime.tasks.StreamTaskActionExecutor;\n+import org.apache.flink.streaming.runtime.tasks.TestProcessingTimeService;\n+import org.apache.flink.streaming.runtime.tasks.mailbox.Mail;\n+import org.apache.flink.streaming.runtime.tasks.mailbox.MailboxExecutorImpl;\n+import org.apache.flink.streaming.runtime.tasks.mailbox.TaskMailboxImpl;\n+\n+import org.junit.Test;\n+\n+/**\n+ * {@link ContinuousFileReaderOperator} test.\n+ */\n+public class ContinuousFileReaderOperatorTest {\n+\n+\t@Test(expected = TestException.class)\n+\tpublic void testExceptionRethrown() throws Exception {\n+\t\tfinal TaskMailboxImpl mailbox = new TaskMailboxImpl();\n+\t\tfinal ContinuousFileReaderOperator<String> op = new ContinuousFileReaderOperator<>(\n+\t\t\t\tfailingFormat(),\n+\t\t\t\tnew TestProcessingTimeService(),\n+\t\t\t\tnew MailboxExecutorImpl(mailbox, 0, StreamTaskActionExecutor.IMMEDIATE)\n+\t\t);\n+\t\top.processElement(new StreamRecord<>(new TimestampedFileInputSplit(0L, 1, new Path(), 0L, 0L, new String[]{})));\n+\t\tfor (Mail m : mailbox.drain()) {\n+\t\t\tm.run();\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3a5ba58720be5eee04eb2b13cd265ed24144a90"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ0NDMyMg==", "bodyText": "nit: POSSIBLE_TRANSITIONS ?", "url": "https://github.com/apache/flink/pull/11802#discussion_r411444322", "createdAt": "2020-04-20T14:53:52Z", "author": {"login": "pnowojski"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/source/ContinuousFileReaderOperator.java", "diffHunk": "@@ -160,10 +169,11 @@ public boolean prepareToProcessRecord(ContinuousFileReaderOperator<?> op) {\n \t\tprivate static final Map<ReaderState, Set<ReaderState>> TRANSITIONS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3a5ba58720be5eee04eb2b13cd265ed24144a90"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b16e228c1e58ac87b2b67db6e8d12d3ba5578342", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/b16e228c1e58ac87b2b67db6e8d12d3ba5578342", "committedDate": "2020-04-20T17:10:08Z", "message": "[FLINK-17197][runtime] switch ContinuousFileReaderOperator state to FAILED on error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ca30d10e0809e1e39d4733c49687920336aec97", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/2ca30d10e0809e1e39d4733c49687920336aec97", "committedDate": "2020-04-20T17:10:08Z", "message": "[hotfix][runtime] move ContinuousFileReaderOperator unit test to the\nappropriate class and module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b533af1f8c0e3c799ba11d614b638db11a907a0f", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/b533af1f8c0e3c799ba11d614b638db11a907a0f", "committedDate": "2020-04-20T17:13:29Z", "message": "[hotfix][runtime] rename ContinuousFileReaderOperator.TRANSITIONS to VALID_TRANSITIONS"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3a5ba58720be5eee04eb2b13cd265ed24144a90", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/b3a5ba58720be5eee04eb2b13cd265ed24144a90", "committedDate": "2020-04-20T08:12:28Z", "message": "[FLINK-17197][runtime] switch ContinuousFileReaderOperator state to FAILED on error"}, "afterCommit": {"oid": "b533af1f8c0e3c799ba11d614b638db11a907a0f", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/b533af1f8c0e3c799ba11d614b638db11a907a0f", "committedDate": "2020-04-20T17:13:29Z", "message": "[hotfix][runtime] rename ContinuousFileReaderOperator.TRANSITIONS to VALID_TRANSITIONS"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MDQ5MTAz", "url": "https://github.com/apache/flink/pull/11802#pullrequestreview-397049103", "createdAt": "2020-04-21T07:15:43Z", "commit": {"oid": "b533af1f8c0e3c799ba11d614b638db11a907a0f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1900, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}