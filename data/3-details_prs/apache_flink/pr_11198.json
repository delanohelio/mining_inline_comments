{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4ODQwNDIw", "number": 11198, "title": "[FLINK-16248][python][ml] Add interfaces for MLEnvironment and MLEnvironmentFactory", "bodyText": "What is the purpose of the change\nAlign interface for MLEnvironment and MLEnvironmentFactory, so Python users can use Python MLEnvironmentFactory to maintain execution environment and table environment.\nBrief change log\n\nAdd MLEnvironment and MLEnvironmentFactory interface.\nRemove is_blink_planner parameter for TableEnvironment init method.\nAdd tests.\n\nVerifying this change\nThis change added tests and can be verified as follows:\n\nAdd MLEnvironmentTest to test the logic in MLEnvironment.\nAdd MLEnvironmentFactoryTest to test the logic in MLEnvironmentFactory.\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (Yes)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes)\nIf yes, how is the feature documented? (PythonDocs)", "createdAt": "2020-02-24T07:12:19Z", "url": "https://github.com/apache/flink/pull/11198", "merged": true, "mergeCommit": {"oid": "ce0366d7672cad54dffdb82b9b748ac455fea2e1"}, "closed": true, "closedAt": "2020-02-26T08:30:29Z", "author": {"login": "hequn8128"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHYCa3gH2gAyMzc4ODQwNDIwOjI2ODNlZjdlMDkyZDQwMjZiYWQyMzA3YzRjYmIyMDRhYTA1MmJlMWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH8hD3AFqTM2NDU3MDA2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2683ef7e092d4026bad2307c4cbb204aa052be1d", "author": {"user": {"login": "hequn8128", "name": "Hequn Cheng"}}, "url": "https://github.com/apache/flink/commit/2683ef7e092d4026bad2307c4cbb204aa052be1d", "committedDate": "2020-02-24T07:03:55Z", "message": "[FLINK-16248][python][ml] Add interfaces for MLEnvironment and MLEnvironmentFactory"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzODQ2MjYy", "url": "https://github.com/apache/flink/pull/11198#pullrequestreview-363846262", "createdAt": "2020-02-25T03:15:07Z", "commit": {"oid": "2683ef7e092d4026bad2307c4cbb204aa052be1d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMzoxNTowN1rOFt3X-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMzoyMDowNlrOFt3cZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYzNzQ5OA==", "bodyText": "Should this method be in pyflink.testing.test_case_util?", "url": "https://github.com/apache/flink/pull/11198#discussion_r383637498", "createdAt": "2020-02-25T03:15:07Z", "author": {"login": "becketqin"}, "path": "flink-python/pyflink/ml/tests/__init__.py", "diffHunk": "@@ -0,0 +1,58 @@\n+################################################################################\n+#  Licensed to the Apache Software Foundation (ASF) under one\n+#  or more contributor license agreements.  See the NOTICE file\n+#  distributed with this work for additional information\n+#  regarding copyright ownership.  The ASF licenses this file\n+#  to you under the Apache License, Version 2.0 (the\n+#  \"License\"); you may not use this file except in compliance\n+#  with the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+# limitations under the License.\n+################################################################################\n+\n+import glob\n+import os\n+import unittest\n+\n+from pyflink.testing.test_case_utils import PyFlinkTestCase\n+from pyflink.find_flink_home import _find_flink_source_root\n+\n+\n+class MLTestCase(PyFlinkTestCase):\n+    \"\"\"\n+    Base class for testing ML.\n+    \"\"\"\n+\n+    _inited = False\n+\n+    @staticmethod\n+    def _ensure_path(pattern):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2683ef7e092d4026bad2307c4cbb204aa052be1d"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYzODYyOA==", "bodyText": "Are the changes in this class relevant to the MLEnvironment and MLEnvironmentFactory?", "url": "https://github.com/apache/flink/pull/11198#discussion_r383638628", "createdAt": "2020-02-25T03:20:06Z", "author": {"login": "becketqin"}, "path": "flink-python/pyflink/table/table_environment.py", "diffHunk": "@@ -76,14 +76,24 @@ class TableEnvironment(object):\n \n     __metaclass__ = ABCMeta\n \n-    def __init__(self, j_tenv, is_blink_planner, serializer=PickleSerializer()):\n+    def __init__(self, j_tenv, serializer=PickleSerializer()):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2683ef7e092d4026bad2307c4cbb204aa052be1d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99cac2eb28fb2907b40012969ff9c7b640c91ad1", "author": {"user": {"login": "hequn8128", "name": "Hequn Cheng"}}, "url": "https://github.com/apache/flink/commit/99cac2eb28fb2907b40012969ff9c7b640c91ad1", "committedDate": "2020-02-25T10:10:00Z", "message": "address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c09a7798bf12fa375c06a06772d265bfe881ab8", "author": {"user": {"login": "hequn8128", "name": "Hequn Cheng"}}, "url": "https://github.com/apache/flink/commit/7c09a7798bf12fa375c06a06772d265bfe881ab8", "committedDate": "2020-02-25T08:01:32Z", "message": "address comments"}, "afterCommit": {"oid": "99cac2eb28fb2907b40012969ff9c7b640c91ad1", "author": {"user": {"login": "hequn8128", "name": "Hequn Cheng"}}, "url": "https://github.com/apache/flink/commit/99cac2eb28fb2907b40012969ff9c7b640c91ad1", "committedDate": "2020-02-25T10:10:00Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NTcwMDYw", "url": "https://github.com/apache/flink/pull/11198#pullrequestreview-364570060", "createdAt": "2020-02-26T01:32:59Z", "commit": {"oid": "99cac2eb28fb2907b40012969ff9c7b640c91ad1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMTozMjo1OVrOFubhdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMTozMjo1OVrOFubhdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyOTc1MQ==", "bodyText": "Looks like the ID in Java is Long type?", "url": "https://github.com/apache/flink/pull/11198#discussion_r384229751", "createdAt": "2020-02-26T01:32:59Z", "author": {"login": "walterddr"}, "path": "flink-python/pyflink/ml/ml_environment_factory.py", "diffHunk": "@@ -0,0 +1,113 @@\n+################################################################################\n+#  Licensed to the Apache Software Foundation (ASF) under one\n+#  or more contributor license agreements.  See the NOTICE file\n+#  distributed with this work for additional information\n+#  regarding copyright ownership.  The ASF licenses this file\n+#  to you under the Apache License, Version 2.0 (the\n+#  \"License\"); you may not use this file except in compliance\n+#  with the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+# limitations under the License.\n+################################################################################\n+\n+from typing import Optional\n+from pyflink.ml.ml_environment import MLEnvironment\n+from pyflink.dataset import ExecutionEnvironment\n+from pyflink.datastream import StreamExecutionEnvironment\n+from pyflink.table import BatchTableEnvironment, StreamTableEnvironment\n+from pyflink.java_gateway import get_gateway\n+import threading\n+\n+\n+class MLEnvironmentFactory:\n+    \"\"\"\n+    Factory to get the MLEnvironment using a MLEnvironmentId.\n+    \"\"\"\n+    _lock = threading.RLock()\n+    _default_ml_environment_id = 0\n+    _next_id = 1\n+    _map = {_default_ml_environment_id: None}\n+\n+    @staticmethod\n+    def get(ml_env_id: int) -> Optional[MLEnvironment]:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99cac2eb28fb2907b40012969ff9c7b640c91ad1"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4972, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}