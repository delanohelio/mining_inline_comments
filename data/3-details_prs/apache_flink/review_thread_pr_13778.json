{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MTM4NzQw", "number": 13778, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo0ODoyM1rOExU00g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo1MDo0NVrOExU3qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTU2ODgyOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo0ODoyM1rOHnZ4Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNjo1NTowOVrOHoCpoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4MDU1MQ==", "bodyText": "Couldn't you leave it as is and just request a ConnectionID from AwaitingNettyClient?", "url": "https://github.com/apache/flink/pull/13778#discussion_r511080551", "createdAt": "2020-10-23T18:48:23Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "diffHunk": "@@ -61,15 +61,23 @@\n \n \t@Test\n \tpublic void testInterruptsNotCached() throws Exception {\n-\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(InetAddress.getLocalHost(), 8080), 0);\n-\t\ttry (AwaitingNettyClient nettyClient = new AwaitingNettyClient()) {\n+\t\tfinal NettyTestUtil.NettyServerAndClient nettyServerAndClient = createNettyServerAndClient();\n+\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(\n+\t\t\tnettyServerAndClient.server().getConfig().getServerAddress(),\n+\t\t\tnettyServerAndClient.server().getConfig().getServerPort()),\n+\t\t\t0);\n+\t\ttry {\n+\t\t\tAwaitingNettyClient nettyClient = new AwaitingNettyClient(nettyServerAndClient.client());\n \t\t\tPartitionRequestClientFactory factory = new PartitionRequestClientFactory(nettyClient, 0);\n \n \t\t\tnettyClient.awaitForInterrupts = true;\n \t\t\tconnectAndInterrupt(factory, connectionId);\n \n \t\t\tnettyClient.awaitForInterrupts = false;\n \t\t\tfactory.createPartitionRequestClient(connectionId);\n+\t\t} finally {\n+\t\t\tnettyServerAndClient.client().shutdown();\n+\t\t\tnettyServerAndClient.server().shutdown();\n \t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99697b47cb57cb5a848891bfc23adc3c36f0ff04"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4NzE3OQ==", "bodyText": "I did it at first but it didn't look to me like a right abstraction (a client wrapping serverAndClient and exposing a ConnectionID).", "url": "https://github.com/apache/flink/pull/13778#discussion_r511087179", "createdAt": "2020-10-23T19:02:23Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "diffHunk": "@@ -61,15 +61,23 @@\n \n \t@Test\n \tpublic void testInterruptsNotCached() throws Exception {\n-\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(InetAddress.getLocalHost(), 8080), 0);\n-\t\ttry (AwaitingNettyClient nettyClient = new AwaitingNettyClient()) {\n+\t\tfinal NettyTestUtil.NettyServerAndClient nettyServerAndClient = createNettyServerAndClient();\n+\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(\n+\t\t\tnettyServerAndClient.server().getConfig().getServerAddress(),\n+\t\t\tnettyServerAndClient.server().getConfig().getServerPort()),\n+\t\t\t0);\n+\t\ttry {\n+\t\t\tAwaitingNettyClient nettyClient = new AwaitingNettyClient(nettyServerAndClient.client());\n \t\t\tPartitionRequestClientFactory factory = new PartitionRequestClientFactory(nettyClient, 0);\n \n \t\t\tnettyClient.awaitForInterrupts = true;\n \t\t\tconnectAndInterrupt(factory, connectionId);\n \n \t\t\tnettyClient.awaitForInterrupts = false;\n \t\t\tfactory.createPartitionRequestClient(connectionId);\n+\t\t} finally {\n+\t\t\tnettyServerAndClient.client().shutdown();\n+\t\t\tnettyServerAndClient.server().shutdown();\n \t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4MDU1MQ=="}, "originalCommit": {"oid": "99697b47cb57cb5a848891bfc23adc3c36f0ff04"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzMDc1MQ==", "bodyText": "Okay fair point. How about, keep as is, add some AwaitingNettyClient#getSocketAddress and use that to setup connectionId inside the try-with-resource block?", "url": "https://github.com/apache/flink/pull/13778#discussion_r511630751", "createdAt": "2020-10-25T18:19:06Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "diffHunk": "@@ -61,15 +61,23 @@\n \n \t@Test\n \tpublic void testInterruptsNotCached() throws Exception {\n-\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(InetAddress.getLocalHost(), 8080), 0);\n-\t\ttry (AwaitingNettyClient nettyClient = new AwaitingNettyClient()) {\n+\t\tfinal NettyTestUtil.NettyServerAndClient nettyServerAndClient = createNettyServerAndClient();\n+\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(\n+\t\t\tnettyServerAndClient.server().getConfig().getServerAddress(),\n+\t\t\tnettyServerAndClient.server().getConfig().getServerPort()),\n+\t\t\t0);\n+\t\ttry {\n+\t\t\tAwaitingNettyClient nettyClient = new AwaitingNettyClient(nettyServerAndClient.client());\n \t\t\tPartitionRequestClientFactory factory = new PartitionRequestClientFactory(nettyClient, 0);\n \n \t\t\tnettyClient.awaitForInterrupts = true;\n \t\t\tconnectAndInterrupt(factory, connectionId);\n \n \t\t\tnettyClient.awaitForInterrupts = false;\n \t\t\tfactory.createPartitionRequestClient(connectionId);\n+\t\t} finally {\n+\t\t\tnettyServerAndClient.client().shutdown();\n+\t\t\tnettyServerAndClient.server().shutdown();\n \t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4MDU1MQ=="}, "originalCommit": {"oid": "99697b47cb57cb5a848891bfc23adc3c36f0ff04"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzOTA4MQ==", "bodyText": "The part \"client wrapping serverAndClient\"\nwould still hold (and I'd like to avoid it).\nWhy do you want to stick with the current way?", "url": "https://github.com/apache/flink/pull/13778#discussion_r511639081", "createdAt": "2020-10-25T19:37:22Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "diffHunk": "@@ -61,15 +61,23 @@\n \n \t@Test\n \tpublic void testInterruptsNotCached() throws Exception {\n-\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(InetAddress.getLocalHost(), 8080), 0);\n-\t\ttry (AwaitingNettyClient nettyClient = new AwaitingNettyClient()) {\n+\t\tfinal NettyTestUtil.NettyServerAndClient nettyServerAndClient = createNettyServerAndClient();\n+\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(\n+\t\t\tnettyServerAndClient.server().getConfig().getServerAddress(),\n+\t\t\tnettyServerAndClient.server().getConfig().getServerPort()),\n+\t\t\t0);\n+\t\ttry {\n+\t\t\tAwaitingNettyClient nettyClient = new AwaitingNettyClient(nettyServerAndClient.client());\n \t\t\tPartitionRequestClientFactory factory = new PartitionRequestClientFactory(nettyClient, 0);\n \n \t\t\tnettyClient.awaitForInterrupts = true;\n \t\t\tconnectAndInterrupt(factory, connectionId);\n \n \t\t\tnettyClient.awaitForInterrupts = false;\n \t\t\tfactory.createPartitionRequestClient(connectionId);\n+\t\t} finally {\n+\t\t\tnettyServerAndClient.client().shutdown();\n+\t\t\tnettyServerAndClient.server().shutdown();\n \t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4MDU1MQ=="}, "originalCommit": {"oid": "99697b47cb57cb5a848891bfc23adc3c36f0ff04"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc0ODUxMw==", "bodyText": "I like the try-with-resource approach more - it makes the code cleaner and test easier to understand. But you'd have to move the AutoCloseable to NettyServerAndClient, which is probably out of scope here. I also now fully understand your argument.", "url": "https://github.com/apache/flink/pull/13778#discussion_r511748513", "createdAt": "2020-10-26T06:55:09Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "diffHunk": "@@ -61,15 +61,23 @@\n \n \t@Test\n \tpublic void testInterruptsNotCached() throws Exception {\n-\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(InetAddress.getLocalHost(), 8080), 0);\n-\t\ttry (AwaitingNettyClient nettyClient = new AwaitingNettyClient()) {\n+\t\tfinal NettyTestUtil.NettyServerAndClient nettyServerAndClient = createNettyServerAndClient();\n+\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(\n+\t\t\tnettyServerAndClient.server().getConfig().getServerAddress(),\n+\t\t\tnettyServerAndClient.server().getConfig().getServerPort()),\n+\t\t\t0);\n+\t\ttry {\n+\t\t\tAwaitingNettyClient nettyClient = new AwaitingNettyClient(nettyServerAndClient.client());\n \t\t\tPartitionRequestClientFactory factory = new PartitionRequestClientFactory(nettyClient, 0);\n \n \t\t\tnettyClient.awaitForInterrupts = true;\n \t\t\tconnectAndInterrupt(factory, connectionId);\n \n \t\t\tnettyClient.awaitForInterrupts = false;\n \t\t\tfactory.createPartitionRequestClient(connectionId);\n+\t\t} finally {\n+\t\t\tnettyServerAndClient.client().shutdown();\n+\t\t\tnettyServerAndClient.server().shutdown();\n \t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4MDU1MQ=="}, "originalCommit": {"oid": "99697b47cb57cb5a848891bfc23adc3c36f0ff04"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTU3MDg0OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/NettyTestUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo0OToxMFrOHnZ5vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo0OToxMFrOHnZ5vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4MDg5Mw==", "bodyText": "Add this commit before the test fix? Then you can use the method directly.", "url": "https://github.com/apache/flink/pull/13778#discussion_r511080893", "createdAt": "2020-10-23T18:49:10Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/NettyTestUtil.java", "diffHunk": "@@ -19,6 +19,7 @@\n package org.apache.flink.runtime.io.network.netty;\n \n import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.runtime.io.network.ConnectionID;\n import org.apache.flink.util.NetUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee77c062d06463064d24b4c5469dfd5bf09f529c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTU3NjA5OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo1MDo0NVrOHnZ86A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo1MDo0NVrOHnZ86A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4MTcwNA==", "bodyText": "While the commit message is quite direct, it seems a bit clumsy.\nHow about [refactor][tests][network] Cleanup PartitionRequestClientFactoryTest?", "url": "https://github.com/apache/flink/pull/13778#discussion_r511081704", "createdAt": "2020-10-23T18:50:45Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "diffHunk": "@@ -131,8 +129,6 @@ public void testNettyClientConnectRetryFailure() throws Exception {\n \n \t\t\tfactory.createPartitionRequestClient(serverAndClient.getConnectionID(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3881f36e07d498a9be32b0bd73c0838b8344dcb7"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4958, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}