{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MjA4MTE2", "number": 11533, "title": "[FLINK-16034][table-api, docs] Updated documentation with new Java Expression DSL", "bodyText": "What is the purpose of the change\nUpdated the documentation to refer only to the Expression based DSL methods instead of methods that accept expressions as a string.\nShould be merged after  #11527 as it reflects changes from that PR.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-03-26T14:33:26Z", "url": "https://github.com/apache/flink/pull/11533", "merged": true, "mergeCommit": {"oid": "51f373e296904ac77ff3701edbce9f76cb77a770"}, "closed": true, "closedAt": "2020-05-04T10:43:03Z", "author": {"login": "dawidwys"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcawaFjgFqTM5OTg3ODAzNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcd8mzBAFqTQwNDg1NTc2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5ODc4MDM3", "url": "https://github.com/apache/flink/pull/11533#pullrequestreview-399878037", "createdAt": "2020-04-24T11:53:05Z", "commit": {"oid": "72b4e58f6f7b539f14df6db00e0126acfeff8abe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMTo1MzowNVrOGLUFMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjowODoxN1rOGLUmuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxNjUyOA==", "bodyText": "extract proctime from string", "url": "https://github.com/apache/flink/pull/11533#discussion_r414516528", "createdAt": "2020-04-24T11:53:05Z", "author": {"login": "twalthr"}, "path": "docs/dev/table/streaming/temporal_tables.md", "diffHunk": "@@ -176,7 +176,7 @@ ratesHistoryData.add(Tuple2.of(\"Euro\", 119L));\n // Create and register an example table using above data set.\n // In the real setup, you should replace this with your own table.\n DataStream<Tuple2<String, Long>> ratesHistoryStream = env.fromCollection(ratesHistoryData);\n-Table ratesHistory = tEnv.fromDataStream(ratesHistoryStream, \"r_currency, r_rate, r_proctime.proctime\");\n+Table ratesHistory = tEnv.fromDataStream(ratesHistoryStream, $(\"r_currency\"), $(\"r_rate\"), $(\"r_proctime.proctime\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72b4e58f6f7b539f14df6db00e0126acfeff8abe"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxNjYwMQ==", "bodyText": "extract proctime from string", "url": "https://github.com/apache/flink/pull/11533#discussion_r414516601", "createdAt": "2020-04-24T11:53:13Z", "author": {"login": "twalthr"}, "path": "docs/dev/table/streaming/temporal_tables.zh.md", "diffHunk": "@@ -176,7 +176,7 @@ ratesHistoryData.add(Tuple2.of(\"Euro\", 119L));\n // Create and register an example table using above data set.\n // In the real setup, you should replace this with your own table.\n DataStream<Tuple2<String, Long>> ratesHistoryStream = env.fromCollection(ratesHistoryData);\n-Table ratesHistory = tEnv.fromDataStream(ratesHistoryStream, \"r_currency, r_rate, r_proctime.proctime\");\n+Table ratesHistory = tEnv.fromDataStream(ratesHistoryStream, $(\"r_currency\"), $(\"r_rate\"), $(\"r_proctime.proctime\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72b4e58f6f7b539f14df6db00e0126acfeff8abe"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxNzA5Mw==", "bodyText": "nit: new line before Tumble and proper 4 space indention?", "url": "https://github.com/apache/flink/pull/11533#discussion_r414517093", "createdAt": "2020-04-24T11:54:04Z", "author": {"login": "twalthr"}, "path": "docs/dev/table/streaming/time_attributes.md", "diffHunk": "@@ -120,19 +120,21 @@ The processing time attribute is defined with the `.proctime` property during sc\n DataStream<Tuple2<String, String>> stream = ...;\n \n // declare an additional logical field as a processing time attribute\n-Table table = tEnv.fromDataStream(stream, \"user_name, data, user_action_time.proctime\");\n+Table table = tEnv.fromDataStream(stream, $(\"user_name\"), $(\"data\"), $(\"user_action_time\").proctime()\");\n \n-WindowedTable windowedTable = table.window(Tumble.over(\"10.minutes\").on(\"user_action_time\").as(\"userActionWindow\"));\n+WindowedTable windowedTable = table.window(Tumble.over(interval(Duration.ofMinutes(10)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72b4e58f6f7b539f14df6db00e0126acfeff8abe"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxOTY1OA==", "bodyText": "new line after comma", "url": "https://github.com/apache/flink/pull/11533#discussion_r414519658", "createdAt": "2020-04-24T11:58:38Z", "author": {"login": "twalthr"}, "path": "docs/dev/table/tableApi.md", "diffHunk": "@@ -669,9 +677,14 @@ Table result = orders.groupBy(\"a\").select(\"a, b.sum as d\");\n {% highlight java %}\n Table orders = tableEnv.from(\"Orders\");\n Table result = orders\n-    .window(Tumble.over(\"5.minutes\").on(\"rowtime\").as(\"w\")) // define window\n-    .groupBy(\"a, w\") // group by key and window\n-    .select(\"a, w.start, w.end, w.rowtime, b.sum as d\"); // access window properties and aggregate\n+    .window(Tumble.over(interval(Duration.ofMinutes(5))).on($(\"rowtime\")).as(\"w\")) // define window\n+    .groupBy($(\"a\"), $(\"w\")) // group by key and window\n+    .select(\n+        $(\"a\"), $(\"w\").start(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72b4e58f6f7b539f14df6db00e0126acfeff8abe"}, "originalPosition": 245}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyMDAzMw==", "bodyText": "put comment on top of .select() call", "url": "https://github.com/apache/flink/pull/11533#discussion_r414520033", "createdAt": "2020-04-24T11:59:17Z", "author": {"login": "twalthr"}, "path": "docs/dev/table/tableApi.md", "diffHunk": "@@ -669,9 +677,14 @@ Table result = orders.groupBy(\"a\").select(\"a, b.sum as d\");\n {% highlight java %}\n Table orders = tableEnv.from(\"Orders\");\n Table result = orders\n-    .window(Tumble.over(\"5.minutes\").on(\"rowtime\").as(\"w\")) // define window\n-    .groupBy(\"a, w\") // group by key and window\n-    .select(\"a, w.start, w.end, w.rowtime, b.sum as d\"); // access window properties and aggregate\n+    .window(Tumble.over(interval(Duration.ofMinutes(5))).on($(\"rowtime\")).as(\"w\")) // define window\n+    .groupBy($(\"a\"), $(\"w\")) // group by key and window\n+    .select(\n+        $(\"a\"), $(\"w\").start(),\n+        $(\"w\").end(),\n+        $(\"w\").rowtime(),\n+        $(\"b\").sum().as(\"d\")\n+    ); // access window properties and aggregate", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72b4e58f6f7b539f14df6db00e0126acfeff8abe"}, "originalPosition": 249}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyMDI0Nw==", "bodyText": "new line after comma", "url": "https://github.com/apache/flink/pull/11533#discussion_r414520247", "createdAt": "2020-04-24T11:59:42Z", "author": {"login": "twalthr"}, "path": "docs/dev/table/tableApi.md", "diffHunk": "@@ -686,13 +699,17 @@ Table result = orders\n Table orders = tableEnv.from(\"Orders\");\n Table result = orders\n     // define window\n-    .window(Over  \n-      .partitionBy(\"a\")\n-      .orderBy(\"rowtime\")\n-      .preceding(\"UNBOUNDED_RANGE\")\n-      .following(\"CURRENT_RANGE\")\n+    .window(Over\n+      .partitionBy($(\"a\"))\n+      .orderBy($(\"rowtime\"))\n+      .preceding(UNBOUNDED_RANGE)\n+      .following(CURRENT_RANGE)\n       .as(\"w\"))\n-    .select(\"a, b.avg over w, b.max over w, b.min over w\"); // sliding aggregate\n+    .select(\n+        $(\"a\"), $(\"b\").avg().over($(\"w\")),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72b4e58f6f7b539f14df6db00e0126acfeff8abe"}, "originalPosition": 270}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyMDg0Ng==", "bodyText": "nit: newline before Over?", "url": "https://github.com/apache/flink/pull/11533#discussion_r414520846", "createdAt": "2020-04-24T12:00:52Z", "author": {"login": "twalthr"}, "path": "docs/dev/table/tableApi.md", "diffHunk": "@@ -807,13 +837,13 @@ val result: Table = orders\n val orders: Table = tableEnv.from(\"Orders\")\n val result: Table = orders\n     // define window\n-    .window(Over  \n-      partitionBy 'a\n-      orderBy 'rowtime\n+    .window(Over", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72b4e58f6f7b539f14df6db00e0126acfeff8abe"}, "originalPosition": 357}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyMTcxMg==", "bodyText": "$(\"r_currency\")", "url": "https://github.com/apache/flink/pull/11533#discussion_r414521712", "createdAt": "2020-04-24T12:02:27Z", "author": {"login": "twalthr"}, "path": "docs/dev/table/tableApi.md", "diffHunk": "@@ -1124,7 +1164,7 @@ tableEnv.registerFunction(\"rates\", rates);\n // join with \"Orders\" based on the time attribute and key\n Table orders = tableEnv.from(\"Orders\");\n Table result = orders\n-    .joinLateral(\"rates(o_proctime)\", \"o_currency = r_currency\")\n+    .joinLateral(call(\"rates\", $(\"o_proctime\")), $(\"o_currency\").isEqual(\"r_currency\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72b4e58f6f7b539f14df6db00e0126acfeff8abe"}, "originalPosition": 486}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNDY5Nw==", "bodyText": "dollar", "url": "https://github.com/apache/flink/pull/11533#discussion_r414524697", "createdAt": "2020-04-24T12:07:38Z", "author": {"login": "twalthr"}, "path": "docs/dev/table/tableApi.zh.md", "diffHunk": "@@ -72,7 +75,7 @@ result.print();\n \n The Scala Table API is enabled by importing `org.apache.flink.api.scala._` and `org.apache.flink.table.api.scala._`.\n \n-The following example shows how a Scala Table API program is constructed. Table attributes are referenced using [Scala Symbols](http://scala-lang.org/files/archive/spec/2.12/01-lexical-syntax.html#symbol-literals), which start with an apostrophe character (`'`).\n+The following example shows how a Scala Table API program is constructed. Table fields are referenced using Scala's String interpolation using a dolar character (`$`).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72b4e58f6f7b539f14df6db00e0126acfeff8abe"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNTExMg==", "bodyText": "as \"cnt\"?", "url": "https://github.com/apache/flink/pull/11533#discussion_r414525112", "createdAt": "2020-04-24T12:08:17Z", "author": {"login": "twalthr"}, "path": "docs/dev/table/tableApi.zh.md", "diffHunk": "@@ -90,8 +93,8 @@ val tEnv = BatchTableEnvironment.create(env)\n val orders = tEnv.from(\"Orders\") // schema (a, b, c, rowtime)\n \n val result = orders\n-               .groupBy('a)\n-               .select('a, 'b.count as 'cnt)\n+               .groupBy($\"a\")\n+               .select($\"a\", $\"b\".count as $\"cnt\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72b4e58f6f7b539f14df6db00e0126acfeff8abe"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9195291a0fed93f850b06cb25a07edb080ce919e", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/9195291a0fed93f850b06cb25a07edb080ce919e", "committedDate": "2020-04-28T07:20:32Z", "message": "[FLINK-16034][table-api, docs] Updated documentation with new Java\nExpression DSL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6ccd8b00f778a01a826126c0b05075eae376c57", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/d6ccd8b00f778a01a826126c0b05075eae376c57", "committedDate": "2020-04-28T08:40:52Z", "message": "Comments addressed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72b4e58f6f7b539f14df6db00e0126acfeff8abe", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/72b4e58f6f7b539f14df6db00e0126acfeff8abe", "committedDate": "2020-03-26T14:24:35Z", "message": "[FLINK-16034][table-api, docs] Updated documentation with new Java\nExpression DSL"}, "afterCommit": {"oid": "d6ccd8b00f778a01a826126c0b05075eae376c57", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/d6ccd8b00f778a01a826126c0b05075eae376c57", "committedDate": "2020-04-28T08:40:52Z", "message": "Comments addressed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0ODU1NzYy", "url": "https://github.com/apache/flink/pull/11533#pullrequestreview-404855762", "createdAt": "2020-05-04T10:06:34Z", "commit": {"oid": "d6ccd8b00f778a01a826126c0b05075eae376c57"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2593, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}