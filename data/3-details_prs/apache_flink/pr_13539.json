{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3Mzk5NjE5", "number": 13539, "title": "[FLINK-19027][network] Assign exclusive buffers to LocalRecoveredInputChannel.", "bodyText": "What is the purpose of the change\nIf a local channel does not receive a buffer during recovery, a live lock may occur where the local channel cannot recover because it is waiting for a buffer but upstream operators are fully backpressured and cannot release a buffer.\nIt's important to treat LocalRecoveredInputChannel like RemoteInputChannels and assign exclusive buffers for recovery to avoid this situation.\nBrief change log\n\nAssign exclusive buffers to LocalRecoveredInputChannel.\nEnsure SingleInputGateTest does not swallow exceptions during cleanup.\nRevert #13532 as the test failure actually revealed the live lock.\n\nVerifying this change\nAdjusted a few unit tests.\nAlready covered and reveleaed by UnalignedCheckpointITCase.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-10-04T08:57:06Z", "url": "https://github.com/apache/flink/pull/13539", "merged": true, "mergeCommit": {"oid": "61a997364b020b44bd26df76208e76106c6390b5"}, "closed": true, "closedAt": "2020-10-06T11:24:49Z", "author": {"login": "AHeise"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPLUw0ABqjM4MzczNjA5MzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPzoK2AFqTUwMjY3MzUyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eedd7a3306e030cdd2b9997c0df55e0b81c4d38e", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/eedd7a3306e030cdd2b9997c0df55e0b81c4d38e", "committedDate": "2020-10-04T08:53:57Z", "message": "Revert [FLINK-19027][tests] Decrease checkpoint timeout to avoid livelocking in UnalignedCheckpointITCase.\n\nThe failing test actually revealed an edge case during recovery with local channels."}, "afterCommit": {"oid": "524d380a3d1811870ffce75b4d149f3d8cf38392", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/524d380a3d1811870ffce75b4d149f3d8cf38392", "committedDate": "2020-10-04T08:57:34Z", "message": "Revert [FLINK-19027][tests] Decrease checkpoint timeout to avoid livelocking in UnalignedCheckpointITCase.\n\nThe failing test actually revealed an edge case during recovery with local channels."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e323c52a6ec080f95dcfa9adfe83b110838ff16", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/0e323c52a6ec080f95dcfa9adfe83b110838ff16", "committedDate": "2020-10-04T18:09:35Z", "message": "[FLINK-19027][network] Assign exclusive buffers to RecoveredRemoteInputChannels only when recovering channel state.\n\nCurrently, exclusive buffers are assigned to all RecoveredRemoteInputChannels on construction, even though the channel may not read any data at all (aligned checkpoint, start from savepoint, start without checkpoint, etc.).\n\nWith this commit, buffers are only assigned when state is actually recovered."}, "afterCommit": {"oid": "e7851e95b95667b7a12fc9495155416f2b9574d2", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/e7851e95b95667b7a12fc9495155416f2b9574d2", "committedDate": "2020-10-04T18:11:29Z", "message": "Revert [FLINK-19027][tests] Decrease checkpoint timeout to avoid livelocking in UnalignedCheckpointITCase.\n\nThe failing test actually revealed an edge case during recovery with local channels."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2f6f5d87c16a6de3f7240d1f0ff7f2a44d2b2ce", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/f2f6f5d87c16a6de3f7240d1f0ff7f2a44d2b2ce", "committedDate": "2020-10-04T19:34:41Z", "message": "fixup! [FLINK-19027][network] Assign exclusive buffers to RecoveredRemoteInputChannels only when recovering channel state."}, "afterCommit": {"oid": "9e2afb6339296312216da63a5b751a5233bb7614", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/9e2afb6339296312216da63a5b751a5233bb7614", "committedDate": "2020-10-04T19:36:44Z", "message": "Revert [FLINK-19027][tests] Decrease checkpoint timeout to avoid livelocking in UnalignedCheckpointITCase.\n\nThe failing test actually revealed an edge case during recovery with local channels."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNzYwNzA2", "url": "https://github.com/apache/flink/pull/13539#pullrequestreview-501760706", "createdAt": "2020-10-05T06:51:38Z", "commit": {"oid": "f4fafbd875e938ead5b538bbc1e500472f1a58c1"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNjo1MTozOFrOHcPfiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNzowODozOVrOHcP50g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3NjAxMQ==", "bodyText": "Did you remove awaitTermination and close calls?", "url": "https://github.com/apache/flink/pull/13539#discussion_r499376011", "createdAt": "2020-10-05T06:51:38Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/SingleInputGateTest.java", "diffHunk": "@@ -217,15 +221,11 @@ public void testConcurrentReadStateAndProcessAndClose() throws Exception {\n \t\t\t\t}\n \t\t\t};\n \n-\t\t\tsubmitTasksAndWaitForResults(executor, new Callable[] {closeTask, readRecoveredStateTask, processStateTask});\n-\t\t} finally {\n-\t\t\texecutor.shutdown();\n+\t\t\texecutor.invokeAll(Arrays.asList(closeTask, readRecoveredStateTask, processStateTask));\n+\n \t\t\t// wait until the internal channel state recover task finishes\n-\t\t\texecutor.awaitTermination(60, TimeUnit.SECONDS);\n \t\t\tassertEquals(totalBuffers, environment.getNetworkBufferPool().getNumberOfAvailableMemorySegments());\n \t\t\tassertTrue(inputGate.getCloseFuture().isDone());\n-\n-\t\t\tenvironment.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fafbd875e938ead5b538bbc1e500472f1a58c1"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3NjQ4Mw==", "bodyText": "Change first commit message to:\n\n[FLINK-19027][test][network] Ensure SingleInputGateTest does not swallow exceptions during cleanup.\n\n?", "url": "https://github.com/apache/flink/pull/13539#discussion_r499376483", "createdAt": "2020-10-05T06:52:50Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/SingleInputGateTest.java", "diffHunk": "@@ -59,26 +59,27 @@\n import org.apache.flink.runtime.shuffle.ShuffleDescriptor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fafbd875e938ead5b538bbc1e500472f1a58c1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3OTAwMQ==", "bodyText": "Why is this change relevant to the fix? Could you add some explanation to the commit message?", "url": "https://github.com/apache/flink/pull/13539#discussion_r499379001", "createdAt": "2020-10-05T06:59:11Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/SingleInputGate.java", "diffHunk": "@@ -247,7 +248,18 @@ public void setup() throws IOException {\n \t}\n \n \t@Override\n-\tpublic CompletableFuture<?> readRecoveredState(ExecutorService executor, ChannelStateReader reader) {\n+\tpublic CompletableFuture<?> readRecoveredState(ExecutorService executor, ChannelStateReader reader) throws IOException {\n+\t\tsynchronized (requestLock) {\n+\t\t\tif (closeFuture.isDone()) {\n+\t\t\t\treturn FutureUtils.completedVoidFuture();\n+\t\t\t}\n+\t\t\tfor (InputChannel inputChannel : inputChannels.values()) {\n+\t\t\t\tif (inputChannel instanceof RemoteRecoveredInputChannel) {\n+\t\t\t\t\t((RemoteRecoveredInputChannel) inputChannel).assignExclusiveSegments();\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81a54f6daa2ab03d404ec53a32f7c2ece7ce56cd"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4MjczOA==", "bodyText": "I'm not sure if I understand this bug and the fix. Why is allocating exclusive buffers for LocalRecoveredInputChannel fixing the problem? Isn't it just reducing the window for the live lock to happen? What if downstream tasks are scheduled with a significant delay (exclusive buffers assignment happens after upstream tasks already acquired lot's of buffers).\nIn other words, Isn't this a semi fix for this bug https://issues.apache.org/jira/browse/FLINK-13203", "url": "https://github.com/apache/flink/pull/13539#discussion_r499382738", "createdAt": "2020-10-05T07:08:39Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/LocalRecoveredInputChannel.java", "diffHunk": "@@ -42,8 +42,17 @@\n \t\t\tTaskEventPublisher taskEventPublisher,\n \t\t\tint initialBackOff,\n \t\t\tint maxBackoff,\n+\t\t\tint networkBuffersPerChannel,\n \t\t\tInputChannelMetrics metrics) {\n-\t\tsuper(inputGate, channelIndex, partitionId, initialBackOff, maxBackoff, metrics.getNumBytesInLocalCounter(), metrics.getNumBuffersInLocalCounter());\n+\t\tsuper(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d024a2f9e35958173143b16457bee0ae4acf4c7c"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dda8bcfa7c326ccc4af76e303edd205a1b282a6e", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/dda8bcfa7c326ccc4af76e303edd205a1b282a6e", "committedDate": "2020-10-05T14:19:29Z", "message": "[FLINK-19027][test][network] Ensure SingleInputGateTest does not swallow exceptions during cleanup.\n\nIf any cleanup method fails, the original exception was swallowed. This commit uses try-with-resources with Guava's Closer to ensure that cleanup exception only appear as surpressed exceptions in case of test failures.\nNote that the cleanup order needs to be reversed as Closer closes in reversed order."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9e2508ddd1a37d59b0c352ceda75dc4e63df906", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/c9e2508ddd1a37d59b0c352ceda75dc4e63df906", "committedDate": "2020-10-05T14:19:55Z", "message": "[FLINK-19027][test][network] Set exclusive and floating buffers in UnalignedCheckpointITCase.\n\nThis commit will amend the original build instability, but future commit will still ensure that a job will not livelock with a tight memory configuration."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63cd3002b634c164d63b641c21863d68bda485be", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/63cd3002b634c164d63b641c21863d68bda485be", "committedDate": "2020-10-05T14:19:57Z", "message": "[FLINK-19027][network] Only assign exclusive buffers to RecoveredRemoteInputChannels when recovering channel state.\n\nCurrently, exclusive buffers are assigned to all RecoveredRemoteInputChannels on construction, even though the channel may not read any data at all (aligned checkpoint, start from savepoint, start without checkpoint, etc.). The upcoming fix for the livelock assigns exclusive buffers also to local input channels, such that without the lazy initialization of this commit, tight memory configurations will not work anymore even if no channel state needs to be recovered at all.\n\nWith this commit, buffers are only assigned when state is actually recovered."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d4e06b9a9bd2b123286fdda136cdadd10a57440", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/1d4e06b9a9bd2b123286fdda136cdadd10a57440", "committedDate": "2020-10-05T14:21:16Z", "message": "[FLINK-19027][network] Assign exclusive buffers to LocalRecoveredInputChannel.\n\nIf a local channel does not receive a buffer during recovery, a live lock may occur where the local channel cannot recover because it is waiting for a buffer but upstream operators are fully backpressured and cannot release a buffer.\nIt's important to treat LocalRecoveredInputChannel like RemoteInputChannels and assign exclusive buffers for recovery to avoid this situation.\n\nNote that due to FLINK-13203, it still possible to run into the livelock if the sink is deployed after upstream tasks take all buffers. However, it's a) much more unlikely and b) if FLINK-13203 gets resolved, this will then automatically also fix it for recovery."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52830dff69c113aeb1a53a1cbe3fd859c7863a60", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/52830dff69c113aeb1a53a1cbe3fd859c7863a60", "committedDate": "2020-10-05T14:21:16Z", "message": "Revert [FLINK-19027][tests] Decrease checkpoint timeout to avoid livelocking in UnalignedCheckpointITCase.\n\nThe failing test actually revealed an edge case during recovery with local channels."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96354db06c002f4cd9935f026cf468a5def461aa", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/96354db06c002f4cd9935f026cf468a5def461aa", "committedDate": "2020-10-05T14:12:33Z", "message": "[FLINK-19027][test][network] Set exclusive and floating buffers in UnalignedCheckpointITCase.\n\nThis commit will amend the original build instability, but future commit will still ensure that a job will not livelock with a tight memory configuration."}, "afterCommit": {"oid": "8c708c2846b29be724f0185f4ef3fba9643e9bf2", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/8c708c2846b29be724f0185f4ef3fba9643e9bf2", "committedDate": "2020-10-05T14:21:08Z", "message": "fixup! [FLINK-19027][network] Assign exclusive buffers to LocalRecoveredInputChannel."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c708c2846b29be724f0185f4ef3fba9643e9bf2", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/8c708c2846b29be724f0185f4ef3fba9643e9bf2", "committedDate": "2020-10-05T14:21:08Z", "message": "fixup! [FLINK-19027][network] Assign exclusive buffers to LocalRecoveredInputChannel."}, "afterCommit": {"oid": "52830dff69c113aeb1a53a1cbe3fd859c7863a60", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/52830dff69c113aeb1a53a1cbe3fd859c7863a60", "committedDate": "2020-10-05T14:21:16Z", "message": "Revert [FLINK-19027][tests] Decrease checkpoint timeout to avoid livelocking in UnalignedCheckpointITCase.\n\nThe failing test actually revealed an edge case during recovery with local channels."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNjczNTI5", "url": "https://github.com/apache/flink/pull/13539#pullrequestreview-502673529", "createdAt": "2020-10-06T07:55:08Z", "commit": {"oid": "52830dff69c113aeb1a53a1cbe3fd859c7863a60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3686, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}