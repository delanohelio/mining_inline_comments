{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NTM5NDIy", "number": 12659, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDoxOTowMFrOEFjpFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDoxOToxM1rOEFjpcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjYyMjkyOnYy", "diffSide": "RIGHT", "path": "flink-core/src/main/java/org/apache/flink/configuration/MetricOptions.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDoxOTowMVrOGj0SIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODozODoyOFrOGj-IMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIwOTk1Mw==", "bodyText": "looks like a breaking API change", "url": "https://github.com/apache/flink/pull/12659#discussion_r440209953", "createdAt": "2020-06-15T14:19:01Z", "author": {"login": "azagrebin"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/MetricOptions.java", "diffHunk": "@@ -58,9 +61,10 @@\n \t\t\t.noDefaultValue()\n \t\t\t.withDescription(\"The reporter class to use for the reporter named <name>.\");\n \n-\tpublic static final ConfigOption<String> REPORTER_INTERVAL =\n+\tpublic static final ConfigOption<Duration> REPORTER_INTERVAL =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e510e251e90283480acb3a041c03cf38de94fe9a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzMDMyNA==", "bodyText": "irrelevant in this case since the option cannot be really used as other config options anyway.", "url": "https://github.com/apache/flink/pull/12659#discussion_r440230324", "createdAt": "2020-06-15T14:47:10Z", "author": {"login": "zentol"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/MetricOptions.java", "diffHunk": "@@ -58,9 +61,10 @@\n \t\t\t.noDefaultValue()\n \t\t\t.withDescription(\"The reporter class to use for the reporter named <name>.\");\n \n-\tpublic static final ConfigOption<String> REPORTER_INTERVAL =\n+\tpublic static final ConfigOption<Duration> REPORTER_INTERVAL =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIwOTk1Mw=="}, "originalCommit": {"oid": "e510e251e90283480acb3a041c03cf38de94fe9a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTI0OQ==", "bodyText": "it will be actually backwards compatible as we use TimeUtils#parseDuration for parsing.", "url": "https://github.com/apache/flink/pull/12659#discussion_r440371249", "createdAt": "2020-06-15T18:38:28Z", "author": {"login": "azagrebin"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/MetricOptions.java", "diffHunk": "@@ -58,9 +61,10 @@\n \t\t\t.noDefaultValue()\n \t\t\t.withDescription(\"The reporter class to use for the reporter named <name>.\");\n \n-\tpublic static final ConfigOption<String> REPORTER_INTERVAL =\n+\tpublic static final ConfigOption<Duration> REPORTER_INTERVAL =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIwOTk1Mw=="}, "originalCommit": {"oid": "e510e251e90283480acb3a041c03cf38de94fe9a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjYyMzg1OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/MetricRegistryImpl.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDoxOToxM1rOGj0SrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoyMDo0M1rOGj9i3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIxMDA5Mw==", "bodyText": "maybe milliseconds are more secure to use?", "url": "https://github.com/apache/flink/pull/12659#discussion_r440210093", "createdAt": "2020-06-15T14:19:13Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/MetricRegistryImpl.java", "diffHunk": "@@ -119,7 +120,7 @@ public MetricRegistryImpl(MetricRegistryConfiguration config, Collection<Reporte\n \t\t\t\ttry {\n \t\t\t\t\tOptional<String> configuredPeriod = reporterSetup.getIntervalSettings();\n \t\t\t\t\tTimeUnit timeunit = TimeUnit.SECONDS;\n-\t\t\t\t\tlong period = 10;\n+\t\t\t\t\tlong period = MetricOptions.REPORTER_INTERVAL.defaultValue().getSeconds();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e510e251e90283480acb3a041c03cf38de94fe9a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzMDg0NQ==", "bodyText": "unlikely; and sub-second interval will just overload whatever external system you have.", "url": "https://github.com/apache/flink/pull/12659#discussion_r440230845", "createdAt": "2020-06-15T14:47:54Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/MetricRegistryImpl.java", "diffHunk": "@@ -119,7 +120,7 @@ public MetricRegistryImpl(MetricRegistryConfiguration config, Collection<Reporte\n \t\t\t\ttry {\n \t\t\t\t\tOptional<String> configuredPeriod = reporterSetup.getIntervalSettings();\n \t\t\t\t\tTimeUnit timeunit = TimeUnit.SECONDS;\n-\t\t\t\t\tlong period = 10;\n+\t\t\t\t\tlong period = MetricOptions.REPORTER_INTERVAL.defaultValue().getSeconds();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIxMDA5Mw=="}, "originalCommit": {"oid": "e510e251e90283480acb3a041c03cf38de94fe9a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0NDg1OA==", "bodyText": "What would be more secure about it?", "url": "https://github.com/apache/flink/pull/12659#discussion_r440344858", "createdAt": "2020-06-15T17:49:29Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/MetricRegistryImpl.java", "diffHunk": "@@ -119,7 +120,7 @@ public MetricRegistryImpl(MetricRegistryConfiguration config, Collection<Reporte\n \t\t\t\ttry {\n \t\t\t\t\tOptional<String> configuredPeriod = reporterSetup.getIntervalSettings();\n \t\t\t\t\tTimeUnit timeunit = TimeUnit.SECONDS;\n-\t\t\t\t\tlong period = 10;\n+\t\t\t\t\tlong period = MetricOptions.REPORTER_INTERVAL.defaultValue().getSeconds();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIxMDA5Mw=="}, "originalCommit": {"oid": "e510e251e90283480acb3a041c03cf38de94fe9a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM0OTQ3MA==", "bodyText": "Are you referring to https://issues.apache.org/jira/browse/FLINK-18310?", "url": "https://github.com/apache/flink/pull/12659#discussion_r440349470", "createdAt": "2020-06-15T17:57:44Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/MetricRegistryImpl.java", "diffHunk": "@@ -119,7 +120,7 @@ public MetricRegistryImpl(MetricRegistryConfiguration config, Collection<Reporte\n \t\t\t\ttry {\n \t\t\t\t\tOptional<String> configuredPeriod = reporterSetup.getIntervalSettings();\n \t\t\t\t\tTimeUnit timeunit = TimeUnit.SECONDS;\n-\t\t\t\t\tlong period = 10;\n+\t\t\t\t\tlong period = MetricOptions.REPORTER_INTERVAL.defaultValue().getSeconds();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIxMDA5Mw=="}, "originalCommit": {"oid": "e510e251e90283480acb3a041c03cf38de94fe9a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2MTY5Mg==", "bodyText": "generally, milliseconds have more precision and should not hurt to use", "url": "https://github.com/apache/flink/pull/12659#discussion_r440361692", "createdAt": "2020-06-15T18:20:43Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/MetricRegistryImpl.java", "diffHunk": "@@ -119,7 +120,7 @@ public MetricRegistryImpl(MetricRegistryConfiguration config, Collection<Reporte\n \t\t\t\ttry {\n \t\t\t\t\tOptional<String> configuredPeriod = reporterSetup.getIntervalSettings();\n \t\t\t\t\tTimeUnit timeunit = TimeUnit.SECONDS;\n-\t\t\t\t\tlong period = 10;\n+\t\t\t\t\tlong period = MetricOptions.REPORTER_INTERVAL.defaultValue().getSeconds();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIxMDA5Mw=="}, "originalCommit": {"oid": "e510e251e90283480acb3a041c03cf38de94fe9a"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4290, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}