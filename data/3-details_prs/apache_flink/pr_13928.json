{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NDU4MTIy", "number": 13928, "title": "[hotfix] Do not emit EndOfChannelRecoveryEvent for Approximate Local \u2026", "bodyText": "\u2026Recovery\nWhat is the purpose of the change\nThis PR is to disable emitting EndOfChannelRecoveryEvent for Approximate Local Recovery. EndOfChannelRecoveryEvent is introduced in [FLINK-19856][network] Emit EndOfChannelRecoveryEvent.\nThere is a problem if only part of the graph (not the entire graph) is restarted:\nsource  -> map (1/2) -> sink\n-> map (2/2) ->\nLet's say map(1/2) fails and only \"map (1/2) -> sink\" would restart. There is no way map (2/2) can send the EndOfChannelRecoveryEvent to the sink, because map (2/2)'s produced partition does not fail.\nIn this case, sink would fail to send resume consumption notification back to map (1/2) because it waits for map (2/2) to send the EndOfChannelRecoveryEvent, which will never happen.\nBrief change log\nOverride finishReadRecoveredState method in PipelinedApproximateSubpartition to do nothing.\nVerifying this change\nITCase\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)", "createdAt": "2020-11-04T15:25:05Z", "url": "https://github.com/apache/flink/pull/13928", "merged": true, "mergeCommit": {"oid": "f3964a902a50d0801f3d91bd920c8272b456c764"}, "closed": true, "closedAt": "2020-11-05T09:02:27Z", "author": {"login": "curcur"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZPNxxAH2gAyNTE1NDU4MTIyOmYzMDhjYzVkMDQ4NjZjM2VkZWI5NWRhY2MzZjJhMTk5NDE0NGM4YWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZegjXgFqTUyNDA0NjU4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f308cc5d04866c3edeb95dacc3f2a1994144c8ab", "author": {"user": {"login": "curcur", "name": "Yuan Mei"}}, "url": "https://github.com/apache/flink/commit/f308cc5d04866c3edeb95dacc3f2a1994144c8ab", "committedDate": "2020-11-04T15:08:58Z", "message": "[hotfix] Do not emit EndOfChannelRecoveryEvent for Approximate Local Recovery"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDc2NDI1", "url": "https://github.com/apache/flink/pull/13928#pullrequestreview-523476425", "createdAt": "2020-11-04T15:33:14Z", "commit": {"oid": "f308cc5d04866c3edeb95dacc3f2a1994144c8ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTozMzoxNVrOHtdeYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTozMzoxNVrOHtdeYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQzMDg4Mg==", "bodyText": "Another option would be to pass false to the existing method from StreamTask, as it's done for iterative jobs:\nprivate void readRecoveredChannelState() throws IOException, InterruptedException {\n    reader.readOutputData(getEnvironment().getAllWriters(), !configuration.isGraphContainingLoops());\n\nIn the end, I think we'll need a check that we are either not using approximate recovery or not rescaling with UC.\nIt would probably be more consistent and easier to implement with the 2nd approach.\nWDYT?\nThe check itself can be added to JM after we compute virtual mappings (cc: @AHeise).", "url": "https://github.com/apache/flink/pull/13928#discussion_r517430882", "createdAt": "2020-11-04T15:33:15Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/PipelinedApproximateSubpartition.java", "diffHunk": "@@ -92,6 +94,11 @@ private void releaseView() {\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic void finishReadRecoveredState(boolean notifyAndBlockOnCompletion) throws IOException {\n+\t\t// The Approximate Local Recovery can not work with unaligned checkpoint for now, so no need to recover channel state", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f308cc5d04866c3edeb95dacc3f2a1994144c8ab"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MDQ2NTg3", "url": "https://github.com/apache/flink/pull/13928#pullrequestreview-524046587", "createdAt": "2020-11-05T08:58:03Z", "commit": {"oid": "f308cc5d04866c3edeb95dacc3f2a1994144c8ab"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4790, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}