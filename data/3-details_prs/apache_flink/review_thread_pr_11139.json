{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MTQzOTAx", "number": 11139, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozMjo0N1rODhDWjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODo0NzoyOFrODjvHdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTg0NTI0OnYy", "diffSide": "RIGHT", "path": "flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozMjo0N1rOFrmYBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMjozMjo0N1rOFrmYBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI2MTgyOQ==", "bodyText": "any better exception type?", "url": "https://github.com/apache/flink/pull/11139#discussion_r381261829", "createdAt": "2020-02-19T12:32:47Z", "author": {"login": "AHeise"}, "path": "flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java", "diffHunk": "@@ -440,8 +455,18 @@ public static FileSystem getUnguardedFileSystem(final URI fsUri) throws IOExcept\n \t\t\t\ttry (TemporaryClassLoaderContext classLoaderContext = new TemporaryClassLoaderContext(classLoader)) {\n \t\t\t\t\tfs = factory.create(uri);\n \t\t\t\t}\n-\t\t\t}\n-\t\t\telse {\n+\t\t\t} else if (DIRECTLY_SUPPORTED_FILESYSTEM.containsKey(uri.getScheme())) {\n+\t\t\t\tfinal Collection<String> plugins = DIRECTLY_SUPPORTED_FILESYSTEM.get(uri.getScheme());\n+\t\t\t\tthrow new UnsupportedFileSystemSchemeException(String.format(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c550a19361c90006b335dc954b7ae0c3b176e7a1"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTIwNzcyOnYy", "diffSide": "RIGHT", "path": "flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODo1NTo1NVrOFrziVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODo1NTo1NVrOFrziVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3NzQ2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\t\".org/projects/flink/flink-docs-master/ops/plugins.html for more information.\",\n          \n          \n            \n            \t\t\t\t\t\t\".org/projects/flink/flink-docs-stable/ops/plugins.html for more information.\",", "url": "https://github.com/apache/flink/pull/11139#discussion_r381477460", "createdAt": "2020-02-19T18:55:55Z", "author": {"login": "zentol"}, "path": "flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java", "diffHunk": "@@ -440,8 +455,18 @@ public static FileSystem getUnguardedFileSystem(final URI fsUri) throws IOExcept\n \t\t\t\ttry (TemporaryClassLoaderContext classLoaderContext = new TemporaryClassLoaderContext(classLoader)) {\n \t\t\t\t\tfs = factory.create(uri);\n \t\t\t\t}\n-\t\t\t}\n-\t\t\telse {\n+\t\t\t} else if (DIRECTLY_SUPPORTED_FILESYSTEM.containsKey(uri.getScheme())) {\n+\t\t\t\tfinal Collection<String> plugins = DIRECTLY_SUPPORTED_FILESYSTEM.get(uri.getScheme());\n+\t\t\t\tthrow new UnsupportedFileSystemSchemeException(String.format(\n+\t\t\t\t\t\"Could not find a file system implementation for scheme '%s'. The scheme is \" +\n+\t\t\t\t\t\t\"directly supported by Flink through the following plugin%s: %s. Please ensure that each \" +\n+\t\t\t\t\t\t\"plugin resides within its own subfolder within the plugins directory. See https://ci.apache\" +\n+\t\t\t\t\t\t\".org/projects/flink/flink-docs-master/ops/plugins.html for more information.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c550a19361c90006b335dc954b7ae0c3b176e7a1"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTIwNzc4OnYy", "diffSide": "RIGHT", "path": "flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODo1NTo1NlrOFrziXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwODo1NToyMlrOFsK4eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3NzQ2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\t\"directly supported by Flink through the following plugin%s: %s. Please ensure that each \" +\n          \n          \n            \n            \t\t\t\t\t\t\"directly supported by Flink through the following plugin%: %s. Please ensure that each \" +", "url": "https://github.com/apache/flink/pull/11139#discussion_r381477468", "createdAt": "2020-02-19T18:55:56Z", "author": {"login": "zentol"}, "path": "flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java", "diffHunk": "@@ -440,8 +455,18 @@ public static FileSystem getUnguardedFileSystem(final URI fsUri) throws IOExcept\n \t\t\t\ttry (TemporaryClassLoaderContext classLoaderContext = new TemporaryClassLoaderContext(classLoader)) {\n \t\t\t\t\tfs = factory.create(uri);\n \t\t\t\t}\n-\t\t\t}\n-\t\t\telse {\n+\t\t\t} else if (DIRECTLY_SUPPORTED_FILESYSTEM.containsKey(uri.getScheme())) {\n+\t\t\t\tfinal Collection<String> plugins = DIRECTLY_SUPPORTED_FILESYSTEM.get(uri.getScheme());\n+\t\t\t\tthrow new UnsupportedFileSystemSchemeException(String.format(\n+\t\t\t\t\t\"Could not find a file system implementation for scheme '%s'. The scheme is \" +\n+\t\t\t\t\t\t\"directly supported by Flink through the following plugin%s: %s. Please ensure that each \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c550a19361c90006b335dc954b7ae0c3b176e7a1"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg1OTk2MA==", "bodyText": "This line would add an s if there multiple plugins (s3).", "url": "https://github.com/apache/flink/pull/11139#discussion_r381859960", "createdAt": "2020-02-20T08:55:22Z", "author": {"login": "AHeise"}, "path": "flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java", "diffHunk": "@@ -440,8 +455,18 @@ public static FileSystem getUnguardedFileSystem(final URI fsUri) throws IOExcept\n \t\t\t\ttry (TemporaryClassLoaderContext classLoaderContext = new TemporaryClassLoaderContext(classLoader)) {\n \t\t\t\t\tfs = factory.create(uri);\n \t\t\t\t}\n-\t\t\t}\n-\t\t\telse {\n+\t\t\t} else if (DIRECTLY_SUPPORTED_FILESYSTEM.containsKey(uri.getScheme())) {\n+\t\t\t\tfinal Collection<String> plugins = DIRECTLY_SUPPORTED_FILESYSTEM.get(uri.getScheme());\n+\t\t\t\tthrow new UnsupportedFileSystemSchemeException(String.format(\n+\t\t\t\t\t\"Could not find a file system implementation for scheme '%s'. The scheme is \" +\n+\t\t\t\t\t\t\"directly supported by Flink through the following plugin%s: %s. Please ensure that each \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3NzQ2OA=="}, "originalCommit": {"oid": "c550a19361c90006b335dc954b7ae0c3b176e7a1"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Nzk4NzA4OnYy", "diffSide": "RIGHT", "path": "flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwODo0NzoyOFrOFvtaCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjoyNzoxOVrOFvzU8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU3MTMzOQ==", "bodyText": "I'm not sure if I like the DIRECTLY_SUPPORTED_FILESYSTEM list, since if it drifts out of sync, it can start decreasing the usability.\nMaybe as a way to mitigate this issue, we should add a reference to https://ci.apache.org/projects/flink/flink-docs-stable/ops/filesystems/ for further/more precise  informations?", "url": "https://github.com/apache/flink/pull/11139#discussion_r385571339", "createdAt": "2020-02-28T08:47:28Z", "author": {"login": "pnowojski"}, "path": "flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java", "diffHunk": "@@ -440,8 +467,21 @@ public static FileSystem getUnguardedFileSystem(final URI fsUri) throws IOExcept\n \t\t\t\ttry (TemporaryClassLoaderContext ignored = TemporaryClassLoaderContext.of(classLoader)) {\n \t\t\t\t\tfs = factory.create(uri);\n \t\t\t\t}\n-\t\t\t}\n-\t\t\telse {\n+\t\t\t} else if (!ALLOWED_FALLBACK_FILESYSTEMS.contains(uri.getScheme()) &&\n+\t\t\t\t\tDIRECTLY_SUPPORTED_FILESYSTEM.containsKey(uri.getScheme())) {\n+\t\t\t\tfinal Collection<String> plugins = DIRECTLY_SUPPORTED_FILESYSTEM.get(uri.getScheme());\n+\t\t\t\tthrow new UnsupportedFileSystemSchemeException(String.format(\n+\t\t\t\t\t\"Could not find a file system implementation for scheme '%s'. The scheme is \" +\n+\t\t\t\t\t\t\"directly supported by Flink through the following plugin%s: %s. Please ensure that each \" +\n+\t\t\t\t\t\t\"plugin resides within its own subfolder within the plugins directory. See https://ci.apache\" +\n+\t\t\t\t\t\t\".org/projects/flink/flink-docs-stable/ops/plugins.html for more information. If you want to \" +\n+\t\t\t\t\t\t\"use a Hadoop file system for that scheme, please add the scheme to the configuration fs\" +\n+\t\t\t\t\t\t\".allowed-fallback-filesystems.\",\n+\t\t\t\t\t\turi.getScheme(),\n+\t\t\t\t\t\tplugins.size() == 1 ? \"\" : \"s\",\n+\t\t\t\t\t\tString.join(\", \", plugins)\n+\t\t\t\t\t));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc656c0e56d0c8389953803fb6172cda1f87662"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2ODMzOQ==", "bodyText": "Added reference.", "url": "https://github.com/apache/flink/pull/11139#discussion_r385668339", "createdAt": "2020-02-28T12:27:19Z", "author": {"login": "AHeise"}, "path": "flink-core/src/main/java/org/apache/flink/core/fs/FileSystem.java", "diffHunk": "@@ -440,8 +467,21 @@ public static FileSystem getUnguardedFileSystem(final URI fsUri) throws IOExcept\n \t\t\t\ttry (TemporaryClassLoaderContext ignored = TemporaryClassLoaderContext.of(classLoader)) {\n \t\t\t\t\tfs = factory.create(uri);\n \t\t\t\t}\n-\t\t\t}\n-\t\t\telse {\n+\t\t\t} else if (!ALLOWED_FALLBACK_FILESYSTEMS.contains(uri.getScheme()) &&\n+\t\t\t\t\tDIRECTLY_SUPPORTED_FILESYSTEM.containsKey(uri.getScheme())) {\n+\t\t\t\tfinal Collection<String> plugins = DIRECTLY_SUPPORTED_FILESYSTEM.get(uri.getScheme());\n+\t\t\t\tthrow new UnsupportedFileSystemSchemeException(String.format(\n+\t\t\t\t\t\"Could not find a file system implementation for scheme '%s'. The scheme is \" +\n+\t\t\t\t\t\t\"directly supported by Flink through the following plugin%s: %s. Please ensure that each \" +\n+\t\t\t\t\t\t\"plugin resides within its own subfolder within the plugins directory. See https://ci.apache\" +\n+\t\t\t\t\t\t\".org/projects/flink/flink-docs-stable/ops/plugins.html for more information. If you want to \" +\n+\t\t\t\t\t\t\"use a Hadoop file system for that scheme, please add the scheme to the configuration fs\" +\n+\t\t\t\t\t\t\".allowed-fallback-filesystems.\",\n+\t\t\t\t\t\turi.getScheme(),\n+\t\t\t\t\t\tplugins.size() == 1 ? \"\" : \"s\",\n+\t\t\t\t\t\tString.join(\", \", plugins)\n+\t\t\t\t\t));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU3MTMzOQ=="}, "originalCommit": {"oid": "dfc656c0e56d0c8389953803fb6172cda1f87662"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 960, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}