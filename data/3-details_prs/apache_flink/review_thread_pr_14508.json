{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2MTEzNDI1", "number": 14508, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzoxMjozOVrOFKPJJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNzoxNDo0MVrOFLkrbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Mjc4MTgwOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzoxMjozOVrOIM6p4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzoxMjozOVrOIM6p4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQxNDgxOQ==", "bodyText": "Please use a field to store the value of allowUnescapedControlChars because it determines the behaviour of this class. If one instances set this field false and another instances set this field true, the equal method should return false.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550414819", "createdAt": "2020-12-31T07:12:39Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "diffHunk": "@@ -90,6 +92,10 @@ public JsonRowDataDeserializationSchema(\n         if (hasDecimalType) {\n             objectMapper.enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);\n         }\n+        if (allowUnescapedControlChars) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjgwMTAwOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonFormatFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzoyNzoxMFrOIM6zaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzoyNzoxMFrOIM6zaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQxNzI1Nw==", "bodyText": "Please add this option into the method optionalOptions", "url": "https://github.com/apache/flink/pull/14508#discussion_r550417257", "createdAt": "2020-12-31T07:27:10Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonFormatFactory.java", "diffHunk": "@@ -65,6 +66,7 @@\n         final boolean failOnMissingField = formatOptions.get(FAIL_ON_MISSING_FIELD);\n         final boolean ignoreParseErrors = formatOptions.get(IGNORE_PARSE_ERRORS);\n         TimestampFormat timestampOption = JsonOptions.getTimestampFormat(formatOptions);\n+        final boolean allowUnescapedControlChars = formatOptions.get(ALLOW_UNESCAPED_CONTROL_CHARS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjgxMzUwOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDeserializationSchema.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzozNzoxOVrOIM65wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzozNzoxOVrOIM65wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQxODg4MQ==", "bodyText": "Currently the community is moving to the new descriptor api. It not recommended to add new feature for the depricated api.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550418881", "createdAt": "2020-12-31T07:37:19Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDeserializationSchema.java", "diffHunk": "@@ -114,18 +118,22 @@ private JsonRowDeserializationSchema(\n         if (hasDecimalType) {\n             objectMapper.enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);\n         }\n+        if (allowUnescapedControlChars) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjgyNjYzOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonFormatFactoryTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzo0NzowN1rOIM7Aaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzo0NzowN1rOIM7Aaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMDU4Nw==", "bodyText": "Please use true as input . Because the default value of the option is false.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550420587", "createdAt": "2020-12-31T07:47:07Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonFormatFactoryTest.java", "diffHunk": "@@ -154,7 +168,8 @@ private void testSchemaDeserializationSchema(Map<String, String> options) {\n                         InternalTypeInfo.of(ROW_TYPE),\n                         false,\n                         true,\n-                        TimestampFormat.ISO_8601);\n+                        TimestampFormat.ISO_8601,\n+                        false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjgzMDQ4OnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzo0OTo1M1rOIM7CTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzo0OTo1M1rOIM7CTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMTA2OQ==", "bodyText": "Maybe we can simplify to\nobjectMapper.configure(\n                    JsonReadFeature.ALLOW_UNESCAPED_CONTROL_CHARS.mappedFeature(), allowUnescapedControlChars);", "url": "https://github.com/apache/flink/pull/14508#discussion_r550421069", "createdAt": "2020-12-31T07:49:53Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "diffHunk": "@@ -90,6 +92,10 @@ public JsonRowDataDeserializationSchema(\n         if (hasDecimalType) {\n             objectMapper.enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);\n         }\n+        if (allowUnescapedControlChars) {\n+            objectMapper.configure(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Mjg0NDAzOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowFormatFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODowMToxNFrOIM7JhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODowMToxNFrOIM7JhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMjkxNw==", "bodyText": "Currently the community is moving to the new descriptor api. It not recommended to add new feature for the depricated api.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550422917", "createdAt": "2020-12-31T08:01:14Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowFormatFactory.java", "diffHunk": "@@ -79,6 +79,14 @@ public JsonRowFormatFactory() {\n                                 schema.ignoreParseErrors();\n                             }\n                         });\n+        descriptorProperties", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Mjg1MjQwOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/table/descriptors/JsonValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODowNzo0OFrOIM7N5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODowNzo0OFrOIM7N5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyNDAzOA==", "bodyText": "Please don't add new feature for the old descriptor api.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550424038", "createdAt": "2020-12-31T08:07:48Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/table/descriptors/JsonValidator.java", "diffHunk": "@@ -56,6 +58,7 @@ public void validate(DescriptorProperties properties) {\n \n         properties.validateBoolean(FORMAT_FAIL_ON_MISSING_FIELD, true);\n         properties.validateBoolean(FORMAT_IGNORE_PARSE_ERRORS, true);\n+        properties.validateBoolean(FORMAT_ALLOW_UNESCAPED_CONTROL_CHARS, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Mjg3Mzc4OnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODoyNDo0MlrOIM7ZWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODoyNDo0MlrOIM7ZWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyNjk3MA==", "bodyText": "I think we can add .expectErrorMessage(..) to also check the failed situation.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550426970", "createdAt": "2020-12-31T08:24:42Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java", "diffHunk": "@@ -700,7 +727,10 @@ private void testParseErrors(TestSpec spec) throws Exception {\n                                     \"Failed to deserialize JSON '{\\\"id\\\":\\\"2019-11-12T18:00:12+0800\\\"}'.\"),\n                     TestSpec.json(\"{\\\"id\\\":1,\\\"factor\\\":799.929496989092949698}\")\n                             .rowType(ROW(FIELD(\"id\", INT()), FIELD(\"factor\", DECIMAL(38, 18))))\n-                            .expect(Row.of(1, new BigDecimal(\"799.929496989092949698\"))));\n+                            .expect(Row.of(1, new BigDecimal(\"799.929496989092949698\"))),\n+                    TestSpec.json(\"{\\\"id\\\":\\\"\\tstring field\\\"}\")\n+                            .rowType(ROW(FIELD(\"id\", STRING())))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Mjg4MzQ5OnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonDeserializationSchema.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODozMToyMVrOIM7eXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODozMToyMVrOIM7eXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyODI1NA==", "bodyText": "Please use fields to store the value of the allowUnescapedControlChars and timestampFormat .", "url": "https://github.com/apache/flink/pull/14508#discussion_r550428254", "createdAt": "2020-12-31T08:31:21Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonDeserializationSchema.java", "diffHunk": "@@ -105,7 +106,8 @@ private CanalJsonDeserializationSchema(\n                         false, // ignoreParseErrors already contains the functionality of\n                         // failOnMissingField\n                         ignoreParseErrors,\n-                        timestampFormat);\n+                        timestampFormat,\n+                        allowUnescapedControlChars);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Mjg5NjI0OnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/debezium/DebeziumJsonDeserializationSchema.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODo0MDo1NFrOIM7lRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODo0MDo1NFrOIM7lRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQzMDAyMg==", "bodyText": "ditto", "url": "https://github.com/apache/flink/pull/14508#discussion_r550430022", "createdAt": "2020-12-31T08:40:54Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/debezium/DebeziumJsonDeserializationSchema.java", "diffHunk": "@@ -94,7 +94,8 @@ public DebeziumJsonDeserializationSchema(\n             TypeInformation<RowData> producedTypeInfo,\n             boolean schemaInclude,\n             boolean ignoreParseErrors,\n-            TimestampFormat timestampFormat) {\n+            TimestampFormat timestampFormat,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Mjg5NzQwOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/maxwell/MaxwellJsonDeserializationSchema.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODo0MTozN1rOIM7l0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODo0MTozN1rOIM7l0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQzMDE2MQ==", "bodyText": "ditto", "url": "https://github.com/apache/flink/pull/14508#discussion_r550430161", "createdAt": "2020-12-31T08:41:37Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/maxwell/MaxwellJsonDeserializationSchema.java", "diffHunk": "@@ -70,7 +70,8 @@ public MaxwellJsonDeserializationSchema(\n             RowType rowType,\n             TypeInformation<RowData> resultTypeInfo,\n             boolean ignoreParseErrors,\n-            TimestampFormat timestampFormatOption) {\n+            TimestampFormat timestampFormatOption,\n+            boolean allowUnescapedControlChars) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjkwMTY3OnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/maxwell/MaxwellJsonFormatFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODo0NDo0NVrOIM7oEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODo0NDo0NVrOIM7oEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQzMDczNw==", "bodyText": "Please add this option into the optionalOptions.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550430737", "createdAt": "2020-12-31T08:44:45Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/maxwell/MaxwellJsonFormatFactory.java", "diffHunk": "@@ -43,6 +43,7 @@\n import java.util.HashSet;\n import java.util.Set;\n \n+import static org.apache.flink.formats.json.maxwell.MaxwellJsonOptions.ALLOW_UNESCAPED_CONTROL_CHARS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjkwNTMyOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/debezium/DebeziumJsonFormatFactoryTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODo0Njo1MVrOIM7p3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODo0Njo1MVrOIM7p3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQzMTE5Nw==", "bodyText": "use true to test.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550431197", "createdAt": "2020-12-31T08:46:51Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/debezium/DebeziumJsonFormatFactoryTest.java", "diffHunk": "@@ -134,7 +135,8 @@ public void testSchemaIncludeOption() {\n                         InternalTypeInfo.of(PHYSICAL_DATA_TYPE.getLogicalType()),\n                         true,\n                         true,\n-                        TimestampFormat.ISO_8601);\n+                        TimestampFormat.ISO_8601,\n+                        false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjkwNjk0OnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/maxwell/MaxwellJsonFormatFactoryTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODo0Nzo1NlrOIM7qvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODo0Nzo1NlrOIM7qvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQzMTQyMQ==", "bodyText": "use true .", "url": "https://github.com/apache/flink/pull/14508#discussion_r550431421", "createdAt": "2020-12-31T08:47:56Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/maxwell/MaxwellJsonFormatFactoryTest.java", "diffHunk": "@@ -67,7 +67,11 @@\n     public void testSeDeSchema() {\n         final MaxwellJsonDeserializationSchema expectedDeser =\n                 new MaxwellJsonDeserializationSchema(\n-                        ROW_TYPE, InternalTypeInfo.of(ROW_TYPE), true, TimestampFormat.ISO_8601);\n+                        ROW_TYPE,\n+                        InternalTypeInfo.of(ROW_TYPE),\n+                        true,\n+                        TimestampFormat.ISO_8601,\n+                        false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzQyOTMyOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMTo1MzoxNlrOIOUcjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMTo1MzoxNlrOIOUcjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg4NTk2NQ==", "bodyText": "Please add comments to explain when  ignore-parse-error will fail.", "url": "https://github.com/apache/flink/pull/14508#discussion_r551885965", "createdAt": "2021-01-05T11:53:16Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "diffHunk": "@@ -85,11 +90,15 @@ public JsonRowDataDeserializationSchema(\n                 new JsonToRowDataConverters(failOnMissingField, ignoreParseErrors, timestampFormat)\n                         .createConverter(checkNotNull(rowType));\n         this.timestampFormat = timestampFormat;\n+        this.allowUnescapedControlChars = allowUnescapedControlChars;\n         boolean hasDecimalType =\n                 LogicalTypeChecks.hasNested(rowType, t -> t instanceof DecimalType);\n         if (hasDecimalType) {\n             objectMapper.enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);\n         }\n+        objectMapper.configure(\n+                JsonReadFeature.ALLOW_UNESCAPED_CONTROL_CHARS.mappedFeature(),\n+                allowUnescapedControlChars);\n     }\n \n     @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c368105103600ccab7f5bf473f3e879ed2168c2c"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Njc3MTM4OnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNzowMToxNVrOIO0AJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNzowMToxNVrOIO0AJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQwMjk4MQ==", "bodyText": "This comment is hard to understand. Why exception will be thrown when ignoreParseErrors is enabled.", "url": "https://github.com/apache/flink/pull/14508#discussion_r552402981", "createdAt": "2021-01-06T07:01:15Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "diffHunk": "@@ -85,16 +90,22 @@ public JsonRowDataDeserializationSchema(\n                 new JsonToRowDataConverters(failOnMissingField, ignoreParseErrors, timestampFormat)\n                         .createConverter(checkNotNull(rowType));\n         this.timestampFormat = timestampFormat;\n+        this.allowUnescapedControlChars = allowUnescapedControlChars;\n         boolean hasDecimalType =\n                 LogicalTypeChecks.hasNested(rowType, t -> t instanceof DecimalType);\n         if (hasDecimalType) {\n             objectMapper.enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);\n         }\n+        objectMapper.configure(\n+                JsonReadFeature.ALLOW_UNESCAPED_CONTROL_CHARS.mappedFeature(),\n+                allowUnescapedControlChars);\n     }\n \n     @Override\n     public RowData deserialize(byte[] message) throws IOException {\n         try {\n+            // it will return null if `ignoreParseErrors` is true\n+            // and when executing `objectMapper.readTree(message)` throw an exception.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6054e046fda054e8459cd7ff4ca7d4df3fa7b74c"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Njc4MzkzOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNzowODoxMVrOIO0HmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNzowODoxMVrOIO0HmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQwNDg4OQ==", "bodyText": "I think for the control chars configuration, we can add a separate test method. This can avoid to touch so many TestSpecs. The TestSpec is used to verify the general deserializing and serializing.", "url": "https://github.com/apache/flink/pull/14508#discussion_r552404889", "createdAt": "2021-01-06T07:08:11Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java", "diffHunk": "@@ -692,15 +727,27 @@ private void testParseErrors(TestSpec spec) throws Exception {\n                                     \"Failed to deserialize JSON '{\\\"map\\\":{\\\"key1\\\":\\\"123\\\", \\\"key2\\\":\\\"abc\\\"}}'.\"),\n                     TestSpec.json(\"{\\\"id\\\":\\\"2019-11-12T18:00:12\\\"}\")\n                             .rowType(ROW(FIELD(\"id\", TIMESTAMP_WITH_LOCAL_TIME_ZONE(0))))\n+                            .expect(new Row(1))\n                             .expectErrorMessage(\n                                     \"Failed to deserialize JSON '{\\\"id\\\":\\\"2019-11-12T18:00:12\\\"}'.\"),\n                     TestSpec.json(\"{\\\"id\\\":\\\"2019-11-12T18:00:12+0800\\\"}\")\n                             .rowType(ROW(FIELD(\"id\", TIMESTAMP_WITH_LOCAL_TIME_ZONE(0))))\n+                            .expect(new Row(1))\n                             .expectErrorMessage(\n                                     \"Failed to deserialize JSON '{\\\"id\\\":\\\"2019-11-12T18:00:12+0800\\\"}'.\"),\n                     TestSpec.json(\"{\\\"id\\\":1,\\\"factor\\\":799.929496989092949698}\")\n                             .rowType(ROW(FIELD(\"id\", INT()), FIELD(\"factor\", DECIMAL(38, 18))))\n-                            .expect(Row.of(1, new BigDecimal(\"799.929496989092949698\"))));\n+                            .expect(Row.of(1, new BigDecimal(\"799.929496989092949698\"))),\n+                    TestSpec.json(\"{\\\"id\\\":\\\"\\tstring field\\\"}\")\n+                            .rowType(ROW(FIELD(\"id\", STRING())))\n+                            .expect(Row.of(\"\tstring field\")),\n+                    TestSpec.json(\"{\\\"id\\\":\\\"\\tstring field\\\"}\")\n+                            .rowType(ROW(FIELD(\"id\", STRING())))\n+                            .expect(null) // it will return null when deserializing the byte[] to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6054e046fda054e8459cd7ff4ca7d4df3fa7b74c"}, "originalPosition": 237}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Njc4ODkyOnYy", "diffSide": "RIGHT", "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNzoxMTowNFrOIO0Kow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNzoxMTowNFrOIO0Kow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQwNTY2Nw==", "bodyText": "The parameters are super large. Could you refactor it into builder pattern? Just like CsvRowDataDeserializationSchema. This can reduce the effort to add a new parameter in the future.", "url": "https://github.com/apache/flink/pull/14508#discussion_r552405667", "createdAt": "2021-01-06T07:11:04Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "diffHunk": "@@ -68,12 +69,16 @@\n     /** Timestamp format specification which is used to parse timestamp. */\n     private final TimestampFormat timestampFormat;\n \n+    /** Flag indicating whether to allow unescaped control chars in the data. */\n+    private final boolean allowUnescapedControlChars;\n+\n     public JsonRowDataDeserializationSchema(\n             RowType rowType,\n             TypeInformation<RowData> resultTypeInfo,\n             boolean failOnMissingField,\n             boolean ignoreParseErrors,\n-            TimestampFormat timestampFormat) {\n+            TimestampFormat timestampFormat,\n+            boolean allowUnescapedControlChars) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6054e046fda054e8459cd7ff4ca7d4df3fa7b74c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Njc5MTg2OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/connectors/formats/maxwell.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNzoxMjozNlrOIO0MRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNzoxMjozNlrOIO0MRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQwNjA4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  <td>\u662f\u5426\u5141\u8bb8\u6570\u636e\u4e2d\u5b58\u5728\u672a\u8f6c\u4e49\u7684\u63a7\u5236\u5b57\u7b26\uff08\u503c\u5c0f\u4e8e32\u7684ASCII\u5b57\u7b26\uff0c\u5305\u62ec\u5236\u8868\u7b26\u548c\u6362\u884c\u7b26\uff09\uff0c\u82e5\u4e0d\u5141\u8bb8\uff0c\u89e3\u6790\u65f6\u4f1a\u629b\u51fa\u5f02\u5e38`Illegal unquoted character...`</td>\n          \n          \n            \n                  <td>\u662f\u5426\u5141\u8bb8\u6570\u636e\u4e2d\u5b58\u5728\u672a\u8f6c\u4e49\u7684\u63a7\u5236\u5b57\u7b26\uff08\u503c\u5c0f\u4e8e32\u7684ASCII\u5b57\u7b26\uff0c\u5305\u62ec\u5236\u8868\u7b26\u548c\u6362\u884c\u7b26\uff09\uff0c\u82e5\u4e0d\u5141\u8bb8\uff0c\u89e3\u6790\u65f6\u4f1a\u629b\u51fa\u5f02\u5e38<code>Illegal unquoted character...</code></td>\n          \n      \n    \n    \n  \n\nWe have to use <code> tags in table HTML, otherwise, it can be recognized. Please update others too.", "url": "https://github.com/apache/flink/pull/14508#discussion_r552406084", "createdAt": "2021-01-06T07:12:36Z", "author": {"login": "wuchong"}, "path": "docs/dev/table/connectors/formats/maxwell.zh.md", "diffHunk": "@@ -187,6 +188,13 @@ Format Options\n       <td>String</td>\n       <td>Specify string literal to replace null key when <code>'maxwell-json.map-null-key.mode'</code> is LITERAL.</td>\n     </tr>\n+    <tr>\n+      <td><h5>maxwell-json.allow-unescaped-control-chars</h5></td>\n+      <td>\u9009\u586b</td>\n+      <td style=\"word-wrap: break-word;\">false</td>\n+      <td>Boolean</td>\n+      <td>\u662f\u5426\u5141\u8bb8\u6570\u636e\u4e2d\u5b58\u5728\u672a\u8f6c\u4e49\u7684\u63a7\u5236\u5b57\u7b26\uff08\u503c\u5c0f\u4e8e32\u7684ASCII\u5b57\u7b26\uff0c\u5305\u62ec\u5236\u8868\u7b26\u548c\u6362\u884c\u7b26\uff09\uff0c\u82e5\u4e0d\u5141\u8bb8\uff0c\u89e3\u6790\u65f6\u4f1a\u629b\u51fa\u5f02\u5e38`Illegal unquoted character...`</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6054e046fda054e8459cd7ff4ca7d4df3fa7b74c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Njc5NTk3OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/connectors/formats/maxwell.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNzoxNDo0MVrOIO0Osw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNzoxNDo0MVrOIO0Osw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQwNjcwNw==", "bodyText": "This is very confusing. Does it skip the message or return null or set field to null???", "url": "https://github.com/apache/flink/pull/14508#discussion_r552406707", "createdAt": "2021-01-06T07:14:41Z", "author": {"login": "wuchong"}, "path": "docs/dev/table/connectors/formats/maxwell.md", "diffHunk": "@@ -152,8 +152,9 @@ Format Options\n       <td>optional</td>\n       <td style=\"word-wrap: break-word;\">false</td>\n       <td>Boolean</td>\n-      <td>Skip fields and rows with parse errors instead of failing.\n-      Fields are set to null in case of errors.</td>\n+      <td>Skip parse errors instead of failing. \n+      This message will be ignored and returned <code>null</code> when deserializing the <code>byte[]</code> to the <code>JsonNode</code> fails.(e.g the message with invalid json format, the message contains unescaped control characters) \n+      Otherwise fields are set to null in case of errors.</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6054e046fda054e8459cd7ff4ca7d4df3fa7b74c"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4588, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}