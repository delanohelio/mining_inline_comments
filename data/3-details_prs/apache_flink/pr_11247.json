{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwOTA4OTc1", "number": 11247, "title": "[FLINK-16262][Connectors] Set the context classloader for parallel stream in FlinkKafkaProducer", "bodyText": "What is the purpose of the change\nSet the context classloader of the parrallel stream with the context classloader of task thread.\nBrief change log\n\nRetrieve the classloader of the task and set the classloader for the parallel stream\n\nVerifying this change\nThis change is a trivial rework / code cleanup without any test coverage.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)", "createdAt": "2020-02-27T15:21:08Z", "url": "https://github.com/apache/flink/pull/11247", "merged": true, "mergeCommit": {"oid": "ff0d0c979d7cf67648ecf91850e782e99d557240"}, "closed": true, "closedAt": "2020-03-28T13:22:58Z", "author": {"login": "guoweiM"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIcybdAH2gAyMzgwOTA4OTc1OmZmNTI5M2E4ZjM5YWFlZjdhNDU3ZTk3MjBmNzE3NGUxOTgyYTkyOGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQZ_U6AFqTM3OTIxMTg2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ff5293a8f39aaef7a457e9720f7174e1982a928d", "author": {"user": {"login": "guoweiM", "name": "guowei.mgw"}}, "url": "https://github.com/apache/flink/commit/ff5293a8f39aaef7a457e9720f7174e1982a928d", "committedDate": "2020-02-27T15:09:54Z", "message": "[FLINK-16262][Connectors] Set the context classloader for parallel stream in FlinkKafkaProducer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1OTc4NTk1", "url": "https://github.com/apache/flink/pull/11247#pullrequestreview-365978595", "createdAt": "2020-02-27T20:34:15Z", "commit": {"oid": "ff5293a8f39aaef7a457e9720f7174e1982a928d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozNDoxNVrOFvgSKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDozNDoxNVrOFvgSKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1NjMyOA==", "bodyText": "Please add a comment that parallelStream executes the consumer in a separate thread pool.\nAt a glance this context can easily appear as a no-op if you miss that parallelStream is used and what the semantics of it are.", "url": "https://github.com/apache/flink/pull/11247#discussion_r385356328", "createdAt": "2020-02-27T20:34:15Z", "author": {"login": "zentol"}, "path": "flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/streaming/connectors/kafka/FlinkKafkaProducer.java", "diffHunk": "@@ -1095,18 +1096,21 @@ private void resetAvailableTransactionalIdsPool(Collection<String> transactional\n \t// ----------------------------------- Utilities --------------------------\n \n \tprivate void abortTransactions(final Set<String> transactionalIds) {\n+\t\tfinal ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n \t\ttransactionalIds.parallelStream().forEach(transactionalId -> {\n-\t\t\t// don't mess with the original configuration or any other properties of the\n-\t\t\t// original object\n-\t\t\t// -> create an internal kafka producer on our own and do not rely on\n-\t\t\t//    initTransactionalProducer().\n-\t\t\tfinal Properties myConfig = new Properties();\n-\t\t\tmyConfig.putAll(producerConfig);\n-\t\t\tinitTransactionalProducerConfig(myConfig, transactionalId);\n-\t\t\ttry (FlinkKafkaInternalProducer<byte[], byte[]> kafkaProducer =\n-\t\t\t\t\tnew FlinkKafkaInternalProducer<>(myConfig)) {\n-\t\t\t\t// it suffices to call initTransactions - this will abort any lingering transactions\n-\t\t\t\tkafkaProducer.initTransactions();\n+\t\t\ttry (TemporaryClassLoaderContext ignored = TemporaryClassLoaderContext.of(classLoader)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff5293a8f39aaef7a457e9720f7174e1982a928d"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fd63bfdc08cba777c9f476de7b0f7cbeddf294f", "author": {"user": {"login": "guoweiM", "name": "guowei.mgw"}}, "url": "https://github.com/apache/flink/commit/4fd63bfdc08cba777c9f476de7b0f7cbeddf294f", "committedDate": "2020-02-28T02:19:29Z", "message": "add some comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2843e7da6dacf7869b570049a769826e4a4673be", "author": {"user": {"login": "guoweiM", "name": "guowei.mgw"}}, "url": "https://github.com/apache/flink/commit/2843e7da6dacf7869b570049a769826e4a4673be", "committedDate": "2020-02-28T03:10:15Z", "message": "remove .swo file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MjUxNTQ2", "url": "https://github.com/apache/flink/pull/11247#pullrequestreview-367251546", "createdAt": "2020-03-02T14:44:08Z", "commit": {"oid": "2843e7da6dacf7869b570049a769826e4a4673be"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MjExODYy", "url": "https://github.com/apache/flink/pull/11247#pullrequestreview-379211862", "createdAt": "2020-03-23T08:25:40Z", "commit": {"oid": "2843e7da6dacf7869b570049a769826e4a4673be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3288, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}