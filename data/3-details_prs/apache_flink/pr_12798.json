{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNTQ0NjU1", "number": 12798, "title": "[FLINK-16087][docs-zh] Translate \"Detecting Patterns\" page of \"Streaming Concepts\" into Chinese", "bodyText": "What is the purpose of the change\nTranslate \"Detecting Patterns\" page of \"Streaming Concepts\" into Chinese\nUpdate links in docs/dev/table/streaming/match_recognize.md according to  FLINK-18193 .\nBrief change log\n\n\nTranslate \"Detecting Patterns\" page of \"Streaming Concepts\" into Chinese\n\n\nRecorrect links of \"interval joins\" in this page whose path is flink/docs/dev/table/streaming/match_recognize.zh.md\n\n\nUpdate links in docs/dev/table/streaming/match_recognize.md according to  FLINK-18193 .\n\n\nVerifying this change\nThis change is a trivial rework / code cleanup without any test coverage.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive):no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? not applicable", "createdAt": "2020-07-01T08:52:16Z", "url": "https://github.com/apache/flink/pull/12798", "merged": true, "mergeCommit": {"oid": "cf99a83fdf13d17d5eb37b78c93952a8013f4eaa"}, "closed": true, "closedAt": "2020-07-17T03:58:56Z", "author": {"login": "RocMarshal"}, "timelineItems": {"totalCount": 50, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcw8zkugFqTQ0MTUxNDMxOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1rsibAFqTQ1MDM1NzM1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTE0MzE4", "url": "https://github.com/apache/flink/pull/12798#pullrequestreview-441514318", "createdAt": "2020-07-02T09:37:05Z", "commit": {"oid": "527265656bc37900ee79357233697fde8ce88b0e"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTozNzowNVrOGsFRww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMDoxNzoyNVrOGsGqOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg3Njk5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4e00\u4e2a `MATCH_RECOGNIZE` \u5b50\u53e5\u542f\u7528\u4ee5\u4e0b\u4efb\u52a1\uff1a\n          \n          \n            \n            `MATCH_RECOGNIZE` \u5b50\u53e5\u542f\u7528\u4ee5\u4e0b\u4efb\u52a1\uff1a", "url": "https://github.com/apache/flink/pull/12798#discussion_r448876995", "createdAt": "2020-07-02T09:37:05Z", "author": {"login": "XBaith"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -24,28 +24,17 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-It is a common use case to search for a set of event patterns, especially in case of data streams.\n-Flink comes with a [complex event processing (CEP) library]({{ site.baseurl }}/dev/libs/cep.html)\n-which allows for pattern detection in event streams. Furthermore, Flink's SQL API provides a\n-relational way of expressing queries with a large set of built-in functions and rule-based\n-optimizations that can be used out of the box.\n-\n-In December 2016, the International Organization for Standardization (ISO) released a new version\n-of the SQL standard which includes _Row Pattern Recognition in SQL_\n-([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip)).\n-It allows Flink to consolidate CEP and SQL API using the `MATCH_RECOGNIZE` clause for complex event\n-processing in SQL.\n-\n-A `MATCH_RECOGNIZE` clause enables the following tasks:\n-* Logically partition and order the data that is used with the `PARTITION BY` and `ORDER BY`\n-  clauses.\n-* Define patterns of rows to seek using the `PATTERN` clause. These patterns use a syntax similar to\n-  that of regular expressions.\n-* The logical components of the row pattern variables are specified in the `DEFINE` clause.\n-* Define measures, which are expressions usable in other parts of the SQL query, in the `MEASURES`\n-  clause.\n-\n-The following example illustrates the syntax for basic pattern recognition:\n+\u641c\u7d22\u4e00\u7ec4\u4e8b\u4ef6\u6a21\u5f0f\uff08event pattern\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u4f8b\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u6d41\u7684\u60c5\u51b5\u4e0b\u3002Flink \u63d0\u4f9b [\u590d\u6742\u4e8b\u4ef6\u5904\u7406\uff08CEP\uff09\u5e93]({% link dev/libs/cep.zh.md %})\uff0c\u8be5\u5e93\u5141\u8bb8\u5728\u4e8b\u4ef6\u6d41\u4e2d\u8fdb\u884c\u6a21\u5f0f\u68c0\u6d4b\u3002\u6b64\u5916\uff0cFlink \u7684 SQL API \u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u7cfb\u5f0f\u7684\u67e5\u8be2\u8868\u8fbe\u65b9\u5f0f\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u5927\u7ec4\u5185\u7f6e\u51fd\u6570\u548c\u57fa\u4e8e\u89c4\u5219\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002\n+\n+2016\u5e7412\u6708\uff0c\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\uff08ISO\uff09\u53d1\u5e03\u4e86\u65b0\u7248\u672c\u7684 SQL \u6807\u51c6\uff0c\u5176\u4e2d\u5305\u62ec\u5728 _SQL \u4e2d\u7684\u884c\u6a21\u5f0f\u8bc6\u522b\uff08Row Pattern Recognition in SQL\uff09_([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip))\u3002\u5b83\u5141\u8bb8 Flink \u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\u878d\u5408 CEP \u548c SQL API\uff0c\u4ee5\u4fbf\u5728 SQL \u4e2d\u8fdb\u884c\u590d\u6742\u4e8b\u4ef6\u5904\u7406\u3002\n+\n+\u4e00\u4e2a `MATCH_RECOGNIZE` \u5b50\u53e5\u542f\u7528\u4ee5\u4e0b\u4efb\u52a1\uff1a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527265656bc37900ee79357233697fde8ce88b0e"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4NTE1NQ==", "bodyText": "\u8be5\u53e5\u7ffb\u8bd1\u662f\u6211\u7684\u4e2a\u4eba\u7406\u89e3\uff0c\u53ef\u80fd\u5e76\u4e0d\u5b8c\u5168\u6b63\u786e\u3002\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * \u5728 `MEASURES` \u5b50\u53e5\u4e2d\u5b9a\u4e49\u53ef\u7528\u4e8e SQL \u67e5\u8be2\u5176\u4ed6\u90e8\u5206\u7684\u8868\u8fbe\u5f0f measures\u3002\n          \n          \n            \n            * measures \u662f\u6307\u5728 `MEASURES` \u5b50\u53e5\u4e2d\u5b9a\u4e49\u7684\u8868\u8fbe\u5f0f\uff0c\u8fd9\u4e9b\u8868\u8fbe\u5f0f\u53ef\u7528\u5728 SQL \u67e5\u8be2\u4e2d\u7684\u5176\u4ed6\u90e8\u5206\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r448885155", "createdAt": "2020-07-02T09:50:52Z", "author": {"login": "XBaith"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -24,28 +24,17 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-It is a common use case to search for a set of event patterns, especially in case of data streams.\n-Flink comes with a [complex event processing (CEP) library]({{ site.baseurl }}/dev/libs/cep.html)\n-which allows for pattern detection in event streams. Furthermore, Flink's SQL API provides a\n-relational way of expressing queries with a large set of built-in functions and rule-based\n-optimizations that can be used out of the box.\n-\n-In December 2016, the International Organization for Standardization (ISO) released a new version\n-of the SQL standard which includes _Row Pattern Recognition in SQL_\n-([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip)).\n-It allows Flink to consolidate CEP and SQL API using the `MATCH_RECOGNIZE` clause for complex event\n-processing in SQL.\n-\n-A `MATCH_RECOGNIZE` clause enables the following tasks:\n-* Logically partition and order the data that is used with the `PARTITION BY` and `ORDER BY`\n-  clauses.\n-* Define patterns of rows to seek using the `PATTERN` clause. These patterns use a syntax similar to\n-  that of regular expressions.\n-* The logical components of the row pattern variables are specified in the `DEFINE` clause.\n-* Define measures, which are expressions usable in other parts of the SQL query, in the `MEASURES`\n-  clause.\n-\n-The following example illustrates the syntax for basic pattern recognition:\n+\u641c\u7d22\u4e00\u7ec4\u4e8b\u4ef6\u6a21\u5f0f\uff08event pattern\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u4f8b\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u6d41\u7684\u60c5\u51b5\u4e0b\u3002Flink \u63d0\u4f9b [\u590d\u6742\u4e8b\u4ef6\u5904\u7406\uff08CEP\uff09\u5e93]({% link dev/libs/cep.zh.md %})\uff0c\u8be5\u5e93\u5141\u8bb8\u5728\u4e8b\u4ef6\u6d41\u4e2d\u8fdb\u884c\u6a21\u5f0f\u68c0\u6d4b\u3002\u6b64\u5916\uff0cFlink \u7684 SQL API \u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u7cfb\u5f0f\u7684\u67e5\u8be2\u8868\u8fbe\u65b9\u5f0f\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u5927\u7ec4\u5185\u7f6e\u51fd\u6570\u548c\u57fa\u4e8e\u89c4\u5219\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002\n+\n+2016\u5e7412\u6708\uff0c\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\uff08ISO\uff09\u53d1\u5e03\u4e86\u65b0\u7248\u672c\u7684 SQL \u6807\u51c6\uff0c\u5176\u4e2d\u5305\u62ec\u5728 _SQL \u4e2d\u7684\u884c\u6a21\u5f0f\u8bc6\u522b\uff08Row Pattern Recognition in SQL\uff09_([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip))\u3002\u5b83\u5141\u8bb8 Flink \u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\u878d\u5408 CEP \u548c SQL API\uff0c\u4ee5\u4fbf\u5728 SQL \u4e2d\u8fdb\u884c\u590d\u6742\u4e8b\u4ef6\u5904\u7406\u3002\n+\n+\u4e00\u4e2a `MATCH_RECOGNIZE` \u5b50\u53e5\u542f\u7528\u4ee5\u4e0b\u4efb\u52a1\uff1a\n+* \u5bf9\u4e0e `PARTITION BY` \u548c `ORDER BY` \u5b50\u53e5\u4e00\u8d77\u4f7f\u7528\u7684\u6570\u636e\u8fdb\u884c\u903b\u8f91\u5206\u533a\u548c\u6392\u5e8f\u3002\n+* \u4f7f\u7528 `PATTERN` \u5b50\u53e5\u5b9a\u4e49\u8981\u67e5\u627e\u7684\u884c\u7684\u6a21\u5f0f\u3002\u8fd9\u4e9b\u6a21\u5f0f\u4f7f\u7528\u7c7b\u4f3c\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u3002\n+* \u884c\u6a21\u5f0f\u53d8\u91cf\u7684\u903b\u8f91\u7ec4\u4ef6\u5728 `DEFINE` \u5b50\u53e5\u4e2d\u6307\u5b9a\u3002\n+* \u5728 `MEASURES` \u5b50\u53e5\u4e2d\u5b9a\u4e49\u53ef\u7528\u4e8e SQL \u67e5\u8be2\u5176\u4ed6\u90e8\u5206\u7684\u8868\u8fbe\u5f0f measures\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527265656bc37900ee79357233697fde8ce88b0e"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg5MzUzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * [ONE ROW PER MATCH](#\u8f93\u51fa\u65b9\u5f0f) - \u5b9a\u4e49\u6bcf\u6b21\u5339\u914d\u5e94\u751f\u6210\u591a\u5c11\u884c\u7684\u8f93\u51fa\u65b9\u5f0f\u3002\n          \n          \n            \n            * [ONE ROW PER MATCH](#\u8f93\u51fa\u65b9\u5f0f) - \u8f93\u51fa\u65b9\u5f0f\uff0c\u5b9a\u4e49\u6bcf\u4e2a\u5339\u914d\u9879\u5e94\u4ea7\u751f\u591a\u5c11\u884c\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r448893530", "createdAt": "2020-07-02T10:05:45Z", "author": {"login": "XBaith"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -92,52 +76,39 @@ project.\n </dependency>\n {% endhighlight %}\n \n-Alternatively, you can also add the dependency to the cluster classpath (see the\n-[dependency section]({{ site.baseurl}}/dev/project-configuration.html) for more information).\n+\u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u96c6\u7fa4\u7c7b\u8def\u5f84\uff08\u67e5\u770b[\u4f9d\u8d56\u90e8\u5206]({% link dev/project-configuration.zh.md %})\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\uff09\u3002\n \n-If you want to use the `MATCH_RECOGNIZE` clause in the\n-[SQL Client]({{ site.baseurl}}/dev/table/sqlClient.html), you don't have to do anything as all the\n-dependencies are included by default.\n+\u5982\u679c\u4f60\u60f3\u5728 [SQL Client]({% link dev/table/sqlClient.zh.md %}) \u4e2d\u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\uff0c\u4f60\u65e0\u9700\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5305\u542b\u6240\u6709\u4f9d\u8d56\u9879\u3002\n \n-### SQL Semantics\n+### SQL \u8bed\u4e49\n \n-Every `MATCH_RECOGNIZE` query consists of the following clauses:\n+\u6bcf\u4e2a `MATCH_RECOGNIZE` \u67e5\u8be2\u90fd\u5305\u542b\u4ee5\u4e0b\u5b50\u53e5\uff1a\n \n-* [PARTITION BY](#partitioning) - defines the logical partitioning of the table; similar to a\n-  `GROUP BY` operation.\n-* [ORDER BY](#order-of-events) - specifies how the incoming rows should be ordered; this is\n-  essential as patterns depend on an order.\n-* [MEASURES](#define--measures) - defines output of the clause; similar to a `SELECT` clause.\n-* [ONE ROW PER MATCH](#output-mode) - output mode which defines how many rows per match should be\n-  produced.\n-* [AFTER MATCH SKIP](#after-match-strategy) - specifies where the next match should start; this is\n-  also a way to control how many distinct matches a single event can belong to.\n-* [PATTERN](#defining-a-pattern) - allows constructing patterns that will be searched for using a\n-  _regular expression_-like syntax.\n-* [DEFINE](#define--measures) - this section defines the conditions that the pattern variables must\n-  satisfy.\n+* [PARTITION BY](#\u5206\u533a) - \u5b9a\u4e49\u8868\u7684\u903b\u8f91\u5206\u533a\uff1b\u7c7b\u4f3c\u4e8e `GROUP BY` \u64cd\u4f5c\u3002\n+* [ORDER BY](#\u4e8b\u4ef6\u987a\u5e8f) - \u6307\u5b9a\u4f20\u5165\u884c\u7684\u6392\u5e8f\u65b9\u5f0f\uff1b\u8fd9\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u6a21\u5f0f\u4f9d\u8d56\u4e8e\u987a\u5e8f\u3002\n+* [MEASURES](#define--measures) - \u5b9a\u4e49\u5b50\u53e5\u7684\u8f93\u51fa\uff1b\u7c7b\u4f3c\u4e8e `SELECT` \u5b50\u53e5\u3002\n+* [ONE ROW PER MATCH](#\u8f93\u51fa\u65b9\u5f0f) - \u5b9a\u4e49\u6bcf\u6b21\u5339\u914d\u5e94\u751f\u6210\u591a\u5c11\u884c\u7684\u8f93\u51fa\u65b9\u5f0f\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527265656bc37900ee79357233697fde8ce88b0e"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg5ODcyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * [PATTERN](#\u5b9a\u4e49\u6a21\u5f0f) - \u5141\u8bb8\u4f7f\u7528\u7c7b\u4f3c\u4e8e _\u6b63\u5219\u8868\u8fbe\u5f0f_ \u7684\u8bed\u6cd5\u6784\u9020\u5c06\u8981\u641c\u7d22\u7684\u6a21\u5f0f\u3002\n          \n          \n            \n            * [PATTERN](#\u5b9a\u4e49\u6a21\u5f0f) - \u5141\u8bb8\u6784\u9020\u7c7b\u4f3c\u4e8e _\u6b63\u5219\u8868\u8fbe\u5f0f_ \u8bed\u6cd5\u8fdb\u884c\u641c\u7d22\u7684\u6a21\u5f0f\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r448898725", "createdAt": "2020-07-02T10:15:40Z", "author": {"login": "XBaith"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -92,52 +76,39 @@ project.\n </dependency>\n {% endhighlight %}\n \n-Alternatively, you can also add the dependency to the cluster classpath (see the\n-[dependency section]({{ site.baseurl}}/dev/project-configuration.html) for more information).\n+\u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u96c6\u7fa4\u7c7b\u8def\u5f84\uff08\u67e5\u770b[\u4f9d\u8d56\u90e8\u5206]({% link dev/project-configuration.zh.md %})\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\uff09\u3002\n \n-If you want to use the `MATCH_RECOGNIZE` clause in the\n-[SQL Client]({{ site.baseurl}}/dev/table/sqlClient.html), you don't have to do anything as all the\n-dependencies are included by default.\n+\u5982\u679c\u4f60\u60f3\u5728 [SQL Client]({% link dev/table/sqlClient.zh.md %}) \u4e2d\u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\uff0c\u4f60\u65e0\u9700\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5305\u542b\u6240\u6709\u4f9d\u8d56\u9879\u3002\n \n-### SQL Semantics\n+### SQL \u8bed\u4e49\n \n-Every `MATCH_RECOGNIZE` query consists of the following clauses:\n+\u6bcf\u4e2a `MATCH_RECOGNIZE` \u67e5\u8be2\u90fd\u5305\u542b\u4ee5\u4e0b\u5b50\u53e5\uff1a\n \n-* [PARTITION BY](#partitioning) - defines the logical partitioning of the table; similar to a\n-  `GROUP BY` operation.\n-* [ORDER BY](#order-of-events) - specifies how the incoming rows should be ordered; this is\n-  essential as patterns depend on an order.\n-* [MEASURES](#define--measures) - defines output of the clause; similar to a `SELECT` clause.\n-* [ONE ROW PER MATCH](#output-mode) - output mode which defines how many rows per match should be\n-  produced.\n-* [AFTER MATCH SKIP](#after-match-strategy) - specifies where the next match should start; this is\n-  also a way to control how many distinct matches a single event can belong to.\n-* [PATTERN](#defining-a-pattern) - allows constructing patterns that will be searched for using a\n-  _regular expression_-like syntax.\n-* [DEFINE](#define--measures) - this section defines the conditions that the pattern variables must\n-  satisfy.\n+* [PARTITION BY](#\u5206\u533a) - \u5b9a\u4e49\u8868\u7684\u903b\u8f91\u5206\u533a\uff1b\u7c7b\u4f3c\u4e8e `GROUP BY` \u64cd\u4f5c\u3002\n+* [ORDER BY](#\u4e8b\u4ef6\u987a\u5e8f) - \u6307\u5b9a\u4f20\u5165\u884c\u7684\u6392\u5e8f\u65b9\u5f0f\uff1b\u8fd9\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u6a21\u5f0f\u4f9d\u8d56\u4e8e\u987a\u5e8f\u3002\n+* [MEASURES](#define--measures) - \u5b9a\u4e49\u5b50\u53e5\u7684\u8f93\u51fa\uff1b\u7c7b\u4f3c\u4e8e `SELECT` \u5b50\u53e5\u3002\n+* [ONE ROW PER MATCH](#\u8f93\u51fa\u65b9\u5f0f) - \u5b9a\u4e49\u6bcf\u6b21\u5339\u914d\u5e94\u751f\u6210\u591a\u5c11\u884c\u7684\u8f93\u51fa\u65b9\u5f0f\u3002\n+* [AFTER MATCH SKIP](#\u5339\u914d\u540e\u7684\u7b56\u7565) - \u6307\u5b9a\u4e0b\u4e00\u4e2a\u5339\u914d\u7684\u5f00\u59cb\u4f4d\u7f6e\uff1b\u8fd9\u4e5f\u662f\u4e00\u79cd\u63a7\u5236\u5355\u4e2a\u4e8b\u4ef6\u53ef\u4ee5\u5c5e\u4e8e\u591a\u5c11\u4e2a\u4e0d\u540c\u5339\u914d\u7684\u65b9\u6cd5\u3002\n+* [PATTERN](#\u5b9a\u4e49\u6a21\u5f0f) - \u5141\u8bb8\u4f7f\u7528\u7c7b\u4f3c\u4e8e _\u6b63\u5219\u8868\u8fbe\u5f0f_ \u7684\u8bed\u6cd5\u6784\u9020\u5c06\u8981\u641c\u7d22\u7684\u6a21\u5f0f\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527265656bc37900ee79357233697fde8ce88b0e"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg5OTY0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * [DEFINE](#define--measures) - \u672c\u8282\u5b9a\u4e49\u6a21\u5f0f\u53d8\u91cf\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\n          \n          \n            \n            * [DEFINE](#define--measures) - \u8be5\u90e8\u5206\u5b9a\u4e49\u4e86\u53d8\u91cf\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r448899640", "createdAt": "2020-07-02T10:17:25Z", "author": {"login": "XBaith"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -92,52 +76,39 @@ project.\n </dependency>\n {% endhighlight %}\n \n-Alternatively, you can also add the dependency to the cluster classpath (see the\n-[dependency section]({{ site.baseurl}}/dev/project-configuration.html) for more information).\n+\u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u96c6\u7fa4\u7c7b\u8def\u5f84\uff08\u67e5\u770b[\u4f9d\u8d56\u90e8\u5206]({% link dev/project-configuration.zh.md %})\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\uff09\u3002\n \n-If you want to use the `MATCH_RECOGNIZE` clause in the\n-[SQL Client]({{ site.baseurl}}/dev/table/sqlClient.html), you don't have to do anything as all the\n-dependencies are included by default.\n+\u5982\u679c\u4f60\u60f3\u5728 [SQL Client]({% link dev/table/sqlClient.zh.md %}) \u4e2d\u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\uff0c\u4f60\u65e0\u9700\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5305\u542b\u6240\u6709\u4f9d\u8d56\u9879\u3002\n \n-### SQL Semantics\n+### SQL \u8bed\u4e49\n \n-Every `MATCH_RECOGNIZE` query consists of the following clauses:\n+\u6bcf\u4e2a `MATCH_RECOGNIZE` \u67e5\u8be2\u90fd\u5305\u542b\u4ee5\u4e0b\u5b50\u53e5\uff1a\n \n-* [PARTITION BY](#partitioning) - defines the logical partitioning of the table; similar to a\n-  `GROUP BY` operation.\n-* [ORDER BY](#order-of-events) - specifies how the incoming rows should be ordered; this is\n-  essential as patterns depend on an order.\n-* [MEASURES](#define--measures) - defines output of the clause; similar to a `SELECT` clause.\n-* [ONE ROW PER MATCH](#output-mode) - output mode which defines how many rows per match should be\n-  produced.\n-* [AFTER MATCH SKIP](#after-match-strategy) - specifies where the next match should start; this is\n-  also a way to control how many distinct matches a single event can belong to.\n-* [PATTERN](#defining-a-pattern) - allows constructing patterns that will be searched for using a\n-  _regular expression_-like syntax.\n-* [DEFINE](#define--measures) - this section defines the conditions that the pattern variables must\n-  satisfy.\n+* [PARTITION BY](#\u5206\u533a) - \u5b9a\u4e49\u8868\u7684\u903b\u8f91\u5206\u533a\uff1b\u7c7b\u4f3c\u4e8e `GROUP BY` \u64cd\u4f5c\u3002\n+* [ORDER BY](#\u4e8b\u4ef6\u987a\u5e8f) - \u6307\u5b9a\u4f20\u5165\u884c\u7684\u6392\u5e8f\u65b9\u5f0f\uff1b\u8fd9\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u6a21\u5f0f\u4f9d\u8d56\u4e8e\u987a\u5e8f\u3002\n+* [MEASURES](#define--measures) - \u5b9a\u4e49\u5b50\u53e5\u7684\u8f93\u51fa\uff1b\u7c7b\u4f3c\u4e8e `SELECT` \u5b50\u53e5\u3002\n+* [ONE ROW PER MATCH](#\u8f93\u51fa\u65b9\u5f0f) - \u5b9a\u4e49\u6bcf\u6b21\u5339\u914d\u5e94\u751f\u6210\u591a\u5c11\u884c\u7684\u8f93\u51fa\u65b9\u5f0f\u3002\n+* [AFTER MATCH SKIP](#\u5339\u914d\u540e\u7684\u7b56\u7565) - \u6307\u5b9a\u4e0b\u4e00\u4e2a\u5339\u914d\u7684\u5f00\u59cb\u4f4d\u7f6e\uff1b\u8fd9\u4e5f\u662f\u4e00\u79cd\u63a7\u5236\u5355\u4e2a\u4e8b\u4ef6\u53ef\u4ee5\u5c5e\u4e8e\u591a\u5c11\u4e2a\u4e0d\u540c\u5339\u914d\u7684\u65b9\u6cd5\u3002\n+* [PATTERN](#\u5b9a\u4e49\u6a21\u5f0f) - \u5141\u8bb8\u4f7f\u7528\u7c7b\u4f3c\u4e8e _\u6b63\u5219\u8868\u8fbe\u5f0f_ \u7684\u8bed\u6cd5\u6784\u9020\u5c06\u8981\u641c\u7d22\u7684\u6a21\u5f0f\u3002\n+* [DEFINE](#define--measures) - \u672c\u8282\u5b9a\u4e49\u6a21\u5f0f\u53d8\u91cf\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "527265656bc37900ee79357233697fde8ce88b0e"}, "originalPosition": 118}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f284f503448e04e77c01d35b96a1130e52198f71", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/f284f503448e04e77c01d35b96a1130e52198f71", "committedDate": "2020-07-04T03:58:33Z", "message": "Update self links in dev/table/streaming/match_recognize.zh.md according to FLINK-18193"}, "afterCommit": {"oid": "709566f740d1070ade3d82b193583c2b01dbd49f", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/709566f740d1070ade3d82b193583c2b01dbd49f", "committedDate": "2020-07-03T06:51:03Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Xavier Bai <54210725+XBaith@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNzc0NjAw", "url": "https://github.com/apache/flink/pull/12798#pullrequestreview-442774600", "createdAt": "2020-07-06T04:59:55Z", "commit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNDo1OTo1NVrOGtI2UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNTozOToxOVrOGtJavg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk4NDA4MA==", "bodyText": "\u4e00\u5927\u7ec4\u5185\u7f6e -> \u5927\u91cf\u5185\u7f6e \u4f1a\u66f4\u597d\u4e00\u4e9b\u5417", "url": "https://github.com/apache/flink/pull/12798#discussion_r449984080", "createdAt": "2020-07-06T04:59:55Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -24,28 +24,17 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-It is a common use case to search for a set of event patterns, especially in case of data streams.\n-Flink comes with a [complex event processing (CEP) library]({{ site.baseurl }}/dev/libs/cep.html)\n-which allows for pattern detection in event streams. Furthermore, Flink's SQL API provides a\n-relational way of expressing queries with a large set of built-in functions and rule-based\n-optimizations that can be used out of the box.\n-\n-In December 2016, the International Organization for Standardization (ISO) released a new version\n-of the SQL standard which includes _Row Pattern Recognition in SQL_\n-([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip)).\n-It allows Flink to consolidate CEP and SQL API using the `MATCH_RECOGNIZE` clause for complex event\n-processing in SQL.\n-\n-A `MATCH_RECOGNIZE` clause enables the following tasks:\n-* Logically partition and order the data that is used with the `PARTITION BY` and `ORDER BY`\n-  clauses.\n-* Define patterns of rows to seek using the `PATTERN` clause. These patterns use a syntax similar to\n-  that of regular expressions.\n-* The logical components of the row pattern variables are specified in the `DEFINE` clause.\n-* Define measures, which are expressions usable in other parts of the SQL query, in the `MEASURES`\n-  clause.\n-\n-The following example illustrates the syntax for basic pattern recognition:\n+\u641c\u7d22\u4e00\u7ec4\u4e8b\u4ef6\u6a21\u5f0f\uff08event pattern\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u4f8b\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u6d41\u7684\u60c5\u51b5\u4e0b\u3002Flink \u63d0\u4f9b [\u590d\u6742\u4e8b\u4ef6\u5904\u7406\uff08CEP\uff09\u5e93]({% link dev/libs/cep.zh.md %})\uff0c\u8be5\u5e93\u5141\u8bb8\u5728\u4e8b\u4ef6\u6d41\u4e2d\u8fdb\u884c\u6a21\u5f0f\u68c0\u6d4b\u3002\u6b64\u5916\uff0cFlink \u7684 SQL API \u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u7cfb\u5f0f\u7684\u67e5\u8be2\u8868\u8fbe\u65b9\u5f0f\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u5927\u7ec4\u5185\u7f6e\u51fd\u6570\u548c\u57fa\u4e8e\u89c4\u5219\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk4NDE1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2016\u5e7412\u6708\uff0c\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\uff08ISO\uff09\u53d1\u5e03\u4e86\u65b0\u7248\u672c\u7684 SQL \u6807\u51c6\uff0c\u5176\u4e2d\u5305\u62ec\u5728 _SQL \u4e2d\u7684\u884c\u6a21\u5f0f\u8bc6\u522b\uff08Row Pattern Recognition in SQL\uff09_([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip))\u3002\u5b83\u5141\u8bb8 Flink \u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\u878d\u5408 CEP \u548c SQL API\uff0c\u4ee5\u4fbf\u5728 SQL \u4e2d\u8fdb\u884c\u590d\u6742\u4e8b\u4ef6\u5904\u7406\u3002\n          \n          \n            \n            2016 \u5e74 12 \u6708\uff0c\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\uff08ISO\uff09\u53d1\u5e03\u4e86\u65b0\u7248\u672c\u7684 SQL \u6807\u51c6\uff0c\u5176\u4e2d\u5305\u62ec\u5728 _SQL \u4e2d\u7684\u884c\u6a21\u5f0f\u8bc6\u522b\uff08Row Pattern Recognition in SQL\uff09_([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip))\u3002\u5b83\u5141\u8bb8 Flink \u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\u878d\u5408 CEP \u548c SQL API\uff0c\u4ee5\u4fbf\u5728 SQL \u4e2d\u8fdb\u884c\u590d\u6742\u4e8b\u4ef6\u5904\u7406\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r449984155", "createdAt": "2020-07-06T05:00:12Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -24,28 +24,17 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-It is a common use case to search for a set of event patterns, especially in case of data streams.\n-Flink comes with a [complex event processing (CEP) library]({{ site.baseurl }}/dev/libs/cep.html)\n-which allows for pattern detection in event streams. Furthermore, Flink's SQL API provides a\n-relational way of expressing queries with a large set of built-in functions and rule-based\n-optimizations that can be used out of the box.\n-\n-In December 2016, the International Organization for Standardization (ISO) released a new version\n-of the SQL standard which includes _Row Pattern Recognition in SQL_\n-([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip)).\n-It allows Flink to consolidate CEP and SQL API using the `MATCH_RECOGNIZE` clause for complex event\n-processing in SQL.\n-\n-A `MATCH_RECOGNIZE` clause enables the following tasks:\n-* Logically partition and order the data that is used with the `PARTITION BY` and `ORDER BY`\n-  clauses.\n-* Define patterns of rows to seek using the `PATTERN` clause. These patterns use a syntax similar to\n-  that of regular expressions.\n-* The logical components of the row pattern variables are specified in the `DEFINE` clause.\n-* Define measures, which are expressions usable in other parts of the SQL query, in the `MEASURES`\n-  clause.\n-\n-The following example illustrates the syntax for basic pattern recognition:\n+\u641c\u7d22\u4e00\u7ec4\u4e8b\u4ef6\u6a21\u5f0f\uff08event pattern\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u4f8b\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u6d41\u7684\u60c5\u51b5\u4e0b\u3002Flink \u63d0\u4f9b [\u590d\u6742\u4e8b\u4ef6\u5904\u7406\uff08CEP\uff09\u5e93]({% link dev/libs/cep.zh.md %})\uff0c\u8be5\u5e93\u5141\u8bb8\u5728\u4e8b\u4ef6\u6d41\u4e2d\u8fdb\u884c\u6a21\u5f0f\u68c0\u6d4b\u3002\u6b64\u5916\uff0cFlink \u7684 SQL API \u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u7cfb\u5f0f\u7684\u67e5\u8be2\u8868\u8fbe\u65b9\u5f0f\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u5927\u7ec4\u5185\u7f6e\u51fd\u6570\u548c\u57fa\u4e8e\u89c4\u5219\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002\n+\n+2016\u5e7412\u6708\uff0c\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\uff08ISO\uff09\u53d1\u5e03\u4e86\u65b0\u7248\u672c\u7684 SQL \u6807\u51c6\uff0c\u5176\u4e2d\u5305\u62ec\u5728 _SQL \u4e2d\u7684\u884c\u6a21\u5f0f\u8bc6\u522b\uff08Row Pattern Recognition in SQL\uff09_([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip))\u3002\u5b83\u5141\u8bb8 Flink \u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\u878d\u5408 CEP \u548c SQL API\uff0c\u4ee5\u4fbf\u5728 SQL \u4e2d\u8fdb\u884c\u590d\u6742\u4e8b\u4ef6\u5904\u7406\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk4NDYxMw==", "bodyText": "\u201d\u5bf9\u4e0e PARTITION BY \u548c ORDER BY \u5b50\u53e5\u201c -> \"\u5bf9 PARTITION BY \u548c ORDER BY \u5b50\u53e5\" \u4f1a\u66f4\u597d\u4e00\u4e9b\u5417", "url": "https://github.com/apache/flink/pull/12798#discussion_r449984613", "createdAt": "2020-07-06T05:02:14Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -24,28 +24,17 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-It is a common use case to search for a set of event patterns, especially in case of data streams.\n-Flink comes with a [complex event processing (CEP) library]({{ site.baseurl }}/dev/libs/cep.html)\n-which allows for pattern detection in event streams. Furthermore, Flink's SQL API provides a\n-relational way of expressing queries with a large set of built-in functions and rule-based\n-optimizations that can be used out of the box.\n-\n-In December 2016, the International Organization for Standardization (ISO) released a new version\n-of the SQL standard which includes _Row Pattern Recognition in SQL_\n-([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip)).\n-It allows Flink to consolidate CEP and SQL API using the `MATCH_RECOGNIZE` clause for complex event\n-processing in SQL.\n-\n-A `MATCH_RECOGNIZE` clause enables the following tasks:\n-* Logically partition and order the data that is used with the `PARTITION BY` and `ORDER BY`\n-  clauses.\n-* Define patterns of rows to seek using the `PATTERN` clause. These patterns use a syntax similar to\n-  that of regular expressions.\n-* The logical components of the row pattern variables are specified in the `DEFINE` clause.\n-* Define measures, which are expressions usable in other parts of the SQL query, in the `MEASURES`\n-  clause.\n-\n-The following example illustrates the syntax for basic pattern recognition:\n+\u641c\u7d22\u4e00\u7ec4\u4e8b\u4ef6\u6a21\u5f0f\uff08event pattern\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u4f8b\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u6d41\u7684\u60c5\u51b5\u4e0b\u3002Flink \u63d0\u4f9b [\u590d\u6742\u4e8b\u4ef6\u5904\u7406\uff08CEP\uff09\u5e93]({% link dev/libs/cep.zh.md %})\uff0c\u8be5\u5e93\u5141\u8bb8\u5728\u4e8b\u4ef6\u6d41\u4e2d\u8fdb\u884c\u6a21\u5f0f\u68c0\u6d4b\u3002\u6b64\u5916\uff0cFlink \u7684 SQL API \u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u7cfb\u5f0f\u7684\u67e5\u8be2\u8868\u8fbe\u65b9\u5f0f\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u5927\u7ec4\u5185\u7f6e\u51fd\u6570\u548c\u57fa\u4e8e\u89c4\u5219\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002\n+\n+2016\u5e7412\u6708\uff0c\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\uff08ISO\uff09\u53d1\u5e03\u4e86\u65b0\u7248\u672c\u7684 SQL \u6807\u51c6\uff0c\u5176\u4e2d\u5305\u62ec\u5728 _SQL \u4e2d\u7684\u884c\u6a21\u5f0f\u8bc6\u522b\uff08Row Pattern Recognition in SQL\uff09_([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip))\u3002\u5b83\u5141\u8bb8 Flink \u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\u878d\u5408 CEP \u548c SQL API\uff0c\u4ee5\u4fbf\u5728 SQL \u4e2d\u8fdb\u884c\u590d\u6742\u4e8b\u4ef6\u5904\u7406\u3002\n+\n+`MATCH_RECOGNIZE` \u5b50\u53e5\u542f\u7528\u4ee5\u4e0b\u4efb\u52a1\uff1a\n+* \u5bf9\u4e0e `PARTITION BY` \u548c `ORDER BY` \u5b50\u53e5\u4e00\u8d77\u4f7f\u7528\u7684\u6570\u636e\u8fdb\u884c\u903b\u8f91\u5206\u533a\u548c\u6392\u5e8f\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk4NTE3Nw==", "bodyText": "\u6807\u9898\u7684\u94fe\u63a5\u4e00\u822c\u5efa\u8bae\u589e\u52a0 <a> \u6807\u7b7e\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 cwiki \u7684\u7b2c 4 \u70b9\n\u672c\u6587\u5176\u4ed6\u5730\u65b9\u4e5f\u4e00\u6837", "url": "https://github.com/apache/flink/pull/12798#discussion_r449985177", "createdAt": "2020-07-06T05:04:52Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -65,24 +54,19 @@ FROM MyTable\n     ) AS T\n {% endhighlight %}\n \n-This page will explain each keyword in more detail and will illustrate more complex examples.\n+\u672c\u9875\u5c06\u66f4\u8be6\u7ec6\u5730\u89e3\u91ca\u6bcf\u4e2a\u5173\u952e\u5b57\uff0c\u5e76\u6f14\u793a\u8bf4\u660e\u66f4\u590d\u6742\u7684\u793a\u4f8b\u3002\n \n-<span class=\"label label-danger\">Attention</span> Flink's implementation of the `MATCH_RECOGNIZE`\n-clause is a subset of the full standard. Only those features documented in the following sections\n-are supported. Since the development is still in an early phase, please also take a look at the\n-[known limitations](#known-limitations).\n+<span class=\"label label-danger\">\u6ce8\u610f</span> Flink \u7684 `MATCH_RECOGNIZE` \u5b50\u53e5\u5b9e\u73b0\u662f\u5b8c\u6574\u6807\u51c6\u7684\u4e00\u4e2a\u5b50\u96c6\u3002\u4ec5\u652f\u6301\u4ee5\u4e0b\u90e8\u5206\u4e2d\u8bb0\u5f55\u7684\u529f\u80fd\u3002\u7531\u4e8e\u5f00\u53d1\u4ecd\u5904\u4e8e\u521d\u671f\u9636\u6bb5\uff0c\u8bf7\u67e5\u770b[\u5df2\u77e5\u7684\u5c40\u9650](#\u5df2\u77e5\u7684\u5c40\u9650)\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk4NTgwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u6a21\u5f0f\u8bc6\u522b\u7279\u6027\u5728\u4f7f\u7528 Apache Flink \u5185\u90e8\u7684 CEP \u5e93\u3002\u4e3a\u4e86\u80fd\u591f\u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\uff0c\u9700\u8981\u5c06\u5e93\u4f5c\u4e3a\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230 Maven \u9879\u76ee\u4e2d\u3002\n          \n          \n            \n            \u6a21\u5f0f\u8bc6\u522b\u7279\u6027\u4f7f\u7528 Apache Flink \u5185\u90e8\u7684 CEP \u5e93\u3002\u4e3a\u4e86\u80fd\u591f\u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\uff0c\u9700\u8981\u5c06\u5e93\u4f5c\u4e3a\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230 Maven \u9879\u76ee\u4e2d\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r449985801", "createdAt": "2020-07-06T05:07:44Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -65,24 +54,19 @@ FROM MyTable\n     ) AS T\n {% endhighlight %}\n \n-This page will explain each keyword in more detail and will illustrate more complex examples.\n+\u672c\u9875\u5c06\u66f4\u8be6\u7ec6\u5730\u89e3\u91ca\u6bcf\u4e2a\u5173\u952e\u5b57\uff0c\u5e76\u6f14\u793a\u8bf4\u660e\u66f4\u590d\u6742\u7684\u793a\u4f8b\u3002\n \n-<span class=\"label label-danger\">Attention</span> Flink's implementation of the `MATCH_RECOGNIZE`\n-clause is a subset of the full standard. Only those features documented in the following sections\n-are supported. Since the development is still in an early phase, please also take a look at the\n-[known limitations](#known-limitations).\n+<span class=\"label label-danger\">\u6ce8\u610f</span> Flink \u7684 `MATCH_RECOGNIZE` \u5b50\u53e5\u5b9e\u73b0\u662f\u5b8c\u6574\u6807\u51c6\u7684\u4e00\u4e2a\u5b50\u96c6\u3002\u4ec5\u652f\u6301\u4ee5\u4e0b\u90e8\u5206\u4e2d\u8bb0\u5f55\u7684\u529f\u80fd\u3002\u7531\u4e8e\u5f00\u53d1\u4ecd\u5904\u4e8e\u521d\u671f\u9636\u6bb5\uff0c\u8bf7\u67e5\u770b[\u5df2\u77e5\u7684\u5c40\u9650](#\u5df2\u77e5\u7684\u5c40\u9650)\u3002\n \n * This will be replaced by the TOC\n {:toc}\n \n-Introduction and Examples\n+\u4ecb\u7ecd\u548c\u793a\u4f8b\n -------------------------\n \n-### Installation Guide\n+### \u5b89\u88c5\u6307\u5357\n \n-The pattern recognition feature uses the Apache Flink's CEP library internally. In order to be able\n-to use the `MATCH_RECOGNIZE` clause, the library needs to be added as a dependency to your Maven\n-project.\n+\u6a21\u5f0f\u8bc6\u522b\u7279\u6027\u5728\u4f7f\u7528 Apache Flink \u5185\u90e8\u7684 CEP \u5e93\u3002\u4e3a\u4e86\u80fd\u591f\u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\uff0c\u9700\u8981\u5c06\u5e93\u4f5c\u4e3a\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230 Maven \u9879\u76ee\u4e2d\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk4Nzk5Ng==", "bodyText": "\u8fd9\u4e2a\u5730\u65b9 classpath \u4e0d\u7ffb\u8bd1\u7684\u8bdd\u662f\u5426\u53ef\u4ee5\u5462\uff1fclasspath \u66f4\u50cf\u662f\u4e00\u4e2a\u4e13\u6709\u540d\u8bcd\u3002\n\u4f9d\u8d56\u90e8\u5206 \u8fd9\u91cc\u80fd\u5426\u6362\u6210\u4e00\u4e2a\u66f4\u5177\u4f53\u7684\u540d\u8bcd\u5462\uff1f\u76ee\u6807\u9875\u9762\u6709\u5f88\u591a\u4e2a \u4f9d\u8d56\u7684 section", "url": "https://github.com/apache/flink/pull/12798#discussion_r449987996", "createdAt": "2020-07-06T05:17:02Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -92,52 +76,39 @@ project.\n </dependency>\n {% endhighlight %}\n \n-Alternatively, you can also add the dependency to the cluster classpath (see the\n-[dependency section]({{ site.baseurl}}/dev/project-configuration.html) for more information).\n+\u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u96c6\u7fa4\u7c7b\u8def\u5f84\uff08\u67e5\u770b[\u4f9d\u8d56\u90e8\u5206]({% link dev/project-configuration.zh.md %})\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\uff09\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk4OTQ0NA==", "bodyText": "\u8fd9\u91cc\u4e1a\u5185\u7684\u8df3\u8f6c\u5efa\u8bae\u4f7f\u7528 <a> \u6807\u7b7e", "url": "https://github.com/apache/flink/pull/12798#discussion_r449989444", "createdAt": "2020-07-06T05:23:02Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -92,52 +76,39 @@ project.\n </dependency>\n {% endhighlight %}\n \n-Alternatively, you can also add the dependency to the cluster classpath (see the\n-[dependency section]({{ site.baseurl}}/dev/project-configuration.html) for more information).\n+\u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u96c6\u7fa4\u7c7b\u8def\u5f84\uff08\u67e5\u770b[\u4f9d\u8d56\u90e8\u5206]({% link dev/project-configuration.zh.md %})\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\uff09\u3002\n \n-If you want to use the `MATCH_RECOGNIZE` clause in the\n-[SQL Client]({{ site.baseurl}}/dev/table/sqlClient.html), you don't have to do anything as all the\n-dependencies are included by default.\n+\u5982\u679c\u4f60\u60f3\u5728 [SQL Client]({% link dev/table/sqlClient.zh.md %}) \u4e2d\u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\uff0c\u4f60\u65e0\u9700\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5305\u542b\u6240\u6709\u4f9d\u8d56\u9879\u3002\n \n-### SQL Semantics\n+### SQL \u8bed\u4e49\n \n-Every `MATCH_RECOGNIZE` query consists of the following clauses:\n+\u6bcf\u4e2a `MATCH_RECOGNIZE` \u67e5\u8be2\u90fd\u5305\u542b\u4ee5\u4e0b\u5b50\u53e5\uff1a\n \n-* [PARTITION BY](#partitioning) - defines the logical partitioning of the table; similar to a\n-  `GROUP BY` operation.\n-* [ORDER BY](#order-of-events) - specifies how the incoming rows should be ordered; this is\n-  essential as patterns depend on an order.\n-* [MEASURES](#define--measures) - defines output of the clause; similar to a `SELECT` clause.\n-* [ONE ROW PER MATCH](#output-mode) - output mode which defines how many rows per match should be\n-  produced.\n-* [AFTER MATCH SKIP](#after-match-strategy) - specifies where the next match should start; this is\n-  also a way to control how many distinct matches a single event can belong to.\n-* [PATTERN](#defining-a-pattern) - allows constructing patterns that will be searched for using a\n-  _regular expression_-like syntax.\n-* [DEFINE](#define--measures) - this section defines the conditions that the pattern variables must\n-  satisfy.\n+* [PARTITION BY](#\u5206\u533a) - \u5b9a\u4e49\u8868\u7684\u903b\u8f91\u5206\u533a\uff1b\u7c7b\u4f3c\u4e8e `GROUP BY` \u64cd\u4f5c\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5MDMxNw==", "bodyText": "processing time or event time \u8fd9\u91cc\u662f\u5426\u53ef\u4ee5\u7ffb\u8bd1\u4e0b\u5462\uff1f\n\u6587\u7ae0\u4e2d\u5176\u4ed6\u5730\u65b9\u4e5f\u4e00\u6837\u3002\u5728\u76ee\u6807\u9875\u9762\u4e2d\u8fd9\u4e24\u4e2a\u540d\u8bcd\u5df2\u7ecf\u7ffb\u8bd1\u6210\u4e2d\u6587\u4e86", "url": "https://github.com/apache/flink/pull/12798#discussion_r449990317", "createdAt": "2020-07-06T05:26:44Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +150,65 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u53d8\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\n \n-This query produces a summary row for each period in which the price of a stock was continuously\n-decreasing.\n+\u6b64\u67e5\u8be2\u4e3a\u80a1\u7968\u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u7684\u6bcf\u4e2a\u671f\u95f4\u751f\u6210\u6458\u8981\u884c\u3002\n \n-The exact representation of the output rows is defined in the `MEASURES` part of the query. The\n-number of output rows is defined by the `ONE ROW PER MATCH` output mode.\n+\u8f93\u51fa\u884c\u7684\u786e\u5207\u8868\u793a\u5728\u67e5\u8be2\u7684 `MEASURES` \u90e8\u5206\u4e2d\u5b9a\u4e49\u3002\u8f93\u51fa\u884c\u6570\u7531 `ONE ROW PER MATCH` \u8f93\u51fa\u65b9\u5f0f\u5b9a\u4e49\u3002\n \n {% highlight text %}\n  symbol       start_tstamp       bottom_tstamp         end_tstamp\n =========  ==================  ==================  ==================\n ACME       01-APR-11 10:00:04  01-APR-11 10:00:07  01-APR-11 10:00:08\n {% endhighlight %}\n \n-The resulting row describes a period of falling prices that started at `01-APR-11 10:00:04` and\n-achieved the lowest price at `01-APR-11 10:00:07` that increased again at `01-APR-11 10:00:08`.\n+\u8be5\u884c\u7ed3\u679c\u63cf\u8ff0\u4e86\u4ece `01-APR-11 10:00:04` \u5f00\u59cb\u7684\u4ef7\u683c\u4e0b\u8dcc\u671f\uff0c\u5728 `01-APR-11 10:00:07` \u8fbe\u5230\u6700\u4f4e\u4ef7\u683c\uff0c\u5230 `01-APR-11 10:00:08` \u518d\u6b21\u4e0a\u6da8\u3002\n \n-Partitioning\n+\n+\u5206\u533a\n ------------\n \n-It is possible to look for patterns in partitioned data, e.g., trends for a single ticker or a\n-particular user. This can be expressed using the `PARTITION BY` clause. The clause is similar to\n-using `GROUP BY` for aggregations.\n+\u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9\u805a\u5408\u4f7f\u7528 `GROUP BY`\u3002\n \n-<span class=\"label label-danger\">Attention</span> It is highly advised to partition the incoming\n-data because otherwise the `MATCH_RECOGNIZE` clause will be translated into a non-parallel operator\n-to ensure global ordering.\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u5f3a\u70c8\u5efa\u8bae\u5bf9\u4f20\u5165\u7684\u6570\u636e\u8fdb\u884c\u5206\u533a\uff0c\u5426\u5219 `MATCH_RECOGNIZE` \u5b50\u53e5\u5c06\u88ab\u8f6c\u6362\u4e3a\u975e\u5e76\u884c\u7b97\u5b50\uff0c\u4ee5\u786e\u4fdd\u5168\u5c40\u6392\u5e8f\u3002\n \n-Order of Events\n+\u4e8b\u4ef6\u987a\u5e8f\n ---------------\n \n-Apache Flink allows for searching for patterns based on time; either\n-[processing time or event time](time_attributes.html).\n+Apache Flink \u53ef\u4ee5\u6839\u636e\u65f6\u95f4\uff08[processing time or event time]({% link dev/table/streaming/time_attributes.zh.md %})\uff09\u8fdb\u884c\u6a21\u5f0f\u641c\u7d22\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 231}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5MDk3Nw==", "bodyText": "\u8fd9\u91cc\u662f\u5426\u7ffb\u8bd1\u6210 \u5185\u7f6e\u51fd\u6570 \u548c \u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570 \u4f1a\u66f4\u597d\u5462\uff1f", "url": "https://github.com/apache/flink/pull/12798#discussion_r449990977", "createdAt": "2020-07-06T05:29:21Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +150,65 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u53d8\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\n \n-This query produces a summary row for each period in which the price of a stock was continuously\n-decreasing.\n+\u6b64\u67e5\u8be2\u4e3a\u80a1\u7968\u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u7684\u6bcf\u4e2a\u671f\u95f4\u751f\u6210\u6458\u8981\u884c\u3002\n \n-The exact representation of the output rows is defined in the `MEASURES` part of the query. The\n-number of output rows is defined by the `ONE ROW PER MATCH` output mode.\n+\u8f93\u51fa\u884c\u7684\u786e\u5207\u8868\u793a\u5728\u67e5\u8be2\u7684 `MEASURES` \u90e8\u5206\u4e2d\u5b9a\u4e49\u3002\u8f93\u51fa\u884c\u6570\u7531 `ONE ROW PER MATCH` \u8f93\u51fa\u65b9\u5f0f\u5b9a\u4e49\u3002\n \n {% highlight text %}\n  symbol       start_tstamp       bottom_tstamp         end_tstamp\n =========  ==================  ==================  ==================\n ACME       01-APR-11 10:00:04  01-APR-11 10:00:07  01-APR-11 10:00:08\n {% endhighlight %}\n \n-The resulting row describes a period of falling prices that started at `01-APR-11 10:00:04` and\n-achieved the lowest price at `01-APR-11 10:00:07` that increased again at `01-APR-11 10:00:08`.\n+\u8be5\u884c\u7ed3\u679c\u63cf\u8ff0\u4e86\u4ece `01-APR-11 10:00:04` \u5f00\u59cb\u7684\u4ef7\u683c\u4e0b\u8dcc\u671f\uff0c\u5728 `01-APR-11 10:00:07` \u8fbe\u5230\u6700\u4f4e\u4ef7\u683c\uff0c\u5230 `01-APR-11 10:00:08` \u518d\u6b21\u4e0a\u6da8\u3002\n \n-Partitioning\n+\n+\u5206\u533a\n ------------\n \n-It is possible to look for patterns in partitioned data, e.g., trends for a single ticker or a\n-particular user. This can be expressed using the `PARTITION BY` clause. The clause is similar to\n-using `GROUP BY` for aggregations.\n+\u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9\u805a\u5408\u4f7f\u7528 `GROUP BY`\u3002\n \n-<span class=\"label label-danger\">Attention</span> It is highly advised to partition the incoming\n-data because otherwise the `MATCH_RECOGNIZE` clause will be translated into a non-parallel operator\n-to ensure global ordering.\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u5f3a\u70c8\u5efa\u8bae\u5bf9\u4f20\u5165\u7684\u6570\u636e\u8fdb\u884c\u5206\u533a\uff0c\u5426\u5219 `MATCH_RECOGNIZE` \u5b50\u53e5\u5c06\u88ab\u8f6c\u6362\u4e3a\u975e\u5e76\u884c\u7b97\u5b50\uff0c\u4ee5\u786e\u4fdd\u5168\u5c40\u6392\u5e8f\u3002\n \n-Order of Events\n+\u4e8b\u4ef6\u987a\u5e8f\n ---------------\n \n-Apache Flink allows for searching for patterns based on time; either\n-[processing time or event time](time_attributes.html).\n+Apache Flink \u53ef\u4ee5\u6839\u636e\u65f6\u95f4\uff08[processing time or event time]({% link dev/table/streaming/time_attributes.zh.md %})\uff09\u8fdb\u884c\u6a21\u5f0f\u641c\u7d22\u3002\n \n-In case of event time, the events are sorted before they are passed to the internal pattern state\n-machine. As a consequence, the produced output will be correct regardless of the order in which\n-rows are appended to the table. Instead, the pattern is evaluated in the order specified by the\n-time contained in each row.\n+\u5982\u679c\u662f event time\uff0c\u5219\u5728\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230\u5185\u90e8\u6a21\u5f0f\u72b6\u6001\u673a\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u884c\u6dfb\u52a0\u5230\u8868\u7684\u987a\u5e8f\u5982\u4f55\uff0c\u751f\u6210\u7684\u8f93\u51fa\u90fd\u662f\u6b63\u786e\u7684\u3002\u76f8\u53cd\uff0c\u6a21\u5f0f\u662f\u6309\u7167\u6bcf\u884c\u4e2d\u5305\u542b\u7684\u65f6\u95f4\u6307\u5b9a\u7684\u987a\u5e8f\u8ba1\u7b97\u7684\u3002\n \n-The `MATCH_RECOGNIZE` clause assumes a [time attribute](time_attributes.html) with ascending\n-ordering as the first argument to `ORDER BY` clause.\n+`MATCH_RECOGNIZE` \u5b50\u53e5\u5047\u5b9a\u5347\u5e8f\u7684 [time attribute]({% link dev/table/streaming/time_attributes.zh.md %}) \u662f `ORDER BY` \u5b50\u53e5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\n \n-For the example `Ticker` table, a definition like `ORDER BY rowtime ASC, price DESC` is valid but\n-`ORDER BY price, rowtime` or `ORDER BY rowtime DESC, price ASC` is not.\n+\u5bf9\u4e8e\u793a\u4f8b `Ticker` \u8868\uff0c\u8bf8\u5982 `ORDER BY rowtime ASC, price DESC` \u7684\u5b9a\u4e49\u662f\u6709\u6548\u7684\uff0c\u4f46 `ORDER BY price, rowtime` \u6216\u8005 `ORDER BY rowtime DESC, price ASC` \u662f\u65e0\u6548\u7684\u3002\n \n Define & Measures\n -----------------\n \n-The `DEFINE` and `MEASURES` keywords have similar meanings to the `WHERE` and `SELECT` clauses in a\n-simple SQL query.\n+`DEFINE` \u548c `MEASURES` \u5173\u952e\u5b57\u4e0e\u7b80\u5355 SQL \u67e5\u8be2\u4e2d\u7684 `WHERE` \u548c `SELECT` \u5b50\u53e5\u5177\u6709\u76f8\u8fd1\u7684\u542b\u4e49\u3002\n \n-The `MEASURES` clause defines what will be included in the output of a matching pattern. It can\n-project columns and define expressions for evaluation. The number of produced rows depends on the\n-[output mode](#output-mode) setting.\n+`MEASURES` \u5b50\u53e5\u5b9a\u4e49\u5339\u914d\u6a21\u5f0f\u7684\u8f93\u51fa\u4e2d\u8981\u5305\u542b\u54ea\u4e9b\u5185\u5bb9\u3002\u5b83\u53ef\u4ee5\u6295\u5f71\u5217\u5e76\u5b9a\u4e49\u8868\u8fbe\u5f0f\u8fdb\u884c\u8ba1\u7b97\u3002\u4ea7\u751f\u7684\u884c\u6570\u53d6\u51b3\u4e8e [output mode](#\u8f93\u51fa\u65b9\u5f0f) \u8bbe\u7f6e\u3002\n \n-The `DEFINE` clause specifies conditions that rows have to fulfill in order to be classified to a\n-corresponding [pattern variable](#defining-a-pattern). If a condition is not defined for a pattern\n-variable, a default condition will be used which evaluates to `true` for every row.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a\u884c\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u624d\u80fd\u88ab\u5206\u7c7b\u5230\u76f8\u5e94\u7684 [pattern variable](#\u5b9a\u4e49\u6a21\u5f0f)\u3002\u5982\u679c\u6ca1\u6709\u4e3a\u6a21\u5f0f\u53d8\u91cf\u5b9a\u4e49\u6761\u4ef6\uff0c\u5219\u5c06\u4f7f\u7528\u5bf9\u6bcf\u4e00\u884c\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a `true` \u7684\u9ed8\u8ba4\u6761\u4ef6\u3002\n \n-For a more detailed explanation about expressions that can be used in those clauses, please have a\n-look at the [event stream navigation](#pattern-navigation) section.\n+\u6709\u5173\u5728\u8fd9\u4e9b\u5b50\u53e5\u4e2d\u53ef\u4f7f\u7528\u7684\u8868\u8fbe\u5f0f\u7684\u66f4\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u8bf7\u67e5\u770b [event stream navigation](#\u6a21\u5f0f\u5bfc\u822a) \u90e8\u5206\u3002\n \n ### Aggregations\n \n-Aggregations can be used in `DEFINE` and `MEASURES` clauses. Both\n-[built-in]({{ site.baseurl }}/dev/table/functions/systemFunctions.html) and custom\n-[user defined]({{ site.baseurl }}/dev/table/functions/udfs.html) functions are supported.\n+Aggregations \u53ef\u4ee5\u5728 `DEFINE` \u548c `MEASURES` \u5b50\u53e5\u4e2d\u4f7f\u7528\u3002\u652f\u6301 [built-in]({% link dev/table/functions/systemFunctions.zh.md %}) \u548c\u7528\u6237 [user defined]({% link dev/table/functions/udfs.zh.md %}) \u51fd\u6570\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 273}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5MTMxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4f8b\u5982\uff0c\u8fd9\u79cd\u9650\u5236\u53d1\u751f\u5728`01-Apr-11 10\uff1a00\uff1a04`\u3002\u63a5\u4e0b\u6765\u7684\u65f6\u95f4\u6bb5\u5728 `01-Apr-11 10:00:11` \u518d\u6b21\u8d85\u8fc7\u5e73\u5747\u4ef7\u683c `15`\u3002\u56e0\u6b64\uff0c\u6240\u8ff0\u67e5\u8be2\u7684\u7ed3\u679c\u5c06\u662f\uff1a\n          \n          \n            \n            \u4f8b\u5982\uff0c\u8fd9\u79cd\u9650\u5236\u53d1\u751f\u5728 `01-Apr-11 10\uff1a00\uff1a04`\u3002\u63a5\u4e0b\u6765\u7684\u65f6\u95f4\u6bb5\u5728 `01-Apr-11 10:00:11` \u518d\u6b21\u8d85\u8fc7\u5e73\u5747\u4ef7\u683c `15`\u3002\u56e0\u6b64\uff0c\u6240\u8ff0\u67e5\u8be2\u7684\u7ed3\u679c\u5c06\u662f\uff1a", "url": "https://github.com/apache/flink/pull/12798#discussion_r449991319", "createdAt": "2020-07-06T05:30:46Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -311,10 +247,8 @@ symbol         rowtime         price    tax\n 'ACME'  '01-Apr-11 10:00:11'   30      1\n {% endhighlight %}\n \n-The query will accumulate events as part of the pattern variable `A` as long as the average price\n-of them does not exceed `15`. For example, such a limit exceeding happens at `01-Apr-11 10:00:04`.\n-The following period exceeds the average price of `15` again at `01-Apr-11 10:00:11`. Thus the\n-results for said query will be:\n+\u53ea\u8981\u4e8b\u4ef6\u7684\u5e73\u5747\u4ef7\u683c\u4e0d\u8d85\u8fc7 `15`\uff0c\u67e5\u8be2\u5c31\u4f1a\u5c06\u4e8b\u4ef6\u4f5c\u4e3a\u6a21\u5f0f\u53d8\u91cf `A` \u7684\u4e00\u90e8\u5206\u8fdb\u884c\u7d2f\u79ef\u3002\n+\u4f8b\u5982\uff0c\u8fd9\u79cd\u9650\u5236\u53d1\u751f\u5728`01-Apr-11 10\uff1a00\uff1a04`\u3002\u63a5\u4e0b\u6765\u7684\u65f6\u95f4\u6bb5\u5728 `01-Apr-11 10:00:11` \u518d\u6b21\u8d85\u8fc7\u5e73\u5747\u4ef7\u683c `15`\u3002\u56e0\u6b64\uff0c\u6240\u8ff0\u67e5\u8be2\u7684\u7ed3\u679c\u5c06\u662f\uff1a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 305}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5MTg0MA==", "bodyText": "\u4e2a\u4eba\u611f\u89c9\uff1a\u8fd9\u4e24\u4e2a\u7ffb\u8bd1\u53ef\u4ee5\u518d\u4f18\u5316\u4e0b", "url": "https://github.com/apache/flink/pull/12798#discussion_r449991840", "createdAt": "2020-07-06T05:32:57Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -323,52 +257,43 @@ ACME       01-APR-11 10:00:00  01-APR-11 10:00:03     14.5\n ACME       01-APR-11 10:00:05  01-APR-11 10:00:10     13.5\n {% endhighlight %}\n \n-<span class=\"label label-info\">Note</span> Aggregations can be applied to expressions, but only if\n-they reference a single pattern variable. Thus `SUM(A.price * A.tax)` is a valid one, but\n-`AVG(A.price * B.tax)` is not.\n+<span class=\"label label-info\">\u6ce8\u610f</span> \u805a\u5408\u53ef\u4ee5\u5e94\u7528\u4e8e\u8868\u8fbe\u5f0f\uff0c\u4f46\u524d\u63d0\u662f\u5b83\u4eec\u5f15\u7528\u5355\u4e2a\u6a21\u5f0f\u53d8\u91cf\u3002\u56e0\u6b64\uff0c`SUM(A.price * A.tax)` \u662f\u6709\u6548\u7684\uff0c\u800c `AVG(A.price * B.tax)` \u5219\u662f\u65e0\u6548\u7684\u3002\n \n-<span class=\"label label-danger\">Attention</span> `DISTINCT` aggregations are not supported.\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u4e0d\u652f\u6301 `DISTINCT` \u805a\u5408\u3002\n \n-Defining a Pattern\n+\u5b9a\u4e49\u6a21\u5f0f\n ------------------\n \n-The `MATCH_RECOGNIZE` clause allows users to search for patterns in event streams using a powerful\n-and expressive syntax that is somewhat similar to the widespread regular expression syntax.\n+`MATCH_RECOGNIZE` \u5b50\u53e5\u5141\u8bb8\u7528\u6237\u5728\u4e8b\u4ef6\u6d41\u4e2d\u4f7f\u7528\u529f\u80fd\u5f3a\u5927\u3001\u8868\u8fbe\u529b\u5f3a\u7684\u8bed\u6cd5\u641c\u7d22\u6a21\u5f0f\uff0c\u8fd9\u79cd\u8bed\u6cd5\u4e0e\u5e7f\u6cdb\u4f7f\u7528\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u8bed\u6cd5\u6709\u4e9b\u76f8\u4f3c\u3002\n \n-Every pattern is constructed from basic building blocks, called _pattern variables_, to which\n-operators (quantifiers and other modifiers) can be applied. The whole pattern must be enclosed in\n-brackets.\n+\u6bcf\u4e2a\u6a21\u5f0f\u90fd\u662f\u7531\u57fa\u672c\u7684\u6784\u5efa\u5757\u6784\u9020\u7684\uff0c\u79f0\u4e3a _pattern variables_\uff0c\u53ef\u4ee5\u5e94\u7528\u7b97\u5b50\uff08\u91cf\u8bcd\u548c\u5176\u4ed6\u4fee\u9970\u7b26\uff09\u5230\u8fd9\u4e9b\u6a21\u5757\u4e2d\u3002\u6574\u4e2a\u6a21\u5f0f\u5fc5\u987b\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u3002\n \n-An example pattern could look like:\n+\u793a\u4f8b\u6a21\u5f0f\u5982\u4e0b\u6240\u793a\uff1a\n \n {% highlight sql %}\n PATTERN (A B+ C* D)\n {% endhighlight %}\n \n-One may use the following operators:\n+\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u7b97\u5b50\uff1a\n+\n+* _Concatenation_ - \u50cf `(A B)` \u8fd9\u6837\u7684\u6a21\u5f0f\u610f\u5473\u7740 `A` \u548c `B` \u4e4b\u95f4\u7684\u8fde\u63a5\u662f\u4e25\u683c\u7684\u3002\u56e0\u6b64\uff0c\u5728\u5b83\u4eec\u4e4b\u95f4\u4e0d\u80fd\u5b58\u5728\u6ca1\u6709\u6620\u5c04\u5230 `A` \u6216 `B` \u7684\u884c\u3002\n+* _Quantifiers_ - \u4fee\u6539\u53ef\u4ee5\u6620\u5c04\u5230\u6a21\u5f0f\u53d8\u91cf\u7684\u884c\u6570\u3002\n+  * `*` \u2014 _0_ \u6216\u8005\u591a\u884c\n+  * `+` \u2014 _1_ \u6216\u8005\u591a\u884c\n+  * `?` \u2014 _0_ \u6216\u8005 _1_ \u884c\n+  * `{ n }` \u2014 \u4e25\u683c _n_ \u884c\uff08_n > 0_\uff09\n+  * `{ n, }` \u2014 _n_ \u6216\u8005\u66f4\u591a\u884c\uff08_n \u2265 0_\uff09\n+  * `{ n, m }` \u2014 \u5728 _n_ \u5230 _m_\uff08\u5305\u542b\uff09\u884c\u4e4b\u95f4\uff08_0 \u2264 n \u2264 m\uff0c0 < m_\uff09\n+  * `{ , m }` \u2014 \u5728 _0_ \u5230 _m_\uff08\u5305\u542b\uff09\u884c\u4e4b\u95f4\uff08_m > 0_\uff09\n \n-* _Concatenation_ - a pattern like `(A B)` means that the contiguity is strict between `A` and `B`.\n-  Therefore, there can be no rows that were not mapped to `A` or `B` in between.\n-* _Quantifiers_ - modify the number of rows that can be mapped to the pattern variable.\n-  * `*` \u2014 _0_ or more rows\n-  * `+` \u2014 _1_ or more rows\n-  * `?` \u2014 _0_ or _1_ rows\n-  * `{ n }` \u2014 exactly _n_ rows (_n > 0_)\n-  * `{ n, }` \u2014 _n_ or more rows (_n \u2265 0_)\n-  * `{ n, m }` \u2014 between _n_ and _m_ (inclusive) rows (_0 \u2264 n \u2264 m, 0 < m_)\n-  * `{ , m }` \u2014 between _0_ and _m_ (inclusive) rows (_m > 0_)\n \n-<span class=\"label label-danger\">Attention</span> Patterns that can potentially produce an empty\n-match are not supported. Examples of such patterns are `PATTERN (A*)`, `PATTERN  (A? B*)`,\n-`PATTERN (A{0,} B{0,} C*)`, etc.\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u4e0d\u652f\u6301\u53ef\u80fd\u4ea7\u751f\u7a7a\u5339\u914d\u7684\u6a21\u5f0f\u3002\u6b64\u7c7b\u6a21\u5f0f\u7684\u793a\u4f8b\u5982 `PATTERN (A*)`\uff0c`PATTERN  (A? B*)`\uff0c`PATTERN (A{0,} B{0,} C*)` \u7b49\u3002\n \n-### Greedy & Reluctant Quantifiers\n+### \u8d2a\u5a6a\u548c\u52c9\u5f3a\u91cf\u8bcd", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 371}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5MjA0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u6a21\u5f0f\u53d8\u91cf `B` \u53ea\u5339\u914d\u4ef7\u683c\u4e3a`12`\u7684\u884c\uff0c\u800c\u4e0d\u662f\u5305\u542b\u4ef7\u683c\u4e3a`12`\u3001`13`\u548c`14`\u7684\u884c\u3002\n          \n          \n            \n            \u6a21\u5f0f\u53d8\u91cf `B` \u53ea\u5339\u914d\u4ef7\u683c\u4e3a `12` \u7684\u884c\uff0c\u800c\u4e0d\u662f\u5305\u542b\u4ef7\u683c\u4e3a `12`\u3001`13` \u548c `14` \u7684\u884c\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r449992043", "createdAt": "2020-07-06T05:33:47Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -419,13 +343,9 @@ produce:\n  XYZ      16\n {% endhighlight %}\n \n-The pattern variable `B` matches only to the row with price `12` instead of swallowing the rows\n-with prices `12`, `13`, and `14`.\n+\u6a21\u5f0f\u53d8\u91cf `B` \u53ea\u5339\u914d\u4ef7\u683c\u4e3a`12`\u7684\u884c\uff0c\u800c\u4e0d\u662f\u5305\u542b\u4ef7\u683c\u4e3a`12`\u3001`13`\u548c`14`\u7684\u884c\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 417}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5MjQ1OQ==", "bodyText": "\u8fd9\u91cc\u6e32\u67d3\u4e4b\u540e\u662f\u5217\u8868\uff0c\u201c\u3002\u201d\u662f\u5426\u53ef\u4ee5\u53bb\u6389\u5462\uff1f", "url": "https://github.com/apache/flink/pull/12798#discussion_r449992459", "createdAt": "2020-07-06T05:35:21Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -498,36 +409,30 @@ symbol         rowtime         price    tax\n 'ACME'  '01-Apr-11 13:20:00'   19      1\n {% endhighlight %}\n \n-The query will produce the following results:\n+\u67e5\u8be2\u5c06\u751f\u6210\u4ee5\u4e0b\u7ed3\u679c\uff1a\n \n {% highlight text %}\n symbol         dropTime         dropDiff\n ======  ====================  =============\n 'ACME'  '01-Apr-11 13:00:00'      14\n {% endhighlight %}\n \n-The resulting row represents a price drop from `15` (at `01-Apr-11 12:00:00`) to `1` (at\n-`01-Apr-11 13:00:00`). The `dropDiff` column contains the price difference.\n+\u7ed3\u679c\u884c\u4ee3\u8868\u4ef7\u683c\u4ece`15`\uff08\u5728`01-Apr-11 12:00:00`\uff09\u4e0b\u964d\u5230`1`\uff08\u5728`01-Apr-11 13:00:00`\uff09\u3002`dropDiff` \u5217\u5305\u542b\u4ef7\u683c\u5dee\u5f02\u3002\n \n-Notice that even though prices also drop by higher values, for example, by `11` (between\n-`01-Apr-11 10:00:00` and `01-Apr-11 11:40:00`), the time difference between those two events is\n-larger than 1 hour. Thus, they don't produce a match.\n+\u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u4ef7\u683c\u4e5f\u4e0b\u964d\u4e86\u8f83\u9ad8\u7684\u503c\uff0c\u4f8b\u5982\uff0c\u4e0b\u964d\u4e86`11`\uff08\u5728`01-Apr-11 10:00:00`\u548c`01-Apr-11 11:40:00`\u4e4b\u95f4\uff09\uff0c\u8fd9\u4e24\u4e2a\u4e8b\u4ef6\u4e4b\u95f4\u7684\u65f6\u95f4\u5dee\u5927\u4e8e1\u5c0f\u65f6\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u4e0d\u4f1a\u4ea7\u751f\u5339\u914d\u3002\n \n-Output Mode\n+\u8f93\u51fa\u65b9\u5f0f\n -----------\n \n-The _output mode_ describes how many rows should be emitted for every found match. The SQL standard\n-describes two modes:\n+_output mode_ \u63cf\u8ff0\u6bcf\u4e2a\u627e\u5230\u7684\u5339\u914d\u9879\u5e94\u8be5\u8f93\u51fa\u591a\u5c11\u884c\u3002SQL \u6807\u51c6\u63cf\u8ff0\u4e86\u4e24\u79cd\u65b9\u5f0f\uff1a\n - `ALL ROWS PER MATCH`\n-- `ONE ROW PER MATCH`.\n+- `ONE ROW PER MATCH`\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 509}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5MjYzMA==", "bodyText": "\u4e0a\u9762\u5bf9\u8fd9\u4e2a\u540d\u8bcd\u505a\u4e86\u7ffb\u8bd1\uff0c\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u53c8\u7528\u539f\u6587\u5462\uff1f", "url": "https://github.com/apache/flink/pull/12798#discussion_r449992630", "createdAt": "2020-07-06T05:36:08Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -558,43 +463,36 @@ For the following input rows:\n  XYZ      2     11       2018-09-17 10:00:05\n {% endhighlight %}\n \n-The query will produce the following output:\n+\u8be5\u67e5\u8be2\u5c06\u751f\u6210\u4ee5\u4e0b\u8f93\u51fa\uff1a\n \n {% highlight text %}\n  symbol   startPrice   topPrice   lastPrice\n ======== ============ ========== ===========\n  XYZ      10           13         11\n {% endhighlight %}\n \n-The pattern recognition is partitioned by the `symbol` column. Even though not explicitly mentioned\n-in the `MEASURES` clause, the partitioned column is added at the beginning of the result.\n+\u8be5\u6a21\u5f0f\u8bc6\u522b\u7531 `symbol` \u5217\u5206\u533a\u3002\u5373\u4f7f\u5728 `MEASURES` \u5b50\u53e5\u4e2d\u672a\u660e\u786e\u63d0\u53ca\uff0c\u5206\u533a\u5217\u4ecd\u4f1a\u6dfb\u52a0\u5230\u7ed3\u679c\u7684\u5f00\u5934\u3002\n \n-Pattern Navigation\n+\u6a21\u5f0f\u5bfc\u822a\n ------------------\n \n-The `DEFINE` and `MEASURES` clauses allow for navigating within the list of rows that (potentially)\n-match a pattern.\n+`DEFINE` \u548c `MEASURES` \u5b50\u53e5\u5141\u8bb8\u5728\uff08\u53ef\u80fd\uff09\u5339\u914d\u6a21\u5f0f\u7684\u884c\u5217\u8868\u4e2d\u8fdb\u884c\u5bfc\u822a\u3002\n \n-This section discusses this navigation for declaring conditions or producing output results.\n+\u672c\u8282\u8ba8\u8bba\u7528\u4e8e\u58f0\u660e\u6761\u4ef6\u6216\u4ea7\u751f\u8f93\u51fa\u7ed3\u679c\u7684\u5bfc\u822a\u3002\n \n-### Pattern Variable Referencing\n+### \u5f15\u7528\u6a21\u5f0f\u53d8\u91cf\n \n-A _pattern variable reference_ allows a set of rows mapped to a particular pattern variable in the\n-`DEFINE` or `MEASURES` clauses to be referenced.\n+_pattern variable reference_ \u5141\u8bb8\u5f15\u7528\u4e00\u7ec4\u6620\u5c04\u5230 `DEFINE` \u6216 `MEASURES` \u5b50\u53e5\u4e2d\u7279\u5b9a\u6a21\u5f0f\u53d8\u91cf\u7684\u884c\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 566}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5MjY4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5982\u679c `DEFINE`/`MEASURES` \u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u4e00\u884c\uff08\u4f8b\u5982`a.price`\u6216`a.price>10`\uff09\uff0c\u5b83\u5c06\u9009\u62e9\u5c5e\u4e8e\u76f8\u5e94\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002\n          \n          \n            \n            \u5982\u679c `DEFINE`/`MEASURES` \u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u4e00\u884c\uff08\u4f8b\u5982 `a.price` \u6216 `a.price>10`\uff09\uff0c\u5b83\u5c06\u9009\u62e9\u5c5e\u4e8e\u76f8\u5e94\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r449992689", "createdAt": "2020-07-06T05:36:20Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -558,43 +463,36 @@ For the following input rows:\n  XYZ      2     11       2018-09-17 10:00:05\n {% endhighlight %}\n \n-The query will produce the following output:\n+\u8be5\u67e5\u8be2\u5c06\u751f\u6210\u4ee5\u4e0b\u8f93\u51fa\uff1a\n \n {% highlight text %}\n  symbol   startPrice   topPrice   lastPrice\n ======== ============ ========== ===========\n  XYZ      10           13         11\n {% endhighlight %}\n \n-The pattern recognition is partitioned by the `symbol` column. Even though not explicitly mentioned\n-in the `MEASURES` clause, the partitioned column is added at the beginning of the result.\n+\u8be5\u6a21\u5f0f\u8bc6\u522b\u7531 `symbol` \u5217\u5206\u533a\u3002\u5373\u4f7f\u5728 `MEASURES` \u5b50\u53e5\u4e2d\u672a\u660e\u786e\u63d0\u53ca\uff0c\u5206\u533a\u5217\u4ecd\u4f1a\u6dfb\u52a0\u5230\u7ed3\u679c\u7684\u5f00\u5934\u3002\n \n-Pattern Navigation\n+\u6a21\u5f0f\u5bfc\u822a\n ------------------\n \n-The `DEFINE` and `MEASURES` clauses allow for navigating within the list of rows that (potentially)\n-match a pattern.\n+`DEFINE` \u548c `MEASURES` \u5b50\u53e5\u5141\u8bb8\u5728\uff08\u53ef\u80fd\uff09\u5339\u914d\u6a21\u5f0f\u7684\u884c\u5217\u8868\u4e2d\u8fdb\u884c\u5bfc\u822a\u3002\n \n-This section discusses this navigation for declaring conditions or producing output results.\n+\u672c\u8282\u8ba8\u8bba\u7528\u4e8e\u58f0\u660e\u6761\u4ef6\u6216\u4ea7\u751f\u8f93\u51fa\u7ed3\u679c\u7684\u5bfc\u822a\u3002\n \n-### Pattern Variable Referencing\n+### \u5f15\u7528\u6a21\u5f0f\u53d8\u91cf\n \n-A _pattern variable reference_ allows a set of rows mapped to a particular pattern variable in the\n-`DEFINE` or `MEASURES` clauses to be referenced.\n+_pattern variable reference_ \u5141\u8bb8\u5f15\u7528\u4e00\u7ec4\u6620\u5c04\u5230 `DEFINE` \u6216 `MEASURES` \u5b50\u53e5\u4e2d\u7279\u5b9a\u6a21\u5f0f\u53d8\u91cf\u7684\u884c\u3002\n \n-For example, the expression `A.price` describes a set of rows mapped so far to `A` plus the current\n-row if we try to match the current row to `A`. If an expression in the `DEFINE`/`MEASURES` clause\n-requires a single row (e.g. `A.price` or `A.price > 10`), it selects the last value belonging to\n-the corresponding set.\n+\u5982\u679c `DEFINE`/`MEASURES` \u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u4e00\u884c\uff08\u4f8b\u5982`a.price`\u6216`a.price>10`\uff09\uff0c\u5b83\u5c06\u9009\u62e9\u5c5e\u4e8e\u76f8\u5e94\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 572}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5MjkzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  <p>\u8fd4\u56de\u6620\u5c04\u5230\u53d8\u91cf\u6700\u540en\u4e2a\u5143\u7d20\u7684\u4e8b\u4ef6\u4e2d\u7684\u5b57\u6bb5\u503c\u3002\u8ba1\u6570\u4ece\u6620\u5c04\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u3002</p>\n          \n          \n            \n                  <p>\u8fd4\u56de\u6620\u5c04\u5230\u53d8\u91cf\u6700\u540e n \u4e2a\u5143\u7d20\u7684\u4e8b\u4ef6\u4e2d\u7684\u5b57\u6bb5\u503c\u3002\u8ba1\u6570\u4ece\u6620\u5c04\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u3002</p>\n          \n      \n    \n    \n  \n\n\u82f1\u6587/\u6570\u5b57 \u4e0e \u4e2d\u6587\u95f4\u9700\u8981\u6709\u7a7a\u683c\uff0c\u672c\u6587\u5176\u4ed6\u5730\u65b9\u4e5f\u53ef\u4ee5\u68c0\u67e5\u4e0b", "url": "https://github.com/apache/flink/pull/12798#discussion_r449992931", "createdAt": "2020-07-06T05:37:18Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -720,8 +610,7 @@ LAST(variable.field, n)\n {% endhighlight %}\n     </td>\n     <td>\n-      <p>Returns the value of the field from the event that was mapped to the <i>n</i>-th\n-      <i>last</i> element of the variable. The counting starts at the last element mapped.</p>\n+      <p>\u8fd4\u56de\u6620\u5c04\u5230\u53d8\u91cf\u6700\u540en\u4e2a\u5143\u7d20\u7684\u4e8b\u4ef6\u4e2d\u7684\u5b57\u6bb5\u503c\u3002\u8ba1\u6570\u4ece\u6620\u5c04\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u3002</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 647}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5Mjk4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  <p>\u8fd4\u56de\u6620\u5c04\u5230\u53d8\u91cf\u7684\u7b2c<i>n</i>\u4e2a\u5143\u7d20\u7684\u4e8b\u4ef6\u4e2d\u7684\u5b57\u6bb5\u503c\u3002\u8ba1\u6570\u4ece\u6620\u5c04\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u3002</p>\n          \n          \n            \n                  <p>\u8fd4\u56de\u6620\u5c04\u5230\u53d8\u91cf\u7684\u7b2c <i>n</i> \u4e2a\u5143\u7d20\u7684\u4e8b\u4ef6\u4e2d\u7684\u5b57\u6bb5\u503c\u3002\u8ba1\u6570\u4ece\u6620\u5c04\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u3002</p>", "url": "https://github.com/apache/flink/pull/12798#discussion_r449992989", "createdAt": "2020-07-06T05:37:28Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -731,17 +620,15 @@ FIRST(variable.field, n)\n {% endhighlight %}\n     </td>\n     <td>\n-      <p>Returns the value of the field from the event that was mapped to the <i>n</i>-th element\n-      of the variable. The counting starts at the first element mapped.</p>\n+      <p>\u8fd4\u56de\u6620\u5c04\u5230\u53d8\u91cf\u7684\u7b2c<i>n</i>\u4e2a\u5143\u7d20\u7684\u4e8b\u4ef6\u4e2d\u7684\u5b57\u6bb5\u503c\u3002\u8ba1\u6570\u4ece\u6620\u5c04\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u3002</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 657}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk5MzQwNg==", "bodyText": "\u65f6\u95f4\u5c5e\u6027\u76f8\u5173\u7684\u82f1\u6587\u5efa\u8bae\u7ffb\u8bd1\u4e00\u4e0b\uff0c\u76ee\u6807\u6587\u6863\u5df2\u7ecf\u7ffb\u8bd1\u6210\u4e2d\u6587\u4e86", "url": "https://github.com/apache/flink/pull/12798#discussion_r449993406", "createdAt": "2020-07-06T05:39:19Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -1035,34 +899,28 @@ use [time attributes](time_attributes.html). To select those there are available\n       <td>\n         <code>MATCH_ROWTIME()</code><br/>\n       </td>\n-      <td><p>Returns the timestamp of the last row that was mapped to the given pattern.</p>\n-      <p>The resulting attribute is a <a href=\"time_attributes.html\">rowtime attribute</a>\n-         that can be used in subsequent time-based operations such as\n-         <a href=\"#joins\">interval joins</a> and <a href=\"#aggregations\">group window or over\n-         window aggregations</a>.</p></td>\n+      <td>\n+        <p>\u8fd4\u56de\u6620\u5c04\u5230\u7ed9\u5b9a\u6a21\u5f0f\u7684\u6700\u540e\u4e00\u884c\u7684\u65f6\u95f4\u6233\u3002</p>\n+        <p>\u7ed3\u679c\u5c5e\u6027\u662f <a href=\"{% link dev/table/streaming/time_attributes.zh.md %}\">rowtime attribute</a>\uff0c\u53ef\u7528\u4e8e\u540e\u7eed\u57fa\u4e8e\u65f6\u95f4\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982 <a href=\"{% link dev/table/streaming/joins.zh.md %}#interval-joins\">interval joins</a> \u548c <a href=\"#aggregations\">group window or over window aggregations</a>\u3002</p>\n+      </td>\n     </tr>\n     <tr>\n       <td>\n         <code>MATCH_PROCTIME()</code><br/>\n       </td>\n-      <td><p>Returns a <a href=\"time_attributes.html#processing-time\">proctime attribute</a>\n-          that can be used in subsequent time-based operations such as\n-          <a href=\"#joins\">interval joins</a> and <a href=\"#aggregations\">group window or over\n-          window aggregations</a>.</p></td>\n+      <td>\n+        <p>\u8fd4\u56de <a href=\"{% link dev/table/streaming/time_attributes.zh.md %}#\u5904\u7406\u65f6\u95f4\">proctime attribute</a>\uff0c\u8be5\u5c5e\u6027\u53ef\u7528\u4e8e\u968f\u540e\u7684\u57fa\u4e8e\u65f6\u95f4\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982 <a href=\"{% link dev/table/streaming/joins.zh.md %}#interval-joins\">interval joins</a> \u548c <a href=\"#aggregations\">group window or over window aggregations</a>\u3002</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63895a2f0147d6a673d32b011e6fb9cbe57f7eac"}, "originalPosition": 913}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "712b7a57cea8f3b0ddac3f778f87079844198eae", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/712b7a57cea8f3b0ddac3f778f87079844198eae", "committedDate": "2020-07-06T07:06:17Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}, "afterCommit": {"oid": "fdb2b8fd236b83a6a57ce6be34b93ae0ee4d7292", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/fdb2b8fd236b83a6a57ce6be34b93ae0ee4d7292", "committedDate": "2020-07-06T13:04:57Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md and check the invalid links ."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMTc4MjI2", "url": "https://github.com/apache/flink/pull/12798#pullrequestreview-443178226", "createdAt": "2020-07-06T15:24:29Z", "commit": {"oid": "081e5877dfd099260e9f88f10d49d3c89bae6e47"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNToyNDoyOVrOGtcFWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNToyNDoyOVrOGtcFWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI5OTIyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Flink \u5bf9 `MATCH_RECOGNIZE` \u5b50\u53e5\u7684\u5b9e\u73b0\u662f\u4e00\u9879\u6301\u7eed\u7684\u5de5\u4f5c\uff0c\u76ee\u524d\u5c1a\u4e0d\u652f\u6301SQL\u6807\u51c6\u7684\u67d0\u4e9b\u529f\u80fd\u3002\n          \n          \n            \n            Flink \u5bf9 `MATCH_RECOGNIZE` \u5b50\u53e5\u7684\u5b9e\u73b0\u662f\u4e00\u9879\u6301\u7eed\u7684\u5de5\u4f5c\uff0c\u76ee\u524d\u5c1a\u4e0d\u652f\u6301 SQL \u6807\u51c6\u7684\u67d0\u4e9b\u529f\u80fd\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r450299225", "createdAt": "2020-07-06T15:24:29Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -1091,42 +983,31 @@ DEFINE\n   C as C.price > 20\n {% endhighlight %}\n \n-<span class=\"label label-danger\">Attention</span> Please note that the `MATCH_RECOGNIZE` clause\n-does not use a configured [state retention time](query_configuration.html#idle-state-retention-time).\n-One may want to use the `WITHIN` [clause](#time-constraint) for this purpose.\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u8bf7\u6ce8\u610f\uff0c`MATCH_RECOGNIZE` \u5b50\u53e5\u672a\u4f7f\u7528\u914d\u7f6e\u7684 [state retention time]({% link dev/table/streaming/query_configuration.zh.md %}#idle-state-retention-time)\u3002\u4e3a\u6b64\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528 `WITHIN` [clause](#known-limitations)\u3002\n+\n+<a name=\"known-limitations\"></a>\n \n-Known Limitations\n+\u5df2\u77e5\u7684\u5c40\u9650\n -----------------\n \n-Flink's implementation of the `MATCH_RECOGNIZE` clause is an ongoing effort, and some features of\n-the SQL standard are not yet supported.\n-\n-Unsupported features include:\n-* Pattern expressions:\n-  * Pattern groups - this means that e.g. quantifiers can not be applied to a subsequence of the\n-    pattern. Thus, `(A (B C)+)` is not a valid pattern.\n-  * Alterations - patterns like `PATTERN((A B | C D) E)`, which means that either a subsequence\n-    `A B` or `C D` has to be found before looking for the `E` row.\n-  * `PERMUTE` operator - which is equivalent to all permutations of variables that it was applied\n-    to e.g. `PATTERN (PERMUTE (A, B, C))` = `PATTERN (A B C | A C B | B A C | B C A | C A B | C B A)`.\n-  * Anchors - `^, $`, which denote beginning/end of a partition, those do not make sense in the\n-    streaming context and will not be supported.\n-  * Exclusion - `PATTERN ({- A -} B)` meaning that `A` will be looked for but will not participate\n-    in the output. This works only for the `ALL ROWS PER MATCH` mode.\n-  * Reluctant optional quantifier - `PATTERN A??` only the greedy optional quantifier is supported.\n-* `ALL ROWS PER MATCH` output mode - which produces an output row for every row that participated\n-   in the creation of a found match. This also means:\n-  * that the only supported semantic for the `MEASURES` clause is `FINAL`\n-  * `CLASSIFIER` function, which returns the pattern variable that a row was mapped to, is not yet\n-    supported.\n-* `SUBSET` - which allows creating logical groups of pattern variables and using those groups in\n-  the `DEFINE` and `MEASURES` clauses.\n-* Physical offsets - `PREV/NEXT`, which indexes all events seen rather than only those that were\n-  mapped to a pattern variable (as in [logical offsets](#logical-offsets) case).\n-* Extracting time attributes - there is currently no possibility to get a time attribute for\n-  subsequent time-based operations.\n-* `MATCH_RECOGNIZE` is supported only for SQL. There is no equivalent in the Table API.\n+Flink \u5bf9 `MATCH_RECOGNIZE` \u5b50\u53e5\u7684\u5b9e\u73b0\u662f\u4e00\u9879\u6301\u7eed\u7684\u5de5\u4f5c\uff0c\u76ee\u524d\u5c1a\u4e0d\u652f\u6301SQL\u6807\u51c6\u7684\u67d0\u4e9b\u529f\u80fd\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081e5877dfd099260e9f88f10d49d3c89bae6e47"}, "originalPosition": 1032}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTY4MDIz", "url": "https://github.com/apache/flink/pull/12798#pullrequestreview-443568023", "createdAt": "2020-07-07T05:16:30Z", "commit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "state": "COMMENTED", "comments": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNToxNjozMFrOGtvaFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNTo1NzoyNFrOGuZMwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxNTgzMQ==", "bodyText": "\u8fd9\u4e2a\u6211\u5efa\u8bae\u5355\u72ec\u4f7f\u7528\u4e00\u4e2a hotfix \u7684 commit \u6765\u8fdb\u884c\u4fee\u6539\uff0c\u5f53\u524d\u7684 PR \u4ec5\u7ffb\u8bd1 detecting patterns \u8fd9\u4e2a\u6587\u6863", "url": "https://github.com/apache/flink/pull/12798#discussion_r450615831", "createdAt": "2020-07-07T05:16:30Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/dynamic_tables.zh.md", "diffHunk": "@@ -128,6 +128,8 @@ DataStream \u4e0a\u7684\u5173\u7cfb\u67e5\u8be2\n \n \u4e0e\u524d\u9762\u4e00\u6837\uff0c\u5de6\u8fb9\u663e\u793a\u4e86\u8f93\u5165\u8868 `clicks`\u3002\u67e5\u8be2\u6bcf\u5c0f\u65f6\u6301\u7eed\u8ba1\u7b97\u7ed3\u679c\u5e76\u66f4\u65b0\u7ed3\u679c\u8868\u3002clicks\u8868\u5305\u542b\u56db\u884c\u5e26\u6709\u65f6\u95f4\u6233(`cTime`)\u7684\u6570\u636e\uff0c\u65f6\u95f4\u6233\u5728 `12:00:00` \u548c `12:59:59` \u4e4b\u95f4\u3002\u67e5\u8be2\u4ece\u8fd9\u4e2a\u8f93\u5165\u8ba1\u7b97\u51fa\u4e24\u4e2a\u7ed3\u679c\u884c(\u6bcf\u4e2a `user` \u4e00\u4e2a)\uff0c\u5e76\u5c06\u5b83\u4eec\u9644\u52a0\u5230\u7ed3\u679c\u8868\u4e2d\u3002\u5bf9\u4e8e `13:00:00` \u548c `13:59:59` \u4e4b\u95f4\u7684\u4e0b\u4e00\u4e2a\u7a97\u53e3\uff0c`clicks` \u8868\u5305\u542b\u4e09\u884c\uff0c\u8fd9\u5c06\u5bfc\u81f4\u53e6\u5916\u4e24\u884c\u88ab\u8ffd\u52a0\u5230\u7ed3\u679c\u8868\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u66f4\u591a\u7684\u884c\u88ab\u6dfb\u52a0\u5230 `click` \u4e2d\uff0c\u7ed3\u679c\u8868\u5c06\u88ab\u66f4\u65b0\u3002\n \n+<a name=\"update-and-append-queries\"></a>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxNjMzMw==", "bodyText": "\u8fd9\u4e9b\u5efa\u8bae\u53e6\u5916\u653e\u4e00\u4e2a pr \u4e2d\uff0c\u8fd9\u4e2a pr \u53ea\u505a\u7ffb\u8bd1\u7684\u4e8b\u60c5", "url": "https://github.com/apache/flink/pull/12798#discussion_r450616333", "createdAt": "2020-07-07T05:18:38Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.md", "diffHunk": "@@ -230,14 +230,14 @@ Order of Events\n ---------------\n \n Apache Flink allows for searching for patterns based on time; either\n-[processing time or event time](time_attributes.html).\n+[processing time or event time]({% link dev/table/streaming/time_attributes.md %}).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI4Mzk4Mg==", "bodyText": "\u8fd9\u53e5\u8bdd\u80fd\u518d\u4f18\u5316\u4e00\u4e0b\u5417\uff1f\u73b0\u5728\u7684\u63cf\u8ff0\u8bfb\u8d77\u6765\u611f\u89c9\u5c11\u4e00\u70b9\u4e1c\u897f\uff0c\u8fd9\u91cc\u7684 \"measures\" \u8fdb\u884c\u4e86\u4ecb\u7ecd\uff0c\u4f46\u662f\u6ca1\u6709\u8bf4\u5177\u4f53\u7528\u6765\u505a\u4ec0\u4e48\n\u6216\u8005\u524d\u9762\u7684 measures \u548c\u540e\u9762\u7684 \u8868\u8fbe\u5f0f \u8fdb\u884c\u4e00\u4e0b\u7edf\u4e00\uff1f", "url": "https://github.com/apache/flink/pull/12798#discussion_r451283982", "createdAt": "2020-07-08T05:01:14Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -24,28 +24,17 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-It is a common use case to search for a set of event patterns, especially in case of data streams.\n-Flink comes with a [complex event processing (CEP) library]({{ site.baseurl }}/dev/libs/cep.html)\n-which allows for pattern detection in event streams. Furthermore, Flink's SQL API provides a\n-relational way of expressing queries with a large set of built-in functions and rule-based\n-optimizations that can be used out of the box.\n-\n-In December 2016, the International Organization for Standardization (ISO) released a new version\n-of the SQL standard which includes _Row Pattern Recognition in SQL_\n-([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip)).\n-It allows Flink to consolidate CEP and SQL API using the `MATCH_RECOGNIZE` clause for complex event\n-processing in SQL.\n-\n-A `MATCH_RECOGNIZE` clause enables the following tasks:\n-* Logically partition and order the data that is used with the `PARTITION BY` and `ORDER BY`\n-  clauses.\n-* Define patterns of rows to seek using the `PATTERN` clause. These patterns use a syntax similar to\n-  that of regular expressions.\n-* The logical components of the row pattern variables are specified in the `DEFINE` clause.\n-* Define measures, which are expressions usable in other parts of the SQL query, in the `MEASURES`\n-  clause.\n-\n-The following example illustrates the syntax for basic pattern recognition:\n+\u641c\u7d22\u4e00\u7ec4\u4e8b\u4ef6\u6a21\u5f0f\uff08event pattern\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u4f8b\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u6d41\u7684\u60c5\u51b5\u4e0b\u3002Flink \u63d0\u4f9b [\u590d\u6742\u4e8b\u4ef6\u5904\u7406\uff08CEP\uff09\u5e93]({% link dev/libs/cep.zh.md %})\uff0c\u8be5\u5e93\u5141\u8bb8\u5728\u4e8b\u4ef6\u6d41\u4e2d\u8fdb\u884c\u6a21\u5f0f\u68c0\u6d4b\u3002\u6b64\u5916\uff0cFlink \u7684 SQL API \u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u7cfb\u5f0f\u7684\u67e5\u8be2\u8868\u8fbe\u65b9\u5f0f\uff0c\u5176\u4e2d\u5305\u542b\u5927\u91cf\u5185\u7f6e\u51fd\u6570\u548c\u57fa\u4e8e\u89c4\u5219\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002\n+\n+2016 \u5e74 12 \u6708\uff0c\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\uff08ISO\uff09\u53d1\u5e03\u4e86\u65b0\u7248\u672c\u7684 SQL \u6807\u51c6\uff0c\u5176\u4e2d\u5305\u62ec\u5728 _SQL \u4e2d\u7684\u884c\u6a21\u5f0f\u8bc6\u522b\uff08Row Pattern Recognition in SQL\uff09_([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip))\u3002\u5b83\u5141\u8bb8 Flink \u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\u878d\u5408 CEP \u548c SQL API\uff0c\u4ee5\u4fbf\u5728 SQL \u4e2d\u8fdb\u884c\u590d\u6742\u4e8b\u4ef6\u5904\u7406\u3002\n+\n+`MATCH_RECOGNIZE` \u5b50\u53e5\u542f\u7528\u4ee5\u4e0b\u4efb\u52a1\uff1a\n+* \u4f7f\u7528 `PARTITION BY` \u548c `ORDER BY` \u5b50\u53e5\u5bf9\u6570\u636e\u8fdb\u884c\u903b\u8f91\u5206\u533a\u548c\u6392\u5e8f\u3002\n+* \u4f7f\u7528 `PATTERN` \u5b50\u53e5\u5b9a\u4e49\u8981\u67e5\u627e\u7684\u884c\u7684\u6a21\u5f0f\u3002\u8fd9\u4e9b\u6a21\u5f0f\u4f7f\u7528\u7c7b\u4f3c\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u3002\n+* \u884c\u6a21\u5f0f\u53d8\u91cf\u7684\u903b\u8f91\u7ec4\u4ef6\u5728 `DEFINE` \u5b50\u53e5\u4e2d\u6307\u5b9a\u3002\n+* measures \u662f\u6307\u5728 `MEASURES` \u5b50\u53e5\u4e2d\u5b9a\u4e49\u7684\u8868\u8fbe\u5f0f\uff0c\u8fd9\u4e9b\u8868\u8fbe\u5f0f\u53ef\u7528\u5728 SQL \u67e5\u8be2\u4e2d\u7684\u5176\u4ed6\u90e8\u5206\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI4NjQxMw==", "bodyText": "\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c -> \u7684\u6700\u540e\u4e00\u884c \u53ef\u4ee5\u5417\uff1f", "url": "https://github.com/apache/flink/pull/12798#discussion_r451286413", "createdAt": "2020-07-08T05:10:39Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI4NjQ5OQ==", "bodyText": "\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c -> \u7684\u6700\u540e\u4e00\u884c \u53ef\u4ee5\u5417\uff1f", "url": "https://github.com/apache/flink/pull/12798#discussion_r451286499", "createdAt": "2020-07-08T05:11:01Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u53d8\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 198}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI4Njg4NQ==", "bodyText": "\u201c\u8f93\u51fa\u884c\u7684\u786e\u5207\u8868\u793a\u5728\u67e5\u8be2\u7684 MEASURES \u90e8\u5206\u4e2d\u5b9a\u4e49\u201d  \u8fd9\u53e5\u8bdd\u6709\u70b9\u4e0d\u901a\u987a\uff0c\u80fd\u5426\u6539\u8fdb\u4e00\u4e0b\u5462\uff1f", "url": "https://github.com/apache/flink/pull/12798#discussion_r451286885", "createdAt": "2020-07-08T05:12:17Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u53d8\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\n \n-This query produces a summary row for each period in which the price of a stock was continuously\n-decreasing.\n+\u6b64\u67e5\u8be2\u4e3a\u80a1\u7968\u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u7684\u6bcf\u4e2a\u671f\u95f4\u751f\u6210\u6458\u8981\u884c\u3002\n \n-The exact representation of the output rows is defined in the `MEASURES` part of the query. The\n-number of output rows is defined by the `ONE ROW PER MATCH` output mode.\n+\u8f93\u51fa\u884c\u7684\u786e\u5207\u8868\u793a\u5728\u67e5\u8be2\u7684 `MEASURES` \u90e8\u5206\u4e2d\u5b9a\u4e49\u3002\u8f93\u51fa\u884c\u6570\u7531 `ONE ROW PER MATCH` \u8f93\u51fa\u65b9\u5f0f\u5b9a\u4e49\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 206}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5MjQ3Ng==", "bodyText": "\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7ffb\u8bd1\u5417\uff1f\u4e0a\u9762\u5bf9\u4e8e measure \u5e94\u8be5\u6709\u5730\u65b9\u662f\u7ffb\u8bd1\u4e86\u7684\uff0c\u5168\u6587\u7684\u540c\u4e00\u4e2a\u8bcd\u8bed\u6700\u597d\u8fdb\u884c\u7edf\u4e00", "url": "https://github.com/apache/flink/pull/12798#discussion_r451292476", "createdAt": "2020-07-08T05:31:46Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u53d8\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\n \n-This query produces a summary row for each period in which the price of a stock was continuously\n-decreasing.\n+\u6b64\u67e5\u8be2\u4e3a\u80a1\u7968\u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u7684\u6bcf\u4e2a\u671f\u95f4\u751f\u6210\u6458\u8981\u884c\u3002\n \n-The exact representation of the output rows is defined in the `MEASURES` part of the query. The\n-number of output rows is defined by the `ONE ROW PER MATCH` output mode.\n+\u8f93\u51fa\u884c\u7684\u786e\u5207\u8868\u793a\u5728\u67e5\u8be2\u7684 `MEASURES` \u90e8\u5206\u4e2d\u5b9a\u4e49\u3002\u8f93\u51fa\u884c\u6570\u7531 `ONE ROW PER MATCH` \u8f93\u51fa\u65b9\u5f0f\u5b9a\u4e49\u3002\n \n {% highlight text %}\n  symbol       start_tstamp       bottom_tstamp         end_tstamp\n =========  ==================  ==================  ==================\n ACME       01-APR-11 10:00:04  01-APR-11 10:00:07  01-APR-11 10:00:08\n {% endhighlight %}\n \n-The resulting row describes a period of falling prices that started at `01-APR-11 10:00:04` and\n-achieved the lowest price at `01-APR-11 10:00:07` that increased again at `01-APR-11 10:00:08`.\n+\u8be5\u884c\u7ed3\u679c\u63cf\u8ff0\u4e86\u4ece `01-APR-11 10:00:04` \u5f00\u59cb\u7684\u4ef7\u683c\u4e0b\u8dcc\u671f\uff0c\u5728 `01-APR-11 10:00:07` \u8fbe\u5230\u6700\u4f4e\u4ef7\u683c\uff0c\u5230 `01-APR-11 10:00:08` \u518d\u6b21\u4e0a\u6da8\u3002\n \n-Partitioning\n+<a name=\"partitioning\"></a>\n+\n+\u5206\u533a\n ------------\n \n-It is possible to look for patterns in partitioned data, e.g., trends for a single ticker or a\n-particular user. This can be expressed using the `PARTITION BY` clause. The clause is similar to\n-using `GROUP BY` for aggregations.\n+\u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9\u805a\u5408\u4f7f\u7528 `GROUP BY`\u3002\n+\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u5f3a\u70c8\u5efa\u8bae\u5bf9\u4f20\u5165\u7684\u6570\u636e\u8fdb\u884c\u5206\u533a\uff0c\u5426\u5219 `MATCH_RECOGNIZE` \u5b50\u53e5\u5c06\u88ab\u8f6c\u6362\u4e3a\u975e\u5e76\u884c\u7b97\u5b50\uff0c\u4ee5\u786e\u4fdd\u5168\u5c40\u6392\u5e8f\u3002\n \n-<span class=\"label label-danger\">Attention</span> It is highly advised to partition the incoming\n-data because otherwise the `MATCH_RECOGNIZE` clause will be translated into a non-parallel operator\n-to ensure global ordering.\n+<a name=\"order-of-events\"></a>\n \n-Order of Events\n+\u4e8b\u4ef6\u987a\u5e8f\n ---------------\n \n-Apache Flink allows for searching for patterns based on time; either\n-[processing time or event time](time_attributes.html).\n+Apache Flink \u53ef\u4ee5\u6839\u636e\u65f6\u95f4\uff08[\u5904\u7406\u65f6\u95f4\u6216\u8005\u4e8b\u4ef6\u65f6\u95f4]({% link dev/table/streaming/time_attributes.zh.md %})\uff09\u8fdb\u884c\u6a21\u5f0f\u641c\u7d22\u3002\n \n-In case of event time, the events are sorted before they are passed to the internal pattern state\n-machine. As a consequence, the produced output will be correct regardless of the order in which\n-rows are appended to the table. Instead, the pattern is evaluated in the order specified by the\n-time contained in each row.\n+\u5982\u679c\u662f\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u5728\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230\u5185\u90e8\u6a21\u5f0f\u72b6\u6001\u673a\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u884c\u6dfb\u52a0\u5230\u8868\u7684\u987a\u5e8f\u5982\u4f55\uff0c\u751f\u6210\u7684\u8f93\u51fa\u90fd\u662f\u6b63\u786e\u7684\u3002\u76f8\u53cd\uff0c\u6a21\u5f0f\u662f\u6309\u7167\u6bcf\u884c\u4e2d\u5305\u542b\u7684\u65f6\u95f4\u6307\u5b9a\u7684\u987a\u5e8f\u8ba1\u7b97\u7684\u3002\n \n-The `MATCH_RECOGNIZE` clause assumes a [time attribute](time_attributes.html) with ascending\n-ordering as the first argument to `ORDER BY` clause.\n+`MATCH_RECOGNIZE` \u5b50\u53e5\u5047\u5b9a\u5347\u5e8f\u7684 [\u65f6\u95f4\u5c5e\u6027]({% link dev/table/streaming/time_attributes.zh.md %}) \u662f `ORDER BY` \u5b50\u53e5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\n \n-For the example `Ticker` table, a definition like `ORDER BY rowtime ASC, price DESC` is valid but\n-`ORDER BY price, rowtime` or `ORDER BY rowtime DESC, price ASC` is not.\n+\u5bf9\u4e8e\u793a\u4f8b `Ticker` \u8868\uff0c\u8bf8\u5982 `ORDER BY rowtime ASC, price DESC` \u7684\u5b9a\u4e49\u662f\u6709\u6548\u7684\uff0c\u4f46 `ORDER BY price, rowtime` \u6216\u8005 `ORDER BY rowtime DESC, price ASC` \u662f\u65e0\u6548\u7684\u3002\n \n Define & Measures", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 258}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5MzcwNQ==", "bodyText": "\u8fd9\u91cc output mode \u4e0b\u9762\u8fdb\u884c\u4e86\u7ffb\u8bd1\uff0c\u8fd9\u91cc\u5efa\u8bae\u4e5f\u7ffb\u8bd1\u4e0b\u3002\u5176\u4ed6\u7684\u8bcd\u8bed\u4e5f\u662f\u4e00\u6837\n\u8fd9\u79cd\u6587\u672c\u4e2d\u4e0d\u4e00\u5b9a\u80fd\u5f88\u597d\u7684\u627e\u51fa\u6765\u3002\u53ef\u4ee5\u5728\u672c\u5730\u7ffb\u8bd1\u5b8c\u6210\u540e\uff0c\u6267\u884c ./docs/docker/run.sh \u7136\u540e ./build_docs.sh -p \u67e5\u770b\u6700\u7ec8\u7684\u6e32\u67d3\u7ed3\u679c", "url": "https://github.com/apache/flink/pull/12798#discussion_r451293705", "createdAt": "2020-07-08T05:36:05Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u53d8\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\n \n-This query produces a summary row for each period in which the price of a stock was continuously\n-decreasing.\n+\u6b64\u67e5\u8be2\u4e3a\u80a1\u7968\u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u7684\u6bcf\u4e2a\u671f\u95f4\u751f\u6210\u6458\u8981\u884c\u3002\n \n-The exact representation of the output rows is defined in the `MEASURES` part of the query. The\n-number of output rows is defined by the `ONE ROW PER MATCH` output mode.\n+\u8f93\u51fa\u884c\u7684\u786e\u5207\u8868\u793a\u5728\u67e5\u8be2\u7684 `MEASURES` \u90e8\u5206\u4e2d\u5b9a\u4e49\u3002\u8f93\u51fa\u884c\u6570\u7531 `ONE ROW PER MATCH` \u8f93\u51fa\u65b9\u5f0f\u5b9a\u4e49\u3002\n \n {% highlight text %}\n  symbol       start_tstamp       bottom_tstamp         end_tstamp\n =========  ==================  ==================  ==================\n ACME       01-APR-11 10:00:04  01-APR-11 10:00:07  01-APR-11 10:00:08\n {% endhighlight %}\n \n-The resulting row describes a period of falling prices that started at `01-APR-11 10:00:04` and\n-achieved the lowest price at `01-APR-11 10:00:07` that increased again at `01-APR-11 10:00:08`.\n+\u8be5\u884c\u7ed3\u679c\u63cf\u8ff0\u4e86\u4ece `01-APR-11 10:00:04` \u5f00\u59cb\u7684\u4ef7\u683c\u4e0b\u8dcc\u671f\uff0c\u5728 `01-APR-11 10:00:07` \u8fbe\u5230\u6700\u4f4e\u4ef7\u683c\uff0c\u5230 `01-APR-11 10:00:08` \u518d\u6b21\u4e0a\u6da8\u3002\n \n-Partitioning\n+<a name=\"partitioning\"></a>\n+\n+\u5206\u533a\n ------------\n \n-It is possible to look for patterns in partitioned data, e.g., trends for a single ticker or a\n-particular user. This can be expressed using the `PARTITION BY` clause. The clause is similar to\n-using `GROUP BY` for aggregations.\n+\u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9\u805a\u5408\u4f7f\u7528 `GROUP BY`\u3002\n+\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u5f3a\u70c8\u5efa\u8bae\u5bf9\u4f20\u5165\u7684\u6570\u636e\u8fdb\u884c\u5206\u533a\uff0c\u5426\u5219 `MATCH_RECOGNIZE` \u5b50\u53e5\u5c06\u88ab\u8f6c\u6362\u4e3a\u975e\u5e76\u884c\u7b97\u5b50\uff0c\u4ee5\u786e\u4fdd\u5168\u5c40\u6392\u5e8f\u3002\n \n-<span class=\"label label-danger\">Attention</span> It is highly advised to partition the incoming\n-data because otherwise the `MATCH_RECOGNIZE` clause will be translated into a non-parallel operator\n-to ensure global ordering.\n+<a name=\"order-of-events\"></a>\n \n-Order of Events\n+\u4e8b\u4ef6\u987a\u5e8f\n ---------------\n \n-Apache Flink allows for searching for patterns based on time; either\n-[processing time or event time](time_attributes.html).\n+Apache Flink \u53ef\u4ee5\u6839\u636e\u65f6\u95f4\uff08[\u5904\u7406\u65f6\u95f4\u6216\u8005\u4e8b\u4ef6\u65f6\u95f4]({% link dev/table/streaming/time_attributes.zh.md %})\uff09\u8fdb\u884c\u6a21\u5f0f\u641c\u7d22\u3002\n \n-In case of event time, the events are sorted before they are passed to the internal pattern state\n-machine. As a consequence, the produced output will be correct regardless of the order in which\n-rows are appended to the table. Instead, the pattern is evaluated in the order specified by the\n-time contained in each row.\n+\u5982\u679c\u662f\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u5728\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230\u5185\u90e8\u6a21\u5f0f\u72b6\u6001\u673a\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u884c\u6dfb\u52a0\u5230\u8868\u7684\u987a\u5e8f\u5982\u4f55\uff0c\u751f\u6210\u7684\u8f93\u51fa\u90fd\u662f\u6b63\u786e\u7684\u3002\u76f8\u53cd\uff0c\u6a21\u5f0f\u662f\u6309\u7167\u6bcf\u884c\u4e2d\u5305\u542b\u7684\u65f6\u95f4\u6307\u5b9a\u7684\u987a\u5e8f\u8ba1\u7b97\u7684\u3002\n \n-The `MATCH_RECOGNIZE` clause assumes a [time attribute](time_attributes.html) with ascending\n-ordering as the first argument to `ORDER BY` clause.\n+`MATCH_RECOGNIZE` \u5b50\u53e5\u5047\u5b9a\u5347\u5e8f\u7684 [\u65f6\u95f4\u5c5e\u6027]({% link dev/table/streaming/time_attributes.zh.md %}) \u662f `ORDER BY` \u5b50\u53e5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\n \n-For the example `Ticker` table, a definition like `ORDER BY rowtime ASC, price DESC` is valid but\n-`ORDER BY price, rowtime` or `ORDER BY rowtime DESC, price ASC` is not.\n+\u5bf9\u4e8e\u793a\u4f8b `Ticker` \u8868\uff0c\u8bf8\u5982 `ORDER BY rowtime ASC, price DESC` \u7684\u5b9a\u4e49\u662f\u6709\u6548\u7684\uff0c\u4f46 `ORDER BY price, rowtime` \u6216\u8005 `ORDER BY rowtime DESC, price ASC` \u662f\u65e0\u6548\u7684\u3002\n \n Define & Measures\n -----------------\n \n-The `DEFINE` and `MEASURES` keywords have similar meanings to the `WHERE` and `SELECT` clauses in a\n-simple SQL query.\n+`DEFINE` \u548c `MEASURES` \u5173\u952e\u5b57\u4e0e\u7b80\u5355 SQL \u67e5\u8be2\u4e2d\u7684 `WHERE` \u548c `SELECT` \u5b50\u53e5\u5177\u6709\u76f8\u8fd1\u7684\u542b\u4e49\u3002\n \n-The `MEASURES` clause defines what will be included in the output of a matching pattern. It can\n-project columns and define expressions for evaluation. The number of produced rows depends on the\n-[output mode](#output-mode) setting.\n+`MEASURES` \u5b50\u53e5\u5b9a\u4e49\u5339\u914d\u6a21\u5f0f\u7684\u8f93\u51fa\u4e2d\u8981\u5305\u542b\u54ea\u4e9b\u5185\u5bb9\u3002\u5b83\u53ef\u4ee5\u6295\u5f71\u5217\u5e76\u5b9a\u4e49\u8868\u8fbe\u5f0f\u8fdb\u884c\u8ba1\u7b97\u3002\u4ea7\u751f\u7684\u884c\u6570\u53d6\u51b3\u4e8e [output mode](#output-mode) \u8bbe\u7f6e\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 268}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5NDI2OA==", "bodyText": "Aggregate functions \u5e94\u7528\u4e8e\u6620\u5c04\u5230\u5339\u914d\u9879\u7684\u884c\u7684\u6bcf\u4e2a\u5b50\u96c6 \u8fd9\u53e5\u8bdd\u80fd\u5426\u4f18\u5316\u4e00\u4e0b\u5462\uff1f\u610f\u601d\u662f\u53ef\u4ee5\u4e86\uff0c\u4e0d\u8fc7\u8fde\u7740\u4e24\u4e2a \u201c\u7684\u201d \u8bfb\u8d77\u6765\u6709\u4e00\u70b9\u62d7\u53e3", "url": "https://github.com/apache/flink/pull/12798#discussion_r451294268", "createdAt": "2020-07-08T05:37:57Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u53d8\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u4ef7\u683c\u7684\u884c\u3002\n \n-This query produces a summary row for each period in which the price of a stock was continuously\n-decreasing.\n+\u6b64\u67e5\u8be2\u4e3a\u80a1\u7968\u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u7684\u6bcf\u4e2a\u671f\u95f4\u751f\u6210\u6458\u8981\u884c\u3002\n \n-The exact representation of the output rows is defined in the `MEASURES` part of the query. The\n-number of output rows is defined by the `ONE ROW PER MATCH` output mode.\n+\u8f93\u51fa\u884c\u7684\u786e\u5207\u8868\u793a\u5728\u67e5\u8be2\u7684 `MEASURES` \u90e8\u5206\u4e2d\u5b9a\u4e49\u3002\u8f93\u51fa\u884c\u6570\u7531 `ONE ROW PER MATCH` \u8f93\u51fa\u65b9\u5f0f\u5b9a\u4e49\u3002\n \n {% highlight text %}\n  symbol       start_tstamp       bottom_tstamp         end_tstamp\n =========  ==================  ==================  ==================\n ACME       01-APR-11 10:00:04  01-APR-11 10:00:07  01-APR-11 10:00:08\n {% endhighlight %}\n \n-The resulting row describes a period of falling prices that started at `01-APR-11 10:00:04` and\n-achieved the lowest price at `01-APR-11 10:00:07` that increased again at `01-APR-11 10:00:08`.\n+\u8be5\u884c\u7ed3\u679c\u63cf\u8ff0\u4e86\u4ece `01-APR-11 10:00:04` \u5f00\u59cb\u7684\u4ef7\u683c\u4e0b\u8dcc\u671f\uff0c\u5728 `01-APR-11 10:00:07` \u8fbe\u5230\u6700\u4f4e\u4ef7\u683c\uff0c\u5230 `01-APR-11 10:00:08` \u518d\u6b21\u4e0a\u6da8\u3002\n \n-Partitioning\n+<a name=\"partitioning\"></a>\n+\n+\u5206\u533a\n ------------\n \n-It is possible to look for patterns in partitioned data, e.g., trends for a single ticker or a\n-particular user. This can be expressed using the `PARTITION BY` clause. The clause is similar to\n-using `GROUP BY` for aggregations.\n+\u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9\u805a\u5408\u4f7f\u7528 `GROUP BY`\u3002\n+\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u5f3a\u70c8\u5efa\u8bae\u5bf9\u4f20\u5165\u7684\u6570\u636e\u8fdb\u884c\u5206\u533a\uff0c\u5426\u5219 `MATCH_RECOGNIZE` \u5b50\u53e5\u5c06\u88ab\u8f6c\u6362\u4e3a\u975e\u5e76\u884c\u7b97\u5b50\uff0c\u4ee5\u786e\u4fdd\u5168\u5c40\u6392\u5e8f\u3002\n \n-<span class=\"label label-danger\">Attention</span> It is highly advised to partition the incoming\n-data because otherwise the `MATCH_RECOGNIZE` clause will be translated into a non-parallel operator\n-to ensure global ordering.\n+<a name=\"order-of-events\"></a>\n \n-Order of Events\n+\u4e8b\u4ef6\u987a\u5e8f\n ---------------\n \n-Apache Flink allows for searching for patterns based on time; either\n-[processing time or event time](time_attributes.html).\n+Apache Flink \u53ef\u4ee5\u6839\u636e\u65f6\u95f4\uff08[\u5904\u7406\u65f6\u95f4\u6216\u8005\u4e8b\u4ef6\u65f6\u95f4]({% link dev/table/streaming/time_attributes.zh.md %})\uff09\u8fdb\u884c\u6a21\u5f0f\u641c\u7d22\u3002\n \n-In case of event time, the events are sorted before they are passed to the internal pattern state\n-machine. As a consequence, the produced output will be correct regardless of the order in which\n-rows are appended to the table. Instead, the pattern is evaluated in the order specified by the\n-time contained in each row.\n+\u5982\u679c\u662f\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u5728\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230\u5185\u90e8\u6a21\u5f0f\u72b6\u6001\u673a\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u884c\u6dfb\u52a0\u5230\u8868\u7684\u987a\u5e8f\u5982\u4f55\uff0c\u751f\u6210\u7684\u8f93\u51fa\u90fd\u662f\u6b63\u786e\u7684\u3002\u76f8\u53cd\uff0c\u6a21\u5f0f\u662f\u6309\u7167\u6bcf\u884c\u4e2d\u5305\u542b\u7684\u65f6\u95f4\u6307\u5b9a\u7684\u987a\u5e8f\u8ba1\u7b97\u7684\u3002\n \n-The `MATCH_RECOGNIZE` clause assumes a [time attribute](time_attributes.html) with ascending\n-ordering as the first argument to `ORDER BY` clause.\n+`MATCH_RECOGNIZE` \u5b50\u53e5\u5047\u5b9a\u5347\u5e8f\u7684 [\u65f6\u95f4\u5c5e\u6027]({% link dev/table/streaming/time_attributes.zh.md %}) \u662f `ORDER BY` \u5b50\u53e5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\n \n-For the example `Ticker` table, a definition like `ORDER BY rowtime ASC, price DESC` is valid but\n-`ORDER BY price, rowtime` or `ORDER BY rowtime DESC, price ASC` is not.\n+\u5bf9\u4e8e\u793a\u4f8b `Ticker` \u8868\uff0c\u8bf8\u5982 `ORDER BY rowtime ASC, price DESC` \u7684\u5b9a\u4e49\u662f\u6709\u6548\u7684\uff0c\u4f46 `ORDER BY price, rowtime` \u6216\u8005 `ORDER BY rowtime DESC, price ASC` \u662f\u65e0\u6548\u7684\u3002\n \n Define & Measures\n -----------------\n \n-The `DEFINE` and `MEASURES` keywords have similar meanings to the `WHERE` and `SELECT` clauses in a\n-simple SQL query.\n+`DEFINE` \u548c `MEASURES` \u5173\u952e\u5b57\u4e0e\u7b80\u5355 SQL \u67e5\u8be2\u4e2d\u7684 `WHERE` \u548c `SELECT` \u5b50\u53e5\u5177\u6709\u76f8\u8fd1\u7684\u542b\u4e49\u3002\n \n-The `MEASURES` clause defines what will be included in the output of a matching pattern. It can\n-project columns and define expressions for evaluation. The number of produced rows depends on the\n-[output mode](#output-mode) setting.\n+`MEASURES` \u5b50\u53e5\u5b9a\u4e49\u5339\u914d\u6a21\u5f0f\u7684\u8f93\u51fa\u4e2d\u8981\u5305\u542b\u54ea\u4e9b\u5185\u5bb9\u3002\u5b83\u53ef\u4ee5\u6295\u5f71\u5217\u5e76\u5b9a\u4e49\u8868\u8fbe\u5f0f\u8fdb\u884c\u8ba1\u7b97\u3002\u4ea7\u751f\u7684\u884c\u6570\u53d6\u51b3\u4e8e [output mode](#output-mode) \u8bbe\u7f6e\u3002\n \n-The `DEFINE` clause specifies conditions that rows have to fulfill in order to be classified to a\n-corresponding [pattern variable](#defining-a-pattern). If a condition is not defined for a pattern\n-variable, a default condition will be used which evaluates to `true` for every row.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a\u884c\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u624d\u80fd\u88ab\u5206\u7c7b\u5230\u76f8\u5e94\u7684 [pattern variable](#defining-a-pattern)\u3002\u5982\u679c\u6ca1\u6709\u4e3a\u6a21\u5f0f\u53d8\u91cf\u5b9a\u4e49\u6761\u4ef6\uff0c\u5219\u5c06\u4f7f\u7528\u5bf9\u6bcf\u4e00\u884c\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a `true` \u7684\u9ed8\u8ba4\u6761\u4ef6\u3002\n \n-For a more detailed explanation about expressions that can be used in those clauses, please have a\n-look at the [event stream navigation](#pattern-navigation) section.\n+\u6709\u5173\u5728\u8fd9\u4e9b\u5b50\u53e5\u4e2d\u53ef\u4f7f\u7528\u7684\u8868\u8fbe\u5f0f\u7684\u66f4\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u8bf7\u67e5\u770b [event stream navigation](#pattern-navigation) \u90e8\u5206\u3002\n \n ### Aggregations\n \n-Aggregations can be used in `DEFINE` and `MEASURES` clauses. Both\n-[built-in]({{ site.baseurl }}/dev/table/functions/systemFunctions.html) and custom\n-[user defined]({{ site.baseurl }}/dev/table/functions/udfs.html) functions are supported.\n+Aggregations \u53ef\u4ee5\u5728 `DEFINE` \u548c `MEASURES` \u5b50\u53e5\u4e2d\u4f7f\u7528\u3002\u652f\u6301[\u5185\u7f6e\u51fd\u6570]({% link dev/table/functions/systemFunctions.zh.md %})\u548c[\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570]({% link dev/table/functions/udfs.zh.md %})\u3002\n \n-Aggregate functions are applied to each subset of rows mapped to a match. In order to understand\n-how those subsets are evaluated have a look at the [event stream navigation](#pattern-navigation)\n-section.\n+Aggregate functions \u5e94\u7528\u4e8e\u6620\u5c04\u5230\u5339\u914d\u9879\u7684\u884c\u7684\u6bcf\u4e2a\u5b50\u96c6\u3002\u4e3a\u4e86\u4e86\u89e3\u5982\u4f55\u8bc4\u4f30\u8fd9\u4e9b\u5b50\u96c6\uff0c\u8bf7\u67e5\u770b [event stream navigation](#pattern-navigation) \u90e8\u5206\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 289}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5NzU3Mw==", "bodyText": "\u8fd9\u4e2a\u5730\u65b9\u7684\u610f\u601d\u5e94\u8be5\u662f\uff0c\u6709\u65f6\u95f4\u9650\u5236\u4e4b\u540e\uff0c\u80fd\u591f\u9650\u5236\u4f4f Flink \u5fc5\u987b\u7ef4\u6301\u7684 \u72b6\u6001\u603b\u4f53\u5927\u5c0f\uff08\u5df2\u7ecf\u8fc7\u671f\u7684 \u72b6\u6001\u4e0d\u9700\u8981\u7ef4\u62a4\u4e86\uff09", "url": "https://github.com/apache/flink/pull/12798#discussion_r451297573", "createdAt": "2020-07-08T05:48:41Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -435,30 +370,23 @@ DEFINE\n     C AS NOT condB()\n {% endhighlight %}\n \n-<span class=\"label label-danger\">Attention</span> The optional reluctant quantifier (`A??` or\n-`A{0,1}?`) is not supported right now.\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u76ee\u524d\u4e0d\u652f\u6301\u53ef\u9009\u7684\u52c9\u5f3a\u91cf\u8bcd\uff08`A??` \u6216\u8005 `A{0,1}?`\uff09\u3002\n+\n+<a name=\"time-constraint\"></a>\n \n-### Time constraint\n+### \u65f6\u95f4\u7ea6\u675f\n \n-Especially for streaming use cases, it is often required that a pattern finishes within a given\n-period of time. This allows for limiting the overall state size that Flink has to maintain\n-internally, even in case of greedy quantifiers.\n+\u7279\u522b\u662f\u5bf9\u4e8e\u6d41\u7684\u4f7f\u7528\u573a\u666f\uff0c\u901a\u5e38\u9700\u8981\u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u6a21\u5f0f\u3002\u8fd9\u8981\u6c42\u9650\u5236 Flink \u5fc5\u987b\u5728\u5185\u90e8\u4fdd\u6301\u7684\u603b\u4f53\u72b6\u6001\u5927\u5c0f\uff0c\u5373\u4f7f\u5728\u8d2a\u5a6a\u7684\u91cf\u8bcd\u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u5982\u6b64\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 458}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5ODM3NQ==", "bodyText": "\u5904\u7406\u65f6\u95f4\u7ea6\u675f\u7684\u65b9\u6cd5\u5df2\u88ab\u63d0\u8bae\u5c06\u6765\u53ef\u80fd\u4f1a\u6539\u53d8\u3002 \u80fd\u591f\u4fee\u6539\u4e00\u4e0b\uff0c\u73b0\u5728\u5bb9\u6613\u65ad\u53e5\u4e3a \u5904\u7406\u65f6\u95f4", "url": "https://github.com/apache/flink/pull/12798#discussion_r451298375", "createdAt": "2020-07-08T05:50:53Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -435,30 +370,23 @@ DEFINE\n     C AS NOT condB()\n {% endhighlight %}\n \n-<span class=\"label label-danger\">Attention</span> The optional reluctant quantifier (`A??` or\n-`A{0,1}?`) is not supported right now.\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u76ee\u524d\u4e0d\u652f\u6301\u53ef\u9009\u7684\u52c9\u5f3a\u91cf\u8bcd\uff08`A??` \u6216\u8005 `A{0,1}?`\uff09\u3002\n+\n+<a name=\"time-constraint\"></a>\n \n-### Time constraint\n+### \u65f6\u95f4\u7ea6\u675f\n \n-Especially for streaming use cases, it is often required that a pattern finishes within a given\n-period of time. This allows for limiting the overall state size that Flink has to maintain\n-internally, even in case of greedy quantifiers.\n+\u7279\u522b\u662f\u5bf9\u4e8e\u6d41\u7684\u4f7f\u7528\u573a\u666f\uff0c\u901a\u5e38\u9700\u8981\u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u6a21\u5f0f\u3002\u8fd9\u8981\u6c42\u9650\u5236 Flink \u5fc5\u987b\u5728\u5185\u90e8\u4fdd\u6301\u7684\u603b\u4f53\u72b6\u6001\u5927\u5c0f\uff0c\u5373\u4f7f\u5728\u8d2a\u5a6a\u7684\u91cf\u8bcd\u7684\u60c5\u51b5\u4e0b\u4e5f\u662f\u5982\u6b64\u3002\n \n-Therefore, Flink SQL supports the additional (non-standard SQL) `WITHIN` clause for defining a time\n-constraint for a pattern. The clause can be defined after the `PATTERN` clause and takes an\n-interval of millisecond resolution.\n+\u56e0\u6b64\uff0cFlink SQL \u652f\u6301\u9644\u52a0\u7684\uff08\u975e\u6807\u51c6 SQL\uff09`WITHIN` \u5b50\u53e5\u6765\u5b9a\u4e49\u6a21\u5f0f\u7684\u65f6\u95f4\u7ea6\u675f\u3002\u5b50\u53e5\u53ef\u4ee5\u5728 `PATTERN` \u5b50\u53e5\u4e4b\u540e\u5b9a\u4e49\uff0c\u5e76\u4ee5\u6beb\u79d2\u4e3a\u95f4\u9694\u8fdb\u884c\u89e3\u6790\u3002\n \n-If the time between the first and last event of a potential match is longer than the given value,\n-such a match will not be appended to the result table.\n+\u5982\u679c\u6f5c\u5728\u5339\u914d\u7684\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4e8b\u4ef6\u4e4b\u95f4\u7684\u65f6\u95f4\u957f\u4e8e\u7ed9\u5b9a\u503c\uff0c\u5219\u4e0d\u4f1a\u5c06\u8fd9\u79cd\u5339\u914d\u8ffd\u52a0\u5230\u7ed3\u679c\u8868\u4e2d\u3002\n \n-<span class=\"label label-info\">Note</span> It is generally encouraged to use the `WITHIN` clause as\n-it helps Flink with efficient memory management. Underlying state can be pruned once the threshold\n-is reached.\n+<span class=\"label label-info\">\u6ce8\u610f</span> \u901a\u5e38\u9f13\u52b1\u4f7f\u7528 `WITHIN` \u5b50\u53e5\uff0c\u56e0\u4e3a\u5b83\u6709\u52a9\u4e8e Flink \u8fdb\u884c\u6709\u6548\u7684\u5185\u5b58\u7ba1\u7406\u3002\u4e00\u65e6\u8fbe\u5230\u9608\u503c\uff0c\u5373\u53ef\u4fee\u526a\u57fa\u7840\u72b6\u6001\u3002\n \n-<span class=\"label label-danger\">Attention</span> However, the `WITHIN` clause is not part of the\n-SQL standard. The recommended way of dealing with time constraints might change in the future.\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u7136\u800c\uff0c`WITHIN` \u5b50\u53e5\u4e0d\u662f SQL \u6807\u51c6\u7684\u4e00\u90e8\u5206\u3002\u5904\u7406\u65f6\u95f4\u7ea6\u675f\u7684\u65b9\u6cd5\u5df2\u88ab\u63d0\u8bae\u5c06\u6765\u53ef\u80fd\u4f1a\u6539\u53d8\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 476}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5ODQ0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u8be5\u67e5\u8be2\u68c0\u6d4b\u5230\u57281\u5c0f\u65f6\u7684\u95f4\u9694\u5185\u4ef7\u683c\u4e0b\u964d\u4e86`10`\u3002\n          \n          \n            \n            \u8be5\u67e5\u8be2\u68c0\u6d4b\u5230\u5728 1 \u5c0f\u65f6\u7684\u95f4\u9694\u5185\u4ef7\u683c\u4e0b\u964d\u4e86 `10`\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r451298440", "createdAt": "2020-07-08T05:51:09Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -478,9 +406,9 @@ FROM Ticker\n     )\n {% endhighlight %}\n \n-The query detects a price drop of `10` that happens within an interval of 1 hour.\n+\u8be5\u67e5\u8be2\u68c0\u6d4b\u5230\u57281\u5c0f\u65f6\u7684\u95f4\u9694\u5185\u4ef7\u683c\u4e0b\u964d\u4e86`10`\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 488}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5ODg1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u7ed3\u679c\u884c\u4ee3\u8868\u4ef7\u683c\u4ece`15`\uff08\u5728`01-Apr-11 12:00:00`\uff09\u4e0b\u964d\u5230`1`\uff08\u5728`01-Apr-11 13:00:00`\uff09\u3002`dropDiff` \u5217\u5305\u542b\u4ef7\u683c\u5dee\u5f02\u3002\n          \n          \n            \n            \u7ed3\u679c\u884c\u4ee3\u8868\u4ef7\u683c\u4ece `15`\uff08\u5728`01-Apr-11 12:00:00`\uff09\u4e0b\u964d\u5230 `1`\uff08\u5728`01-Apr-11 13:00:00`\uff09\u3002`dropDiff` \u5217\u5305\u542b\u4ef7\u683c\u5dee\u5f02\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r451298854", "createdAt": "2020-07-08T05:52:21Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -498,36 +426,32 @@ symbol         rowtime         price    tax\n 'ACME'  '01-Apr-11 13:20:00'   19      1\n {% endhighlight %}\n \n-The query will produce the following results:\n+\u67e5\u8be2\u5c06\u751f\u6210\u4ee5\u4e0b\u7ed3\u679c\uff1a\n \n {% highlight text %}\n symbol         dropTime         dropDiff\n ======  ====================  =============\n 'ACME'  '01-Apr-11 13:00:00'      14\n {% endhighlight %}\n \n-The resulting row represents a price drop from `15` (at `01-Apr-11 12:00:00`) to `1` (at\n-`01-Apr-11 13:00:00`). The `dropDiff` column contains the price difference.\n+\u7ed3\u679c\u884c\u4ee3\u8868\u4ef7\u683c\u4ece`15`\uff08\u5728`01-Apr-11 12:00:00`\uff09\u4e0b\u964d\u5230`1`\uff08\u5728`01-Apr-11 13:00:00`\uff09\u3002`dropDiff` \u5217\u5305\u542b\u4ef7\u683c\u5dee\u5f02\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 510}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTEzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u4ef7\u683c\u4e5f\u4e0b\u964d\u4e86\u8f83\u9ad8\u7684\u503c\uff0c\u4f8b\u5982\uff0c\u4e0b\u964d\u4e86`11`\uff08\u5728`01-Apr-11 10:00:00`\u548c`01-Apr-11 11:40:00`\u4e4b\u95f4\uff09\uff0c\u8fd9\u4e24\u4e2a\u4e8b\u4ef6\u4e4b\u95f4\u7684\u65f6\u95f4\u5dee\u5927\u4e8e1\u5c0f\u65f6\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u4e0d\u4f1a\u4ea7\u751f\u5339\u914d\u3002\n          \n          \n            \n            \u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u4ef7\u683c\u4e5f\u4e0b\u964d\u4e86\u8f83\u9ad8\u7684\u503c\uff0c\u4f8b\u5982\uff0c\u4e0b\u964d\u4e86 `11`\uff08\u5728 `01-Apr-11 10:00:00` \u548c `01-Apr-11 11:40:00` \u4e4b\u95f4\uff09\uff0c\u8fd9\u4e24\u4e2a\u4e8b\u4ef6\u4e4b\u95f4\u7684\u65f6\u95f4\u5dee\u5927\u4e8e 1 \u5c0f\u65f6\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u4e0d\u4f1a\u4ea7\u751f\u5339\u914d\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r451299138", "createdAt": "2020-07-08T05:53:11Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -498,36 +426,32 @@ symbol         rowtime         price    tax\n 'ACME'  '01-Apr-11 13:20:00'   19      1\n {% endhighlight %}\n \n-The query will produce the following results:\n+\u67e5\u8be2\u5c06\u751f\u6210\u4ee5\u4e0b\u7ed3\u679c\uff1a\n \n {% highlight text %}\n symbol         dropTime         dropDiff\n ======  ====================  =============\n 'ACME'  '01-Apr-11 13:00:00'      14\n {% endhighlight %}\n \n-The resulting row represents a price drop from `15` (at `01-Apr-11 12:00:00`) to `1` (at\n-`01-Apr-11 13:00:00`). The `dropDiff` column contains the price difference.\n+\u7ed3\u679c\u884c\u4ee3\u8868\u4ef7\u683c\u4ece`15`\uff08\u5728`01-Apr-11 12:00:00`\uff09\u4e0b\u964d\u5230`1`\uff08\u5728`01-Apr-11 13:00:00`\uff09\u3002`dropDiff` \u5217\u5305\u542b\u4ef7\u683c\u5dee\u5f02\u3002\n+\n+\u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u4ef7\u683c\u4e5f\u4e0b\u964d\u4e86\u8f83\u9ad8\u7684\u503c\uff0c\u4f8b\u5982\uff0c\u4e0b\u964d\u4e86`11`\uff08\u5728`01-Apr-11 10:00:00`\u548c`01-Apr-11 11:40:00`\u4e4b\u95f4\uff09\uff0c\u8fd9\u4e24\u4e2a\u4e8b\u4ef6\u4e4b\u95f4\u7684\u65f6\u95f4\u5dee\u5927\u4e8e1\u5c0f\u65f6\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u4e0d\u4f1a\u4ea7\u751f\u5339\u914d\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 512}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTYzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5982\u679c `DEFINE`/`MEASURES` \u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u4e00\u884c\uff08\u4f8b\u5982 `a.price` \u6216 `a.price>10`\uff09\uff0c\u5b83\u5c06\u9009\u62e9\u5c5e\u4e8e\u76f8\u5e94\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002\n          \n          \n            \n            \u5982\u679c `DEFINE`/`MEASURES` \u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u4e00\u884c\uff08\u4f8b\u5982 `a.price` \u6216 `a.price > 10`\uff09\uff0c\u5b83\u5c06\u9009\u62e9\u5c5e\u4e8e\u76f8\u5e94\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r451299639", "createdAt": "2020-07-08T05:54:44Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -558,43 +482,42 @@ For the following input rows:\n  XYZ      2     11       2018-09-17 10:00:05\n {% endhighlight %}\n \n-The query will produce the following output:\n+\u8be5\u67e5\u8be2\u5c06\u751f\u6210\u4ee5\u4e0b\u8f93\u51fa\uff1a\n \n {% highlight text %}\n  symbol   startPrice   topPrice   lastPrice\n ======== ============ ========== ===========\n  XYZ      10           13         11\n {% endhighlight %}\n \n-The pattern recognition is partitioned by the `symbol` column. Even though not explicitly mentioned\n-in the `MEASURES` clause, the partitioned column is added at the beginning of the result.\n+\u8be5\u6a21\u5f0f\u8bc6\u522b\u7531 `symbol` \u5217\u5206\u533a\u3002\u5373\u4f7f\u5728 `MEASURES` \u5b50\u53e5\u4e2d\u672a\u660e\u786e\u63d0\u53ca\uff0c\u5206\u533a\u5217\u4ecd\u4f1a\u6dfb\u52a0\u5230\u7ed3\u679c\u7684\u5f00\u5934\u3002\n \n-Pattern Navigation\n+<a name=\"pattern-navigation\"></a>\n+\n+\u6a21\u5f0f\u5bfc\u822a\n ------------------\n \n-The `DEFINE` and `MEASURES` clauses allow for navigating within the list of rows that (potentially)\n-match a pattern.\n+`DEFINE` \u548c `MEASURES` \u5b50\u53e5\u5141\u8bb8\u5728\uff08\u53ef\u80fd\uff09\u5339\u914d\u6a21\u5f0f\u7684\u884c\u5217\u8868\u4e2d\u8fdb\u884c\u5bfc\u822a\u3002\n+\n+\u672c\u8282\u8ba8\u8bba\u7528\u4e8e\u58f0\u660e\u6761\u4ef6\u6216\u4ea7\u751f\u8f93\u51fa\u7ed3\u679c\u7684\u5bfc\u822a\u3002\n+\n+<a name=\"pattern-variable-referencing\"></a>\n+\n+### \u5f15\u7528\u6a21\u5f0f\u53d8\u91cf\n \n-This section discusses this navigation for declaring conditions or producing output results.\n+_\u5f15\u7528\u6a21\u5f0f\u53d8\u91cf_ \u5141\u8bb8\u5f15\u7528\u4e00\u7ec4\u6620\u5c04\u5230 `DEFINE` \u6216 `MEASURES` \u5b50\u53e5\u4e2d\u7279\u5b9a\u6a21\u5f0f\u53d8\u91cf\u7684\u884c\u3002\n \n-### Pattern Variable Referencing\n+\u5982\u679c `DEFINE`/`MEASURES` \u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u4e00\u884c\uff08\u4f8b\u5982 `a.price` \u6216 `a.price>10`\uff09\uff0c\u5b83\u5c06\u9009\u62e9\u5c5e\u4e8e\u76f8\u5e94\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 589}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMDM4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e#1\uff0c#2\uff0c#3\uff0c#4\u884c\u5339\u914d\u3002\n          \n          \n            \n            \u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e #1\uff0c#2\uff0c#3\uff0c#4 \u884c\u5339\u914d\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r451300388", "createdAt": "2020-07-08T05:56:55Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -960,9 +861,9 @@ The query will produce different results based on which `AFTER MATCH` strategy w\n  XYZ      17         2018-09-17 10:00:05   2018-09-17 10:00:06\n {% endhighlight %}\n \n-The first result matched against the rows #1, #2, #3, #4.\n+\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e#1\uff0c#2\uff0c#3\uff0c#4\u884c\u5339\u914d\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 854}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMDQzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u7b2c\u4e8c\u4e2a\u7ed3\u679c\u4e0e#5\uff0c#6\u884c\u5339\u914d\u3002\n          \n          \n            \n            \u7b2c\u4e8c\u4e2a\u7ed3\u679c\u4e0e #5\uff0c#6 \u884c\u5339\u914d\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r451300438", "createdAt": "2020-07-08T05:57:05Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -960,9 +861,9 @@ The query will produce different results based on which `AFTER MATCH` strategy w\n  XYZ      17         2018-09-17 10:00:05   2018-09-17 10:00:06\n {% endhighlight %}\n \n-The first result matched against the rows #1, #2, #3, #4.\n+\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e#1\uff0c#2\uff0c#3\uff0c#4\u884c\u5339\u914d\u3002\n \n-The second result matched against the rows #5, #6.\n+\u7b2c\u4e8c\u4e2a\u7ed3\u679c\u4e0e#5\uff0c#6\u884c\u5339\u914d\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 857}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMDQ5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u540c\u6837\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e#1\uff0c#2\uff0c#3\uff0c#4\u884c\u5339\u914d\u3002\n          \n          \n            \n            \u540c\u6837\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e #1\uff0c#2\uff0c#3\uff0c#4 \u884c\u5339\u914d\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r451300496", "createdAt": "2020-07-08T05:57:14Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -976,16 +877,15 @@ The second result matched against the rows #5, #6.\n  XYZ      17         2018-09-17 10:00:05   2018-09-17 10:00:06\n {% endhighlight %}\n \n-Again, the first result matched against the rows #1, #2, #3, #4.\n+\u540c\u6837\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e#1\uff0c#2\uff0c#3\uff0c#4\u884c\u5339\u914d\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 866}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMDU0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4e0e\u4e0a\u4e00\u4e2a\u7b56\u7565\u76f8\u6bd4\uff0c\u4e0b\u4e00\u4e2a\u5339\u914d\u518d\u6b21\u5305\u542b#2\u884c\u5339\u914d\u3002\u56e0\u6b64\uff0c\u7b2c\u4e8c\u4e2a\u7ed3\u679c\u4e0e#2\uff0c#3\uff0c#4\uff0c#5\u884c\u5339\u914d\u3002\n          \n          \n            \n            \u4e0e\u4e0a\u4e00\u4e2a\u7b56\u7565\u76f8\u6bd4\uff0c\u4e0b\u4e00\u4e2a\u5339\u914d\u518d\u6b21\u5305\u542b #2 \u884c\u5339\u914d\u3002\u56e0\u6b64\uff0c\u7b2c\u4e8c\u4e2a\u7ed3\u679c\u4e0e #2\uff0c#3\uff0c#4\uff0c#5 \u884c\u5339\u914d\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r451300546", "createdAt": "2020-07-08T05:57:24Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -976,16 +877,15 @@ The second result matched against the rows #5, #6.\n  XYZ      17         2018-09-17 10:00:05   2018-09-17 10:00:06\n {% endhighlight %}\n \n-Again, the first result matched against the rows #1, #2, #3, #4.\n+\u540c\u6837\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e#1\uff0c#2\uff0c#3\uff0c#4\u884c\u5339\u914d\u3002\n \n-Compared to the previous strategy, the next match includes row #2 again for the next matching.\n-Therefore, the second result matched against the rows #2, #3, #4, #5.\n+\u4e0e\u4e0a\u4e00\u4e2a\u7b56\u7565\u76f8\u6bd4\uff0c\u4e0b\u4e00\u4e2a\u5339\u914d\u518d\u6b21\u5305\u542b#2\u884c\u5339\u914d\u3002\u56e0\u6b64\uff0c\u7b2c\u4e8c\u4e2a\u7ed3\u679c\u4e0e#2\uff0c#3\uff0c#4\uff0c#5\u884c\u5339\u914d\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6b49aa7c6fcb0150e66cef3927938bb67a62ecd"}, "originalPosition": 870}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTg1NDU5", "url": "https://github.com/apache/flink/pull/12798#pullrequestreview-446985459", "createdAt": "2020-07-13T05:13:55Z", "commit": {"oid": "f1fb24d628f66f3f2929fe4e737a835e8391c0a8"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNToxMzo1NVrOGwbsTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNTozNDo0MVrOGwcBHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzODU0Mg==", "bodyText": "\u6a21\u53d8\u53d8\u91cf -> \u6a21\u5f0f\u53d8\u91cf\uff1f", "url": "https://github.com/apache/flink/pull/12798#discussion_r453438542", "createdAt": "2020-07-13T05:13:55Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u53d8\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1fb24d628f66f3f2929fe4e737a835e8391c0a8"}, "originalPosition": 198}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzOTIwMQ==", "bodyText": "\u8fd9\u53e5\u8bdd\u4e2d\u524d\u9762\u7684 pattern variable \u6ca1\u6709\u7ffb\u8bd1\uff0c\u540e\u9762\u7684\u7ffb\u8bd1\u4e86\uff0c\u8fd9\u91cc\u5efa\u8bae\u8fdb\u884c\u7edf\u4e00\uff0c\u53ef\u4ee5\u7edf\u4e00\u8fdb\u884c\u7ffb\u8bd1", "url": "https://github.com/apache/flink/pull/12798#discussion_r453439201", "createdAt": "2020-07-13T05:16:26Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u53d8\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\n \n-This query produces a summary row for each period in which the price of a stock was continuously\n-decreasing.\n+\u6b64\u67e5\u8be2\u4e3a\u80a1\u7968\u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u7684\u6bcf\u4e2a\u671f\u95f4\u751f\u6210\u6458\u8981\u884c\u3002\n \n-The exact representation of the output rows is defined in the `MEASURES` part of the query. The\n-number of output rows is defined by the `ONE ROW PER MATCH` output mode.\n+\u5728\u67e5\u8be2\u7684 `MEASURES` \u5b50\u53e5\u90e8\u5206\u5b9a\u4e49\u786e\u5207\u7684\u8f93\u51fa\u884c\u4fe1\u606f\u3002\u8f93\u51fa\u884c\u6570\u7531 `ONE ROW PER MATCH` \u8f93\u51fa\u65b9\u5f0f\u5b9a\u4e49\u3002\n \n {% highlight text %}\n  symbol       start_tstamp       bottom_tstamp         end_tstamp\n =========  ==================  ==================  ==================\n ACME       01-APR-11 10:00:04  01-APR-11 10:00:07  01-APR-11 10:00:08\n {% endhighlight %}\n \n-The resulting row describes a period of falling prices that started at `01-APR-11 10:00:04` and\n-achieved the lowest price at `01-APR-11 10:00:07` that increased again at `01-APR-11 10:00:08`.\n+\u8be5\u884c\u7ed3\u679c\u63cf\u8ff0\u4e86\u4ece `01-APR-11 10:00:04` \u5f00\u59cb\u7684\u4ef7\u683c\u4e0b\u8dcc\u671f\uff0c\u5728 `01-APR-11 10:00:07` \u8fbe\u5230\u6700\u4f4e\u4ef7\u683c\uff0c\u5230 `01-APR-11 10:00:08` \u518d\u6b21\u4e0a\u6da8\u3002\n \n-Partitioning\n+<a name=\"partitioning\"></a>\n+\n+\u5206\u533a\n ------------\n \n-It is possible to look for patterns in partitioned data, e.g., trends for a single ticker or a\n-particular user. This can be expressed using the `PARTITION BY` clause. The clause is similar to\n-using `GROUP BY` for aggregations.\n+\u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9\u805a\u5408\u4f7f\u7528 `GROUP BY`\u3002\n+\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u5f3a\u70c8\u5efa\u8bae\u5bf9\u4f20\u5165\u7684\u6570\u636e\u8fdb\u884c\u5206\u533a\uff0c\u5426\u5219 `MATCH_RECOGNIZE` \u5b50\u53e5\u5c06\u88ab\u8f6c\u6362\u4e3a\u975e\u5e76\u884c\u7b97\u5b50\uff0c\u4ee5\u786e\u4fdd\u5168\u5c40\u6392\u5e8f\u3002\n \n-<span class=\"label label-danger\">Attention</span> It is highly advised to partition the incoming\n-data because otherwise the `MATCH_RECOGNIZE` clause will be translated into a non-parallel operator\n-to ensure global ordering.\n+<a name=\"order-of-events\"></a>\n \n-Order of Events\n+\u4e8b\u4ef6\u987a\u5e8f\n ---------------\n \n-Apache Flink allows for searching for patterns based on time; either\n-[processing time or event time](time_attributes.html).\n+Apache Flink \u53ef\u4ee5\u6839\u636e\u65f6\u95f4\uff08[\u5904\u7406\u65f6\u95f4\u6216\u8005\u4e8b\u4ef6\u65f6\u95f4]({% link dev/table/streaming/time_attributes.zh.md %})\uff09\u8fdb\u884c\u6a21\u5f0f\u641c\u7d22\u3002\n \n-In case of event time, the events are sorted before they are passed to the internal pattern state\n-machine. As a consequence, the produced output will be correct regardless of the order in which\n-rows are appended to the table. Instead, the pattern is evaluated in the order specified by the\n-time contained in each row.\n+\u5982\u679c\u662f\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u5728\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230\u5185\u90e8\u6a21\u5f0f\u72b6\u6001\u673a\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u884c\u6dfb\u52a0\u5230\u8868\u7684\u987a\u5e8f\u5982\u4f55\uff0c\u751f\u6210\u7684\u8f93\u51fa\u90fd\u662f\u6b63\u786e\u7684\u3002\u76f8\u53cd\uff0c\u6a21\u5f0f\u662f\u6309\u7167\u6bcf\u884c\u4e2d\u5305\u542b\u7684\u65f6\u95f4\u6307\u5b9a\u7684\u987a\u5e8f\u8ba1\u7b97\u7684\u3002\n \n-The `MATCH_RECOGNIZE` clause assumes a [time attribute](time_attributes.html) with ascending\n-ordering as the first argument to `ORDER BY` clause.\n+`MATCH_RECOGNIZE` \u5b50\u53e5\u5047\u5b9a\u5347\u5e8f\u7684 [\u65f6\u95f4\u5c5e\u6027]({% link dev/table/streaming/time_attributes.zh.md %}) \u662f `ORDER BY` \u5b50\u53e5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\n \n-For the example `Ticker` table, a definition like `ORDER BY rowtime ASC, price DESC` is valid but\n-`ORDER BY price, rowtime` or `ORDER BY rowtime DESC, price ASC` is not.\n+\u5bf9\u4e8e\u793a\u4f8b `Ticker` \u8868\uff0c\u8bf8\u5982 `ORDER BY rowtime ASC, price DESC` \u7684\u5b9a\u4e49\u662f\u6709\u6548\u7684\uff0c\u4f46 `ORDER BY price, rowtime` \u6216\u8005 `ORDER BY rowtime DESC, price ASC` \u662f\u65e0\u6548\u7684\u3002\n \n Define & Measures\n -----------------\n \n-The `DEFINE` and `MEASURES` keywords have similar meanings to the `WHERE` and `SELECT` clauses in a\n-simple SQL query.\n+`DEFINE` \u548c `MEASURES` \u5173\u952e\u5b57\u4e0e\u7b80\u5355 SQL \u67e5\u8be2\u4e2d\u7684 `WHERE` \u548c `SELECT` \u5b50\u53e5\u5177\u6709\u76f8\u8fd1\u7684\u542b\u4e49\u3002\n \n-The `MEASURES` clause defines what will be included in the output of a matching pattern. It can\n-project columns and define expressions for evaluation. The number of produced rows depends on the\n-[output mode](#output-mode) setting.\n+`MEASURES` \u5b50\u53e5\u5b9a\u4e49\u5339\u914d\u6a21\u5f0f\u7684\u8f93\u51fa\u4e2d\u8981\u5305\u542b\u54ea\u4e9b\u5185\u5bb9\u3002\u5b83\u53ef\u4ee5\u6295\u5f71\u5217\u5e76\u5b9a\u4e49\u8868\u8fbe\u5f0f\u8fdb\u884c\u8ba1\u7b97\u3002\u4ea7\u751f\u7684\u884c\u6570\u53d6\u51b3\u4e8e[\u8f93\u51fa\u65b9\u5f0f](#output-mode)\u8bbe\u7f6e\u3002\n \n-The `DEFINE` clause specifies conditions that rows have to fulfill in order to be classified to a\n-corresponding [pattern variable](#defining-a-pattern). If a condition is not defined for a pattern\n-variable, a default condition will be used which evaluates to `true` for every row.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a\u884c\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u624d\u80fd\u88ab\u5206\u7c7b\u5230\u76f8\u5e94\u7684 [pattern variable](#defining-a-pattern)\u3002\u5982\u679c\u6ca1\u6709\u4e3a\u6a21\u5f0f\u53d8\u91cf\u5b9a\u4e49\u6761\u4ef6\uff0c\u5219\u5c06\u4f7f\u7528\u5bf9\u6bcf\u4e00\u884c\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a `true` \u7684\u9ed8\u8ba4\u6761\u4ef6\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1fb24d628f66f3f2929fe4e737a835e8391c0a8"}, "originalPosition": 273}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzOTI5Ng==", "bodyText": "\u8fd9\u91cc\u7684 event stream navigation \u548c\u4e0a\u9762\u4e5f\u4e00\u6837", "url": "https://github.com/apache/flink/pull/12798#discussion_r453439296", "createdAt": "2020-07-13T05:16:50Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u53d8\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\n \n-This query produces a summary row for each period in which the price of a stock was continuously\n-decreasing.\n+\u6b64\u67e5\u8be2\u4e3a\u80a1\u7968\u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u7684\u6bcf\u4e2a\u671f\u95f4\u751f\u6210\u6458\u8981\u884c\u3002\n \n-The exact representation of the output rows is defined in the `MEASURES` part of the query. The\n-number of output rows is defined by the `ONE ROW PER MATCH` output mode.\n+\u5728\u67e5\u8be2\u7684 `MEASURES` \u5b50\u53e5\u90e8\u5206\u5b9a\u4e49\u786e\u5207\u7684\u8f93\u51fa\u884c\u4fe1\u606f\u3002\u8f93\u51fa\u884c\u6570\u7531 `ONE ROW PER MATCH` \u8f93\u51fa\u65b9\u5f0f\u5b9a\u4e49\u3002\n \n {% highlight text %}\n  symbol       start_tstamp       bottom_tstamp         end_tstamp\n =========  ==================  ==================  ==================\n ACME       01-APR-11 10:00:04  01-APR-11 10:00:07  01-APR-11 10:00:08\n {% endhighlight %}\n \n-The resulting row describes a period of falling prices that started at `01-APR-11 10:00:04` and\n-achieved the lowest price at `01-APR-11 10:00:07` that increased again at `01-APR-11 10:00:08`.\n+\u8be5\u884c\u7ed3\u679c\u63cf\u8ff0\u4e86\u4ece `01-APR-11 10:00:04` \u5f00\u59cb\u7684\u4ef7\u683c\u4e0b\u8dcc\u671f\uff0c\u5728 `01-APR-11 10:00:07` \u8fbe\u5230\u6700\u4f4e\u4ef7\u683c\uff0c\u5230 `01-APR-11 10:00:08` \u518d\u6b21\u4e0a\u6da8\u3002\n \n-Partitioning\n+<a name=\"partitioning\"></a>\n+\n+\u5206\u533a\n ------------\n \n-It is possible to look for patterns in partitioned data, e.g., trends for a single ticker or a\n-particular user. This can be expressed using the `PARTITION BY` clause. The clause is similar to\n-using `GROUP BY` for aggregations.\n+\u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9\u805a\u5408\u4f7f\u7528 `GROUP BY`\u3002\n+\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u5f3a\u70c8\u5efa\u8bae\u5bf9\u4f20\u5165\u7684\u6570\u636e\u8fdb\u884c\u5206\u533a\uff0c\u5426\u5219 `MATCH_RECOGNIZE` \u5b50\u53e5\u5c06\u88ab\u8f6c\u6362\u4e3a\u975e\u5e76\u884c\u7b97\u5b50\uff0c\u4ee5\u786e\u4fdd\u5168\u5c40\u6392\u5e8f\u3002\n \n-<span class=\"label label-danger\">Attention</span> It is highly advised to partition the incoming\n-data because otherwise the `MATCH_RECOGNIZE` clause will be translated into a non-parallel operator\n-to ensure global ordering.\n+<a name=\"order-of-events\"></a>\n \n-Order of Events\n+\u4e8b\u4ef6\u987a\u5e8f\n ---------------\n \n-Apache Flink allows for searching for patterns based on time; either\n-[processing time or event time](time_attributes.html).\n+Apache Flink \u53ef\u4ee5\u6839\u636e\u65f6\u95f4\uff08[\u5904\u7406\u65f6\u95f4\u6216\u8005\u4e8b\u4ef6\u65f6\u95f4]({% link dev/table/streaming/time_attributes.zh.md %})\uff09\u8fdb\u884c\u6a21\u5f0f\u641c\u7d22\u3002\n \n-In case of event time, the events are sorted before they are passed to the internal pattern state\n-machine. As a consequence, the produced output will be correct regardless of the order in which\n-rows are appended to the table. Instead, the pattern is evaluated in the order specified by the\n-time contained in each row.\n+\u5982\u679c\u662f\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u5728\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230\u5185\u90e8\u6a21\u5f0f\u72b6\u6001\u673a\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u884c\u6dfb\u52a0\u5230\u8868\u7684\u987a\u5e8f\u5982\u4f55\uff0c\u751f\u6210\u7684\u8f93\u51fa\u90fd\u662f\u6b63\u786e\u7684\u3002\u76f8\u53cd\uff0c\u6a21\u5f0f\u662f\u6309\u7167\u6bcf\u884c\u4e2d\u5305\u542b\u7684\u65f6\u95f4\u6307\u5b9a\u7684\u987a\u5e8f\u8ba1\u7b97\u7684\u3002\n \n-The `MATCH_RECOGNIZE` clause assumes a [time attribute](time_attributes.html) with ascending\n-ordering as the first argument to `ORDER BY` clause.\n+`MATCH_RECOGNIZE` \u5b50\u53e5\u5047\u5b9a\u5347\u5e8f\u7684 [\u65f6\u95f4\u5c5e\u6027]({% link dev/table/streaming/time_attributes.zh.md %}) \u662f `ORDER BY` \u5b50\u53e5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\n \n-For the example `Ticker` table, a definition like `ORDER BY rowtime ASC, price DESC` is valid but\n-`ORDER BY price, rowtime` or `ORDER BY rowtime DESC, price ASC` is not.\n+\u5bf9\u4e8e\u793a\u4f8b `Ticker` \u8868\uff0c\u8bf8\u5982 `ORDER BY rowtime ASC, price DESC` \u7684\u5b9a\u4e49\u662f\u6709\u6548\u7684\uff0c\u4f46 `ORDER BY price, rowtime` \u6216\u8005 `ORDER BY rowtime DESC, price ASC` \u662f\u65e0\u6548\u7684\u3002\n \n Define & Measures\n -----------------\n \n-The `DEFINE` and `MEASURES` keywords have similar meanings to the `WHERE` and `SELECT` clauses in a\n-simple SQL query.\n+`DEFINE` \u548c `MEASURES` \u5173\u952e\u5b57\u4e0e\u7b80\u5355 SQL \u67e5\u8be2\u4e2d\u7684 `WHERE` \u548c `SELECT` \u5b50\u53e5\u5177\u6709\u76f8\u8fd1\u7684\u542b\u4e49\u3002\n \n-The `MEASURES` clause defines what will be included in the output of a matching pattern. It can\n-project columns and define expressions for evaluation. The number of produced rows depends on the\n-[output mode](#output-mode) setting.\n+`MEASURES` \u5b50\u53e5\u5b9a\u4e49\u5339\u914d\u6a21\u5f0f\u7684\u8f93\u51fa\u4e2d\u8981\u5305\u542b\u54ea\u4e9b\u5185\u5bb9\u3002\u5b83\u53ef\u4ee5\u6295\u5f71\u5217\u5e76\u5b9a\u4e49\u8868\u8fbe\u5f0f\u8fdb\u884c\u8ba1\u7b97\u3002\u4ea7\u751f\u7684\u884c\u6570\u53d6\u51b3\u4e8e[\u8f93\u51fa\u65b9\u5f0f](#output-mode)\u8bbe\u7f6e\u3002\n \n-The `DEFINE` clause specifies conditions that rows have to fulfill in order to be classified to a\n-corresponding [pattern variable](#defining-a-pattern). If a condition is not defined for a pattern\n-variable, a default condition will be used which evaluates to `true` for every row.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a\u884c\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u624d\u80fd\u88ab\u5206\u7c7b\u5230\u76f8\u5e94\u7684 [pattern variable](#defining-a-pattern)\u3002\u5982\u679c\u6ca1\u6709\u4e3a\u6a21\u5f0f\u53d8\u91cf\u5b9a\u4e49\u6761\u4ef6\uff0c\u5219\u5c06\u4f7f\u7528\u5bf9\u6bcf\u4e00\u884c\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a `true` \u7684\u9ed8\u8ba4\u6761\u4ef6\u3002\n \n-For a more detailed explanation about expressions that can be used in those clauses, please have a\n-look at the [event stream navigation](#pattern-navigation) section.\n+\u6709\u5173\u5728\u8fd9\u4e9b\u5b50\u53e5\u4e2d\u53ef\u4f7f\u7528\u7684\u8868\u8fbe\u5f0f\u7684\u66f4\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u8bf7\u67e5\u770b [event stream navigation](#pattern-navigation) \u90e8\u5206\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1fb24d628f66f3f2929fe4e737a835e8391c0a8"}, "originalPosition": 277}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQzOTQ3Mg==", "bodyText": "\u8fd9\u91cc\u7684 event stream navigation \u5efa\u8bae\u7ffb\u8bd1\uff0c\u4e0b\u9762\u7684\u6807\u9898\u5df2\u7ecf\u7ffb\u8bd1\u4e86", "url": "https://github.com/apache/flink/pull/12798#discussion_r453439472", "createdAt": "2020-07-13T05:17:37Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u53d8\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\n \n-This query produces a summary row for each period in which the price of a stock was continuously\n-decreasing.\n+\u6b64\u67e5\u8be2\u4e3a\u80a1\u7968\u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u7684\u6bcf\u4e2a\u671f\u95f4\u751f\u6210\u6458\u8981\u884c\u3002\n \n-The exact representation of the output rows is defined in the `MEASURES` part of the query. The\n-number of output rows is defined by the `ONE ROW PER MATCH` output mode.\n+\u5728\u67e5\u8be2\u7684 `MEASURES` \u5b50\u53e5\u90e8\u5206\u5b9a\u4e49\u786e\u5207\u7684\u8f93\u51fa\u884c\u4fe1\u606f\u3002\u8f93\u51fa\u884c\u6570\u7531 `ONE ROW PER MATCH` \u8f93\u51fa\u65b9\u5f0f\u5b9a\u4e49\u3002\n \n {% highlight text %}\n  symbol       start_tstamp       bottom_tstamp         end_tstamp\n =========  ==================  ==================  ==================\n ACME       01-APR-11 10:00:04  01-APR-11 10:00:07  01-APR-11 10:00:08\n {% endhighlight %}\n \n-The resulting row describes a period of falling prices that started at `01-APR-11 10:00:04` and\n-achieved the lowest price at `01-APR-11 10:00:07` that increased again at `01-APR-11 10:00:08`.\n+\u8be5\u884c\u7ed3\u679c\u63cf\u8ff0\u4e86\u4ece `01-APR-11 10:00:04` \u5f00\u59cb\u7684\u4ef7\u683c\u4e0b\u8dcc\u671f\uff0c\u5728 `01-APR-11 10:00:07` \u8fbe\u5230\u6700\u4f4e\u4ef7\u683c\uff0c\u5230 `01-APR-11 10:00:08` \u518d\u6b21\u4e0a\u6da8\u3002\n \n-Partitioning\n+<a name=\"partitioning\"></a>\n+\n+\u5206\u533a\n ------------\n \n-It is possible to look for patterns in partitioned data, e.g., trends for a single ticker or a\n-particular user. This can be expressed using the `PARTITION BY` clause. The clause is similar to\n-using `GROUP BY` for aggregations.\n+\u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9\u805a\u5408\u4f7f\u7528 `GROUP BY`\u3002\n+\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u5f3a\u70c8\u5efa\u8bae\u5bf9\u4f20\u5165\u7684\u6570\u636e\u8fdb\u884c\u5206\u533a\uff0c\u5426\u5219 `MATCH_RECOGNIZE` \u5b50\u53e5\u5c06\u88ab\u8f6c\u6362\u4e3a\u975e\u5e76\u884c\u7b97\u5b50\uff0c\u4ee5\u786e\u4fdd\u5168\u5c40\u6392\u5e8f\u3002\n \n-<span class=\"label label-danger\">Attention</span> It is highly advised to partition the incoming\n-data because otherwise the `MATCH_RECOGNIZE` clause will be translated into a non-parallel operator\n-to ensure global ordering.\n+<a name=\"order-of-events\"></a>\n \n-Order of Events\n+\u4e8b\u4ef6\u987a\u5e8f\n ---------------\n \n-Apache Flink allows for searching for patterns based on time; either\n-[processing time or event time](time_attributes.html).\n+Apache Flink \u53ef\u4ee5\u6839\u636e\u65f6\u95f4\uff08[\u5904\u7406\u65f6\u95f4\u6216\u8005\u4e8b\u4ef6\u65f6\u95f4]({% link dev/table/streaming/time_attributes.zh.md %})\uff09\u8fdb\u884c\u6a21\u5f0f\u641c\u7d22\u3002\n \n-In case of event time, the events are sorted before they are passed to the internal pattern state\n-machine. As a consequence, the produced output will be correct regardless of the order in which\n-rows are appended to the table. Instead, the pattern is evaluated in the order specified by the\n-time contained in each row.\n+\u5982\u679c\u662f\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u5728\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230\u5185\u90e8\u6a21\u5f0f\u72b6\u6001\u673a\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u884c\u6dfb\u52a0\u5230\u8868\u7684\u987a\u5e8f\u5982\u4f55\uff0c\u751f\u6210\u7684\u8f93\u51fa\u90fd\u662f\u6b63\u786e\u7684\u3002\u76f8\u53cd\uff0c\u6a21\u5f0f\u662f\u6309\u7167\u6bcf\u884c\u4e2d\u5305\u542b\u7684\u65f6\u95f4\u6307\u5b9a\u7684\u987a\u5e8f\u8ba1\u7b97\u7684\u3002\n \n-The `MATCH_RECOGNIZE` clause assumes a [time attribute](time_attributes.html) with ascending\n-ordering as the first argument to `ORDER BY` clause.\n+`MATCH_RECOGNIZE` \u5b50\u53e5\u5047\u5b9a\u5347\u5e8f\u7684 [\u65f6\u95f4\u5c5e\u6027]({% link dev/table/streaming/time_attributes.zh.md %}) \u662f `ORDER BY` \u5b50\u53e5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\n \n-For the example `Ticker` table, a definition like `ORDER BY rowtime ASC, price DESC` is valid but\n-`ORDER BY price, rowtime` or `ORDER BY rowtime DESC, price ASC` is not.\n+\u5bf9\u4e8e\u793a\u4f8b `Ticker` \u8868\uff0c\u8bf8\u5982 `ORDER BY rowtime ASC, price DESC` \u7684\u5b9a\u4e49\u662f\u6709\u6548\u7684\uff0c\u4f46 `ORDER BY price, rowtime` \u6216\u8005 `ORDER BY rowtime DESC, price ASC` \u662f\u65e0\u6548\u7684\u3002\n \n Define & Measures\n -----------------\n \n-The `DEFINE` and `MEASURES` keywords have similar meanings to the `WHERE` and `SELECT` clauses in a\n-simple SQL query.\n+`DEFINE` \u548c `MEASURES` \u5173\u952e\u5b57\u4e0e\u7b80\u5355 SQL \u67e5\u8be2\u4e2d\u7684 `WHERE` \u548c `SELECT` \u5b50\u53e5\u5177\u6709\u76f8\u8fd1\u7684\u542b\u4e49\u3002\n \n-The `MEASURES` clause defines what will be included in the output of a matching pattern. It can\n-project columns and define expressions for evaluation. The number of produced rows depends on the\n-[output mode](#output-mode) setting.\n+`MEASURES` \u5b50\u53e5\u5b9a\u4e49\u5339\u914d\u6a21\u5f0f\u7684\u8f93\u51fa\u4e2d\u8981\u5305\u542b\u54ea\u4e9b\u5185\u5bb9\u3002\u5b83\u53ef\u4ee5\u6295\u5f71\u5217\u5e76\u5b9a\u4e49\u8868\u8fbe\u5f0f\u8fdb\u884c\u8ba1\u7b97\u3002\u4ea7\u751f\u7684\u884c\u6570\u53d6\u51b3\u4e8e[\u8f93\u51fa\u65b9\u5f0f](#output-mode)\u8bbe\u7f6e\u3002\n \n-The `DEFINE` clause specifies conditions that rows have to fulfill in order to be classified to a\n-corresponding [pattern variable](#defining-a-pattern). If a condition is not defined for a pattern\n-variable, a default condition will be used which evaluates to `true` for every row.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a\u884c\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u624d\u80fd\u88ab\u5206\u7c7b\u5230\u76f8\u5e94\u7684 [pattern variable](#defining-a-pattern)\u3002\u5982\u679c\u6ca1\u6709\u4e3a\u6a21\u5f0f\u53d8\u91cf\u5b9a\u4e49\u6761\u4ef6\uff0c\u5219\u5c06\u4f7f\u7528\u5bf9\u6bcf\u4e00\u884c\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a `true` \u7684\u9ed8\u8ba4\u6761\u4ef6\u3002\n \n-For a more detailed explanation about expressions that can be used in those clauses, please have a\n-look at the [event stream navigation](#pattern-navigation) section.\n+\u6709\u5173\u5728\u8fd9\u4e9b\u5b50\u53e5\u4e2d\u53ef\u4f7f\u7528\u7684\u8868\u8fbe\u5f0f\u7684\u66f4\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u8bf7\u67e5\u770b [event stream navigation](#pattern-navigation) \u90e8\u5206\u3002\n \n ### Aggregations\n \n-Aggregations can be used in `DEFINE` and `MEASURES` clauses. Both\n-[built-in]({{ site.baseurl }}/dev/table/functions/systemFunctions.html) and custom\n-[user defined]({{ site.baseurl }}/dev/table/functions/udfs.html) functions are supported.\n+Aggregations \u53ef\u4ee5\u5728 `DEFINE` \u548c `MEASURES` \u5b50\u53e5\u4e2d\u4f7f\u7528\u3002\u652f\u6301[\u5185\u7f6e\u51fd\u6570]({% link dev/table/functions/systemFunctions.zh.md %})\u548c[\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570]({% link dev/table/functions/udfs.zh.md %})\u3002\n \n-Aggregate functions are applied to each subset of rows mapped to a match. In order to understand\n-how those subsets are evaluated have a look at the [event stream navigation](#pattern-navigation)\n-section.\n+\u5bf9\u76f8\u5e94\u5339\u914d\u9879\u7684\u884c\u5b50\u96c6\u53ef\u4ee5\u4f7f\u7528 Aggregate functions\u3002\u8bf7\u67e5\u770b [event stream navigation](#pattern-navigation) \u90e8\u5206\u4ee5\u4e86\u89e3\u5982\u4f55\u8ba1\u7b97\u8fd9\u4e9b\u5b50\u96c6\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1fb24d628f66f3f2929fe4e737a835e8391c0a8"}, "originalPosition": 289}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ0Mzc1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u6700\u540e\u4e00\u4e2a\u7ed3\u679c\u4e0e\u7b2c5\u884c\u3001\u7b2c6\u884c\u5339\u914d\u3002\n          \n          \n            \n            \u6700\u540e\u4e00\u4e2a\u7ed3\u679c\u4e0e\u7b2c 5 \u884c\u3001\u7b2c 6 \u884c\u5339\u914d\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453443758", "createdAt": "2020-07-13T05:34:14Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -976,16 +877,15 @@ The second result matched against the rows #5, #6.\n  XYZ      17         2018-09-17 10:00:05   2018-09-17 10:00:06\n {% endhighlight %}\n \n-Again, the first result matched against the rows #1, #2, #3, #4.\n+\u540c\u6837\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e #1\uff0c#2\uff0c#3\uff0c#4 \u884c\u5339\u914d\u3002\n \n-Compared to the previous strategy, the next match includes row #2 again for the next matching.\n-Therefore, the second result matched against the rows #2, #3, #4, #5.\n+\u4e0e\u4e0a\u4e00\u4e2a\u7b56\u7565\u76f8\u6bd4\uff0c\u4e0b\u4e00\u4e2a\u5339\u914d\u518d\u6b21\u5305\u542b #2 \u884c\u5339\u914d\u3002\u56e0\u6b64\uff0c\u7b2c\u4e8c\u4e2a\u7ed3\u679c\u4e0e #2\uff0c#3\uff0c#4\uff0c#5 \u884c\u5339\u914d\u3002\n \n-The third result matched against the rows #3, #4, #5.\n+\u7b2c\u4e09\u4e2a\u7ed3\u679c\u4e0e#3\u3001#4\u3001#5\u884c\u5339\u914d\u3002\n \n-The forth result matched against the rows #4, #5, #6.\n+\u7b2c\u56db\u4e2a\u7ed3\u679c\u4e0e#4\uff0c#5\uff0c#6\u884c\u5339\u914d\u3002\n \n-The last result matched against the rows #5, #6.\n+\u6700\u540e\u4e00\u4e2a\u7ed3\u679c\u4e0e\u7b2c5\u884c\u3001\u7b2c6\u884c\u5339\u914d\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1fb24d628f66f3f2929fe4e737a835e8391c0a8"}, "originalPosition": 879}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ0MzgwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u7b2c\u4e09\u4e2a\u7ed3\u679c\u4e0e#3\u3001#4\u3001#5\u884c\u5339\u914d\u3002\n          \n          \n            \n            \u7b2c\u4e09\u4e2a\u7ed3\u679c\u4e0e #3\u3001#4\u3001#5 \u884c\u5339\u914d\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453443800", "createdAt": "2020-07-13T05:34:24Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -976,16 +877,15 @@ The second result matched against the rows #5, #6.\n  XYZ      17         2018-09-17 10:00:05   2018-09-17 10:00:06\n {% endhighlight %}\n \n-Again, the first result matched against the rows #1, #2, #3, #4.\n+\u540c\u6837\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e #1\uff0c#2\uff0c#3\uff0c#4 \u884c\u5339\u914d\u3002\n \n-Compared to the previous strategy, the next match includes row #2 again for the next matching.\n-Therefore, the second result matched against the rows #2, #3, #4, #5.\n+\u4e0e\u4e0a\u4e00\u4e2a\u7b56\u7565\u76f8\u6bd4\uff0c\u4e0b\u4e00\u4e2a\u5339\u914d\u518d\u6b21\u5305\u542b #2 \u884c\u5339\u914d\u3002\u56e0\u6b64\uff0c\u7b2c\u4e8c\u4e2a\u7ed3\u679c\u4e0e #2\uff0c#3\uff0c#4\uff0c#5 \u884c\u5339\u914d\u3002\n \n-The third result matched against the rows #3, #4, #5.\n+\u7b2c\u4e09\u4e2a\u7ed3\u679c\u4e0e#3\u3001#4\u3001#5\u884c\u5339\u914d\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1fb24d628f66f3f2929fe4e737a835e8391c0a8"}, "originalPosition": 873}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ0MzgzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u7b2c\u56db\u4e2a\u7ed3\u679c\u4e0e#4\uff0c#5\uff0c#6\u884c\u5339\u914d\u3002\n          \n          \n            \n            \u7b2c\u56db\u4e2a\u7ed3\u679c\u4e0e #4\uff0c#5\uff0c#6 \u884c\u5339\u914d\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453443831", "createdAt": "2020-07-13T05:34:32Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -976,16 +877,15 @@ The second result matched against the rows #5, #6.\n  XYZ      17         2018-09-17 10:00:05   2018-09-17 10:00:06\n {% endhighlight %}\n \n-Again, the first result matched against the rows #1, #2, #3, #4.\n+\u540c\u6837\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e #1\uff0c#2\uff0c#3\uff0c#4 \u884c\u5339\u914d\u3002\n \n-Compared to the previous strategy, the next match includes row #2 again for the next matching.\n-Therefore, the second result matched against the rows #2, #3, #4, #5.\n+\u4e0e\u4e0a\u4e00\u4e2a\u7b56\u7565\u76f8\u6bd4\uff0c\u4e0b\u4e00\u4e2a\u5339\u914d\u518d\u6b21\u5305\u542b #2 \u884c\u5339\u914d\u3002\u56e0\u6b64\uff0c\u7b2c\u4e8c\u4e2a\u7ed3\u679c\u4e0e #2\uff0c#3\uff0c#4\uff0c#5 \u884c\u5339\u914d\u3002\n \n-The third result matched against the rows #3, #4, #5.\n+\u7b2c\u4e09\u4e2a\u7ed3\u679c\u4e0e#3\u3001#4\u3001#5\u884c\u5339\u914d\u3002\n \n-The forth result matched against the rows #4, #5, #6.\n+\u7b2c\u56db\u4e2a\u7ed3\u679c\u4e0e#4\uff0c#5\uff0c#6\u884c\u5339\u914d\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1fb24d628f66f3f2929fe4e737a835e8391c0a8"}, "originalPosition": 876}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ0Mzg2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u540c\u6837\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e#1\uff0c#2\uff0c#3\uff0c#4\u884c\u5339\u914d\u3002\n          \n          \n            \n            \u540c\u6837\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e #1\uff0c#2\uff0c#3\uff0c#4 \u884c\u5339\u914d\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453443868", "createdAt": "2020-07-13T05:34:41Z", "author": {"login": "klion26"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -998,29 +898,26 @@ The last result matched against the rows #5, #6.\n  XYZ      17         2018-09-17 10:00:05   2018-09-17 10:00:06\n {% endhighlight %}\n \n-Again, the first result matched against the rows #1, #2, #3, #4.\n+\u540c\u6837\uff0c\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e0e#1\uff0c#2\uff0c#3\uff0c#4\u884c\u5339\u914d\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1fb24d628f66f3f2929fe4e737a835e8391c0a8"}, "originalPosition": 888}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3Mjc4MzMw", "url": "https://github.com/apache/flink/pull/12798#pullrequestreview-447278330", "createdAt": "2020-07-13T14:00:00Z", "commit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "state": "COMMENTED", "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNDowMDowMFrOGwp4Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTowNTo1NlrOGwswVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3MDk5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u641c\u7d22\u4e00\u7ec4\u4e8b\u4ef6\u6a21\u5f0f\uff08event pattern\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u4f8b\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u6d41\u7684\u60c5\u51b5\u4e0b\u3002Flink \u63d0\u4f9b[\u590d\u6742\u4e8b\u4ef6\u5904\u7406\uff08CEP\uff09\u5e93]({% link dev/libs/cep.zh.md %})\uff0c\u8be5\u5e93\u5141\u8bb8\u5728\u4e8b\u4ef6\u6d41\u4e2d\u8fdb\u884c\u6a21\u5f0f\u68c0\u6d4b\u3002\u6b64\u5916\uff0cFlink \u7684 SQL API \u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u7cfb\u5f0f\u7684\u67e5\u8be2\u8868\u8fbe\u65b9\u5f0f\uff0c\u5176\u4e2d\u5305\u542b\u5927\u91cf\u5185\u7f6e\u51fd\u6570\u548c\u57fa\u4e8e\u89c4\u5219\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002\n          \n          \n            \n            \u641c\u7d22\u4e00\u7ec4\u4e8b\u4ef6\u6a21\u5f0f\uff08event pattern\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u4f8b\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u6d41\u60c5\u666f\u4e2d\u3002Flink \u63d0\u4f9b[\u590d\u6742\u4e8b\u4ef6\u5904\u7406\uff08CEP\uff09\u5e93]({% link dev/libs/cep.zh.md %})\uff0c\u8be5\u5e93\u5141\u8bb8\u5728\u4e8b\u4ef6\u6d41\u4e2d\u8fdb\u884c\u6a21\u5f0f\u68c0\u6d4b\u3002\u6b64\u5916\uff0cFlink \u7684 SQL API \u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u7cfb\u5f0f\u7684\u67e5\u8be2\u8868\u8fbe\u65b9\u5f0f\uff0c\u5176\u4e2d\u5305\u542b\u5927\u91cf\u5185\u7f6e\u51fd\u6570\u548c\u57fa\u4e8e\u89c4\u5219\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453670995", "createdAt": "2020-07-13T14:00:00Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -24,28 +24,17 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-It is a common use case to search for a set of event patterns, especially in case of data streams.\n-Flink comes with a [complex event processing (CEP) library]({{ site.baseurl }}/dev/libs/cep.html)\n-which allows for pattern detection in event streams. Furthermore, Flink's SQL API provides a\n-relational way of expressing queries with a large set of built-in functions and rule-based\n-optimizations that can be used out of the box.\n-\n-In December 2016, the International Organization for Standardization (ISO) released a new version\n-of the SQL standard which includes _Row Pattern Recognition in SQL_\n-([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip)).\n-It allows Flink to consolidate CEP and SQL API using the `MATCH_RECOGNIZE` clause for complex event\n-processing in SQL.\n-\n-A `MATCH_RECOGNIZE` clause enables the following tasks:\n-* Logically partition and order the data that is used with the `PARTITION BY` and `ORDER BY`\n-  clauses.\n-* Define patterns of rows to seek using the `PATTERN` clause. These patterns use a syntax similar to\n-  that of regular expressions.\n-* The logical components of the row pattern variables are specified in the `DEFINE` clause.\n-* Define measures, which are expressions usable in other parts of the SQL query, in the `MEASURES`\n-  clause.\n-\n-The following example illustrates the syntax for basic pattern recognition:\n+\u641c\u7d22\u4e00\u7ec4\u4e8b\u4ef6\u6a21\u5f0f\uff08event pattern\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u4f8b\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u6d41\u7684\u60c5\u51b5\u4e0b\u3002Flink \u63d0\u4f9b[\u590d\u6742\u4e8b\u4ef6\u5904\u7406\uff08CEP\uff09\u5e93]({% link dev/libs/cep.zh.md %})\uff0c\u8be5\u5e93\u5141\u8bb8\u5728\u4e8b\u4ef6\u6d41\u4e2d\u8fdb\u884c\u6a21\u5f0f\u68c0\u6d4b\u3002\u6b64\u5916\uff0cFlink \u7684 SQL API \u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u7cfb\u5f0f\u7684\u67e5\u8be2\u8868\u8fbe\u65b9\u5f0f\uff0c\u5176\u4e2d\u5305\u542b\u5927\u91cf\u5185\u7f6e\u51fd\u6570\u548c\u57fa\u4e8e\u89c4\u5219\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3MTgyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * \u4f7f\u7528 `PATTERN` \u5b50\u53e5\u5b9a\u4e49\u8981\u67e5\u627e\u7684\u884c\u7684\u6a21\u5f0f\u3002\u8fd9\u4e9b\u6a21\u5f0f\u4f7f\u7528\u7c7b\u4f3c\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u3002\n          \n          \n            \n            * \u4f7f\u7528 `PATTERN` \u5b50\u53e5\u5b9a\u4e49\u8981\u67e5\u627e\u7684\u884c\u6a21\u5f0f\u3002\u8fd9\u4e9b\u6a21\u5f0f\u4f7f\u7528\u7c7b\u4f3c\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453671820", "createdAt": "2020-07-13T14:01:10Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -24,28 +24,17 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-It is a common use case to search for a set of event patterns, especially in case of data streams.\n-Flink comes with a [complex event processing (CEP) library]({{ site.baseurl }}/dev/libs/cep.html)\n-which allows for pattern detection in event streams. Furthermore, Flink's SQL API provides a\n-relational way of expressing queries with a large set of built-in functions and rule-based\n-optimizations that can be used out of the box.\n-\n-In December 2016, the International Organization for Standardization (ISO) released a new version\n-of the SQL standard which includes _Row Pattern Recognition in SQL_\n-([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip)).\n-It allows Flink to consolidate CEP and SQL API using the `MATCH_RECOGNIZE` clause for complex event\n-processing in SQL.\n-\n-A `MATCH_RECOGNIZE` clause enables the following tasks:\n-* Logically partition and order the data that is used with the `PARTITION BY` and `ORDER BY`\n-  clauses.\n-* Define patterns of rows to seek using the `PATTERN` clause. These patterns use a syntax similar to\n-  that of regular expressions.\n-* The logical components of the row pattern variables are specified in the `DEFINE` clause.\n-* Define measures, which are expressions usable in other parts of the SQL query, in the `MEASURES`\n-  clause.\n-\n-The following example illustrates the syntax for basic pattern recognition:\n+\u641c\u7d22\u4e00\u7ec4\u4e8b\u4ef6\u6a21\u5f0f\uff08event pattern\uff09\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u4f8b\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u6d41\u7684\u60c5\u51b5\u4e0b\u3002Flink \u63d0\u4f9b[\u590d\u6742\u4e8b\u4ef6\u5904\u7406\uff08CEP\uff09\u5e93]({% link dev/libs/cep.zh.md %})\uff0c\u8be5\u5e93\u5141\u8bb8\u5728\u4e8b\u4ef6\u6d41\u4e2d\u8fdb\u884c\u6a21\u5f0f\u68c0\u6d4b\u3002\u6b64\u5916\uff0cFlink \u7684 SQL API \u63d0\u4f9b\u4e86\u4e00\u79cd\u5173\u7cfb\u5f0f\u7684\u67e5\u8be2\u8868\u8fbe\u65b9\u5f0f\uff0c\u5176\u4e2d\u5305\u542b\u5927\u91cf\u5185\u7f6e\u51fd\u6570\u548c\u57fa\u4e8e\u89c4\u5219\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002\n+\n+2016 \u5e74 12 \u6708\uff0c\u56fd\u9645\u6807\u51c6\u5316\u7ec4\u7ec7\uff08ISO\uff09\u53d1\u5e03\u4e86\u65b0\u7248\u672c\u7684 SQL \u6807\u51c6\uff0c\u5176\u4e2d\u5305\u62ec\u5728 _SQL \u4e2d\u7684\u884c\u6a21\u5f0f\u8bc6\u522b\uff08Row Pattern Recognition in SQL\uff09_([ISO/IEC TR 19075-5:2016](https://standards.iso.org/ittf/PubliclyAvailableStandards/c065143_ISO_IEC_TR_19075-5_2016.zip))\u3002\u5b83\u5141\u8bb8 Flink \u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\u878d\u5408 CEP \u548c SQL API\uff0c\u4ee5\u4fbf\u5728 SQL \u4e2d\u8fdb\u884c\u590d\u6742\u4e8b\u4ef6\u5904\u7406\u3002\n+\n+`MATCH_RECOGNIZE` \u5b50\u53e5\u542f\u7528\u4ee5\u4e0b\u4efb\u52a1\uff1a\n+* \u4f7f\u7528 `PARTITION BY` \u548c `ORDER BY` \u5b50\u53e5\u5bf9\u6570\u636e\u8fdb\u884c\u903b\u8f91\u5206\u533a\u548c\u6392\u5e8f\u3002\n+* \u4f7f\u7528 `PATTERN` \u5b50\u53e5\u5b9a\u4e49\u8981\u67e5\u627e\u7684\u884c\u7684\u6a21\u5f0f\u3002\u8fd9\u4e9b\u6a21\u5f0f\u4f7f\u7528\u7c7b\u4f3c\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3NjM0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <span class=\"label label-danger\">\u6ce8\u610f</span> Flink \u7684 `MATCH_RECOGNIZE` \u5b50\u53e5\u5b9e\u73b0\u662f\u5b8c\u6574\u6807\u51c6\u7684\u4e00\u4e2a\u5b50\u96c6\u3002\u4ec5\u652f\u6301\u4ee5\u4e0b\u90e8\u5206\u4e2d\u8bb0\u5f55\u7684\u529f\u80fd\u3002\u7531\u4e8e\u5f00\u53d1\u4ecd\u5904\u4e8e\u521d\u671f\u9636\u6bb5\uff0c\u8bf7\u67e5\u770b[\u5df2\u77e5\u7684\u5c40\u9650](#known-limitations)\u3002\n          \n          \n            \n            <span class=\"label label-danger\">\u6ce8\u610f</span> Flink \u7684 `MATCH_RECOGNIZE` \u5b50\u53e5\u5b9e\u73b0\u662f\u4e00\u4e2a\u5b8c\u6574\u6807\u51c6\u5b50\u96c6\u3002\u4ec5\u652f\u6301\u4ee5\u4e0b\u90e8\u5206\u4e2d\u8bb0\u5f55\u7684\u529f\u80fd\u3002\u76ee\u524d\u5f00\u53d1\u4ecd\u5904\u4e8e\u521d\u671f\u9636\u6bb5\uff0c\u8bf7\u67e5\u770b[\u5df2\u77e5\u7684\u5c40\u9650](#known-limitations)\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453676347", "createdAt": "2020-07-13T14:07:56Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -65,24 +54,23 @@ FROM MyTable\n     ) AS T\n {% endhighlight %}\n \n-This page will explain each keyword in more detail and will illustrate more complex examples.\n+\u672c\u9875\u5c06\u66f4\u8be6\u7ec6\u5730\u89e3\u91ca\u6bcf\u4e2a\u5173\u952e\u5b57\uff0c\u5e76\u6f14\u793a\u8bf4\u660e\u66f4\u590d\u6742\u7684\u793a\u4f8b\u3002\n \n-<span class=\"label label-danger\">Attention</span> Flink's implementation of the `MATCH_RECOGNIZE`\n-clause is a subset of the full standard. Only those features documented in the following sections\n-are supported. Since the development is still in an early phase, please also take a look at the\n-[known limitations](#known-limitations).\n+<span class=\"label label-danger\">\u6ce8\u610f</span> Flink \u7684 `MATCH_RECOGNIZE` \u5b50\u53e5\u5b9e\u73b0\u662f\u5b8c\u6574\u6807\u51c6\u7684\u4e00\u4e2a\u5b50\u96c6\u3002\u4ec5\u652f\u6301\u4ee5\u4e0b\u90e8\u5206\u4e2d\u8bb0\u5f55\u7684\u529f\u80fd\u3002\u7531\u4e8e\u5f00\u53d1\u4ecd\u5904\u4e8e\u521d\u671f\u9636\u6bb5\uff0c\u8bf7\u67e5\u770b[\u5df2\u77e5\u7684\u5c40\u9650](#known-limitations)\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3NzU1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u96c6\u7fa4 classpath\uff08\u67e5\u770b [dependency section]({% link dev/project-configuration.zh.md %}) \u83b7\u53d6\u66f4\u591a\u76f8\u5173\u4f9d\u8d56\u4fe1\u606f\uff09\u3002\n          \n          \n            \n            \u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u96c6\u7fa4\u7684 classpath\uff08\u67e5\u770b [dependency section]({% link dev/project-configuration.zh.md %}) \u83b7\u53d6\u66f4\u591a\u76f8\u5173\u4f9d\u8d56\u4fe1\u606f\uff09\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453677556", "createdAt": "2020-07-13T14:09:44Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -92,52 +80,43 @@ project.\n </dependency>\n {% endhighlight %}\n \n-Alternatively, you can also add the dependency to the cluster classpath (see the\n-[dependency section]({{ site.baseurl}}/dev/project-configuration.html) for more information).\n+\u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u96c6\u7fa4 classpath\uff08\u67e5\u770b [dependency section]({% link dev/project-configuration.zh.md %}) \u83b7\u53d6\u66f4\u591a\u76f8\u5173\u4f9d\u8d56\u4fe1\u606f\uff09\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY3OTcyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * [AFTER MATCH SKIP](#after-match-strategy) - \u6307\u5b9a\u4e0b\u4e00\u4e2a\u5339\u914d\u7684\u5f00\u59cb\u4f4d\u7f6e\uff1b\u8fd9\u4e5f\u662f\u4e00\u79cd\u63a7\u5236\u5355\u4e2a\u4e8b\u4ef6\u53ef\u4ee5\u5c5e\u4e8e\u591a\u5c11\u4e2a\u4e0d\u540c\u5339\u914d\u7684\u65b9\u6cd5\u3002\n          \n          \n            \n            * [AFTER MATCH SKIP](#after-match-strategy) - \u6307\u5b9a\u4e0b\u4e00\u4e2a\u5339\u914d\u7684\u5f00\u59cb\u4f4d\u7f6e\uff1b\u8fd9\u4e5f\u662f\u63a7\u5236\u5355\u4e2a\u4e8b\u4ef6\u53ef\u4ee5\u5c5e\u4e8e\u591a\u5c11\u4e2a\u4e0d\u540c\u5339\u914d\u9879\u7684\u65b9\u6cd5\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453679726", "createdAt": "2020-07-13T14:12:54Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -92,52 +80,43 @@ project.\n </dependency>\n {% endhighlight %}\n \n-Alternatively, you can also add the dependency to the cluster classpath (see the\n-[dependency section]({{ site.baseurl}}/dev/project-configuration.html) for more information).\n+\u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u96c6\u7fa4 classpath\uff08\u67e5\u770b [dependency section]({% link dev/project-configuration.zh.md %}) \u83b7\u53d6\u66f4\u591a\u76f8\u5173\u4f9d\u8d56\u4fe1\u606f\uff09\u3002\n+\n+\u5982\u679c\u4f60\u60f3\u5728 [SQL Client]({% link dev/table/sqlClient.zh.md %}) \u4e2d\u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\uff0c\u4f60\u65e0\u9700\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5305\u542b\u6240\u6709\u4f9d\u8d56\u9879\u3002\n+\n+<a name=\"sql-semantics\"></a>\n \n-If you want to use the `MATCH_RECOGNIZE` clause in the\n-[SQL Client]({{ site.baseurl}}/dev/table/sqlClient.html), you don't have to do anything as all the\n-dependencies are included by default.\n+### SQL \u8bed\u4e49\n \n-### SQL Semantics\n+\u6bcf\u4e2a `MATCH_RECOGNIZE` \u67e5\u8be2\u90fd\u5305\u542b\u4ee5\u4e0b\u5b50\u53e5\uff1a\n \n-Every `MATCH_RECOGNIZE` query consists of the following clauses:\n+* [PARTITION BY](#partitioning) - \u5b9a\u4e49\u8868\u7684\u903b\u8f91\u5206\u533a\uff1b\u7c7b\u4f3c\u4e8e `GROUP BY` \u64cd\u4f5c\u3002\n+* [ORDER BY](#order-of-events) - \u6307\u5b9a\u4f20\u5165\u884c\u7684\u6392\u5e8f\u65b9\u5f0f\uff1b\u8fd9\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u6a21\u5f0f\u4f9d\u8d56\u4e8e\u987a\u5e8f\u3002\n+* [MEASURES](#define--measures) - \u5b9a\u4e49\u5b50\u53e5\u7684\u8f93\u51fa\uff1b\u7c7b\u4f3c\u4e8e `SELECT` \u5b50\u53e5\u3002\n+* [ONE ROW PER MATCH](#output-mode) - \u8f93\u51fa\u65b9\u5f0f\uff0c\u5b9a\u4e49\u6bcf\u4e2a\u5339\u914d\u9879\u5e94\u4ea7\u751f\u591a\u5c11\u884c\u3002\n+* [AFTER MATCH SKIP](#after-match-strategy) - \u6307\u5b9a\u4e0b\u4e00\u4e2a\u5339\u914d\u7684\u5f00\u59cb\u4f4d\u7f6e\uff1b\u8fd9\u4e5f\u662f\u4e00\u79cd\u63a7\u5236\u5355\u4e2a\u4e8b\u4ef6\u53ef\u4ee5\u5c5e\u4e8e\u591a\u5c11\u4e2a\u4e0d\u540c\u5339\u914d\u7684\u65b9\u6cd5\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4Mjg0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <span class=\"label label-danger\">\u6ce8\u610f</span> \u76ee\u524d\uff0c`MATCH_RECOGNIZE` \u5b50\u53e5\u53ea\u80fd\u5e94\u7528\u4e8e\u8ffd\u52a0\u8868\uff08[append table]({% link dev/table/streaming/dynamic_tables.zh.md %}#update-and-append-queries)\uff09\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u603b\u662f\u751f\u6210\u4e00\u4e2a\u8ffd\u52a0\u8868\u3002\n          \n          \n            \n            <span class=\"label label-danger\">\u6ce8\u610f</span> \u76ee\u524d\uff0c`MATCH_RECOGNIZE` \u5b50\u53e5\u53ea\u80fd\u5e94\u7528\u4e8e[\u8ffd\u52a0\u8868]({% link dev/table/streaming/dynamic_tables.zh.md %}#update-and-append-queries)\u3002\u6b64\u5916\uff0c\u5b83\u4e5f\u603b\u662f\u751f\u6210\u4e00\u4e2a\u8ffd\u52a0\u8868\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453682843", "createdAt": "2020-07-13T14:17:24Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -92,52 +80,43 @@ project.\n </dependency>\n {% endhighlight %}\n \n-Alternatively, you can also add the dependency to the cluster classpath (see the\n-[dependency section]({{ site.baseurl}}/dev/project-configuration.html) for more information).\n+\u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u5c06\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u96c6\u7fa4 classpath\uff08\u67e5\u770b [dependency section]({% link dev/project-configuration.zh.md %}) \u83b7\u53d6\u66f4\u591a\u76f8\u5173\u4f9d\u8d56\u4fe1\u606f\uff09\u3002\n+\n+\u5982\u679c\u4f60\u60f3\u5728 [SQL Client]({% link dev/table/sqlClient.zh.md %}) \u4e2d\u4f7f\u7528 `MATCH_RECOGNIZE` \u5b50\u53e5\uff0c\u4f60\u65e0\u9700\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5305\u542b\u6240\u6709\u4f9d\u8d56\u9879\u3002\n+\n+<a name=\"sql-semantics\"></a>\n \n-If you want to use the `MATCH_RECOGNIZE` clause in the\n-[SQL Client]({{ site.baseurl}}/dev/table/sqlClient.html), you don't have to do anything as all the\n-dependencies are included by default.\n+### SQL \u8bed\u4e49\n \n-### SQL Semantics\n+\u6bcf\u4e2a `MATCH_RECOGNIZE` \u67e5\u8be2\u90fd\u5305\u542b\u4ee5\u4e0b\u5b50\u53e5\uff1a\n \n-Every `MATCH_RECOGNIZE` query consists of the following clauses:\n+* [PARTITION BY](#partitioning) - \u5b9a\u4e49\u8868\u7684\u903b\u8f91\u5206\u533a\uff1b\u7c7b\u4f3c\u4e8e `GROUP BY` \u64cd\u4f5c\u3002\n+* [ORDER BY](#order-of-events) - \u6307\u5b9a\u4f20\u5165\u884c\u7684\u6392\u5e8f\u65b9\u5f0f\uff1b\u8fd9\u662f\u5fc5\u987b\u7684\uff0c\u56e0\u4e3a\u6a21\u5f0f\u4f9d\u8d56\u4e8e\u987a\u5e8f\u3002\n+* [MEASURES](#define--measures) - \u5b9a\u4e49\u5b50\u53e5\u7684\u8f93\u51fa\uff1b\u7c7b\u4f3c\u4e8e `SELECT` \u5b50\u53e5\u3002\n+* [ONE ROW PER MATCH](#output-mode) - \u8f93\u51fa\u65b9\u5f0f\uff0c\u5b9a\u4e49\u6bcf\u4e2a\u5339\u914d\u9879\u5e94\u4ea7\u751f\u591a\u5c11\u884c\u3002\n+* [AFTER MATCH SKIP](#after-match-strategy) - \u6307\u5b9a\u4e0b\u4e00\u4e2a\u5339\u914d\u7684\u5f00\u59cb\u4f4d\u7f6e\uff1b\u8fd9\u4e5f\u662f\u4e00\u79cd\u63a7\u5236\u5355\u4e2a\u4e8b\u4ef6\u53ef\u4ee5\u5c5e\u4e8e\u591a\u5c11\u4e2a\u4e0d\u540c\u5339\u914d\u7684\u65b9\u6cd5\u3002\n+* [PATTERN](#defining-a-pattern) - \u5141\u8bb8\u4f7f\u7528\u7c7b\u4f3c\u4e8e _\u6b63\u5219\u8868\u8fbe\u5f0f_ \u7684\u8bed\u6cd5\u6784\u9020\u641c\u7d22\u7684\u6a21\u5f0f\u3002\n+* [DEFINE](#define--measures) - \u672c\u90e8\u5206\u5b9a\u4e49\u4e86\u6a21\u5f0f\u53d8\u91cf\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\n \n-* [PARTITION BY](#partitioning) - defines the logical partitioning of the table; similar to a\n-  `GROUP BY` operation.\n-* [ORDER BY](#order-of-events) - specifies how the incoming rows should be ordered; this is\n-  essential as patterns depend on an order.\n-* [MEASURES](#define--measures) - defines output of the clause; similar to a `SELECT` clause.\n-* [ONE ROW PER MATCH](#output-mode) - output mode which defines how many rows per match should be\n-  produced.\n-* [AFTER MATCH SKIP](#after-match-strategy) - specifies where the next match should start; this is\n-  also a way to control how many distinct matches a single event can belong to.\n-* [PATTERN](#defining-a-pattern) - allows constructing patterns that will be searched for using a\n-  _regular expression_-like syntax.\n-* [DEFINE](#define--measures) - this section defines the conditions that the pattern variables must\n-  satisfy.\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u76ee\u524d\uff0c`MATCH_RECOGNIZE` \u5b50\u53e5\u53ea\u80fd\u5e94\u7528\u4e8e\u8ffd\u52a0\u8868\uff08[append table]({% link dev/table/streaming/dynamic_tables.zh.md %}#update-and-append-queries)\uff09\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u603b\u662f\u751f\u6210\u4e00\u4e2a\u8ffd\u52a0\u8868\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY5NDI1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5982\u679c\u662f\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u5728\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230\u5185\u90e8\u6a21\u5f0f\u72b6\u6001\u673a\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u884c\u6dfb\u52a0\u5230\u8868\u7684\u987a\u5e8f\u5982\u4f55\uff0c\u751f\u6210\u7684\u8f93\u51fa\u90fd\u662f\u6b63\u786e\u7684\u3002\u76f8\u53cd\uff0c\u6a21\u5f0f\u662f\u6309\u7167\u6bcf\u884c\u4e2d\u5305\u542b\u7684\u65f6\u95f4\u6307\u5b9a\u7684\u987a\u5e8f\u8ba1\u7b97\u7684\u3002\n          \n          \n            \n            \u5982\u679c\u662f\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u5728\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230\u5185\u90e8\u6a21\u5f0f\u72b6\u6001\u673a\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u884c\u6dfb\u52a0\u5230\u8868\u7684\u987a\u5e8f\u5982\u4f55\uff0c\u751f\u6210\u7684\u8f93\u51fa\u90fd\u662f\u6b63\u786e\u7684\u3002\u800c\u6a21\u5f0f\u662f\u6309\u7167\u6bcf\u884c\u4e2d\u6240\u5305\u542b\u7684\u65f6\u95f4\u6307\u5b9a\u987a\u5e8f\u8ba1\u7b97\u7684\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453694259", "createdAt": "2020-07-13T14:33:31Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\n \n-This query produces a summary row for each period in which the price of a stock was continuously\n-decreasing.\n+\u6b64\u67e5\u8be2\u4e3a\u80a1\u7968\u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u7684\u6bcf\u4e2a\u671f\u95f4\u751f\u6210\u6458\u8981\u884c\u3002\n \n-The exact representation of the output rows is defined in the `MEASURES` part of the query. The\n-number of output rows is defined by the `ONE ROW PER MATCH` output mode.\n+\u5728\u67e5\u8be2\u7684 `MEASURES` \u5b50\u53e5\u90e8\u5206\u5b9a\u4e49\u786e\u5207\u7684\u8f93\u51fa\u884c\u4fe1\u606f\u3002\u8f93\u51fa\u884c\u6570\u7531 `ONE ROW PER MATCH` \u8f93\u51fa\u65b9\u5f0f\u5b9a\u4e49\u3002\n \n {% highlight text %}\n  symbol       start_tstamp       bottom_tstamp         end_tstamp\n =========  ==================  ==================  ==================\n ACME       01-APR-11 10:00:04  01-APR-11 10:00:07  01-APR-11 10:00:08\n {% endhighlight %}\n \n-The resulting row describes a period of falling prices that started at `01-APR-11 10:00:04` and\n-achieved the lowest price at `01-APR-11 10:00:07` that increased again at `01-APR-11 10:00:08`.\n+\u8be5\u884c\u7ed3\u679c\u63cf\u8ff0\u4e86\u4ece `01-APR-11 10:00:04` \u5f00\u59cb\u7684\u4ef7\u683c\u4e0b\u8dcc\u671f\uff0c\u5728 `01-APR-11 10:00:07` \u8fbe\u5230\u6700\u4f4e\u4ef7\u683c\uff0c\u5230 `01-APR-11 10:00:08` \u518d\u6b21\u4e0a\u6da8\u3002\n \n-Partitioning\n+<a name=\"partitioning\"></a>\n+\n+\u5206\u533a\n ------------\n \n-It is possible to look for patterns in partitioned data, e.g., trends for a single ticker or a\n-particular user. This can be expressed using the `PARTITION BY` clause. The clause is similar to\n-using `GROUP BY` for aggregations.\n+\u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9\u805a\u5408\u4f7f\u7528 `GROUP BY`\u3002\n+\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u5f3a\u70c8\u5efa\u8bae\u5bf9\u4f20\u5165\u7684\u6570\u636e\u8fdb\u884c\u5206\u533a\uff0c\u5426\u5219 `MATCH_RECOGNIZE` \u5b50\u53e5\u5c06\u88ab\u8f6c\u6362\u4e3a\u975e\u5e76\u884c\u7b97\u5b50\uff0c\u4ee5\u786e\u4fdd\u5168\u5c40\u6392\u5e8f\u3002\n \n-<span class=\"label label-danger\">Attention</span> It is highly advised to partition the incoming\n-data because otherwise the `MATCH_RECOGNIZE` clause will be translated into a non-parallel operator\n-to ensure global ordering.\n+<a name=\"order-of-events\"></a>\n \n-Order of Events\n+\u4e8b\u4ef6\u987a\u5e8f\n ---------------\n \n-Apache Flink allows for searching for patterns based on time; either\n-[processing time or event time](time_attributes.html).\n+Apache Flink \u53ef\u4ee5\u6839\u636e\u65f6\u95f4\uff08[\u5904\u7406\u65f6\u95f4\u6216\u8005\u4e8b\u4ef6\u65f6\u95f4]({% link dev/table/streaming/time_attributes.zh.md %})\uff09\u8fdb\u884c\u6a21\u5f0f\u641c\u7d22\u3002\n \n-In case of event time, the events are sorted before they are passed to the internal pattern state\n-machine. As a consequence, the produced output will be correct regardless of the order in which\n-rows are appended to the table. Instead, the pattern is evaluated in the order specified by the\n-time contained in each row.\n+\u5982\u679c\u662f\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u5728\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230\u5185\u90e8\u6a21\u5f0f\u72b6\u6001\u673a\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u884c\u6dfb\u52a0\u5230\u8868\u7684\u987a\u5e8f\u5982\u4f55\uff0c\u751f\u6210\u7684\u8f93\u51fa\u90fd\u662f\u6b63\u786e\u7684\u3002\u76f8\u53cd\uff0c\u6a21\u5f0f\u662f\u6309\u7167\u6bcf\u884c\u4e2d\u5305\u542b\u7684\u65f6\u95f4\u6307\u5b9a\u7684\u987a\u5e8f\u8ba1\u7b97\u7684\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 248}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY5NjY3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `DEFINE` \u5b50\u53e5\u6307\u5b9a\u884c\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u624d\u80fd\u88ab\u5206\u7c7b\u5230\u76f8\u5e94\u7684[\u6a21\u5f0f\u53d8\u91cf](#defining-a-pattern)\u3002\u5982\u679c\u6ca1\u6709\u4e3a\u6a21\u5f0f\u53d8\u91cf\u5b9a\u4e49\u6761\u4ef6\uff0c\u5219\u5c06\u4f7f\u7528\u5bf9\u6bcf\u4e00\u884c\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a `true` \u7684\u9ed8\u8ba4\u6761\u4ef6\u3002\n          \n          \n            \n            `DEFINE` \u5b50\u53e5\u6307\u5b9a\u884c\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u624d\u80fd\u88ab\u5206\u7c7b\u5230\u76f8\u5e94\u7684[\u6a21\u5f0f\u53d8\u91cf](#defining-a-pattern)\u3002\u5982\u679c\u6ca1\u6709\u4e3a\u6a21\u5f0f\u53d8\u91cf\u5b9a\u4e49\u6761\u4ef6\uff0c\u5219\u5c06\u5bf9\u6bcf\u4e00\u884c\u4f7f\u7528\u8ba1\u7b97\u7ed3\u679c\u4e3a `true` \u7684\u9ed8\u8ba4\u6761\u4ef6\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453696673", "createdAt": "2020-07-13T14:36:52Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\n \n-This query produces a summary row for each period in which the price of a stock was continuously\n-decreasing.\n+\u6b64\u67e5\u8be2\u4e3a\u80a1\u7968\u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u7684\u6bcf\u4e2a\u671f\u95f4\u751f\u6210\u6458\u8981\u884c\u3002\n \n-The exact representation of the output rows is defined in the `MEASURES` part of the query. The\n-number of output rows is defined by the `ONE ROW PER MATCH` output mode.\n+\u5728\u67e5\u8be2\u7684 `MEASURES` \u5b50\u53e5\u90e8\u5206\u5b9a\u4e49\u786e\u5207\u7684\u8f93\u51fa\u884c\u4fe1\u606f\u3002\u8f93\u51fa\u884c\u6570\u7531 `ONE ROW PER MATCH` \u8f93\u51fa\u65b9\u5f0f\u5b9a\u4e49\u3002\n \n {% highlight text %}\n  symbol       start_tstamp       bottom_tstamp         end_tstamp\n =========  ==================  ==================  ==================\n ACME       01-APR-11 10:00:04  01-APR-11 10:00:07  01-APR-11 10:00:08\n {% endhighlight %}\n \n-The resulting row describes a period of falling prices that started at `01-APR-11 10:00:04` and\n-achieved the lowest price at `01-APR-11 10:00:07` that increased again at `01-APR-11 10:00:08`.\n+\u8be5\u884c\u7ed3\u679c\u63cf\u8ff0\u4e86\u4ece `01-APR-11 10:00:04` \u5f00\u59cb\u7684\u4ef7\u683c\u4e0b\u8dcc\u671f\uff0c\u5728 `01-APR-11 10:00:07` \u8fbe\u5230\u6700\u4f4e\u4ef7\u683c\uff0c\u5230 `01-APR-11 10:00:08` \u518d\u6b21\u4e0a\u6da8\u3002\n \n-Partitioning\n+<a name=\"partitioning\"></a>\n+\n+\u5206\u533a\n ------------\n \n-It is possible to look for patterns in partitioned data, e.g., trends for a single ticker or a\n-particular user. This can be expressed using the `PARTITION BY` clause. The clause is similar to\n-using `GROUP BY` for aggregations.\n+\u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9\u805a\u5408\u4f7f\u7528 `GROUP BY`\u3002\n+\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u5f3a\u70c8\u5efa\u8bae\u5bf9\u4f20\u5165\u7684\u6570\u636e\u8fdb\u884c\u5206\u533a\uff0c\u5426\u5219 `MATCH_RECOGNIZE` \u5b50\u53e5\u5c06\u88ab\u8f6c\u6362\u4e3a\u975e\u5e76\u884c\u7b97\u5b50\uff0c\u4ee5\u786e\u4fdd\u5168\u5c40\u6392\u5e8f\u3002\n \n-<span class=\"label label-danger\">Attention</span> It is highly advised to partition the incoming\n-data because otherwise the `MATCH_RECOGNIZE` clause will be translated into a non-parallel operator\n-to ensure global ordering.\n+<a name=\"order-of-events\"></a>\n \n-Order of Events\n+\u4e8b\u4ef6\u987a\u5e8f\n ---------------\n \n-Apache Flink allows for searching for patterns based on time; either\n-[processing time or event time](time_attributes.html).\n+Apache Flink \u53ef\u4ee5\u6839\u636e\u65f6\u95f4\uff08[\u5904\u7406\u65f6\u95f4\u6216\u8005\u4e8b\u4ef6\u65f6\u95f4]({% link dev/table/streaming/time_attributes.zh.md %})\uff09\u8fdb\u884c\u6a21\u5f0f\u641c\u7d22\u3002\n \n-In case of event time, the events are sorted before they are passed to the internal pattern state\n-machine. As a consequence, the produced output will be correct regardless of the order in which\n-rows are appended to the table. Instead, the pattern is evaluated in the order specified by the\n-time contained in each row.\n+\u5982\u679c\u662f\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u5728\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230\u5185\u90e8\u6a21\u5f0f\u72b6\u6001\u673a\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u884c\u6dfb\u52a0\u5230\u8868\u7684\u987a\u5e8f\u5982\u4f55\uff0c\u751f\u6210\u7684\u8f93\u51fa\u90fd\u662f\u6b63\u786e\u7684\u3002\u76f8\u53cd\uff0c\u6a21\u5f0f\u662f\u6309\u7167\u6bcf\u884c\u4e2d\u5305\u542b\u7684\u65f6\u95f4\u6307\u5b9a\u7684\u987a\u5e8f\u8ba1\u7b97\u7684\u3002\n \n-The `MATCH_RECOGNIZE` clause assumes a [time attribute](time_attributes.html) with ascending\n-ordering as the first argument to `ORDER BY` clause.\n+`MATCH_RECOGNIZE` \u5b50\u53e5\u5047\u5b9a\u5347\u5e8f\u7684 [\u65f6\u95f4\u5c5e\u6027]({% link dev/table/streaming/time_attributes.zh.md %}) \u662f `ORDER BY` \u5b50\u53e5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\n \n-For the example `Ticker` table, a definition like `ORDER BY rowtime ASC, price DESC` is valid but\n-`ORDER BY price, rowtime` or `ORDER BY rowtime DESC, price ASC` is not.\n+\u5bf9\u4e8e\u793a\u4f8b `Ticker` \u8868\uff0c\u8bf8\u5982 `ORDER BY rowtime ASC, price DESC` \u7684\u5b9a\u4e49\u662f\u6709\u6548\u7684\uff0c\u4f46 `ORDER BY price, rowtime` \u6216\u8005 `ORDER BY rowtime DESC, price ASC` \u662f\u65e0\u6548\u7684\u3002\n \n Define & Measures\n -----------------\n \n-The `DEFINE` and `MEASURES` keywords have similar meanings to the `WHERE` and `SELECT` clauses in a\n-simple SQL query.\n+`DEFINE` \u548c `MEASURES` \u5173\u952e\u5b57\u4e0e\u7b80\u5355 SQL \u67e5\u8be2\u4e2d\u7684 `WHERE` \u548c `SELECT` \u5b50\u53e5\u5177\u6709\u76f8\u8fd1\u7684\u542b\u4e49\u3002\n \n-The `MEASURES` clause defines what will be included in the output of a matching pattern. It can\n-project columns and define expressions for evaluation. The number of produced rows depends on the\n-[output mode](#output-mode) setting.\n+`MEASURES` \u5b50\u53e5\u5b9a\u4e49\u5339\u914d\u6a21\u5f0f\u7684\u8f93\u51fa\u4e2d\u8981\u5305\u542b\u54ea\u4e9b\u5185\u5bb9\u3002\u5b83\u53ef\u4ee5\u6295\u5f71\u5217\u5e76\u5b9a\u4e49\u8868\u8fbe\u5f0f\u8fdb\u884c\u8ba1\u7b97\u3002\u4ea7\u751f\u7684\u884c\u6570\u53d6\u51b3\u4e8e[\u8f93\u51fa\u65b9\u5f0f](#output-mode)\u8bbe\u7f6e\u3002\n \n-The `DEFINE` clause specifies conditions that rows have to fulfill in order to be classified to a\n-corresponding [pattern variable](#defining-a-pattern). If a condition is not defined for a pattern\n-variable, a default condition will be used which evaluates to `true` for every row.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a\u884c\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u624d\u80fd\u88ab\u5206\u7c7b\u5230\u76f8\u5e94\u7684[\u6a21\u5f0f\u53d8\u91cf](#defining-a-pattern)\u3002\u5982\u679c\u6ca1\u6709\u4e3a\u6a21\u5f0f\u53d8\u91cf\u5b9a\u4e49\u6761\u4ef6\uff0c\u5219\u5c06\u4f7f\u7528\u5bf9\u6bcf\u4e00\u884c\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a `true` \u7684\u9ed8\u8ba4\u6761\u4ef6\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 273}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY5ODUxMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9\u805a\u5408\u4f7f\u7528 `GROUP BY`\u3002\n          \n          \n            \n            \u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9 aggregation \u4f7f\u7528 `GROUP BY`\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453698513", "createdAt": "2020-07-13T14:39:22Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\n \n-This query produces a summary row for each period in which the price of a stock was continuously\n-decreasing.\n+\u6b64\u67e5\u8be2\u4e3a\u80a1\u7968\u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u7684\u6bcf\u4e2a\u671f\u95f4\u751f\u6210\u6458\u8981\u884c\u3002\n \n-The exact representation of the output rows is defined in the `MEASURES` part of the query. The\n-number of output rows is defined by the `ONE ROW PER MATCH` output mode.\n+\u5728\u67e5\u8be2\u7684 `MEASURES` \u5b50\u53e5\u90e8\u5206\u5b9a\u4e49\u786e\u5207\u7684\u8f93\u51fa\u884c\u4fe1\u606f\u3002\u8f93\u51fa\u884c\u6570\u7531 `ONE ROW PER MATCH` \u8f93\u51fa\u65b9\u5f0f\u5b9a\u4e49\u3002\n \n {% highlight text %}\n  symbol       start_tstamp       bottom_tstamp         end_tstamp\n =========  ==================  ==================  ==================\n ACME       01-APR-11 10:00:04  01-APR-11 10:00:07  01-APR-11 10:00:08\n {% endhighlight %}\n \n-The resulting row describes a period of falling prices that started at `01-APR-11 10:00:04` and\n-achieved the lowest price at `01-APR-11 10:00:07` that increased again at `01-APR-11 10:00:08`.\n+\u8be5\u884c\u7ed3\u679c\u63cf\u8ff0\u4e86\u4ece `01-APR-11 10:00:04` \u5f00\u59cb\u7684\u4ef7\u683c\u4e0b\u8dcc\u671f\uff0c\u5728 `01-APR-11 10:00:07` \u8fbe\u5230\u6700\u4f4e\u4ef7\u683c\uff0c\u5230 `01-APR-11 10:00:08` \u518d\u6b21\u4e0a\u6da8\u3002\n \n-Partitioning\n+<a name=\"partitioning\"></a>\n+\n+\u5206\u533a\n ------------\n \n-It is possible to look for patterns in partitioned data, e.g., trends for a single ticker or a\n-particular user. This can be expressed using the `PARTITION BY` clause. The clause is similar to\n-using `GROUP BY` for aggregations.\n+\u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9\u805a\u5408\u4f7f\u7528 `GROUP BY`\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 227}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY5OTgxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4e0b\u9762\u8fd9\u4e2a\u793a\u4f8b\u7684\u4efb\u52a1\u662f\u627e\u51fa\u80a1\u7968\u5e73\u5747\u4ef7\u683c\u6ca1\u6709\u4f4e\u4e8e\u67d0\u4e2a\u9608\u503c\u7684\u6700\u957f\u65f6\u95f4\u6bb5\u3002\u5b83\u5c55\u793a\u4e86 `MATCH_RECOGNIZE` \u5728\u805a\u5408\u4e2d\u7684\u53ef\u8868\u8fbe\u6027\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u67e5\u8be2\u6267\u884c\u6b64\u4efb\u52a1\uff1a\n          \n          \n            \n            \u4e0b\u9762\u8fd9\u4e2a\u793a\u4f8b\u7684\u4efb\u52a1\u662f\u627e\u51fa\u80a1\u7968\u5e73\u5747\u4ef7\u683c\u6ca1\u6709\u4f4e\u4e8e\u67d0\u4e2a\u9608\u503c\u7684\u6700\u957f\u65f6\u95f4\u6bb5\u3002\u5b83\u5c55\u793a\u4e86 `MATCH_RECOGNIZE` \u5728 aggregation \u4e2d\u7684\u53ef\u8868\u8fbe\u6027\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u67e5\u8be2\u6267\u884c\u6b64\u4efb\u52a1\uff1a", "url": "https://github.com/apache/flink/pull/12798#discussion_r453699810", "createdAt": "2020-07-13T14:41:03Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -180,99 +158,68 @@ FROM Ticker\n     ) MR;\n {% endhighlight %}\n \n-The query partitions the `Ticker` table by the `symbol` column and orders it by the `rowtime`\n-time attribute.\n+\u6b64\u67e5\u8be2\u5c06 `Ticker` \u8868\u6309\u7167 `symbol` \u5217\u8fdb\u884c\u5206\u533a\u5e76\u6309\u7167 `rowtime` \u5c5e\u6027\u8fdb\u884c\u6392\u5e8f\u3002\n \n-The `PATTERN` clause specifies that we are interested in a pattern with a starting event `START_ROW`\n-that is followed by one or more `PRICE_DOWN` events and concluded with a `PRICE_UP` event. If such\n-a pattern can be found, the next pattern match will be seeked at the last `PRICE_UP` event as\n-indicated by the `AFTER MATCH SKIP TO LAST` clause.\n+`PATTERN` \u5b50\u53e5\u6307\u5b9a\u6211\u4eec\u5bf9\u4ee5\u4e0b\u6a21\u5f0f\u611f\u5174\u8da3\uff1a\u8be5\u6a21\u5f0f\u5177\u6709\u5f00\u59cb\u4e8b\u4ef6 `START_ROW`\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u6216\u591a\u4e2a `PRICE_DOWN` \u4e8b\u4ef6\uff0c\u5e76\u4ee5 `PRICE_UP` \u4e8b\u4ef6\u7ed3\u675f\u3002\u5982\u679c\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u6a21\u5f0f\uff0c\u5982 `AFTER MATCH SKIP TO LAST` \u5b50\u53e5\u6240\u793a\uff0c\u5219\u4ece\u6700\u540e\u4e00\u4e2a `PRICE_UP` \u4e8b\u4ef6\u5f00\u59cb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u3002\n \n-The `DEFINE` clause specifies the conditions that need to be met for a `PRICE_DOWN` and `PRICE_UP`\n-event. Although the `START_ROW` pattern variable is not present it has an implicit condition that\n-is evaluated always as `TRUE`.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a `PRICE_DOWN` \u548c `PRICE_UP` \u4e8b\u4ef6\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u3002\u5c3d\u7ba1\u4e0d\u5b58\u5728 `START_ROW` \u6a21\u5f0f\u53d8\u91cf\uff0c\u4f46\u5b83\u5177\u6709\u4e00\u4e2a\u59cb\u7ec8\u88ab\u8bc4\u4f30\u4e3a `TRUE` \u9690\u5f0f\u6761\u4ef6\u3002\n \n-A pattern variable `PRICE_DOWN` is defined as a row with a price that is smaller than the price of\n-the last row that met the `PRICE_DOWN` condition. For the initial case or when there is no last row\n-that met the `PRICE_DOWN` condition, the price of the row should be smaller than the price of the\n-preceding row in the pattern (referenced by `START_ROW`).\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_DOWN` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5c0f\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\u5bf9\u4e8e\u521d\u59cb\u60c5\u51b5\u6216\u6ca1\u6709\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u65f6\uff0c\u8be5\u884c\u7684\u4ef7\u683c\u5e94\u5c0f\u4e8e\u8be5\u6a21\u5f0f\u4e2d\u524d\u4e00\u884c\uff08\u7531 `START_ROW` \u5f15\u7528\uff09\u7684\u4ef7\u683c\u3002\n \n-A pattern variable `PRICE_UP` is defined as a row with a price that is larger than the price of the\n-last row that met the `PRICE_DOWN` condition.\n+\u6a21\u5f0f\u53d8\u91cf `PRICE_UP` \u5b9a\u4e49\u4e3a\u4ef7\u683c\u5927\u4e8e\u6ee1\u8db3 `PRICE_DOWN` \u6761\u4ef6\u7684\u6700\u540e\u4e00\u884c\u3002\n \n-This query produces a summary row for each period in which the price of a stock was continuously\n-decreasing.\n+\u6b64\u67e5\u8be2\u4e3a\u80a1\u7968\u4ef7\u683c\u6301\u7eed\u4e0b\u8dcc\u7684\u6bcf\u4e2a\u671f\u95f4\u751f\u6210\u6458\u8981\u884c\u3002\n \n-The exact representation of the output rows is defined in the `MEASURES` part of the query. The\n-number of output rows is defined by the `ONE ROW PER MATCH` output mode.\n+\u5728\u67e5\u8be2\u7684 `MEASURES` \u5b50\u53e5\u90e8\u5206\u5b9a\u4e49\u786e\u5207\u7684\u8f93\u51fa\u884c\u4fe1\u606f\u3002\u8f93\u51fa\u884c\u6570\u7531 `ONE ROW PER MATCH` \u8f93\u51fa\u65b9\u5f0f\u5b9a\u4e49\u3002\n \n {% highlight text %}\n  symbol       start_tstamp       bottom_tstamp         end_tstamp\n =========  ==================  ==================  ==================\n ACME       01-APR-11 10:00:04  01-APR-11 10:00:07  01-APR-11 10:00:08\n {% endhighlight %}\n \n-The resulting row describes a period of falling prices that started at `01-APR-11 10:00:04` and\n-achieved the lowest price at `01-APR-11 10:00:07` that increased again at `01-APR-11 10:00:08`.\n+\u8be5\u884c\u7ed3\u679c\u63cf\u8ff0\u4e86\u4ece `01-APR-11 10:00:04` \u5f00\u59cb\u7684\u4ef7\u683c\u4e0b\u8dcc\u671f\uff0c\u5728 `01-APR-11 10:00:07` \u8fbe\u5230\u6700\u4f4e\u4ef7\u683c\uff0c\u5230 `01-APR-11 10:00:08` \u518d\u6b21\u4e0a\u6da8\u3002\n \n-Partitioning\n+<a name=\"partitioning\"></a>\n+\n+\u5206\u533a\n ------------\n \n-It is possible to look for patterns in partitioned data, e.g., trends for a single ticker or a\n-particular user. This can be expressed using the `PARTITION BY` clause. The clause is similar to\n-using `GROUP BY` for aggregations.\n+\u53ef\u4ee5\u5728\u5206\u533a\u6570\u636e\u4e2d\u5bfb\u627e\u6a21\u5f0f\uff0c\u4f8b\u5982\u5355\u4e2a\u80a1\u7968\u884c\u60c5\u6216\u7279\u5b9a\u7528\u6237\u7684\u8d8b\u52bf\u3002\u8fd9\u53ef\u4ee5\u7528 `PARTITION BY` \u5b50\u53e5\u6765\u8868\u793a\u3002\u8be5\u5b50\u53e5\u7c7b\u4f3c\u4e8e\u5bf9\u805a\u5408\u4f7f\u7528 `GROUP BY`\u3002\n+\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u5f3a\u70c8\u5efa\u8bae\u5bf9\u4f20\u5165\u7684\u6570\u636e\u8fdb\u884c\u5206\u533a\uff0c\u5426\u5219 `MATCH_RECOGNIZE` \u5b50\u53e5\u5c06\u88ab\u8f6c\u6362\u4e3a\u975e\u5e76\u884c\u7b97\u5b50\uff0c\u4ee5\u786e\u4fdd\u5168\u5c40\u6392\u5e8f\u3002\n \n-<span class=\"label label-danger\">Attention</span> It is highly advised to partition the incoming\n-data because otherwise the `MATCH_RECOGNIZE` clause will be translated into a non-parallel operator\n-to ensure global ordering.\n+<a name=\"order-of-events\"></a>\n \n-Order of Events\n+\u4e8b\u4ef6\u987a\u5e8f\n ---------------\n \n-Apache Flink allows for searching for patterns based on time; either\n-[processing time or event time](time_attributes.html).\n+Apache Flink \u53ef\u4ee5\u6839\u636e\u65f6\u95f4\uff08[\u5904\u7406\u65f6\u95f4\u6216\u8005\u4e8b\u4ef6\u65f6\u95f4]({% link dev/table/streaming/time_attributes.zh.md %})\uff09\u8fdb\u884c\u6a21\u5f0f\u641c\u7d22\u3002\n \n-In case of event time, the events are sorted before they are passed to the internal pattern state\n-machine. As a consequence, the produced output will be correct regardless of the order in which\n-rows are appended to the table. Instead, the pattern is evaluated in the order specified by the\n-time contained in each row.\n+\u5982\u679c\u662f\u4e8b\u4ef6\u65f6\u95f4\uff0c\u5219\u5728\u5c06\u4e8b\u4ef6\u4f20\u9012\u5230\u5185\u90e8\u6a21\u5f0f\u72b6\u6001\u673a\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u884c\u6dfb\u52a0\u5230\u8868\u7684\u987a\u5e8f\u5982\u4f55\uff0c\u751f\u6210\u7684\u8f93\u51fa\u90fd\u662f\u6b63\u786e\u7684\u3002\u76f8\u53cd\uff0c\u6a21\u5f0f\u662f\u6309\u7167\u6bcf\u884c\u4e2d\u5305\u542b\u7684\u65f6\u95f4\u6307\u5b9a\u7684\u987a\u5e8f\u8ba1\u7b97\u7684\u3002\n \n-The `MATCH_RECOGNIZE` clause assumes a [time attribute](time_attributes.html) with ascending\n-ordering as the first argument to `ORDER BY` clause.\n+`MATCH_RECOGNIZE` \u5b50\u53e5\u5047\u5b9a\u5347\u5e8f\u7684 [\u65f6\u95f4\u5c5e\u6027]({% link dev/table/streaming/time_attributes.zh.md %}) \u662f `ORDER BY` \u5b50\u53e5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\n \n-For the example `Ticker` table, a definition like `ORDER BY rowtime ASC, price DESC` is valid but\n-`ORDER BY price, rowtime` or `ORDER BY rowtime DESC, price ASC` is not.\n+\u5bf9\u4e8e\u793a\u4f8b `Ticker` \u8868\uff0c\u8bf8\u5982 `ORDER BY rowtime ASC, price DESC` \u7684\u5b9a\u4e49\u662f\u6709\u6548\u7684\uff0c\u4f46 `ORDER BY price, rowtime` \u6216\u8005 `ORDER BY rowtime DESC, price ASC` \u662f\u65e0\u6548\u7684\u3002\n \n Define & Measures\n -----------------\n \n-The `DEFINE` and `MEASURES` keywords have similar meanings to the `WHERE` and `SELECT` clauses in a\n-simple SQL query.\n+`DEFINE` \u548c `MEASURES` \u5173\u952e\u5b57\u4e0e\u7b80\u5355 SQL \u67e5\u8be2\u4e2d\u7684 `WHERE` \u548c `SELECT` \u5b50\u53e5\u5177\u6709\u76f8\u8fd1\u7684\u542b\u4e49\u3002\n \n-The `MEASURES` clause defines what will be included in the output of a matching pattern. It can\n-project columns and define expressions for evaluation. The number of produced rows depends on the\n-[output mode](#output-mode) setting.\n+`MEASURES` \u5b50\u53e5\u5b9a\u4e49\u5339\u914d\u6a21\u5f0f\u7684\u8f93\u51fa\u4e2d\u8981\u5305\u542b\u54ea\u4e9b\u5185\u5bb9\u3002\u5b83\u53ef\u4ee5\u6295\u5f71\u5217\u5e76\u5b9a\u4e49\u8868\u8fbe\u5f0f\u8fdb\u884c\u8ba1\u7b97\u3002\u4ea7\u751f\u7684\u884c\u6570\u53d6\u51b3\u4e8e[\u8f93\u51fa\u65b9\u5f0f](#output-mode)\u8bbe\u7f6e\u3002\n \n-The `DEFINE` clause specifies conditions that rows have to fulfill in order to be classified to a\n-corresponding [pattern variable](#defining-a-pattern). If a condition is not defined for a pattern\n-variable, a default condition will be used which evaluates to `true` for every row.\n+`DEFINE` \u5b50\u53e5\u6307\u5b9a\u884c\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\u624d\u80fd\u88ab\u5206\u7c7b\u5230\u76f8\u5e94\u7684[\u6a21\u5f0f\u53d8\u91cf](#defining-a-pattern)\u3002\u5982\u679c\u6ca1\u6709\u4e3a\u6a21\u5f0f\u53d8\u91cf\u5b9a\u4e49\u6761\u4ef6\uff0c\u5219\u5c06\u4f7f\u7528\u5bf9\u6bcf\u4e00\u884c\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a `true` \u7684\u9ed8\u8ba4\u6761\u4ef6\u3002\n \n-For a more detailed explanation about expressions that can be used in those clauses, please have a\n-look at the [event stream navigation](#pattern-navigation) section.\n+\u6709\u5173\u5728\u8fd9\u4e9b\u5b50\u53e5\u4e2d\u53ef\u4f7f\u7528\u7684\u8868\u8fbe\u5f0f\u7684\u66f4\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u8bf7\u67e5\u770b[\u4e8b\u4ef6\u6d41\u5bfc\u822a](#pattern-navigation)\u90e8\u5206\u3002\n \n ### Aggregations\n \n-Aggregations can be used in `DEFINE` and `MEASURES` clauses. Both\n-[built-in]({{ site.baseurl }}/dev/table/functions/systemFunctions.html) and custom\n-[user defined]({{ site.baseurl }}/dev/table/functions/udfs.html) functions are supported.\n+Aggregations \u53ef\u4ee5\u5728 `DEFINE` \u548c `MEASURES` \u5b50\u53e5\u4e2d\u4f7f\u7528\u3002\u652f\u6301[\u5185\u7f6e\u51fd\u6570]({% link dev/table/functions/systemFunctions.zh.md %})\u548c[\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570]({% link dev/table/functions/udfs.zh.md %})\u3002\n \n-Aggregate functions are applied to each subset of rows mapped to a match. In order to understand\n-how those subsets are evaluated have a look at the [event stream navigation](#pattern-navigation)\n-section.\n+\u5bf9\u76f8\u5e94\u5339\u914d\u9879\u7684\u884c\u5b50\u96c6\u53ef\u4ee5\u4f7f\u7528 Aggregate functions\u3002\u8bf7\u67e5\u770b[\u4e8b\u4ef6\u6d41\u5bfc\u822a](#pattern-navigation)\u90e8\u5206\u4ee5\u4e86\u89e3\u5982\u4f55\u8ba1\u7b97\u8fd9\u4e9b\u5b50\u96c6\u3002\n \n-The task of the following example is to find the longest period of time for which the average price\n-of a ticker did not go below certain threshold. It shows how expressible `MATCH_RECOGNIZE` can\n-become with aggregations. This task can be performed with the following query:\n+\u4e0b\u9762\u8fd9\u4e2a\u793a\u4f8b\u7684\u4efb\u52a1\u662f\u627e\u51fa\u80a1\u7968\u5e73\u5747\u4ef7\u683c\u6ca1\u6709\u4f4e\u4e8e\u67d0\u4e2a\u9608\u503c\u7684\u6700\u957f\u65f6\u95f4\u6bb5\u3002\u5b83\u5c55\u793a\u4e86 `MATCH_RECOGNIZE` \u5728\u805a\u5408\u4e2d\u7684\u53ef\u8868\u8fbe\u6027\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u67e5\u8be2\u6267\u884c\u6b64\u4efb\u52a1\uff1a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 294}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcwMDQxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <span class=\"label label-info\">\u6ce8\u610f</span> \u805a\u5408\u53ef\u4ee5\u5e94\u7528\u4e8e\u8868\u8fbe\u5f0f\uff0c\u4f46\u524d\u63d0\u662f\u5b83\u4eec\u5f15\u7528\u5355\u4e2a\u6a21\u5f0f\u53d8\u91cf\u3002\u56e0\u6b64\uff0c`SUM(A.price * A.tax)` \u662f\u6709\u6548\u7684\uff0c\u800c `AVG(A.price * B.tax)` \u5219\u662f\u65e0\u6548\u7684\u3002\n          \n          \n            \n            <span class=\"label label-info\">\u6ce8\u610f</span> Aggregation \u53ef\u4ee5\u5e94\u7528\u4e8e\u8868\u8fbe\u5f0f\uff0c\u4f46\u524d\u63d0\u662f\u5b83\u4eec\u5f15\u7528\u5355\u4e2a\u6a21\u5f0f\u53d8\u91cf\u3002\u56e0\u6b64\uff0c`SUM(A.price * A.tax)` \u662f\u6709\u6548\u7684\uff0c\u800c `AVG(A.price * B.tax)` \u5219\u662f\u65e0\u6548\u7684\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453700416", "createdAt": "2020-07-13T14:41:54Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -323,52 +268,47 @@ ACME       01-APR-11 10:00:00  01-APR-11 10:00:03     14.5\n ACME       01-APR-11 10:00:05  01-APR-11 10:00:10     13.5\n {% endhighlight %}\n \n-<span class=\"label label-info\">Note</span> Aggregations can be applied to expressions, but only if\n-they reference a single pattern variable. Thus `SUM(A.price * A.tax)` is a valid one, but\n-`AVG(A.price * B.tax)` is not.\n+<span class=\"label label-info\">\u6ce8\u610f</span> \u805a\u5408\u53ef\u4ee5\u5e94\u7528\u4e8e\u8868\u8fbe\u5f0f\uff0c\u4f46\u524d\u63d0\u662f\u5b83\u4eec\u5f15\u7528\u5355\u4e2a\u6a21\u5f0f\u53d8\u91cf\u3002\u56e0\u6b64\uff0c`SUM(A.price * A.tax)` \u662f\u6709\u6548\u7684\uff0c\u800c `AVG(A.price * B.tax)` \u5219\u662f\u65e0\u6548\u7684\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 327}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcwMDg1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <span class=\"label label-danger\">\u6ce8\u610f</span> \u4e0d\u652f\u6301 `DISTINCT` \u805a\u5408\u3002\n          \n          \n            \n            <span class=\"label label-danger\">\u6ce8\u610f</span> \u4e0d\u652f\u6301 `DISTINCT` aggregation\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453700850", "createdAt": "2020-07-13T14:42:31Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -323,52 +268,47 @@ ACME       01-APR-11 10:00:00  01-APR-11 10:00:03     14.5\n ACME       01-APR-11 10:00:05  01-APR-11 10:00:10     13.5\n {% endhighlight %}\n \n-<span class=\"label label-info\">Note</span> Aggregations can be applied to expressions, but only if\n-they reference a single pattern variable. Thus `SUM(A.price * A.tax)` is a valid one, but\n-`AVG(A.price * B.tax)` is not.\n+<span class=\"label label-info\">\u6ce8\u610f</span> \u805a\u5408\u53ef\u4ee5\u5e94\u7528\u4e8e\u8868\u8fbe\u5f0f\uff0c\u4f46\u524d\u63d0\u662f\u5b83\u4eec\u5f15\u7528\u5355\u4e2a\u6a21\u5f0f\u53d8\u91cf\u3002\u56e0\u6b64\uff0c`SUM(A.price * A.tax)` \u662f\u6709\u6548\u7684\uff0c\u800c `AVG(A.price * B.tax)` \u5219\u662f\u65e0\u6548\u7684\u3002\n \n-<span class=\"label label-danger\">Attention</span> `DISTINCT` aggregations are not supported.\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u4e0d\u652f\u6301 `DISTINCT` \u805a\u5408\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 330}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcxNDkxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5c06\u9ed8\u8ba4\u6a21\u5f0f\u53d8\u91cf\u4e0e\u903b\u8f91\u504f\u79fb\u91cf\u4e00\u8d77\u4f7f\u7528\u4e5f\u53ef\u80fd\u5f88\u6709\u610f\u4e49\u3002\n          \n          \n            \n            \u5c06\u9ed8\u8ba4\u6a21\u5f0f\u53d8\u91cf\u4e0e logical offsets \u4e00\u8d77\u4f7f\u7528\u4e5f\u53ef\u80fd\u5f88\u6709\u610f\u4e49\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453714917", "createdAt": "2020-07-13T15:01:31Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -805,14 +716,14 @@ The table consists of the following columns:\n       <td></td>\n       <td>31</td>\n       <td>20</td>\n-      <td>Not mapped because <code>35 &lt; 2 * 20</code>.</td>\n+      <td>\u56e0\u4e3a <code>35 &lt; 2 * 20</code> \u6ca1\u6709\u6620\u5c04\u3002</td>\n     </tr>\n   </tbody>\n </table>\n \n-It might also make sense to use the default pattern variable with logical offsets.\n+\u5c06\u9ed8\u8ba4\u6a21\u5f0f\u53d8\u91cf\u4e0e\u903b\u8f91\u504f\u79fb\u91cf\u4e00\u8d77\u4f7f\u7528\u4e5f\u53ef\u80fd\u5f88\u6709\u610f\u4e49\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 740}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcxNTEzNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u504f\u79fb\u91cf\u4f1a\u5305\u542b\u5230\u76ee\u524d\u4e3a\u6b62\u6620\u5c04\u7684\u6240\u6709\u884c\uff1a\n          \n          \n            \n            \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0coffset \u4f1a\u5305\u542b\u5230\u76ee\u524d\u4e3a\u6b62\u6620\u5c04\u7684\u6240\u6709\u884c\uff1a", "url": "https://github.com/apache/flink/pull/12798#discussion_r453715137", "createdAt": "2020-07-13T15:01:49Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -805,14 +716,14 @@ The table consists of the following columns:\n       <td></td>\n       <td>31</td>\n       <td>20</td>\n-      <td>Not mapped because <code>35 &lt; 2 * 20</code>.</td>\n+      <td>\u56e0\u4e3a <code>35 &lt; 2 * 20</code> \u6ca1\u6709\u6620\u5c04\u3002</td>\n     </tr>\n   </tbody>\n </table>\n \n-It might also make sense to use the default pattern variable with logical offsets.\n+\u5c06\u9ed8\u8ba4\u6a21\u5f0f\u53d8\u91cf\u4e0e\u903b\u8f91\u504f\u79fb\u91cf\u4e00\u8d77\u4f7f\u7528\u4e5f\u53ef\u80fd\u5f88\u6709\u610f\u4e49\u3002\n \n-In this case, an offset considers all the rows mapped so far:\n+\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u504f\u79fb\u91cf\u4f1a\u5305\u542b\u5230\u76ee\u524d\u4e3a\u6b62\u6620\u5c04\u7684\u6240\u6709\u884c\uff1a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 743}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcxODEwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <span class=\"label label-danger\">\u6ce8\u610f</span> \u8bf7\u6ce8\u610f\uff0c`MATCH_RECOGNIZE` \u5b50\u53e5\u672a\u4f7f\u7528\u914d\u7f6e\u7684 [state retention time]({% link dev/table/streaming/query_configuration.zh.md %}#idle-state-retention-time)\u3002\u4e3a\u6b64\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528 `WITHIN` [clause](#known-limitations)\u3002\n          \n          \n            \n            <span class=\"label label-danger\">\u6ce8\u610f</span> \u8bf7\u6ce8\u610f\uff0c`MATCH_RECOGNIZE` \u5b50\u53e5\u672a\u4f7f\u7528\u914d\u7f6e\u7684 [state retention time]({% link dev/table/streaming/query_configuration.zh.md %}#idle-state-retention-time)\u3002\u4e3a\u6b64\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528 `WITHIN` [\u5b50\u53e5](#time-constraint)\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453718100", "createdAt": "2020-07-13T15:05:56Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -1091,42 +983,31 @@ DEFINE\n   C as C.price > 20\n {% endhighlight %}\n \n-<span class=\"label label-danger\">Attention</span> Please note that the `MATCH_RECOGNIZE` clause\n-does not use a configured [state retention time](query_configuration.html#idle-state-retention-time).\n-One may want to use the `WITHIN` [clause](#time-constraint) for this purpose.\n+<span class=\"label label-danger\">\u6ce8\u610f</span> \u8bf7\u6ce8\u610f\uff0c`MATCH_RECOGNIZE` \u5b50\u53e5\u672a\u4f7f\u7528\u914d\u7f6e\u7684 [state retention time]({% link dev/table/streaming/query_configuration.zh.md %}#idle-state-retention-time)\u3002\u4e3a\u6b64\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528 `WITHIN` [clause](#known-limitations)\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5916531853d7d30a755a85ce8da4d38731e7d765"}, "originalPosition": 996}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MzU0Mjk3", "url": "https://github.com/apache/flink/pull/12798#pullrequestreview-447354297", "createdAt": "2020-07-13T15:22:57Z", "commit": {"oid": "9e678a04b138c92d642ee96f4a6f05506644c5ac"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNToyMjo1N1rOGwtg4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNToyNTowMFrOGwtmfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzczMDUyOA==", "bodyText": "Suggested change", "url": "https://github.com/apache/flink/pull/12798#discussion_r453730528", "createdAt": "2020-07-13T15:22:57Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -558,43 +482,42 @@ For the following input rows:\n  XYZ      2     11       2018-09-17 10:00:05\n {% endhighlight %}\n \n-The query will produce the following output:\n+\u8be5\u67e5\u8be2\u5c06\u751f\u6210\u4ee5\u4e0b\u8f93\u51fa\uff1a\n \n {% highlight text %}\n  symbol   startPrice   topPrice   lastPrice\n ======== ============ ========== ===========\n  XYZ      10           13         11\n {% endhighlight %}\n \n-The pattern recognition is partitioned by the `symbol` column. Even though not explicitly mentioned\n-in the `MEASURES` clause, the partitioned column is added at the beginning of the result.\n+\u8be5\u6a21\u5f0f\u8bc6\u522b\u7531 `symbol` \u5217\u5206\u533a\u3002\u5373\u4f7f\u5728 `MEASURES` \u5b50\u53e5\u4e2d\u672a\u660e\u786e\u63d0\u53ca\uff0c\u5206\u533a\u5217\u4ecd\u4f1a\u6dfb\u52a0\u5230\u7ed3\u679c\u7684\u5f00\u5934\u3002\n \n-Pattern Navigation\n+<a name=\"pattern-navigation\"></a>\n+\n+\u6a21\u5f0f\u5bfc\u822a\n ------------------\n \n-The `DEFINE` and `MEASURES` clauses allow for navigating within the list of rows that (potentially)\n-match a pattern.\n+`DEFINE` \u548c `MEASURES` \u5b50\u53e5\u5141\u8bb8\u5728\uff08\u53ef\u80fd\uff09\u5339\u914d\u6a21\u5f0f\u7684\u884c\u5217\u8868\u4e2d\u8fdb\u884c\u5bfc\u822a\u3002\n+\n+\u672c\u8282\u8ba8\u8bba\u7528\u4e8e\u58f0\u660e\u6761\u4ef6\u6216\u4ea7\u751f\u8f93\u51fa\u7ed3\u679c\u7684\u5bfc\u822a\u3002\n+\n+<a name=\"pattern-variable-referencing\"></a>\n+\n+### \u5f15\u7528\u6a21\u5f0f\u53d8\u91cf\n \n-This section discusses this navigation for declaring conditions or producing output results.\n+_\u5f15\u7528\u6a21\u5f0f\u53d8\u91cf_ \u5141\u8bb8\u5f15\u7528\u4e00\u7ec4\u6620\u5c04\u5230 `DEFINE` \u6216 `MEASURES` \u5b50\u53e5\u4e2d\u7279\u5b9a\u6a21\u5f0f\u53d8\u91cf\u7684\u884c\u3002\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e678a04b138c92d642ee96f4a6f05506644c5ac"}, "originalPosition": 587}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzczMDkwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5982\u679c `DEFINE`/`MEASURES` \u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u4e00\u884c\uff08\u4f8b\u5982 `a.price` \u6216 `a.price > 10`\uff09\uff0c\u5b83\u5c06\u9009\u62e9\u5c5e\u4e8e\u76f8\u5e94\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453730905", "createdAt": "2020-07-13T15:23:27Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -558,43 +482,42 @@ For the following input rows:\n  XYZ      2     11       2018-09-17 10:00:05\n {% endhighlight %}\n \n-The query will produce the following output:\n+\u8be5\u67e5\u8be2\u5c06\u751f\u6210\u4ee5\u4e0b\u8f93\u51fa\uff1a\n \n {% highlight text %}\n  symbol   startPrice   topPrice   lastPrice\n ======== ============ ========== ===========\n  XYZ      10           13         11\n {% endhighlight %}\n \n-The pattern recognition is partitioned by the `symbol` column. Even though not explicitly mentioned\n-in the `MEASURES` clause, the partitioned column is added at the beginning of the result.\n+\u8be5\u6a21\u5f0f\u8bc6\u522b\u7531 `symbol` \u5217\u5206\u533a\u3002\u5373\u4f7f\u5728 `MEASURES` \u5b50\u53e5\u4e2d\u672a\u660e\u786e\u63d0\u53ca\uff0c\u5206\u533a\u5217\u4ecd\u4f1a\u6dfb\u52a0\u5230\u7ed3\u679c\u7684\u5f00\u5934\u3002\n \n-Pattern Navigation\n+<a name=\"pattern-navigation\"></a>\n+\n+\u6a21\u5f0f\u5bfc\u822a\n ------------------\n \n-The `DEFINE` and `MEASURES` clauses allow for navigating within the list of rows that (potentially)\n-match a pattern.\n+`DEFINE` \u548c `MEASURES` \u5b50\u53e5\u5141\u8bb8\u5728\uff08\u53ef\u80fd\uff09\u5339\u914d\u6a21\u5f0f\u7684\u884c\u5217\u8868\u4e2d\u8fdb\u884c\u5bfc\u822a\u3002\n+\n+\u672c\u8282\u8ba8\u8bba\u7528\u4e8e\u58f0\u660e\u6761\u4ef6\u6216\u4ea7\u751f\u8f93\u51fa\u7ed3\u679c\u7684\u5bfc\u822a\u3002\n+\n+<a name=\"pattern-variable-referencing\"></a>\n+\n+### \u5f15\u7528\u6a21\u5f0f\u53d8\u91cf\n \n-This section discusses this navigation for declaring conditions or producing output results.\n+_\u5f15\u7528\u6a21\u5f0f\u53d8\u91cf_ \u5141\u8bb8\u5f15\u7528\u4e00\u7ec4\u6620\u5c04\u5230 `DEFINE` \u6216 `MEASURES` \u5b50\u53e5\u4e2d\u7279\u5b9a\u6a21\u5f0f\u53d8\u91cf\u7684\u884c\u3002\n \n-### Pattern Variable Referencing\n+\u5982\u679c `DEFINE`/`MEASURES` \u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u4e00\u884c\uff08\u4f8b\u5982 `a.price` \u6216 `a.price > 10`\uff09\uff0c\u5b83\u5c06\u9009\u62e9\u5c5e\u4e8e\u76f8\u5e94\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e678a04b138c92d642ee96f4a6f05506644c5ac"}, "originalPosition": 589}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzczMTk2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u5c06\u5f53\u524d\u884c\u4e0e `A` \u8fdb\u884c\u5339\u914d\uff0c\u5219\u4f1a\u63cf\u8ff0\u5f53\u524d\u884c\uff0c\u8868\u8fbe\u5f0f `A.price` \u63cf\u8ff0\u4e86\u76ee\u524d\u4e3a\u6b62\u5df2\u6620\u5c04\u5230 `A` \u7684\u4e00\u7ec4\u884c\u3002\u5982\u679c `DEFINE`/`MEASURES` \u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u5355\u884c\uff08\u4f8b\u5982 `A.price` \u6216\u8005 `A.price > 10`\uff09\uff0c\u5b83\u5c06\u9009\u62e9\u5c5e\u4e8e\u76f8\u5e94\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002\n          \n          \n            \n            \u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u5c06\u5f53\u524d\u884c\u4e0e `A` \u8fdb\u884c\u5339\u914d\uff0c\u5219\u8868\u8fbe\u5f0f `A.price` \u63cf\u8ff0\u4e86\u76ee\u524d\u4e3a\u6b62\u5df2\u6620\u5c04\u5230 `A` \u7684\u4e00\u7ec4\u884c\u52a0\u4e0a\u5f53\u524d\u884c\u3002\u5982\u679c `DEFINE`/`MEASURES` \u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u4e00\u884c\uff08\u4f8b\u5982 `a.price` \u6216 `a.price > 10`\uff09\uff0c\u5b83\u5c06\u9009\u62e9\u5c5e\u4e8e\u76f8\u5e94\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002", "url": "https://github.com/apache/flink/pull/12798#discussion_r453731964", "createdAt": "2020-07-13T15:25:00Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/table/streaming/match_recognize.zh.md", "diffHunk": "@@ -558,43 +482,42 @@ For the following input rows:\n  XYZ      2     11       2018-09-17 10:00:05\n {% endhighlight %}\n \n-The query will produce the following output:\n+\u8be5\u67e5\u8be2\u5c06\u751f\u6210\u4ee5\u4e0b\u8f93\u51fa\uff1a\n \n {% highlight text %}\n  symbol   startPrice   topPrice   lastPrice\n ======== ============ ========== ===========\n  XYZ      10           13         11\n {% endhighlight %}\n \n-The pattern recognition is partitioned by the `symbol` column. Even though not explicitly mentioned\n-in the `MEASURES` clause, the partitioned column is added at the beginning of the result.\n+\u8be5\u6a21\u5f0f\u8bc6\u522b\u7531 `symbol` \u5217\u5206\u533a\u3002\u5373\u4f7f\u5728 `MEASURES` \u5b50\u53e5\u4e2d\u672a\u660e\u786e\u63d0\u53ca\uff0c\u5206\u533a\u5217\u4ecd\u4f1a\u6dfb\u52a0\u5230\u7ed3\u679c\u7684\u5f00\u5934\u3002\n \n-Pattern Navigation\n+<a name=\"pattern-navigation\"></a>\n+\n+\u6a21\u5f0f\u5bfc\u822a\n ------------------\n \n-The `DEFINE` and `MEASURES` clauses allow for navigating within the list of rows that (potentially)\n-match a pattern.\n+`DEFINE` \u548c `MEASURES` \u5b50\u53e5\u5141\u8bb8\u5728\uff08\u53ef\u80fd\uff09\u5339\u914d\u6a21\u5f0f\u7684\u884c\u5217\u8868\u4e2d\u8fdb\u884c\u5bfc\u822a\u3002\n+\n+\u672c\u8282\u8ba8\u8bba\u7528\u4e8e\u58f0\u660e\u6761\u4ef6\u6216\u4ea7\u751f\u8f93\u51fa\u7ed3\u679c\u7684\u5bfc\u822a\u3002\n+\n+<a name=\"pattern-variable-referencing\"></a>\n+\n+### \u5f15\u7528\u6a21\u5f0f\u53d8\u91cf\n \n-This section discusses this navigation for declaring conditions or producing output results.\n+_\u5f15\u7528\u6a21\u5f0f\u53d8\u91cf_ \u5141\u8bb8\u5f15\u7528\u4e00\u7ec4\u6620\u5c04\u5230 `DEFINE` \u6216 `MEASURES` \u5b50\u53e5\u4e2d\u7279\u5b9a\u6a21\u5f0f\u53d8\u91cf\u7684\u884c\u3002\n \n-### Pattern Variable Referencing\n+\u5982\u679c `DEFINE`/`MEASURES` \u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u4e00\u884c\uff08\u4f8b\u5982 `a.price` \u6216 `a.price > 10`\uff09\uff0c\u5b83\u5c06\u9009\u62e9\u5c5e\u4e8e\u76f8\u5e94\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002\n \n-A _pattern variable reference_ allows a set of rows mapped to a particular pattern variable in the\n-`DEFINE` or `MEASURES` clauses to be referenced.\n+\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u5c06\u5f53\u524d\u884c\u4e0e `A` \u8fdb\u884c\u5339\u914d\uff0c\u5219\u4f1a\u63cf\u8ff0\u5f53\u524d\u884c\uff0c\u8868\u8fbe\u5f0f `A.price` \u63cf\u8ff0\u4e86\u76ee\u524d\u4e3a\u6b62\u5df2\u6620\u5c04\u5230 `A` \u7684\u4e00\u7ec4\u884c\u3002\u5982\u679c `DEFINE`/`MEASURES` \u5b50\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u9700\u8981\u5355\u884c\uff08\u4f8b\u5982 `A.price` \u6216\u8005 `A.price > 10`\uff09\uff0c\u5b83\u5c06\u9009\u62e9\u5c5e\u4e8e\u76f8\u5e94\u96c6\u5408\u7684\u6700\u540e\u4e00\u4e2a\u503c\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e678a04b138c92d642ee96f4a6f05506644c5ac"}, "originalPosition": 593}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7318a3d3466199110c96add27530db962bd8431", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/f7318a3d3466199110c96add27530db962bd8431", "committedDate": "2020-07-14T02:07:32Z", "message": "Resolve conflicts in docs/dev/table/streaming/match_recognize.zh.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb33876d0d4f279e7f77fc97ab8b72b9c3cb21c4", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/eb33876d0d4f279e7f77fc97ab8b72b9c3cb21c4", "committedDate": "2020-07-14T02:07:37Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Xavier Bai <54210725+XBaith@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7808173bece58f746cedce3558c808a167935576", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/7808173bece58f746cedce3558c808a167935576", "committedDate": "2020-07-14T02:07:37Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Xavier Bai <54210725+XBaith@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "844d1d2e4e7c528f9d1b047d52690197da7ec318", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/844d1d2e4e7c528f9d1b047d52690197da7ec318", "committedDate": "2020-07-14T02:07:37Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Xavier Bai <54210725+XBaith@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "136c46468f33539ed4f490724161936d9a0cf3b3", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/136c46468f33539ed4f490724161936d9a0cf3b3", "committedDate": "2020-07-14T02:07:37Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Xavier Bai <54210725+XBaith@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4f08c44100da910281325de4f0de73d34a906fe", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/d4f08c44100da910281325de4f0de73d34a906fe", "committedDate": "2020-07-14T02:08:48Z", "message": "Resolve conflicts in docs/dev/table/streaming/match_recognize.zh.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fb02ad85f2eb9ccb863a7ca83b5500d85c96958", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/2fb02ad85f2eb9ccb863a7ca83b5500d85c96958", "committedDate": "2020-07-14T02:08:52Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02306d06d4937df1c30aae81892d934e22e92cda", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/02306d06d4937df1c30aae81892d934e22e92cda", "committedDate": "2020-07-14T02:08:53Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e27db118ca66b5ae542da389d54ad93d23dedc6b", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/e27db118ca66b5ae542da389d54ad93d23dedc6b", "committedDate": "2020-07-14T02:08:53Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bfbbb22ee8cc38a1b8ff0ac980ca00bdcddcd43", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/6bfbbb22ee8cc38a1b8ff0ac980ca00bdcddcd43", "committedDate": "2020-07-14T02:08:53Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b7d285d054e160e288b8f960d8fecbec044cc70", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/7b7d285d054e160e288b8f960d8fecbec044cc70", "committedDate": "2020-07-14T02:08:53Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c30ab4de22431c9234bb012c280db20261b1f675", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/c30ab4de22431c9234bb012c280db20261b1f675", "committedDate": "2020-07-14T02:08:53Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71157e96961921d37b451f436dfea1921524cb9d", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/71157e96961921d37b451f436dfea1921524cb9d", "committedDate": "2020-07-14T02:08:53Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db56626d36734c398a42f03e6d3f361d396b6010", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/db56626d36734c398a42f03e6d3f361d396b6010", "committedDate": "2020-07-14T02:08:53Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md and check the invalid links ."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "577fee08c867324003efe11035bbad748bf94f4f", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/577fee08c867324003efe11035bbad748bf94f4f", "committedDate": "2020-07-14T02:08:53Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f2157cf31a12aa5c6207c6edb469a12554560bb", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/7f2157cf31a12aa5c6207c6edb469a12554560bb", "committedDate": "2020-07-14T02:08:53Z", "message": "Update links in docs/dev/table/streaming/match_recognize.md according to  FLINK-18193 ."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e793f2a891c2207f118280fe8922339c8db8dfae", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/e793f2a891c2207f118280fe8922339c8db8dfae", "committedDate": "2020-07-14T02:08:53Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70ac881ab220881caa86a716992005eca2d3fb3e", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/70ac881ab220881caa86a716992005eca2d3fb3e", "committedDate": "2020-07-14T02:08:53Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e851f33e6d9f1840c14d767c213ed514afe5604c", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/e851f33e6d9f1840c14d767c213ed514afe5604c", "committedDate": "2020-07-14T02:08:53Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b21be446f1e96041bc23f3e6e2f74ae6e8c45b63", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/b21be446f1e96041bc23f3e6e2f74ae6e8c45b63", "committedDate": "2020-07-14T02:08:53Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f45e837046fdc2e07e024b9ab889102d6d9a68b", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/8f45e837046fdc2e07e024b9ab889102d6d9a68b", "committedDate": "2020-07-14T02:08:53Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edbf46e30d227d0b5839bf80940b228248bec11a", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/edbf46e30d227d0b5839bf80940b228248bec11a", "committedDate": "2020-07-14T02:08:54Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a6c86c25a5bfbc667a820461edfab4ee78670da", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/9a6c86c25a5bfbc667a820461edfab4ee78670da", "committedDate": "2020-07-14T02:08:54Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1695e5492976cc0fa447ba2f84725f0422fcfff", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/d1695e5492976cc0fa447ba2f84725f0422fcfff", "committedDate": "2020-07-14T02:08:54Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af84eb988a8fd5357413e5aafd3faea974017fc2", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/af84eb988a8fd5357413e5aafd3faea974017fc2", "committedDate": "2020-07-14T02:08:54Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a14e9fad16b1b9535165702b362ee6f00f1bee3c", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/a14e9fad16b1b9535165702b362ee6f00f1bee3c", "committedDate": "2020-07-14T02:08:54Z", "message": "Update dev/table/streaming/match_recognize.zh.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91b18e8dc10c73e9d6e3a42db7a3b0758c504358", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/91b18e8dc10c73e9d6e3a42db7a3b0758c504358", "committedDate": "2020-07-14T02:08:54Z", "message": "Undo changes in dev/table/streaming/dynamic_tables.zh.md, match_recognize.md, time_attributes.zh.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35f7e1e5b46111802eca0b9e1f1c30242a2956e7", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/35f7e1e5b46111802eca0b9e1f1c30242a2956e7", "committedDate": "2020-07-14T02:08:54Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md based on klion26's suggestions."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc53293f3597b6f21ff323e323b08a2babcfab2d", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/bc53293f3597b6f21ff323e323b08a2babcfab2d", "committedDate": "2020-07-14T02:08:54Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bcec0ab4fc5a609e064447cb7de87f758bb0d65", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/9bcec0ab4fc5a609e064447cb7de87f758bb0d65", "committedDate": "2020-07-14T02:08:54Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d98a43ce298e003d9b05eb0ae5f6743b26ac2102", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/d98a43ce298e003d9b05eb0ae5f6743b26ac2102", "committedDate": "2020-07-14T02:08:54Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af56481e249c4c3f5a89395efd8812ae87c59f8e", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/af56481e249c4c3f5a89395efd8812ae87c59f8e", "committedDate": "2020-07-14T02:08:54Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md\n\nCo-authored-by: Congxian Qiu <qcx978132955@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1df6331fa55def202a3120fcfb8d4975ba09c778", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/1df6331fa55def202a3120fcfb8d4975ba09c778", "committedDate": "2020-07-14T02:08:54Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d166f0f998455a5dad68a8bf178642aff0082ef6", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/d166f0f998455a5dad68a8bf178642aff0082ef6", "committedDate": "2020-07-14T02:08:54Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ad0e0961618dfb39232efb01075e0d0005a29c4", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/0ad0e0961618dfb39232efb01075e0d0005a29c4", "committedDate": "2020-07-14T02:08:55Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ea0506f8720764b0fc3274a3b495e0776b7e9e8", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/9ea0506f8720764b0fc3274a3b495e0776b7e9e8", "committedDate": "2020-07-14T02:08:55Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98dcc88fa488050b6566f181b821ef9e86f2b8d6", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/98dcc88fa488050b6566f181b821ef9e86f2b8d6", "committedDate": "2020-07-14T02:08:55Z", "message": "Apply suggestions from code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b434eaab7904576207148894fa75f8f53ed29c41", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/b434eaab7904576207148894fa75f8f53ed29c41", "committedDate": "2020-07-14T03:55:17Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md"}, "afterCommit": {"oid": "98dcc88fa488050b6566f181b821ef9e86f2b8d6", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/98dcc88fa488050b6566f181b821ef9e86f2b8d6", "committedDate": "2020-07-14T02:08:55Z", "message": "Apply suggestions from code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d5eb5381c60a85925ad4269ada844fc49709b95", "author": {"user": {"login": "RocMarshal", "name": "Yuepeng Pan"}}, "url": "https://github.com/apache/flink/commit/0d5eb5381c60a85925ad4269ada844fc49709b95", "committedDate": "2020-07-14T05:17:02Z", "message": "Update docs/dev/table/streaming/match_recognize.zh.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NjI0NzM0", "url": "https://github.com/apache/flink/pull/12798#pullrequestreview-448624734", "createdAt": "2020-07-15T04:44:02Z", "commit": {"oid": "0d5eb5381c60a85925ad4269ada844fc49709b95"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMzU3MzU1", "url": "https://github.com/apache/flink/pull/12798#pullrequestreview-450357355", "createdAt": "2020-07-17T03:58:38Z", "commit": {"oid": "0d5eb5381c60a85925ad4269ada844fc49709b95"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3346, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}