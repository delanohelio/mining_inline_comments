{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NDkzODY3", "number": 12656, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjoyMDoxNlrOEFgzbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjoyMTo0NFrOEFg1SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjE1Nzg4OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjoyMDoxNlrOGjvvQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjoyMDoxNlrOGjvvQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEzNTQ4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\thiveShell.execute(\"create table src (x int,y string)\");\n          \n          \n            \n            \t\thiveShell.insertInto(\"default\", \"src\").addRow(1, \"a\").commit();\n          \n          \n            \n            \t\thiveShell.execute(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n          \n          \n            \n            \t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n          \n          \n            \n            \t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n          \n          \n            \n            \t\ttableEnv.executeSql(\"create table src (x int,y string)\");\n          \n          \n            \n            \t\tHiveTestUtils.createTextTableInserter(hiveShell, \"default\", \"src\").addRow(new Object[]{1, \"a\"}).commit();\n          \n          \n            \n            \t\ttableEnv.executeSql(\"create table dest (x int) partitioned by (p1 int,p2 string)\");", "url": "https://github.com/apache/flink/pull/12656#discussion_r440135489", "createdAt": "2020-06-15T12:20:16Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java", "diffHunk": "@@ -669,6 +669,18 @@ public void testNonExistingPartitionFolder() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testInsertPartitionWithStarSource() throws Exception {\n+\t\thiveShell.execute(\"create table src (x int,y string)\");\n+\t\thiveShell.insertInto(\"default\", \"src\").addRow(1, \"a\").commit();\n+\t\thiveShell.execute(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n+\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e35de4a21f5cf007341a71a1461b796b286c9948"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjE2MjY1OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjoyMTo0NFrOGjvySg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjoyMTo0NFrOGjvySg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDEzNjI2Ng==", "bodyText": "Need to drop table src and dest after the test, because the catalog is reused across all test cases. And you can just use tableEnv to execute DDLs -- it's using the hive dialect", "url": "https://github.com/apache/flink/pull/12656#discussion_r440136266", "createdAt": "2020-06-15T12:21:44Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java", "diffHunk": "@@ -669,6 +669,18 @@ public void testNonExistingPartitionFolder() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testInsertPartitionWithStarSource() throws Exception {\n+\t\thiveShell.execute(\"create table src (x int,y string)\");\n+\t\thiveShell.insertInto(\"default\", \"src\").addRow(1, \"a\").commit();\n+\t\thiveShell.execute(\"create table dest (x int) partitioned by (p1 int,p2 string)\");\n+\t\tTableEnvironment tableEnv = getTableEnvWithHiveCatalog();\n+\t\tTableEnvUtil.execInsertSqlAndWaitResult(tableEnv,\n+\t\t\t\t\"insert into dest partition (p1=1) select * from src\");\n+\t\tList<Row> results = Lists.newArrayList(tableEnv.sqlQuery(\"select * from dest\").execute().collect());\n+\t\tassertEquals(\"[1,1,a]\", results.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e35de4a21f5cf007341a71a1461b796b286c9948"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4281, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}