{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MTU4OTU5", "number": 12036, "title": "[FLINK-17537][connectors / jdbc] Refactor flink-jdbc connector structure", "bodyText": "What is the purpose of the change\n\nThis pull request refactor flink-jdbc connector structure and make it align with others in connector family. I split the PR to two commits to keep them clear enough.\n\nBrief change log\ncommit: 6aff2b5\n(1) Use Jdbc instead of JDBC;\n(2) Move interfaces and classes to org.apache.flink.connector.jdbc;\n(3) Keep ancient JDBCOutputFormat, JDBCInputFormat and ParameterValuesProvider in old package;\n(4) Add tests/ITCase for ancient Classes and new classes.\n\ncommit: 173ded8\n(1) Rename flink-jdbc module to flink-connector-jdbc;\n(2) Update docs.\n\nVerifying this change\n\nAdd tests for reserved class in old package\nUpdate tests for new package\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): ( no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-05-08T10:12:51Z", "url": "https://github.com/apache/flink/pull/12036", "merged": true, "mergeCommit": {"oid": "6a6a439517b99d939758ef9275d40f88f5700c4a"}, "closed": true, "closedAt": "2020-05-13T12:55:49Z", "author": {"login": "leonardBang"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfROM9AFqTQwODE3NDAyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgwerwgBqjMzMzAxNzUyNzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MTc0MDI1", "url": "https://github.com/apache/flink/pull/12036#pullrequestreview-408174025", "createdAt": "2020-05-08T11:27:28Z", "commit": {"oid": "173ded87a6bbdc639582e62245de653ce562e0ef"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMToyNzoyOFrOGSiY1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjowNDozMVrOGSjQcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA5MDk2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class GenericParameterValuesProvider extends JdbcGenericParameterValuesProvider implements ParameterValuesProvider{\n          \n          \n            \n            public class GenericParameterValuesProvider extends JdbcGenericParameterValuesProvider implements ParameterValuesProvider {", "url": "https://github.com/apache/flink/pull/12036#discussion_r422090964", "createdAt": "2020-05-08T11:27:28Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/api/java/io/jdbc/split/GenericParameterValuesProvider.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.api.java.io.jdbc.split;\n+\n+import org.apache.flink.api.java.io.jdbc.JDBCInputFormat;\n+import org.apache.flink.connector.jdbc.split.JdbcGenericParameterValuesProvider;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * This splits generator actually does nothing but wrapping the query parameters\n+ * computed by the user before creating the {@link JDBCInputFormat} instance.\n+ *\n+ * @deprecated Please use {@link JdbcGenericParameterValuesProvider}.\n+ */\n+@Deprecated\n+public class GenericParameterValuesProvider extends JdbcGenericParameterValuesProvider implements ParameterValuesProvider{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173ded87a6bbdc639582e62245de653ce562e0ef"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA5MTQwMA==", "bodyText": "remove this line.", "url": "https://github.com/apache/flink/pull/12036#discussion_r422091400", "createdAt": "2020-05-08T11:28:42Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/api/java/io/jdbc/split/ParameterValuesProvider.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.api.java.io.jdbc.split;\n+\n+import org.apache.flink.api.java.io.jdbc.JDBCInputFormat;\n+import org.apache.flink.connector.jdbc.split.JdbcParameterValuesProvider;\n+\n+/**\n+ * This interface is used by the {@link JDBCInputFormat} to compute the list of parallel query to run (i.e. splits).\n+ * Each query will be parameterized using a row of the matrix provided by each {@link ParameterValuesProvider}\n+ * implementation.\n+ *\n+ * @deprecated Please use {@link JdbcParameterValuesProvider}.\n+ * Flink proposes class name start with \"Jdbc\" rather than \"JDBC\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173ded87a6bbdc639582e62245de653ce562e0ef"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA5MTgyNQ==", "bodyText": "You can keep the original class Javadoc here.", "url": "https://github.com/apache/flink/pull/12036#discussion_r422091825", "createdAt": "2020-05-08T11:29:47Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/api/java/io/jdbc/JDBCInputFormat.java", "diffHunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.api.java.io.jdbc;\n+\n+import org.apache.flink.annotation.VisibleForTesting;\n+import org.apache.flink.api.java.typeutils.RowTypeInfo;\n+import org.apache.flink.connector.jdbc.JdbcInputFormat;\n+import org.apache.flink.connector.jdbc.source.row.converter.JdbcRowConverter;\n+import org.apache.flink.connector.jdbc.split.JdbcParameterValuesProvider;\n+import org.apache.flink.util.Preconditions;\n+\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+\n+/**\n+ * InputFormat to read data from a database and generate Rows.\n+ * The InputFormat has to be configured using the supplied InputFormatBuilder.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173ded87a6bbdc639582e62245de653ce562e0ef"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA5NTI4Mw==", "bodyText": "indent", "url": "https://github.com/apache/flink/pull/12036#discussion_r422095283", "createdAt": "2020-05-08T11:38:23Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/dialect/JdbcDialect.java", "diffHunk": "@@ -80,7 +80,7 @@ default String quoteIdentifier(String identifier) {\n \t * the use of select + update/insert, this performance is poor.\n \t */\n \tdefault Optional<String> getUpsertStatement(\n-\t\t\tString tableName, String[] fieldNames, String[] uniqueKeyFields) {\n+\t\tString tableName, String[] fieldNames, String[] uniqueKeyFields) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173ded87a6bbdc639582e62245de653ce562e0ef"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA5NTc4MQ==", "bodyText": "Why removes the final?", "url": "https://github.com/apache/flink/pull/12036#discussion_r422095781", "createdAt": "2020-05-08T11:39:43Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/dialect/JdbcDialects.java", "diffHunk": "@@ -39,27 +39,27 @@\n /**\n  * Default JDBC dialects.\n  */\n-public final class JDBCDialects {\n+public class JdbcDialects {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173ded87a6bbdc639582e62245de653ce562e0ef"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA5NzE2OQ==", "bodyText": "The package-visible is on purpose, so that users can't extend this class.", "url": "https://github.com/apache/flink/pull/12036#discussion_r422097169", "createdAt": "2020-05-08T11:43:23Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/JdbcBatchingOutputFormat.java", "diffHunk": "@@ -40,10 +39,13 @@\n import java.util.concurrent.TimeUnit;\n import java.util.function.Function;\n \n-import static org.apache.flink.api.java.io.jdbc.JDBCUtils.setRecordToStatement;\n+import static org.apache.flink.connector.jdbc.JdbcUtils.setRecordToStatement;\n import static org.apache.flink.util.Preconditions.checkNotNull;\n \n-class JdbcBatchingOutputFormat<In, JdbcIn, JdbcExec extends JdbcBatchStatementExecutor<JdbcIn>> extends AbstractJdbcOutputFormat<In> {\n+/**\n+ * A JDBC outputFormat support batching records before writing records to database.\n+ */\n+public class JdbcBatchingOutputFormat<In, JdbcIn, JdbcExec extends JdbcBatchStatementExecutor<JdbcIn>> extends AbstractJdbcOutputFormat<In> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173ded87a6bbdc639582e62245de653ce562e0ef"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA5OTI4Ng==", "bodyText": "Please remove this class.", "url": "https://github.com/apache/flink/pull/12036#discussion_r422099286", "createdAt": "2020-05-08T11:49:14Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/JdbcOutputFormat.java", "diffHunk": "@@ -37,15 +36,16 @@\n  * @see Row\n  * @see DriverManager\n  */\n+\n /**\n  * @deprecated use {@link JdbcBatchingOutputFormat}\n  */\n @Deprecated\n-public class JDBCOutputFormat extends AbstractJdbcOutputFormat<Row> {\n+public class JdbcOutputFormat extends AbstractJdbcOutputFormat<Row> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173ded87a6bbdc639582e62245de653ce562e0ef"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEwMTQ5NA==", "bodyText": "I think keeping this static imports can make code more concise.", "url": "https://github.com/apache/flink/pull/12036#discussion_r422101494", "createdAt": "2020-05-08T11:54:45Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/JdbcITCase.java", "diffHunk": "@@ -35,26 +33,22 @@\n import java.util.Arrays;\n import java.util.List;\n \n-import static org.apache.flink.api.java.io.jdbc.JdbcTestFixture.INPUT_TABLE;\n-import static org.apache.flink.api.java.io.jdbc.JdbcTestFixture.INSERT_TEMPLATE;\n-import static org.apache.flink.api.java.io.jdbc.JdbcTestFixture.TEST_DATA;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173ded87a6bbdc639582e62245de653ce562e0ef"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEwMjQ1Mg==", "bodyText": "Put it after hive moedule in alphabetical order?", "url": "https://github.com/apache/flink/pull/12036#discussion_r422102452", "createdAt": "2020-05-08T11:57:19Z", "author": {"login": "wuchong"}, "path": "flink-connectors/pom.xml", "diffHunk": "@@ -36,7 +36,7 @@ under the License.\n \t<packaging>pom</packaging>\n \n \t<modules>\n-\t\t<module>flink-jdbc</module>\n+\t\t<module>flink-connector-jdbc</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173ded87a6bbdc639582e62245de653ce562e0ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEwNDM1Nw==", "bodyText": "remove this file? I think nobody is using it, and GenericJdbcSinkFunction is not accessible for users.", "url": "https://github.com/apache/flink/pull/12036#discussion_r422104357", "createdAt": "2020-05-08T12:02:15Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/JdbcSinkFunction.java", "diffHunk": "@@ -31,9 +31,9 @@\n  */\n @Deprecated\n class JdbcSinkFunction extends RichSinkFunction<Row> implements CheckpointedFunction {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173ded87a6bbdc639582e62245de653ce562e0ef"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEwNDkwNA==", "bodyText": "Move to org.apache.flink.connector.jdbc.source.converter package? I think converter is always used for Row (or RowData in the future).", "url": "https://github.com/apache/flink/pull/12036#discussion_r422104904", "createdAt": "2020-05-08T12:03:47Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/source/row/converter/JdbcRowConverter.java", "diffHunk": "@@ -16,7 +16,7 @@\n  * limitations under the License.\n  */\n \n-package org.apache.flink.api.java.io.jdbc.source.row.converter;\n+package org.apache.flink.connector.jdbc.source.row.converter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173ded87a6bbdc639582e62245de653ce562e0ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEwNTIwMw==", "bodyText": "How about to add an @Internal annotation on this to tell this is not ready to be exposed to users.", "url": "https://github.com/apache/flink/pull/12036#discussion_r422105203", "createdAt": "2020-05-08T12:04:31Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/dialect/JdbcDialect.java", "diffHunk": "@@ -31,7 +31,7 @@\n /**\n  * Handle the SQL dialect of jdbc driver.\n  */\n-public interface JDBCDialect extends Serializable {\n+public interface JdbcDialect extends Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "173ded87a6bbdc639582e62245de653ce562e0ef"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0fc75d8ca4b1834b402d7be49d803bc757810fa9", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/0fc75d8ca4b1834b402d7be49d803bc757810fa9", "committedDate": "2020-05-11T09:57:23Z", "message": "address comments and recognize packages"}, "afterCommit": {"oid": "cb0d57d5d8792936e83463f5399bc5f15c5c69e9", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/cb0d57d5d8792936e83463f5399bc5f15c5c69e9", "committedDate": "2020-05-12T03:13:58Z", "message": "address comments and recognize packages"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6859e4891797829d0ea736acc1a5f2f114b79cab", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/6859e4891797829d0ea736acc1a5f2f114b79cab", "committedDate": "2020-05-12T03:32:04Z", "message": "minor"}, "afterCommit": {"oid": "adc67315f721dcedd256e938c642a18878829d0e", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/adc67315f721dcedd256e938c642a18878829d0e", "committedDate": "2020-05-12T06:14:32Z", "message": "address comments and recognize packages"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "adc67315f721dcedd256e938c642a18878829d0e", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/adc67315f721dcedd256e938c642a18878829d0e", "committedDate": "2020-05-12T06:14:32Z", "message": "address comments and recognize packages"}, "afterCommit": {"oid": "83806c39c17f56e280bc8cad215839a902742b9e", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/83806c39c17f56e280bc8cad215839a902742b9e", "committedDate": "2020-05-12T06:22:47Z", "message": "address comments and recognize packages"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b1c938eea74696e8076b4ea8981afb65b616be2", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/5b1c938eea74696e8076b4ea8981afb65b616be2", "committedDate": "2020-05-12T08:10:36Z", "message": "minor"}, "afterCommit": {"oid": "b31fe9e8bb6095647e4267ad31e31908c9ca6063", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/b31fe9e8bb6095647e4267ad31e31908c9ca6063", "committedDate": "2020-05-12T08:40:33Z", "message": "[FLINK-17537][connectors / jdbc] Refactor flink-jdbc connector structure\n(1) Use Jdbc instead of JDBC;\n(2) Move interfaces and classes to org.apache.flink.connector.jdbc;\n(3) Keep ancient JDBCOutputFormat, JDBCInputFormat and ParameterValuesProvider in old package;\n(4) Add tests/ITCase for ancient Classes and new classes;\n(5) rename flink-jdbc module to flink-connector-jdbc;\n(6) update docs."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5ODM2NzEx", "url": "https://github.com/apache/flink/pull/12036#pullrequestreview-409836711", "createdAt": "2020-05-12T08:56:02Z", "commit": {"oid": "b31fe9e8bb6095647e4267ad31e31908c9ca6063"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b31fe9e8bb6095647e4267ad31e31908c9ca6063", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/b31fe9e8bb6095647e4267ad31e31908c9ca6063", "committedDate": "2020-05-12T08:40:33Z", "message": "[FLINK-17537][connectors / jdbc] Refactor flink-jdbc connector structure\n(1) Use Jdbc instead of JDBC;\n(2) Move interfaces and classes to org.apache.flink.connector.jdbc;\n(3) Keep ancient JDBCOutputFormat, JDBCInputFormat and ParameterValuesProvider in old package;\n(4) Add tests/ITCase for ancient Classes and new classes;\n(5) rename flink-jdbc module to flink-connector-jdbc;\n(6) update docs."}, "afterCommit": {"oid": "72118ce7dff777ff8cc2f6889c9e8f9a097e4b79", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/72118ce7dff777ff8cc2f6889c9e8f9a097e4b79", "committedDate": "2020-05-12T14:33:42Z", "message": "[FLINK-17537][connectors / jdbc] Refactor flink-jdbc connector structure\n(1) Use Jdbc instead of JDBC.\n(2) Move interfaces and classes to org.apache.flink.connector.jdbc.\n(3) Keep ancient JDBCOutputFormat, JDBCInputFormat and ParameterValuesProvider in old package.\n(4) Add tests/ITCase for ancient Classes and new classes.\n(5) rename flink-jdbc module to flink-connector-jdbc.\n(6) update docs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cd42176068c2a618b21be8700ca578c2f1b09a3", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/1cd42176068c2a618b21be8700ca578c2f1b09a3", "committedDate": "2020-05-13T03:26:24Z", "message": "[FLINK-17537][connectors / jdbc] Refactor flink-jdbc connector structure\n(1) Use Jdbc instead of JDBC.\n(2) Move interfaces and classes to org.apache.flink.connector.jdbc.\n(3) Keep ancient JDBCOutputFormat, JDBCInputFormat and ParameterValuesProvider in old package.\n(4) Add tests/ITCase for ancient Classes and new classes.\n(5) rename flink-jdbc module to flink-connector-jdbc.\n(6) update docs."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72118ce7dff777ff8cc2f6889c9e8f9a097e4b79", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/72118ce7dff777ff8cc2f6889c9e8f9a097e4b79", "committedDate": "2020-05-12T14:33:42Z", "message": "[FLINK-17537][connectors / jdbc] Refactor flink-jdbc connector structure\n(1) Use Jdbc instead of JDBC.\n(2) Move interfaces and classes to org.apache.flink.connector.jdbc.\n(3) Keep ancient JDBCOutputFormat, JDBCInputFormat and ParameterValuesProvider in old package.\n(4) Add tests/ITCase for ancient Classes and new classes.\n(5) rename flink-jdbc module to flink-connector-jdbc.\n(6) update docs."}, "afterCommit": {"oid": "1cd42176068c2a618b21be8700ca578c2f1b09a3", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/1cd42176068c2a618b21be8700ca578c2f1b09a3", "committedDate": "2020-05-13T03:26:24Z", "message": "[FLINK-17537][connectors / jdbc] Refactor flink-jdbc connector structure\n(1) Use Jdbc instead of JDBC.\n(2) Move interfaces and classes to org.apache.flink.connector.jdbc.\n(3) Keep ancient JDBCOutputFormat, JDBCInputFormat and ParameterValuesProvider in old package.\n(4) Add tests/ITCase for ancient Classes and new classes.\n(5) rename flink-jdbc module to flink-connector-jdbc.\n(6) update docs."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4187, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}