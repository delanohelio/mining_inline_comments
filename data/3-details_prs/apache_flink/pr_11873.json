{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NzA2MDM4", "number": 11873, "title": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of Execution\u2026", "bodyText": "\u2026VertexID and attemptNumber\nWhat is the purpose of the change\nRefactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber.\nBrief change log\nRefactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber.\nVerifying this change\nThis change is already covered by existing tests.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: probably yes\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: probably yes\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-04-23T06:21:08Z", "url": "https://github.com/apache/flink/pull/11873", "merged": true, "mergeCommit": {"oid": "b2e1c02db83e4eee6f561bb49feb9de70a445142"}, "closed": true, "closedAt": "2020-08-17T08:22:37Z", "author": {"login": "KarmaGYZ"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcatFQdgBqjMyNjgzNTE5ODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_uBl6gFqTQ2ODI2MDc0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a8bf3517bd92eb1af532182377cb9f4b57da6b8", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/1a8bf3517bd92eb1af532182377cb9f4b57da6b8", "committedDate": "2020-04-23T03:39:06Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}, "afterCommit": {"oid": "223dc2f79c617c84771b333a9b9f4ec0b5b81a31", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/223dc2f79c617c84771b333a9b9f4ec0b5b81a31", "committedDate": "2020-04-24T08:19:18Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "223dc2f79c617c84771b333a9b9f4ec0b5b81a31", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/223dc2f79c617c84771b333a9b9f4ec0b5b81a31", "committedDate": "2020-04-24T08:19:18Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}, "afterCommit": {"oid": "5534ebe0d1ff7acba0f3ddd16770bc08908e301b", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/5534ebe0d1ff7acba0f3ddd16770bc08908e301b", "committedDate": "2020-04-26T05:15:05Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5534ebe0d1ff7acba0f3ddd16770bc08908e301b", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/5534ebe0d1ff7acba0f3ddd16770bc08908e301b", "committedDate": "2020-04-26T05:15:05Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}, "afterCommit": {"oid": "378634c7f6c526e73592813e4957a017d192cc5f", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/378634c7f6c526e73592813e4957a017d192cc5f", "committedDate": "2020-07-08T05:54:54Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "378634c7f6c526e73592813e4957a017d192cc5f", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/378634c7f6c526e73592813e4957a017d192cc5f", "committedDate": "2020-07-08T05:54:54Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}, "afterCommit": {"oid": "ee878059addc8b6938d57b300e49477b52b652ac", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/ee878059addc8b6938d57b300e49477b52b652ac", "committedDate": "2020-07-21T06:11:15Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee878059addc8b6938d57b300e49477b52b652ac", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/ee878059addc8b6938d57b300e49477b52b652ac", "committedDate": "2020-07-21T06:11:15Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}, "afterCommit": {"oid": "86328bd6247ecd10a2b7a00a83b41a8269cf60cf", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/86328bd6247ecd10a2b7a00a83b41a8269cf60cf", "committedDate": "2020-07-21T08:41:32Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86328bd6247ecd10a2b7a00a83b41a8269cf60cf", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/86328bd6247ecd10a2b7a00a83b41a8269cf60cf", "committedDate": "2020-07-21T08:41:32Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}, "afterCommit": {"oid": "04ebeee8b4a19b2aafee9e57a746522cd2c9654f", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/04ebeee8b4a19b2aafee9e57a746522cd2c9654f", "committedDate": "2020-07-22T01:50:05Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzOTM2MTAw", "url": "https://github.com/apache/flink/pull/11873#pullrequestreview-463936100", "createdAt": "2020-08-10T02:52:22Z", "commit": {"oid": "04ebeee8b4a19b2aafee9e57a746522cd2c9654f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMjo1MjoyMlrOG-AJrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMzoxMzowNlrOG-AXSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY2NzM3Mw==", "bodyText": "NIT: executionVertexId would be better than executionVertexID.", "url": "https://github.com/apache/flink/pull/11873#discussion_r467667373", "createdAt": "2020-08-10T02:52:22Z", "author": {"login": "zhuzhurk"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/executiongraph/ExecutionAttemptID.java", "diffHunk": "@@ -18,33 +18,77 @@\n \n package org.apache.flink.runtime.executiongraph;\n \n-import org.apache.flink.util.AbstractID;\n+import org.apache.flink.annotation.VisibleForTesting;\n+import org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID;\n \n import org.apache.flink.shaded.netty4.io.netty.buffer.ByteBuf;\n+import org.apache.flink.util.Preconditions;\n \n /**\n  * Unique identifier for the attempt to execute a tasks. Multiple attempts happen\n  * in cases of failures and recovery.\n  */\n-public class ExecutionAttemptID extends AbstractID {\n+public class ExecutionAttemptID implements java.io.Serializable {\n \n \tprivate static final long serialVersionUID = -1169683445778281344L;\n \n+\tprivate final ExecutionVertexID executionVertexID;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04ebeee8b4a19b2aafee9e57a746522cd2c9654f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY2NzYwMg==", "bodyText": "NIT: getExecutionVertexId would be better than getExecutionVertexID", "url": "https://github.com/apache/flink/pull/11873#discussion_r467667602", "createdAt": "2020-08-10T02:53:48Z", "author": {"login": "zhuzhurk"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/executiongraph/ExecutionAttemptID.java", "diffHunk": "@@ -18,33 +18,77 @@\n \n package org.apache.flink.runtime.executiongraph;\n \n-import org.apache.flink.util.AbstractID;\n+import org.apache.flink.annotation.VisibleForTesting;\n+import org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID;\n \n import org.apache.flink.shaded.netty4.io.netty.buffer.ByteBuf;\n+import org.apache.flink.util.Preconditions;\n \n /**\n  * Unique identifier for the attempt to execute a tasks. Multiple attempts happen\n  * in cases of failures and recovery.\n  */\n-public class ExecutionAttemptID extends AbstractID {\n+public class ExecutionAttemptID implements java.io.Serializable {\n \n \tprivate static final long serialVersionUID = -1169683445778281344L;\n \n+\tprivate final ExecutionVertexID executionVertexID;\n+\tprivate final int attemptNumber;\n+\n+\t/**\n+\t * Get a random execution attempt id.\n+\t */\n \tpublic ExecutionAttemptID() {\n+\t\tthis(new ExecutionVertexID(), 0);\n \t}\n \n-\tpublic ExecutionAttemptID(long lowerPart, long upperPart) {\n-\t\tsuper(lowerPart, upperPart);\n+\tpublic ExecutionAttemptID(ExecutionVertexID executionVertexID, int attemptNumber) {\n+\t\tPreconditions.checkState(attemptNumber >= 0);\n+\t\tthis.executionVertexID = Preconditions.checkNotNull(executionVertexID);\n+\t\tthis.attemptNumber = attemptNumber;\n \t}\n \n \tpublic void writeTo(ByteBuf buf) {\n-\t\tbuf.writeLong(this.lowerPart);\n-\t\tbuf.writeLong(this.upperPart);\n+\t\texecutionVertexID.writeTo(buf);\n+\t\tbuf.writeInt(this.attemptNumber);\n \t}\n \n \tpublic static ExecutionAttemptID fromByteBuf(ByteBuf buf) {\n-\t\tlong lower = buf.readLong();\n-\t\tlong upper = buf.readLong();\n-\t\treturn new ExecutionAttemptID(lower, upper);\n+\t\tfinal ExecutionVertexID executionVertexID = ExecutionVertexID.fromByteBuf(buf);\n+\t\tfinal int attemptNumber = buf.readInt();\n+\t\treturn new ExecutionAttemptID(executionVertexID, attemptNumber);\n+\t}\n+\n+\t@VisibleForTesting\n+\tpublic int getAttemptNumber() {\n+\t\treturn attemptNumber;\n+\t}\n+\n+\t@VisibleForTesting\n+\tpublic ExecutionVertexID getExecutionVertexID() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04ebeee8b4a19b2aafee9e57a746522cd2c9654f"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY2ODIzMg==", "bodyText": "I'd prefer this.executionVertexID.hashCode() * 31 + this.attemptNumber.\nThis is because attemptNumber  == 0 is very common and can result in the same hash code.", "url": "https://github.com/apache/flink/pull/11873#discussion_r467668232", "createdAt": "2020-08-10T02:57:37Z", "author": {"login": "zhuzhurk"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/executiongraph/ExecutionAttemptID.java", "diffHunk": "@@ -18,33 +18,77 @@\n \n package org.apache.flink.runtime.executiongraph;\n \n-import org.apache.flink.util.AbstractID;\n+import org.apache.flink.annotation.VisibleForTesting;\n+import org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID;\n \n import org.apache.flink.shaded.netty4.io.netty.buffer.ByteBuf;\n+import org.apache.flink.util.Preconditions;\n \n /**\n  * Unique identifier for the attempt to execute a tasks. Multiple attempts happen\n  * in cases of failures and recovery.\n  */\n-public class ExecutionAttemptID extends AbstractID {\n+public class ExecutionAttemptID implements java.io.Serializable {\n \n \tprivate static final long serialVersionUID = -1169683445778281344L;\n \n+\tprivate final ExecutionVertexID executionVertexID;\n+\tprivate final int attemptNumber;\n+\n+\t/**\n+\t * Get a random execution attempt id.\n+\t */\n \tpublic ExecutionAttemptID() {\n+\t\tthis(new ExecutionVertexID(), 0);\n \t}\n \n-\tpublic ExecutionAttemptID(long lowerPart, long upperPart) {\n-\t\tsuper(lowerPart, upperPart);\n+\tpublic ExecutionAttemptID(ExecutionVertexID executionVertexID, int attemptNumber) {\n+\t\tPreconditions.checkState(attemptNumber >= 0);\n+\t\tthis.executionVertexID = Preconditions.checkNotNull(executionVertexID);\n+\t\tthis.attemptNumber = attemptNumber;\n \t}\n \n \tpublic void writeTo(ByteBuf buf) {\n-\t\tbuf.writeLong(this.lowerPart);\n-\t\tbuf.writeLong(this.upperPart);\n+\t\texecutionVertexID.writeTo(buf);\n+\t\tbuf.writeInt(this.attemptNumber);\n \t}\n \n \tpublic static ExecutionAttemptID fromByteBuf(ByteBuf buf) {\n-\t\tlong lower = buf.readLong();\n-\t\tlong upper = buf.readLong();\n-\t\treturn new ExecutionAttemptID(lower, upper);\n+\t\tfinal ExecutionVertexID executionVertexID = ExecutionVertexID.fromByteBuf(buf);\n+\t\tfinal int attemptNumber = buf.readInt();\n+\t\treturn new ExecutionAttemptID(executionVertexID, attemptNumber);\n+\t}\n+\n+\t@VisibleForTesting\n+\tpublic int getAttemptNumber() {\n+\t\treturn attemptNumber;\n+\t}\n+\n+\t@VisibleForTesting\n+\tpublic ExecutionVertexID getExecutionVertexID() {\n+\t\treturn executionVertexID;\n+\t}\n+\n+\t@Override\n+\tpublic boolean equals(Object obj) {\n+\t\tif (obj == this) {\n+\t\t\treturn true;\n+\t\t} else if (obj != null && obj.getClass() == getClass()) {\n+\t\t\tExecutionAttemptID that = (ExecutionAttemptID) obj;\n+\t\t\treturn that.executionVertexID.equals(this.executionVertexID)\n+\t\t\t\t&& that.attemptNumber == this.attemptNumber;\n+\t\t} else {\n+\t\t\treturn false;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic int hashCode() {\n+\t\treturn this.executionVertexID.hashCode() ^ this.attemptNumber;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04ebeee8b4a19b2aafee9e57a746522cd2c9654f"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3MDU3MA==", "bodyText": "Could we introduce a util method ExecutionGraphTestUtils#createRandomExecutionVertexId() to avoid pollute production code with test code? And make it true random with a random subtaskIndex as well.", "url": "https://github.com/apache/flink/pull/11873#discussion_r467670570", "createdAt": "2020-08-10T03:11:18Z", "author": {"login": "zhuzhurk"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/strategy/ExecutionVertexID.java", "diffHunk": "@@ -33,6 +35,10 @@\n \n \tprivate final int subtaskIndex;\n \n+\tpublic ExecutionVertexID() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04ebeee8b4a19b2aafee9e57a746522cd2c9654f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3MDg1OQ==", "bodyText": "This constructor is for tests only. Could we introduce a test util method ExecutionGraphTestUtils#createRandomExecutionAttemptId()? The returned id consists of a random ExecutionVertexId as well as a random attemptNumber. I think it better suites the tests which wants a random ExecutionAttemptID. And we can also avoid to add a test-only code path in production.", "url": "https://github.com/apache/flink/pull/11873#discussion_r467670859", "createdAt": "2020-08-10T03:13:06Z", "author": {"login": "zhuzhurk"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/executiongraph/ExecutionAttemptID.java", "diffHunk": "@@ -18,33 +18,77 @@\n \n package org.apache.flink.runtime.executiongraph;\n \n-import org.apache.flink.util.AbstractID;\n+import org.apache.flink.annotation.VisibleForTesting;\n+import org.apache.flink.runtime.scheduler.strategy.ExecutionVertexID;\n \n import org.apache.flink.shaded.netty4.io.netty.buffer.ByteBuf;\n+import org.apache.flink.util.Preconditions;\n \n /**\n  * Unique identifier for the attempt to execute a tasks. Multiple attempts happen\n  * in cases of failures and recovery.\n  */\n-public class ExecutionAttemptID extends AbstractID {\n+public class ExecutionAttemptID implements java.io.Serializable {\n \n \tprivate static final long serialVersionUID = -1169683445778281344L;\n \n+\tprivate final ExecutionVertexID executionVertexID;\n+\tprivate final int attemptNumber;\n+\n+\t/**\n+\t * Get a random execution attempt id.\n+\t */\n \tpublic ExecutionAttemptID() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04ebeee8b4a19b2aafee9e57a746522cd2c9654f"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae7da66548039da54cf4ac664c517e2bb8eab68f", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/ae7da66548039da54cf4ac664c517e2bb8eab68f", "committedDate": "2020-08-17T03:55:23Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "04ebeee8b4a19b2aafee9e57a746522cd2c9654f", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/04ebeee8b4a19b2aafee9e57a746522cd2c9654f", "committedDate": "2020-07-22T01:50:05Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}, "afterCommit": {"oid": "ae7da66548039da54cf4ac664c517e2bb8eab68f", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/ae7da66548039da54cf4ac664c517e2bb8eab68f", "committedDate": "2020-08-17T03:55:23Z", "message": "[FLINK-17295] Refactor the ExecutionAttemptID to consist of ExecutionVertexID and attemptNumber"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MjYwNzQz", "url": "https://github.com/apache/flink/pull/11873#pullrequestreview-468260743", "createdAt": "2020-08-17T08:20:41Z", "commit": {"oid": "ae7da66548039da54cf4ac664c517e2bb8eab68f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4800, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}