{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNDIzMjIx", "number": 13639, "title": "[FLINK-19237] Fix rejected slot offer bug in JobMaster ", "bodyText": "What is the purpose of the change\nFix rejected slot offer bug in JobMaster. The bug surfaced as a test instability in LeaderChangeClusterComponentsTest.testReelectionOfJobMaster.\nBrief change log\n\nMove disconnect of TaskManagers to the Dispatcher.suspend() method.\nAdd a test\n\nVerifying this change\nCovered by a dedicated test.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)", "createdAt": "2020-10-14T14:37:01Z", "url": "https://github.com/apache/flink/pull/13639", "merged": true, "mergeCommit": {"oid": "ff026787b1e461eae7520a9a52eb33b210b78c2d"}, "closed": true, "closedAt": "2020-10-15T19:31:41Z", "author": {"login": "rmetzger"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSeLbBAFqTUwODQxNzkwNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSyysnABqjM4ODE5NTkxMDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NDE3OTA0", "url": "https://github.com/apache/flink/pull/13639#pullrequestreview-508417904", "createdAt": "2020-10-14T14:37:29Z", "commit": {"oid": "4bac1d3f88930c269cab61688034af64b0f20a10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDozNzozMFrOHhWWxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDozNzozMFrOHhWWxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczMTMzNQ==", "bodyText": "I will remove this empty line before merging or when addressing comments.", "url": "https://github.com/apache/flink/pull/13639#discussion_r504731335", "createdAt": "2020-10-14T14:37:30Z", "author": {"login": "rmetzger"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/JobMasterTest.java", "diffHunk": "@@ -280,6 +286,65 @@ public static void teardownClass() {\n \t\t}\n \t}\n \n+\t/**\n+\t * This test ensures that the bookkeeping of TaskExecutors in the JobMaster handles cases where TaskExecutors with the same\n+\t * ID re-register properly. FLINK-19237 was a bug where the TaskExecutors and the SlotPool got out of sync, and\n+\t * slot offers were rejected.\n+\t */\n+\t@Test\n+\tpublic void testAcceptSlotOfferAfterLeaderchange() throws Exception {\n+\n+\t\tfinal JobManagerSharedServices jobManagerSharedServices = new TestingJobManagerSharedServicesBuilder().build();\n+\t\tfinal JobMasterConfiguration jobMasterConfiguration = JobMasterConfiguration.fromConfiguration(configuration);\n+\n+\t\tfinal SchedulerNGFactory schedulerNGFactory = SchedulerNGFactoryFactory.createSchedulerNGFactory(configuration);\n+\n+\t\tfinal TestingJobMaster jobMaster = new TestingJobMaster(\n+\t\t\trpcService,\n+\t\t\tjobMasterConfiguration,\n+\t\t\tjmResourceId,\n+\t\t\tjobGraph,\n+\t\t\thaServices,\n+\t\t\tSlotPoolFactory.fromConfiguration(configuration),\n+\t\t\tjobManagerSharedServices,\n+\t\t\theartbeatServices,\n+\t\t\tUnregisteredJobManagerJobMetricGroupFactory.INSTANCE,\n+\t\t\tnew JobMasterBuilder.TestingOnCompletionActions(),\n+\t\t\ttestingFatalErrorHandler,\n+\t\t\tJobMasterTest.class.getClassLoader(),\n+\t\t\tschedulerNGFactory,\n+\t\t\tNettyShuffleMaster.INSTANCE,\n+\t\t\tNoOpJobMasterPartitionTracker.FACTORY,\n+\t\t\tnew DefaultExecutionDeploymentTracker(),\n+\t\t\tDefaultExecutionDeploymentReconciler::new,\n+\t\t\tSystem.currentTimeMillis());\n+\n+\t\tjobMaster.start(jobMasterId).get();\n+\n+\t\tlog.info(\"Register TaskManager\");\n+\n+\t\tString testingTaskManagerAddress = \"fake\";\n+\t\tUnresolvedTaskManagerLocation unresolvedTaskManagerLocation = new LocalUnresolvedTaskManagerLocation();\n+\t\tTestingTaskExecutorGateway testingTaskExecutorGateway = new TestingTaskExecutorGatewayBuilder().createTestingTaskExecutorGateway();\n+\t\trpcService.registerGateway(testingTaskManagerAddress, testingTaskExecutorGateway);\n+\t\tAssert.assertThat(jobMaster.registerTaskManager(testingTaskManagerAddress, unresolvedTaskManagerLocation, testingTimeout).get(), instanceOf(RegistrationResponse.Success.class));\n+\n+\t\tlog.info(\"Revoke leadership & re-grant leadership\");\n+\t\tjobMaster.suspend(new FlinkException(\"Lost leadership\")).get();\n+\n+\t\tjobMaster.start(JobMasterId.generate()).get();\n+\n+\t\tlog.info(\"re-register same TaskManager\");\n+\t\tAssert.assertThat(jobMaster.registerTaskManager(testingTaskManagerAddress, unresolvedTaskManagerLocation, testingTimeout).get(), instanceOf(RegistrationResponse.Success.class));\n+\n+\t\tlog.info(\"Ensure JobMaster accepts slot offer\");\n+\t\tfinal SlotOffer slotOffer = new SlotOffer(new AllocationID(), 0, ResourceProfile.ANY);\n+\n+\t\tCollection<SlotOffer> acceptedSlots = jobMaster.executeInMainThreadExecutor(() -> jobMaster.offerSlots(unresolvedTaskManagerLocation.getResourceID(), Collections.singleton(slotOffer), testingTimeout).get()).get();\n+\t\tAssert.assertThat(acceptedSlots.size(), is(1));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bac1d3f88930c269cab61688034af64b0f20a10"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MDc1MjE4", "url": "https://github.com/apache/flink/pull/13639#pullrequestreview-509075218", "createdAt": "2020-10-15T07:06:03Z", "commit": {"oid": "0e6b2e9b98bebd0a15eba394dd794c33d41f8269"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzowNjowM1rOHh1T8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzoxMDoyM1rOHh1niA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIzODUxMg==", "bodyText": "I think it would be good to explain why the test fails.", "url": "https://github.com/apache/flink/pull/13639#discussion_r505238512", "createdAt": "2020-10-15T07:06:03Z", "author": {"login": "tillrohrmann"}, "path": "flink-core/src/test/java/org/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializerConcurrencyCheckInactiveITCase.java", "diffHunk": "@@ -47,6 +50,7 @@\n \t */\n \t@Test\n \tpublic void testWithNoConcurrencyCheck() throws Exception {\n+\t\tassumeFalse(log.isDebugEnabled()); // this test will fail on DEBUG log level.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e6b2e9b98bebd0a15eba394dd794c33d41f8269"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0MDQ2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic void testAcceptSlotOfferAfterLeaderchange() throws Exception {\n          \n          \n            \n            \tpublic void testAcceptSlotOfferAfterLeaderChange() throws Exception {", "url": "https://github.com/apache/flink/pull/13639#discussion_r505240462", "createdAt": "2020-10-15T07:07:37Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/JobMasterTest.java", "diffHunk": "@@ -280,6 +286,65 @@ public static void teardownClass() {\n \t\t}\n \t}\n \n+\t/**\n+\t * This test ensures that the bookkeeping of TaskExecutors in the JobMaster handles cases where TaskExecutors with the same\n+\t * ID re-register properly. FLINK-19237 was a bug where the TaskExecutors and the SlotPool got out of sync, and\n+\t * slot offers were rejected.\n+\t */\n+\t@Test\n+\tpublic void testAcceptSlotOfferAfterLeaderchange() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bac1d3f88930c269cab61688034af64b0f20a10"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0MzI4NQ==", "bodyText": "Instead of calling methods directly on the JobMaster I suggest to retrieve the self gateway via jobMaster.getSelfGateway(JobMasterGateway.class) and then to use this interface to send RPCs. That way, we also don't need executeInMainThreadExecutor.", "url": "https://github.com/apache/flink/pull/13639#discussion_r505243285", "createdAt": "2020-10-15T07:10:09Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/JobMasterTest.java", "diffHunk": "@@ -280,6 +286,65 @@ public static void teardownClass() {\n \t\t}\n \t}\n \n+\t/**\n+\t * This test ensures that the bookkeeping of TaskExecutors in the JobMaster handles cases where TaskExecutors with the same\n+\t * ID re-register properly. FLINK-19237 was a bug where the TaskExecutors and the SlotPool got out of sync, and\n+\t * slot offers were rejected.\n+\t */\n+\t@Test\n+\tpublic void testAcceptSlotOfferAfterLeaderchange() throws Exception {\n+\n+\t\tfinal JobManagerSharedServices jobManagerSharedServices = new TestingJobManagerSharedServicesBuilder().build();\n+\t\tfinal JobMasterConfiguration jobMasterConfiguration = JobMasterConfiguration.fromConfiguration(configuration);\n+\n+\t\tfinal SchedulerNGFactory schedulerNGFactory = SchedulerNGFactoryFactory.createSchedulerNGFactory(configuration);\n+\n+\t\tfinal TestingJobMaster jobMaster = new TestingJobMaster(\n+\t\t\trpcService,\n+\t\t\tjobMasterConfiguration,\n+\t\t\tjmResourceId,\n+\t\t\tjobGraph,\n+\t\t\thaServices,\n+\t\t\tSlotPoolFactory.fromConfiguration(configuration),\n+\t\t\tjobManagerSharedServices,\n+\t\t\theartbeatServices,\n+\t\t\tUnregisteredJobManagerJobMetricGroupFactory.INSTANCE,\n+\t\t\tnew JobMasterBuilder.TestingOnCompletionActions(),\n+\t\t\ttestingFatalErrorHandler,\n+\t\t\tJobMasterTest.class.getClassLoader(),\n+\t\t\tschedulerNGFactory,\n+\t\t\tNettyShuffleMaster.INSTANCE,\n+\t\t\tNoOpJobMasterPartitionTracker.FACTORY,\n+\t\t\tnew DefaultExecutionDeploymentTracker(),\n+\t\t\tDefaultExecutionDeploymentReconciler::new,\n+\t\t\tSystem.currentTimeMillis());\n+\n+\t\tjobMaster.start(jobMasterId).get();\n+\n+\t\tlog.info(\"Register TaskManager\");\n+\n+\t\tString testingTaskManagerAddress = \"fake\";\n+\t\tUnresolvedTaskManagerLocation unresolvedTaskManagerLocation = new LocalUnresolvedTaskManagerLocation();\n+\t\tTestingTaskExecutorGateway testingTaskExecutorGateway = new TestingTaskExecutorGatewayBuilder().createTestingTaskExecutorGateway();\n+\t\trpcService.registerGateway(testingTaskManagerAddress, testingTaskExecutorGateway);\n+\t\tAssert.assertThat(jobMaster.registerTaskManager(testingTaskManagerAddress, unresolvedTaskManagerLocation, testingTimeout).get(), instanceOf(RegistrationResponse.Success.class));\n+\n+\t\tlog.info(\"Revoke leadership & re-grant leadership\");\n+\t\tjobMaster.suspend(new FlinkException(\"Lost leadership\")).get();\n+\n+\t\tjobMaster.start(JobMasterId.generate()).get();\n+\n+\t\tlog.info(\"re-register same TaskManager\");\n+\t\tAssert.assertThat(jobMaster.registerTaskManager(testingTaskManagerAddress, unresolvedTaskManagerLocation, testingTimeout).get(), instanceOf(RegistrationResponse.Success.class));\n+\n+\t\tlog.info(\"Ensure JobMaster accepts slot offer\");\n+\t\tfinal SlotOffer slotOffer = new SlotOffer(new AllocationID(), 0, ResourceProfile.ANY);\n+\n+\t\tCollection<SlotOffer> acceptedSlots = jobMaster.executeInMainThreadExecutor(() -> jobMaster.offerSlots(unresolvedTaskManagerLocation.getResourceID(), Collections.singleton(slotOffer), testingTimeout).get()).get();\n+\t\tAssert.assertThat(acceptedSlots.size(), is(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bac1d3f88930c269cab61688034af64b0f20a10"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0MzUyOA==", "bodyText": "This class should not be needed.", "url": "https://github.com/apache/flink/pull/13639#discussion_r505243528", "createdAt": "2020-10-15T07:10:23Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/JobMasterTest.java", "diffHunk": "@@ -2177,4 +2242,58 @@ public void disposeStorageLocation() throws IOException {\n \n \t\t}\n \t}\n+\n+\n+\tprivate static class TestingJobMaster extends JobMaster {\n+\n+\t\tpublic TestingJobMaster(RpcService rpcService,\n+\t\t\t\tJobMasterConfiguration jobMasterConfiguration,\n+\t\t\t\tResourceID resourceId,\n+\t\t\t\tJobGraph jobGraph,\n+\t\t\t\tHighAvailabilityServices highAvailabilityService,\n+\t\t\t\tSlotPoolFactory slotPoolFactory,\n+\t\t\t\tJobManagerSharedServices jobManagerSharedServices,\n+\t\t\t\tHeartbeatServices heartbeatServices,\n+\t\t\t\tJobManagerJobMetricGroupFactory jobMetricGroupFactory,\n+\t\t\t\tOnCompletionActions jobCompletionActions,\n+\t\t\t\tFatalErrorHandler fatalErrorHandler,\n+\t\t\t\tClassLoader userCodeLoader,\n+\t\t\t\tSchedulerNGFactory schedulerNGFactory,\n+\t\t\t\tShuffleMaster<?> shuffleMaster,\n+\t\t\t\tPartitionTrackerFactory partitionTrackerFactory,\n+\t\t\t\tExecutionDeploymentTracker executionDeploymentTracker,\n+\t\t\t\tExecutionDeploymentReconciler.Factory executionDeploymentReconcilerFactory,\n+\t\t\t\tlong initializationTimestamp) throws Exception {\n+\t\t\tsuper(rpcService,\n+\t\t\t\tjobMasterConfiguration,\n+\t\t\t\tresourceId,\n+\t\t\t\tjobGraph,\n+\t\t\t\thighAvailabilityService,\n+\t\t\t\tslotPoolFactory,\n+\t\t\t\tjobManagerSharedServices,\n+\t\t\t\theartbeatServices,\n+\t\t\t\tjobMetricGroupFactory,\n+\t\t\t\tjobCompletionActions,\n+\t\t\t\tfatalErrorHandler,\n+\t\t\t\tuserCodeLoader,\n+\t\t\t\tschedulerNGFactory,\n+\t\t\t\tshuffleMaster,\n+\t\t\t\tpartitionTrackerFactory,\n+\t\t\t\texecutionDeploymentTracker,\n+\t\t\t\texecutionDeploymentReconcilerFactory,\n+\t\t\t\tinitializationTimestamp);\n+\t\t}\n+\n+\t\tpublic <T> CompletableFuture<T> executeInMainThreadExecutor(SupplierWithException<T, Throwable> runnable) {\n+\t\t\tCompletableFuture<T> result = new CompletableFuture<>();\n+\t\t\tgetMainThreadExecutor().execute(() -> {\n+\t\t\t\ttry {\n+\t\t\t\t\tresult.complete(runnable.get());\n+\t\t\t\t} catch (Throwable throwable) {\n+\t\t\t\t\tresult.completeExceptionally(throwable);\n+\t\t\t\t}\n+\t\t\t});\n+\t\t\treturn result;\n+\t\t}\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bac1d3f88930c269cab61688034af64b0f20a10"}, "originalPosition": 169}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4bac1d3f88930c269cab61688034af64b0f20a10", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/4bac1d3f88930c269cab61688034af64b0f20a10", "committedDate": "2020-10-14T12:43:27Z", "message": "[FLINK-19237] Fix rejected slot offer bug in JobMaster\n\nThe JobMaster was rejecting slot offers from TaskExecutors erroneously in cases where the TaskExecutor ID is reused.\n\nThis fixes the JobMaster.suspend() behavior to do proper bookkeeping of TaskExecutors."}, "afterCommit": {"oid": "e5b605b27d5f0f75a623b31065c3062894c97725", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/e5b605b27d5f0f75a623b31065c3062894c97725", "committedDate": "2020-10-15T08:12:12Z", "message": "[FLINK-19237] Fix rejected slot offer bug in JobMaster\n\nThe JobMaster was rejecting slot offers from TaskExecutors erroneously in cases where the TaskExecutor ID is reused.\n\nThis fixes the JobMaster.suspend() behavior to do proper bookkeeping of TaskExecutors."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5b605b27d5f0f75a623b31065c3062894c97725", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/e5b605b27d5f0f75a623b31065c3062894c97725", "committedDate": "2020-10-15T08:12:12Z", "message": "[FLINK-19237] Fix rejected slot offer bug in JobMaster\n\nThe JobMaster was rejecting slot offers from TaskExecutors erroneously in cases where the TaskExecutor ID is reused.\n\nThis fixes the JobMaster.suspend() behavior to do proper bookkeeping of TaskExecutors."}, "afterCommit": {"oid": "2876ce46b800db5d0fe10f12ebf55efd1ab22ace", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/2876ce46b800db5d0fe10f12ebf55efd1ab22ace", "committedDate": "2020-10-15T08:32:01Z", "message": "[FLINK-19237] Fix rejected slot offer bug in JobMaster\n\nThe JobMaster was rejecting slot offers from TaskExecutors erroneously in cases where the TaskExecutor ID is reused.\n\nThis fixes the JobMaster.suspend() behavior to do proper bookkeeping of TaskExecutors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dfb2240cd09d975959851a1df28ad18d442998e", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/9dfb2240cd09d975959851a1df28ad18d442998e", "committedDate": "2020-10-15T14:37:15Z", "message": "[hotfix] Disable KryoSerializerConcurrencyCheckInactiveITCase if logging level is DEBUG"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edc867bcfe18df71043801cb8a38eb0ed2d4d502", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/edc867bcfe18df71043801cb8a38eb0ed2d4d502", "committedDate": "2020-10-15T14:37:58Z", "message": "[FLINK-19237] Fix rejected slot offer bug in JobMaster\n\nThe JobMaster was rejecting slot offers from TaskExecutors erroneously in cases where the TaskExecutor ID is reused.\n\nThis fixes the JobMaster.suspend() behavior to do proper bookkeeping of TaskExecutors."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2876ce46b800db5d0fe10f12ebf55efd1ab22ace", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/2876ce46b800db5d0fe10f12ebf55efd1ab22ace", "committedDate": "2020-10-15T08:32:01Z", "message": "[FLINK-19237] Fix rejected slot offer bug in JobMaster\n\nThe JobMaster was rejecting slot offers from TaskExecutors erroneously in cases where the TaskExecutor ID is reused.\n\nThis fixes the JobMaster.suspend() behavior to do proper bookkeeping of TaskExecutors."}, "afterCommit": {"oid": "edc867bcfe18df71043801cb8a38eb0ed2d4d502", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/edc867bcfe18df71043801cb8a38eb0ed2d4d502", "committedDate": "2020-10-15T14:37:58Z", "message": "[FLINK-19237] Fix rejected slot offer bug in JobMaster\n\nThe JobMaster was rejecting slot offers from TaskExecutors erroneously in cases where the TaskExecutor ID is reused.\n\nThis fixes the JobMaster.suspend() behavior to do proper bookkeeping of TaskExecutors."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3262, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}