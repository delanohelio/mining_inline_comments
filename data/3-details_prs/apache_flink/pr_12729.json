{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NDQ5NDQw", "number": 12729, "title": "[FLINK-10195][connectors/rabbitmq] Allow setting QoS", "bodyText": "What is the purpose of the change\nThis PR allows configuring the RabbitMQ source's prefetch count, allowing jobs to properly handle backpressure and fix the OOM issue that arises when too many messages are sent from the RMQ server to handle. This is left opt-in and shouldn't affect any current jobs if unset.\nFLINK-10195 contains the discussion around the tradeoffs and links to relevant docs/ proofs-of-concept. This takes some guidance from #8111, though just pulls in the RMQ QueueingConsumer and sets the channel prefetch instead of re-implementing a consumer and starting/ stopping it based on the buffer length. I have not updated the dependency to the latest version but have set us up to do so easily. Should I open up a new ticket for that, or just do it in this PR?\nBrief change log\n\nadds the ability to setPrefetchCount on the RMQConnectionConfig and its builder\nbreaks out creating the source's Channel into a protected method and configures the prefetch count, if set\nmoves the com.rabbitmq.client.QueueingConsumer into Flink, as it is removed in later versions\nadds licensing information for the com.rabbitmq package (I'm sure I did something wrong here)\n\nVerifying this change\nThis change added tests and can be verified as follows:\n\nadded RMQSourceTest#testSetPrefetchCount, which tests setting a prefetch count creates the channel with it\nadded RMQSinkTest#testUnsetPrefetchCount, which tests leaving the prefetch count unset creates the channel as it normally does\nadded RMQConnectionConfigTest#shouldReturnEmptyOptionalPrefetchCount, which tests the returned Optional is empty when unset\nadded RMQConnectionConfigTest#shouldReturnEmptyOptionalPrefetchCount, which tests the returned Optional is present when set\n\n-- I would love to add an e2e test for this but unsure how to go about it. Would that best be done in another ticket?\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)\n\nCloses #8111", "createdAt": "2020-06-20T19:10:50Z", "url": "https://github.com/apache/flink/pull/12729", "merged": true, "mergeCommit": {"oid": "4130b3bab13d2780e019ad1fa84f3ec0365f6ce0"}, "closed": true, "closedAt": "2020-07-29T18:22:56Z", "author": {"login": "austince"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcvrbI4gFqTQzODc3NDkzMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5s48PgFqTQ1NzY0NjU4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4Nzc0OTMw", "url": "https://github.com/apache/flink/pull/12729#pullrequestreview-438774930", "createdAt": "2020-06-28T12:16:05Z", "commit": {"oid": "99231d5b11dd2adced76b48996dfb252b5cc9fc2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxMjoxNjowNVrOGp88cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQxMjoxNjowNVrOGp88cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY0MzMxNA==", "bodyText": "should we set the global flag to true ? to enforce having only that limit throughout the channel ?\ni am worried if someone adds a functionality that say requires having multiple consumers on the same channel that then the preFetchCount would be per consumer and the preFetchCount set by the client would suddenly mean a completely different thing. But if enforced here to be per channel it will have the same effect for the user.\nAccording to the documentation  chan.basicQos(prefectchCount, boolean global) and the boolean global is:\nfalse | applied separately to each new consumer on the channel\ntrue  | shared across all consumers on the channel", "url": "https://github.com/apache/flink/pull/12729#discussion_r446643314", "createdAt": "2020-06-28T12:16:05Z", "author": {"login": "senegalo"}, "path": "flink-connectors/flink-connector-rabbitmq/src/main/java/org/apache/flink/streaming/connectors/rabbitmq/RMQSource.java", "diffHunk": "@@ -141,6 +140,22 @@ protected Connection setupConnection() throws Exception {\n \t\treturn setupConnectionFactory().newConnection();\n \t}\n \n+\t/**\n+\t * Initializes the consumer's {@link Channel}. If a prefetch count has been set in {@link RMQConnectionConfig},\n+\t * the new channel will be use it for {@link Channel#basicQos(int)}.\n+\t *\n+\t * @param connection the consumer's {@link Connection}.\n+\t * @return the channel.\n+\t * @throws Exception if there is an issue creating or configuring the channel.\n+\t */\n+\tprotected Channel setupChannel(Connection connection) throws Exception {\n+\t\tChannel chan = connection.createChannel();\n+\t\tif (rmqConnectionConfig.getPrefetchCount().isPresent()) {\n+\t\t\tchan.basicQos(rmqConnectionConfig.getPrefetchCount().get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99231d5b11dd2adced76b48996dfb252b5cc9fc2"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "99231d5b11dd2adced76b48996dfb252b5cc9fc2", "author": {"user": {"login": "austince", "name": "Austin Cawley-Edwards"}}, "url": "https://github.com/apache/flink/commit/99231d5b11dd2adced76b48996dfb252b5cc9fc2", "committedDate": "2020-06-20T19:08:44Z", "message": "[FLINK-10195][connectors/rabbitmq] Allow setting QoS"}, "afterCommit": {"oid": "ce89d0b66d61398909e82fd603181f4976351f48", "author": {"user": {"login": "austince", "name": "Austin Cawley-Edwards"}}, "url": "https://github.com/apache/flink/commit/ce89d0b66d61398909e82fd603181f4976351f48", "committedDate": "2020-07-21T17:11:41Z", "message": "[FLINK-10195][connectors/rabbitmq] Allow setting QoS"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce89d0b66d61398909e82fd603181f4976351f48", "author": {"user": {"login": "austince", "name": "Austin Cawley-Edwards"}}, "url": "https://github.com/apache/flink/commit/ce89d0b66d61398909e82fd603181f4976351f48", "committedDate": "2020-07-21T17:11:41Z", "message": "[FLINK-10195][connectors/rabbitmq] Allow setting QoS"}, "afterCommit": {"oid": "0208e794f8691c50a74caf13783806ced51b0ae9", "author": {"user": {"login": "austince", "name": "Austin Cawley-Edwards"}}, "url": "https://github.com/apache/flink/commit/0208e794f8691c50a74caf13783806ced51b0ae9", "committedDate": "2020-07-21T17:57:26Z", "message": "[FLINK-10195][connectors/rabbitmq] Allow setting QoS"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0208e794f8691c50a74caf13783806ced51b0ae9", "author": {"user": {"login": "austince", "name": "Austin Cawley-Edwards"}}, "url": "https://github.com/apache/flink/commit/0208e794f8691c50a74caf13783806ced51b0ae9", "committedDate": "2020-07-21T17:57:26Z", "message": "[FLINK-10195][connectors/rabbitmq] Allow setting QoS"}, "afterCommit": {"oid": "765fcb8c6c01c00bb15a3ce256e2608dc1ffe7ca", "author": {"user": {"login": "austince", "name": "Austin Cawley-Edwards"}}, "url": "https://github.com/apache/flink/commit/765fcb8c6c01c00bb15a3ce256e2608dc1ffe7ca", "committedDate": "2020-07-21T18:03:06Z", "message": "[FLINK-10195][connectors/rabbitmq] Allow setting QoS"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "765fcb8c6c01c00bb15a3ce256e2608dc1ffe7ca", "author": {"user": {"login": "austince", "name": "Austin Cawley-Edwards"}}, "url": "https://github.com/apache/flink/commit/765fcb8c6c01c00bb15a3ce256e2608dc1ffe7ca", "committedDate": "2020-07-21T18:03:06Z", "message": "[FLINK-10195][connectors/rabbitmq] Allow setting QoS"}, "afterCommit": {"oid": "790ebc88d93408cba281d3836ea24e6f6bc4a866", "author": {"user": {"login": "austince", "name": "Austin Cawley-Edwards"}}, "url": "https://github.com/apache/flink/commit/790ebc88d93408cba281d3836ea24e6f6bc4a866", "committedDate": "2020-07-22T13:58:22Z", "message": "[FLINK-10195][connectors/rabbitmq] Allow setting QoS"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NTA2MjQ4", "url": "https://github.com/apache/flink/pull/12729#pullrequestreview-457506248", "createdAt": "2020-07-29T13:12:50Z", "commit": {"oid": "790ebc88d93408cba281d3836ea24e6f6bc4a866"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzoxMjo1MFrOG43v_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzoxNjoyMFrOG435SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI4Njg0Nw==", "bodyText": "We don't need the file for this dependency for two reasons:\n\nWe do not bundle the dependency. We need to create the NOTICE file if we e.g. shade the dependency into an uber-jar. In this case user has to manually add/bundle the dependency for the consumer to work.\nIt is ASL license.", "url": "https://github.com/apache/flink/pull/12729#discussion_r462286847", "createdAt": "2020-07-29T13:12:50Z", "author": {"login": "dawidwys"}, "path": "flink-connectors/flink-connector-rabbitmq/src/main/resources/META-INF/NOTICE", "diffHunk": "@@ -0,0 +1,9 @@\n+flink-connector-rabbitmq\n+Copyright 2014-2020 The Apache Software Foundation\n+\n+This product includes software developed at\n+The Apache Software Foundation (http://www.apache.org/).\n+\n+This project bundles the following dependencies under the Apache Software License 2.0. (http://www.apache.org/licenses/LICENSE-2.0.txt)\n+\n+- com.rabbitmq:amqp-client:4.2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "790ebc88d93408cba281d3836ea24e6f6bc4a866"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI4OTIyNQ==", "bodyText": "If I understand the RMQSource well, the reasons why setupConnection or setupConnectionFactory are protected is for assertions in tests. I see you managed to test it without using the setupChannel method. I think we can safely make it private.\nMoreover WDYT of annotating the other methods with VisibleForTesting?", "url": "https://github.com/apache/flink/pull/12729#discussion_r462289225", "createdAt": "2020-07-29T13:16:20Z", "author": {"login": "dawidwys"}, "path": "flink-connectors/flink-connector-rabbitmq/src/main/java/org/apache/flink/streaming/connectors/rabbitmq/RMQSource.java", "diffHunk": "@@ -141,6 +140,25 @@ protected Connection setupConnection() throws Exception {\n \t\treturn setupConnectionFactory().newConnection();\n \t}\n \n+\t/**\n+\t * Initializes the consumer's {@link Channel}. If a prefetch count has been set in {@link RMQConnectionConfig},\n+\t * the new channel will be use it for {@link Channel#basicQos(int)}.\n+\t *\n+\t * @param connection the consumer's {@link Connection}.\n+\t * @return the channel.\n+\t * @throws Exception if there is an issue creating or configuring the channel.\n+\t */\n+\tprotected Channel setupChannel(Connection connection) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "790ebc88d93408cba281d3836ea24e6f6bc4a866"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "491460bd0b5a9b2e67170d32ca2ffc3506950f65", "author": {"user": {"login": "austince", "name": "Austin Cawley-Edwards"}}, "url": "https://github.com/apache/flink/commit/491460bd0b5a9b2e67170d32ca2ffc3506950f65", "committedDate": "2020-07-29T13:55:57Z", "message": "[FLINK-10195][connectors/rabbitmq] Allow setting QoS"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "790ebc88d93408cba281d3836ea24e6f6bc4a866", "author": {"user": {"login": "austince", "name": "Austin Cawley-Edwards"}}, "url": "https://github.com/apache/flink/commit/790ebc88d93408cba281d3836ea24e6f6bc4a866", "committedDate": "2020-07-22T13:58:22Z", "message": "[FLINK-10195][connectors/rabbitmq] Allow setting QoS"}, "afterCommit": {"oid": "491460bd0b5a9b2e67170d32ca2ffc3506950f65", "author": {"user": {"login": "austince", "name": "Austin Cawley-Edwards"}}, "url": "https://github.com/apache/flink/commit/491460bd0b5a9b2e67170d32ca2ffc3506950f65", "committedDate": "2020-07-29T13:55:57Z", "message": "[FLINK-10195][connectors/rabbitmq] Allow setting QoS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ffd02df057f21695027531e82e0ec717c2ddb91", "author": {"user": {"login": "austince", "name": "Austin Cawley-Edwards"}}, "url": "https://github.com/apache/flink/commit/5ffd02df057f21695027531e82e0ec717c2ddb91", "committedDate": "2020-07-29T15:36:41Z", "message": "[FLINK-17529][connectors/rabbitmq] Upgrade com.rabbitmq:amqp-client to 5.9.0"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NjQ2NTg1", "url": "https://github.com/apache/flink/pull/12729#pullrequestreview-457646585", "createdAt": "2020-07-29T15:37:47Z", "commit": {"oid": "5ffd02df057f21695027531e82e0ec717c2ddb91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3254, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}