{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4OTAyNjgw", "number": 12900, "title": "[FLINK-18537][table] Remove RowDataTypeInfo", "bodyText": "What is the purpose of the change\nTypeInformation is a legacy class for the sole purpose of creating a TypeSerializer.\nInstances of TypeInformation are not required in the table ecosystem but sometimes enforced\nby interfaces of other modules (such as org.apache.flink.api.dag.Transformation). Therefore, we recently introduced WrapperTypeInfo which acts as an adapter whenever type information is required. Instances of WrapperTypeInfo should only be created for passing it to interfaces that require type information. The class should not be used as a replacement for a LogicalType. Information such as the arity of a row type, field types, field names, etc. should be derived from the LogicalType directly.\nThis PR updates the code base to not use RowDataTypeInfo anymore. RowDataTypeInfo was a composite type information with legacy types as field types. This refactoring unblocks FLINK-15803 and reduces potential bugs from type conversion.\nBrief change log\nSee commit messages.\nVerifying this change\nThis change is already covered by existing tests.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): yes\nThe serializers: yes\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? not applicable", "createdAt": "2020-07-14T14:04:44Z", "url": "https://github.com/apache/flink/pull/12900", "merged": true, "mergeCommit": {"oid": "7ea9bb9484110719ab5dc19c00d4a25ab243d334"}, "closed": true, "closedAt": "2020-07-21T15:29:42Z", "author": {"login": "twalthr"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc03OECgFqTQ0ODE4MjA2MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3FxdgABqjM1NzExMjQxOTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MTgyMDYw", "url": "https://github.com/apache/flink/pull/12900#pullrequestreview-448182060", "createdAt": "2020-07-14T14:50:16Z", "commit": {"oid": "6f0bc79be46f90fd0f34697ed10264907ee2614a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDo1MDoxN1rOGxXSvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDo1MDoxN1rOGxXSvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQxNTAzNg==", "bodyText": "Is this interface really necessary? Especially with @PublicEvolving annotation? How are users supposed to use it? If I understand it correctly you need it for internal operations. Moreover you need it because the WrapperTypeInfo is in blink-runtime, right?\nCan't we move the WrapperTypeInfo to the table-common instead?  The class itself has no runtime dependencies. Only the factory methods need some runtime classes.", "url": "https://github.com/apache/flink/pull/12900#discussion_r454415036", "createdAt": "2020-07-14T14:50:17Z", "author": {"login": "dawidwys"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/types/DataTypeQueryable.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.types;\n+\n+import org.apache.flink.annotation.PublicEvolving;\n+\n+/**\n+ * Indicates that a {@link DataType} can be retrieved from a class that implements this interfaces.\n+ */\n+@PublicEvolving\n+public interface DataTypeQueryable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f0bc79be46f90fd0f34697ed10264907ee2614a"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NTI0MjYy", "url": "https://github.com/apache/flink/pull/12900#pullrequestreview-449524262", "createdAt": "2020-07-16T05:51:31Z", "commit": {"oid": "ceb895be265bd445b9d36bfc52cf8018a508c333"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNTo1MTozMlrOGybCpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjozMjozMlrOGyb8eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyNTAzMA==", "bodyText": "What's the preferred import order? AFAIK, the code style suggests to put flink imports first: https://flink.apache.org/contributing/code-style-and-quality-formatting.html#imports", "url": "https://github.com/apache/flink/pull/12900#discussion_r455525030", "createdAt": "2020-07-16T05:51:32Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/codegen/CodeGeneratorContext.scala", "diffHunk": "@@ -18,23 +18,23 @@\n \n package org.apache.flink.table.planner.codegen\n \n+import java.util.TimeZone\n+\n+import org.apache.calcite.avatica.util.DateTimeUtils", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ceb895be265bd445b9d36bfc52cf8018a508c333"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzNTgyMQ==", "bodyText": "In which case will we reach here?", "url": "https://github.com/apache/flink/pull/12900#discussion_r455535821", "createdAt": "2020-07-16T06:23:07Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/data/util/DataFormatConverters.java", "diffHunk": "@@ -249,7 +251,15 @@ public static DataFormatConverter getConverterForDataType(DataType originDataTyp\n \t\t\t\t\t\tDataTypes.INT().bridgedTo(Integer.class));\n \t\t\tcase ROW:\n \t\t\tcase STRUCTURED_TYPE:\n-\t\t\t\tCompositeType compositeType = (CompositeType) fromDataTypeToTypeInfo(dataType);\n+\t\t\t\tTypeInformation<?> asTypeInfo = fromDataTypeToTypeInfo(dataType);\n+\t\t\t\tif (asTypeInfo instanceof WrapperTypeInfo && clazz == RowData.class) {\n+\t\t\t\t\tLogicalType realLogicalType = ((WrapperTypeInfo<?>) asTypeInfo).toLogicalType();\n+\t\t\t\t\treturn new RowDataConverter(getFieldCount(realLogicalType));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ceb895be265bd445b9d36bfc52cf8018a508c333"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzOTgzMw==", "bodyText": "Keep to use DataType here?\n                DataTypes.INT().getLogicalType(),\n\t\tDataTypes.STRING().getLogicalType(),\n\t\tDataTypes.INT().getLogicalType(),\n\t\tDataTypes.STRING().getLogicalType()", "url": "https://github.com/apache/flink/pull/12900#discussion_r455539833", "createdAt": "2020-07-16T06:32:32Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-runtime-blink/src/test/java/org/apache/flink/table/runtime/operators/join/AsyncLookupJoinHarnessTest.java", "diffHunk": "@@ -75,18 +74,19 @@\n \tprivate static final int ASYNC_TIMEOUT_MS = 3000;\n \n \tprivate final TypeSerializer<RowData> inSerializer = new RowDataSerializer(\n-\t\tnew ExecutionConfig(),\n \t\tnew IntType(),\n \t\tnew VarCharType(VarCharType.MAX_LENGTH));\n \n-\tprivate final RowDataHarnessAssertor assertor = new RowDataHarnessAssertor(new TypeInformation[]{\n-\t\tTypes.INT,\n-\t\tTypes.STRING,\n-\t\tTypes.INT,\n-\t\tTypes.STRING\n+\tprivate final RowDataHarnessAssertor assertor = new RowDataHarnessAssertor(new LogicalType[]{\n+\t\tnew IntType(),\n+\t\tnew VarCharType(VarCharType.MAX_LENGTH),\n+\t\tnew IntType(),\n+\t\tnew VarCharType(VarCharType.MAX_LENGTH)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ceb895be265bd445b9d36bfc52cf8018a508c333"}, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ceb895be265bd445b9d36bfc52cf8018a508c333", "author": {"user": {"login": "twalthr", "name": "Timo Walther"}}, "url": "https://github.com/apache/flink/commit/ceb895be265bd445b9d36bfc52cf8018a508c333", "committedDate": "2020-07-14T12:04:21Z", "message": "[FLINK-18537][table] Finalize refactoring"}, "afterCommit": {"oid": "e61dfa9f39d348b4e1273ab7329367706c0f6651", "author": {"user": {"login": "twalthr", "name": "Timo Walther"}}, "url": "https://github.com/apache/flink/commit/e61dfa9f39d348b4e1273ab7329367706c0f6651", "committedDate": "2020-07-17T13:49:57Z", "message": "Refactor 'WrapperTypeInfo' to 'InternalTypeInfo'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMzA3NjY0", "url": "https://github.com/apache/flink/pull/12900#pullrequestreview-452307664", "createdAt": "2020-07-21T10:00:32Z", "commit": {"oid": "e61dfa9f39d348b4e1273ab7329367706c0f6651"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "893e2f11d1fab9522fcf69558d4b9b67a9e020ec", "author": {"user": {"login": "twalthr", "name": "Timo Walther"}}, "url": "https://github.com/apache/flink/commit/893e2f11d1fab9522fcf69558d4b9b67a9e020ec", "committedDate": "2020-07-21T12:39:03Z", "message": "[FLINK-18537][table] Remove ExecutionConfig for internal serializers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2a1b65ece840acab85f6a1387ac68b5ef8b80a8", "author": {"user": {"login": "twalthr", "name": "Timo Walther"}}, "url": "https://github.com/apache/flink/commit/a2a1b65ece840acab85f6a1387ac68b5ef8b80a8", "committedDate": "2020-07-21T12:39:03Z", "message": "[FLINK-18537][table] Compare only field serializers in RowDataSerializer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "758b1bdd57c46f51db7a2bc2e7fd73f4932fe0cf", "author": {"user": {"login": "twalthr", "name": "Timo Walther"}}, "url": "https://github.com/apache/flink/commit/758b1bdd57c46f51db7a2bc2e7fd73f4932fe0cf", "committedDate": "2020-07-21T12:44:25Z", "message": "[FLINK-18537][table] Replace RowDataTypeInfo with InternalTypeInfo\n\nTypeInformation is a legacy class for the sole purpose of creating a\nTypeSerializer. Instances of TypeInformation are not required in the\ntable ecosystem but sometimes enforced by interfaces of other modules\n(such as org.apache.flink.api.dag.Transformation). Therefore, we\nintroduce InternalTypeInfo which acts as an adapter whenever type\ninformation is required. Instances of InternalTypeInfo should only\nbe created for passing it to interfaces that require type information.\nThe class should not be used as a replacement for a LogicalType.\nInformation such as the arity of a row type, field types, field names, etc.\nshould be derived from the LogicalType directly.\n\nThis closes #12900."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ea9bb9484110719ab5dc19c00d4a25ab243d334", "author": {"user": {"login": "twalthr", "name": "Timo Walther"}}, "url": "https://github.com/apache/flink/commit/7ea9bb9484110719ab5dc19c00d4a25ab243d334", "committedDate": "2020-07-21T12:51:47Z", "message": "[hotfix][table-common] Remove unused InternalTypeInfo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e61dfa9f39d348b4e1273ab7329367706c0f6651", "author": {"user": {"login": "twalthr", "name": "Timo Walther"}}, "url": "https://github.com/apache/flink/commit/e61dfa9f39d348b4e1273ab7329367706c0f6651", "committedDate": "2020-07-17T13:49:57Z", "message": "Refactor 'WrapperTypeInfo' to 'InternalTypeInfo'"}, "afterCommit": {"oid": "7ea9bb9484110719ab5dc19c00d4a25ab243d334", "author": {"user": {"login": "twalthr", "name": "Timo Walther"}}, "url": "https://github.com/apache/flink/commit/7ea9bb9484110719ab5dc19c00d4a25ab243d334", "committedDate": "2020-07-21T12:51:47Z", "message": "[hotfix][table-common] Remove unused InternalTypeInfo"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3175, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}