{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNDE5NDU1", "number": 11039, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjo0MjoxMVrODeFR-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzowMjoyM1rODeFq8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODcwMzk0OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/clusterframework/types/ResourceProfileTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjo0MjoxMVrOFnDO1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNjo0MjoxMVrOFnDO1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ5MTczNQ==", "bodyText": "extends TestLogger is missing.", "url": "https://github.com/apache/flink/pull/11039#discussion_r376491735", "createdAt": "2020-02-07T16:42:11Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/clusterframework/types/ResourceProfileTest.java", "diffHunk": "@@ -29,17 +29,22 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+import static org.apache.flink.runtime.clusterframework.types.ResourceProfile.MAX_CPU_CORE_NUMBER_TO_LOG;\n+import static org.apache.flink.runtime.clusterframework.types.ResourceProfile.MAX_MEMORY_SIZE_TO_LOG;\n+import static org.hamcrest.CoreMatchers.is;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotEquals;\n import static org.junit.Assert.assertSame;\n+import static org.junit.Assert.assertThat;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n /**\n  * Tests for the {@link ResourceProfile}.\n  */\n public class ResourceProfileTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43b4289c0851b93da7d57d97e911f8b8091f11f5"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODc2Nzg3OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/clusterframework/types/ResourceProfileTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzowMjoyM1rOFnD2eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzowNjo0NlrOFnD-BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMTg4MA==", "bodyText": "I think we could simplify the assertion a bit by testing whether the string contains cpuCores and a configured memory.", "url": "https://github.com/apache/flink/pull/11039#discussion_r376501880", "createdAt": "2020-02-07T17:02:23Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/clusterframework/types/ResourceProfileTest.java", "diffHunk": "@@ -387,4 +392,36 @@ public void testSingletonPropertyOfAny() throws Exception {\n \n \t\tassertSame(ResourceProfile.ANY, copiedProfile);\n \t}\n+\n+\t@Test\n+\tpublic void testToStringWithoutCpu() {\n+\t\tdouble notLoggedCpu = MAX_CPU_CORE_NUMBER_TO_LOG.doubleValue() + 1.0;\n+\t\tResourceProfile resourceProfile = getResourceProfileForLogsWithCpuVal(notLoggedCpu);\n+\t\tassertThat(resourceProfile.toString(), is(getExpectedToString(resourceProfile, \"\")));\n+\t}\n+\n+\t@Test\n+\tpublic void testToStringWithCpu() {\n+\t\tResourceProfile resourceProfile = getResourceProfileForLogsWithCpuVal(1.0);\n+\t\tassertThat(resourceProfile.toString(), is(getExpectedToString(resourceProfile, \"cpuCores=1.0, \")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43b4289c0851b93da7d57d97e911f8b8091f11f5"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMzgxMg==", "bodyText": "Alright, I would just make sure that the right positions of commas are covered", "url": "https://github.com/apache/flink/pull/11039#discussion_r376503812", "createdAt": "2020-02-07T17:06:46Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/clusterframework/types/ResourceProfileTest.java", "diffHunk": "@@ -387,4 +392,36 @@ public void testSingletonPropertyOfAny() throws Exception {\n \n \t\tassertSame(ResourceProfile.ANY, copiedProfile);\n \t}\n+\n+\t@Test\n+\tpublic void testToStringWithoutCpu() {\n+\t\tdouble notLoggedCpu = MAX_CPU_CORE_NUMBER_TO_LOG.doubleValue() + 1.0;\n+\t\tResourceProfile resourceProfile = getResourceProfileForLogsWithCpuVal(notLoggedCpu);\n+\t\tassertThat(resourceProfile.toString(), is(getExpectedToString(resourceProfile, \"\")));\n+\t}\n+\n+\t@Test\n+\tpublic void testToStringWithCpu() {\n+\t\tResourceProfile resourceProfile = getResourceProfileForLogsWithCpuVal(1.0);\n+\t\tassertThat(resourceProfile.toString(), is(getExpectedToString(resourceProfile, \"cpuCores=1.0, \")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwMTg4MA=="}, "originalCommit": {"oid": "43b4289c0851b93da7d57d97e911f8b8091f11f5"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1044, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}