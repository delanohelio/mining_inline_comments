{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MjI5NDk0", "number": 12042, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzo0OTowMFrOD6pZwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxMTo0OToxOFrOD62zSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODIyMzM4OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/StatementSetImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzo0OTowMFrOGSmNAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzo0OTowMFrOGSmNAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE1MzQ3Mw==", "bodyText": "move this before operations", "url": "https://github.com/apache/flink/pull/12042#discussion_r422153473", "createdAt": "2020-05-08T13:49:00Z", "author": {"login": "KurtYoung"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/StatementSetImpl.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.api.internal;\n+\n+import org.apache.flink.annotation.Internal;\n+import org.apache.flink.table.api.ExplainDetail;\n+import org.apache.flink.table.api.StatementSet;\n+import org.apache.flink.table.api.Table;\n+import org.apache.flink.table.api.TableException;\n+import org.apache.flink.table.api.TableResult;\n+import org.apache.flink.table.catalog.ObjectIdentifier;\n+import org.apache.flink.table.catalog.UnresolvedIdentifier;\n+import org.apache.flink.table.operations.CatalogSinkModifyOperation;\n+import org.apache.flink.table.operations.ModifyOperation;\n+import org.apache.flink.table.operations.Operation;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Implementation for {@link StatementSet}.\n+ */\n+@Internal\n+class StatementSetImpl implements StatementSet {\n+\tprivate List<ModifyOperation> operations = new ArrayList<>();\n+\tprivate final TableEnvironmentInternal tableEnvironment;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e7e6ed50a36257a3e12cf9166d2d53742a148de"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODI1MDQ1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzo1Njo1NFrOGSmdrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNzozMDowOVrOGS5KLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE1Nzc0Mw==", "bodyText": "how about using the target table name as the column name?", "url": "https://github.com/apache/flink/pull/12042#discussion_r422157743", "createdAt": "2020-05-08T13:56:54Z", "author": {"login": "KurtYoung"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "diffHunk": "@@ -654,13 +655,39 @@ public TableResult executeSql(String statement) {\n \t\treturn executeOperation(operations.get(0));\n \t}\n \n+\t@Override\n+\tpublic StatementSet createStatementSet() {\n+\t\treturn new StatementSetImpl(this);\n+\t}\n+\n \t@Override\n \tpublic TableResult executeInternal(List<ModifyOperation> operations) {\n-\t\tif (operations.size() != 1) {\n-\t\t\tthrow new TableException(\"Only one ModifyOperation is supported now.\");\n-\t\t}\n+\t\tList<Transformation<?>> transformations = translate(operations);\n+\t\tString jobName = extractJobName(operations);\n+\t\tPipeline pipeline = execEnv.createPipeline(transformations, tableConfig, jobName);\n+\t\ttry {\n+\t\t\tJobClient jobClient = execEnv.executeAsync(pipeline);\n+\t\t\tTableSchema.Builder builder = TableSchema.builder();\n+\t\t\tObject[] affectedRowCounts = new Long[operations.size()];\n+\t\t\tfor (int i = 0; i < operations.size(); ++i) {\n+\t\t\t\t// if only one operation, field name is 'affected_rowcount', else is 'affected_rowcount_$i'\n+\t\t\t\tString fieldName = \"affected_rowcount\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e7e6ed50a36257a3e12cf9166d2d53742a148de"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIzMjYwNg==", "bodyText": "I think \"affected_rowcount\" is necessary, how about \"affected_rowcount_sink_table_name\" ?", "url": "https://github.com/apache/flink/pull/12042#discussion_r422232606", "createdAt": "2020-05-08T16:13:03Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "diffHunk": "@@ -654,13 +655,39 @@ public TableResult executeSql(String statement) {\n \t\treturn executeOperation(operations.get(0));\n \t}\n \n+\t@Override\n+\tpublic StatementSet createStatementSet() {\n+\t\treturn new StatementSetImpl(this);\n+\t}\n+\n \t@Override\n \tpublic TableResult executeInternal(List<ModifyOperation> operations) {\n-\t\tif (operations.size() != 1) {\n-\t\t\tthrow new TableException(\"Only one ModifyOperation is supported now.\");\n-\t\t}\n+\t\tList<Transformation<?>> transformations = translate(operations);\n+\t\tString jobName = extractJobName(operations);\n+\t\tPipeline pipeline = execEnv.createPipeline(transformations, tableConfig, jobName);\n+\t\ttry {\n+\t\t\tJobClient jobClient = execEnv.executeAsync(pipeline);\n+\t\t\tTableSchema.Builder builder = TableSchema.builder();\n+\t\t\tObject[] affectedRowCounts = new Long[operations.size()];\n+\t\t\tfor (int i = 0; i < operations.size(); ++i) {\n+\t\t\t\t// if only one operation, field name is 'affected_rowcount', else is 'affected_rowcount_$i'\n+\t\t\t\tString fieldName = \"affected_rowcount\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE1Nzc0Mw=="}, "originalCommit": {"oid": "4e7e6ed50a36257a3e12cf9166d2d53742a148de"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ0MDU2MQ==", "bodyText": "Seems too long to me, I think most users are aware of this bigint is representing the row count inserted into the table", "url": "https://github.com/apache/flink/pull/12042#discussion_r422440561", "createdAt": "2020-05-09T02:02:01Z", "author": {"login": "KurtYoung"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "diffHunk": "@@ -654,13 +655,39 @@ public TableResult executeSql(String statement) {\n \t\treturn executeOperation(operations.get(0));\n \t}\n \n+\t@Override\n+\tpublic StatementSet createStatementSet() {\n+\t\treturn new StatementSetImpl(this);\n+\t}\n+\n \t@Override\n \tpublic TableResult executeInternal(List<ModifyOperation> operations) {\n-\t\tif (operations.size() != 1) {\n-\t\t\tthrow new TableException(\"Only one ModifyOperation is supported now.\");\n-\t\t}\n+\t\tList<Transformation<?>> transformations = translate(operations);\n+\t\tString jobName = extractJobName(operations);\n+\t\tPipeline pipeline = execEnv.createPipeline(transformations, tableConfig, jobName);\n+\t\ttry {\n+\t\t\tJobClient jobClient = execEnv.executeAsync(pipeline);\n+\t\t\tTableSchema.Builder builder = TableSchema.builder();\n+\t\t\tObject[] affectedRowCounts = new Long[operations.size()];\n+\t\t\tfor (int i = 0; i < operations.size(); ++i) {\n+\t\t\t\t// if only one operation, field name is 'affected_rowcount', else is 'affected_rowcount_$i'\n+\t\t\t\tString fieldName = \"affected_rowcount\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE1Nzc0Mw=="}, "originalCommit": {"oid": "4e7e6ed50a36257a3e12cf9166d2d53742a148de"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ0MTE3OQ==", "bodyText": "in fact, the table qualified name may be long. in addition, we may need to add catalog name and database name to distinguish between tables with the same name.", "url": "https://github.com/apache/flink/pull/12042#discussion_r422441179", "createdAt": "2020-05-09T02:08:29Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "diffHunk": "@@ -654,13 +655,39 @@ public TableResult executeSql(String statement) {\n \t\treturn executeOperation(operations.get(0));\n \t}\n \n+\t@Override\n+\tpublic StatementSet createStatementSet() {\n+\t\treturn new StatementSetImpl(this);\n+\t}\n+\n \t@Override\n \tpublic TableResult executeInternal(List<ModifyOperation> operations) {\n-\t\tif (operations.size() != 1) {\n-\t\t\tthrow new TableException(\"Only one ModifyOperation is supported now.\");\n-\t\t}\n+\t\tList<Transformation<?>> transformations = translate(operations);\n+\t\tString jobName = extractJobName(operations);\n+\t\tPipeline pipeline = execEnv.createPipeline(transformations, tableConfig, jobName);\n+\t\ttry {\n+\t\t\tJobClient jobClient = execEnv.executeAsync(pipeline);\n+\t\t\tTableSchema.Builder builder = TableSchema.builder();\n+\t\t\tObject[] affectedRowCounts = new Long[operations.size()];\n+\t\t\tfor (int i = 0; i < operations.size(); ++i) {\n+\t\t\t\t// if only one operation, field name is 'affected_rowcount', else is 'affected_rowcount_$i'\n+\t\t\t\tString fieldName = \"affected_rowcount\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE1Nzc0Mw=="}, "originalCommit": {"oid": "4e7e6ed50a36257a3e12cf9166d2d53742a148de"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ0Mjk0OA==", "bodyText": "Yes, that will be long. But if we don't show this, after we display some real row counts in the future, it would be impossible for users to understand the meaning.", "url": "https://github.com/apache/flink/pull/12042#discussion_r422442948", "createdAt": "2020-05-09T02:26:44Z", "author": {"login": "KurtYoung"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "diffHunk": "@@ -654,13 +655,39 @@ public TableResult executeSql(String statement) {\n \t\treturn executeOperation(operations.get(0));\n \t}\n \n+\t@Override\n+\tpublic StatementSet createStatementSet() {\n+\t\treturn new StatementSetImpl(this);\n+\t}\n+\n \t@Override\n \tpublic TableResult executeInternal(List<ModifyOperation> operations) {\n-\t\tif (operations.size() != 1) {\n-\t\t\tthrow new TableException(\"Only one ModifyOperation is supported now.\");\n-\t\t}\n+\t\tList<Transformation<?>> transformations = translate(operations);\n+\t\tString jobName = extractJobName(operations);\n+\t\tPipeline pipeline = execEnv.createPipeline(transformations, tableConfig, jobName);\n+\t\ttry {\n+\t\t\tJobClient jobClient = execEnv.executeAsync(pipeline);\n+\t\t\tTableSchema.Builder builder = TableSchema.builder();\n+\t\t\tObject[] affectedRowCounts = new Long[operations.size()];\n+\t\t\tfor (int i = 0; i < operations.size(); ++i) {\n+\t\t\t\t// if only one operation, field name is 'affected_rowcount', else is 'affected_rowcount_$i'\n+\t\t\t\tString fieldName = \"affected_rowcount\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE1Nzc0Mw=="}, "originalCommit": {"oid": "4e7e6ed50a36257a3e12cf9166d2d53742a148de"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NDA0Ng==", "bodyText": "yes, if there are many sinks.\nI will try to extract sink identifier names as the shortest form (also make sure them are unique) to reduce the length of field name", "url": "https://github.com/apache/flink/pull/12042#discussion_r422464046", "createdAt": "2020-05-09T07:30:09Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "diffHunk": "@@ -654,13 +655,39 @@ public TableResult executeSql(String statement) {\n \t\treturn executeOperation(operations.get(0));\n \t}\n \n+\t@Override\n+\tpublic StatementSet createStatementSet() {\n+\t\treturn new StatementSetImpl(this);\n+\t}\n+\n \t@Override\n \tpublic TableResult executeInternal(List<ModifyOperation> operations) {\n-\t\tif (operations.size() != 1) {\n-\t\t\tthrow new TableException(\"Only one ModifyOperation is supported now.\");\n-\t\t}\n+\t\tList<Transformation<?>> transformations = translate(operations);\n+\t\tString jobName = extractJobName(operations);\n+\t\tPipeline pipeline = execEnv.createPipeline(transformations, tableConfig, jobName);\n+\t\ttry {\n+\t\t\tJobClient jobClient = execEnv.executeAsync(pipeline);\n+\t\t\tTableSchema.Builder builder = TableSchema.builder();\n+\t\t\tObject[] affectedRowCounts = new Long[operations.size()];\n+\t\t\tfor (int i = 0; i < operations.size(); ++i) {\n+\t\t\t\t// if only one operation, field name is 'affected_rowcount', else is 'affected_rowcount_$i'\n+\t\t\t\tString fieldName = \"affected_rowcount\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE1Nzc0Mw=="}, "originalCommit": {"oid": "4e7e6ed50a36257a3e12cf9166d2d53742a148de"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDE3MDExOnYy", "diffSide": "RIGHT", "path": "flink-python/pyflink/table/statement_set.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNDo1OTo1MlrOGS4goQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNDo1OTo1MlrOGS4goQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1MzQwOQ==", "bodyText": "Add this class in the pyflink/table/__init__.py file", "url": "https://github.com/apache/flink/pull/12042#discussion_r422453409", "createdAt": "2020-05-09T04:59:52Z", "author": {"login": "hequn8128"}, "path": "flink-python/pyflink/table/statement_set.py", "diffHunk": "@@ -0,0 +1,93 @@\n+################################################################################\n+#  Licensed to the Apache Software Foundation (ASF) under one\n+#  or more contributor license agreements.  See the NOTICE file\n+#  distributed with this work for additional information\n+#  regarding copyright ownership.  The ASF licenses this file\n+#  to you under the Apache License, Version 2.0 (the\n+#  \"License\"); you may not use this file except in compliance\n+#  with the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+# limitations under the License.\n+################################################################################\n+\n+from abc import ABCMeta\n+\n+from pyflink.util.utils import to_j_explain_detail_arr\n+\n+__all__ = ['StatementSet']\n+\n+\n+class StatementSet(object):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95af2c710bc1453b1930b46dbed83708f08fcc7a"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDE3NTk1OnYy", "diffSide": "RIGHT", "path": "flink-python/pyflink/table/statement_set.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNToxMDo1MVrOGS4jlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNToxMDo1MVrOGS4jlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1NDE2NA==", "bodyText": "It seems we don't need this. The class is not an abstract class in the Python side.", "url": "https://github.com/apache/flink/pull/12042#discussion_r422454164", "createdAt": "2020-05-09T05:10:51Z", "author": {"login": "hequn8128"}, "path": "flink-python/pyflink/table/statement_set.py", "diffHunk": "@@ -0,0 +1,93 @@\n+################################################################################\n+#  Licensed to the Apache Software Foundation (ASF) under one\n+#  or more contributor license agreements.  See the NOTICE file\n+#  distributed with this work for additional information\n+#  regarding copyright ownership.  The ASF licenses this file\n+#  to you under the Apache License, Version 2.0 (the\n+#  \"License\"); you may not use this file except in compliance\n+#  with the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+# limitations under the License.\n+################################################################################\n+\n+from abc import ABCMeta\n+\n+from pyflink.util.utils import to_j_explain_detail_arr\n+\n+__all__ = ['StatementSet']\n+\n+\n+class StatementSet(object):\n+    \"\"\"\n+    A StatementSet accepts DML statements or Tables,\n+    the planner can optimize all added statements and Tables together\n+    and then submit as one job.\n+\n+    .. note::\n+    The added statements and Tables will be cleared\n+    when calling the `execute` method.\n+    \"\"\"\n+\n+    __metaclass__ = ABCMeta", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95af2c710bc1453b1930b46dbed83708f08fcc7a"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDQxODY1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxMTo0OToxOFrOGS6ijw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxMTo0OToxOFrOGS6ijw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ4NjY3MQ==", "bodyText": "I would prefer to keep it simple for now, just use the full identify is enough.", "url": "https://github.com/apache/flink/pull/12042#discussion_r422486671", "createdAt": "2020-05-09T11:49:18Z", "author": {"login": "KurtYoung"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "diffHunk": "@@ -894,14 +907,48 @@ private TableResult buildShowResult(String[] objects) {\n \t\t\t\t.build();\n \t}\n \n-\tprivate String extractJobName(Operation operation) {\n-\t\tString tableName;\n-\t\tif (operation instanceof CatalogSinkModifyOperation) {\n-\t\t\ttableName = ((CatalogSinkModifyOperation) operation).getTableIdentifier().toString();\n-\t\t} else {\n-\t\t\tthrow new UnsupportedOperationException(\"Unsupported operation: \" + operation);\n+\t/**\n+\t * extract sink identifier names from {@link ModifyOperation}s.\n+\t *\n+\t * <p>This method will keep the shortest form of an identifier,\n+\t * which should be unique between all identifiers. e.g.\n+\t * cat.db.tbl1, cat.db.tbl2, cat.db1.tbl3, cat.db2.tbl3, cat1.db.tbl4, cat2.db.tbl4\n+\t * the result is\n+\t * tbl1, tbl2, db1.tbl3, db2.tbl3, cat1.db.tbl4, cat2.db.tbl4\n+\t */\n+\tprivate List<String> extractSinkIdentifierNames(List<ModifyOperation> operations) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67032e8cb903a95ec384d6e5e55150dc5c4a8144"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1376, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}