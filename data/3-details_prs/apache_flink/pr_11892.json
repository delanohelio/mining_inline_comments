{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4Mjg3MjM3", "number": 11892, "title": "[FLINK-17112][table] Support DESCRIBE statement in Flink SQL", "bodyText": "What is the purpose of the change\nFLINK-14688 introduces DESCRIBE statement in sql parser, but doesn't implement it in planner side because the TableEnvironment.sqlUpdate returns nothing. Since FLINK-16366 introduces TableEnvironment.executeSql and returns TableResult, we can implement DESCRIBE statement in planner now.\nBrief change log\n\n84b4681 supports DESCRIBE statement in both planners\n\nVerifying this change\nThis change added tests\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-04-24T02:01:35Z", "url": "https://github.com/apache/flink/pull/11892", "merged": true, "mergeCommit": {"oid": "c5c6b7612d0b5492ec4db8233709bf0a1093a1fe"}, "closed": true, "closedAt": "2020-05-12T12:41:17Z", "author": {"login": "docete"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbmdXHAFqTQwMDU5NTc1OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgjmqdAFqTQwOTk5ODI4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTk1NzU5", "url": "https://github.com/apache/flink/pull/11892#pullrequestreview-400595759", "createdAt": "2020-04-27T02:47:20Z", "commit": {"oid": "84b468105ad7674897ed1df0f126d5f078944225"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMjo0NzoyMFrOGMOeZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMzowOTo1MFrOGMO3dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ3MzI1Mw==", "bodyText": "I find the print (through TableResult#print) result of describe xx looks a little strange:\n+--------------------------------+\n|                         result |\n+--------------------------------+\n|  root\n |-- a: INT\n |-- b: S... |\n+--------------------------------+\n1 row in set\n\nUsers have to parse the unstructured result if he/she want to use the result to do sth through  TableResult#collect method.\nHow about we return a structured tableau result, e.g.\n+-------------+---------+-------------+\n|     name    |   type  |   comment   |\n+-------------+---------+-------------+\n|      a      |   INT   |             |\n|      b      |  STRING |             |\n+-------------+---------+-------------+\n 2 rows in set\n\nThis is different from the describe result in SQL client.\nAnther thing we should consider is how to print watermarkSpecs and compute column.\nHow about we add a column named expr to represent watermarkSpecs and compute column.\n\t +-------------+-------------+-------------+-------------+\n\t |     name    |     type    |   comment   |   expr      |\n\t +-------------+-------------+-------------+-------------+\n\t |      a      |    INT      |             |  (NULL)     |\n\t |      b      |    INT      |             |   a + 1     |\n\t |      c      |TIMESTAMP(3) |             |  (NULL)     |\n\t | WATERMARK   |  (NULL)     |             | c AS now()  |\n\t +-------------+-------------+-------------+-------------+", "url": "https://github.com/apache/flink/pull/11892#discussion_r415473253", "createdAt": "2020-04-27T02:47:20Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner/src/main/scala/org/apache/flink/table/api/internal/TableEnvImpl.scala", "diffHunk": "@@ -721,6 +721,15 @@ abstract class TableEnvImpl(\n             dropViewOperation.isIfExists)\n         }\n         TableResultImpl.TABLE_RESULT_OK\n+      case descOperation: DescribeTableOperation =>\n+        val result = catalogManager.getTable(descOperation.getSqlIdentifier)\n+        if (result.isPresent) {\n+          buildShowResult(Array(result.get().getTable.getSchema.toString))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84b468105ad7674897ed1df0f126d5f078944225"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ3OTY2OA==", "bodyText": "cc @twalthr", "url": "https://github.com/apache/flink/pull/11892#discussion_r415479668", "createdAt": "2020-04-27T03:09:50Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner/src/main/scala/org/apache/flink/table/api/internal/TableEnvImpl.scala", "diffHunk": "@@ -721,6 +721,15 @@ abstract class TableEnvImpl(\n             dropViewOperation.isIfExists)\n         }\n         TableResultImpl.TABLE_RESULT_OK\n+      case descOperation: DescribeTableOperation =>\n+        val result = catalogManager.getTable(descOperation.getSqlIdentifier)\n+        if (result.isPresent) {\n+          buildShowResult(Array(result.get().getTable.getSchema.toString))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ3MzI1Mw=="}, "originalCommit": {"oid": "84b468105ad7674897ed1df0f126d5f078944225"}, "originalPosition": 25}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d40ddaae8da56b1b9ebaab3693d8c04c6d6cbb43", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/d40ddaae8da56b1b9ebaab3693d8c04c6d6cbb43", "committedDate": "2020-04-27T09:42:42Z", "message": "fixup"}, "afterCommit": {"oid": "4787eab1bd146defb46b8aa22aa3f94564b73dad", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/4787eab1bd146defb46b8aa22aa3f94564b73dad", "committedDate": "2020-05-08T09:28:52Z", "message": "fixup: adjust the output of describe command"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MTI0NzI5", "url": "https://github.com/apache/flink/pull/11892#pullrequestreview-408124729", "createdAt": "2020-05-08T09:43:03Z", "commit": {"oid": "4787eab1bd146defb46b8aa22aa3f94564b73dad"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwOTo0MzowNFrOGSf3gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwOTo0ODo0NFrOGSgBPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA0OTY2Nw==", "bodyText": "move these code to a separated method ?", "url": "https://github.com/apache/flink/pull/11892#discussion_r422049667", "createdAt": "2020-05-08T09:43:04Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "diffHunk": "@@ -861,23 +865,32 @@ private TableResult executeOperation(Operation operation) {\n \t\t\t\t\tcatalogManager.getTable(describeTableOperation.getSqlIdentifier());\n \t\t\tif (result.isPresent()) {\n \t\t\t\tTableSchema schema = result.get().getTable().getSchema();\n-\t\t\t\tString[][] rows = Stream.concat(\n+\t\t\t\tMap<String, String> fieldToWatermark =\n+\t\t\t\t\tschema.getWatermarkSpecs()\n+\t\t\t\t\t\t.stream()\n+\t\t\t\t\t\t\t.collect(Collectors.toMap(WatermarkSpec::getRowtimeAttribute, WatermarkSpec::getWatermarkExpr));\n+\n+\t\t\t\tMap<String, String> fieldToPrimaryKey = new HashMap<>();\n+\t\t\t\tschema.getPrimaryKey().ifPresent((p) -> {\n+\t\t\t\t\tList<String> columns = p.getColumns();\n+\t\t\t\t\tcolumns.forEach((c) -> fieldToPrimaryKey.put(c, String.format(\"PRI(%s)\", String.join(\",\", columns))));\n+\t\t\t\t});\n+\n+\t\t\t\tString[][] rows =\n \t\t\t\t\tschema.getTableColumns()\n \t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t\t.map((c) -> new String[]{\n+\t\t\t\t\t\t\t.map((c) -> {\n+\t\t\t\t\t\t\t\tLogicalType logicalType = c.getType().getLogicalType();\n+\t\t\t\t\t\t\t\treturn new String[]{\n \t\t\t\t\t\t\t\tc.getName(),\n-\t\t\t\t\t\t\t\tc.getType().getLogicalType().toString(),\n-\t\t\t\t\t\t\t\tc.getExpr().orElse(\"(NULL)\")}),\n-\t\t\t\t\tschema.getWatermarkSpecs()\n-\t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t\t.map((w) -> new String[]{\n-\t\t\t\t\t\t\t\t\"WATERMARK\",\n-\t\t\t\t\t\t\t\t\"(NULL)\",\n-\t\t\t\t\t\t\t\tw.getWatermarkExpr()\n-\t\t\t\t\t\t\t})\n-\t\t\t\t).toArray(String[][]::new);\n-\n-\t\t\t\treturn buildShowResult(new String[]{\"name\", \"type\", \"expr\"}, rows);\n+\t\t\t\t\t\t\t\tStringUtils.removeEnd(logicalType.toString(), \" NOT NULL\"),\n+\t\t\t\t\t\t\t\tlogicalType.isNullable() ? \"true\" : \"false\",\n+\t\t\t\t\t\t\t\tfieldToPrimaryKey.getOrDefault(c.getName(), \"(NULL)\"),\n+\t\t\t\t\t\t\t\tc.getExpr().orElse(\"(NULL)\"),\n+\t\t\t\t\t\t\t\tfieldToWatermark.getOrDefault(c.getName(), \"(NULL)\")};\n+\t\t\t\t\t\t\t}).toArray(String[][]::new);\n+\n+\t\t\t\treturn buildShowResult(new String[]{\"name\", \"type\", \"null\", \"key\", \"compute column\", \"watermark\"}, rows);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4787eab1bd146defb46b8aa22aa3f94564b73dad"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA1MDYwOA==", "bodyText": "ditto", "url": "https://github.com/apache/flink/pull/11892#discussion_r422050608", "createdAt": "2020-05-08T09:45:13Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner/src/main/scala/org/apache/flink/table/api/internal/TableEnvImpl.scala", "diffHunk": "@@ -766,7 +768,29 @@ abstract class TableEnvImpl(\n       case descOperation: DescribeTableOperation =>\n         val result = catalogManager.getTable(descOperation.getSqlIdentifier)\n         if (result.isPresent) {\n-          buildShowResult(Array(result.get().getTable.getSchema.toString))\n+          val schema = result.get.getTable.getSchema\n+          val fieldToWatermark =\n+            schema\n+              .getWatermarkSpecs\n+              .map(w => (w.getRowtimeAttribute, w.getWatermarkExpr)).toMap\n+          val fieldToPrimaryKey = new JHashMap[String, String]()\n+          if (schema.getPrimaryKey.isPresent) {\n+            val columns = schema.getPrimaryKey.get.getColumns.asScala\n+            columns.foreach(c => fieldToPrimaryKey.put(c, s\"PRI(${columns.mkString(\",\")})\"))\n+          }\n+          val data = Array.ofDim[String](schema.getFieldCount, 6)\n+          schema.getTableColumns.asScala.zipWithIndex.foreach {\n+            case (c, i) => {\n+              val logicalType = c.getType.getLogicalType\n+              data(i)(0) = c.getName\n+              data(i)(1) = StringUtils.removeEnd(logicalType.toString, \" NOT NULL\")\n+              data(i)(2) = if (logicalType.isNullable) \"true\" else \"false\"\n+              data(i)(3) = fieldToPrimaryKey.getOrDefault(c.getName, \"(NULL)\")\n+              data(i)(4) = c.getExpr.orElse(\"(NULL)\")\n+              data(i)(5) = fieldToWatermark.getOrDefault(c.getName, \"(NULL)\")\n+            }\n+          }\n+          buildShowResult(Array(\"name\", \"type\", \"null\", \"key\", \"compute column\", \"watermark\"), data)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4787eab1bd146defb46b8aa22aa3f94564b73dad"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA1MTc4Nw==", "bodyText": "we should use null instead of (NULL), (NULL) just a display form defined in PrintUtils.", "url": "https://github.com/apache/flink/pull/11892#discussion_r422051787", "createdAt": "2020-05-08T09:47:56Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "diffHunk": "@@ -861,23 +865,32 @@ private TableResult executeOperation(Operation operation) {\n \t\t\t\t\tcatalogManager.getTable(describeTableOperation.getSqlIdentifier());\n \t\t\tif (result.isPresent()) {\n \t\t\t\tTableSchema schema = result.get().getTable().getSchema();\n-\t\t\t\tString[][] rows = Stream.concat(\n+\t\t\t\tMap<String, String> fieldToWatermark =\n+\t\t\t\t\tschema.getWatermarkSpecs()\n+\t\t\t\t\t\t.stream()\n+\t\t\t\t\t\t\t.collect(Collectors.toMap(WatermarkSpec::getRowtimeAttribute, WatermarkSpec::getWatermarkExpr));\n+\n+\t\t\t\tMap<String, String> fieldToPrimaryKey = new HashMap<>();\n+\t\t\t\tschema.getPrimaryKey().ifPresent((p) -> {\n+\t\t\t\t\tList<String> columns = p.getColumns();\n+\t\t\t\t\tcolumns.forEach((c) -> fieldToPrimaryKey.put(c, String.format(\"PRI(%s)\", String.join(\",\", columns))));\n+\t\t\t\t});\n+\n+\t\t\t\tString[][] rows =\n \t\t\t\t\tschema.getTableColumns()\n \t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t\t.map((c) -> new String[]{\n+\t\t\t\t\t\t\t.map((c) -> {\n+\t\t\t\t\t\t\t\tLogicalType logicalType = c.getType().getLogicalType();\n+\t\t\t\t\t\t\t\treturn new String[]{\n \t\t\t\t\t\t\t\tc.getName(),\n-\t\t\t\t\t\t\t\tc.getType().getLogicalType().toString(),\n-\t\t\t\t\t\t\t\tc.getExpr().orElse(\"(NULL)\")}),\n-\t\t\t\t\tschema.getWatermarkSpecs()\n-\t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t\t.map((w) -> new String[]{\n-\t\t\t\t\t\t\t\t\"WATERMARK\",\n-\t\t\t\t\t\t\t\t\"(NULL)\",\n-\t\t\t\t\t\t\t\tw.getWatermarkExpr()\n-\t\t\t\t\t\t\t})\n-\t\t\t\t).toArray(String[][]::new);\n-\n-\t\t\t\treturn buildShowResult(new String[]{\"name\", \"type\", \"expr\"}, rows);\n+\t\t\t\t\t\t\t\tStringUtils.removeEnd(logicalType.toString(), \" NOT NULL\"),\n+\t\t\t\t\t\t\t\tlogicalType.isNullable() ? \"true\" : \"false\",\n+\t\t\t\t\t\t\t\tfieldToPrimaryKey.getOrDefault(c.getName(), \"(NULL)\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4787eab1bd146defb46b8aa22aa3f94564b73dad"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA1MjE1OA==", "bodyText": "should be boolean type instead of String", "url": "https://github.com/apache/flink/pull/11892#discussion_r422052158", "createdAt": "2020-05-08T09:48:44Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "diffHunk": "@@ -861,23 +865,32 @@ private TableResult executeOperation(Operation operation) {\n \t\t\t\t\tcatalogManager.getTable(describeTableOperation.getSqlIdentifier());\n \t\t\tif (result.isPresent()) {\n \t\t\t\tTableSchema schema = result.get().getTable().getSchema();\n-\t\t\t\tString[][] rows = Stream.concat(\n+\t\t\t\tMap<String, String> fieldToWatermark =\n+\t\t\t\t\tschema.getWatermarkSpecs()\n+\t\t\t\t\t\t.stream()\n+\t\t\t\t\t\t\t.collect(Collectors.toMap(WatermarkSpec::getRowtimeAttribute, WatermarkSpec::getWatermarkExpr));\n+\n+\t\t\t\tMap<String, String> fieldToPrimaryKey = new HashMap<>();\n+\t\t\t\tschema.getPrimaryKey().ifPresent((p) -> {\n+\t\t\t\t\tList<String> columns = p.getColumns();\n+\t\t\t\t\tcolumns.forEach((c) -> fieldToPrimaryKey.put(c, String.format(\"PRI(%s)\", String.join(\",\", columns))));\n+\t\t\t\t});\n+\n+\t\t\t\tString[][] rows =\n \t\t\t\t\tschema.getTableColumns()\n \t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t\t.map((c) -> new String[]{\n+\t\t\t\t\t\t\t.map((c) -> {\n+\t\t\t\t\t\t\t\tLogicalType logicalType = c.getType().getLogicalType();\n+\t\t\t\t\t\t\t\treturn new String[]{\n \t\t\t\t\t\t\t\tc.getName(),\n-\t\t\t\t\t\t\t\tc.getType().getLogicalType().toString(),\n-\t\t\t\t\t\t\t\tc.getExpr().orElse(\"(NULL)\")}),\n-\t\t\t\t\tschema.getWatermarkSpecs()\n-\t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t\t.map((w) -> new String[]{\n-\t\t\t\t\t\t\t\t\"WATERMARK\",\n-\t\t\t\t\t\t\t\t\"(NULL)\",\n-\t\t\t\t\t\t\t\tw.getWatermarkExpr()\n-\t\t\t\t\t\t\t})\n-\t\t\t\t).toArray(String[][]::new);\n-\n-\t\t\t\treturn buildShowResult(new String[]{\"name\", \"type\", \"expr\"}, rows);\n+\t\t\t\t\t\t\t\tStringUtils.removeEnd(logicalType.toString(), \" NOT NULL\"),\n+\t\t\t\t\t\t\t\tlogicalType.isNullable() ? \"true\" : \"false\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4787eab1bd146defb46b8aa22aa3f94564b73dad"}, "originalPosition": 67}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7d409ad4e0c06600dc3dc7d2a9715c11215f923a", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/7d409ad4e0c06600dc3dc7d2a9715c11215f923a", "committedDate": "2020-05-08T11:49:54Z", "message": "fixup: address godfrey's comments"}, "afterCommit": {"oid": "4fca4d498b4fe7cab7da0537c8010298b1e0aa22", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/4fca4d498b4fe7cab7da0537c8010298b1e0aa22", "committedDate": "2020-05-09T03:32:24Z", "message": "fixup: add primary key in describe tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjE3MTE5", "url": "https://github.com/apache/flink/pull/11892#pullrequestreview-408617119", "createdAt": "2020-05-09T06:19:10Z", "commit": {"oid": "4fca4d498b4fe7cab7da0537c8010298b1e0aa22"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNjoxOToxMFrOGS40Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNjozMDoyMVrOGS43jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1ODQxMQ==", "bodyText": "please add all supported types here", "url": "https://github.com/apache/flink/pull/11892#discussion_r422458411", "createdAt": "2020-05-09T06:19:10Z", "author": {"login": "KurtYoung"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/api/TableEnvironmentTest.scala", "diffHunk": "@@ -985,6 +987,67 @@ class TableEnvironmentTest {\n     }\n   }\n \n+  @Test\n+  def testDescribeTableOrView(): Unit = {\n+    val sourceDDL =\n+      \"\"\"\n+        |CREATE TABLE T1(\n+        |  a int not null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fca4d498b4fe7cab7da0537c8010298b1e0aa22"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1OTI3Nw==", "bodyText": "use String[][]? The fields are all strings", "url": "https://github.com/apache/flink/pull/11892#discussion_r422459277", "createdAt": "2020-05-09T06:30:21Z", "author": {"login": "KurtYoung"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "diffHunk": "@@ -929,16 +935,69 @@ private TableResult executeOperation(Operation operation) {\n \t\t\t\t\t.setPrintStyle(TableResultImpl.PrintStyle.RAW_CONTENT)\n \t\t\t\t\t.build();\n \n+\t\t} else if (operation instanceof DescribeTableOperation) {\n+\t\t\tDescribeTableOperation describeTableOperation = (DescribeTableOperation) operation;\n+\t\t\tOptional<CatalogManager.TableLookupResult> result =\n+\t\t\t\t\tcatalogManager.getTable(describeTableOperation.getSqlIdentifier());\n+\t\t\tif (result.isPresent()) {\n+\t\t\t\treturn buildDescribeResult(result.get().getTable().getSchema());\n+\t\t\t} else {\n+\t\t\t\tthrow new ValidationException(String.format(\n+\t\t\t\t\t\t\"Tables or views with the identifier '%s' doesn't exist\",\n+\t\t\t\t\t\tdescribeTableOperation.getSqlIdentifier().asSummaryString()));\n+\t\t\t}\n \t\t} else {\n \t\t\tthrow new TableException(UNSUPPORTED_QUERY_IN_EXECUTE_SQL_MSG);\n \t\t}\n \t}\n \n \tprivate TableResult buildShowResult(String[] objects) {\n+\t\treturn buildResult(\n+\t\t\tnew String[]{\"result\"},\n+\t\t\tnew DataType[]{DataTypes.STRING()},\n+\t\t\tArrays.stream(objects).map((c) -> new String[]{c}).toArray(String[][]::new));\n+\t}\n+\n+\tprivate TableResult buildDescribeResult(TableSchema schema) {\n+\t\tMap<String, String> fieldToWatermark =\n+\t\t\t\tschema.getWatermarkSpecs()\n+\t\t\t\t\t\t.stream()\n+\t\t\t\t\t\t.collect(Collectors.toMap(WatermarkSpec::getRowtimeAttribute, WatermarkSpec::getWatermarkExpr));\n+\n+\t\tMap<String, String> fieldToPrimaryKey = new HashMap<>();\n+\t\tschema.getPrimaryKey().ifPresent((p) -> {\n+\t\t\tList<String> columns = p.getColumns();\n+\t\t\tcolumns.forEach((c) -> fieldToPrimaryKey.put(c, String.format(\"PRI(%s)\", String.join(\",\", columns))));\n+\t\t});\n+\n+\t\tObject[][] rows =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fca4d498b4fe7cab7da0537c8010298b1e0aa22"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MTc1NDU0", "url": "https://github.com/apache/flink/pull/11892#pullrequestreview-409175454", "createdAt": "2020-05-11T13:33:34Z", "commit": {"oid": "b932462436bbab0e9c220203b374a9290ed7e1a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMzozMzozNFrOGTcchw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMzozMzozNFrOGTcchw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzA0MjE4Mw==", "bodyText": "computed column", "url": "https://github.com/apache/flink/pull/11892#discussion_r423042183", "createdAt": "2020-05-11T13:33:34Z", "author": {"login": "KurtYoung"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "diffHunk": "@@ -929,16 +935,69 @@ private TableResult executeOperation(Operation operation) {\n \t\t\t\t\t.setPrintStyle(TableResultImpl.PrintStyle.RAW_CONTENT)\n \t\t\t\t\t.build();\n \n+\t\t} else if (operation instanceof DescribeTableOperation) {\n+\t\t\tDescribeTableOperation describeTableOperation = (DescribeTableOperation) operation;\n+\t\t\tOptional<CatalogManager.TableLookupResult> result =\n+\t\t\t\t\tcatalogManager.getTable(describeTableOperation.getSqlIdentifier());\n+\t\t\tif (result.isPresent()) {\n+\t\t\t\treturn buildDescribeResult(result.get().getTable().getSchema());\n+\t\t\t} else {\n+\t\t\t\tthrow new ValidationException(String.format(\n+\t\t\t\t\t\t\"Tables or views with the identifier '%s' doesn't exist\",\n+\t\t\t\t\t\tdescribeTableOperation.getSqlIdentifier().asSummaryString()));\n+\t\t\t}\n \t\t} else {\n \t\t\tthrow new TableException(UNSUPPORTED_QUERY_IN_EXECUTE_SQL_MSG);\n \t\t}\n \t}\n \n \tprivate TableResult buildShowResult(String[] objects) {\n+\t\treturn buildResult(\n+\t\t\tnew String[]{\"result\"},\n+\t\t\tnew DataType[]{DataTypes.STRING()},\n+\t\t\tArrays.stream(objects).map((c) -> new String[]{c}).toArray(String[][]::new));\n+\t}\n+\n+\tprivate TableResult buildDescribeResult(TableSchema schema) {\n+\t\tMap<String, String> fieldToWatermark =\n+\t\t\t\tschema.getWatermarkSpecs()\n+\t\t\t\t\t\t.stream()\n+\t\t\t\t\t\t.collect(Collectors.toMap(WatermarkSpec::getRowtimeAttribute, WatermarkSpec::getWatermarkExpr));\n+\n+\t\tMap<String, String> fieldToPrimaryKey = new HashMap<>();\n+\t\tschema.getPrimaryKey().ifPresent((p) -> {\n+\t\t\tList<String> columns = p.getColumns();\n+\t\t\tcolumns.forEach((c) -> fieldToPrimaryKey.put(c, String.format(\"PRI(%s)\", String.join(\",\", columns))));\n+\t\t});\n+\n+\t\tObject[][] rows =\n+\t\t\tschema.getTableColumns()\n+\t\t\t\t.stream()\n+\t\t\t\t.map((c) -> {\n+\t\t\t\t\tLogicalType logicalType = c.getType().getLogicalType();\n+\t\t\t\t\treturn new Object[]{\n+\t\t\t\t\t\tc.getName(),\n+\t\t\t\t\t\tStringUtils.removeEnd(logicalType.toString(), \" NOT NULL\"),\n+\t\t\t\t\t\tlogicalType.isNullable(),\n+\t\t\t\t\t\tfieldToPrimaryKey.getOrDefault(c.getName(), null),\n+\t\t\t\t\t\tc.getExpr().orElse(null),\n+\t\t\t\t\t\tfieldToWatermark.getOrDefault(c.getName(), null)};\n+\t\t\t\t}).toArray(Object[][]::new);\n+\n+\t\treturn buildResult(\n+\t\t\tnew String[]{\"name\", \"type\", \"null\", \"key\", \"compute column\", \"watermark\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b932462436bbab0e9c220203b374a9290ed7e1a4"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ec5aaa229d143c0a1cdf4f5986f4fb0d79edf6e", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/5ec5aaa229d143c0a1cdf4f5986f4fb0d79edf6e", "committedDate": "2020-05-12T02:11:41Z", "message": "[FLINK-17112][table] Support DESCRIBE statement in Flink SQL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53d66a4b11534d136f479920b032281d59184ba4", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/53d66a4b11534d136f479920b032281d59184ba4", "committedDate": "2020-05-12T02:11:41Z", "message": "fixup: re-format output of describe command"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "735c655df58b734ce270dd805024fad0a89a49a9", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/735c655df58b734ce270dd805024fad0a89a49a9", "committedDate": "2020-05-12T02:11:41Z", "message": "fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68964100feffb862e9136f67f484fcf76221b3c0", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/68964100feffb862e9136f67f484fcf76221b3c0", "committedDate": "2020-05-12T02:11:42Z", "message": "fixup: adjust the output of describe command"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "079288ef22b76f7a8ae25a9de4bcb239f110512e", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/079288ef22b76f7a8ae25a9de4bcb239f110512e", "committedDate": "2020-05-12T02:11:42Z", "message": "fixup: add todo for primary key tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7e1fa1b703ee5e59759e31ff5bd93b9ec04b579", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/c7e1fa1b703ee5e59759e31ff5bd93b9ec04b579", "committedDate": "2020-05-12T02:11:42Z", "message": "fixup: address godfrey's comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b4d16003481127fc06f274bb019f15da93692f8", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/5b4d16003481127fc06f274bb019f15da93692f8", "committedDate": "2020-05-12T02:11:42Z", "message": "fixup: add primary key in describe tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ec240240c394bd8c27d8bf427ad98f33d7f308c", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/3ec240240c394bd8c27d8bf427ad98f33d7f308c", "committedDate": "2020-05-12T02:11:42Z", "message": "fixup: describe more data types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d3294531aab7b363f061b4a9ec1ce12dbc85b52", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/0d3294531aab7b363f061b4a9ec1ce12dbc85b52", "committedDate": "2020-05-12T02:15:13Z", "message": "fixup: checkstyle and typo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b932462436bbab0e9c220203b374a9290ed7e1a4", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/b932462436bbab0e9c220203b374a9290ed7e1a4", "committedDate": "2020-05-11T12:33:18Z", "message": "fixup: describe more data types"}, "afterCommit": {"oid": "0d3294531aab7b363f061b4a9ec1ce12dbc85b52", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/0d3294531aab7b363f061b4a9ec1ce12dbc85b52", "committedDate": "2020-05-12T02:15:13Z", "message": "fixup: checkstyle and typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5257901a2234044b3ae2f3db4aff6fdd3bef5bc", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/b5257901a2234044b3ae2f3db4aff6fdd3bef5bc", "committedDate": "2020-05-12T03:25:39Z", "message": "presentation style: (NULL) -> empty string"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa520bad85e323c4859591c99f41dd8f4cd04242", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/aa520bad85e323c4859591c99f41dd8f4cd04242", "committedDate": "2020-05-12T03:36:24Z", "message": "Revert \"presentation style: (NULL) -> empty string\"\n\nThis reverts commit b5257901a2234044b3ae2f3db4aff6fdd3bef5bc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49c454b699921372eb9a7aef0f8c3a38cfa2bf81", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/49c454b699921372eb9a7aef0f8c3a38cfa2bf81", "committedDate": "2020-05-12T04:22:04Z", "message": "fixup: Print null column of key/computed column/watermark as empty in describe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c471d4fbeba8cd62c864701c66b324e23fa55d5b", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/c471d4fbeba8cd62c864701c66b324e23fa55d5b", "committedDate": "2020-05-12T04:23:55Z", "message": "fixup: checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d857d271ec18e649d794bea122366220825caf68", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/d857d271ec18e649d794bea122366220825caf68", "committedDate": "2020-05-12T04:27:31Z", "message": "fixup: remove useless code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NjkyMjY0", "url": "https://github.com/apache/flink/pull/11892#pullrequestreview-409692264", "createdAt": "2020-05-12T04:36:03Z", "commit": {"oid": "d857d271ec18e649d794bea122366220825caf68"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNDozNjowNFrOGT1v7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNDozNjowNFrOGT1v7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1Njc0OQ==", "bodyText": "String.join(\", \", columns) instead of String.join(\",\", columns) (with an extra space after the comma) seems to be more standard in formatting.", "url": "https://github.com/apache/flink/pull/11892#discussion_r423456749", "createdAt": "2020-05-12T04:36:04Z", "author": {"login": "tsreaper"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableEnvironmentImpl.java", "diffHunk": "@@ -974,10 +991,53 @@ private TableResult executeOperation(Operation operation) {\n \t}\n \n \tprivate TableResult buildShowResult(String[] objects) {\n+\t\treturn buildResult(\n+\t\t\tnew String[]{\"result\"},\n+\t\t\tnew DataType[]{DataTypes.STRING()},\n+\t\t\tArrays.stream(objects).map((c) -> new String[]{c}).toArray(String[][]::new));\n+\t}\n+\n+\tprivate TableResult buildDescribeResult(TableSchema schema) {\n+\t\tMap<String, String> fieldToWatermark =\n+\t\t\t\tschema.getWatermarkSpecs()\n+\t\t\t\t\t\t.stream()\n+\t\t\t\t\t\t.collect(Collectors.toMap(WatermarkSpec::getRowtimeAttribute, WatermarkSpec::getWatermarkExpr));\n+\n+\t\tMap<String, String> fieldToPrimaryKey = new HashMap<>();\n+\t\tschema.getPrimaryKey().ifPresent((p) -> {\n+\t\t\tList<String> columns = p.getColumns();\n+\t\t\tcolumns.forEach((c) -> fieldToPrimaryKey.put(c, String.format(\"PRI(%s)\", String.join(\",\", columns))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d857d271ec18e649d794bea122366220825caf68"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NzAzMTY5", "url": "https://github.com/apache/flink/pull/11892#pullrequestreview-409703169", "createdAt": "2020-05-12T05:13:32Z", "commit": {"oid": "49c454b699921372eb9a7aef0f8c3a38cfa2bf81"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxMzozM1rOGT2U2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNToxODozOVrOGT2aUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2NjIwMg==", "bodyText": "we only need one constructor,  which is called in PrintStyle", "url": "https://github.com/apache/flink/pull/11892#discussion_r423466202", "createdAt": "2020-05-12T05:13:33Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableResultImpl.java", "diffHunk": "@@ -217,15 +238,30 @@ static PrintStyle rawContent() {\n \t * print the result schema and content as tableau form.\n \t */\n \tprivate static final class TableauStyle implements PrintStyle {\n+\n \t\tprivate final int maxColumnWidth;\n+\t\tprivate final String nullColumnStyle;\n \n \t\tprivate TableauStyle(int maxColumnWidth) {\n+\t\t\tthis(maxColumnWidth, PrintUtils.NULL_COLUMN);\n+\t\t}\n+\n+\t\tprivate TableauStyle(String nullColumn) {\n+\t\t\tthis(PrintUtils.MAX_COLUMN_WIDTH, nullColumn);\n+\t\t}\n+\n+\t\tprivate TableauStyle(int maxColumnWidth, String nullColumnStyle) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49c454b699921372eb9a7aef0f8c3a38cfa2bf81"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2NjY0Mg==", "bodyText": "only this method is enough ?", "url": "https://github.com/apache/flink/pull/11892#discussion_r423466642", "createdAt": "2020-05-12T05:15:10Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableResultImpl.java", "diffHunk": "@@ -203,6 +205,25 @@ static PrintStyle tableau(int maxColumnWidth) {\n \t\t\treturn new TableauStyle(maxColumnWidth);\n \t\t}\n \n+\t\t/**\n+\t\t * Create a tableau print style with given null column style,\n+\t\t * which prints the result schema and content as tableau form.\n+\t\t */\n+\t\tstatic PrintStyle tableau(String nullColumnStyle) {\n+\t\t\tPreconditions.checkNotNull(nullColumnStyle, \"nullColumnStyle should not be null\");\n+\t\t\treturn new TableauStyle(nullColumnStyle);\n+\t\t}\n+\n+\t\t/**\n+\t\t * Create a tableau print style with given max column width and null column style,\n+\t\t * which prints the result schema and content as tableau form.\n+\t\t */\n+\t\tstatic PrintStyle tableau(int maxColumnWidth, String nullColumnStyle) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49c454b699921372eb9a7aef0f8c3a38cfa2bf81"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2NzYwMA==", "bodyText": "rename to nullColumnPlaceholder ?", "url": "https://github.com/apache/flink/pull/11892#discussion_r423467600", "createdAt": "2020-05-12T05:18:39Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/internal/TableResultImpl.java", "diffHunk": "@@ -217,15 +238,30 @@ static PrintStyle rawContent() {\n \t * print the result schema and content as tableau form.\n \t */\n \tprivate static final class TableauStyle implements PrintStyle {\n+\n \t\tprivate final int maxColumnWidth;\n+\t\tprivate final String nullColumnStyle;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49c454b699921372eb9a7aef0f8c3a38cfa2bf81"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b75d7fcd9cbc9b2c3f925920b1eeb1e4d8fd576", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/1b75d7fcd9cbc9b2c3f925920b1eeb1e4d8fd576", "committedDate": "2020-05-12T07:08:58Z", "message": "fixup: address godfrey & caizhi's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5OTk4Mjgy", "url": "https://github.com/apache/flink/pull/11892#pullrequestreview-409998282", "createdAt": "2020-05-12T12:40:34Z", "commit": {"oid": "1b75d7fcd9cbc9b2c3f925920b1eeb1e4d8fd576"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4851, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}