{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5MzA5MjU1", "number": 13325, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjoyMzo1NFrOEgQbow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjozOTo1NVrOEgQq-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjU5MTA3OnYy", "diffSide": "RIGHT", "path": "flink-python/pyflink/table/expressions.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjoyMzo1NFrOHNBHyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjoyMzo1NFrOHNBHyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxMTkxMw==", "bodyText": "Can be replaced by pyflink.util.utils.load_java_class()?", "url": "https://github.com/apache/flink/pull/13325#discussion_r483411913", "createdAt": "2020-09-04T06:23:54Z", "author": {"login": "WeiZhong94"}, "path": "flink-python/pyflink/table/expressions.py", "diffHunk": "@@ -538,9 +538,44 @@ def call(f: Union[str, UserDefinedFunctionWrapper], *args) -> Expression:\n     :param args: parameters of the user-defined function.\n     \"\"\"\n     gateway = get_gateway()\n-    return Expression(gateway.jvm.Expressions.call(\n-        f if isinstance(f, str) else f.java_user_defined_function(),\n-        to_jarray(gateway.jvm.Object, [_get_java_expression(arg) for arg in args])))\n+\n+    if isinstance(f, str):\n+        return Expression(gateway.jvm.Expressions.call(\n+            f, to_jarray(gateway.jvm.Object, [_get_java_expression(arg) for arg in args])))\n+\n+    def get_function_definition(f):\n+        if isinstance(f, UserDefinedTableFunctionWrapper):\n+            \"\"\"\n+            TypeInference was not supported for TableFunction in the old planner. Use\n+            TableFunctionDefinition to work around this issue.\n+            \"\"\"\n+            j_result_types = to_jarray(gateway.jvm.TypeInformation,\n+                                       [_to_java_type(i) for i in f._result_types])\n+            j_result_type = gateway.jvm.org.apache.flink.api.java.typeutils.RowTypeInfo(\n+                j_result_types)\n+            return gateway.jvm.org.apache.flink.table.functions.TableFunctionDefinition(\n+                'f', f.java_user_defined_function(), j_result_type)\n+        else:\n+            return f.java_user_defined_function()\n+\n+    expressions_clz = gateway.jvm.Class \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26abf1ecf936d0232c6d49c0bdd4fe3beae6252e"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjYzMDM0OnYy", "diffSide": "RIGHT", "path": "flink-python/pyflink/table/udf.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjozOTo1NVrOHNBfPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjozOTo1NVrOHNBfPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxNzkxNg==", "bodyText": "add a type hint?", "url": "https://github.com/apache/flink/pull/13325#discussion_r483417916", "createdAt": "2020-09-04T06:39:55Z", "author": {"login": "WeiZhong94"}, "path": "flink-python/pyflink/table/udf.py", "diffHunk": "@@ -184,6 +184,10 @@ def __init__(self, func, input_types, deterministic=None, name=None):\n         self._deterministic = deterministic if deterministic is not None else (\n             func.is_deterministic() if isinstance(func, UserDefinedFunction) else True)\n \n+    def __call__(self, *args):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26abf1ecf936d0232c6d49c0bdd4fe3beae6252e"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 429, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}