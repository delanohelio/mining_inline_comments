{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MTg1NjU5", "number": 11170, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToyNjo0OVrODiSx4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1OTozMVrODiTUEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjg1ODU5OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/expressions/resolver/ExpressionResolver.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToyNjo0OVrOFtdaqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMToyNjo0OVrOFtdaqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxMjIwMg==", "bodyText": "How about we integrate the identifierParser into FunctionLookup. DataTypeFactory has also a method that takes (String). I would like to reduce the number of instances that we need to pass around.", "url": "https://github.com/apache/flink/pull/11170#discussion_r383212202", "createdAt": "2020-02-24T11:26:49Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/expressions/resolver/ExpressionResolver.java", "diffHunk": "@@ -382,11 +395,13 @@ public CallExpression get(ResolvedExpression composite, ValueLiteralExpression k\n \t\tprivate ExpressionResolverBuilder(\n \t\t\t\tQueryOperation[] queryOperations,\n \t\t\t\tTableConfig config,\n+\t\t\t\tFunction<String, UnresolvedIdentifier> identifierParser,\n \t\t\t\tTableReferenceLookup tableCatalog,\n \t\t\t\tFunctionLookup functionLookup,\n \t\t\t\tDataTypeFactory typeFactory) {\n \t\t\tthis.config = config;\n \t\t\tthis.queryOperations = Arrays.asList(queryOperations);\n+\t\t\tthis.identifierParser = identifierParser;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4eef40b743be60e236da67edb9b1f5fdd4436d3"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjkyMjk1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/calcite/FlinkRelBuilder.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1MToyNVrOFteA6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1MToyNVrOFteA6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyMTk5Mw==", "bodyText": "remove local variable", "url": "https://github.com/apache/flink/pull/11170#discussion_r383221993", "createdAt": "2020-02-24T11:51:25Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/calcite/FlinkRelBuilder.scala", "diffHunk": "@@ -59,7 +59,7 @@ class FlinkRelBuilder(\n \n   private val toRelNodeConverter = {\n     val functionCatalog = context.unwrap(classOf[FlinkContext]).getFunctionCatalog", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4eef40b743be60e236da67edb9b1f5fdd4436d3"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjkzNDYxOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-scala/src/main/scala/org/apache/flink/table/api/expressionDsl.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1NTo0MFrOFteH5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1NTo0MFrOFteH5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyMzc4MA==", "bodyText": "remove \"external\"?", "url": "https://github.com/apache/flink/pull/11170#discussion_r383223780", "createdAt": "2020-02-24T11:55:40Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-api-scala/src/main/scala/org/apache/flink/table/api/expressionDsl.scala", "diffHunk": "@@ -1257,6 +1257,38 @@ trait ImplicitExpressionConversions {\n     convertArray(array)\n   }\n \n+  // ----------------------------------------------------------------------------------------------\n+  // Function calls\n+  // ----------------------------------------------------------------------------------------------\n+\n+  /**\n+   * A call to a function that will be looked up in a catalog. There are two kinds of functions:\n+   *\n+   *  - System functions - which are identified with one part names\n+   *  - Catalog functions - which are identified always with three parts names\n+   *    (catalog, database, function)\n+   *\n+   * Moreover each function can either be a temporary function or permanent one\n+   * (which is stored in an external catalog).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13785504108e6e6373e30df43d245a6b47bb1ce"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjk0MjgzOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-scala/src/main/scala/org/apache/flink/table/api/expressionDsl.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1ODoxOVrOFteMjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1ODoxOVrOFteMjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyNDk3Mw==", "bodyText": "Based on those two properties, the resolution order for looking up a function based on the provided path is as follows:", "url": "https://github.com/apache/flink/pull/11170#discussion_r383224973", "createdAt": "2020-02-24T11:58:19Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-api-scala/src/main/scala/org/apache/flink/table/api/expressionDsl.scala", "diffHunk": "@@ -1257,6 +1257,38 @@ trait ImplicitExpressionConversions {\n     convertArray(array)\n   }\n \n+  // ----------------------------------------------------------------------------------------------\n+  // Function calls\n+  // ----------------------------------------------------------------------------------------------\n+\n+  /**\n+   * A call to a function that will be looked up in a catalog. There are two kinds of functions:\n+   *\n+   *  - System functions - which are identified with one part names\n+   *  - Catalog functions - which are identified always with three parts names\n+   *    (catalog, database, function)\n+   *\n+   * Moreover each function can either be a temporary function or permanent one\n+   * (which is stored in an external catalog).\n+   *\n+   * Based on that two properties the resolution order for looking up a function based on\n+   * the provided `functionName` is following:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13785504108e6e6373e30df43d245a6b47bb1ce"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjk0MzQ1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-scala/src/main/scala/org/apache/flink/table/api/expressionDsl.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1ODozMVrOFteM6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1ODozMVrOFteM6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyNTA2NA==", "bodyText": "nit: remove double empty line", "url": "https://github.com/apache/flink/pull/11170#discussion_r383225064", "createdAt": "2020-02-24T11:58:31Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-api-scala/src/main/scala/org/apache/flink/table/api/expressionDsl.scala", "diffHunk": "@@ -1257,6 +1257,38 @@ trait ImplicitExpressionConversions {\n     convertArray(array)\n   }\n \n+  // ----------------------------------------------------------------------------------------------\n+  // Function calls\n+  // ----------------------------------------------------------------------------------------------\n+\n+  /**\n+   * A call to a function that will be looked up in a catalog. There are two kinds of functions:\n+   *\n+   *  - System functions - which are identified with one part names\n+   *  - Catalog functions - which are identified always with three parts names\n+   *    (catalog, database, function)\n+   *\n+   * Moreover each function can either be a temporary function or permanent one\n+   * (which is stored in an external catalog).\n+   *\n+   * Based on that two properties the resolution order for looking up a function based on\n+   * the provided `functionName` is following:\n+   *\n+   *  - Temporary system function\n+   *  - System function\n+   *  - Temporary catalog function\n+   *  - Catalog function\n+   *\n+   *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13785504108e6e6373e30df43d245a6b47bb1ce"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mjk0NjA4OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-scala/src/main/scala/org/apache/flink/table/api/expressionDsl.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1OTozMVrOFteOjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMjoyMTo1MFrOFtew2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyNTQ4NA==", "bodyText": "Should we also offer call(function: FunctionDefinition, ...) or at least call(function: UserDefinedFunction, ...)?", "url": "https://github.com/apache/flink/pull/11170#discussion_r383225484", "createdAt": "2020-02-24T11:59:31Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-api-scala/src/main/scala/org/apache/flink/table/api/expressionDsl.scala", "diffHunk": "@@ -1257,6 +1257,38 @@ trait ImplicitExpressionConversions {\n     convertArray(array)\n   }\n \n+  // ----------------------------------------------------------------------------------------------\n+  // Function calls\n+  // ----------------------------------------------------------------------------------------------\n+\n+  /**\n+   * A call to a function that will be looked up in a catalog. There are two kinds of functions:\n+   *\n+   *  - System functions - which are identified with one part names\n+   *  - Catalog functions - which are identified always with three parts names\n+   *    (catalog, database, function)\n+   *\n+   * Moreover each function can either be a temporary function or permanent one\n+   * (which is stored in an external catalog).\n+   *\n+   * Based on that two properties the resolution order for looking up a function based on\n+   * the provided `functionName` is following:\n+   *\n+   *  - Temporary system function\n+   *  - System function\n+   *  - Temporary catalog function\n+   *  - Catalog function\n+   *\n+   *\n+   * @see TableEnvironment#useCatalog(String)\n+   * @see TableEnvironment#useDatabase(String)\n+   * @see TableEnvironment#createTemporaryFunction\n+   * @see TableEnvironment#createTemporarySystemFunction\n+   */\n+  def call(path: String, params: Expression*): Expression = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e13785504108e6e6373e30df43d245a6b47bb1ce"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIzNDI2Ng==", "bodyText": "Yes, it is already part of the next PR. In this one I wanted to solve only the parsing issues. I needed to add this one method to fix tests.", "url": "https://github.com/apache/flink/pull/11170#discussion_r383234266", "createdAt": "2020-02-24T12:21:50Z", "author": {"login": "dawidwys"}, "path": "flink-table/flink-table-api-scala/src/main/scala/org/apache/flink/table/api/expressionDsl.scala", "diffHunk": "@@ -1257,6 +1257,38 @@ trait ImplicitExpressionConversions {\n     convertArray(array)\n   }\n \n+  // ----------------------------------------------------------------------------------------------\n+  // Function calls\n+  // ----------------------------------------------------------------------------------------------\n+\n+  /**\n+   * A call to a function that will be looked up in a catalog. There are two kinds of functions:\n+   *\n+   *  - System functions - which are identified with one part names\n+   *  - Catalog functions - which are identified always with three parts names\n+   *    (catalog, database, function)\n+   *\n+   * Moreover each function can either be a temporary function or permanent one\n+   * (which is stored in an external catalog).\n+   *\n+   * Based on that two properties the resolution order for looking up a function based on\n+   * the provided `functionName` is following:\n+   *\n+   *  - Temporary system function\n+   *  - System function\n+   *  - Temporary catalog function\n+   *  - Catalog function\n+   *\n+   *\n+   * @see TableEnvironment#useCatalog(String)\n+   * @see TableEnvironment#useDatabase(String)\n+   * @see TableEnvironment#createTemporaryFunction\n+   * @see TableEnvironment#createTemporarySystemFunction\n+   */\n+  def call(path: String, params: Expression*): Expression = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyNTQ4NA=="}, "originalCommit": {"oid": "e13785504108e6e6373e30df43d245a6b47bb1ce"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 987, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}