{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NDMyMDg4", "number": 13990, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDo0MToxM1rOE3AqvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDo0MzoyMlrOE3AsYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTE4MDc2OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/connectors/filesystem.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDo0MToxM1rOHwHNbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDo0MToxM1rOHwHNbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxMTgyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you want a smaller checkpoint interval and do not want to generate a large number of small files,\n          \n          \n            \n            it is recommended that you open file compaction:\n          \n          \n            \n            The file sink supports file compactions, which allows applications to have smaller checkpoint intervals without generating a large number of files.", "url": "https://github.com/apache/flink/pull/13990#discussion_r520211821", "createdAt": "2020-11-10T00:41:13Z", "author": {"login": "sjwiesman"}, "path": "docs/dev/table/connectors/filesystem.md", "diffHunk": "@@ -150,6 +150,41 @@ become finished on the next checkpoint) control the size and number of these par\n **NOTE:** For row formats (csv, json), you can set the parameter `sink.rolling-policy.file-size` or `sink.rolling-policy.rollover-interval` in the connector properties and parameter `execution.checkpointing.interval` in flink-conf.yaml together\n if you don't want to wait a long period before observe the data exists in file system. For other formats (avro, orc), you can just set parameter `execution.checkpointing.interval` in flink-conf.yaml.\n \n+### File Compaction\n+\n+If you want a smaller checkpoint interval and do not want to generate a large number of small files,\n+it is recommended that you open file compaction:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcabafeacefca7370b3c2f3569ff8608704a282b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTE4NDk2OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/connectors/filesystem.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDo0MzoyMlrOHwHQDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDo0MzoyMlrOHwHQDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIxMjQ5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            After you open file compaction, small files that are not large enough will be merged into large files,\n          \n          \n            \n            It is worth noting that:\n          \n          \n            \n            - Only files in a single checkpoint are compacted, that is, at least the same number of files as the number of checkpoints is generated.\n          \n          \n            \n            - The file before merging is invisible, so the visibility of the file may be: checkpoint interval + compaction time.\n          \n          \n            \n            If enabled, file compaction will merge multiple small files into larger files based on the target file size.\n          \n          \n            \n            When running file compaction in production, please be aware that:\n          \n          \n            \n            - Only files in a single checkpoint are compacted, that is, at least the same number of files as the number of checkpoints is generated.\n          \n          \n            \n            - The file before merging is invisible, so the visibility of the file may be: checkpoint interval + compaction time.", "url": "https://github.com/apache/flink/pull/13990#discussion_r520212493", "createdAt": "2020-11-10T00:43:22Z", "author": {"login": "sjwiesman"}, "path": "docs/dev/table/connectors/filesystem.md", "diffHunk": "@@ -150,6 +150,41 @@ become finished on the next checkpoint) control the size and number of these par\n **NOTE:** For row formats (csv, json), you can set the parameter `sink.rolling-policy.file-size` or `sink.rolling-policy.rollover-interval` in the connector properties and parameter `execution.checkpointing.interval` in flink-conf.yaml together\n if you don't want to wait a long period before observe the data exists in file system. For other formats (avro, orc), you can just set parameter `execution.checkpointing.interval` in flink-conf.yaml.\n \n+### File Compaction\n+\n+If you want a smaller checkpoint interval and do not want to generate a large number of small files,\n+it is recommended that you open file compaction:\n+\n+<table class=\"table table-bordered\">\n+  <thead>\n+    <tr>\n+        <th class=\"text-left\" style=\"width: 20%\">Key</th>\n+        <th class=\"text-left\" style=\"width: 15%\">Default</th>\n+        <th class=\"text-left\" style=\"width: 10%\">Type</th>\n+        <th class=\"text-left\" style=\"width: 55%\">Description</th>\n+    </tr>\n+  </thead>\n+  <tbody>\n+    <tr>\n+        <td><h5>auto-compaction</h5></td>\n+        <td style=\"word-wrap: break-word;\">false</td>\n+        <td>Boolean</td>\n+        <td>Whether to enable automatic compaction in streaming sink or not. The data will be written to temporary files. After the checkpoint is completed, the temporary files generated by a checkpoint will be compacted. The temporary files are invisible before compaction.</td>\n+    </tr>\n+    <tr>\n+        <td><h5>compaction.file-size</h5></td>\n+        <td style=\"word-wrap: break-word;\">(none)</td>\n+        <td>MemorySize</td>\n+        <td>The compaction target file size, the default value is the rolling file size.</td>\n+    </tr>\n+  </tbody>\n+</table>\n+\n+After you open file compaction, small files that are not large enough will be merged into large files,\n+It is worth noting that:\n+- Only files in a single checkpoint are compacted, that is, at least the same number of files as the number of checkpoints is generated.\n+- The file before merging is invisible, so the visibility of the file may be: checkpoint interval + compaction time.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcabafeacefca7370b3c2f3569ff8608704a282b"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4847, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}