{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNzU5ODE5", "number": 11236, "title": "[FLINK-16269][FLINK-16108][table-planner-blink] Fix schema of query and sink do not match when generic or POJO type is requested", "bodyText": "What is the purpose of the change\nFix schema of query and sink do not match when generic or POJO type is requested, e.g. table.toAppendStream[MyPojo].\nBrief change log\n\nGeneric type\n\n\nCurrently, we create a LEGACY('RAW', ...) type for generic type, however, after optimization, the type will be RAW('MyPojo', ..). Then the type is mistach.\nWe should convert generic type info into RAW(...) at the begining.\n\n\nPOJO type\n\n\nCurrently, we infer sink schema from the PojoTypeInfo. However, the fields order may be mismatch with the query schema fields.\nWe should generate sink schema using the types from PojoTypeInfo, but field order from query schema.\n\nVerifying this change\nThis change added a test which transforms a nested data type.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-02-27T10:32:22Z", "url": "https://github.com/apache/flink/pull/11236", "merged": true, "mergeCommit": {"oid": "377024ba85058e3ba5fa092aaf5c92be33d7ae09"}, "closed": true, "closedAt": "2020-03-05T11:40:21Z", "author": {"login": "wuchong"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIYXsugH2gAyMzgwNzU5ODE5OjY0NTQ4MDRiNGRkMmU5ZDcyOTVjYzQ5ZTI2OTQwY2FjOWQwY2Y5YTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKoOBzgFqTM2OTQxNjk2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6454804b4dd2e9d7295cc49e26940cac9d0cf9a1", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/6454804b4dd2e9d7295cc49e26940cac9d0cf9a1", "committedDate": "2020-02-27T10:01:05Z", "message": "[FLINK-16269][table-planner-blink] Fix schema of query and sink do not match when generic type is requested"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7404df3a2130267c63a43d42398f08fd6ae09b0b", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/7404df3a2130267c63a43d42398f08fd6ae09b0b", "committedDate": "2020-02-27T10:01:08Z", "message": "[FLINK-16108][table-planner-blink] Fix schema of query and sink do not match when POJO type is requested\n\nThis also fixes failure of StreamSQLExample when running in blink planner."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTcyMTkw", "url": "https://github.com/apache/flink/pull/11236#pullrequestreview-365572190", "createdAt": "2020-02-27T10:33:18Z", "commit": {"oid": "7404df3a2130267c63a43d42398f08fd6ae09b0b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDozMzoxOVrOFvNDfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDozMzoxOVrOFvNDfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA0MTI3OQ==", "bodyText": "Please help to check this change. cc @twalthr", "url": "https://github.com/apache/flink/pull/11236#discussion_r385041279", "createdAt": "2020-02-27T10:33:19Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/types/utils/LegacyTypeInfoDataTypeConverter.java", "diffHunk": "@@ -181,6 +182,10 @@ else if (typeInfo instanceof CompositeType) {\n \t\t\treturn createLegacyType(LogicalTypeRoot.STRUCTURED_TYPE, typeInfo);\n \t\t}\n \n+\t\telse if (typeInfo instanceof GenericTypeInfo) {\n+\t\t\treturn DataTypes.RAW(typeInfo).bridgedTo(typeInfo.getTypeClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7404df3a2130267c63a43d42398f08fd6ae09b0b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd488f5cf0bf428170cb72cf434e01780cac8ef7", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/fd488f5cf0bf428170cb72cf434e01780cac8ef7", "committedDate": "2020-02-27T11:38:40Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2e5a4fb73a7b2aca22e914e57b36bc3128bb966", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/c2e5a4fb73a7b2aca22e914e57b36bc3128bb966", "committedDate": "2020-02-27T12:16:21Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NzA0ODY5", "url": "https://github.com/apache/flink/pull/11236#pullrequestreview-367704869", "createdAt": "2020-03-03T05:05:40Z", "commit": {"oid": "7404df3a2130267c63a43d42398f08fd6ae09b0b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNTowNTo0MFrOFw4eDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNToxODozNlrOFw4o6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgwMTE2Ng==", "bodyText": "Can you add test to LegacyTypeInfoDataTypeConverterTest?", "url": "https://github.com/apache/flink/pull/11236#discussion_r386801166", "createdAt": "2020-03-03T05:05:40Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/types/utils/LegacyTypeInfoDataTypeConverter.java", "diffHunk": "@@ -181,6 +182,10 @@ else if (typeInfo instanceof CompositeType) {\n \t\t\treturn createLegacyType(LogicalTypeRoot.STRUCTURED_TYPE, typeInfo);\n \t\t}\n \n+\t\telse if (typeInfo instanceof GenericTypeInfo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7404df3a2130267c63a43d42398f08fd6ae09b0b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgwMTgxOQ==", "bodyText": "Ah... Yes, it is return type instead of inputType.", "url": "https://github.com/apache/flink/pull/11236#discussion_r386801819", "createdAt": "2020-03-03T05:08:40Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/codegen/SinkCodeGenerator.scala", "diffHunk": "@@ -83,8 +86,10 @@ object SinkCodeGenerator {\n             inputRowType,\n             inputTerm,\n             inputFieldMapping = Option(mapping))\n+        val outputBaseRowType = new BaseRowTypeInfo(\n+          getCompositeTypes(pojo).map(fromTypeInfoToLogicalType): _*)\n         val conversion = resultGenerator.generateConverterResultExpression(\n-          inputRowType,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7404df3a2130267c63a43d42398f08fd6ae09b0b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgwMjEzNQ==", "bodyText": "It is pojo now, don't need getCompositeTypes.\nJust RowType.of((0 until ct.getArity).map(ct.getTypeAt).toArray).", "url": "https://github.com/apache/flink/pull/11236#discussion_r386802135", "createdAt": "2020-03-03T05:10:19Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/codegen/SinkCodeGenerator.scala", "diffHunk": "@@ -83,8 +86,10 @@ object SinkCodeGenerator {\n             inputRowType,\n             inputTerm,\n             inputFieldMapping = Option(mapping))\n+        val outputBaseRowType = new BaseRowTypeInfo(\n+          getCompositeTypes(pojo).map(fromTypeInfoToLogicalType): _*)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7404df3a2130267c63a43d42398f08fd6ae09b0b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgwMjUyMg==", "bodyText": "This is just for RawType? Can you add comment?", "url": "https://github.com/apache/flink/pull/11236#discussion_r386802522", "createdAt": "2020-03-03T05:11:48Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/sinks/TableSinkUtils.scala", "diffHunk": "@@ -189,13 +190,45 @@ object TableSinkUtils {\n       queryLogicalType,\n       withChangeFlag)\n     if (LogicalTypeChecks.isCompositeType(requestedOutputType.getLogicalType)) {\n-      DataTypeUtils.expandCompositeTypeToSchema(requestedOutputType)\n+      fromDataTypeToTypeInfo(requestedOutputType) match {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7404df3a2130267c63a43d42398f08fd6ae09b0b"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgwMzI0Nw==", "bodyText": "Can you extract pojo mapping in SinkCodeGenerator to here too? Both are for POJO reorder.", "url": "https://github.com/apache/flink/pull/11236#discussion_r386803247", "createdAt": "2020-03-03T05:15:12Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/sinks/TableSinkUtils.scala", "diffHunk": "@@ -189,13 +190,45 @@ object TableSinkUtils {\n       queryLogicalType,\n       withChangeFlag)\n     if (LogicalTypeChecks.isCompositeType(requestedOutputType.getLogicalType)) {\n-      DataTypeUtils.expandCompositeTypeToSchema(requestedOutputType)\n+      fromDataTypeToTypeInfo(requestedOutputType) match {\n+        case pj: PojoTypeInfo[_] => expandPojoTypeToSchema(pj, queryLogicalType)\n+        case _ => DataTypeUtils.expandCompositeTypeToSchema(requestedOutputType)\n+      }\n     } else {\n       // atomic type\n       TableSchema.builder().field(\"f0\", requestedOutputType).build()\n     }\n   }\n \n+  /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7404df3a2130267c63a43d42398f08fd6ae09b0b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgwMzk0NQ==", "bodyText": "BTW, don't reorder the nested data in SinkCodeGenerator?", "url": "https://github.com/apache/flink/pull/11236#discussion_r386803945", "createdAt": "2020-03-03T05:18:36Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/sinks/TableSinkUtils.scala", "diffHunk": "@@ -189,13 +190,45 @@ object TableSinkUtils {\n       queryLogicalType,\n       withChangeFlag)\n     if (LogicalTypeChecks.isCompositeType(requestedOutputType.getLogicalType)) {\n-      DataTypeUtils.expandCompositeTypeToSchema(requestedOutputType)\n+      fromDataTypeToTypeInfo(requestedOutputType) match {\n+        case pj: PojoTypeInfo[_] => expandPojoTypeToSchema(pj, queryLogicalType)\n+        case _ => DataTypeUtils.expandCompositeTypeToSchema(requestedOutputType)\n+      }\n     } else {\n       // atomic type\n       TableSchema.builder().field(\"f0\", requestedOutputType).build()\n     }\n   }\n \n+  /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7404df3a2130267c63a43d42398f08fd6ae09b0b"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a82548bb1a4625f01ef9af16da11f6073832d957", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/a82548bb1a4625f01ef9af16da11f6073832d957", "committedDate": "2020-03-03T10:10:30Z", "message": "address comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce440c8129607cd06f742fb0835da449f0456814", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/ce440c8129607cd06f742fb0835da449f0456814", "committedDate": "2020-03-03T14:15:51Z", "message": "use TypeTransformation to fix the legacy raw type instead of changing LegacyTypeInfoDataTypeConverter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff034a88286bfc73d03ada3e74f4fb6b964cfffb", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/ff034a88286bfc73d03ada3e74f4fb6b964cfffb", "committedDate": "2020-03-03T16:23:22Z", "message": "fixup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NDE2OTY2", "url": "https://github.com/apache/flink/pull/11236#pullrequestreview-369416966", "createdAt": "2020-03-05T09:36:51Z", "commit": {"oid": "ff034a88286bfc73d03ada3e74f4fb6b964cfffb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3254, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}