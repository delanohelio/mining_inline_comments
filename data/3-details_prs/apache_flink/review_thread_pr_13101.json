{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MzU1ODY2", "number": 13101, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMzo1OToyM1rOEXC4Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNDowMDo1N1rOEXC5YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNTk5ODg3OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMzo1OToyM1rOG-nh-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMzo1OToyM1rOG-nh-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMxMjU3MA==", "bodyText": "Can we add tests for all types and watermarks and computed columns?", "url": "https://github.com/apache/flink/pull/13101#discussion_r468312570", "createdAt": "2020-08-11T03:59:23Z", "author": {"login": "JingsongLi"}, "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java", "diffHunk": "@@ -65,6 +69,43 @@ public void testGenericTableSchema() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testTableSchemaCompatibility() throws Exception {\n+\t\tcatalog.createDatabase(db1, createDb(), false);\n+\t\tObjectPath tablePath = new ObjectPath(db1, \"generic110\");\n+\n+\t\t// create a table with old schema properties\n+\t\tTable hiveTable = org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),\n+\t\t\t\ttablePath.getObjectName());\n+\t\t// create table generic110 (c char(265), vc varchar(65536), ts timestamp(3), watermark for ts as ts)\n+\t\thiveTable.setDbName(tablePath.getDatabaseName());\n+\t\thiveTable.setTableName(tablePath.getObjectName());\n+\t\thiveTable.getParameters().put(CatalogConfig.IS_GENERIC, \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52a3dda64175007c4eb7b0d24edb71d95ccdaebf"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjAwMTYxOnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNDowMDo1N1rOG-njiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNDowMDo1N1rOG-njiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMxMjk3MQ==", "bodyText": "Can add a comments: NOTE: Do not modify this test, it is important to forward compatibility..", "url": "https://github.com/apache/flink/pull/13101#discussion_r468312971", "createdAt": "2020-08-11T04:00:57Z", "author": {"login": "JingsongLi"}, "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java", "diffHunk": "@@ -65,6 +69,43 @@ public void testGenericTableSchema() throws Exception {\n \t\t}\n \t}\n \n+\t@Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52a3dda64175007c4eb7b0d24edb71d95ccdaebf"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4940, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}