{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NTA1MTkw", "number": 13260, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTo1NDo1OFrOEdL6zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjoxOTo0NVrOEdMi6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDM5NDM4OnYy", "diffSide": "RIGHT", "path": "tools/ci/watchdog.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMTo1NDo1OFrOHIMziw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzoyODoyOFrOHK2Rfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2MDQ1OQ==", "bodyText": "It looks alright. FYI: The following one-liner should do the same:\nmod_time() {\n  stat -c \"%Y\" \"$CMD_OUT $WATCHDOG_ADDITIONAL_MONITORING_FILES\" | sort -nr | head -1\n}", "url": "https://github.com/apache/flink/pull/13260#discussion_r478360459", "createdAt": "2020-08-27T11:54:58Z", "author": {"login": "XComp"}, "path": "tools/ci/watchdog.sh", "diffHunk": "@@ -38,8 +38,26 @@ CMD_EXIT=\"/tmp/watchdog.exit\"\n # Utility functions\n # ============================================= \n \n+max_of() {\n+  local max number\n+\n+  max=\"$1\"\n+\n+  for number in \"${@:2}\"; do\n+    if ((number > max)); then\n+      max=\"$number\"\n+    fi\n+  done\n+\n+  printf '%d\\n' \"$max\"\n+}\n+\n+# Returns the highest modification time out of $CMD_OUT (which is the command output file)\n+# and any file(s) named \"mvn-*.log\" (which are logging files created by Flink's tests)\n mod_time () {\n-\techo `stat -c \"%Y\" $CMD_OUT`\n+\tCMD_OUT_MOD_TIME=`stat -c \"%Y\" $CMD_OUT`\n+\tADDITIONAL_FILES_MOD_TIMES=`stat -c \"%Y\" $WATCHDOG_ADDITIONAL_MONITORING_FILES 2> /dev/null`\n+\techo `max_of $CMD_OUT_MOD_TIME $ADDITIONAL_FILES_MOD_TIMES`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "858238cb47175439c563bc2c6d23ded57b1ab6f2"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEzNzAyMg==", "bodyText": "damn, sometimes, I'm overthinking it. Thanks for the pointer.", "url": "https://github.com/apache/flink/pull/13260#discussion_r481137022", "createdAt": "2020-09-01T13:28:28Z", "author": {"login": "rmetzger"}, "path": "tools/ci/watchdog.sh", "diffHunk": "@@ -38,8 +38,26 @@ CMD_EXIT=\"/tmp/watchdog.exit\"\n # Utility functions\n # ============================================= \n \n+max_of() {\n+  local max number\n+\n+  max=\"$1\"\n+\n+  for number in \"${@:2}\"; do\n+    if ((number > max)); then\n+      max=\"$number\"\n+    fi\n+  done\n+\n+  printf '%d\\n' \"$max\"\n+}\n+\n+# Returns the highest modification time out of $CMD_OUT (which is the command output file)\n+# and any file(s) named \"mvn-*.log\" (which are logging files created by Flink's tests)\n mod_time () {\n-\techo `stat -c \"%Y\" $CMD_OUT`\n+\tCMD_OUT_MOD_TIME=`stat -c \"%Y\" $CMD_OUT`\n+\tADDITIONAL_FILES_MOD_TIMES=`stat -c \"%Y\" $WATCHDOG_ADDITIONAL_MONITORING_FILES 2> /dev/null`\n+\techo `max_of $CMD_OUT_MOD_TIME $ADDITIONAL_FILES_MOD_TIMES`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2MDQ1OQ=="}, "originalCommit": {"oid": "858238cb47175439c563bc2c6d23ded57b1ab6f2"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDQyNzgzOnYy", "diffSide": "RIGHT", "path": "tools/ci/test_controller.sh", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjowMjo1N1rOHINGGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzozNzoyN1rOHK2qVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2NTIxMQ==", "bodyText": "Wouldn't it be better to pass this variable as a parameter to source \"${HERE}/watchdog.sh\"? Of course, we would have to handle the variable in watchdog.sh properly, then, since it has to be accessed through $1. The variable $WATCHDOG_ADDITIONAL_MONITORING_FILES is nowhere else used.", "url": "https://github.com/apache/flink/pull/13260#discussion_r478365211", "createdAt": "2020-08-27T12:02:57Z", "author": {"login": "XComp"}, "path": "tools/ci/test_controller.sh", "diffHunk": "@@ -69,6 +69,10 @@ export JAVA_TOOL_OPTIONS=\"-XX:+HeapDumpOnOutOfMemoryError\"\n # some tests provide additional logs if they find this variable\n export IS_CI=true\n \n+export WATCHDOG_ADDITIONAL_MONITORING_FILES=\"$DEBUG_FILES_OUTPUT_DIR/mvn-*.log\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "858238cb47175439c563bc2c6d23ded57b1ab6f2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0MzM4MQ==", "bodyText": "Somehow I consider \"source\" something like an \"import\" statement, that doesn't support passing variables.\nAnd this seems to be a feature only available in bash: https://unix.stackexchange.com/questions/5024/passing-variables-to-a-bash-script-when-sourcing-it", "url": "https://github.com/apache/flink/pull/13260#discussion_r481143381", "createdAt": "2020-09-01T13:37:27Z", "author": {"login": "rmetzger"}, "path": "tools/ci/test_controller.sh", "diffHunk": "@@ -69,6 +69,10 @@ export JAVA_TOOL_OPTIONS=\"-XX:+HeapDumpOnOutOfMemoryError\"\n # some tests provide additional logs if they find this variable\n export IS_CI=true\n \n+export WATCHDOG_ADDITIONAL_MONITORING_FILES=\"$DEBUG_FILES_OUTPUT_DIR/mvn-*.log\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM2NTIxMQ=="}, "originalCommit": {"oid": "858238cb47175439c563bc2c6d23ded57b1ab6f2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDQ5NzA2OnYy", "diffSide": "RIGHT", "path": "tools/ci/watchdog.sh", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMjoxOTo0NlrOHINuCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzozODozM1rOHK2tPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM3NTQzNQ==", "bodyText": "I forgot to ask here: Is there a reason why you didn't just use echo \"$max\" instead?", "url": "https://github.com/apache/flink/pull/13260#discussion_r478375435", "createdAt": "2020-08-27T12:19:46Z", "author": {"login": "XComp"}, "path": "tools/ci/watchdog.sh", "diffHunk": "@@ -38,8 +38,26 @@ CMD_EXIT=\"/tmp/watchdog.exit\"\n # Utility functions\n # ============================================= \n \n+max_of() {\n+  local max number\n+\n+  max=\"$1\"\n+\n+  for number in \"${@:2}\"; do\n+    if ((number > max)); then\n+      max=\"$number\"\n+    fi\n+  done\n+\n+  printf '%d\\n' \"$max\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "858238cb47175439c563bc2c6d23ded57b1ab6f2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0MDU4NQ==", "bodyText": "Well, my code is (of course) inspired by Stackoverflow.\nBut there seems to be some arguments why printf is better than echo: https://unix.stackexchange.com/questions/65803/why-is-printf-better-than-echo", "url": "https://github.com/apache/flink/pull/13260#discussion_r481140585", "createdAt": "2020-09-01T13:33:42Z", "author": {"login": "rmetzger"}, "path": "tools/ci/watchdog.sh", "diffHunk": "@@ -38,8 +38,26 @@ CMD_EXIT=\"/tmp/watchdog.exit\"\n # Utility functions\n # ============================================= \n \n+max_of() {\n+  local max number\n+\n+  max=\"$1\"\n+\n+  for number in \"${@:2}\"; do\n+    if ((number > max)); then\n+      max=\"$number\"\n+    fi\n+  done\n+\n+  printf '%d\\n' \"$max\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM3NTQzNQ=="}, "originalCommit": {"oid": "858238cb47175439c563bc2c6d23ded57b1ab6f2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0NDEyNg==", "bodyText": ":-D I like how the accepted answer feels to be 10 pages long for something I considered a minor thing ^^", "url": "https://github.com/apache/flink/pull/13260#discussion_r481144126", "createdAt": "2020-09-01T13:38:33Z", "author": {"login": "XComp"}, "path": "tools/ci/watchdog.sh", "diffHunk": "@@ -38,8 +38,26 @@ CMD_EXIT=\"/tmp/watchdog.exit\"\n # Utility functions\n # ============================================= \n \n+max_of() {\n+  local max number\n+\n+  max=\"$1\"\n+\n+  for number in \"${@:2}\"; do\n+    if ((number > max)); then\n+      max=\"$number\"\n+    fi\n+  done\n+\n+  printf '%d\\n' \"$max\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM3NTQzNQ=="}, "originalCommit": {"oid": "858238cb47175439c563bc2c6d23ded57b1ab6f2"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 528, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}