{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5Mjk3NjUz", "number": 10766, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwMzo0NzoxMFrODV4ccQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNToyNjoxMFrODV49YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjcxNDczOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/CalcITCase.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwMzo0NzoxMFrOFaU5_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNDo1MDo1NFrOFaVYoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE0OTgyMA==", "bodyText": "Can you add test in ScalarFunctionsTest.testFromBase64 instead of it case?\nMaybe you can add a nested function call to verify this.", "url": "https://github.com/apache/flink/pull/10766#discussion_r363149820", "createdAt": "2020-01-06T03:47:10Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/CalcITCase.scala", "diffHunk": "@@ -260,4 +260,17 @@ class CalcITCase extends StreamingTestBase {\n     val expected = List(\"2,2,Hello\", \"3,2,Hello world\")\n     assertEquals(expected.sorted, sink.getAppendResults.sorted)\n   }\n+\n+  @Test\n+  def testFromBase64(): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e4ad343ca857112ee41b5b166c0a77186dfb78"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE1NzY2NA==", "bodyText": "It's a good idea. Done.", "url": "https://github.com/apache/flink/pull/10766#discussion_r363157664", "createdAt": "2020-01-06T04:50:54Z", "author": {"login": "libenchao"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/CalcITCase.scala", "diffHunk": "@@ -260,4 +260,17 @@ class CalcITCase extends StreamingTestBase {\n     val expected = List(\"2,2,Hello\", \"3,2,Hello world\")\n     assertEquals(expected.sorted, sink.getAppendResults.sorted)\n   }\n+\n+  @Test\n+  def testFromBase64(): Unit = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE0OTgyMA=="}, "originalCommit": {"oid": "c5e4ad343ca857112ee41b5b166c0a77186dfb78"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Mjc5OTA0OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNToyNjoxMFrOFaVqtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMTo0MjoyNFrOFabrQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2MjI5Mw==", "bodyText": "We can not use new String directly, because we don't know the default coder must be UTF-8.\nMaybe we can use BinaryString.fromBytes?", "url": "https://github.com/apache/flink/pull/10766#discussion_r363162293", "createdAt": "2020-01-06T05:26:10Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java", "diffHunk": "@@ -1063,8 +1063,8 @@ public static String toBase64(byte[] bytes){\n \t\treturn Base64.getEncoder().encodeToString(bytes);\n \t}\n \n-\tpublic static byte[] fromBase64(BinaryString bs){\n-\t\treturn Base64.getDecoder().decode(bs.getBytes());\n+\tpublic static String fromBase64(BinaryString bs){\n+\t\treturn new String(Base64.getDecoder().decode(bs.getBytes()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "987d0db7ac663d1d0690954c902033db3b2c4d1c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE4MzI2Ng==", "bodyText": "Do you mean we return BinaryString for fromBase64, or just like BinaryString.fromBytes(...).toString() ?\nOr we can make it explicit UTF8 like CAST in ScalarOperatorGens:L942 ?", "url": "https://github.com/apache/flink/pull/10766#discussion_r363183266", "createdAt": "2020-01-06T07:28:00Z", "author": {"login": "libenchao"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java", "diffHunk": "@@ -1063,8 +1063,8 @@ public static String toBase64(byte[] bytes){\n \t\treturn Base64.getEncoder().encodeToString(bytes);\n \t}\n \n-\tpublic static byte[] fromBase64(BinaryString bs){\n-\t\treturn Base64.getDecoder().decode(bs.getBytes());\n+\tpublic static String fromBase64(BinaryString bs){\n+\t\treturn new String(Base64.getDecoder().decode(bs.getBytes()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2MjI5Mw=="}, "originalCommit": {"oid": "987d0db7ac663d1d0690954c902033db3b2c4d1c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE4NjE1NA==", "bodyText": "Yes, Using BinaryString is better.", "url": "https://github.com/apache/flink/pull/10766#discussion_r363186154", "createdAt": "2020-01-06T07:42:11Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java", "diffHunk": "@@ -1063,8 +1063,8 @@ public static String toBase64(byte[] bytes){\n \t\treturn Base64.getEncoder().encodeToString(bytes);\n \t}\n \n-\tpublic static byte[] fromBase64(BinaryString bs){\n-\t\treturn Base64.getDecoder().decode(bs.getBytes());\n+\tpublic static String fromBase64(BinaryString bs){\n+\t\treturn new String(Base64.getDecoder().decode(bs.getBytes()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2MjI5Mw=="}, "originalCommit": {"oid": "987d0db7ac663d1d0690954c902033db3b2c4d1c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI2MDczNw==", "bodyText": "Good idea. Done.", "url": "https://github.com/apache/flink/pull/10766#discussion_r363260737", "createdAt": "2020-01-06T11:42:24Z", "author": {"login": "libenchao"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java", "diffHunk": "@@ -1063,8 +1063,8 @@ public static String toBase64(byte[] bytes){\n \t\treturn Base64.getEncoder().encodeToString(bytes);\n \t}\n \n-\tpublic static byte[] fromBase64(BinaryString bs){\n-\t\treturn Base64.getDecoder().decode(bs.getBytes());\n+\tpublic static String fromBase64(BinaryString bs){\n+\t\treturn new String(Base64.getDecoder().decode(bs.getBytes()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2MjI5Mw=="}, "originalCommit": {"oid": "987d0db7ac663d1d0690954c902033db3b2c4d1c"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1284, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}