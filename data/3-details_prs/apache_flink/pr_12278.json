{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMzIzNzY4", "number": 12278, "title": "[FLINK-17019][runtime] Fulfill slot requests in request order", "bodyText": "What is the purpose of the change\nThis PR introduces changes to fulfill slot requests in request order.\nThis is to avoid slot competitions between slot allocation bulks which can lead to resource deadlocks.\nBrief change log\n\nFulfill slot requests in request order on offer slots\nRemap orphaned slot allocation to pending slot request which lost its allocation to allow the request to fail fast on allocation failures\n\nVerifying this change\n\n*modified SlotPoolRequestCompletionTest *\nAdded SlotPoolPendingRequestFailureTest#testFailingAllocationFailsRemappedPendingSlotRequests\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-05-21T12:24:41Z", "url": "https://github.com/apache/flink/pull/12278", "merged": true, "mergeCommit": {"oid": "df9a88229b75d9e1adfa9dad6916cd65c3c7d409"}, "closed": true, "closedAt": "2020-06-18T03:14:56Z", "author": {"login": "zhuzhurk"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckqStKABqjMzNjkwMTUyMzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsKpnDgFqTQzMjQ1NTE1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "30dbfc08b3a4147d18dc00aebb2e31773f1fdbc1", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/30dbfc08b3a4147d18dc00aebb2e31773f1fdbc1", "committedDate": "2020-05-21T12:19:19Z", "message": "[FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which lost its allocation"}, "afterCommit": {"oid": "a3a4256ccc6300fcac27d7625461c078a1510604", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/a3a4256ccc6300fcac27d7625461c078a1510604", "committedDate": "2020-05-25T06:43:20Z", "message": "[FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which lost its allocation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MzM1Nzg2", "url": "https://github.com/apache/flink/pull/12278#pullrequestreview-418335786", "createdAt": "2020-05-26T14:09:01Z", "commit": {"oid": "a3a4256ccc6300fcac27d7625461c078a1510604"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDowOTowMVrOGagCqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxMzozOVrOGagQkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0MTEzMQ==", "bodyText": "Looking into the implementation of DualKeyLinkedMap for pendingRequests, it seems we can just remove the first matching SlotRequestId and then remap the orphaned SlotRequestId to its AllocationID. The original insertion ordering should not suffer in DualKeyLinkedMap.aMap. If so, we could remove  requestedAllocations.\nEDIT: waitingForResourceManager -> pendingRequests", "url": "https://github.com/apache/flink/pull/12278#discussion_r430441131", "createdAt": "2020-05-26T14:09:01Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/slotpool/SlotPoolImpl.java", "diffHunk": "@@ -112,6 +114,9 @@\n \t/** The requests that are waiting for the resource manager to be connected. */\n \tprivate final LinkedHashMap<SlotRequestId, PendingRequest> waitingForResourceManager;\n \n+\t/** Maps a request to its allocation. */\n+\tprivate final BiMap<SlotRequestId, AllocationID> requestedAllocations;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3a4256ccc6300fcac27d7625461c078a1510604"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0NDY5MA==", "bodyText": "I am not sure about all consequences of this change for the existing scheduling. I mean that we do not respect SlotRequestId->AllocationID by accepting the slot offer. Would it make sense to keep this behaviour configurable for now depending on scheduling strategy? Or this complication is not needed?", "url": "https://github.com/apache/flink/pull/12278#discussion_r430444690", "createdAt": "2020-05-26T14:13:39Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/slotpool/SlotPoolImpl.java", "diffHunk": "@@ -648,26 +648,8 @@ boolean offerSlot(\n \t\t\tslotOffer.getResourceProfile(),\n \t\t\ttaskManagerGateway);\n \n-\t\t// check whether we have request waiting for this slot\n-\t\tPendingRequest pendingRequest = pendingRequests.removeKeyB(allocationID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7065a71c2911aa3938c827bdb9029dee9268950c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4OTM0Nzkw", "url": "https://github.com/apache/flink/pull/12278#pullrequestreview-418934790", "createdAt": "2020-05-27T07:43:53Z", "commit": {"oid": "a3a4256ccc6300fcac27d7625461c078a1510604"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzo0Mzo1NFrOGa9N7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwODozMDo1MlrOGa-5JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxOTE0OA==", "bodyText": "is(not(nullValue)) reads nicer", "url": "https://github.com/apache/flink/pull/12278#discussion_r430919148", "createdAt": "2020-05-27T07:43:54Z", "author": {"login": "GJL"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/slotpool/SlotPoolRequestCompletionTest.java", "diffHunk": "@@ -103,7 +123,7 @@ private void runSlotRequestCompletionTest(\n \t\t\t// check that the slot requests get completed in sequential order\n \t\t\tfor (int i = 0; i < slotRequestIds.size(); i++) {\n \t\t\t\tfinal CompletableFuture<PhysicalSlot> slotRequestFuture = slotRequests.get(i);\n-\t\t\t\tslotRequestFuture.get();\n+\t\t\t\tassertThat(slotRequestFuture.getNow(null), not(is(nullValue())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3a4256ccc6300fcac27d7625461c078a1510604"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk0NjU5Nw==", "bodyText": "It looks like that this should have been in a separate commit.", "url": "https://github.com/apache/flink/pull/12278#discussion_r430946597", "createdAt": "2020-05-27T08:30:52Z", "author": {"login": "GJL"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/slotpool/SlotPoolImpl.java", "diffHunk": "@@ -698,13 +680,13 @@ boolean offerSlot(\n \n \t\tcomponentMainThreadExecutor.assertRunningInMainThread();\n \n-\t\tfinal PendingRequest pendingRequest = pendingRequests.removeKeyB(allocationID);\n+\t\tfinal PendingRequest pendingRequest = pendingRequests.getKeyB(allocationID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7065a71c2911aa3938c827bdb9029dee9268950c"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a3a4256ccc6300fcac27d7625461c078a1510604", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/a3a4256ccc6300fcac27d7625461c078a1510604", "committedDate": "2020-05-25T06:43:20Z", "message": "[FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which lost its allocation"}, "afterCommit": {"oid": "9a0102b7e3b412027bb84b16cf79f85e930ceb81", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/9a0102b7e3b412027bb84b16cf79f85e930ceb81", "committedDate": "2020-06-09T07:06:46Z", "message": "[FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2ODQ2ODU1", "url": "https://github.com/apache/flink/pull/12278#pullrequestreview-426846855", "createdAt": "2020-06-09T07:10:33Z", "commit": {"oid": "9a0102b7e3b412027bb84b16cf79f85e930ceb81"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNzoxMDozM1rOGg7mAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNzoxMDozM1rOGg7mAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE4NDAwMQ==", "bodyText": "@azagrebin what do you think of making this class package private?\nIt looks like a common util class but no one other than SlotPoolImpl uses it.", "url": "https://github.com/apache/flink/pull/12278#discussion_r437184001", "createdAt": "2020-06-09T07:10:33Z", "author": {"login": "zhuzhurk"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/slotpool/DualKeyLinkedMap.java", "diffHunk": "@@ -37,20 +44,20 @@\n \n \tprivate final LinkedHashMap<A, Tuple2<B, V>> aMap;\n \n-\tprivate final LinkedHashMap<B, A> bMap;\n+\tprivate final HashMap<B, A> bMap;\n \n \tprivate transient Collection<V> values;\n \n \tpublic DualKeyLinkedMap(int initialCapacity) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a0102b7e3b412027bb84b16cf79f85e930ceb81"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a0102b7e3b412027bb84b16cf79f85e930ceb81", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/9a0102b7e3b412027bb84b16cf79f85e930ceb81", "committedDate": "2020-06-09T07:06:46Z", "message": "[FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation"}, "afterCommit": {"oid": "e193166a23d99c7c43c123472a1b23534c383ec8", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/e193166a23d99c7c43c123472a1b23534c383ec8", "committedDate": "2020-06-11T05:40:51Z", "message": "[FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e193166a23d99c7c43c123472a1b23534c383ec8", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/e193166a23d99c7c43c123472a1b23534c383ec8", "committedDate": "2020-06-11T05:40:51Z", "message": "[FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation"}, "afterCommit": {"oid": "7a3940a82c063f6bf74cbc72715e77034afe2492", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/7a3940a82c063f6bf74cbc72715e77034afe2492", "committedDate": "2020-06-11T15:15:33Z", "message": "[FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a3940a82c063f6bf74cbc72715e77034afe2492", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/7a3940a82c063f6bf74cbc72715e77034afe2492", "committedDate": "2020-06-11T15:15:33Z", "message": "[FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation"}, "afterCommit": {"oid": "9f69cd18655a8256d5bc91720a4a88f54b9a6ef9", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/9f69cd18655a8256d5bc91720a4a88f54b9a6ef9", "committedDate": "2020-06-12T09:42:22Z", "message": "Fixup! [FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation\n\nDo not cancel slot request if it has been completed with another allocated slot"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f69cd18655a8256d5bc91720a4a88f54b9a6ef9", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/9f69cd18655a8256d5bc91720a4a88f54b9a6ef9", "committedDate": "2020-06-12T09:42:22Z", "message": "Fixup! [FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation\n\nDo not cancel slot request if it has been completed with another allocated slot"}, "afterCommit": {"oid": "13ae7d728e12b1f349d1cbb1d555882e5d29b298", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/13ae7d728e12b1f349d1cbb1d555882e5d29b298", "committedDate": "2020-06-16T09:16:30Z", "message": "Fixup! [FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation\n\nDo not cancel slot request if it has been completed with another allocated slot"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMjk3MjE5", "url": "https://github.com/apache/flink/pull/12278#pullrequestreview-431297219", "createdAt": "2020-06-16T08:54:57Z", "commit": {"oid": "0414b71dafa2cf6e5668e1ff6e9def53baf2a850"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1NDo1N1rOGkRz6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwOToyNToyNVrOGkS9TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5MzczOQ==", "bodyText": "I would also explicitly document that @param <A> is the primary key.", "url": "https://github.com/apache/flink/pull/12278#discussion_r440693739", "createdAt": "2020-06-16T08:54:57Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/slotpool/DualKeyLinkedMap.java", "diffHunk": "@@ -22,12 +22,16 @@\n \n import java.util.AbstractCollection;\n import java.util.Collection;\n+import java.util.HashMap;\n import java.util.Iterator;\n import java.util.LinkedHashMap;\n import java.util.Set;\n \n /**\n- * Map which stores values under two different indices.\n+ * Map which stores values under two different indices. The mapping of the primary key to the\n+ * value is backed by {@link LinkedHashMap} so that the iteration order over the values and\n+ * the primary key set is the insertion order. Note that there is no contract of the iteration\n+ * order over the secondary key set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0414b71dafa2cf6e5668e1ff6e9def53baf2a850"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5NDAzNQ==", "bodyText": "Does it matter for this PR which type bMap has?", "url": "https://github.com/apache/flink/pull/12278#discussion_r440694035", "createdAt": "2020-06-16T08:55:22Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/slotpool/DualKeyLinkedMap.java", "diffHunk": "@@ -37,13 +41,13 @@\n \n \tprivate final LinkedHashMap<A, Tuple2<B, V>> aMap;\n \n-\tprivate final LinkedHashMap<B, A> bMap;\n+\tprivate final HashMap<B, A> bMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0414b71dafa2cf6e5668e1ff6e9def53baf2a850"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5NDk1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic V getByKeyA(A aKey) {\n          \n          \n            \n            \tpublic V getValueByKeyA(A aKey) {", "url": "https://github.com/apache/flink/pull/12278#discussion_r440694959", "createdAt": "2020-06-16T08:56:51Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/slotpool/DualKeyLinkedMap.java", "diffHunk": "@@ -54,7 +54,7 @@ public int size() {\n \t\treturn aMap.size();\n \t}\n \n-\tpublic V getKeyA(A aKey) {\n+\tpublic V getByKeyA(A aKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff26b1df329b9ed8b1138b4c75bbf07d5199ac98"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5NTA1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic V getByKeyB(B bKey) {\n          \n          \n            \n            \tpublic V getValueByKeyB(B bKey) {", "url": "https://github.com/apache/flink/pull/12278#discussion_r440695056", "createdAt": "2020-06-16T08:56:59Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/slotpool/DualKeyLinkedMap.java", "diffHunk": "@@ -64,7 +64,7 @@ public V getKeyA(A aKey) {\n \t\t}\n \t}\n \n-\tpublic V getKeyB(B bKey) {\n+\tpublic V getByKeyB(B bKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff26b1df329b9ed8b1138b4c75bbf07d5199ac98"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5NTQ4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic A getKeyA(B bKey) {\n          \n          \n            \n            \tpublic A getKeyAByKeyB(B bKey) {", "url": "https://github.com/apache/flink/pull/12278#discussion_r440695484", "createdAt": "2020-06-16T08:57:35Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/slotpool/DualKeyLinkedMap.java", "diffHunk": "@@ -74,6 +74,20 @@ public V getKeyB(B bKey) {\n \t\t}\n \t}\n \n+\tpublic A getKeyA(B bKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff26b1df329b9ed8b1138b4c75bbf07d5199ac98"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5NTU3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic B getKeyB(A aKey) {\n          \n          \n            \n            \tpublic B getKeyBByKeyA(A aKey) {", "url": "https://github.com/apache/flink/pull/12278#discussion_r440695572", "createdAt": "2020-06-16T08:57:44Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/slotpool/DualKeyLinkedMap.java", "diffHunk": "@@ -74,6 +74,20 @@ public V getKeyB(B bKey) {\n \t\t}\n \t}\n \n+\tpublic A getKeyA(B bKey) {\n+\t\treturn bMap.get(bKey);\n+\t}\n+\n+\tpublic B getKeyB(A aKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff26b1df329b9ed8b1138b4c75bbf07d5199ac98"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5ODUwMQ==", "bodyText": "I think values() are also interesting to check for both added tests.", "url": "https://github.com/apache/flink/pull/12278#discussion_r440698501", "createdAt": "2020-06-16T09:02:19Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/slotpool/DualKeyLinkedMapTest.java", "diffHunk": "@@ -85,4 +85,28 @@ public void ensuresOneToOneMappingBetweenKeysSameSecondaryKey() {\n \t\tassertThat(map.getByKeyB(1), is(secondValue));\n \t\tassertThat(map.getByKeyA(2), is(secondValue));\n \t}\n+\n+\t@Test\n+\tpublic void testPrimaryKeyOrderIsNotAffectedIfReInsertedWithSameSecondaryKey() {\n+\t\tfinal DualKeyLinkedMap<Integer, Integer, String> map = new DualKeyLinkedMap<>(2);\n+\n+\t\tfinal String value = \"foobar\";\n+\t\tmap.put(1, 1, value);\n+\t\tmap.put(2, 2, value);\n+\n+\t\tmap.put(1, 1, value);\n+\t\tassertThat(map.keySetA().iterator().next(), is(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf5a5d0fd65dc6cfdf81e59d7cd041cf5d288338"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5OTEzMA==", "bodyText": "do we also want to check cleanup of key B 3 if it were in the map?", "url": "https://github.com/apache/flink/pull/12278#discussion_r440699130", "createdAt": "2020-06-16T09:03:26Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/slotpool/DualKeyLinkedMapTest.java", "diffHunk": "@@ -85,4 +85,28 @@ public void ensuresOneToOneMappingBetweenKeysSameSecondaryKey() {\n \t\tassertThat(map.getByKeyB(1), is(secondValue));\n \t\tassertThat(map.getByKeyA(2), is(secondValue));\n \t}\n+\n+\t@Test\n+\tpublic void testPrimaryKeyOrderIsNotAffectedIfReInsertedWithSameSecondaryKey() {\n+\t\tfinal DualKeyLinkedMap<Integer, Integer, String> map = new DualKeyLinkedMap<>(2);\n+\n+\t\tfinal String value = \"foobar\";\n+\t\tmap.put(1, 1, value);\n+\t\tmap.put(2, 2, value);\n+\n+\t\tmap.put(1, 1, value);\n+\t\tassertThat(map.keySetA().iterator().next(), is(1));\n+\t}\n+\n+\t@Test\n+\tpublic void testPrimaryKeyOrderIsNotAffectedIfReInsertedWithDifferentSecondaryKey() {\n+\t\tfinal DualKeyLinkedMap<Integer, Integer, String> map = new DualKeyLinkedMap<>(2);\n+\n+\t\tfinal String value = \"foobar\";\n+\t\tmap.put(1, 1, value);\n+\t\tmap.put(2, 2, value);\n+\n+\t\tmap.put(1, 3, value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf5a5d0fd65dc6cfdf81e59d7cd041cf5d288338"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcwODI2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tfinal AllocationID orphanedAllocationId = allocationIdOfRequest.equals(allocationIdOfSlot)\n          \n          \n            \n            \t\t\t? null : allocationIdOfRequest;\n          \n          \n            \n            \n          \n          \n            \n            \t\t// if the request that initiated the allocation is still pending, it should take over the orphaned allocation\n          \n          \n            \n            \t\t// of the fulfilled request so that it can fail fast if the remapped allocation fails\n          \n          \n            \n            \t\tif (orphanedAllocationId != null) {\n          \n          \n            \n            \t\t// if the request that initiated the allocation is still pending, it should take over the orphaned allocation\n          \n          \n            \n            \t\t// of the fulfilled request so that it can fail fast if the remapped allocation fails\n          \n          \n            \n            \t\tif (!allocationIdOfRequest.equals(allocationIdOfSlot)) {\n          \n          \n            \n            \t\t    final AllocationID orphanedAllocationId = allocationIdOfRequest;", "url": "https://github.com/apache/flink/pull/12278#discussion_r440708260", "createdAt": "2020-06-16T09:18:10Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/slotpool/SlotPoolImpl.java", "diffHunk": "@@ -592,6 +589,31 @@ private PendingRequest findMatchingPendingRequest(final AllocatedSlot slot) {\n \t\treturn null;\n \t}\n \n+\tprivate void maybeRemapOrphanedAllocation(\n+\t\t\tfinal AllocationID allocationIdOfRequest,\n+\t\t\tfinal AllocationID allocationIdOfSlot) {\n+\n+\t\tfinal AllocationID orphanedAllocationId = allocationIdOfRequest.equals(allocationIdOfSlot)\n+\t\t\t? null : allocationIdOfRequest;\n+\n+\t\t// if the request that initiated the allocation is still pending, it should take over the orphaned allocation\n+\t\t// of the fulfilled request so that it can fail fast if the remapped allocation fails\n+\t\tif (orphanedAllocationId != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13ae7d728e12b1f349d1cbb1d555882e5d29b298"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxMjUyNA==", "bodyText": "is it about previously allocated slots returned by scheduler after e.g. finishing tasks?\ndo they also have to be cancelled in the RM?", "url": "https://github.com/apache/flink/pull/12278#discussion_r440712524", "createdAt": "2020-06-16T09:25:25Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/slotpool/SlotPoolImpl.java", "diffHunk": "@@ -592,6 +589,31 @@ private PendingRequest findMatchingPendingRequest(final AllocatedSlot slot) {\n \t\treturn null;\n \t}\n \n+\tprivate void maybeRemapOrphanedAllocation(\n+\t\t\tfinal AllocationID allocationIdOfRequest,\n+\t\t\tfinal AllocationID allocationIdOfSlot) {\n+\n+\t\tfinal AllocationID orphanedAllocationId = allocationIdOfRequest.equals(allocationIdOfSlot)\n+\t\t\t? null : allocationIdOfRequest;\n+\n+\t\t// if the request that initiated the allocation is still pending, it should take over the orphaned allocation\n+\t\t// of the fulfilled request so that it can fail fast if the remapped allocation fails\n+\t\tif (orphanedAllocationId != null) {\n+\t\t\tfinal SlotRequestId requestIdOfAllocatedSlot = pendingRequests.getKeyA(allocationIdOfSlot);\n+\t\t\tif (requestIdOfAllocatedSlot != null) {\n+\t\t\t\tfinal PendingRequest requestOfAllocatedSlot = pendingRequests.getByKeyA(requestIdOfAllocatedSlot);\n+\t\t\t\trequestOfAllocatedSlot.setAllocationId(orphanedAllocationId);\n+\n+\t\t\t\t// this re-insertion of initiatedRequestId will not affect its original insertion order\n+\t\t\t\tpendingRequests.put(requestIdOfAllocatedSlot, orphanedAllocationId, requestOfAllocatedSlot);\n+\t\t\t} else {\n+\t\t\t\t// cancel the slot request if the orphaned allocation is not remapped to a pending request.\n+\t\t\t\t// the request id can be null if the slot is returned by scheduler\n+\t\t\t\tresourceManagerGateway.cancelSlotRequest(orphanedAllocationId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13ae7d728e12b1f349d1cbb1d555882e5d29b298"}, "originalPosition": 83}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "13ae7d728e12b1f349d1cbb1d555882e5d29b298", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/13ae7d728e12b1f349d1cbb1d555882e5d29b298", "committedDate": "2020-06-16T09:16:30Z", "message": "Fixup! [FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation\n\nDo not cancel slot request if it has been completed with another allocated slot"}, "afterCommit": {"oid": "4f5b21017451ccae3811069e6534f3fa8aeaf1ad", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/4f5b21017451ccae3811069e6534f3fa8aeaf1ad", "committedDate": "2020-06-17T07:43:56Z", "message": "[FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMTUyNTAz", "url": "https://github.com/apache/flink/pull/12278#pullrequestreview-432152503", "createdAt": "2020-06-17T08:00:37Z", "commit": {"oid": "4f5b21017451ccae3811069e6534f3fa8aeaf1ad"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODowMDozN1rOGk6PkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODoxMDo1NlrOGk6m7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM1NjE3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tscheduler.allocateSlot(\n          \n          \n            \n            \t\t\t\tslotRequestId1,\n          \n          \n            \n            \t\t\t\tnew DummyScheduledUnit(),\n          \n          \n            \n            \t\t\t\tSlotProfile.noRequirements(),\n          \n          \n            \n            \t\t\t\ttimeout);\n          \n          \n            \n            \t\t\tallocateSlot(scheduler, slotRequestId1);", "url": "https://github.com/apache/flink/pull/12278#discussion_r441356176", "createdAt": "2020-06-17T08:00:37Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/slotpool/SlotPoolImplTest.java", "diffHunk": "@@ -738,6 +740,95 @@ public void testCalculationOfTaskExecutorUtilization() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testOrphanedAllocationCanBeRemapped() throws Exception {\n+\t\ttry (SlotPoolImpl slotPool = createSlotPoolImpl()) {\n+\t\t\tfinal List<AllocationID> allocationIds = new ArrayList<>();\n+\t\t\tresourceManagerGateway.setRequestSlotConsumer(\n+\t\t\t\tslotRequest -> allocationIds.add(slotRequest.getAllocationId()));\n+\n+\t\t\tfinal List<AllocationID> canceledAllocations = new ArrayList<>();\n+\t\t\tresourceManagerGateway.setCancelSlotConsumer(canceledAllocations::add);\n+\n+\t\t\tsetupSlotPool(slotPool, resourceManagerGateway, mainThreadExecutor);\n+\t\t\tfinal Scheduler scheduler = setupScheduler(slotPool, mainThreadExecutor);\n+\n+\t\t\tfinal SlotRequestId slotRequestId1 = new SlotRequestId();\n+\t\t\tscheduler.allocateSlot(\n+\t\t\t\tslotRequestId1,\n+\t\t\t\tnew DummyScheduledUnit(),\n+\t\t\t\tSlotProfile.noRequirements(),\n+\t\t\t\ttimeout);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5b21017451ccae3811069e6534f3fa8aeaf1ad"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM1NzI5MA==", "bodyText": "There is already a private method SlotPoolImplTest#allocateSlot for this.\nI would also extend this private method to submit multiple allocations at once in order:\nallocateSlot(Scheduler scheduler, SlotRequestId ... slotRequestIds)", "url": "https://github.com/apache/flink/pull/12278#discussion_r441357290", "createdAt": "2020-06-17T08:02:25Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/slotpool/SlotPoolImplTest.java", "diffHunk": "@@ -738,6 +740,95 @@ public void testCalculationOfTaskExecutorUtilization() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testOrphanedAllocationCanBeRemapped() throws Exception {\n+\t\ttry (SlotPoolImpl slotPool = createSlotPoolImpl()) {\n+\t\t\tfinal List<AllocationID> allocationIds = new ArrayList<>();\n+\t\t\tresourceManagerGateway.setRequestSlotConsumer(\n+\t\t\t\tslotRequest -> allocationIds.add(slotRequest.getAllocationId()));\n+\n+\t\t\tfinal List<AllocationID> canceledAllocations = new ArrayList<>();\n+\t\t\tresourceManagerGateway.setCancelSlotConsumer(canceledAllocations::add);\n+\n+\t\t\tsetupSlotPool(slotPool, resourceManagerGateway, mainThreadExecutor);\n+\t\t\tfinal Scheduler scheduler = setupScheduler(slotPool, mainThreadExecutor);\n+\n+\t\t\tfinal SlotRequestId slotRequestId1 = new SlotRequestId();\n+\t\t\tscheduler.allocateSlot(\n+\t\t\t\tslotRequestId1,\n+\t\t\t\tnew DummyScheduledUnit(),\n+\t\t\t\tSlotProfile.noRequirements(),\n+\t\t\t\ttimeout);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM1NjE3Ng=="}, "originalCommit": {"oid": "4f5b21017451ccae3811069e6534f3fa8aeaf1ad"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM1ODMzOA==", "bodyText": "nit: maybe, not now but if it can be reused also in other tests, it would be nice to have something like an RM harness:\nclass RmHarness {\nfinal List<AllocationID> allocationIds = new ArrayList<>();\nfinal List<AllocationID> canceledAllocations = new ArrayList<>();\nRmHarness(resourceManagerGateway)\ngetAllocations\ngetCanceled\n}", "url": "https://github.com/apache/flink/pull/12278#discussion_r441358338", "createdAt": "2020-06-17T08:04:25Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/slotpool/SlotPoolImplTest.java", "diffHunk": "@@ -738,6 +740,95 @@ public void testCalculationOfTaskExecutorUtilization() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testOrphanedAllocationCanBeRemapped() throws Exception {\n+\t\ttry (SlotPoolImpl slotPool = createSlotPoolImpl()) {\n+\t\t\tfinal List<AllocationID> allocationIds = new ArrayList<>();\n+\t\t\tresourceManagerGateway.setRequestSlotConsumer(\n+\t\t\t\tslotRequest -> allocationIds.add(slotRequest.getAllocationId()));\n+\n+\t\t\tfinal List<AllocationID> canceledAllocations = new ArrayList<>();\n+\t\t\tresourceManagerGateway.setCancelSlotConsumer(canceledAllocations::add);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5b21017451ccae3811069e6534f3fa8aeaf1ad"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM1OTk1Mw==", "bodyText": "why do we use Scheduler to unit test SlotPoolImpl?\nwhy not to call SlotPoolImpl directly, like in testFailingAllocationFailsRemappedPendingSlotRequests?", "url": "https://github.com/apache/flink/pull/12278#discussion_r441359953", "createdAt": "2020-06-17T08:07:18Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/slotpool/SlotPoolImplTest.java", "diffHunk": "@@ -738,6 +740,95 @@ public void testCalculationOfTaskExecutorUtilization() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testOrphanedAllocationCanBeRemapped() throws Exception {\n+\t\ttry (SlotPoolImpl slotPool = createSlotPoolImpl()) {\n+\t\t\tfinal List<AllocationID> allocationIds = new ArrayList<>();\n+\t\t\tresourceManagerGateway.setRequestSlotConsumer(\n+\t\t\t\tslotRequest -> allocationIds.add(slotRequest.getAllocationId()));\n+\n+\t\t\tfinal List<AllocationID> canceledAllocations = new ArrayList<>();\n+\t\t\tresourceManagerGateway.setCancelSlotConsumer(canceledAllocations::add);\n+\n+\t\t\tsetupSlotPool(slotPool, resourceManagerGateway, mainThreadExecutor);\n+\t\t\tfinal Scheduler scheduler = setupScheduler(slotPool, mainThreadExecutor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5b21017451ccae3811069e6534f3fa8aeaf1ad"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM2MDgxMA==", "bodyText": "it can be partially reused in testFailingAllocationFailsRemappedPendingSlotRequests", "url": "https://github.com/apache/flink/pull/12278#discussion_r441360810", "createdAt": "2020-06-17T08:08:47Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/slotpool/SlotPoolImplTest.java", "diffHunk": "@@ -738,6 +740,95 @@ public void testCalculationOfTaskExecutorUtilization() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testOrphanedAllocationCanBeRemapped() throws Exception {\n+\t\ttry (SlotPoolImpl slotPool = createSlotPoolImpl()) {\n+\t\t\tfinal List<AllocationID> allocationIds = new ArrayList<>();\n+\t\t\tresourceManagerGateway.setRequestSlotConsumer(\n+\t\t\t\tslotRequest -> allocationIds.add(slotRequest.getAllocationId()));\n+\n+\t\t\tfinal List<AllocationID> canceledAllocations = new ArrayList<>();\n+\t\t\tresourceManagerGateway.setCancelSlotConsumer(canceledAllocations::add);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM1ODMzOA=="}, "originalCommit": {"oid": "4f5b21017451ccae3811069e6534f3fa8aeaf1ad"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM2MjE1OQ==", "bodyText": "Could we reuse/deduplicate setUpSlotPool also in SlotPoolImplTest?", "url": "https://github.com/apache/flink/pull/12278#discussion_r441362159", "createdAt": "2020-06-17T08:10:56Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/slotpool/SlotPoolPendingRequestFailureTest.java", "diffHunk": "@@ -99,6 +105,40 @@ public void testFailingAllocationFailsPendingSlotRequests() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testFailingAllocationFailsRemappedPendingSlotRequests() throws Exception {\n+\t\tfinal List<AllocationID> allocations = new ArrayList<>();\n+\t\tresourceManagerGateway.setRequestSlotConsumer(slotRequest -> allocations.add(slotRequest.getAllocationId()));\n+\n+\t\ttry (SlotPoolImpl slotPool = setUpSlotPool()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f5b21017451ccae3811069e6534f3fa8aeaf1ad"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75931f83b3ecedad521c77164fb12d9371637fbf", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/75931f83b3ecedad521c77164fb12d9371637fbf", "committedDate": "2020-06-17T09:58:41Z", "message": "[FLINK-17019][runtime] All pending requests removal goes to SlotPool#removePendingRequest() for centrally management"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a3ca89b9968e0b62d17b09d9e7fae8bc8ef0de8", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/7a3ca89b9968e0b62d17b09d9e7fae8bc8ef0de8", "committedDate": "2020-06-17T09:58:42Z", "message": "[FLINK-17019][runtime] Fulfill slot requests in request order\n\nThis is to avoid slot competitions between slot allocation bulks which can lead to resource deadlocks."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c85ea1512446d82265e9ea92a59da90affeb0b7d", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/c85ea1512446d82265e9ea92a59da90affeb0b7d", "committedDate": "2020-06-17T09:58:42Z", "message": "[hotfix][runtime] Make DualKeyLinkedMap package private"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "214d4a7199277b2c4ed3e976a0e065578fdaff94", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/214d4a7199277b2c4ed3e976a0e065578fdaff94", "committedDate": "2020-06-17T09:58:42Z", "message": "[FLINK-17019][runtime] Make clear the iteration order contract of DualKeyLinkedMap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a1aae38af697c0a77e6d7986b250954a3d551b4", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/3a1aae38af697c0a77e6d7986b250954a3d551b4", "committedDate": "2020-06-17T09:58:42Z", "message": "[FLINK-17019][runtime] Enable DualKeyLinkedMap for querying primary/secondary key with a given secondary/primary key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cb106e2af56fda6821e92271225437549d70769", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/1cb106e2af56fda6821e92271225437549d70769", "committedDate": "2020-06-17T09:58:42Z", "message": "[FLINK-17019][runtime] Change primary key re-insertion in DualKeyLinkedMap to not affect the insertion order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab11f37b0a46e1cf35434b55eb08bda539f16258", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/ab11f37b0a46e1cf35434b55eb08bda539f16258", "committedDate": "2020-06-17T09:58:42Z", "message": "[FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f5b21017451ccae3811069e6534f3fa8aeaf1ad", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/4f5b21017451ccae3811069e6534f3fa8aeaf1ad", "committedDate": "2020-06-17T07:43:56Z", "message": "[FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation"}, "afterCommit": {"oid": "ab11f37b0a46e1cf35434b55eb08bda539f16258", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/ab11f37b0a46e1cf35434b55eb08bda539f16258", "committedDate": "2020-06-17T09:58:42Z", "message": "[FLINK-17019][runtime] Remap orphaned slot allocation to pending slot request which just lost its allocation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNDU0NzE5", "url": "https://github.com/apache/flink/pull/12278#pullrequestreview-432454719", "createdAt": "2020-06-17T14:22:50Z", "commit": {"oid": "ab11f37b0a46e1cf35434b55eb08bda539f16258"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNDU1MTUy", "url": "https://github.com/apache/flink/pull/12278#pullrequestreview-432455152", "createdAt": "2020-06-17T14:23:15Z", "commit": {"oid": "ab11f37b0a46e1cf35434b55eb08bda539f16258"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4689, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}