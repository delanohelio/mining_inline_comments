{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3OTk2NDIy", "number": 10954, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjozNDozOFrODb-xhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjo0Mjo1OFrODb-82Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjY2NjMxOnYy", "diffSide": "RIGHT", "path": "flink-end-to-end-tests/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjozNDozOFrOFjxrgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxOTowMjozM1rOFj2WPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1ODQzMw==", "bodyText": "Should <e2e.include.org.apache.flink.tests.util.categories.PreCommit>false</e2e.include.org.apache.flink.tests.util.categories.PreCommit> be added here?", "url": "https://github.com/apache/flink/pull/10954#discussion_r373058433", "createdAt": "2020-01-30T16:34:38Z", "author": {"login": "tillrohrmann"}, "path": "flink-end-to-end-tests/pom.xml", "diffHunk": "@@ -35,8 +35,19 @@ under the License.\n \t<name>flink-end-to-end-tests</name>\n \n \t<properties>\n-\t\t<includeE2E>org.apache.flink.tests.util.categories.Dummy</includeE2E>\n-\t\t<excludeE2E></excludeE2E>\n+\t\t<includeE2E/> <!-- keep this empty -->\n+\t\t<excludeE2E/> <!-- keep this empty -->\n+\t\t<!-- functions as a global exclude; required since an empty set of included groups implicitly includes all -->\n+\t\t<includeE2E.default>org.apache.flink.tests.util.categories.Dummy</includeE2E.default>\n+\t\t<!-- default inclusions / exclusions -->\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup1>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup1>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup2>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup2>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup3>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup3>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup4>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup4>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup5>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup5>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup6>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup6>\n+\t\t<e2e.exclude.org.apache.flink.tests.util.categories.Hadoop>true</e2e.exclude.org.apache.flink.tests.util.categories.Hadoop>\n+\t\t<e2e.exclude.org.apache.flink.testutils.junit.FailsOnJava11>true</e2e.exclude.org.apache.flink.testutils.junit.FailsOnJava11>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4219501d35f7b13eaf4e3319c321b82211a56ad4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5NjA2Ng==", "bodyText": "we can. technically it's not necessary, but it's a good idea to do so for clarity.", "url": "https://github.com/apache/flink/pull/10954#discussion_r373096066", "createdAt": "2020-01-30T17:43:57Z", "author": {"login": "zentol"}, "path": "flink-end-to-end-tests/pom.xml", "diffHunk": "@@ -35,8 +35,19 @@ under the License.\n \t<name>flink-end-to-end-tests</name>\n \n \t<properties>\n-\t\t<includeE2E>org.apache.flink.tests.util.categories.Dummy</includeE2E>\n-\t\t<excludeE2E></excludeE2E>\n+\t\t<includeE2E/> <!-- keep this empty -->\n+\t\t<excludeE2E/> <!-- keep this empty -->\n+\t\t<!-- functions as a global exclude; required since an empty set of included groups implicitly includes all -->\n+\t\t<includeE2E.default>org.apache.flink.tests.util.categories.Dummy</includeE2E.default>\n+\t\t<!-- default inclusions / exclusions -->\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup1>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup1>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup2>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup2>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup3>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup3>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup4>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup4>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup5>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup5>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup6>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup6>\n+\t\t<e2e.exclude.org.apache.flink.tests.util.categories.Hadoop>true</e2e.exclude.org.apache.flink.tests.util.categories.Hadoop>\n+\t\t<e2e.exclude.org.apache.flink.testutils.junit.FailsOnJava11>true</e2e.exclude.org.apache.flink.testutils.junit.FailsOnJava11>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1ODQzMw=="}, "originalCommit": {"oid": "4219501d35f7b13eaf4e3319c321b82211a56ad4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzNDkwOA==", "bodyText": "done.", "url": "https://github.com/apache/flink/pull/10954#discussion_r373134908", "createdAt": "2020-01-30T19:02:33Z", "author": {"login": "zentol"}, "path": "flink-end-to-end-tests/pom.xml", "diffHunk": "@@ -35,8 +35,19 @@ under the License.\n \t<name>flink-end-to-end-tests</name>\n \n \t<properties>\n-\t\t<includeE2E>org.apache.flink.tests.util.categories.Dummy</includeE2E>\n-\t\t<excludeE2E></excludeE2E>\n+\t\t<includeE2E/> <!-- keep this empty -->\n+\t\t<excludeE2E/> <!-- keep this empty -->\n+\t\t<!-- functions as a global exclude; required since an empty set of included groups implicitly includes all -->\n+\t\t<includeE2E.default>org.apache.flink.tests.util.categories.Dummy</includeE2E.default>\n+\t\t<!-- default inclusions / exclusions -->\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup1>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup1>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup2>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup2>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup3>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup3>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup4>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup4>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup5>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup5>\n+\t\t<e2e.include.org.apache.flink.tests.util.categories.TravisGroup6>false</e2e.include.org.apache.flink.tests.util.categories.TravisGroup6>\n+\t\t<e2e.exclude.org.apache.flink.tests.util.categories.Hadoop>true</e2e.exclude.org.apache.flink.tests.util.categories.Hadoop>\n+\t\t<e2e.exclude.org.apache.flink.testutils.junit.FailsOnJava11>true</e2e.exclude.org.apache.flink.testutils.junit.FailsOnJava11>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA1ODQzMw=="}, "originalCommit": {"oid": "4219501d35f7b13eaf4e3319c321b82211a56ad4"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjY5NTI5OnYy", "diffSide": "RIGHT", "path": "flink-end-to-end-tests/pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNjo0Mjo1OFrOFjx-EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODowNTowM1rOFj0mzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA2MzE4NQ==", "bodyText": "Do we want to keep these printlns?", "url": "https://github.com/apache/flink/pull/10954#discussion_r373063185", "createdAt": "2020-01-30T16:42:58Z", "author": {"login": "tillrohrmann"}, "path": "flink-end-to-end-tests/pom.xml", "diffHunk": "@@ -90,6 +162,66 @@ under the License.\n \t\t\t\t\t<skip>true</skip>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.codehaus.gmavenplus</groupId>\n+\t\t\t\t<artifactId>gmavenplus-plugin</artifactId>\n+\t\t\t\t<version>1.8.1</version>\n+\t\t\t\t<dependencies>\n+\t\t\t\t\t<dependency>\n+\t\t\t\t\t\t<groupId>org.codehaus.groovy</groupId>\n+\t\t\t\t\t\t<artifactId>groovy-all</artifactId>\n+\t\t\t\t\t\t<version>2.5.9</version>\n+\t\t\t\t\t\t<scope>runtime</scope>\n+\t\t\t\t\t\t<type>pom</type>\n+\t\t\t\t\t</dependency>\n+\t\t\t\t</dependencies>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<id>merge-categories</id>\n+\t\t\t\t\t\t<phase>initialize</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>execute</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t\t<scripts>\n+\t\t\t\t\t\t\t\t<script>\n+\t\t\t\t\t\t\t\t\t<![CDATA[\n+\t\t\t\t\t\t\t\t\tdef categorySearcher = { String propertyPrefix ->\n+\t\t\t\t\t\t\t\t\t\tproject.properties.entrySet().stream()\n+\t\t\t\t\t\t\t\t\t\t\t.filter { p -> p.getKey().startsWith(propertyPrefix) }\n+\t\t\t\t\t\t\t\t\t\t\t.filter { p -> p.getValue().toBoolean() }\n+\t\t\t\t\t\t\t\t\t\t\t.map { p -> p.getKey() }\n+\t\t\t\t\t\t\t\t\t\t\t.map { p -> p.substring(propertyPrefix.size(), p.size()) }\n+\t\t\t\t\t\t\t\t\t\t\t.toList()\n+\t\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\t\tdef includes = categorySearcher('e2e.include.')\n+\t\t\t\t\t\t\t\t\t// allow overrides from the command-line\n+\t\t\t\t\t\t\t\t\tif (!project.properties.includeE2E.isEmpty()) {\n+\t\t\t\t\t\t\t\t\t\tincludes.add(project.properties.includeE2E)\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\tif (includes.size() > 0) {\n+\t\t\t\t\t\t\t\t\t\tproject.properties.includeE2E = includes.join(',')\n+\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\tproject.properties.includeE2E = project.properties.'includeE2E.default'\n+\t\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\t\tdef excludes = categorySearcher('e2e.exclude.')\n+\t\t\t\t\t\t\t\t\t// allow overrides from the command-line\n+\t\t\t\t\t\t\t\t\tif (!project.properties.excludeE2E.isEmpty()) {\n+\t\t\t\t\t\t\t\t\t\texcludes.add(project.properties.excludeE2E)\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\tproject.properties.excludeE2E = excludes.join(',')\n+\n+\t\t\t\t\t\t\t\t\tprintln \"includes: \" + project.properties.includeE2E\n+\t\t\t\t\t\t\t\t\tprintln \"excludes: \" + project.properties.excludeE2E", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4219501d35f7b13eaf4e3319c321b82211a56ad4"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5Njg4MA==", "bodyText": "I'm not sure. I like that you can tell at a glance whether something is off, which will be useful on Travis.", "url": "https://github.com/apache/flink/pull/10954#discussion_r373096880", "createdAt": "2020-01-30T17:45:39Z", "author": {"login": "zentol"}, "path": "flink-end-to-end-tests/pom.xml", "diffHunk": "@@ -90,6 +162,66 @@ under the License.\n \t\t\t\t\t<skip>true</skip>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.codehaus.gmavenplus</groupId>\n+\t\t\t\t<artifactId>gmavenplus-plugin</artifactId>\n+\t\t\t\t<version>1.8.1</version>\n+\t\t\t\t<dependencies>\n+\t\t\t\t\t<dependency>\n+\t\t\t\t\t\t<groupId>org.codehaus.groovy</groupId>\n+\t\t\t\t\t\t<artifactId>groovy-all</artifactId>\n+\t\t\t\t\t\t<version>2.5.9</version>\n+\t\t\t\t\t\t<scope>runtime</scope>\n+\t\t\t\t\t\t<type>pom</type>\n+\t\t\t\t\t</dependency>\n+\t\t\t\t</dependencies>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<id>merge-categories</id>\n+\t\t\t\t\t\t<phase>initialize</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>execute</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t\t<scripts>\n+\t\t\t\t\t\t\t\t<script>\n+\t\t\t\t\t\t\t\t\t<![CDATA[\n+\t\t\t\t\t\t\t\t\tdef categorySearcher = { String propertyPrefix ->\n+\t\t\t\t\t\t\t\t\t\tproject.properties.entrySet().stream()\n+\t\t\t\t\t\t\t\t\t\t\t.filter { p -> p.getKey().startsWith(propertyPrefix) }\n+\t\t\t\t\t\t\t\t\t\t\t.filter { p -> p.getValue().toBoolean() }\n+\t\t\t\t\t\t\t\t\t\t\t.map { p -> p.getKey() }\n+\t\t\t\t\t\t\t\t\t\t\t.map { p -> p.substring(propertyPrefix.size(), p.size()) }\n+\t\t\t\t\t\t\t\t\t\t\t.toList()\n+\t\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\t\tdef includes = categorySearcher('e2e.include.')\n+\t\t\t\t\t\t\t\t\t// allow overrides from the command-line\n+\t\t\t\t\t\t\t\t\tif (!project.properties.includeE2E.isEmpty()) {\n+\t\t\t\t\t\t\t\t\t\tincludes.add(project.properties.includeE2E)\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\tif (includes.size() > 0) {\n+\t\t\t\t\t\t\t\t\t\tproject.properties.includeE2E = includes.join(',')\n+\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\tproject.properties.includeE2E = project.properties.'includeE2E.default'\n+\t\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\t\tdef excludes = categorySearcher('e2e.exclude.')\n+\t\t\t\t\t\t\t\t\t// allow overrides from the command-line\n+\t\t\t\t\t\t\t\t\tif (!project.properties.excludeE2E.isEmpty()) {\n+\t\t\t\t\t\t\t\t\t\texcludes.add(project.properties.excludeE2E)\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\tproject.properties.excludeE2E = excludes.join(',')\n+\n+\t\t\t\t\t\t\t\t\tprintln \"includes: \" + project.properties.includeE2E\n+\t\t\t\t\t\t\t\t\tprintln \"excludes: \" + project.properties.excludeE2E", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA2MzE4NQ=="}, "originalCommit": {"oid": "4219501d35f7b13eaf4e3319c321b82211a56ad4"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwNjM4Mg==", "bodyText": "maybe keep them for a bit until the transition to azure is done and we are confident it works as it should.", "url": "https://github.com/apache/flink/pull/10954#discussion_r373106382", "createdAt": "2020-01-30T18:05:03Z", "author": {"login": "zentol"}, "path": "flink-end-to-end-tests/pom.xml", "diffHunk": "@@ -90,6 +162,66 @@ under the License.\n \t\t\t\t\t<skip>true</skip>\n \t\t\t\t</configuration>\n \t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.codehaus.gmavenplus</groupId>\n+\t\t\t\t<artifactId>gmavenplus-plugin</artifactId>\n+\t\t\t\t<version>1.8.1</version>\n+\t\t\t\t<dependencies>\n+\t\t\t\t\t<dependency>\n+\t\t\t\t\t\t<groupId>org.codehaus.groovy</groupId>\n+\t\t\t\t\t\t<artifactId>groovy-all</artifactId>\n+\t\t\t\t\t\t<version>2.5.9</version>\n+\t\t\t\t\t\t<scope>runtime</scope>\n+\t\t\t\t\t\t<type>pom</type>\n+\t\t\t\t\t</dependency>\n+\t\t\t\t</dependencies>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<id>merge-categories</id>\n+\t\t\t\t\t\t<phase>initialize</phase>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>execute</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t\t<scripts>\n+\t\t\t\t\t\t\t\t<script>\n+\t\t\t\t\t\t\t\t\t<![CDATA[\n+\t\t\t\t\t\t\t\t\tdef categorySearcher = { String propertyPrefix ->\n+\t\t\t\t\t\t\t\t\t\tproject.properties.entrySet().stream()\n+\t\t\t\t\t\t\t\t\t\t\t.filter { p -> p.getKey().startsWith(propertyPrefix) }\n+\t\t\t\t\t\t\t\t\t\t\t.filter { p -> p.getValue().toBoolean() }\n+\t\t\t\t\t\t\t\t\t\t\t.map { p -> p.getKey() }\n+\t\t\t\t\t\t\t\t\t\t\t.map { p -> p.substring(propertyPrefix.size(), p.size()) }\n+\t\t\t\t\t\t\t\t\t\t\t.toList()\n+\t\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\t\tdef includes = categorySearcher('e2e.include.')\n+\t\t\t\t\t\t\t\t\t// allow overrides from the command-line\n+\t\t\t\t\t\t\t\t\tif (!project.properties.includeE2E.isEmpty()) {\n+\t\t\t\t\t\t\t\t\t\tincludes.add(project.properties.includeE2E)\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\tif (includes.size() > 0) {\n+\t\t\t\t\t\t\t\t\t\tproject.properties.includeE2E = includes.join(',')\n+\t\t\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\t\t\tproject.properties.includeE2E = project.properties.'includeE2E.default'\n+\t\t\t\t\t\t\t\t\t}\n+\n+\t\t\t\t\t\t\t\t\tdef excludes = categorySearcher('e2e.exclude.')\n+\t\t\t\t\t\t\t\t\t// allow overrides from the command-line\n+\t\t\t\t\t\t\t\t\tif (!project.properties.excludeE2E.isEmpty()) {\n+\t\t\t\t\t\t\t\t\t\texcludes.add(project.properties.excludeE2E)\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\tproject.properties.excludeE2E = excludes.join(',')\n+\n+\t\t\t\t\t\t\t\t\tprintln \"includes: \" + project.properties.includeE2E\n+\t\t\t\t\t\t\t\t\tprintln \"excludes: \" + project.properties.excludeE2E", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA2MzE4NQ=="}, "originalCommit": {"oid": "4219501d35f7b13eaf4e3319c321b82211a56ad4"}, "originalPosition": 146}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1122, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}