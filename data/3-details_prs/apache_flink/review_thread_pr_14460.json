{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzOTk1MTk3", "number": 14460, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMTozNTo0OVrOFJgW5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMTozNTo0OVrOFJgW5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTExNjUyOnYy", "diffSide": "RIGHT", "path": "docs/_includes/generated/all_taskmanager_section.html", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMTozNTo0OVrOIL3mPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwODowOTo1OVrOIMJhAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNjE1Ng==", "bodyText": "Notice that a task cancellation is different from a task failure. So task cancellation timeout does not apply to task closing/clean-up caused by a task failure\n\n->\n\nNotice that a task cancellation is different from both a task failure and a clean shutdown. So task cancellation timeout applies only if you manually cancel the job and does not apply to task closing/clean-up caused by a task failure or clean shutdown.\n\n? Because as I understand, this notice applies as well for the clean shut down?", "url": "https://github.com/apache/flink/pull/14460#discussion_r549316156", "createdAt": "2020-12-28T11:35:49Z", "author": {"login": "pnowojski"}, "path": "docs/_includes/generated/all_taskmanager_section.html", "diffHunk": "@@ -18,7 +18,7 @@\n             <td><h5>task.cancellation.timeout</h5></td>\n             <td style=\"word-wrap: break-word;\">180000</td>\n             <td>Long</td>\n-            <td>Timeout in milliseconds after which a task cancellation times out and leads to a fatal TaskManager error. A value of 0 deactivates the watch dog.</td>\n+            <td>Timeout in milliseconds after which a task cancellation times out and leads to a fatal TaskManager error. A value of 0 deactivates the watch dog. Notice that a task cancellation is different from a task failure. So task cancellation timeout does not apply to task closing/clean-up caused by a task failure.</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3a798b659292251207db7dc1c762af9e2553a4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU2MDk2OA==", "bodyText": "Notice that a task cancellation is different from a task failure. So task cancellation timeout does not apply to task closing/clean-up caused by a task failure\n\n->\n\nNotice that a task cancellation is different from both a task failure and a clean shutdown. So task cancellation timeout applies only if you manually cancel the job and does not apply to task closing/clean-up caused by a task failure or clean shutdown.\n\n? Because as I understand, this notice applies as well for the clean shut down?\n\n\n\nThat's true in the sense that cleanUpInvoke is called both in the case of a task failure and a clean shutdown. But I thought task-cancelation-timeout naturally can not be considered as applied to a clean shutdown? Would that cause more confusion if we say that? The main confusion in general (and in the ticket FLINK-18983) is that people thought \"task-cancelation-timeout\" can be applied for \"failed tasks\" as well.\n\n\nTask cancelation does not always happen \"manually\", it can happen when a task fails and caused the rest of the tasks canceled by JM. So I would suggest \"task cancelation\" instead of saying \"manually cancel the job\"", "url": "https://github.com/apache/flink/pull/14460#discussion_r549560968", "createdAt": "2020-12-29T04:08:56Z", "author": {"login": "curcur"}, "path": "docs/_includes/generated/all_taskmanager_section.html", "diffHunk": "@@ -18,7 +18,7 @@\n             <td><h5>task.cancellation.timeout</h5></td>\n             <td style=\"word-wrap: break-word;\">180000</td>\n             <td>Long</td>\n-            <td>Timeout in milliseconds after which a task cancellation times out and leads to a fatal TaskManager error. A value of 0 deactivates the watch dog.</td>\n+            <td>Timeout in milliseconds after which a task cancellation times out and leads to a fatal TaskManager error. A value of 0 deactivates the watch dog. Notice that a task cancellation is different from a task failure. So task cancellation timeout does not apply to task closing/clean-up caused by a task failure.</td>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNjE1Ng=="}, "originalCommit": {"oid": "aa3a798b659292251207db7dc1c762af9e2553a4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYwOTczMQ==", "bodyText": "I would suggest to add clean shutdown mention, because up till the moment I started reading your PR, I was sure that the FLINK-18983 is all about clean shutdown \ud83d\ude13 So the mis conception can go in both directions .\n\ud83d\udc4d", "url": "https://github.com/apache/flink/pull/14460#discussion_r549609731", "createdAt": "2020-12-29T08:09:59Z", "author": {"login": "pnowojski"}, "path": "docs/_includes/generated/all_taskmanager_section.html", "diffHunk": "@@ -18,7 +18,7 @@\n             <td><h5>task.cancellation.timeout</h5></td>\n             <td style=\"word-wrap: break-word;\">180000</td>\n             <td>Long</td>\n-            <td>Timeout in milliseconds after which a task cancellation times out and leads to a fatal TaskManager error. A value of 0 deactivates the watch dog.</td>\n+            <td>Timeout in milliseconds after which a task cancellation times out and leads to a fatal TaskManager error. A value of 0 deactivates the watch dog. Notice that a task cancellation is different from a task failure. So task cancellation timeout does not apply to task closing/clean-up caused by a task failure.</td>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxNjE1Ng=="}, "originalCommit": {"oid": "aa3a798b659292251207db7dc1c762af9e2553a4"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4566, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}