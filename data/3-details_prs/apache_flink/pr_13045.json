{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxODM1MTYx", "number": 13045, "title": "[FLINK-18748][checkpointing] trigger unperiodic checkpoint immediately", "bodyText": "What is the purpose of the change\nThis pull request makes checkpoint/savepoint  triggered  immediately if it's not periodic\nBrief change log\n\nTrigger checkpoint/savepoint immediately if it's not periodic\n\nVerifying this change\nThis change modified an existing test:\n\nflink/runtime/checkpoint/CheckpointRequestDeciderTest:testSavepointTiming: nonForcedSavepoint && manualCheckpoint\n\nAnd this change adds three tests:\n\ntestNonForcedEnqueueOnTooManyPending: testing for nonforced savepoint on too many pending\ntestNonForcedUserSubmittedPrioritized: testing for order of nonforced savpoint and nonForcedPeriodicSavepoint\ntestNonForcedSavepointPrioritized: testing for order of nonForcedSavepoint and regularCheckpoint\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? ( no)\nIf yes, how is the feature documented? (not applicable)", "createdAt": "2020-08-02T17:22:33Z", "url": "https://github.com/apache/flink/pull/13045", "merged": true, "mergeCommit": {"oid": "e422d42e09bd5c79da8e62b5657f5f349d9ed4f1"}, "closed": true, "closedAt": "2020-08-04T07:51:08Z", "author": {"login": "DG-Wangtao"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc66E_VAH2gAyNDYxODM1MTYxOjE5NDQzMWE3MmNhZDRiODA2OWYyOWZkZDM5NTM5YjA1NDRmZDlkMzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7WnivgFqTQ2MDI2MTc3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "194431a72cad4b8069f29fdd39539b0544fd9d35", "author": {"user": {"login": "DG-Wangtao", "name": "wangtao"}}, "url": "https://github.com/apache/flink/commit/194431a72cad4b8069f29fdd39539b0544fd9d35", "committedDate": "2020-08-02T09:33:38Z", "message": "[FLINK-18748][Runtime/Checkpointing] trigger checkpoint immediately if it's unperiodic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NzUxNDY1", "url": "https://github.com/apache/flink/pull/13045#pullrequestreview-459751465", "createdAt": "2020-08-03T05:10:28Z", "commit": {"oid": "194431a72cad4b8069f29fdd39539b0544fd9d35"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNToxMToxNVrOG6sWjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwNToyODo0N1rOG6slUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE5NzI2MA==", "bodyText": "maybe we can reuse the first in onTooEarly function", "url": "https://github.com/apache/flink/pull/13045#discussion_r464197260", "createdAt": "2020-08-03T05:11:15Z", "author": {"login": "klion26"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointRequestDecider.java", "diffHunk": "@@ -136,6 +136,11 @@\n \t\t\t\t.map(unused -> queuedRequests.pollFirst());\n \t\t}\n \n+\t\tCheckpointTriggerRequest first = queuedRequests.first();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194431a72cad4b8069f29fdd39539b0544fd9d35"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIwMTA0Mw==", "bodyText": "after this change, do we need to add a test to guarantee \"savepoint and checkpoint would not execute concurrently under unaligned checkpoint mode\"", "url": "https://github.com/apache/flink/pull/13045#discussion_r464201043", "createdAt": "2020-08-03T05:28:47Z", "author": {"login": "klion26"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/CheckpointRequestDeciderTest.java", "diffHunk": "@@ -119,13 +119,13 @@ public void testQueueSizeLimitPriority() {\n \tpublic void testSavepointTiming() {\n \t\ttestTiming(regularSavepoint(), TriggerExpectation.IMMEDIATELY);\n \t\ttestTiming(periodicSavepoint(), TriggerExpectation.IMMEDIATELY);\n-\t\ttestTiming(nonForcedSavepoint(), TriggerExpectation.AFTER_PAUSE);\n+\t\ttestTiming(nonForcedSavepoint(), TriggerExpectation.IMMEDIATELY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194431a72cad4b8069f29fdd39539b0544fd9d35"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5ODY3NDk3", "url": "https://github.com/apache/flink/pull/13045#pullrequestreview-459867497", "createdAt": "2020-08-03T09:07:26Z", "commit": {"oid": "194431a72cad4b8069f29fdd39539b0544fd9d35"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwOTowNzoyNlrOG6x4ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwOTozOToxNlrOG6y7Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI4Nzg4Mg==", "bodyText": "Can we make the connection between this check and onTooEarly more explicit?\nFor example, by inverting this condition and putting onTooEarly inside.", "url": "https://github.com/apache/flink/pull/13045#discussion_r464287882", "createdAt": "2020-08-03T09:07:26Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointRequestDecider.java", "diffHunk": "@@ -136,6 +136,11 @@\n \t\t\t\t.map(unused -> queuedRequests.pollFirst());\n \t\t}\n \n+\t\tCheckpointTriggerRequest first = queuedRequests.first();\n+\t\tif (first.isForce() || !first.isPeriodic) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194431a72cad4b8069f29fdd39539b0544fd9d35"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDI5MTYwNw==", "bodyText": "Can we inline this function now?\nOtherwise, we need to duplicate the check and return logic (or use preconditions).\nCurrently, I think if is missing && !isForce check,\nand in the end, it should return pollFirst.", "url": "https://github.com/apache/flink/pull/13045#discussion_r464291607", "createdAt": "2020-08-03T09:14:31Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointRequestDecider.java", "diffHunk": "@@ -146,15 +151,11 @@\n \n \tprivate Optional<CheckpointTriggerRequest> onTooEarly(long nextTriggerDelayMillis) {\n \t\tCheckpointTriggerRequest first = queuedRequests.first();\n-\t\tif (first.isForce()) {\n-\t\t\treturn Optional.of(queuedRequests.pollFirst());\n-\t\t} else if (first.isPeriodic) {\n+\t\tif (first.isPeriodic) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194431a72cad4b8069f29fdd39539b0544fd9d35"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMwNDk3NQ==", "bodyText": "I think maxPendingCheckpoints limit (what @klion26 proposed) and order are different things to check.\nFor the 1st one, I think we can reuse testEnqueueOnTooManyPending by calling nonForcedSavepoint instead of  regularCheckpoint.", "url": "https://github.com/apache/flink/pull/13045#discussion_r464304975", "createdAt": "2020-08-03T09:39:16Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/CheckpointRequestDeciderTest.java", "diffHunk": "@@ -119,13 +119,13 @@ public void testQueueSizeLimitPriority() {\n \tpublic void testSavepointTiming() {\n \t\ttestTiming(regularSavepoint(), TriggerExpectation.IMMEDIATELY);\n \t\ttestTiming(periodicSavepoint(), TriggerExpectation.IMMEDIATELY);\n-\t\ttestTiming(nonForcedSavepoint(), TriggerExpectation.AFTER_PAUSE);\n+\t\ttestTiming(nonForcedSavepoint(), TriggerExpectation.IMMEDIATELY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDIwMTA0Mw=="}, "originalCommit": {"oid": "194431a72cad4b8069f29fdd39539b0544fd9d35"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc1a115c8825526c96674b35effceabc7542d0c2", "author": {"user": {"login": "DG-Wangtao", "name": "wangtao"}}, "url": "https://github.com/apache/flink/commit/bc1a115c8825526c96674b35effceabc7542d0c2", "committedDate": "2020-08-03T15:22:33Z", "message": "[FLINK-18748][Runtime/Checkpointing] remove  function and add unit test for NonForced savepoints"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4a4599128c1f8d1432acccfc66c4cd1c8d95ba22", "author": {"user": {"login": "DG-Wangtao", "name": "wangtao"}}, "url": "https://github.com/apache/flink/commit/4a4599128c1f8d1432acccfc66c4cd1c8d95ba22", "committedDate": "2020-08-03T14:36:51Z", "message": "[FLINK-18748][Runtime/Checkpointing] remove  function and add unit test for NonForced savepoints"}, "afterCommit": {"oid": "bc1a115c8825526c96674b35effceabc7542d0c2", "author": {"user": {"login": "DG-Wangtao", "name": "wangtao"}}, "url": "https://github.com/apache/flink/commit/bc1a115c8825526c96674b35effceabc7542d0c2", "committedDate": "2020-08-03T15:22:33Z", "message": "[FLINK-18748][Runtime/Checkpointing] remove  function and add unit test for NonForced savepoints"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMjYxNzc5", "url": "https://github.com/apache/flink/pull/13045#pullrequestreview-460261779", "createdAt": "2020-08-03T18:48:43Z", "commit": {"oid": "bc1a115c8825526c96674b35effceabc7542d0c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4922, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}