{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMDIwMDAx", "number": 12332, "title": "[FLINK-17820][task][checkpointing] Respect fileSizeThreshold in FsCheckpointStateOutputStream.flush()", "bodyText": "What is the purpose of the change\nSee FLINK-17820 for full problem description. In short, Flink ignores state.backend.fs.memory-threshold and always creates a file per subtask per checkpoint.\nThis PR makes FsCheckpointStateOutputStream.flush() to take fileStateThreshold into account.\nVerifying this change\nThis change added tests:\n\nFsCheckpointStreamFactoryTest.testFlushUnderThreshold\nFsCheckpointStreamFactoryTest.testFlushAboveThreshold\nChannelStateCheckpointWriterTest.testSmallFilesNotWritten\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? not applicable", "createdAt": "2020-05-26T06:56:46Z", "url": "https://github.com/apache/flink/pull/12332", "merged": true, "mergeCommit": {"oid": "8b4fe87a74d3ec631350ebac4dfdf69094c802e3"}, "closed": true, "closedAt": "2020-05-27T06:39:44Z", "author": {"login": "rkhachatryan"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclAQLWgFqTQxODA2NDg2Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABclHwenABqjMzNzQ1MTM5NzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MDY0ODYy", "url": "https://github.com/apache/flink/pull/12332#pullrequestreview-418064862", "createdAt": "2020-05-26T08:10:03Z", "commit": {"oid": "bdc25159e69734b32bf88f72c6224dee235c1ddc"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxMDowM1rOGaTQlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxNDoyMVrOGaTZ6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzMTcwMg==", "bodyText": "Maybe extend this to if (stream != null || pos > localStateThreshold)?", "url": "https://github.com/apache/flink/pull/12332#discussion_r430231702", "createdAt": "2020-05-26T08:10:03Z", "author": {"login": "StephanEwen"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStreamFactory.java", "diffHunk": "@@ -266,6 +264,16 @@ public void flush() throws IOException {\n \t\t\t}\n \t\t}\n \n+\t\t/**\n+\t\t * Flush buffers to file if their size is above {@link #localStateThreshold}.\n+\t\t */\n+\t\t@Override\n+\t\tpublic void flush() throws IOException {\n+\t\t\tif (pos > localStateThreshold) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdc25159e69734b32bf88f72c6224dee235c1ddc"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzMTc3MQ==", "bodyText": "We can make this public, let the tests call it directly.", "url": "https://github.com/apache/flink/pull/12332#discussion_r430231771", "createdAt": "2020-05-26T08:10:09Z", "author": {"login": "StephanEwen"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStreamFactory.java", "diffHunk": "@@ -247,15 +247,13 @@ public long getPos() throws IOException {\n \t\t\treturn pos + (outStream == null ? 0 : outStream.getPos());\n \t\t}\n \n-\t\t@Override\n-\t\tpublic void flush() throws IOException {\n+\t\tprivate void flushToFile() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdc25159e69734b32bf88f72c6224dee235c1ddc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNDA5MA==", "bodyText": "If we type the exclusiveStream to FsCheckpointStateOutputStream, we could call flushToFile() directly.\nThen we don't implicitly rely on the threshold logic here as well.", "url": "https://github.com/apache/flink/pull/12332#discussion_r430234090", "createdAt": "2020-05-26T08:14:21Z", "author": {"login": "StephanEwen"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStorageTest.java", "diffHunk": "@@ -165,8 +165,7 @@ public void testDirectoriesForExclusiveAndSharedState() throws Exception {\n \t\tCheckpointStateOutputStream exclusiveStream =\n \t\t\t\tstorageLocation.createCheckpointStateOutputStream(CheckpointedStateScope.EXCLUSIVE);\n \n-\t\texclusiveStream.write(42);\n-\t\texclusiveStream.flush();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdc25159e69734b32bf88f72c6224dee235c1ddc"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bdc25159e69734b32bf88f72c6224dee235c1ddc", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/bdc25159e69734b32bf88f72c6224dee235c1ddc", "committedDate": "2020-05-26T06:51:57Z", "message": "[FLINK-17820][task][checkpointing] Respect fileSizeThreshold in FsCheckpointStateOutputStream.flush()"}, "afterCommit": {"oid": "c574198c34562970cc0939c57f750c6bac3530d5", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/c574198c34562970cc0939c57f750c6bac3530d5", "committedDate": "2020-05-26T08:50:37Z", "message": "[FLINK-17820][task][checkpointing] Respect fileSizeThreshold in FsCheckpointStateOutputStream.flush()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NDM2NTIx", "url": "https://github.com/apache/flink/pull/12332#pullrequestreview-418436521", "createdAt": "2020-05-26T15:48:32Z", "commit": {"oid": "c574198c34562970cc0939c57f750c6bac3530d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0ODozM1rOGakwTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0ODozM1rOGakwTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxODM1MQ==", "bodyText": "nit: unnecessary formatting changes, I guess it was done automatically by IDE.", "url": "https://github.com/apache/flink/pull/12332#discussion_r430518351", "createdAt": "2020-05-26T15:48:33Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/channel/ChannelStateCheckpointWriterTest.java", "diffHunk": "@@ -95,12 +118,12 @@ public void flush() throws IOException {\n \n \t\tFlushRecorder dataStream = new FlushRecorder();\n \t\tfinal ChannelStateCheckpointWriter writer = new ChannelStateCheckpointWriter(\n-\t\t\t1L,\n-\t\t\tnew ChannelStateWriteResult(),\n-\t\t\tnew ChannelStateSerializerImpl(),\n-\t\t\tNO_OP_RUNNABLE,\n-\t\t\tnew MemoryCheckpointOutputStream(42),\n-\t\t\tdataStream\n+\t\t\t\t1L,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c574198c34562970cc0939c57f750c6bac3530d5"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NDM2OTI2", "url": "https://github.com/apache/flink/pull/12332#pullrequestreview-418436926", "createdAt": "2020-05-26T15:48:57Z", "commit": {"oid": "c574198c34562970cc0939c57f750c6bac3530d5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c574198c34562970cc0939c57f750c6bac3530d5", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/c574198c34562970cc0939c57f750c6bac3530d5", "committedDate": "2020-05-26T08:50:37Z", "message": "[FLINK-17820][task][checkpointing] Respect fileSizeThreshold in FsCheckpointStateOutputStream.flush()"}, "afterCommit": {"oid": "43ae9ff3a5df4e71d52b87c63beebbbad9967277", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/43ae9ff3a5df4e71d52b87c63beebbbad9967277", "committedDate": "2020-05-26T16:53:57Z", "message": "[FLINK-17820][task][checkpointing] Respect fileSizeThreshold in FsCheckpointStateOutputStream.flush()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f08cd17559f206395e11f2a2e7f3dae093941f1d", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/f08cd17559f206395e11f2a2e7f3dae093941f1d", "committedDate": "2020-05-26T17:03:18Z", "message": "[FLINK-17820][task][checkpointing] Respect fileSizeThreshold in FsCheckpointStateOutputStream.flush()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43ae9ff3a5df4e71d52b87c63beebbbad9967277", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/43ae9ff3a5df4e71d52b87c63beebbbad9967277", "committedDate": "2020-05-26T16:53:57Z", "message": "[FLINK-17820][task][checkpointing] Respect fileSizeThreshold in FsCheckpointStateOutputStream.flush()"}, "afterCommit": {"oid": "f08cd17559f206395e11f2a2e7f3dae093941f1d", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/f08cd17559f206395e11f2a2e7f3dae093941f1d", "committedDate": "2020-05-26T17:03:18Z", "message": "[FLINK-17820][task][checkpointing] Respect fileSizeThreshold in FsCheckpointStateOutputStream.flush()"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4429, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}