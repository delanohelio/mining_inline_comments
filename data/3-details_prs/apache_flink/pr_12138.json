{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3Njc2NjY4", "number": 12138, "title": "[FLINK-16611] [datadog-metrics] Make number of metrics per request configurable", "bodyText": "What is the purpose of the change\nDatadog limits how large a single request may be. If too large, Datadog returns a 413 and the metrics are not received. This pull request allows a user to set the maximum number of metrics to include in a single request to Datadog so they can control its size.\nBrief change log\n(for example:)\n\nSet maxMetricsPerRequest from config or default if not found\nKept track of the number of metrics in each request iteration. Send the request when the max size has been met or no more metrics are left to add.\n\nVerifying this change\nThis change is a trivial rework / code cleanup without any test coverage.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency):  no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive):  no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? not applicable", "createdAt": "2020-05-14T00:07:11Z", "url": "https://github.com/apache/flink/pull/12138", "merged": true, "mergeCommit": {"oid": "df16e42a67aaba8e4ada34915d224e380190685f"}, "closed": true, "closedAt": "2020-05-20T09:31:46Z", "author": {"login": "swhelan091"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchJJlkAFqTQxMTU3NDEwMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjFr0SgH2gAyNDE3Njc2NjY4OmNmYTcwODVkZjE2Njk4ZWM1YTc0NjY0OGQ2ZThjNzIzYTk0ZGJlMDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNTc0MTAx", "url": "https://github.com/apache/flink/pull/12138#pullrequestreview-411574101", "createdAt": "2020-05-14T08:25:11Z", "commit": {"oid": "a6af75021894504c6515472be86f1e490ae32e27"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODoyNToxMlrOGVRWug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODoyNToxMlrOGVRWug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk1NzYyNg==", "bodyText": "hmm, I don't really like that we're always sending at least 2 requests, as long as at least one counter and gauge exist.\nUltimately, all we need to do is slice the currently created DSeries, which we could do using ArrayList#subList.\nint fromIndex = 0;\nArrayList<DMetric> series = request.getSeries();\nwhile (fromIndex < series.size()) {\n  int toIndex = Math.Min(currentCount + maxMetricsPerRequestValue, series.size());\n  client.send(series.subList(fromIndex, toIndex));\n  fromIndex = toIndex;\n}\n\nWDYT? We could even wrap this logic into a stateful Consumer that resets the DSeries on each client.send, so we don't have to assemble the full list.", "url": "https://github.com/apache/flink/pull/12138#discussion_r424957626", "createdAt": "2020-05-14T08:25:12Z", "author": {"login": "zentol"}, "path": "flink-metrics/flink-metrics-datadog/src/main/java/org/apache/flink/metrics/datadog/DatadogHttpReporter.java", "diffHunk": "@@ -157,6 +181,11 @@ private void addGaugesAndUnregisterOnException(DSeries request) {\n \t\t\t\t// Flink uses Gauge to store many types other than Number\n \t\t\t\tg.getMetricValue();\n \t\t\t\trequest.addGauge(g);\n+\t\t\t\t++currentCount;\n+\t\t\t\tif (currentCount % maxMetricsPerRequestValue == 0 || currentCount >= totalGauges) {\n+\t\t\t\t\tclient.send(request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6af75021894504c6515472be86f1e490ae32e27"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MDgxMDYw", "url": "https://github.com/apache/flink/pull/12138#pullrequestreview-414081060", "createdAt": "2020-05-19T03:43:35Z", "commit": {"oid": "3fa364afeda36c6e3de19804317d7470ecfcbd21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMzo0MzozNVrOGXOzvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMzo0MzozNVrOGXOzvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAxMzA1NQ==", "bodyText": "One question here. Should ackReport only be called on counters that were successfully emitted to Datadog?", "url": "https://github.com/apache/flink/pull/12138#discussion_r427013055", "createdAt": "2020-05-19T03:43:35Z", "author": {"login": "swhelan091"}, "path": "flink-metrics/flink-metrics-datadog/src/main/java/org/apache/flink/metrics/datadog/DatadogHttpReporter.java", "diffHunk": "@@ -137,15 +140,21 @@ public void report() {\n \t\tcounters.values().forEach(request::addCounter);\n \t\tmeters.values().forEach(request::addMeter);\n \n-\t\ttry {\n-\t\t\tclient.send(request);\n-\t\t\tcounters.values().forEach(DCounter::ackReport);\n-\t\t\tLOGGER.debug(\"Reported series with size {}.\", request.getSeries().size());\n-\t\t} catch (SocketTimeoutException e) {\n-\t\t\tLOGGER.warn(\"Failed reporting metrics to Datadog because of socket timeout: {}\", e.getMessage());\n-\t\t} catch (Exception e) {\n-\t\t\tLOGGER.warn(\"Failed reporting metrics to Datadog.\", e);\n+\t\tint totalMetrics = request.getSeries().size();\n+\t\tint fromIndex = 0;\n+\t\twhile (fromIndex < totalMetrics) {\n+\t\t\tint toIndex = Math.min(fromIndex + maxMetricsPerRequestValue, totalMetrics);\n+\t\t\ttry {\n+\t\t\t\tclient.send(new DSeries(request.getSeries().subList(fromIndex, toIndex)));\n+\t\t\t} catch (SocketTimeoutException e) {\n+\t\t\t\tLOGGER.warn(\"Failed reporting metrics to Datadog because of socket timeout: {}\", e.getMessage());\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tLOGGER.warn(\"Failed reporting metrics to Datadog.\", e);\n+\t\t\t}\n+\t\t\tfromIndex = toIndex;\n \t\t}\n+\t\tLOGGER.debug(\"Reported series with size {}.\", totalMetrics);\n+\t\tcounters.values().forEach(DCounter::ackReport);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fa364afeda36c6e3de19804317d7470ecfcbd21"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9bd37ce2064a3cbd1d262adcf7f2a0414b76360", "author": {"user": {"login": "swhelan091", "name": "Steve Whelan"}}, "url": "https://github.com/apache/flink/commit/c9bd37ce2064a3cbd1d262adcf7f2a0414b76360", "committedDate": "2020-05-19T15:08:08Z", "message": "[FLINK-16611] [datadog-metrics] Make number of metrics per request configurable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b68d57306a42552df999c5ba8d3b4b598519b8f7", "author": {"user": {"login": "swhelan091", "name": "Steve Whelan"}}, "url": "https://github.com/apache/flink/commit/b68d57306a42552df999c5ba8d3b4b598519b8f7", "committedDate": "2020-05-19T15:08:08Z", "message": "use a sublist to iterate metrics"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3fa364afeda36c6e3de19804317d7470ecfcbd21", "author": {"user": {"login": "swhelan091", "name": "Steve Whelan"}}, "url": "https://github.com/apache/flink/commit/3fa364afeda36c6e3de19804317d7470ecfcbd21", "committedDate": "2020-05-19T03:40:44Z", "message": "use a sublist to iterate metrics"}, "afterCommit": {"oid": "637bf0d7481f653c129625f20b95f02a75c5b711", "author": {"user": {"login": "swhelan091", "name": "Steve Whelan"}}, "url": "https://github.com/apache/flink/commit/637bf0d7481f653c129625f20b95f02a75c5b711", "committedDate": "2020-05-19T15:22:57Z", "message": "ackReport metrics only if sent successfully"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27d88f5b04869ef3fd68e3fad99dfef3d16856e9", "author": {"user": {"login": "swhelan091", "name": "Steve Whelan"}}, "url": "https://github.com/apache/flink/commit/27d88f5b04869ef3fd68e3fad99dfef3d16856e9", "committedDate": "2020-05-19T15:24:25Z", "message": "ackReport metrics only if sent successfully"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "637bf0d7481f653c129625f20b95f02a75c5b711", "author": {"user": {"login": "swhelan091", "name": "Steve Whelan"}}, "url": "https://github.com/apache/flink/commit/637bf0d7481f653c129625f20b95f02a75c5b711", "committedDate": "2020-05-19T15:22:57Z", "message": "ackReport metrics only if sent successfully"}, "afterCommit": {"oid": "27d88f5b04869ef3fd68e3fad99dfef3d16856e9", "author": {"user": {"login": "swhelan091", "name": "Steve Whelan"}}, "url": "https://github.com/apache/flink/commit/27d88f5b04869ef3fd68e3fad99dfef3d16856e9", "committedDate": "2020-05-19T15:24:25Z", "message": "ackReport metrics only if sent successfully"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5af9275ab0463841a13c30693df4bbb79de1bb94", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/5af9275ab0463841a13c30693df4bbb79de1bb94", "committedDate": "2020-05-20T09:26:59Z", "message": "Update DatadogHttpReporter.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e24fc1eaea326825c7667d969005dd242c7ebc0", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/8e24fc1eaea326825c7667d969005dd242c7ebc0", "committedDate": "2020-05-20T09:28:41Z", "message": "Update DatadogHttpReporter.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfa7085df16698ec5a746648d6e8c723a94dbe07", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/cfa7085df16698ec5a746648d6e8c723a94dbe07", "committedDate": "2020-05-20T09:30:49Z", "message": "Update DatadogHttpReporter.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4933, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}