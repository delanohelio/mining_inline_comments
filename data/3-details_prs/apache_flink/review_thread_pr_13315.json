{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NTE1Nzg0", "number": 13315, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzowNzo1MlrOEgYCcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoxMTozNVrOEhjrIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzgzNzMwOnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/HiveTableSink.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzowNzo1MlrOHNM2TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzowNzo1MlrOHNM2TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYwNDA0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tthrow new TableException(String.format(\"Cannot write on the ACID table %s.\", identifier.asSummaryString()));\n          \n          \n            \n            \t\t\t\tthrow new FlinkHiveException(String.format(\"Writing ACID table %s is not supported\", identifier.asSummaryString()));", "url": "https://github.com/apache/flink/pull/13315#discussion_r483604044", "createdAt": "2020-09-04T13:07:52Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/HiveTableSink.java", "diffHunk": "@@ -328,4 +330,16 @@ public void setStaticPartition(Map<String, String> partitionSpec) {\n \tpublic void setOverwrite(boolean overwrite) {\n \t\tthis.overwrite = overwrite;\n \t}\n+\n+\tprivate void checkAcidTable() {\n+\t\tif (catalogTable != null && catalogTable.getOptions() != null) {\n+\t\t\tString tableIsTransactional = catalogTable.getOptions().get(\"transactional\");\n+\t\t\tif (tableIsTransactional == null) {\n+\t\t\t\ttableIsTransactional = catalogTable.getOptions().get(\"transactional\".toUpperCase());\n+\t\t\t}\n+\t\t\tif (tableIsTransactional != null && tableIsTransactional.equalsIgnoreCase(\"true\")) {\n+\t\t\t\tthrow new TableException(String.format(\"Cannot write on the ACID table %s.\", identifier.asSummaryString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ed647fc736a248d536d6f5422e0a50a7119045f"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzg0MDU1OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/HiveTableSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzowODo1NlrOHNM4Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzowODo1NlrOHNM4Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYwNDU2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tthrow new TableException(String.format(\"Cannot read on the ACID table %s.\", tablePath));\n          \n          \n            \n            \t\t\t\tthrow new FlinkHiveException(String.format(\"Reading ACID table %s is not supported\", tablePath));", "url": "https://github.com/apache/flink/pull/13315#discussion_r483604562", "createdAt": "2020-09-04T13:08:56Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/HiveTableSource.java", "diffHunk": "@@ -556,4 +558,16 @@ public String explainSource() {\n \tpublic boolean isAsyncEnabled() {\n \t\treturn false;\n \t}\n+\n+\tprivate void checkAcidTable() {\n+\t\tif (catalogTable != null && catalogTable.getOptions() != null) {\n+\t\t\tString tableIsTransactional = catalogTable.getOptions().get(\"transactional\");\n+\t\t\tif (tableIsTransactional == null) {\n+\t\t\t\ttableIsTransactional = catalogTable.getOptions().get(\"transactional\".toUpperCase());\n+\t\t\t}\n+\t\t\tif (tableIsTransactional != null && tableIsTransactional.equalsIgnoreCase(\"true\")) {\n+\t\t\t\tthrow new TableException(String.format(\"Cannot read on the ACID table %s.\", tablePath));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ed647fc736a248d536d6f5422e0a50a7119045f"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzg0MzUyOnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/HiveTableSink.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzowOTo0NlrOHNM6Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzowOTo0NlrOHNM6Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYwNTAxOQ==", "bodyText": "Let's extract these into a util method", "url": "https://github.com/apache/flink/pull/13315#discussion_r483605019", "createdAt": "2020-09-04T13:09:46Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/HiveTableSink.java", "diffHunk": "@@ -330,6 +332,18 @@ public void setOverwrite(boolean overwrite) {\n \t\tthis.overwrite = overwrite;\n \t}\n \n+\tprivate void checkAcidTable() {\n+\t\tif (catalogTable != null && catalogTable.getOptions() != null) {\n+\t\t\tString tableIsTransactional = catalogTable.getOptions().get(\"transactional\");\n+\t\t\tif (tableIsTransactional == null) {\n+\t\t\t\ttableIsTransactional = catalogTable.getOptions().get(\"transactional\".toUpperCase());\n+\t\t\t}\n+\t\t\tif (tableIsTransactional != null && tableIsTransactional.equalsIgnoreCase(\"true\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "451016cf861606ffe150929a9ad096d7aa665259"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzg2MDEzOnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzoxNDo0OVrOHNNEew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMzoxNDo0OVrOHNNEew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzYwNzY3NQ==", "bodyText": "No need to insert data", "url": "https://github.com/apache/flink/pull/13315#discussion_r483607675", "createdAt": "2020-09-04T13:14:49Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/TableEnvHiveConnectorITCase.java", "diffHunk": "@@ -574,6 +575,43 @@ public void testStreamCompressTextTable() throws Exception {\n \t\ttestCompressTextTable(false);\n \t}\n \n+\tprivate void testTransactionalTable(boolean batch) {\n+\t\tTableEnvironment tableEnv = batch ?\n+\t\t\tgetTableEnvWithHiveCatalog() :\n+\t\t\tgetStreamTableEnvWithHiveCatalog();\n+\t\ttableEnv.executeSql(\"create database db1\");\n+\t\ttry {\n+\t\t\ttableEnv.executeSql(\"create table db1.src (x string,y string)\");\n+\t\t\thiveShell.execute(\"create table db1.dest (x string,y string) clustered by (x) into 3 buckets stored as orc tblproperties ('transactional'='true')\");\n+\t\t\tHiveTestUtils.createTextTableInserter(hiveShell, \"db1\", \"src\")\n+\t\t\t\t.addRow(new Object[]{\"a\", \"b\"})\n+\t\t\t\t.addRow(new Object[]{\"c\", \"d\"})\n+\t\t\t\t.commit();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9e54a84b88a37bf16c73597f8bbbea8ab169f99"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjIyOTQ2OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTableUtil.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoxMTozNVrOHO7w_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwOToxMTowMFrOHO-LXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyMTMxMQ==", "bodyText": "catalogTable and tablePath never null, you can take a look to the constructor of HiveTableSource", "url": "https://github.com/apache/flink/pull/13315#discussion_r485421311", "createdAt": "2020-09-09T08:11:35Z", "author": {"login": "JingsongLi"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTableUtil.java", "diffHunk": "@@ -403,6 +404,25 @@ public static Table instantiateHiveTable(ObjectPath tablePath, CatalogBaseTable\n \t\t\t\t.collect(Collectors.toMap(t -> t.f0, t -> t.f1));\n \t}\n \n+\t/**\n+\t * Check whether to read or write on the hive ACID table.\n+\t *\n+\t * @param catalogTable Hive catalog table.\n+\t * @param tablePath    Identifier table path.\n+\t * @throws FlinkHiveException Thrown, if the source or sink table is transactional.\n+\t */\n+\tpublic static void checkAcidTable(CatalogTable catalogTable, ObjectPath tablePath) {\n+\t\tif (catalogTable != null && catalogTable.getOptions() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d8f174b90ce3efd668bb7d53709d55eab2cbfa0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyNzI1Nw==", "bodyText": "@JingsongLi checkAcidTable is the util method for HiveTableUtil, which should add check for the parameter catalogTable.", "url": "https://github.com/apache/flink/pull/13315#discussion_r485427257", "createdAt": "2020-09-09T08:21:13Z", "author": {"login": "SteNicholas"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTableUtil.java", "diffHunk": "@@ -403,6 +404,25 @@ public static Table instantiateHiveTable(ObjectPath tablePath, CatalogBaseTable\n \t\t\t\t.collect(Collectors.toMap(t -> t.f0, t -> t.f1));\n \t}\n \n+\t/**\n+\t * Check whether to read or write on the hive ACID table.\n+\t *\n+\t * @param catalogTable Hive catalog table.\n+\t * @param tablePath    Identifier table path.\n+\t * @throws FlinkHiveException Thrown, if the source or sink table is transactional.\n+\t */\n+\tpublic static void checkAcidTable(CatalogTable catalogTable, ObjectPath tablePath) {\n+\t\tif (catalogTable != null && catalogTable.getOptions() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyMTMxMQ=="}, "originalCommit": {"oid": "6d8f174b90ce3efd668bb7d53709d55eab2cbfa0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyODg4MA==", "bodyText": "If really want to have a check, check should be Preconditions.check instead of silence", "url": "https://github.com/apache/flink/pull/13315#discussion_r485428880", "createdAt": "2020-09-09T08:23:48Z", "author": {"login": "JingsongLi"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTableUtil.java", "diffHunk": "@@ -403,6 +404,25 @@ public static Table instantiateHiveTable(ObjectPath tablePath, CatalogBaseTable\n \t\t\t\t.collect(Collectors.toMap(t -> t.f0, t -> t.f1));\n \t}\n \n+\t/**\n+\t * Check whether to read or write on the hive ACID table.\n+\t *\n+\t * @param catalogTable Hive catalog table.\n+\t * @param tablePath    Identifier table path.\n+\t * @throws FlinkHiveException Thrown, if the source or sink table is transactional.\n+\t */\n+\tpublic static void checkAcidTable(CatalogTable catalogTable, ObjectPath tablePath) {\n+\t\tif (catalogTable != null && catalogTable.getOptions() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyMTMxMQ=="}, "originalCommit": {"oid": "6d8f174b90ce3efd668bb7d53709d55eab2cbfa0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ2MDgzMA==", "bodyText": "@JingsongLi Yeah, you are right. I remove this check for catalogTable with options.", "url": "https://github.com/apache/flink/pull/13315#discussion_r485460830", "createdAt": "2020-09-09T09:11:00Z", "author": {"login": "SteNicholas"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTableUtil.java", "diffHunk": "@@ -403,6 +404,25 @@ public static Table instantiateHiveTable(ObjectPath tablePath, CatalogBaseTable\n \t\t\t\t.collect(Collectors.toMap(t -> t.f0, t -> t.f1));\n \t}\n \n+\t/**\n+\t * Check whether to read or write on the hive ACID table.\n+\t *\n+\t * @param catalogTable Hive catalog table.\n+\t * @param tablePath    Identifier table path.\n+\t * @throws FlinkHiveException Thrown, if the source or sink table is transactional.\n+\t */\n+\tpublic static void checkAcidTable(CatalogTable catalogTable, ObjectPath tablePath) {\n+\t\tif (catalogTable != null && catalogTable.getOptions() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyMTMxMQ=="}, "originalCommit": {"oid": "6d8f174b90ce3efd668bb7d53709d55eab2cbfa0"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 419, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}