{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NTMxMzc0", "number": 10903, "title": "[FLINK-15549][API/DataSet] Fix Integer overflow in ResettableIterator*.", "bodyText": "What is the purpose of the change\nThe\u00a0ResettableIterator\u00a0has\u00a0a\u00a0data\u00a0overflow\u00a0problem\u00a0if\u00a0the\u00a0number\u00a0of\u00a0elements\u00a0in\u00a0a\u00a0single\u00a0input\u00a0exceeds\u00a0Integer.MAX_VALUE. This pull request intend to fix this problem.\nBrief change log\n\nFix Integer overflow in ResettableIterator\n\nVerifying this change\nThis change is a trivial rework / code cleanup without any test coverage.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no", "createdAt": "2020-01-19T12:52:52Z", "url": "https://github.com/apache/flink/pull/10903", "merged": true, "mergeCommit": {"oid": "4a31751e868d9f6fb7529dd569d703f79abc78ae"}, "closed": true, "closedAt": "2020-01-21T08:56:24Z", "author": {"login": "killxdcj"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8C1UZAFqTM0NTA1MTQxNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8XrwsAFqTM0NTYwNDk0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MDUxNDE1", "url": "https://github.com/apache/flink/pull/10903#pullrequestreview-345051415", "createdAt": "2020-01-20T02:07:04Z", "commit": {"oid": "4289c3910b39b13938aafc1337cc9c127e46fedd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwMjowNzowNVrOFfSFcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwMjowNzowNVrOFfSFcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM0NjQ4MA==", "bodyText": "We should avoid code duplication. Maybe it's better to add a utility function.", "url": "https://github.com/apache/flink/pull/10903#discussion_r368346480", "createdAt": "2020-01-20T02:07:05Z", "author": {"login": "KarmaGYZ"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/operators/resettable/SpillingResettableMutableObjectIterator.java", "diffHunk": "@@ -204,8 +204,16 @@ public void consumeAndCacheRemainingData() throws IOException {\n \t\t\t\t} catch (IOException e) {\n \t\t\t\t\tthrow new RuntimeException(\"SpillingIterator: Error writing element to buffer.\", e);\n \t\t\t\t}\n-\t\t\t\tthis.elementCount++;\n+\t\t\t\tincreaseElementCount();\n \t\t\t}\n \t\t}\n \t}\n+\n+\tprivate void increaseElementCount() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4289c3910b39b13938aafc1337cc9c127e46fedd"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1Mjk3OTI1", "url": "https://github.com/apache/flink/pull/10903#pullrequestreview-345297925", "createdAt": "2020-01-20T13:12:59Z", "commit": {"oid": "4289c3910b39b13938aafc1337cc9c127e46fedd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMzoxMjo1OVrOFfd6Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMzoxMjo1OVrOFfd6Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU0MDE5MQ==", "bodyText": "This method is a bit overengineered: even if we are doing nothing than just incrementing the long value, it takes 60 years on a 4 GHz CPU to reach the overflow in java.\nNevertheless, I expect the branch prediction to also figure that out and not cause any performance degradation.", "url": "https://github.com/apache/flink/pull/10903#discussion_r368540191", "createdAt": "2020-01-20T13:12:59Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/operators/resettable/SpillingResettableIterator.java", "diffHunk": "@@ -189,4 +189,12 @@ public void remove() {\n \t\t\treturn memory;\n \t\t}\n \t}\n+\n+\tprivate void increaseElementCount() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4289c3910b39b13938aafc1337cc9c127e46fedd"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d607f61ab374d5ee630dfc72686a4e65d2fc8548", "author": {"user": {"login": "killxdcj", "name": "\u66f9\u5efa\u534e"}}, "url": "https://github.com/apache/flink/commit/d607f61ab374d5ee630dfc72686a4e65d2fc8548", "committedDate": "2020-01-21T02:23:52Z", "message": "[FLINK-15549] Fix Integer overflow in ResettableIterator.\n\nChange-Id: I98bfac0a881409a1968383d8d85754c48758edd5"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4289c3910b39b13938aafc1337cc9c127e46fedd", "author": {"user": {"login": "killxdcj", "name": "\u66f9\u5efa\u534e"}}, "url": "https://github.com/apache/flink/commit/4289c3910b39b13938aafc1337cc9c127e46fedd", "committedDate": "2020-01-19T13:15:09Z", "message": "Adjust the function name: increment -> increase\n\nChange-Id: Ida5f6d459fe9c55a551111881b2392550c7695b9"}, "afterCommit": {"oid": "d607f61ab374d5ee630dfc72686a4e65d2fc8548", "author": {"user": {"login": "killxdcj", "name": "\u66f9\u5efa\u534e"}}, "url": "https://github.com/apache/flink/commit/d607f61ab374d5ee630dfc72686a4e65d2fc8548", "committedDate": "2020-01-21T02:23:52Z", "message": "[FLINK-15549] Fix Integer overflow in ResettableIterator.\n\nChange-Id: I98bfac0a881409a1968383d8d85754c48758edd5"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NjA0OTQ5", "url": "https://github.com/apache/flink/pull/10903#pullrequestreview-345604949", "createdAt": "2020-01-21T02:26:00Z", "commit": {"oid": "d607f61ab374d5ee630dfc72686a4e65d2fc8548"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4839, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}