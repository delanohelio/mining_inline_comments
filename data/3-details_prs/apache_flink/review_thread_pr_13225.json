{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMzA1MTEx", "number": 13225, "reviewThreads": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDozODozM1rOEcGeZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo0NDoyNlrOEkX_JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTAxNjcwOnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDozODozNFrOHGbTwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDozODozNFrOHGbTwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUwMDkzMA==", "bodyText": "I think that we should improve on the section-titles in the whole page\naccording to the item 4. \u6807\u9898\u951a\u70b9\u94fe\u63a5 of Flink Translation Specifications", "url": "https://github.com/apache/flink/pull/13225#discussion_r476500930", "createdAt": "2020-08-25T14:38:34Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -23,16 +23,14 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-Most operations require a user-defined function. This section lists different\n-ways of how they can be specified. We also cover `Accumulators`, which can be\n-used to gain insights into your Flink application.\n+\u5927\u591a\u6570\u64cd\u4f5c\u90fd\u9700\u8981\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u3002\u672c\u8282\u5217\u51fa\u4e86\u5b9e\u73b0\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u4e0d\u540c\u65b9\u5f0f\u3002\u8fd8\u4f1a\u4ecb\u7ecd `Accumulators`\uff08\u7d2f\u52a0\u5668\uff09\uff0c\u53ef\u7528\u4e8e\u6df1\u5165\u4e86\u89e3\u4f60\u7684 Flink \u5e94\u7528\u7a0b\u5e8f\u3002\n \n <div class=\"codetabs\" markdown=\"1\">\n <div data-lang=\"java\" markdown=\"1\">\n \n-## Implementing an interface\n+## \u5b9e\u73b0\u63a5\u53e3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40658a82560ebc79ee2047a789db4fa003115099"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTA0Mjk4OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDo0MzozNlrOHGbjpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDo0MzozNlrOHGbjpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUwNDk5Nw==", "bodyText": "From the point of my view, to do nothing on Accumulator  and SimpleAccumulator  would be better in this mini-section. And it should express the meaning simple name of the class .", "url": "https://github.com/apache/flink/pull/13225#discussion_r476504997", "createdAt": "2020-08-25T14:43:36Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +142,75 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0c\u5bcc\u51fd\u6570\u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({{ site.baseurl }}/zh/dev/batch/iterations.html))\u3002\n \n {% top %}\n \n-## Accumulators & Counters\n+## \u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668\n \n-Accumulators are simple constructs with an **add operation** and a **final accumulated result**,\n-which is available after the job ended.\n+\u7d2f\u52a0\u5668\u662f\u5177\u6709**\u52a0\u6cd5\u8fd0\u7b97**\u548c**\u6700\u7ec8\u7d2f\u52a0\u7ed3\u679c**\u7684\u4e00\u79cd\u7b80\u5355\u7ed3\u6784\uff0c\u53ef\u5728\u4f5c\u4e1a\u7ed3\u675f\u540e\u4f7f\u7528\u3002\n \n-The most straightforward accumulator is a **counter**: You can increment it using the\n-```Accumulator.add(V value)``` method. At the end of the job Flink will sum up (merge) all partial\n-results and send the result to the client. Accumulators are useful during debugging or if you\n-quickly want to find out more about your data.\n+\u6700\u7b80\u5355\u7684\u7d2f\u52a0\u5668\u5c31\u662f**\u8ba1\u6570\u5668**: \u4f60\u53ef\u4ee5\u4f7f\u7528\n+```Accumulator.add(V value)``` \u65b9\u6cd5\u5c06\u5176\u9012\u589e\u3002\u5728\u4f5c\u4e1a\u7ed3\u675f\u65f6\uff0cFlink \u4f1a\u6c47\u603b(\u5408\u5e76)\u6240\u6709\u90e8\u5206\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\n+\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u6216\u5728\u4f60\u60f3\u5feb\u901f\u4e86\u89e3\u6709\u5173\u6570\u636e\u66f4\u591a\u4fe1\u606f\u65f6,\u7d2f\u52a0\u5668\u4f5c\u7528\u5f88\u5927\u3002\n \n-Flink currently has the following **built-in accumulators**. Each of them implements the\n-{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-interface.\n+Flink \u76ee\u524d\u6709\u5982\u4e0b**\u5185\u7f6e\u7d2f\u52a0\u5668**\u3002\u6bcf\u4e2a\u90fd\u5b9e\u73b0\u4e86\n+{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"\u7d2f\u52a0\u5668\" %}\n+\u63a5\u53e3\u3002\n \n - {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/IntCounter.java \"__IntCounter__\" %},\n   {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/LongCounter.java \"__LongCounter__\" %}\n-  and {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n-  See below for an example using a counter.\n-- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__Histogram__\" %}:\n-  A histogram implementation for a discrete number of bins. Internally it is just a map from Integer\n-  to Integer. You can use this to compute distributions of values, e.g. the distribution of\n-  words-per-line for a word count program.\n+  \u548c {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n+  \u6709\u5173\u4f7f\u7528\u8ba1\u6570\u5668\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u4e0b\u6587\u3002\n+- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__\u76f4\u65b9\u56fe__\" %}:\n+  \u79bb\u6563\u6570\u91cf\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u5b9e\u73b0\u3002 \u5728\u5185\u90e8\uff0c\u5b83\u53ea\u662f\u6574\u5f62\u5230\u6574\u5f62\u7684\u6620\u5c04\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u503c\u7684\u5206\u5e03\uff0c\u4f8b\u5982\uff0c\u5355\u8bcd\u8ba1\u6570\u7a0b\u5e8f\u7684\u6bcf\u884c\u5355\u8bcd\u7684\u5206\u5e03\u60c5\u51b5\u3002\n \n-__How to use accumulators:__\n+__\u5982\u4f55\u4f7f\u7528\u7d2f\u52a0\u5668:__\n \n-First you have to create an accumulator object (here a counter) in the user-defined transformation\n-function where you want to use it.\n+\u9996\u5148\uff0c\u4f60\u8981\u5728\u9700\u8981\u4f7f\u7528\u7d2f\u52a0\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u8f6c\u6362\u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\u5bf9\u8c61(\u6b64\u5904\u662f\u8ba1\u6570\u5668) \u3002\n \n {% highlight java %}\n private IntCounter numLines = new IntCounter();\n {% endhighlight %}\n \n-Second you have to register the accumulator object, typically in the ```open()``` method of the\n-*rich* function. Here you also define the name.\n+\u5176\u6b21\uff0c\u4f60\u5fc5\u987b\u5728\u5bcc\u51fd\u6570\u7684```open()```\u65b9\u6cd5\u4e2d\u6ce8\u518c\u7d2f\u52a0\u5668\u5bf9\u8c61\u3002\u4e5f\u53ef\u4ee5\u5728\u6b64\u5904\u5b9a\u4e49\u540d\u79f0\u3002\n \n {% highlight java %}\n getRuntimeContext().addAccumulator(\"num-lines\", this.numLines);\n {% endhighlight %}\n \n-You can now use the accumulator anywhere in the operator function, including in the ```open()``` and\n-```close()``` methods.\n+\u73b0\u5728\u4f60\u53ef\u4ee5\u5728\u64cd\u4f5c\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\uff08\u5305\u62ec```open()``` and```close()```\u65b9\u6cd5\u4e2d\uff09\u4f7f\u7528\u7d2f\u52a0\u5668\u3002\n \n {% highlight java %}\n this.numLines.add(1);\n {% endhighlight %}\n \n-The overall result will be stored in the ```JobExecutionResult``` object which is\n-returned from the `execute()` method of the execution environment\n-(currently this only works if the execution waits for the\n-completion of the job).\n+\u6700\u7ec8\u6574\u4f53\u7ed3\u679c\u4f1a\u5b58\u50a8\u5728\u7531\u6267\u884c\u73af\u5883\u7684 `execute()` \u65b9\u6cd5\u8fd4\u56de\u7684 ```JobExecutionResult``` \u5bf9\u8c61\u4e2d\uff08\u5f53\u524d\u53ea\u6709\u7b49\u5f85\u4f5c\u4e1a\u5b8c\u6210\u540e\u6267\u884c\u624d\u8d77\u4f5c\u7528\uff09\u3002\n \n {% highlight java %}\n myJobExecutionResult.getAccumulatorResult(\"num-lines\")\n {% endhighlight %}\n \n-All accumulators share a single namespace per job. Thus you can use the same accumulator in\n-different operator functions of your job. Flink will internally merge all accumulators with the same\n-name.\n+\u5355\u4e2a\u4f5c\u4e1a\u7684\u6240\u6709\u7d2f\u52a0\u5668\u5171\u4eab\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u3002\u56e0\u6b64\u4f60\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u51fd\u6570\u91cc\u9762\u4f7f\u7528\u540c\u4e00\u4e2a\u7d2f\u52a0\u5668\u3002Flink \u4f1a\u5728\u5185\u90e8\u5c06\u6240\u6709\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u7d2f\u52a0\u5668\u5408\u5e76\u8d77\u6765\u3002\n \n-A note on accumulators and iterations: Currently the result of accumulators is only available after\n-the overall job has ended. We plan to also make the result of the previous iteration available in the\n-next iteration. You can use\n-{% gh_link /flink-java/src/main/java/org/apache/flink/api/java/operators/IterativeDataSet.java#L98 \"Aggregators\" %}\n-to compute per-iteration statistics and base the termination of iterations on such statistics.\n+\u5173\u4e8e\u7d2f\u52a0\u5668\u548c\u8fed\u4ee3\u7684\u6ce8\u610f\u4e8b\u9879\uff1a\u5f53\u524d\u7d2f\u52a0\u5668\u7684\u7ed3\u679c\u53ea\u6709\u5728\u6574\u4e2a\u4f5c\u4e1a\u7ed3\u675f\u540e\u624d\u53ef\u7528\u3002\u6211\u4eec\u8fd8\u8ba1\u5212\u5728\u4e0b\u4e00\u6b21\u8fed\u4ee3\u4e2d\u63d0\u4f9b\u4e0a\u4e00\u6b21\u7684\u8fed\u4ee3\u7ed3\u679c\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\n+{% gh_link /flink-java/src/main/java/org/apache/flink/api/java/operators/IterativeDataSet.java#L98 \"\u805a\u5408\u5668\" %}\n+\u6765\u8ba1\u7b97\u6bcf\u6b21\u8fed\u4ee3\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5e76\u57fa\u4e8e\u6b64\u7c7b\u7edf\u8ba1\u4fe1\u606f\u6765\u7ec8\u6b62\u8fed\u4ee3\u3002\n \n-__Custom accumulators:__\n+__\u5b9a\u5236\u7d2f\u52a0\u5668:__\n \n-To implement your own accumulator you simply have to write your implementation of the Accumulator\n-interface. Feel free to create a pull request if you think your custom accumulator should be shipped\n-with Flink.\n+\u8981\u5b9e\u73b0\u81ea\u5df1\u7684\u7d2f\u52a0\u5668\uff0c\u4f60\u53ea\u9700\u8981\u5b9e\u73b0\u7d2f\u52a0\u5668\u63a5\u53e3\u5373\u53ef\u3002\u5982\u679c\u4f60\u8ba4\u4e3a\u81ea\u5b9a\u4e49\u7d2f\u52a0\u5668\u5e94\u968f Flink \u4e00\u8d77\u63d0\u4f9b\uff0c\u8bf7\u5c3d\u7ba1\u521b\u5efa\u62c9\u53d6\u8bf7\u6c42\u3002\n \n-You have the choice to implement either\n-{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-or {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/SimpleAccumulator.java \"SimpleAccumulator\" %}.\n+\u4f60\u53ef\u4ee5\u9009\u62e9\u5b9e\u73b0\n+{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"\u7d2f\u52a0\u5668\" %}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40658a82560ebc79ee2047a789db4fa003115099"}, "originalPosition": 250}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTA1MDYyOnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDo0NToxMVrOHGbobA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDo0NToxMVrOHGbobA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUwNjIyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            __\u5b9a\u5236\u7d2f\u52a0\u5668:__\n          \n          \n            \n            __\u5b9a\u5236\u7d2f\u52a0\u5668\uff1a__", "url": "https://github.com/apache/flink/pull/13225#discussion_r476506220", "createdAt": "2020-08-25T14:45:11Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +142,75 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0c\u5bcc\u51fd\u6570\u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({{ site.baseurl }}/zh/dev/batch/iterations.html))\u3002\n \n {% top %}\n \n-## Accumulators & Counters\n+## \u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668\n \n-Accumulators are simple constructs with an **add operation** and a **final accumulated result**,\n-which is available after the job ended.\n+\u7d2f\u52a0\u5668\u662f\u5177\u6709**\u52a0\u6cd5\u8fd0\u7b97**\u548c**\u6700\u7ec8\u7d2f\u52a0\u7ed3\u679c**\u7684\u4e00\u79cd\u7b80\u5355\u7ed3\u6784\uff0c\u53ef\u5728\u4f5c\u4e1a\u7ed3\u675f\u540e\u4f7f\u7528\u3002\n \n-The most straightforward accumulator is a **counter**: You can increment it using the\n-```Accumulator.add(V value)``` method. At the end of the job Flink will sum up (merge) all partial\n-results and send the result to the client. Accumulators are useful during debugging or if you\n-quickly want to find out more about your data.\n+\u6700\u7b80\u5355\u7684\u7d2f\u52a0\u5668\u5c31\u662f**\u8ba1\u6570\u5668**: \u4f60\u53ef\u4ee5\u4f7f\u7528\n+```Accumulator.add(V value)``` \u65b9\u6cd5\u5c06\u5176\u9012\u589e\u3002\u5728\u4f5c\u4e1a\u7ed3\u675f\u65f6\uff0cFlink \u4f1a\u6c47\u603b(\u5408\u5e76)\u6240\u6709\u90e8\u5206\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\n+\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u6216\u5728\u4f60\u60f3\u5feb\u901f\u4e86\u89e3\u6709\u5173\u6570\u636e\u66f4\u591a\u4fe1\u606f\u65f6,\u7d2f\u52a0\u5668\u4f5c\u7528\u5f88\u5927\u3002\n \n-Flink currently has the following **built-in accumulators**. Each of them implements the\n-{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-interface.\n+Flink \u76ee\u524d\u6709\u5982\u4e0b**\u5185\u7f6e\u7d2f\u52a0\u5668**\u3002\u6bcf\u4e2a\u90fd\u5b9e\u73b0\u4e86\n+{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"\u7d2f\u52a0\u5668\" %}\n+\u63a5\u53e3\u3002\n \n - {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/IntCounter.java \"__IntCounter__\" %},\n   {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/LongCounter.java \"__LongCounter__\" %}\n-  and {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n-  See below for an example using a counter.\n-- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__Histogram__\" %}:\n-  A histogram implementation for a discrete number of bins. Internally it is just a map from Integer\n-  to Integer. You can use this to compute distributions of values, e.g. the distribution of\n-  words-per-line for a word count program.\n+  \u548c {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n+  \u6709\u5173\u4f7f\u7528\u8ba1\u6570\u5668\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u4e0b\u6587\u3002\n+- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__\u76f4\u65b9\u56fe__\" %}:\n+  \u79bb\u6563\u6570\u91cf\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u5b9e\u73b0\u3002 \u5728\u5185\u90e8\uff0c\u5b83\u53ea\u662f\u6574\u5f62\u5230\u6574\u5f62\u7684\u6620\u5c04\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u503c\u7684\u5206\u5e03\uff0c\u4f8b\u5982\uff0c\u5355\u8bcd\u8ba1\u6570\u7a0b\u5e8f\u7684\u6bcf\u884c\u5355\u8bcd\u7684\u5206\u5e03\u60c5\u51b5\u3002\n \n-__How to use accumulators:__\n+__\u5982\u4f55\u4f7f\u7528\u7d2f\u52a0\u5668:__\n \n-First you have to create an accumulator object (here a counter) in the user-defined transformation\n-function where you want to use it.\n+\u9996\u5148\uff0c\u4f60\u8981\u5728\u9700\u8981\u4f7f\u7528\u7d2f\u52a0\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u8f6c\u6362\u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\u5bf9\u8c61(\u6b64\u5904\u662f\u8ba1\u6570\u5668) \u3002\n \n {% highlight java %}\n private IntCounter numLines = new IntCounter();\n {% endhighlight %}\n \n-Second you have to register the accumulator object, typically in the ```open()``` method of the\n-*rich* function. Here you also define the name.\n+\u5176\u6b21\uff0c\u4f60\u5fc5\u987b\u5728\u5bcc\u51fd\u6570\u7684```open()```\u65b9\u6cd5\u4e2d\u6ce8\u518c\u7d2f\u52a0\u5668\u5bf9\u8c61\u3002\u4e5f\u53ef\u4ee5\u5728\u6b64\u5904\u5b9a\u4e49\u540d\u79f0\u3002\n \n {% highlight java %}\n getRuntimeContext().addAccumulator(\"num-lines\", this.numLines);\n {% endhighlight %}\n \n-You can now use the accumulator anywhere in the operator function, including in the ```open()``` and\n-```close()``` methods.\n+\u73b0\u5728\u4f60\u53ef\u4ee5\u5728\u64cd\u4f5c\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\uff08\u5305\u62ec```open()``` and```close()```\u65b9\u6cd5\u4e2d\uff09\u4f7f\u7528\u7d2f\u52a0\u5668\u3002\n \n {% highlight java %}\n this.numLines.add(1);\n {% endhighlight %}\n \n-The overall result will be stored in the ```JobExecutionResult``` object which is\n-returned from the `execute()` method of the execution environment\n-(currently this only works if the execution waits for the\n-completion of the job).\n+\u6700\u7ec8\u6574\u4f53\u7ed3\u679c\u4f1a\u5b58\u50a8\u5728\u7531\u6267\u884c\u73af\u5883\u7684 `execute()` \u65b9\u6cd5\u8fd4\u56de\u7684 ```JobExecutionResult``` \u5bf9\u8c61\u4e2d\uff08\u5f53\u524d\u53ea\u6709\u7b49\u5f85\u4f5c\u4e1a\u5b8c\u6210\u540e\u6267\u884c\u624d\u8d77\u4f5c\u7528\uff09\u3002\n \n {% highlight java %}\n myJobExecutionResult.getAccumulatorResult(\"num-lines\")\n {% endhighlight %}\n \n-All accumulators share a single namespace per job. Thus you can use the same accumulator in\n-different operator functions of your job. Flink will internally merge all accumulators with the same\n-name.\n+\u5355\u4e2a\u4f5c\u4e1a\u7684\u6240\u6709\u7d2f\u52a0\u5668\u5171\u4eab\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u3002\u56e0\u6b64\u4f60\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u51fd\u6570\u91cc\u9762\u4f7f\u7528\u540c\u4e00\u4e2a\u7d2f\u52a0\u5668\u3002Flink \u4f1a\u5728\u5185\u90e8\u5c06\u6240\u6709\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u7d2f\u52a0\u5668\u5408\u5e76\u8d77\u6765\u3002\n \n-A note on accumulators and iterations: Currently the result of accumulators is only available after\n-the overall job has ended. We plan to also make the result of the previous iteration available in the\n-next iteration. You can use\n-{% gh_link /flink-java/src/main/java/org/apache/flink/api/java/operators/IterativeDataSet.java#L98 \"Aggregators\" %}\n-to compute per-iteration statistics and base the termination of iterations on such statistics.\n+\u5173\u4e8e\u7d2f\u52a0\u5668\u548c\u8fed\u4ee3\u7684\u6ce8\u610f\u4e8b\u9879\uff1a\u5f53\u524d\u7d2f\u52a0\u5668\u7684\u7ed3\u679c\u53ea\u6709\u5728\u6574\u4e2a\u4f5c\u4e1a\u7ed3\u675f\u540e\u624d\u53ef\u7528\u3002\u6211\u4eec\u8fd8\u8ba1\u5212\u5728\u4e0b\u4e00\u6b21\u8fed\u4ee3\u4e2d\u63d0\u4f9b\u4e0a\u4e00\u6b21\u7684\u8fed\u4ee3\u7ed3\u679c\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\n+{% gh_link /flink-java/src/main/java/org/apache/flink/api/java/operators/IterativeDataSet.java#L98 \"\u805a\u5408\u5668\" %}\n+\u6765\u8ba1\u7b97\u6bcf\u6b21\u8fed\u4ee3\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5e76\u57fa\u4e8e\u6b64\u7c7b\u7edf\u8ba1\u4fe1\u606f\u6765\u7ec8\u6b62\u8fed\u4ee3\u3002\n \n-__Custom accumulators:__\n+__\u5b9a\u5236\u7d2f\u52a0\u5668:__", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40658a82560ebc79ee2047a789db4fa003115099"}, "originalPosition": 239}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTA3MjQyOnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDo0OTo1MFrOHGb12Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDo0OTo1MFrOHGb12Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUwOTY1Nw==", "bodyText": "How about the original content Rich functions?", "url": "https://github.com/apache/flink/pull/13225#discussion_r476509657", "createdAt": "2020-08-25T14:49:50Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -62,32 +60,31 @@ data.filter(s -> s.startsWith(\"http://\"));\n data.reduce((i1,i2) -> i1 + i2);\n {% endhighlight %}\n \n-## Rich functions\n+## \u5bcc\u51fd\u6570", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40658a82560ebc79ee2047a789db4fa003115099"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTA3NjU0OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDo1MDo0MVrOHGb4ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNToxNzozOFrOHGdHrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUxMDMxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5e76\u5c06\u51fd\u6570\u7167\u5e38\u4f20\u9012\u7ed9map\u7b97\u5b50:\n          \n          \n            \n            \u5e76\u5c06\u51fd\u6570\u7167\u5e38\u4f20\u9012\u7ed9 `map` transformation\uff1a", "url": "https://github.com/apache/flink/pull/13225#discussion_r476510314", "createdAt": "2020-08-25T14:50:41Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -62,32 +60,31 @@ data.filter(s -> s.startsWith(\"http://\"));\n data.reduce((i1,i2) -> i1 + i2);\n {% endhighlight %}\n \n-## Rich functions\n+## \u5bcc\u51fd\u6570\n \n-All transformations that require a user-defined function can\n-instead take as argument a *rich* function. For example, instead of\n+\u6240\u6709\u9700\u8981\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u8f6c\u5316\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5c06\u5bcc\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u4ee3\u66ff\n \n {% highlight java %}\n class MyMapFunction implements MapFunction<String, Integer> {\n   public Integer map(String value) { return Integer.parseInt(value); }\n };\n {% endhighlight %}\n \n-you can write\n+\u4f60\u53ef\u4ee5\u5199\u6210\n \n {% highlight java %}\n class MyMapFunction extends RichMapFunction<String, Integer> {\n   public Integer map(String value) { return Integer.parseInt(value); }\n };\n {% endhighlight %}\n \n-and pass the function as usual to a `map` transformation:\n+\u5e76\u5c06\u51fd\u6570\u7167\u5e38\u4f20\u9012\u7ed9map\u7b97\u5b50:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40658a82560ebc79ee2047a789db4fa003115099"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUzMDYwNg==", "bodyText": "The key word transformation is a significant word for conceptions of Flink.", "url": "https://github.com/apache/flink/pull/13225#discussion_r476530606", "createdAt": "2020-08-25T15:17:38Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -62,32 +60,31 @@ data.filter(s -> s.startsWith(\"http://\"));\n data.reduce((i1,i2) -> i1 + i2);\n {% endhighlight %}\n \n-## Rich functions\n+## \u5bcc\u51fd\u6570\n \n-All transformations that require a user-defined function can\n-instead take as argument a *rich* function. For example, instead of\n+\u6240\u6709\u9700\u8981\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u8f6c\u5316\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5c06\u5bcc\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u4ee3\u66ff\n \n {% highlight java %}\n class MyMapFunction implements MapFunction<String, Integer> {\n   public Integer map(String value) { return Integer.parseInt(value); }\n };\n {% endhighlight %}\n \n-you can write\n+\u4f60\u53ef\u4ee5\u5199\u6210\n \n {% highlight java %}\n class MyMapFunction extends RichMapFunction<String, Integer> {\n   public Integer map(String value) { return Integer.parseInt(value); }\n };\n {% endhighlight %}\n \n-and pass the function as usual to a `map` transformation:\n+\u5e76\u5c06\u51fd\u6570\u7167\u5e38\u4f20\u9012\u7ed9map\u7b97\u5b50:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUxMDMxNA=="}, "originalCommit": {"oid": "40658a82560ebc79ee2047a789db4fa003115099"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTEyODAxOnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTowMToxMVrOHGcYtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMTo0ODo1NVrOHHwkNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUxODU4MQ==", "bodyText": "The link-tags, liked as  ({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables)) need to be improved by Prefer format of link-tags.", "url": "https://github.com/apache/flink/pull/13225#discussion_r476518581", "createdAt": "2020-08-25T15:01:11Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +142,75 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0c\u5bcc\u51fd\u6570\u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40658a82560ebc79ee2047a789db4fa003115099"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAyMDg2NQ==", "bodyText": "These link-tags can be linked to correct pages,so i think it's unnecessary to change.", "url": "https://github.com/apache/flink/pull/13225#discussion_r477020865", "createdAt": "2020-08-26T04:06:14Z", "author": {"login": "zhuxiaoshang"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +142,75 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0c\u5bcc\u51fd\u6570\u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUxODU4MQ=="}, "originalCommit": {"oid": "40658a82560ebc79ee2047a789db4fa003115099"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzg5Nzc4MA==", "bodyText": "@klion26 What do you think about this?", "url": "https://github.com/apache/flink/pull/13225#discussion_r477897780", "createdAt": "2020-08-27T01:48:55Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +142,75 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0c\u5bcc\u51fd\u6570\u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUxODU4MQ=="}, "originalCommit": {"oid": "40658a82560ebc79ee2047a789db4fa003115099"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTE1MTYyOnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTowNjoyNlrOHGcniA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTowNjoyNlrOHGcniA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUyMjM3Ng==", "bodyText": "The link tags in current page , liked as [\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668)  need to be corrected  after the change which could be made by   the item 4. \u6807\u9898\u951a\u70b9\u94fe\u63a5 of Flink Translation Specifications", "url": "https://github.com/apache/flink/pull/13225#discussion_r476522376", "createdAt": "2020-08-25T15:06:26Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +142,75 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0c\u5bcc\u51fd\u6570\u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({{ site.baseurl }}/zh/dev/batch/iterations.html))\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40658a82560ebc79ee2047a789db4fa003115099"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTE2MjY1OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTowODo0OVrOHGcuVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTowODo0OVrOHGcuVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUyNDExOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \u79bb\u6563\u6570\u91cf\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u5b9e\u73b0\u3002 \u5728\u5185\u90e8\uff0c\u5b83\u53ea\u662f\u6574\u5f62\u5230\u6574\u5f62\u7684\u6620\u5c04\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u503c\u7684\u5206\u5e03\uff0c\u4f8b\u5982\uff0c\u5355\u8bcd\u8ba1\u6570\u7a0b\u5e8f\u7684\u6bcf\u884c\u5355\u8bcd\u7684\u5206\u5e03\u60c5\u51b5\u3002\n          \n          \n            \n              \u79bb\u6563\u6570\u91cf\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u5b9e\u73b0\u3002\u5728\u5185\u90e8\uff0c\u5b83\u53ea\u662f\u6574\u5f62\u5230\u6574\u5f62\u7684\u6620\u5c04\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u503c\u7684\u5206\u5e03\uff0c\u4f8b\u5982\uff0c\u5355\u8bcd\u8ba1\u6570\u7a0b\u5e8f\u7684\u6bcf\u884c\u5355\u8bcd\u7684\u5206\u5e03\u60c5\u51b5\u3002", "url": "https://github.com/apache/flink/pull/13225#discussion_r476524118", "createdAt": "2020-08-25T15:08:49Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +142,75 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0c\u5bcc\u51fd\u6570\u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({{ site.baseurl }}/zh/dev/batch/iterations.html))\u3002\n \n {% top %}\n \n-## Accumulators & Counters\n+## \u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668\n \n-Accumulators are simple constructs with an **add operation** and a **final accumulated result**,\n-which is available after the job ended.\n+\u7d2f\u52a0\u5668\u662f\u5177\u6709**\u52a0\u6cd5\u8fd0\u7b97**\u548c**\u6700\u7ec8\u7d2f\u52a0\u7ed3\u679c**\u7684\u4e00\u79cd\u7b80\u5355\u7ed3\u6784\uff0c\u53ef\u5728\u4f5c\u4e1a\u7ed3\u675f\u540e\u4f7f\u7528\u3002\n \n-The most straightforward accumulator is a **counter**: You can increment it using the\n-```Accumulator.add(V value)``` method. At the end of the job Flink will sum up (merge) all partial\n-results and send the result to the client. Accumulators are useful during debugging or if you\n-quickly want to find out more about your data.\n+\u6700\u7b80\u5355\u7684\u7d2f\u52a0\u5668\u5c31\u662f**\u8ba1\u6570\u5668**: \u4f60\u53ef\u4ee5\u4f7f\u7528\n+```Accumulator.add(V value)``` \u65b9\u6cd5\u5c06\u5176\u9012\u589e\u3002\u5728\u4f5c\u4e1a\u7ed3\u675f\u65f6\uff0cFlink \u4f1a\u6c47\u603b(\u5408\u5e76)\u6240\u6709\u90e8\u5206\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\n+\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u6216\u5728\u4f60\u60f3\u5feb\u901f\u4e86\u89e3\u6709\u5173\u6570\u636e\u66f4\u591a\u4fe1\u606f\u65f6,\u7d2f\u52a0\u5668\u4f5c\u7528\u5f88\u5927\u3002\n \n-Flink currently has the following **built-in accumulators**. Each of them implements the\n-{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-interface.\n+Flink \u76ee\u524d\u6709\u5982\u4e0b**\u5185\u7f6e\u7d2f\u52a0\u5668**\u3002\u6bcf\u4e2a\u90fd\u5b9e\u73b0\u4e86\n+{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"\u7d2f\u52a0\u5668\" %}\n+\u63a5\u53e3\u3002\n \n - {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/IntCounter.java \"__IntCounter__\" %},\n   {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/LongCounter.java \"__LongCounter__\" %}\n-  and {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n-  See below for an example using a counter.\n-- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__Histogram__\" %}:\n-  A histogram implementation for a discrete number of bins. Internally it is just a map from Integer\n-  to Integer. You can use this to compute distributions of values, e.g. the distribution of\n-  words-per-line for a word count program.\n+  \u548c {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n+  \u6709\u5173\u4f7f\u7528\u8ba1\u6570\u5668\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u4e0b\u6587\u3002\n+- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__\u76f4\u65b9\u56fe__\" %}:\n+  \u79bb\u6563\u6570\u91cf\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u5b9e\u73b0\u3002 \u5728\u5185\u90e8\uff0c\u5b83\u53ea\u662f\u6574\u5f62\u5230\u6574\u5f62\u7684\u6620\u5c04\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u503c\u7684\u5206\u5e03\uff0c\u4f8b\u5982\uff0c\u5355\u8bcd\u8ba1\u6570\u7a0b\u5e8f\u7684\u6bcf\u884c\u5355\u8bcd\u7684\u5206\u5e03\u60c5\u51b5\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40658a82560ebc79ee2047a789db4fa003115099"}, "originalPosition": 185}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTE2NDkyOnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTowOToxOVrOHGcvwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTowOToxOVrOHGcvwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUyNDQ4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u9996\u5148\uff0c\u4f60\u8981\u5728\u9700\u8981\u4f7f\u7528\u7d2f\u52a0\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u8f6c\u6362\u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\u5bf9\u8c61(\u6b64\u5904\u662f\u8ba1\u6570\u5668) \u3002\n          \n          \n            \n            \u9996\u5148\uff0c\u4f60\u8981\u5728\u9700\u8981\u4f7f\u7528\u7d2f\u52a0\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u8f6c\u6362\u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\u5bf9\u8c61\uff08\u6b64\u5904\u662f\u8ba1\u6570\u5668\uff09\u3002", "url": "https://github.com/apache/flink/pull/13225#discussion_r476524480", "createdAt": "2020-08-25T15:09:19Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +142,75 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0c\u5bcc\u51fd\u6570\u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({{ site.baseurl }}/zh/dev/batch/iterations.html))\u3002\n \n {% top %}\n \n-## Accumulators & Counters\n+## \u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668\n \n-Accumulators are simple constructs with an **add operation** and a **final accumulated result**,\n-which is available after the job ended.\n+\u7d2f\u52a0\u5668\u662f\u5177\u6709**\u52a0\u6cd5\u8fd0\u7b97**\u548c**\u6700\u7ec8\u7d2f\u52a0\u7ed3\u679c**\u7684\u4e00\u79cd\u7b80\u5355\u7ed3\u6784\uff0c\u53ef\u5728\u4f5c\u4e1a\u7ed3\u675f\u540e\u4f7f\u7528\u3002\n \n-The most straightforward accumulator is a **counter**: You can increment it using the\n-```Accumulator.add(V value)``` method. At the end of the job Flink will sum up (merge) all partial\n-results and send the result to the client. Accumulators are useful during debugging or if you\n-quickly want to find out more about your data.\n+\u6700\u7b80\u5355\u7684\u7d2f\u52a0\u5668\u5c31\u662f**\u8ba1\u6570\u5668**: \u4f60\u53ef\u4ee5\u4f7f\u7528\n+```Accumulator.add(V value)``` \u65b9\u6cd5\u5c06\u5176\u9012\u589e\u3002\u5728\u4f5c\u4e1a\u7ed3\u675f\u65f6\uff0cFlink \u4f1a\u6c47\u603b(\u5408\u5e76)\u6240\u6709\u90e8\u5206\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\n+\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u6216\u5728\u4f60\u60f3\u5feb\u901f\u4e86\u89e3\u6709\u5173\u6570\u636e\u66f4\u591a\u4fe1\u606f\u65f6,\u7d2f\u52a0\u5668\u4f5c\u7528\u5f88\u5927\u3002\n \n-Flink currently has the following **built-in accumulators**. Each of them implements the\n-{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-interface.\n+Flink \u76ee\u524d\u6709\u5982\u4e0b**\u5185\u7f6e\u7d2f\u52a0\u5668**\u3002\u6bcf\u4e2a\u90fd\u5b9e\u73b0\u4e86\n+{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"\u7d2f\u52a0\u5668\" %}\n+\u63a5\u53e3\u3002\n \n - {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/IntCounter.java \"__IntCounter__\" %},\n   {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/LongCounter.java \"__LongCounter__\" %}\n-  and {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n-  See below for an example using a counter.\n-- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__Histogram__\" %}:\n-  A histogram implementation for a discrete number of bins. Internally it is just a map from Integer\n-  to Integer. You can use this to compute distributions of values, e.g. the distribution of\n-  words-per-line for a word count program.\n+  \u548c {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n+  \u6709\u5173\u4f7f\u7528\u8ba1\u6570\u5668\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u4e0b\u6587\u3002\n+- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__\u76f4\u65b9\u56fe__\" %}:\n+  \u79bb\u6563\u6570\u91cf\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u5b9e\u73b0\u3002 \u5728\u5185\u90e8\uff0c\u5b83\u53ea\u662f\u6574\u5f62\u5230\u6574\u5f62\u7684\u6620\u5c04\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u503c\u7684\u5206\u5e03\uff0c\u4f8b\u5982\uff0c\u5355\u8bcd\u8ba1\u6570\u7a0b\u5e8f\u7684\u6bcf\u884c\u5355\u8bcd\u7684\u5206\u5e03\u60c5\u51b5\u3002\n \n-__How to use accumulators:__\n+__\u5982\u4f55\u4f7f\u7528\u7d2f\u52a0\u5668:__\n \n-First you have to create an accumulator object (here a counter) in the user-defined transformation\n-function where you want to use it.\n+\u9996\u5148\uff0c\u4f60\u8981\u5728\u9700\u8981\u4f7f\u7528\u7d2f\u52a0\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u8f6c\u6362\u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\u5bf9\u8c61(\u6b64\u5904\u662f\u8ba1\u6570\u5668) \u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40658a82560ebc79ee2047a789db4fa003115099"}, "originalPosition": 192}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTE2Njk2OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTowOTo0OFrOHGcxBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTowOTo0OFrOHGcxBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUyNDgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            __\u5982\u4f55\u4f7f\u7528\u7d2f\u52a0\u5668:__\n          \n          \n            \n            __\u5982\u4f55\u4f7f\u7528\u7d2f\u52a0\u5668\uff1a__", "url": "https://github.com/apache/flink/pull/13225#discussion_r476524806", "createdAt": "2020-08-25T15:09:48Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +142,75 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0c\u5bcc\u51fd\u6570\u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({{ site.baseurl }}/zh/dev/batch/iterations.html))\u3002\n \n {% top %}\n \n-## Accumulators & Counters\n+## \u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668\n \n-Accumulators are simple constructs with an **add operation** and a **final accumulated result**,\n-which is available after the job ended.\n+\u7d2f\u52a0\u5668\u662f\u5177\u6709**\u52a0\u6cd5\u8fd0\u7b97**\u548c**\u6700\u7ec8\u7d2f\u52a0\u7ed3\u679c**\u7684\u4e00\u79cd\u7b80\u5355\u7ed3\u6784\uff0c\u53ef\u5728\u4f5c\u4e1a\u7ed3\u675f\u540e\u4f7f\u7528\u3002\n \n-The most straightforward accumulator is a **counter**: You can increment it using the\n-```Accumulator.add(V value)``` method. At the end of the job Flink will sum up (merge) all partial\n-results and send the result to the client. Accumulators are useful during debugging or if you\n-quickly want to find out more about your data.\n+\u6700\u7b80\u5355\u7684\u7d2f\u52a0\u5668\u5c31\u662f**\u8ba1\u6570\u5668**: \u4f60\u53ef\u4ee5\u4f7f\u7528\n+```Accumulator.add(V value)``` \u65b9\u6cd5\u5c06\u5176\u9012\u589e\u3002\u5728\u4f5c\u4e1a\u7ed3\u675f\u65f6\uff0cFlink \u4f1a\u6c47\u603b(\u5408\u5e76)\u6240\u6709\u90e8\u5206\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\n+\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u6216\u5728\u4f60\u60f3\u5feb\u901f\u4e86\u89e3\u6709\u5173\u6570\u636e\u66f4\u591a\u4fe1\u606f\u65f6,\u7d2f\u52a0\u5668\u4f5c\u7528\u5f88\u5927\u3002\n \n-Flink currently has the following **built-in accumulators**. Each of them implements the\n-{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-interface.\n+Flink \u76ee\u524d\u6709\u5982\u4e0b**\u5185\u7f6e\u7d2f\u52a0\u5668**\u3002\u6bcf\u4e2a\u90fd\u5b9e\u73b0\u4e86\n+{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"\u7d2f\u52a0\u5668\" %}\n+\u63a5\u53e3\u3002\n \n - {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/IntCounter.java \"__IntCounter__\" %},\n   {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/LongCounter.java \"__LongCounter__\" %}\n-  and {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n-  See below for an example using a counter.\n-- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__Histogram__\" %}:\n-  A histogram implementation for a discrete number of bins. Internally it is just a map from Integer\n-  to Integer. You can use this to compute distributions of values, e.g. the distribution of\n-  words-per-line for a word count program.\n+  \u548c {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n+  \u6709\u5173\u4f7f\u7528\u8ba1\u6570\u5668\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u4e0b\u6587\u3002\n+- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__\u76f4\u65b9\u56fe__\" %}:\n+  \u79bb\u6563\u6570\u91cf\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u5b9e\u73b0\u3002 \u5728\u5185\u90e8\uff0c\u5b83\u53ea\u662f\u6574\u5f62\u5230\u6574\u5f62\u7684\u6620\u5c04\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u503c\u7684\u5206\u5e03\uff0c\u4f8b\u5982\uff0c\u5355\u8bcd\u8ba1\u6570\u7a0b\u5e8f\u7684\u6bcf\u884c\u5355\u8bcd\u7684\u5206\u5e03\u60c5\u51b5\u3002\n \n-__How to use accumulators:__\n+__\u5982\u4f55\u4f7f\u7528\u7d2f\u52a0\u5668:__", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40658a82560ebc79ee2047a789db4fa003115099"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzUwMDMyOnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo0NDoyMVrOHIqQQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo0NDoyMVrOHIqQQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0Mjk0Nw==", "bodyText": "\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528 \u8fd9\u4e2a\u5355\u7eaf\u8bfb\u4e2d\u6587\u89c9\u5f97\u6709\u70b9\u5947\u602a\uff0c\u80fd\u5426\u4f18\u5316\u4e00\u4e0b\u5462\uff1f", "url": "https://github.com/apache/flink/pull/13225#discussion_r478842947", "createdAt": "2020-08-28T05:44:21Z", "author": {"login": "klion26"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,77 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bfd27b44774c770a2d28ee9ca1bde0e11bfbe29"}, "originalPosition": 154}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzUwMjE2OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo0NToxMVrOHIqRTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo0NToxMVrOHIqRTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MzIxNA==", "bodyText": "\u50cf @RocMarshal \u8bf4\u7684\u4e00\u6837\uff0c\u73b0\u5728\u7684\u94fe\u63a5\uff0c\u5efa\u8bae\u4f7f\u7528 {%link %} \u7684\u5f62\u5f0f\uff0c\u5177\u4f53\u539f\u56e0\u53ef\u4ee5\u770b\u4ed6\u7ed9\u51fa\u7684\u94fe\u63a5", "url": "https://github.com/apache/flink/pull/13225#discussion_r478843214", "createdAt": "2020-08-28T05:45:11Z", "author": {"login": "klion26"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,77 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bfd27b44774c770a2d28ee9ca1bde0e11bfbe29"}, "originalPosition": 155}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzUwNDk3OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo0NjoxNlrOHIqS0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo0NjoxNlrOHIqS0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0MzYwMw==", "bodyText": "[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668) \u8fd9\u91cc\u7684\u8df3\u8f6c\u4e0d\u8981\u7528\u4e2d\u6587", "url": "https://github.com/apache/flink/pull/13225#discussion_r478843603", "createdAt": "2020-08-28T05:46:16Z", "author": {"login": "klion26"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,77 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({{ site.baseurl }}/zh/dev/batch/iterations.html))\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bfd27b44774c770a2d28ee9ca1bde0e11bfbe29"}, "originalPosition": 158}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzUxMTA4OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo0OTozNVrOHIqWZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo0OTozNVrOHIqWZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0NDUxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u9996\u5148\uff0c\u4f60\u8981\u5728\u9700\u8981\u4f7f\u7528\u7d2f\u52a0\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u8f6c\u6362\u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\u5bf9\u8c61\uff08\u6b64\u5904\u662f\u8ba1\u6570\u5668\uff09\u3002\n          \n          \n            \n            \u9996\u5148\uff0c\u5728\u9700\u8981\u4f7f\u7528\u7d2f\u52a0\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\u5bf9\u8c61\uff08\u6b64\u5904\u662f\u8ba1\u6570\u5668\uff09\u3002", "url": "https://github.com/apache/flink/pull/13225#discussion_r478844519", "createdAt": "2020-08-28T05:49:35Z", "author": {"login": "klion26"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,77 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({{ site.baseurl }}/zh/dev/batch/iterations.html))\u3002\n \n {% top %}\n \n-## Accumulators & Counters\n+<a name=\"accumulators--counters\"></a>\n \n-Accumulators are simple constructs with an **add operation** and a **final accumulated result**,\n-which is available after the job ended.\n+## \u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668\n \n-The most straightforward accumulator is a **counter**: You can increment it using the\n-```Accumulator.add(V value)``` method. At the end of the job Flink will sum up (merge) all partial\n-results and send the result to the client. Accumulators are useful during debugging or if you\n-quickly want to find out more about your data.\n+\u7d2f\u52a0\u5668\u662f\u5177\u6709**\u52a0\u6cd5\u8fd0\u7b97**\u548c**\u6700\u7ec8\u7d2f\u52a0\u7ed3\u679c**\u7684\u4e00\u79cd\u7b80\u5355\u7ed3\u6784\uff0c\u53ef\u5728\u4f5c\u4e1a\u7ed3\u675f\u540e\u4f7f\u7528\u3002\n \n-Flink currently has the following **built-in accumulators**. Each of them implements the\n-{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-interface.\n+\u6700\u7b80\u5355\u7684\u7d2f\u52a0\u5668\u5c31\u662f**\u8ba1\u6570\u5668**: \u4f60\u53ef\u4ee5\u4f7f\u7528\n+```Accumulator.add(V value)``` \u65b9\u6cd5\u5c06\u5176\u9012\u589e\u3002\u5728\u4f5c\u4e1a\u7ed3\u675f\u65f6\uff0cFlink \u4f1a\u6c47\u603b(\u5408\u5e76)\u6240\u6709\u90e8\u5206\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\n+\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u6216\u5728\u4f60\u60f3\u5feb\u901f\u4e86\u89e3\u6709\u5173\u6570\u636e\u66f4\u591a\u4fe1\u606f\u65f6,\u7d2f\u52a0\u5668\u4f5c\u7528\u5f88\u5927\u3002\n+\n+Flink \u76ee\u524d\u6709\u5982\u4e0b**\u5185\u7f6e\u7d2f\u52a0\u5668**\u3002\u6bcf\u4e2a\u90fd\u5b9e\u73b0\u4e86\n+{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"\u7d2f\u52a0\u5668\" %}\n+\u63a5\u53e3\u3002\n \n - {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/IntCounter.java \"__IntCounter__\" %},\n   {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/LongCounter.java \"__LongCounter__\" %}\n-  and {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n-  See below for an example using a counter.\n-- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__Histogram__\" %}:\n-  A histogram implementation for a discrete number of bins. Internally it is just a map from Integer\n-  to Integer. You can use this to compute distributions of values, e.g. the distribution of\n-  words-per-line for a word count program.\n+  \u548c {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n+  \u6709\u5173\u4f7f\u7528\u8ba1\u6570\u5668\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u4e0b\u6587\u3002\n+- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__\u76f4\u65b9\u56fe__\" %}:\n+  \u79bb\u6563\u6570\u91cf\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u5b9e\u73b0\u3002\u5728\u5185\u90e8\uff0c\u5b83\u53ea\u662f\u6574\u5f62\u5230\u6574\u5f62\u7684\u6620\u5c04\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u503c\u7684\u5206\u5e03\uff0c\u4f8b\u5982\uff0c\u5355\u8bcd\u8ba1\u6570\u7a0b\u5e8f\u7684\u6bcf\u884c\u5355\u8bcd\u7684\u5206\u5e03\u60c5\u51b5\u3002\n \n-__How to use accumulators:__\n+__\u5982\u4f55\u4f7f\u7528\u7d2f\u52a0\u5668\uff1a__\n \n-First you have to create an accumulator object (here a counter) in the user-defined transformation\n-function where you want to use it.\n+\u9996\u5148\uff0c\u4f60\u8981\u5728\u9700\u8981\u4f7f\u7528\u7d2f\u52a0\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u8f6c\u6362\u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\u5bf9\u8c61\uff08\u6b64\u5904\u662f\u8ba1\u6570\u5668\uff09\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bfd27b44774c770a2d28ee9ca1bde0e11bfbe29"}, "originalPosition": 204}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzUxMTU1OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo0OTo1NVrOHIqWtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo0OTo1NVrOHIqWtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0NDU5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5176\u6b21\uff0c\u4f60\u5fc5\u987b\u5728\u5bcc\u51fd\u6570\u7684```open()```\u65b9\u6cd5\u4e2d\u6ce8\u518c\u7d2f\u52a0\u5668\u5bf9\u8c61\u3002\u4e5f\u53ef\u4ee5\u5728\u6b64\u5904\u5b9a\u4e49\u540d\u79f0\u3002\n          \n          \n            \n            \u5176\u6b21\uff0c\u4f60\u5fc5\u987b\u5728\u5bcc\u51fd\u6570\u7684 ```open()``` \u65b9\u6cd5\u4e2d\u6ce8\u518c\u7d2f\u52a0\u5668\u5bf9\u8c61\u3002\u4e5f\u53ef\u4ee5\u5728\u6b64\u5904\u5b9a\u4e49\u540d\u79f0\u3002", "url": "https://github.com/apache/flink/pull/13225#discussion_r478844598", "createdAt": "2020-08-28T05:49:55Z", "author": {"login": "klion26"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,77 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({{ site.baseurl }}/zh/dev/batch/iterations.html))\u3002\n \n {% top %}\n \n-## Accumulators & Counters\n+<a name=\"accumulators--counters\"></a>\n \n-Accumulators are simple constructs with an **add operation** and a **final accumulated result**,\n-which is available after the job ended.\n+## \u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668\n \n-The most straightforward accumulator is a **counter**: You can increment it using the\n-```Accumulator.add(V value)``` method. At the end of the job Flink will sum up (merge) all partial\n-results and send the result to the client. Accumulators are useful during debugging or if you\n-quickly want to find out more about your data.\n+\u7d2f\u52a0\u5668\u662f\u5177\u6709**\u52a0\u6cd5\u8fd0\u7b97**\u548c**\u6700\u7ec8\u7d2f\u52a0\u7ed3\u679c**\u7684\u4e00\u79cd\u7b80\u5355\u7ed3\u6784\uff0c\u53ef\u5728\u4f5c\u4e1a\u7ed3\u675f\u540e\u4f7f\u7528\u3002\n \n-Flink currently has the following **built-in accumulators**. Each of them implements the\n-{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-interface.\n+\u6700\u7b80\u5355\u7684\u7d2f\u52a0\u5668\u5c31\u662f**\u8ba1\u6570\u5668**: \u4f60\u53ef\u4ee5\u4f7f\u7528\n+```Accumulator.add(V value)``` \u65b9\u6cd5\u5c06\u5176\u9012\u589e\u3002\u5728\u4f5c\u4e1a\u7ed3\u675f\u65f6\uff0cFlink \u4f1a\u6c47\u603b(\u5408\u5e76)\u6240\u6709\u90e8\u5206\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\n+\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u6216\u5728\u4f60\u60f3\u5feb\u901f\u4e86\u89e3\u6709\u5173\u6570\u636e\u66f4\u591a\u4fe1\u606f\u65f6,\u7d2f\u52a0\u5668\u4f5c\u7528\u5f88\u5927\u3002\n+\n+Flink \u76ee\u524d\u6709\u5982\u4e0b**\u5185\u7f6e\u7d2f\u52a0\u5668**\u3002\u6bcf\u4e2a\u90fd\u5b9e\u73b0\u4e86\n+{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"\u7d2f\u52a0\u5668\" %}\n+\u63a5\u53e3\u3002\n \n - {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/IntCounter.java \"__IntCounter__\" %},\n   {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/LongCounter.java \"__LongCounter__\" %}\n-  and {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n-  See below for an example using a counter.\n-- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__Histogram__\" %}:\n-  A histogram implementation for a discrete number of bins. Internally it is just a map from Integer\n-  to Integer. You can use this to compute distributions of values, e.g. the distribution of\n-  words-per-line for a word count program.\n+  \u548c {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n+  \u6709\u5173\u4f7f\u7528\u8ba1\u6570\u5668\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u4e0b\u6587\u3002\n+- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__\u76f4\u65b9\u56fe__\" %}:\n+  \u79bb\u6563\u6570\u91cf\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u5b9e\u73b0\u3002\u5728\u5185\u90e8\uff0c\u5b83\u53ea\u662f\u6574\u5f62\u5230\u6574\u5f62\u7684\u6620\u5c04\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u503c\u7684\u5206\u5e03\uff0c\u4f8b\u5982\uff0c\u5355\u8bcd\u8ba1\u6570\u7a0b\u5e8f\u7684\u6bcf\u884c\u5355\u8bcd\u7684\u5206\u5e03\u60c5\u51b5\u3002\n \n-__How to use accumulators:__\n+__\u5982\u4f55\u4f7f\u7528\u7d2f\u52a0\u5668\uff1a__\n \n-First you have to create an accumulator object (here a counter) in the user-defined transformation\n-function where you want to use it.\n+\u9996\u5148\uff0c\u4f60\u8981\u5728\u9700\u8981\u4f7f\u7528\u7d2f\u52a0\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u8f6c\u6362\u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\u5bf9\u8c61\uff08\u6b64\u5904\u662f\u8ba1\u6570\u5668\uff09\u3002\n \n {% highlight java %}\n private IntCounter numLines = new IntCounter();\n {% endhighlight %}\n \n-Second you have to register the accumulator object, typically in the ```open()``` method of the\n-*rich* function. Here you also define the name.\n+\u5176\u6b21\uff0c\u4f60\u5fc5\u987b\u5728\u5bcc\u51fd\u6570\u7684```open()```\u65b9\u6cd5\u4e2d\u6ce8\u518c\u7d2f\u52a0\u5668\u5bf9\u8c61\u3002\u4e5f\u53ef\u4ee5\u5728\u6b64\u5904\u5b9a\u4e49\u540d\u79f0\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bfd27b44774c770a2d28ee9ca1bde0e11bfbe29"}, "originalPosition": 212}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzUyMTYwOnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo1NDo0MVrOHIqcgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo1NDo0MVrOHIqcgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0NjA4Mg==", "bodyText": "\u62c9\u53d6\u8bf7\u6c42 \u6211\u4e2a\u4eba\u5efa\u8bae\u4fdd\u6301 pull request \u539f\u6587\uff0c\u4e2d\u6587\u4e0d\u4e00\u5b9a\u77e5\u9053\u662f\u4ec0\u4e48\u610f\u601d", "url": "https://github.com/apache/flink/pull/13225#discussion_r478846082", "createdAt": "2020-08-28T05:54:41Z", "author": {"login": "klion26"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,77 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({{ site.baseurl }}/zh/dev/batch/iterations.html))\u3002\n \n {% top %}\n \n-## Accumulators & Counters\n+<a name=\"accumulators--counters\"></a>\n \n-Accumulators are simple constructs with an **add operation** and a **final accumulated result**,\n-which is available after the job ended.\n+## \u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668\n \n-The most straightforward accumulator is a **counter**: You can increment it using the\n-```Accumulator.add(V value)``` method. At the end of the job Flink will sum up (merge) all partial\n-results and send the result to the client. Accumulators are useful during debugging or if you\n-quickly want to find out more about your data.\n+\u7d2f\u52a0\u5668\u662f\u5177\u6709**\u52a0\u6cd5\u8fd0\u7b97**\u548c**\u6700\u7ec8\u7d2f\u52a0\u7ed3\u679c**\u7684\u4e00\u79cd\u7b80\u5355\u7ed3\u6784\uff0c\u53ef\u5728\u4f5c\u4e1a\u7ed3\u675f\u540e\u4f7f\u7528\u3002\n \n-Flink currently has the following **built-in accumulators**. Each of them implements the\n-{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-interface.\n+\u6700\u7b80\u5355\u7684\u7d2f\u52a0\u5668\u5c31\u662f**\u8ba1\u6570\u5668**: \u4f60\u53ef\u4ee5\u4f7f\u7528\n+```Accumulator.add(V value)``` \u65b9\u6cd5\u5c06\u5176\u9012\u589e\u3002\u5728\u4f5c\u4e1a\u7ed3\u675f\u65f6\uff0cFlink \u4f1a\u6c47\u603b(\u5408\u5e76)\u6240\u6709\u90e8\u5206\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\n+\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u6216\u5728\u4f60\u60f3\u5feb\u901f\u4e86\u89e3\u6709\u5173\u6570\u636e\u66f4\u591a\u4fe1\u606f\u65f6,\u7d2f\u52a0\u5668\u4f5c\u7528\u5f88\u5927\u3002\n+\n+Flink \u76ee\u524d\u6709\u5982\u4e0b**\u5185\u7f6e\u7d2f\u52a0\u5668**\u3002\u6bcf\u4e2a\u90fd\u5b9e\u73b0\u4e86\n+{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"\u7d2f\u52a0\u5668\" %}\n+\u63a5\u53e3\u3002\n \n - {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/IntCounter.java \"__IntCounter__\" %},\n   {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/LongCounter.java \"__LongCounter__\" %}\n-  and {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n-  See below for an example using a counter.\n-- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__Histogram__\" %}:\n-  A histogram implementation for a discrete number of bins. Internally it is just a map from Integer\n-  to Integer. You can use this to compute distributions of values, e.g. the distribution of\n-  words-per-line for a word count program.\n+  \u548c {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n+  \u6709\u5173\u4f7f\u7528\u8ba1\u6570\u5668\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u4e0b\u6587\u3002\n+- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__\u76f4\u65b9\u56fe__\" %}:\n+  \u79bb\u6563\u6570\u91cf\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u5b9e\u73b0\u3002\u5728\u5185\u90e8\uff0c\u5b83\u53ea\u662f\u6574\u5f62\u5230\u6574\u5f62\u7684\u6620\u5c04\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u503c\u7684\u5206\u5e03\uff0c\u4f8b\u5982\uff0c\u5355\u8bcd\u8ba1\u6570\u7a0b\u5e8f\u7684\u6bcf\u884c\u5355\u8bcd\u7684\u5206\u5e03\u60c5\u51b5\u3002\n \n-__How to use accumulators:__\n+__\u5982\u4f55\u4f7f\u7528\u7d2f\u52a0\u5668\uff1a__\n \n-First you have to create an accumulator object (here a counter) in the user-defined transformation\n-function where you want to use it.\n+\u9996\u5148\uff0c\u4f60\u8981\u5728\u9700\u8981\u4f7f\u7528\u7d2f\u52a0\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u8f6c\u6362\u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\u5bf9\u8c61\uff08\u6b64\u5904\u662f\u8ba1\u6570\u5668\uff09\u3002\n \n {% highlight java %}\n private IntCounter numLines = new IntCounter();\n {% endhighlight %}\n \n-Second you have to register the accumulator object, typically in the ```open()``` method of the\n-*rich* function. Here you also define the name.\n+\u5176\u6b21\uff0c\u4f60\u5fc5\u987b\u5728\u5bcc\u51fd\u6570\u7684```open()```\u65b9\u6cd5\u4e2d\u6ce8\u518c\u7d2f\u52a0\u5668\u5bf9\u8c61\u3002\u4e5f\u53ef\u4ee5\u5728\u6b64\u5904\u5b9a\u4e49\u540d\u79f0\u3002\n \n {% highlight java %}\n getRuntimeContext().addAccumulator(\"num-lines\", this.numLines);\n {% endhighlight %}\n \n-You can now use the accumulator anywhere in the operator function, including in the ```open()``` and\n-```close()``` methods.\n+\u73b0\u5728\u4f60\u53ef\u4ee5\u5728\u64cd\u4f5c\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\uff08\u5305\u62ec ```open()``` \u548c ```close()``` \u65b9\u6cd5\u4e2d\uff09\u4f7f\u7528\u7d2f\u52a0\u5668\u3002\n \n {% highlight java %}\n this.numLines.add(1);\n {% endhighlight %}\n \n-The overall result will be stored in the ```JobExecutionResult``` object which is\n-returned from the `execute()` method of the execution environment\n-(currently this only works if the execution waits for the\n-completion of the job).\n+\u6700\u7ec8\u6574\u4f53\u7ed3\u679c\u4f1a\u5b58\u50a8\u5728\u7531\u6267\u884c\u73af\u5883\u7684 `execute()` \u65b9\u6cd5\u8fd4\u56de\u7684 ```JobExecutionResult``` \u5bf9\u8c61\u4e2d\uff08\u5f53\u524d\u53ea\u6709\u7b49\u5f85\u4f5c\u4e1a\u5b8c\u6210\u540e\u6267\u884c\u624d\u8d77\u4f5c\u7528\uff09\u3002\n \n {% highlight java %}\n myJobExecutionResult.getAccumulatorResult(\"num-lines\")\n {% endhighlight %}\n \n-All accumulators share a single namespace per job. Thus you can use the same accumulator in\n-different operator functions of your job. Flink will internally merge all accumulators with the same\n-name.\n+\u5355\u4e2a\u4f5c\u4e1a\u7684\u6240\u6709\u7d2f\u52a0\u5668\u5171\u4eab\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u3002\u56e0\u6b64\u4f60\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u51fd\u6570\u91cc\u9762\u4f7f\u7528\u540c\u4e00\u4e2a\u7d2f\u52a0\u5668\u3002Flink \u4f1a\u5728\u5185\u90e8\u5c06\u6240\u6709\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u7d2f\u52a0\u5668\u5408\u5e76\u8d77\u6765\u3002\n \n-A note on accumulators and iterations: Currently the result of accumulators is only available after\n-the overall job has ended. We plan to also make the result of the previous iteration available in the\n-next iteration. You can use\n-{% gh_link /flink-java/src/main/java/org/apache/flink/api/java/operators/IterativeDataSet.java#L98 \"Aggregators\" %}\n-to compute per-iteration statistics and base the termination of iterations on such statistics.\n+\u5173\u4e8e\u7d2f\u52a0\u5668\u548c\u8fed\u4ee3\u7684\u6ce8\u610f\u4e8b\u9879\uff1a\u5f53\u524d\u7d2f\u52a0\u5668\u7684\u7ed3\u679c\u53ea\u6709\u5728\u6574\u4e2a\u4f5c\u4e1a\u7ed3\u675f\u540e\u624d\u53ef\u7528\u3002\u6211\u4eec\u8fd8\u8ba1\u5212\u5728\u4e0b\u4e00\u6b21\u8fed\u4ee3\u4e2d\u63d0\u4f9b\u4e0a\u4e00\u6b21\u7684\u8fed\u4ee3\u7ed3\u679c\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\n+{% gh_link /flink-java/src/main/java/org/apache/flink/api/java/operators/IterativeDataSet.java#L98 \"\u805a\u5408\u5668\" %}\n+\u6765\u8ba1\u7b97\u6bcf\u6b21\u8fed\u4ee3\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5e76\u57fa\u4e8e\u6b64\u7c7b\u7edf\u8ba1\u4fe1\u606f\u6765\u7ec8\u6b62\u8fed\u4ee3\u3002\n \n-__Custom accumulators:__\n+__\u5b9a\u5236\u7d2f\u52a0\u5668\uff1a__\n \n-To implement your own accumulator you simply have to write your implementation of the Accumulator\n-interface. Feel free to create a pull request if you think your custom accumulator should be shipped\n-with Flink.\n+\u8981\u5b9e\u73b0\u81ea\u5df1\u7684\u7d2f\u52a0\u5668\uff0c\u4f60\u53ea\u9700\u8981\u5b9e\u73b0\u7d2f\u52a0\u5668\u63a5\u53e3\u5373\u53ef\u3002\u5982\u679c\u4f60\u8ba4\u4e3a\u81ea\u5b9a\u4e49\u7d2f\u52a0\u5668\u5e94\u968f Flink \u4e00\u8d77\u63d0\u4f9b\uff0c\u8bf7\u5c3d\u7ba1\u521b\u5efa\u62c9\u53d6\u8bf7\u6c42\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bfd27b44774c770a2d28ee9ca1bde0e11bfbe29"}, "originalPosition": 256}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzUyNDY5OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo1NjoxMlrOHIqeQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo1NjoxMlrOHIqeQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0NjUyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ```Accumulator<V,R>``` \u6700\u7075\u6d3b: \u5b83\u7ed9\u9700\u8981\u6dfb\u52a0\u7684\u503c\u5b9a\u4e49\u4e86\u7c7b\u578b```V```\uff0c\u5e76\u5b9a\u4e49\u4e86\u6700\u7ec8\u7684\u7ed3\u679c\u7c7b\u578b```R```\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u76f4\u65b9\u56fe\uff0c```V```\u662f\u4e00\u4e2a\u6570\u5b57\u4e14```R```\u662f\u4e00\u4e2a\u76f4\u65b9\u56fe\u3002\n          \n          \n            \n            ```Accumulator<V,R>``` \u6700\u7075\u6d3b: \u5b83\u7ed9\u9700\u8981\u6dfb\u52a0\u7684\u503c\u5b9a\u4e49\u4e86\u7c7b\u578b ```V```\uff0c\u5e76\u5b9a\u4e49\u4e86\u6700\u7ec8\u7684\u7ed3\u679c\u7c7b\u578b ```R```\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u76f4\u65b9\u56fe\uff0c```V``` \u662f\u4e00\u4e2a\u6570\u5b57\u4e14 ```R```\u662f\u4e00\u4e2a\u76f4\u65b9\u56fe\u3002", "url": "https://github.com/apache/flink/pull/13225#discussion_r478846529", "createdAt": "2020-08-28T05:56:12Z", "author": {"login": "klion26"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,77 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u5bf9\u4e8e\u53c2\u6570\u5316\u529f\u80fd\u5f88\u6709\u7528\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}/zh/dev/batch/index.html#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({{ site.baseurl }}/zh/dev/batch/index.html#broadcast-variables))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({{ site.baseurl }}/zh/dev/batch/iterations.html))\u3002\n \n {% top %}\n \n-## Accumulators & Counters\n+<a name=\"accumulators--counters\"></a>\n \n-Accumulators are simple constructs with an **add operation** and a **final accumulated result**,\n-which is available after the job ended.\n+## \u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668\n \n-The most straightforward accumulator is a **counter**: You can increment it using the\n-```Accumulator.add(V value)``` method. At the end of the job Flink will sum up (merge) all partial\n-results and send the result to the client. Accumulators are useful during debugging or if you\n-quickly want to find out more about your data.\n+\u7d2f\u52a0\u5668\u662f\u5177\u6709**\u52a0\u6cd5\u8fd0\u7b97**\u548c**\u6700\u7ec8\u7d2f\u52a0\u7ed3\u679c**\u7684\u4e00\u79cd\u7b80\u5355\u7ed3\u6784\uff0c\u53ef\u5728\u4f5c\u4e1a\u7ed3\u675f\u540e\u4f7f\u7528\u3002\n \n-Flink currently has the following **built-in accumulators**. Each of them implements the\n-{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-interface.\n+\u6700\u7b80\u5355\u7684\u7d2f\u52a0\u5668\u5c31\u662f**\u8ba1\u6570\u5668**: \u4f60\u53ef\u4ee5\u4f7f\u7528\n+```Accumulator.add(V value)``` \u65b9\u6cd5\u5c06\u5176\u9012\u589e\u3002\u5728\u4f5c\u4e1a\u7ed3\u675f\u65f6\uff0cFlink \u4f1a\u6c47\u603b(\u5408\u5e76)\u6240\u6709\u90e8\u5206\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\n+\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u6216\u5728\u4f60\u60f3\u5feb\u901f\u4e86\u89e3\u6709\u5173\u6570\u636e\u66f4\u591a\u4fe1\u606f\u65f6,\u7d2f\u52a0\u5668\u4f5c\u7528\u5f88\u5927\u3002\n+\n+Flink \u76ee\u524d\u6709\u5982\u4e0b**\u5185\u7f6e\u7d2f\u52a0\u5668**\u3002\u6bcf\u4e2a\u90fd\u5b9e\u73b0\u4e86\n+{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"\u7d2f\u52a0\u5668\" %}\n+\u63a5\u53e3\u3002\n \n - {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/IntCounter.java \"__IntCounter__\" %},\n   {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/LongCounter.java \"__LongCounter__\" %}\n-  and {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n-  See below for an example using a counter.\n-- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__Histogram__\" %}:\n-  A histogram implementation for a discrete number of bins. Internally it is just a map from Integer\n-  to Integer. You can use this to compute distributions of values, e.g. the distribution of\n-  words-per-line for a word count program.\n+  \u548c {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n+  \u6709\u5173\u4f7f\u7528\u8ba1\u6570\u5668\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u4e0b\u6587\u3002\n+- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__\u76f4\u65b9\u56fe__\" %}:\n+  \u79bb\u6563\u6570\u91cf\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u5b9e\u73b0\u3002\u5728\u5185\u90e8\uff0c\u5b83\u53ea\u662f\u6574\u5f62\u5230\u6574\u5f62\u7684\u6620\u5c04\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u503c\u7684\u5206\u5e03\uff0c\u4f8b\u5982\uff0c\u5355\u8bcd\u8ba1\u6570\u7a0b\u5e8f\u7684\u6bcf\u884c\u5355\u8bcd\u7684\u5206\u5e03\u60c5\u51b5\u3002\n \n-__How to use accumulators:__\n+__\u5982\u4f55\u4f7f\u7528\u7d2f\u52a0\u5668\uff1a__\n \n-First you have to create an accumulator object (here a counter) in the user-defined transformation\n-function where you want to use it.\n+\u9996\u5148\uff0c\u4f60\u8981\u5728\u9700\u8981\u4f7f\u7528\u7d2f\u52a0\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u8f6c\u6362\u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\u5bf9\u8c61\uff08\u6b64\u5904\u662f\u8ba1\u6570\u5668\uff09\u3002\n \n {% highlight java %}\n private IntCounter numLines = new IntCounter();\n {% endhighlight %}\n \n-Second you have to register the accumulator object, typically in the ```open()``` method of the\n-*rich* function. Here you also define the name.\n+\u5176\u6b21\uff0c\u4f60\u5fc5\u987b\u5728\u5bcc\u51fd\u6570\u7684```open()```\u65b9\u6cd5\u4e2d\u6ce8\u518c\u7d2f\u52a0\u5668\u5bf9\u8c61\u3002\u4e5f\u53ef\u4ee5\u5728\u6b64\u5904\u5b9a\u4e49\u540d\u79f0\u3002\n \n {% highlight java %}\n getRuntimeContext().addAccumulator(\"num-lines\", this.numLines);\n {% endhighlight %}\n \n-You can now use the accumulator anywhere in the operator function, including in the ```open()``` and\n-```close()``` methods.\n+\u73b0\u5728\u4f60\u53ef\u4ee5\u5728\u64cd\u4f5c\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\uff08\u5305\u62ec ```open()``` \u548c ```close()``` \u65b9\u6cd5\u4e2d\uff09\u4f7f\u7528\u7d2f\u52a0\u5668\u3002\n \n {% highlight java %}\n this.numLines.add(1);\n {% endhighlight %}\n \n-The overall result will be stored in the ```JobExecutionResult``` object which is\n-returned from the `execute()` method of the execution environment\n-(currently this only works if the execution waits for the\n-completion of the job).\n+\u6700\u7ec8\u6574\u4f53\u7ed3\u679c\u4f1a\u5b58\u50a8\u5728\u7531\u6267\u884c\u73af\u5883\u7684 `execute()` \u65b9\u6cd5\u8fd4\u56de\u7684 ```JobExecutionResult``` \u5bf9\u8c61\u4e2d\uff08\u5f53\u524d\u53ea\u6709\u7b49\u5f85\u4f5c\u4e1a\u5b8c\u6210\u540e\u6267\u884c\u624d\u8d77\u4f5c\u7528\uff09\u3002\n \n {% highlight java %}\n myJobExecutionResult.getAccumulatorResult(\"num-lines\")\n {% endhighlight %}\n \n-All accumulators share a single namespace per job. Thus you can use the same accumulator in\n-different operator functions of your job. Flink will internally merge all accumulators with the same\n-name.\n+\u5355\u4e2a\u4f5c\u4e1a\u7684\u6240\u6709\u7d2f\u52a0\u5668\u5171\u4eab\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u3002\u56e0\u6b64\u4f60\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u51fd\u6570\u91cc\u9762\u4f7f\u7528\u540c\u4e00\u4e2a\u7d2f\u52a0\u5668\u3002Flink \u4f1a\u5728\u5185\u90e8\u5c06\u6240\u6709\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u7d2f\u52a0\u5668\u5408\u5e76\u8d77\u6765\u3002\n \n-A note on accumulators and iterations: Currently the result of accumulators is only available after\n-the overall job has ended. We plan to also make the result of the previous iteration available in the\n-next iteration. You can use\n-{% gh_link /flink-java/src/main/java/org/apache/flink/api/java/operators/IterativeDataSet.java#L98 \"Aggregators\" %}\n-to compute per-iteration statistics and base the termination of iterations on such statistics.\n+\u5173\u4e8e\u7d2f\u52a0\u5668\u548c\u8fed\u4ee3\u7684\u6ce8\u610f\u4e8b\u9879\uff1a\u5f53\u524d\u7d2f\u52a0\u5668\u7684\u7ed3\u679c\u53ea\u6709\u5728\u6574\u4e2a\u4f5c\u4e1a\u7ed3\u675f\u540e\u624d\u53ef\u7528\u3002\u6211\u4eec\u8fd8\u8ba1\u5212\u5728\u4e0b\u4e00\u6b21\u8fed\u4ee3\u4e2d\u63d0\u4f9b\u4e0a\u4e00\u6b21\u7684\u8fed\u4ee3\u7ed3\u679c\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\n+{% gh_link /flink-java/src/main/java/org/apache/flink/api/java/operators/IterativeDataSet.java#L98 \"\u805a\u5408\u5668\" %}\n+\u6765\u8ba1\u7b97\u6bcf\u6b21\u8fed\u4ee3\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5e76\u57fa\u4e8e\u6b64\u7c7b\u7edf\u8ba1\u4fe1\u606f\u6765\u7ec8\u6b62\u8fed\u4ee3\u3002\n \n-__Custom accumulators:__\n+__\u5b9a\u5236\u7d2f\u52a0\u5668\uff1a__\n \n-To implement your own accumulator you simply have to write your implementation of the Accumulator\n-interface. Feel free to create a pull request if you think your custom accumulator should be shipped\n-with Flink.\n+\u8981\u5b9e\u73b0\u81ea\u5df1\u7684\u7d2f\u52a0\u5668\uff0c\u4f60\u53ea\u9700\u8981\u5b9e\u73b0\u7d2f\u52a0\u5668\u63a5\u53e3\u5373\u53ef\u3002\u5982\u679c\u4f60\u8ba4\u4e3a\u81ea\u5b9a\u4e49\u7d2f\u52a0\u5668\u5e94\u968f Flink \u4e00\u8d77\u63d0\u4f9b\uff0c\u8bf7\u5c3d\u7ba1\u521b\u5efa\u62c9\u53d6\u8bf7\u6c42\u3002\n \n-You have the choice to implement either\n+\u4f60\u53ef\u4ee5\u9009\u62e9\u5b9e\u73b0\n {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-or {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/SimpleAccumulator.java \"SimpleAccumulator\" %}.\n+\u6216 {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/SimpleAccumulator.java \"SimpleAccumulator\" %}\u3002\n \n-```Accumulator<V,R>``` is most flexible: It defines a type ```V``` for the value to add, and a\n-result type ```R``` for the final result. E.g. for a histogram, ```V``` is a number and ```R``` is\n- a histogram. ```SimpleAccumulator``` is for the cases where both types are the same, e.g. for counters.\n+```Accumulator<V,R>``` \u6700\u7075\u6d3b: \u5b83\u7ed9\u9700\u8981\u6dfb\u52a0\u7684\u503c\u5b9a\u4e49\u4e86\u7c7b\u578b```V```\uff0c\u5e76\u5b9a\u4e49\u4e86\u6700\u7ec8\u7684\u7ed3\u679c\u7c7b\u578b```R```\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u76f4\u65b9\u56fe\uff0c```V```\u662f\u4e00\u4e2a\u6570\u5b57\u4e14```R```\u662f\u4e00\u4e2a\u76f4\u65b9\u56fe\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bfd27b44774c770a2d28ee9ca1bde0e11bfbe29"}, "originalPosition": 267}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMjAyOTkzOnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNToyNjozMFrOHLZ6BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzowNDowM1rOHMY0-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTcyMDgzNw==", "bodyText": "\u8fd9\u4e2a\u94fe\u63a5\u7684\u4fee\u6539\u662f\u6709\u95ee\u9898\u7684\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003\u4e0b\u4e0a\u6b21\u8bc4\u8bba\u4e2d\u7684\u94fe\u63a5\u3002\nhttp://apache-flink-mailing-list-archive.1008284.n3.nabble.com/Reminder-Prefer-link-tag-in-documentation-td42362.html\n\u9700\u8981\u628a\n[CLI]({% site.baseurl %}/ops/cli.html) \u7684\u683c\u5f0f\u6362\u6210 [CLI]({% link ops/cli.md %})\u3002\n\u4f60\u53ef\u4ee5\u53c2\u8003 https://github.com/apache/flink/pull/12798/files \u8fd9\u4e2a PR \u7684\u4fee\u6539\u3002\n\u4fee\u6539\u5b8c\u6210\u4e4b\u540e\uff0c\u5efa\u8bae\u6267\u884c ./docs/docker/run.sh \u7136\u540e\u6267\u884c ./build_docs.sh -p  \u67e5\u770b\u662f\u5426\u6709\u9519\u8bef\uff08\u73b0\u5728\u7684\u4fee\u6539\u6267\u884c\u662f\u6709\u9519\u8bef\u7684\uff09\uff0c\u8fd9\u6837\u6267\u884c\u6ca1\u6709\u9519\u8bef\u4e4b\u540e\uff0c\u53ef\u4ee5\u6253\u5f00 localhost:4000 \u627e\u5230\u7ffb\u8bd1\u7684\u9875\u9762\u67e5\u770b\u5177\u4f53\u6548\u679c", "url": "https://github.com/apache/flink/pull/13225#discussion_r481720837", "createdAt": "2020-09-02T05:26:30Z", "author": {"login": "klion26"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,78 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5bf9\u4e8e\u53c2\u6570\u5316\u51fd\u6570\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}{% link zh/dev/batch/index.html#passing-parameters-to-functions %}))\uff0c", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada20c1fc8eb927eb4b72e9783d85821e67934cb"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA3MTcwNA==", "bodyText": "@klion26 yes,i have fixed it.", "url": "https://github.com/apache/flink/pull/13225#discussion_r482071704", "createdAt": "2020-09-02T13:33:08Z", "author": {"login": "zhuxiaoshang"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,78 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5bf9\u4e8e\u53c2\u6570\u5316\u51fd\u6570\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}{% link zh/dev/batch/index.html#passing-parameters-to-functions %}))\uff0c", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTcyMDgzNw=="}, "originalCommit": {"oid": "ada20c1fc8eb927eb4b72e9783d85821e67934cb"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcwNjU2NA==", "bodyText": "\u73b0\u5728\u7684\u94fe\u63a5\u8fd8\u662f\u6709\u95ee\u9898\u7684\uff0c\u5982\u679c\u5728\u672c\u5730\u6267\u884c ./docs/docker/run.sh \u7136\u540e\u6267\u884c ./build_docs.sh -p \u662f\u53ef\u4ee5\u770b\u5230\u62a5\u9519\u7684\n\u6b63\u786e\u7684\u5e94\u8be5\u662f {%link dev/batch/index.zh.md %}#passing-parameters-to-functions", "url": "https://github.com/apache/flink/pull/13225#discussion_r482706564", "createdAt": "2020-09-03T05:06:11Z", "author": {"login": "klion26"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,78 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5bf9\u4e8e\u53c2\u6570\u5316\u51fd\u6570\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}{% link zh/dev/batch/index.html#passing-parameters-to-functions %}))\uff0c", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTcyMDgzNw=="}, "originalCommit": {"oid": "ada20c1fc8eb927eb4b72e9783d85821e67934cb"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc1MTczNw==", "bodyText": "@klion26 sorry for my negligence,I see the error this time,but what i curious is that why the link can still jump to target page.", "url": "https://github.com/apache/flink/pull/13225#discussion_r482751737", "createdAt": "2020-09-03T07:04:03Z", "author": {"login": "zhuxiaoshang"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,78 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5bf9\u4e8e\u53c2\u6570\u5316\u51fd\u6570\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({{ site.baseurl }}{% link zh/dev/batch/index.html#passing-parameters-to-functions %}))\uff0c", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTcyMDgzNw=="}, "originalCommit": {"oid": "ada20c1fc8eb927eb4b72e9783d85821e67934cb"}, "originalPosition": 155}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjQ1OTA4OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/operations/utils/SortOperationFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNToxODoyM1rOHM_6gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNToxODoyM1rOHM_6gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM5MjEyOQ==", "bodyText": "could you please revert these unrelated changes?", "url": "https://github.com/apache/flink/pull/13225#discussion_r483392129", "createdAt": "2020-09-04T05:18:23Z", "author": {"login": "klion26"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/operations/utils/SortOperationFactory.java", "diffHunk": "@@ -121,9 +121,9 @@ private SortQueryOperation validateAndGetChildSort(QueryOperation child, PostRes\n \t\t\tpreviousSort = (SortQueryOperation) createSort(Collections.emptyList(), child, postResolverFactory);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d5f591223a0e46a22e24bbeb084a6b59c48a445"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjQ1OTc3OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-java/src/test/java/org/apache/flink/table/api/Fetch.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNToxODo0OVrOHM_66g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjozMTozM1rOHNBSgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM5MjIzNA==", "bodyText": "please revert these changes", "url": "https://github.com/apache/flink/pull/13225#discussion_r483392234", "createdAt": "2020-09-04T05:18:49Z", "author": {"login": "klion26"}, "path": "flink-table/flink-table-api-java/src/test/java/org/apache/flink/table/api/Fetch.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package org.apache.flink.table.api;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d5f591223a0e46a22e24bbeb084a6b59c48a445"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxNDY1Nw==", "bodyText": "sorry,i have reverted these.", "url": "https://github.com/apache/flink/pull/13225#discussion_r483414657", "createdAt": "2020-09-04T06:31:33Z", "author": {"login": "zhuxiaoshang"}, "path": "flink-table/flink-table-api-java/src/test/java/org/apache/flink/table/api/Fetch.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package org.apache.flink.table.api;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM5MjIzNA=="}, "originalCommit": {"oid": "9d5f591223a0e46a22e24bbeb084a6b59c48a445"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDE4MTY5OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzoyNjo1OVrOHPhkUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzoyNjo1OVrOHPhkUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA0MDY1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u6240\u6709\u9700\u8981\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u8f6c\u5316\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5c06 *rich* function \u4f5c\u4e3a\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u4ee3\u66ff\n          \n          \n            \n            \u6240\u6709\u9700\u8981\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u8f6c\u5316\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5c06 *rich* function \u4f5c\u4e3a\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u4ee3\u7801", "url": "https://github.com/apache/flink/pull/13225#discussion_r486040657", "createdAt": "2020-09-10T03:26:59Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -62,32 +66,33 @@ data.filter(s -> s.startsWith(\"http://\"));\n data.reduce((i1,i2) -> i1 + i2);\n {% endhighlight %}\n \n+<a name=\"rich-functions\"></a>\n+\n ## Rich functions\n \n-All transformations that require a user-defined function can\n-instead take as argument a *rich* function. For example, instead of\n+\u6240\u6709\u9700\u8981\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u8f6c\u5316\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5c06 *rich* function \u4f5c\u4e3a\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u4ee3\u66ff", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6141fa38f42a92fe10ca6b707813f0253ba5f3f"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDE4MjQ2OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzoyNzoyOVrOHPhk1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzoyNzoyOVrOHPhk1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA0MDc4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u4f60\u53ef\u4ee5\u5199\u6210\n          \n          \n            \n            \u66f4\u6539\u540e\u66ff\u6362\u4e3a\u5982\u4e0b\u5185\u5bb9", "url": "https://github.com/apache/flink/pull/13225#discussion_r486040788", "createdAt": "2020-09-10T03:27:29Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -62,32 +66,33 @@ data.filter(s -> s.startsWith(\"http://\"));\n data.reduce((i1,i2) -> i1 + i2);\n {% endhighlight %}\n \n+<a name=\"rich-functions\"></a>\n+\n ## Rich functions\n \n-All transformations that require a user-defined function can\n-instead take as argument a *rich* function. For example, instead of\n+\u6240\u6709\u9700\u8981\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u8f6c\u5316\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5c06 *rich* function \u4f5c\u4e3a\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u4ee3\u66ff\n \n {% highlight java %}\n class MyMapFunction implements MapFunction<String, Integer> {\n   public Integer map(String value) { return Integer.parseInt(value); }\n };\n {% endhighlight %}\n \n-you can write\n+\u4f60\u53ef\u4ee5\u5199\u6210", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6141fa38f42a92fe10ca6b707813f0253ba5f3f"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDE4Njc3OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzozMDowNFrOHPhnYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzozMDowNFrOHPhnYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA0MTQ0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u5927\u591a\u6570\u64cd\u4f5c\u90fd\u9700\u8981\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u3002\u672c\u8282\u5217\u51fa\u4e86\u5b9e\u73b0\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u4e0d\u540c\u65b9\u5f0f\u3002\u8fd8\u4f1a\u4ecb\u7ecd `Accumulators`\uff08\u7d2f\u52a0\u5668\uff09\uff0c\u53ef\u7528\u4e8e\u6df1\u5165\u4e86\u89e3\u4f60\u7684 Flink \u5e94\u7528\u7a0b\u5e8f\u3002\n          \n          \n            \n            \u5927\u591a\u6570\u64cd\u4f5c\u90fd\u9700\u8981\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\uff08function\uff09\u3002\u672c\u8282\u5217\u51fa\u4e86\u5b9e\u73b0\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u4e0d\u540c\u65b9\u5f0f\u3002\u8fd8\u4f1a\u4ecb\u7ecd `Accumulators`\uff08\u7d2f\u52a0\u5668\uff09\uff0c\u53ef\u7528\u4e8e\u6df1\u5165\u4e86\u89e3\u4f60\u7684 Flink \u5e94\u7528\u7a0b\u5e8f\u3002", "url": "https://github.com/apache/flink/pull/13225#discussion_r486041441", "createdAt": "2020-09-10T03:30:04Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -23,16 +23,16 @@ specific language governing permissions and limitations\n under the License.\n -->\n \n-Most operations require a user-defined function. This section lists different\n-ways of how they can be specified. We also cover `Accumulators`, which can be\n-used to gain insights into your Flink application.\n+\u5927\u591a\u6570\u64cd\u4f5c\u90fd\u9700\u8981\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u3002\u672c\u8282\u5217\u51fa\u4e86\u5b9e\u73b0\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u4e0d\u540c\u65b9\u5f0f\u3002\u8fd8\u4f1a\u4ecb\u7ecd `Accumulators`\uff08\u7d2f\u52a0\u5668\uff09\uff0c\u53ef\u7528\u4e8e\u6df1\u5165\u4e86\u89e3\u4f60\u7684 Flink \u5e94\u7528\u7a0b\u5e8f\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6141fa38f42a92fe10ca6b707813f0253ba5f3f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDIwMDQyOnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzozODoxN1rOHPhvMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNjozNjozNlrOHRFr1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA0MzQ0MQ==", "bodyText": "We need to make some necessary decisions.\nfunction or \u51fd\u6570\uff1f\nrich function or ```\u5bcc\u51fd\u6570````\uff1f\nWe'd better keep the special nouns and keywords consistent in the translation, which  is more rigorous.\nCan you tell me what you think of ?", "url": "https://github.com/apache/flink/pull/13225#discussion_r486043441", "createdAt": "2020-09-10T03:38:17Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -114,30 +119,31 @@ data.reduce { (i1,i2) => i1 + i2 }\n data.reduce { _ + _ }\n {% endhighlight %}\n \n+<a name=\"rich-functions\"></a>\n+\n ## Rich functions\n \n-All transformations that take as argument a lambda function can\n-instead take as argument a *rich* function. For example, instead of\n+\u6240\u6709\u5c06 lambda \u8868\u8fbe\u5f0f\u4f5c\u4e3a\u53c2\u6570\u7684\u8f6c\u5316\u64cd\u4f5c\u90fd\u53ef\u4ee5\u7528 *rich* function \u6765\u4ee3\u66ff\u3002\u4f8b\u5982\uff0c\u4ee3\u66ff\n \n {% highlight scala %}\n data.map { x => x.toInt }\n {% endhighlight %}\n \n-you can write\n+\u4f60\u53ef\u4ee5\u5199\u6210\n \n {% highlight scala %}\n class MyMapFunction extends RichMapFunction[String, Int] {\n   def map(in: String):Int = { in.toInt }\n };\n {% endhighlight %}\n \n-and pass the function to a `map` transformation:\n+\u5e76\u5c06\u51fd\u6570\u4f20\u9012\u7ed9 `map` transformation:\n \n {% highlight scala %}\n data.map(new MyMapFunction())\n {% endhighlight %}\n \n-Rich functions can also be defined as an anonymous class:\n+\u5bcc\u51fd\u6570\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u6210\u533f\u540d\u7c7b:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6141fa38f42a92fe10ca6b707813f0253ba5f3f"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY4MDk4Mg==", "bodyText": "yes\uff0cit's should be resvered as function", "url": "https://github.com/apache/flink/pull/13225#discussion_r487680982", "createdAt": "2020-09-14T06:36:36Z", "author": {"login": "zhuxiaoshang"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -114,30 +119,31 @@ data.reduce { (i1,i2) => i1 + i2 }\n data.reduce { _ + _ }\n {% endhighlight %}\n \n+<a name=\"rich-functions\"></a>\n+\n ## Rich functions\n \n-All transformations that take as argument a lambda function can\n-instead take as argument a *rich* function. For example, instead of\n+\u6240\u6709\u5c06 lambda \u8868\u8fbe\u5f0f\u4f5c\u4e3a\u53c2\u6570\u7684\u8f6c\u5316\u64cd\u4f5c\u90fd\u53ef\u4ee5\u7528 *rich* function \u6765\u4ee3\u66ff\u3002\u4f8b\u5982\uff0c\u4ee3\u66ff\n \n {% highlight scala %}\n data.map { x => x.toInt }\n {% endhighlight %}\n \n-you can write\n+\u4f60\u53ef\u4ee5\u5199\u6210\n \n {% highlight scala %}\n class MyMapFunction extends RichMapFunction[String, Int] {\n   def map(in: String):Int = { in.toInt }\n };\n {% endhighlight %}\n \n-and pass the function to a `map` transformation:\n+\u5e76\u5c06\u51fd\u6570\u4f20\u9012\u7ed9 `map` transformation:\n \n {% highlight scala %}\n data.map(new MyMapFunction())\n {% endhighlight %}\n \n-Rich functions can also be defined as an anonymous class:\n+\u5bcc\u51fd\u6570\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u6210\u533f\u540d\u7c7b:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA0MzQ0MQ=="}, "originalCommit": {"oid": "f6141fa38f42a92fe10ca6b707813f0253ba5f3f"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MDIxNjM4OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzo0NzoyM1rOHPh4Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzo0NzoyM1rOHPh4Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA0NTY5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ```Accumulator<V,R>``` \u6700\u7075\u6d3b: \u5b83\u7ed9\u9700\u8981\u6dfb\u52a0\u7684\u503c\u5b9a\u4e49\u4e86\u7c7b\u578b ```V```\uff0c\u5e76\u5b9a\u4e49\u4e86\u6700\u7ec8\u7684\u7ed3\u679c\u7c7b\u578b ```R```\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u76f4\u65b9\u56fe\uff0c```V``` \u662f\u4e00\u4e2a\u6570\u5b57\u4e14 ```R``` \u662f\u4e00\u4e2a\u76f4\u65b9\u56fe\u3002\n          \n          \n            \n            ```Accumulator<V,R>``` \u7684\u5b9e\u73b0\u5341\u5206\u7075\u6d3b: \u5b83\u5b9a\u4e49\u4e86\u5c06\u8981\u6dfb\u52a0\u7684\u503c\u7c7b\u578b ```V```\uff0c\u5e76\u5b9a\u4e49\u4e86\u6700\u7ec8\u7684\u7ed3\u679c\u7c7b\u578b ```R```\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u76f4\u65b9\u56fe\uff0c```V``` \u662f\u4e00\u4e2a\u6570\u5b57\u4e14 ```R``` \u662f\u4e00\u4e2a\u76f4\u65b9\u56fe\u3002", "url": "https://github.com/apache/flink/pull/13225#discussion_r486045698", "createdAt": "2020-09-10T03:47:23Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,78 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u529f\u80fd\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5bf9\u4e8e\u53c2\u6570\u5316\u51fd\u6570\n+(\u53c2\u9605 [\u7ed9\u51fd\u6570\u4f20\u9012\u53c2\u6570]({% link dev/batch/index.zh.md %}#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({% link dev/batch/index.zh.md %}#broadcast-variables ))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#accumulators--counters))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({% link dev/batch/iterations.zh.md %}))\n+\u6709\u5f88\u5927\u4f5c\u7528\u3002\n \n {% top %}\n \n-## Accumulators & Counters\n+<a name=\"accumulators--counters\"></a>\n \n-Accumulators are simple constructs with an **add operation** and a **final accumulated result**,\n-which is available after the job ended.\n+## \u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668\n \n-The most straightforward accumulator is a **counter**: You can increment it using the\n-```Accumulator.add(V value)``` method. At the end of the job Flink will sum up (merge) all partial\n-results and send the result to the client. Accumulators are useful during debugging or if you\n-quickly want to find out more about your data.\n+\u7d2f\u52a0\u5668\u662f\u5177\u6709**\u52a0\u6cd5\u8fd0\u7b97**\u548c**\u6700\u7ec8\u7d2f\u52a0\u7ed3\u679c**\u7684\u4e00\u79cd\u7b80\u5355\u7ed3\u6784\uff0c\u53ef\u5728\u4f5c\u4e1a\u7ed3\u675f\u540e\u4f7f\u7528\u3002\n \n-Flink currently has the following **built-in accumulators**. Each of them implements the\n-{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-interface.\n+\u6700\u7b80\u5355\u7684\u7d2f\u52a0\u5668\u5c31\u662f**\u8ba1\u6570\u5668**: \u4f60\u53ef\u4ee5\u4f7f\u7528\n+```Accumulator.add(V value)``` \u65b9\u6cd5\u5c06\u5176\u9012\u589e\u3002\u5728\u4f5c\u4e1a\u7ed3\u675f\u65f6\uff0cFlink \u4f1a\u6c47\u603b(\u5408\u5e76)\u6240\u6709\u90e8\u5206\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\n+\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u6216\u5728\u4f60\u60f3\u5feb\u901f\u4e86\u89e3\u6709\u5173\u6570\u636e\u66f4\u591a\u4fe1\u606f\u65f6,\u7d2f\u52a0\u5668\u4f5c\u7528\u5f88\u5927\u3002\n+\n+Flink \u76ee\u524d\u6709\u5982\u4e0b**\u5185\u7f6e\u7d2f\u52a0\u5668**\u3002\u6bcf\u4e2a\u90fd\u5b9e\u73b0\u4e86\n+{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"\u7d2f\u52a0\u5668\" %}\n+\u63a5\u53e3\u3002\n \n - {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/IntCounter.java \"__IntCounter__\" %},\n   {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/LongCounter.java \"__LongCounter__\" %}\n-  and {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n-  See below for an example using a counter.\n-- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__Histogram__\" %}:\n-  A histogram implementation for a discrete number of bins. Internally it is just a map from Integer\n-  to Integer. You can use this to compute distributions of values, e.g. the distribution of\n-  words-per-line for a word count program.\n+  \u548c {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/DoubleCounter.java \"__DoubleCounter__\" %}:\n+  \u6709\u5173\u4f7f\u7528\u8ba1\u6570\u5668\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u4e0b\u6587\u3002\n+- {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Histogram.java \"__\u76f4\u65b9\u56fe__\" %}:\n+  \u79bb\u6563\u6570\u91cf\u7684\u67f1\u72b6\u76f4\u65b9\u56fe\u5b9e\u73b0\u3002\u5728\u5185\u90e8\uff0c\u5b83\u53ea\u662f\u6574\u5f62\u5230\u6574\u5f62\u7684\u6620\u5c04\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8ba1\u7b97\u503c\u7684\u5206\u5e03\uff0c\u4f8b\u5982\uff0c\u5355\u8bcd\u8ba1\u6570\u7a0b\u5e8f\u7684\u6bcf\u884c\u5355\u8bcd\u7684\u5206\u5e03\u60c5\u51b5\u3002\n \n-__How to use accumulators:__\n+__\u5982\u4f55\u4f7f\u7528\u7d2f\u52a0\u5668\uff1a__\n \n-First you have to create an accumulator object (here a counter) in the user-defined transformation\n-function where you want to use it.\n+\u9996\u5148\uff0c\u5728\u9700\u8981\u4f7f\u7528\u7d2f\u52a0\u5668\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u8f6c\u6362\u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a\u7d2f\u52a0\u5668\u5bf9\u8c61\uff08\u6b64\u5904\u662f\u8ba1\u6570\u5668\uff09\u3002\n \n {% highlight java %}\n private IntCounter numLines = new IntCounter();\n {% endhighlight %}\n \n-Second you have to register the accumulator object, typically in the ```open()``` method of the\n-*rich* function. Here you also define the name.\n+\u5176\u6b21\uff0c\u4f60\u5fc5\u987b\u5728 *rich* function \u7684 ```open()``` \u65b9\u6cd5\u4e2d\u6ce8\u518c\u7d2f\u52a0\u5668\u5bf9\u8c61\u3002\u4e5f\u53ef\u4ee5\u5728\u6b64\u5904\u5b9a\u4e49\u540d\u79f0\u3002\n \n {% highlight java %}\n getRuntimeContext().addAccumulator(\"num-lines\", this.numLines);\n {% endhighlight %}\n \n-You can now use the accumulator anywhere in the operator function, including in the ```open()``` and\n-```close()``` methods.\n+\u73b0\u5728\u4f60\u53ef\u4ee5\u5728\u64cd\u4f5c\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\uff08\u5305\u62ec ```open()``` \u548c ```close()``` \u65b9\u6cd5\u4e2d\uff09\u4f7f\u7528\u7d2f\u52a0\u5668\u3002\n \n {% highlight java %}\n this.numLines.add(1);\n {% endhighlight %}\n \n-The overall result will be stored in the ```JobExecutionResult``` object which is\n-returned from the `execute()` method of the execution environment\n-(currently this only works if the execution waits for the\n-completion of the job).\n+\u6700\u7ec8\u6574\u4f53\u7ed3\u679c\u4f1a\u5b58\u50a8\u5728\u7531\u6267\u884c\u73af\u5883\u7684 `execute()` \u65b9\u6cd5\u8fd4\u56de\u7684 ```JobExecutionResult``` \u5bf9\u8c61\u4e2d\uff08\u5f53\u524d\u53ea\u6709\u7b49\u5f85\u4f5c\u4e1a\u5b8c\u6210\u540e\u6267\u884c\u624d\u8d77\u4f5c\u7528\uff09\u3002\n \n {% highlight java %}\n myJobExecutionResult.getAccumulatorResult(\"num-lines\")\n {% endhighlight %}\n \n-All accumulators share a single namespace per job. Thus you can use the same accumulator in\n-different operator functions of your job. Flink will internally merge all accumulators with the same\n-name.\n+\u5355\u4e2a\u4f5c\u4e1a\u7684\u6240\u6709\u7d2f\u52a0\u5668\u5171\u4eab\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u3002\u56e0\u6b64\u4f60\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u51fd\u6570\u91cc\u9762\u4f7f\u7528\u540c\u4e00\u4e2a\u7d2f\u52a0\u5668\u3002Flink \u4f1a\u5728\u5185\u90e8\u5c06\u6240\u6709\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u7d2f\u52a0\u5668\u5408\u5e76\u8d77\u6765\u3002\n \n-A note on accumulators and iterations: Currently the result of accumulators is only available after\n-the overall job has ended. We plan to also make the result of the previous iteration available in the\n-next iteration. You can use\n-{% gh_link /flink-java/src/main/java/org/apache/flink/api/java/operators/IterativeDataSet.java#L98 \"Aggregators\" %}\n-to compute per-iteration statistics and base the termination of iterations on such statistics.\n+\u5173\u4e8e\u7d2f\u52a0\u5668\u548c\u8fed\u4ee3\u7684\u6ce8\u610f\u4e8b\u9879\uff1a\u5f53\u524d\u7d2f\u52a0\u5668\u7684\u7ed3\u679c\u53ea\u6709\u5728\u6574\u4e2a\u4f5c\u4e1a\u7ed3\u675f\u540e\u624d\u53ef\u7528\u3002\u6211\u4eec\u8fd8\u8ba1\u5212\u5728\u4e0b\u4e00\u6b21\u8fed\u4ee3\u4e2d\u63d0\u4f9b\u4e0a\u4e00\u6b21\u7684\u8fed\u4ee3\u7ed3\u679c\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\n+{% gh_link /flink-java/src/main/java/org/apache/flink/api/java/operators/IterativeDataSet.java#L98 \"\u805a\u5408\u5668\" %}\n+\u6765\u8ba1\u7b97\u6bcf\u6b21\u8fed\u4ee3\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5e76\u57fa\u4e8e\u6b64\u7c7b\u7edf\u8ba1\u4fe1\u606f\u6765\u7ec8\u6b62\u8fed\u4ee3\u3002\n \n-__Custom accumulators:__\n+__\u5b9a\u5236\u7d2f\u52a0\u5668\uff1a__\n \n-To implement your own accumulator you simply have to write your implementation of the Accumulator\n-interface. Feel free to create a pull request if you think your custom accumulator should be shipped\n-with Flink.\n+\u8981\u5b9e\u73b0\u81ea\u5df1\u7684\u7d2f\u52a0\u5668\uff0c\u4f60\u53ea\u9700\u8981\u5b9e\u73b0\u7d2f\u52a0\u5668\u63a5\u53e3\u5373\u53ef\u3002\u5982\u679c\u4f60\u8ba4\u4e3a\u81ea\u5b9a\u4e49\u7d2f\u52a0\u5668\u5e94\u968f Flink \u4e00\u8d77\u63d0\u4f9b\uff0c\u8bf7\u5c3d\u7ba1\u521b\u5efa pull request\u3002\n \n-You have the choice to implement either\n+\u4f60\u53ef\u4ee5\u9009\u62e9\u5b9e\u73b0\n {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-or {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/SimpleAccumulator.java \"SimpleAccumulator\" %}.\n+\u6216 {% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/SimpleAccumulator.java \"SimpleAccumulator\" %}\u3002\n \n-```Accumulator<V,R>``` is most flexible: It defines a type ```V``` for the value to add, and a\n-result type ```R``` for the final result. E.g. for a histogram, ```V``` is a number and ```R``` is\n- a histogram. ```SimpleAccumulator``` is for the cases where both types are the same, e.g. for counters.\n+```Accumulator<V,R>``` \u6700\u7075\u6d3b: \u5b83\u7ed9\u9700\u8981\u6dfb\u52a0\u7684\u503c\u5b9a\u4e49\u4e86\u7c7b\u578b ```V```\uff0c\u5e76\u5b9a\u4e49\u4e86\u6700\u7ec8\u7684\u7ed3\u679c\u7c7b\u578b ```R```\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u76f4\u65b9\u56fe\uff0c```V``` \u662f\u4e00\u4e2a\u6570\u5b57\u4e14 ```R``` \u662f\u4e00\u4e2a\u76f4\u65b9\u56fe\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6141fa38f42a92fe10ca6b707813f0253ba5f3f"}, "originalPosition": 268}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTQxOTUwOnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTo0NzoxOVrOHRtfCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTo0NzoxOVrOHRtfCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMzMzA2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            (\u53c2\u9605 [\u7ed9 function \u4f20\u9012\u53c2\u6570]({% link dev/batch/index.zh.md %}#passing-parameters-to-functions))\uff0c\n          \n          \n            \n            \uff08\u53c2\u9605 [\u7ed9 function \u4f20\u9012\u53c2\u6570]({% link dev/batch/index.zh.md %}#passing-parameters-to-functions)\uff09\uff0c", "url": "https://github.com/apache/flink/pull/13225#discussion_r488333064", "createdAt": "2020-09-15T01:47:19Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,78 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684 function\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5bf9\u4e8e\u53c2\u6570\u5316 function\n+(\u53c2\u9605 [\u7ed9 function \u4f20\u9012\u53c2\u6570]({% link dev/batch/index.zh.md %}#passing-parameters-to-functions))\uff0c", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d52b2bde1c0a87d20aac1d7057f231b433d353e"}, "originalPosition": 160}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTQyMDE0OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTo0Nzo0MVrOHRtfZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTo0Nzo0MVrOHRtfZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMzMzE1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n          \n          \n            \n            \u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf\uff08\u53c2\u9605", "url": "https://github.com/apache/flink/pull/13225#discussion_r488333156", "createdAt": "2020-09-15T01:47:41Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,78 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684 function\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5bf9\u4e8e\u53c2\u6570\u5316 function\n+(\u53c2\u9605 [\u7ed9 function \u4f20\u9012\u53c2\u6570]({% link dev/batch/index.zh.md %}#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d52b2bde1c0a87d20aac1d7057f231b433d353e"}, "originalPosition": 161}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTQyMDc3OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTo0ODowMlrOHRtfyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTo0ODowMlrOHRtfyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMzMzI1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [\u5e7f\u64ad\u53d8\u91cf]({% link dev/batch/index.zh.md %}#broadcast-variables ))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n          \n          \n            \n            [\u5e7f\u64ad\u53d8\u91cf]({% link dev/batch/index.zh.md %}#broadcast-variables )\uff09\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668\uff08\u53c2\u9605", "url": "https://github.com/apache/flink/pull/13225#discussion_r488333259", "createdAt": "2020-09-15T01:48:02Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,78 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684 function\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5bf9\u4e8e\u53c2\u6570\u5316 function\n+(\u53c2\u9605 [\u7ed9 function \u4f20\u9012\u53c2\u6570]({% link dev/batch/index.zh.md %}#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({% link dev/batch/index.zh.md %}#broadcast-variables ))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d52b2bde1c0a87d20aac1d7057f231b433d353e"}, "originalPosition": 162}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTQyMjM3OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTo0OTowM1rOHRtg2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTo0OTowM1rOHRtg2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMzMzUzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            [\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#accumulators--counters))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({% link dev/batch/iterations.zh.md %}))\n          \n          \n            \n            [\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#accumulators--counters)\uff09\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f\uff08\u53c2\u9605 [\u8fed\u4ee3\u5668]({% link dev/batch/iterations.zh.md %})\uff09", "url": "https://github.com/apache/flink/pull/13225#discussion_r488333530", "createdAt": "2020-09-15T01:49:03Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,78 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684 function\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5bf9\u4e8e\u53c2\u6570\u5316 function\n+(\u53c2\u9605 [\u7ed9 function \u4f20\u9012\u53c2\u6570]({% link dev/batch/index.zh.md %}#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({% link dev/batch/index.zh.md %}#broadcast-variables ))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#accumulators--counters))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({% link dev/batch/iterations.zh.md %}))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d52b2bde1c0a87d20aac1d7057f231b433d353e"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTQyNDU5OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTo1MDowMlrOHRtiGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMTo1MDowMlrOHRtiGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMzMzg1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ```Accumulator.add(V value)``` \u65b9\u6cd5\u5c06\u5176\u9012\u589e\u3002\u5728\u4f5c\u4e1a\u7ed3\u675f\u65f6\uff0cFlink \u4f1a\u6c47\u603b(\u5408\u5e76)\u6240\u6709\u90e8\u5206\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002\n          \n          \n            \n            ```Accumulator.add(V value)``` \u65b9\u6cd5\u5c06\u5176\u9012\u589e\u3002\u5728\u4f5c\u4e1a\u7ed3\u675f\u65f6\uff0cFlink \u4f1a\u6c47\u603b\uff08\u5408\u5e76\uff09\u6240\u6709\u90e8\u5206\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002", "url": "https://github.com/apache/flink/pull/13225#discussion_r488333851", "createdAt": "2020-09-15T01:50:02Z", "author": {"login": "RocMarshal"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,78 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684 function\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5bf9\u4e8e\u53c2\u6570\u5316 function\n+(\u53c2\u9605 [\u7ed9 function \u4f20\u9012\u53c2\u6570]({% link dev/batch/index.zh.md %}#passing-parameters-to-functions))\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf(\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({% link dev/batch/index.zh.md %}#broadcast-variables ))\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668(\u53c2\u9605\n+[\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668](#accumulators--counters))\uff0c\u4ee5\u53ca\u8fed\u4ee3\u5668\u7684\u76f8\u5173\u4fe1\u606f(\u53c2\u9605 [\u8fed\u4ee3\u5668]({% link dev/batch/iterations.zh.md %}))\n+\u6709\u5f88\u5927\u4f5c\u7528\u3002\n \n {% top %}\n \n-## Accumulators & Counters\n+<a name=\"accumulators--counters\"></a>\n \n-Accumulators are simple constructs with an **add operation** and a **final accumulated result**,\n-which is available after the job ended.\n+## \u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668\n \n-The most straightforward accumulator is a **counter**: You can increment it using the\n-```Accumulator.add(V value)``` method. At the end of the job Flink will sum up (merge) all partial\n-results and send the result to the client. Accumulators are useful during debugging or if you\n-quickly want to find out more about your data.\n+\u7d2f\u52a0\u5668\u662f\u5177\u6709**\u52a0\u6cd5\u8fd0\u7b97**\u548c**\u6700\u7ec8\u7d2f\u52a0\u7ed3\u679c**\u7684\u4e00\u79cd\u7b80\u5355\u7ed3\u6784\uff0c\u53ef\u5728\u4f5c\u4e1a\u7ed3\u675f\u540e\u4f7f\u7528\u3002\n \n-Flink currently has the following **built-in accumulators**. Each of them implements the\n-{% gh_link /flink-core/src/main/java/org/apache/flink/api/common/accumulators/Accumulator.java \"Accumulator\" %}\n-interface.\n+\u6700\u7b80\u5355\u7684\u7d2f\u52a0\u5668\u5c31\u662f**\u8ba1\u6570\u5668**: \u4f60\u53ef\u4ee5\u4f7f\u7528\n+```Accumulator.add(V value)``` \u65b9\u6cd5\u5c06\u5176\u9012\u589e\u3002\u5728\u4f5c\u4e1a\u7ed3\u675f\u65f6\uff0cFlink \u4f1a\u6c47\u603b(\u5408\u5e76)\u6240\u6709\u90e8\u5206\u7684\u7ed3\u679c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d52b2bde1c0a87d20aac1d7057f231b433d353e"}, "originalPosition": 185}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTc3MTg4OnYy", "diffSide": "RIGHT", "path": "docs/dev/user_defined_functions.zh.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo0NDoyNlrOHTSQEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo0NDoyNlrOHTSQEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4NDAxNg==", "bodyText": "@zhuxiaoshang @RocMarshal \u8fd9\u4e2a\u5730\u65b9\u7684\u94fe\u63a5\u6211\u6000\u7591\u662f\u6709\u95ee\u9898\u7684\uff0c\u6211\u770b\u4e86\u4e0b\uff0c\u8fd9\u4e2a\u5730\u65b9\u662f FLINK-17009 \u5f15\u5165\u7684\uff0c\u4f46\u662f\u6ca1\u6709\u627e\u5230\u66f4\u65e9\u7684\u5386\u53f2\u3002\n\u6000\u7591\u7684\u539f\u56e0\u662f\uff0c\u8fd9\u4e2a\u6587\u6863\u8bb2\u7684\u662f datastream \u7684 udfs\uff0c\u4f46\u662f\u8fd9\u91cc\u7684\u94fe\u63a5\u662f batch \u76f8\u5173\u7684\u3002\n\u4e0d\u8fc7\u8fd9\u4e2a\u548c\u6574\u4f53\u7684\u7ffb\u8bd1\u65e0\u5173\uff0c\u80fd\u5426\u8bb0\u5f55\u5e76\u67e5\u627e\u4e00\u4e0b\u8fd9\u4e2a\u5730\u65b9\u662f\u5426\u771f\u7684\u6709\u95ee\u9898\uff0c\u6b63\u786e\u7684\u94fe\u63a5\u5e94\u8be5\u662f\u4ec0\u4e48\uff1f\u5982\u679c\u6709\u95ee\u9898\u7684\u8bdd\uff0c\u53ef\u4ee5\u518d\u63d0\u4e00\u4e2a PR \u6765\u8fdb\u884c\u4fee\u6539", "url": "https://github.com/apache/flink/pull/13225#discussion_r489984016", "createdAt": "2020-09-17T05:44:26Z", "author": {"login": "klion26"}, "path": "docs/dev/user_defined_functions.zh.md", "diffHunk": "@@ -147,95 +153,78 @@ data.map (new RichMapFunction[String, Int] {\n \n </div>\n \n-Rich functions provide, in addition to the user-defined function (map,\n-reduce, etc), four methods: `open`, `close`, `getRuntimeContext`, and\n-`setRuntimeContext`. These are useful for parameterizing the function\n-(see [Passing Parameters to Functions]({{ site.baseurl }}/dev/batch/index.html#passing-parameters-to-functions)),\n-creating and finalizing local state, accessing broadcast variables (see\n-[Broadcast Variables]({{ site.baseurl }}/dev/batch/index.html#broadcast-variables)), and for accessing runtime\n-information such as accumulators and counters (see\n-[Accumulators and Counters](#accumulators--counters)), and information\n-on iterations (see [Iterations]({{ site.baseurl }}/dev/batch/iterations.html)).\n+\u9664\u4e86\u7528\u6237\u81ea\u5b9a\u4e49\u7684 function\uff08map\uff0creduce \u7b49\uff09\uff0cRich functions \u8fd8\u63d0\u4f9b\u4e86\u56db\u4e2a\u65b9\u6cd5\uff1a`open`\u3001`close`\u3001`getRuntimeContext` \u548c\n+`setRuntimeContext`\u3002\u8fd9\u4e9b\u65b9\u6cd5\u5bf9\u4e8e\u53c2\u6570\u5316 function\n+\uff08\u53c2\u9605 [\u7ed9 function \u4f20\u9012\u53c2\u6570]({% link dev/batch/index.zh.md %}#passing-parameters-to-functions)\uff09\uff0c\n+\u521b\u5efa\u548c\u6700\u7ec8\u786e\u5b9a\u672c\u5730\u72b6\u6001\uff0c\u8bbf\u95ee\u5e7f\u64ad\u53d8\u91cf\uff08\u53c2\u9605\n+[\u5e7f\u64ad\u53d8\u91cf]({% link dev/batch/index.zh.md %}#broadcast-variables )\uff09\uff0c\u4ee5\u53ca\u8bbf\u95ee\u8fd0\u884c\u65f6\u4fe1\u606f\uff0c\u4f8b\u5982\u7d2f\u52a0\u5668\u548c\u8ba1\u6570\u5668\uff08\u53c2\u9605", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "313c6760e7d491540ab8d782b87ee2c637d9b5ab"}, "originalPosition": 162}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 511, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}