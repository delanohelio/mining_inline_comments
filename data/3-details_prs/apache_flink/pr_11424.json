{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NjA2NzQw", "number": 11424, "title": "[FLINK-16345][table-planner-blink] Fix computed column can not refer row time attribute column", "bodyText": "What is the purpose of the change\nIf a computed column refers a rowtime column (the column has been defined watermark), a query on the table will be failed with the following exception:\n[ERROR] Could not execute SQL statement. Reason:\n java.lang.AssertionError: Conversion to relational algebra failed to preserve datatypes:\n validated type:\n RecordType(VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" order_id, TIME ATTRIBUTE(ROWTIME) order_time, DOUBLE amount, DOUBLE amount_kg, TIMESTAMP(3) ts) NOT NULL\n converted type:\n RecordType(VARCHAR(2147483647) CHARACTER SET \"UTF-16LE\" order_id, TIME ATTRIBUTE(ROWTIME) order_time, DOUBLE amount, DOUBLE amount_kg, TIME ATTRIBUTE(ROWTIME) ts) NOT NULL\n rel:\n LogicalProject(order_id=[$0], order_time=[$1], amount=[$2], amount_kg=[$3], ts=[$4])\n LogicalWatermarkAssigner(rowtime=[order_time], watermark=[$1])\n LogicalProject(order_id=[$0], order_time=[$1], amount=[$2], amount_kg=[*($2, 1000)], ts=[+($1, 28800000:INTERVAL HOUR)])\n LogicalTableScan(table=[[default_catalog, default_database, orders, source: [Kafka010TableSource(order_id, order_time, amount)]]])\n\nBrief change log\n\nerase time indicators before translate CatalogSourceTable into RelNodes in CatalogSourceTable#toRel.\n\nVerifying this change\n\nadded a unit plan test to reproduce this problem and verify the changes.\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-03-17T03:46:37Z", "url": "https://github.com/apache/flink/pull/11424", "merged": true, "mergeCommit": {"oid": "54395d9fcb3ab7b7ad6548e9003e24c24f9081c4"}, "closed": true, "closedAt": "2020-03-22T07:35:14Z", "author": {"login": "wuchong"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOaWOpAH2gAyMzg5NjA2NzQwOmE4OTFkODk3NTdmNzQzMmEwOTVkZTIwYzM2MWZhZWVlOThmMzFmZjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPrBXEgFqTM3ODg4MTI5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a891d89757f7432a095de20c361faeee98f31ff6", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/a891d89757f7432a095de20c361faeee98f31ff6", "committedDate": "2020-03-17T03:42:50Z", "message": "[FLINK-16345][table-planner-blink] Fix computed column can not refer row time attribute column"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NzQxODky", "url": "https://github.com/apache/flink/pull/11424#pullrequestreview-375741892", "createdAt": "2020-03-17T05:02:35Z", "commit": {"oid": "a891d89757f7432a095de20c361faeee98f31ff6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNTowMjozNVrOF3ODtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNTowMjozNVrOF3ODtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0NjMyNQ==", "bodyText": "I think the right place to fix is the SqlToOperationConverter#createTableSchema, before we make the computed column type inference, the time attribute should be patched up based on the watermark definitions.", "url": "https://github.com/apache/flink/pull/11424#discussion_r393446325", "createdAt": "2020-03-17T05:02:35Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/schema/CatalogSourceTable.scala", "diffHunk": "@@ -106,7 +111,7 @@ class CatalogSourceTable[T](\n     val toRexFactory = flinkContext.getSqlExprToRexConverterFactory\n \n     // 2. push computed column project\n-    val fieldNames = rowType.getFieldNames.asScala\n+    val fieldNames = erasedRowType.getFieldNames.asScala", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a891d89757f7432a095de20c361faeee98f31ff6"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODgxMjk0", "url": "https://github.com/apache/flink/pull/11424#pullrequestreview-378881294", "createdAt": "2020-03-21T01:42:21Z", "commit": {"oid": "a891d89757f7432a095de20c361faeee98f31ff6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2820, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}