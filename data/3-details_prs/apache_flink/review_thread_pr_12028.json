{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MDY1Njcx", "number": 12028, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNDoyNzowM1rOD_QivQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjozNzo1NlrOEBuZZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjU3OTE3OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/FlinkStreamRuleSets.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNDoyNzowM1rOGZ0a8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNDoyNzowM1rOGZ0a8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyNjQ1MQ==", "bodyText": "please give a more clear comment here", "url": "https://github.com/apache/flink/pull/12028#discussion_r429726451", "createdAt": "2020-05-25T04:27:03Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/FlinkStreamRuleSets.scala", "diffHunk": "@@ -109,6 +109,8 @@ object FlinkStreamRuleSets {\n       List(\n         //removes constant keys from an Agg\n         AggregateProjectPullUpConstantsRule.INSTANCE,\n+        //fix: FLINK-17553", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e51960bfa9933fc5515fde87896dbee100ef41f8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTIwMDQ1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/WindowAggregateITCase.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMzowODo1OVrOGaNUjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMzowODo1OVrOGaNUjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEzNDQxMg==", "bodyText": "nit: redundant empty line", "url": "https://github.com/apache/flink/pull/12028#discussion_r430134412", "createdAt": "2020-05-26T03:08:59Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/WindowAggregateITCase.scala", "diffHunk": "@@ -319,6 +319,49 @@ class WindowAggregateITCase(mode: StateBackendMode)\n     assertEquals(expected.sorted, sink.getRetractResults.sorted)\n   }\n \n+  // used to verify compile works normally when constants exists in group window key (FLINK-17553)\n+  @Test\n+  def testWindowAggregateOnConstantValue(): Unit = {\n+    val ddl1 =\n+      \"\"\"\n+        |CREATE TABLE src (\n+        |  log_ts STRING,\n+        |  ts TIMESTAMP(3),\n+        |  a INT,\n+        |  b DOUBLE,\n+        |  rowtime AS CAST(log_ts AS TIMESTAMP(3)),\n+        |  WATERMARK FOR rowtime AS rowtime - INTERVAL '0.001' SECOND\n+        |) WITH (\n+        |  'connector' = 'COLLECTION',\n+        |  'is-bounded' = 'false'\n+        |)\n+      \"\"\".stripMargin\n+    val ddl2 =\n+      \"\"\"\n+        |CREATE TABLE dst (\n+        |  ts TIMESTAMP(3),\n+        |  a BIGINT,\n+        |  b DOUBLE\n+        |) WITH (\n+        |  'connector.type' = 'filesystem',\n+        |  'connector.path' = '/tmp/1',\n+        |  'format.type' = 'csv'\n+        |)\n+      \"\"\".stripMargin\n+    val query =\n+      \"\"\"\n+        |INSERT INTO dst\n+        |SELECT TUMBLE_END(rowtime, INTERVAL '0.003' SECOND), COUNT(ts), SUM(b)\n+        |FROM src\n+        | GROUP BY 'a', TUMBLE(rowtime, INTERVAL '0.003' SECOND)\n+      \"\"\".stripMargin\n+    tEnv.sqlUpdate(ddl1)\n+    tEnv.sqlUpdate(ddl2)\n+    tEnv.sqlUpdate(query)\n+    tEnv.explain(true)\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ffb28916f4d997ff9294f2df87389c79a7d1951"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTIxNjY5OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/FlinkStreamRuleSets.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMzoyMjoxNVrOGaNeow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMzoyMjoxNVrOGaNeow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEzNjk5NQ==", "bodyText": "add the following sentence: this rule will merge the project generated by AggregateProjectPullUpConstantsRule and make sure window aggregate can be correctly rewritten by StreamLogicalWindowAggregateRule", "url": "https://github.com/apache/flink/pull/12028#discussion_r430136995", "createdAt": "2020-05-26T03:22:15Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/FlinkStreamRuleSets.scala", "diffHunk": "@@ -109,6 +109,8 @@ object FlinkStreamRuleSets {\n       List(\n         //removes constant keys from an Agg\n         AggregateProjectPullUpConstantsRule.INSTANCE,\n+        //fix: FLINK-17553 unsupported call error when constant exists in group window key\n+        ProjectMergeRule.INSTANCE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ffb28916f4d997ff9294f2df87389c79a7d1951"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMjQ0MTk3OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/WindowAggregateITCase.scala", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMjozNzo1NlrOGdvngg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzowODoyOVrOGfe9kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0MjA1MA==", "bodyText": "I think we should verify the result, otherwise, it doesn't need to be added to ITCase.", "url": "https://github.com/apache/flink/pull/12028#discussion_r433842050", "createdAt": "2020-06-02T12:37:56Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/WindowAggregateITCase.scala", "diffHunk": "@@ -319,6 +319,48 @@ class WindowAggregateITCase(mode: StateBackendMode)\n     assertEquals(expected.sorted, sink.getRetractResults.sorted)\n   }\n \n+  // used to verify compile works normally when constants exists in group window key (FLINK-17553)\n+  @Test\n+  def testWindowAggregateOnConstantValue(): Unit = {\n+    val ddl1 =\n+      \"\"\"\n+        |CREATE TABLE src (\n+        |  log_ts STRING,\n+        |  ts TIMESTAMP(3),\n+        |  a INT,\n+        |  b DOUBLE,\n+        |  rowtime AS CAST(log_ts AS TIMESTAMP(3)),\n+        |  WATERMARK FOR rowtime AS rowtime - INTERVAL '0.001' SECOND\n+        |) WITH (\n+        |  'connector' = 'COLLECTION',\n+        |  'is-bounded' = 'false'\n+        |)\n+      \"\"\".stripMargin\n+    val ddl2 =\n+      \"\"\"\n+        |CREATE TABLE dst (\n+        |  ts TIMESTAMP(3),\n+        |  a BIGINT,\n+        |  b DOUBLE\n+        |) WITH (\n+        |  'connector.type' = 'filesystem',\n+        |  'connector.path' = '/tmp/1',\n+        |  'format.type' = 'csv'\n+        |)\n+      \"\"\".stripMargin\n+    val query =\n+      \"\"\"\n+        |INSERT INTO dst\n+        |SELECT TUMBLE_END(rowtime, INTERVAL '0.003' SECOND), COUNT(ts), SUM(b)\n+        |FROM src\n+        | GROUP BY 'a', TUMBLE(rowtime, INTERVAL '0.003' SECOND)\n+      \"\"\".stripMargin\n+    tEnv.sqlUpdate(ddl1)\n+    tEnv.sqlUpdate(ddl2)\n+    tEnv.sqlUpdate(query)\n+    tEnv.explain(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86e04bf10b62c7dd52655fc8a20340c3c0ba4d38"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxNTIxMA==", "bodyText": "Agreed.  Thanks for you suggestion.\nHere I just want to verify that explain work normally instead of checking the result, but I don't find  a proper test file to place it. Which file would you suggest me to place?", "url": "https://github.com/apache/flink/pull/12028#discussion_r434415210", "createdAt": "2020-06-03T08:58:50Z", "author": {"login": "zjuwangg"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/WindowAggregateITCase.scala", "diffHunk": "@@ -319,6 +319,48 @@ class WindowAggregateITCase(mode: StateBackendMode)\n     assertEquals(expected.sorted, sink.getRetractResults.sorted)\n   }\n \n+  // used to verify compile works normally when constants exists in group window key (FLINK-17553)\n+  @Test\n+  def testWindowAggregateOnConstantValue(): Unit = {\n+    val ddl1 =\n+      \"\"\"\n+        |CREATE TABLE src (\n+        |  log_ts STRING,\n+        |  ts TIMESTAMP(3),\n+        |  a INT,\n+        |  b DOUBLE,\n+        |  rowtime AS CAST(log_ts AS TIMESTAMP(3)),\n+        |  WATERMARK FOR rowtime AS rowtime - INTERVAL '0.001' SECOND\n+        |) WITH (\n+        |  'connector' = 'COLLECTION',\n+        |  'is-bounded' = 'false'\n+        |)\n+      \"\"\".stripMargin\n+    val ddl2 =\n+      \"\"\"\n+        |CREATE TABLE dst (\n+        |  ts TIMESTAMP(3),\n+        |  a BIGINT,\n+        |  b DOUBLE\n+        |) WITH (\n+        |  'connector.type' = 'filesystem',\n+        |  'connector.path' = '/tmp/1',\n+        |  'format.type' = 'csv'\n+        |)\n+      \"\"\".stripMargin\n+    val query =\n+      \"\"\"\n+        |INSERT INTO dst\n+        |SELECT TUMBLE_END(rowtime, INTERVAL '0.003' SECOND), COUNT(ts), SUM(b)\n+        |FROM src\n+        | GROUP BY 'a', TUMBLE(rowtime, INTERVAL '0.003' SECOND)\n+      \"\"\".stripMargin\n+    tEnv.sqlUpdate(ddl1)\n+    tEnv.sqlUpdate(ddl2)\n+    tEnv.sqlUpdate(query)\n+    tEnv.explain(true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0MjA1MA=="}, "originalCommit": {"oid": "86e04bf10b62c7dd52655fc8a20340c3c0ba4d38"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxODM3Nw==", "bodyText": "I would suggest to verify the result. Because you already added a plan test.\nYou can use the following to verify the result.\nval sink = new TestingAppendSink\ntEnv.sqlQuery(sql).toAppendStream[Row].addSink(sink)\nenv.execute()", "url": "https://github.com/apache/flink/pull/12028#discussion_r434418377", "createdAt": "2020-06-03T09:03:51Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/WindowAggregateITCase.scala", "diffHunk": "@@ -319,6 +319,48 @@ class WindowAggregateITCase(mode: StateBackendMode)\n     assertEquals(expected.sorted, sink.getRetractResults.sorted)\n   }\n \n+  // used to verify compile works normally when constants exists in group window key (FLINK-17553)\n+  @Test\n+  def testWindowAggregateOnConstantValue(): Unit = {\n+    val ddl1 =\n+      \"\"\"\n+        |CREATE TABLE src (\n+        |  log_ts STRING,\n+        |  ts TIMESTAMP(3),\n+        |  a INT,\n+        |  b DOUBLE,\n+        |  rowtime AS CAST(log_ts AS TIMESTAMP(3)),\n+        |  WATERMARK FOR rowtime AS rowtime - INTERVAL '0.001' SECOND\n+        |) WITH (\n+        |  'connector' = 'COLLECTION',\n+        |  'is-bounded' = 'false'\n+        |)\n+      \"\"\".stripMargin\n+    val ddl2 =\n+      \"\"\"\n+        |CREATE TABLE dst (\n+        |  ts TIMESTAMP(3),\n+        |  a BIGINT,\n+        |  b DOUBLE\n+        |) WITH (\n+        |  'connector.type' = 'filesystem',\n+        |  'connector.path' = '/tmp/1',\n+        |  'format.type' = 'csv'\n+        |)\n+      \"\"\".stripMargin\n+    val query =\n+      \"\"\"\n+        |INSERT INTO dst\n+        |SELECT TUMBLE_END(rowtime, INTERVAL '0.003' SECOND), COUNT(ts), SUM(b)\n+        |FROM src\n+        | GROUP BY 'a', TUMBLE(rowtime, INTERVAL '0.003' SECOND)\n+      \"\"\".stripMargin\n+    tEnv.sqlUpdate(ddl1)\n+    tEnv.sqlUpdate(ddl2)\n+    tEnv.sqlUpdate(query)\n+    tEnv.explain(true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0MjA1MA=="}, "originalCommit": {"oid": "86e04bf10b62c7dd52655fc8a20340c3c0ba4d38"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2NjMyMQ==", "bodyText": "I got your meaning.", "url": "https://github.com/apache/flink/pull/12028#discussion_r435666321", "createdAt": "2020-06-05T03:08:29Z", "author": {"login": "zjuwangg"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/WindowAggregateITCase.scala", "diffHunk": "@@ -319,6 +319,48 @@ class WindowAggregateITCase(mode: StateBackendMode)\n     assertEquals(expected.sorted, sink.getRetractResults.sorted)\n   }\n \n+  // used to verify compile works normally when constants exists in group window key (FLINK-17553)\n+  @Test\n+  def testWindowAggregateOnConstantValue(): Unit = {\n+    val ddl1 =\n+      \"\"\"\n+        |CREATE TABLE src (\n+        |  log_ts STRING,\n+        |  ts TIMESTAMP(3),\n+        |  a INT,\n+        |  b DOUBLE,\n+        |  rowtime AS CAST(log_ts AS TIMESTAMP(3)),\n+        |  WATERMARK FOR rowtime AS rowtime - INTERVAL '0.001' SECOND\n+        |) WITH (\n+        |  'connector' = 'COLLECTION',\n+        |  'is-bounded' = 'false'\n+        |)\n+      \"\"\".stripMargin\n+    val ddl2 =\n+      \"\"\"\n+        |CREATE TABLE dst (\n+        |  ts TIMESTAMP(3),\n+        |  a BIGINT,\n+        |  b DOUBLE\n+        |) WITH (\n+        |  'connector.type' = 'filesystem',\n+        |  'connector.path' = '/tmp/1',\n+        |  'format.type' = 'csv'\n+        |)\n+      \"\"\".stripMargin\n+    val query =\n+      \"\"\"\n+        |INSERT INTO dst\n+        |SELECT TUMBLE_END(rowtime, INTERVAL '0.003' SECOND), COUNT(ts), SUM(b)\n+        |FROM src\n+        | GROUP BY 'a', TUMBLE(rowtime, INTERVAL '0.003' SECOND)\n+      \"\"\".stripMargin\n+    tEnv.sqlUpdate(ddl1)\n+    tEnv.sqlUpdate(ddl2)\n+    tEnv.sqlUpdate(query)\n+    tEnv.explain(true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0MjA1MA=="}, "originalCommit": {"oid": "86e04bf10b62c7dd52655fc8a20340c3c0ba4d38"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1540, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}