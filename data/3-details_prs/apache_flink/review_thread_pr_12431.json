{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2Mzc2NzQy", "number": 12431, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwOTo1Njo1MlrOEBrTNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzozNzozOVrOEB_Tzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTkzNDYzOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwOTo1Njo1MlrOGdqmfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNTozNDowNFrOGeMpeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc1OTg3MA==", "bodyText": "we can use try(resources) to avoid call finally here?", "url": "https://github.com/apache/flink/pull/12431#discussion_r433759870", "createdAt": "2020-06-02T09:56:52Z", "author": {"login": "leonardBang"}, "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java", "diffHunk": "@@ -166,6 +167,64 @@ public void write(int b) throws IOException {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testUseCatalog() throws Exception {\n+\t\tTestingExecutor executor = new TestingExecutorBuilder()\n+\t\t\t\t.setUseCatalogConsumer((ignored1, catalogName) -> {\n+\t\t\t\t\tif (!catalogName.equals(\"cat\")) {\n+\t\t\t\t\t\tthrow new SqlExecutionException(\"unexpected catalog name: \" + catalogName);\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.build();\n+\n+\t\tInputStream inputStream = new ByteArrayInputStream(\"use catalog cat;\\n\".getBytes());\n+\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream(256);\n+\t\tCliClient cliClient = null;\n+\t\tSessionContext sessionContext = new SessionContext(\"test-session\", new Environment());\n+\t\tString sessionId = executor.openSession(sessionContext);\n+\n+\t\ttry (Terminal terminal = new DumbTerminal(inputStream, outputStream)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMxNzY4OQ==", "bodyText": "CliClient does not inherit from AutoCloseable, so we can put CliClient into try-with-resource block", "url": "https://github.com/apache/flink/pull/12431#discussion_r434317689", "createdAt": "2020-06-03T05:34:04Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java", "diffHunk": "@@ -166,6 +167,64 @@ public void write(int b) throws IOException {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testUseCatalog() throws Exception {\n+\t\tTestingExecutor executor = new TestingExecutorBuilder()\n+\t\t\t\t.setUseCatalogConsumer((ignored1, catalogName) -> {\n+\t\t\t\t\tif (!catalogName.equals(\"cat\")) {\n+\t\t\t\t\t\tthrow new SqlExecutionException(\"unexpected catalog name: \" + catalogName);\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.build();\n+\n+\t\tInputStream inputStream = new ByteArrayInputStream(\"use catalog cat;\\n\".getBytes());\n+\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream(256);\n+\t\tCliClient cliClient = null;\n+\t\tSessionContext sessionContext = new SessionContext(\"test-session\", new Environment());\n+\t\tString sessionId = executor.openSession(sessionContext);\n+\n+\t\ttry (Terminal terminal = new DumbTerminal(inputStream, outputStream)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc1OTg3MA=="}, "originalCommit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTk0ODAyOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMDowMDo0NVrOGdqu_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMDowMDo0NVrOGdqu_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc2MjA0Nw==", "bodyText": "Could we extract this code to a function for reuse purpose?", "url": "https://github.com/apache/flink/pull/12431#discussion_r433762047", "createdAt": "2020-06-02T10:00:45Z", "author": {"login": "leonardBang"}, "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java", "diffHunk": "@@ -166,6 +167,64 @@ public void write(int b) throws IOException {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testUseCatalog() throws Exception {\n+\t\tTestingExecutor executor = new TestingExecutorBuilder()\n+\t\t\t\t.setUseCatalogConsumer((ignored1, catalogName) -> {\n+\t\t\t\t\tif (!catalogName.equals(\"cat\")) {\n+\t\t\t\t\t\tthrow new SqlExecutionException(\"unexpected catalog name: \" + catalogName);\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.build();\n+\n+\t\tInputStream inputStream = new ByteArrayInputStream(\"use catalog cat;\\n\".getBytes());\n+\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream(256);\n+\t\tCliClient cliClient = null;\n+\t\tSessionContext sessionContext = new SessionContext(\"test-session\", new Environment());\n+\t\tString sessionId = executor.openSession(sessionContext);\n+\n+\t\ttry (Terminal terminal = new DumbTerminal(inputStream, outputStream)) {\n+\t\t\tcliClient = new CliClient(terminal, sessionId, executor, File.createTempFile(\"history\", \"tmp\").toPath());\n+\t\t\tcliClient.open();\n+\t\t\tassertThat(executor.getNumUseCatalogCalls(), is(1));\n+\t\t\tString output = new String(outputStream.toByteArray());\n+\t\t\tassertFalse(output.contains(\"unexpected catalog name\"));\n+\t\t} finally {\n+\t\t\tif (cliClient != null) {\n+\t\t\t\tcliClient.close();\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Test\n+\tpublic void testUseDatabase() throws Exception {\n+\t\tTestingExecutor executor = new TestingExecutorBuilder()\n+\t\t\t\t.setUseDatabaseConsumer((ignored1, databaseName) -> {\n+\t\t\t\t\tif (!databaseName.equals(\"db\")) {\n+\t\t\t\t\t\tthrow new SqlExecutionException(\"unexpected database name: \" + databaseName);\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.build();\n+\n+\t\tInputStream inputStream = new ByteArrayInputStream(\"use db;\\n\".getBytes());\n+\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream(256);\n+\t\tCliClient cliClient = null;\n+\t\tSessionContext sessionContext = new SessionContext(\"test-session\", new Environment());\n+\t\tString sessionId = executor.openSession(sessionContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTIxMjUzOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/SqlCommandParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzozNzoyM1rOGeK8dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNTo0Njo1OVrOGeM3-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4OTc4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\toperands = new String[] { ((UseCatalogOperation) operation).getCatalogName() };\n          \n          \n            \n            \t\t\toperands = new String[]{StringUtils.strip(((UseCatalogOperation) operation).getCatalogName(), \"`\")};", "url": "https://github.com/apache/flink/pull/12431#discussion_r434289783", "createdAt": "2020-06-03T03:37:23Z", "author": {"login": "jxeditor"}, "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/SqlCommandParser.java", "diffHunk": "@@ -132,11 +132,10 @@ private SqlCommandParser() {\n \t\t\tcmd = SqlCommand.DROP_CATALOG;\n \t\t} else if (operation instanceof UseCatalogOperation) {\n \t\t\tcmd = SqlCommand.USE_CATALOG;\n-\t\t\toperands = new String[] { String.format(\"`%s`\", ((UseCatalogOperation) operation).getCatalogName()) };\n+\t\t\toperands = new String[] { ((UseCatalogOperation) operation).getCatalogName() };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMTQwMg==", "bodyText": "The quoting string (\"`\")  is skipped by sql parser, so we need not to handle this. see the test (TestItem.validSql(\"use `default`;\", SqlCommand.USE, \"default\")) in SqlCommandParserTest#testCommands", "url": "https://github.com/apache/flink/pull/12431#discussion_r434321402", "createdAt": "2020-06-03T05:46:59Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/SqlCommandParser.java", "diffHunk": "@@ -132,11 +132,10 @@ private SqlCommandParser() {\n \t\t\tcmd = SqlCommand.DROP_CATALOG;\n \t\t} else if (operation instanceof UseCatalogOperation) {\n \t\t\tcmd = SqlCommand.USE_CATALOG;\n-\t\t\toperands = new String[] { String.format(\"`%s`\", ((UseCatalogOperation) operation).getCatalogName()) };\n+\t\t\toperands = new String[] { ((UseCatalogOperation) operation).getCatalogName() };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4OTc4Mw=="}, "originalCommit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTIxMjk1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/SqlCommandParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzozNzozOVrOGeK8uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNTo1MTowMlrOGeM8YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4OTg0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\toperands = new String[] { ((UseDatabaseOperation) operation).getDatabaseName() };\n          \n          \n            \n            \t\t\toperands = new String[]{String.format(\"%s.%s\", StringUtils.strip(op.getCatalogName(), \"`\"), StringUtils.strip(op.getDatabaseName(), \"`\"))};", "url": "https://github.com/apache/flink/pull/12431#discussion_r434289848", "createdAt": "2020-06-03T03:37:39Z", "author": {"login": "jxeditor"}, "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/SqlCommandParser.java", "diffHunk": "@@ -132,11 +132,10 @@ private SqlCommandParser() {\n \t\t\tcmd = SqlCommand.DROP_CATALOG;\n \t\t} else if (operation instanceof UseCatalogOperation) {\n \t\t\tcmd = SqlCommand.USE_CATALOG;\n-\t\t\toperands = new String[] { String.format(\"`%s`\", ((UseCatalogOperation) operation).getCatalogName()) };\n+\t\t\toperands = new String[] { ((UseCatalogOperation) operation).getCatalogName() };\n \t\t} else if (operation instanceof UseDatabaseOperation) {\n \t\t\tcmd = SqlCommand.USE;\n-\t\t\tUseDatabaseOperation op = ((UseDatabaseOperation) operation);\n-\t\t\toperands = new String[] { String.format(\"`%s`.`%s`\", op.getCatalogName(), op.getDatabaseName()) };\n+\t\t\toperands = new String[] { ((UseDatabaseOperation) operation).getDatabaseName() };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMjUyOQ==", "bodyText": "catalog name is unnecessary, only database is needed.", "url": "https://github.com/apache/flink/pull/12431#discussion_r434322529", "createdAt": "2020-06-03T05:51:02Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/SqlCommandParser.java", "diffHunk": "@@ -132,11 +132,10 @@ private SqlCommandParser() {\n \t\t\tcmd = SqlCommand.DROP_CATALOG;\n \t\t} else if (operation instanceof UseCatalogOperation) {\n \t\t\tcmd = SqlCommand.USE_CATALOG;\n-\t\t\toperands = new String[] { String.format(\"`%s`\", ((UseCatalogOperation) operation).getCatalogName()) };\n+\t\t\toperands = new String[] { ((UseCatalogOperation) operation).getCatalogName() };\n \t\t} else if (operation instanceof UseDatabaseOperation) {\n \t\t\tcmd = SqlCommand.USE;\n-\t\t\tUseDatabaseOperation op = ((UseDatabaseOperation) operation);\n-\t\t\toperands = new String[] { String.format(\"`%s`.`%s`\", op.getCatalogName(), op.getDatabaseName()) };\n+\t\t\toperands = new String[] { ((UseDatabaseOperation) operation).getDatabaseName() };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4OTg0OA=="}, "originalCommit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4408, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}