{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODg3MzM1", "number": 11701, "title": "[FLINK-17084][table] Implement input type inference and output type strategy for ARRAY/ROW/MAP built-in functions", "bodyText": "What is the purpose of the change\nThe type strategies are implemented using the new type stack. It also\nremoves those three planner expressions from the Blink planner as they\nare no longer needed. Equivalent expressions in flink planner are not\nyet removed as they are needed for converting to RexNodes.\nIt disables the FunctionDefinitionConvertRule for built-in functions as\nthe BridgingSqlFunction call generator supports only user defined functions so far.\nVerifying this change\nAdded tests in InputTypeStrategiesTest and TypeStrategiesTest\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-04-10T12:19:33Z", "url": "https://github.com/apache/flink/pull/11701", "merged": true, "mergeCommit": {"oid": "6acd6461bd0c796708313804d076b881f2687046"}, "closed": true, "closedAt": "2020-04-15T16:59:14Z", "author": {"login": "dawidwys"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWih-hABqjMyMjM4ODQzMTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX5aS3gFqTM5Mzg2MDQ2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fc458531d4d278202fd0511940335e2f5c970ba2", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/fc458531d4d278202fd0511940335e2f5c970ba2", "committedDate": "2020-04-10T12:15:23Z", "message": "[FLINK-17084][table] Implement input type inference and output type\nstrategy for ARRAY/ROW/MAP built-in functions\n\nThe type strategies are implemented using the new type stack. It also\nremoves those three planner expressions from the Blink planner as they\nare no longer needed. Equivalent expressions in flink planner are not\nyet removed as they are needed for converting to RexNodes.\n\nIt disables the FunctionDefinitionConvertRule for built-in functions as\nthe BridgingSqlFunction call generator supports only user defined functions so far."}, "afterCommit": {"oid": "f33f22b970f36c08fceaecd72b460e0cbfe57396", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/f33f22b970f36c08fceaecd72b460e0cbfe57396", "committedDate": "2020-04-11T09:46:04Z", "message": "[FLINK-17084][table] Implement input type inference and output type\nstrategy for ARRAY/ROW/MAP built-in functions\n\nThe type strategies are implemented using the new type stack. It also\nremoves those three planner expressions from the Blink planner as they\nare no longer needed. Equivalent expressions in flink planner are not\nyet removed as they are needed for converting to RexNodes.\n\nIt disables the FunctionDefinitionConvertRule for built-in functions as\nthe BridgingSqlFunction call generator supports only user defined functions so far."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c9aef020fbcc810e5a0cea33731a5b5134f8bea", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/4c9aef020fbcc810e5a0cea33731a5b5134f8bea", "committedDate": "2020-04-11T10:19:30Z", "message": "[FLINK-17084][table] Implement input type inference and output type\nstrategy for ARRAY/ROW/MAP built-in functions\n\nThe type strategies are implemented using the new type stack. It also\nremoves those three planner expressions from the Blink planner as they\nare no longer needed. Equivalent expressions in flink planner are not\nyet removed as they are needed for converting to RexNodes.\n\nIt disables the FunctionDefinitionConvertRule for built-in functions as\nthe BridgingSqlFunction call generator supports only user defined functions so far."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f33f22b970f36c08fceaecd72b460e0cbfe57396", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/f33f22b970f36c08fceaecd72b460e0cbfe57396", "committedDate": "2020-04-11T09:46:04Z", "message": "[FLINK-17084][table] Implement input type inference and output type\nstrategy for ARRAY/ROW/MAP built-in functions\n\nThe type strategies are implemented using the new type stack. It also\nremoves those three planner expressions from the Blink planner as they\nare no longer needed. Equivalent expressions in flink planner are not\nyet removed as they are needed for converting to RexNodes.\n\nIt disables the FunctionDefinitionConvertRule for built-in functions as\nthe BridgingSqlFunction call generator supports only user defined functions so far."}, "afterCommit": {"oid": "4c9aef020fbcc810e5a0cea33731a5b5134f8bea", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/4c9aef020fbcc810e5a0cea33731a5b5134f8bea", "committedDate": "2020-04-11T10:19:30Z", "message": "[FLINK-17084][table] Implement input type inference and output type\nstrategy for ARRAY/ROW/MAP built-in functions\n\nThe type strategies are implemented using the new type stack. It also\nremoves those three planner expressions from the Blink planner as they\nare no longer needed. Equivalent expressions in flink planner are not\nyet removed as they are needed for converting to RexNodes.\n\nIt disables the FunctionDefinitionConvertRule for built-in functions as\nthe BridgingSqlFunction call generator supports only user defined functions so far."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyOTc3Njky", "url": "https://github.com/apache/flink/pull/11701#pullrequestreview-392977692", "createdAt": "2020-04-14T14:23:10Z", "commit": {"oid": "4c9aef020fbcc810e5a0cea33731a5b5134f8bea"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDoyMzoxMFrOGFRINQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToxOToxNVrOGFT3jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE3NjY5Mw==", "bodyText": "nit: remove <", "url": "https://github.com/apache/flink/pull/11701#discussion_r408176693", "createdAt": "2020-04-14T14:23:10Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-api-java/src/test/java/org/apache/flink/table/utils/FunctionLookupMock.java", "diffHunk": "@@ -59,6 +57,11 @@\n  *      <li>BuiltinFunctionDefinitions.FLATTEN</li>\n  * </ul>\n  *\n+ * <p>Built-in functions that use the Flink's type inference stack:\n+ * <ul>\n+ *     <li>BuiltinFunctionDefinitions.ROW<</li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c9aef020fbcc810e5a0cea33731a5b5134f8bea"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwNDc3MA==", "bodyText": "nit: on one hand it is nice to hide this but on the other hand it spams the current package and org.apache.flink.table.types.inference.strategies should be the right location.", "url": "https://github.com/apache/flink/pull/11701#discussion_r408204770", "createdAt": "2020-04-14T14:58:00Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/types/inference/MapInputTypeStrategy.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.types.inference;\n+\n+import org.apache.flink.annotation.Internal;\n+import org.apache.flink.table.functions.FunctionDefinition;\n+import org.apache.flink.table.types.DataType;\n+import org.apache.flink.table.types.logical.LogicalType;\n+import org.apache.flink.table.types.logical.utils.LogicalTypeGeneralization;\n+import org.apache.flink.table.types.utils.TypeConversions;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import java.util.stream.IntStream;\n+\n+/**\n+ * {@link InputTypeStrategy} specific for {@link org.apache.flink.table.functions.BuiltInFunctionDefinitions#MAP}.\n+ *\n+ * <p>It expects at least two arguments. There must be even number of arguments.\n+ * All the keys and values must have a common super type respectively.\n+ */\n+@Internal\n+class MapInputTypeStrategy implements InputTypeStrategy {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c9aef020fbcc810e5a0cea33731a5b5134f8bea"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwNzY1MA==", "bodyText": "nit: how about we just use the class name of input strategy by default", "url": "https://github.com/apache/flink/pull/11701#discussion_r408207650", "createdAt": "2020-04-14T15:01:15Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-common/src/test/java/org/apache/flink/table/types/inference/InputTypeStrategiesTest.java", "diffHunk": "@@ -553,5 +609,10 @@ TestSpec expectErrorMessage(String expectedErrorMessage) {\n \t\t\tthis.expectedErrorMessage = expectedErrorMessage;\n \t\t\treturn this;\n \t\t}\n+\n+\t\t@Override\n+\t\tpublic String toString() {\n+\t\t\treturn description != null ? description : \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c9aef020fbcc810e5a0cea33731a5b5134f8bea"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIyMDMyNg==", "bodyText": "Can we add a test to org.apache.flink.table.planner.expressions.ArrayTypeTest for this if it works now.", "url": "https://github.com/apache/flink/pull/11701#discussion_r408220326", "createdAt": "2020-04-14T15:17:38Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/expressions/validation/ArrayTypeValidationTest.scala", "diffHunk": "@@ -26,11 +26,6 @@ import org.junit.Test\n \n class ArrayTypeValidationTest extends ArrayTypeTestBase {\n \n-  @Test(expected = classOf[ValidationException])\n-  def testImplicitTypeCastTableApi(): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c9aef020fbcc810e5a0cea33731a5b5134f8bea"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIyMTU4Mw==", "bodyText": "Add a test to org.apache.flink.table.planner.expressions.MapTypeTest?", "url": "https://github.com/apache/flink/pull/11701#discussion_r408221583", "createdAt": "2020-04-14T15:19:15Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-planner/src/test/scala/org/apache/flink/table/expressions/validation/MapTypeValidationTest.scala", "diffHunk": "@@ -45,11 +45,6 @@ class MapTypeValidationTest extends MapTypeTestBase {\n     testAllApis(\"FAIL\", \"map()\", \"MAP[]\", \"FAIL\")\n   }\n \n-  @Test(expected = classOf[ValidationException])\n-  def testUnsupportedMapImplicitTypeCastTableApi(): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c9aef020fbcc810e5a0cea33731a5b5134f8bea"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc6ab1aed40227caf04b0984c870a006641ba9fc", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/fc6ab1aed40227caf04b0984c870a006641ba9fc", "committedDate": "2020-04-15T14:46:03Z", "message": "Comments addressed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97fc226b61fe3ad80f6bd0505334ff0fa43a4392", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/97fc226b61fe3ad80f6bd0505334ff0fa43a4392", "committedDate": "2020-04-14T16:24:40Z", "message": "Comments addressed"}, "afterCommit": {"oid": "fc6ab1aed40227caf04b0984c870a006641ba9fc", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/fc6ab1aed40227caf04b0984c870a006641ba9fc", "committedDate": "2020-04-15T14:46:03Z", "message": "Comments addressed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODYwNDYz", "url": "https://github.com/apache/flink/pull/11701#pullrequestreview-393860463", "createdAt": "2020-04-15T14:59:40Z", "commit": {"oid": "fc6ab1aed40227caf04b0984c870a006641ba9fc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2061, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}