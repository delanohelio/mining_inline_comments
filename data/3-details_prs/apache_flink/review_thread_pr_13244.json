{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNjI0NTA0", "number": 13244, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDoxMDoyNVrOEdPYDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDoxNjowNlrOEdPicA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDk2MDc2OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDoxMDoyNVrOHISMng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDoxMjowN1rOHISRqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0ODc5OA==", "bodyText": "log.warn?", "url": "https://github.com/apache/flink/pull/13244#discussion_r478448798", "createdAt": "2020-08-27T14:10:25Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "diffHunk": "@@ -60,27 +60,54 @@\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n \n \tprivate StreamTableEnvironment tEnv;\n+\tprivate DB db;\n \tprivate String dbUrl;\n \tprivate Connection connection;\n \n-\t@ClassRule\n-\tpublic static MariaDB4jRule db4jRule = new MariaDB4jRule(\n-\t\tDBConfigurationBuilder.newBuilder().build(),\n-\t\tDEFAULT_DB_NAME,\n-\t\tnull);\n-\n \t@Before\n-\tpublic void setUp() throws SQLException, ClassNotFoundException {\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n+\tpublic void setUp() throws SQLException, IllegalStateException {\n \t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tdbUrl = db4jRule.getURL();\n-\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\tprepareMariaDB();\n \t\tcreateMysqlTable();\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\ttEnv = StreamTableEnvironment.create(env);\n \t\tcreateFlinkTable();\n \t\tprepareData();\n \t}\n \n+\tprivate void prepareMariaDB() throws IllegalStateException {\n+\t\tboolean initDbSuccess = false;\n+\t\tint i = 0;\n+\t\t//retry\n+\t\twhile (i < 3) {\n+\t\t\ttry {\n+\t\t\t\tdb = DB.newEmbeddedDB(DBConfigurationBuilder.newBuilder().build());\n+\t\t\t\tdb.start();\n+\t\t\t\tdbUrl = db.getConfiguration().getURL(DEFAULT_DB_NAME);\n+\t\t\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\t\t\ttry (Statement statement = connection.createStatement()) {\n+\t\t\t\t\tstatement.execute(\"CREATE DATABASE IF NOT EXISTS `\" + DEFAULT_DB_NAME + \"`;\");\n+\t\t\t\t\tResultSet resultSet = statement.executeQuery(\"SELECT SCHEMA_NAME FROM \" +\n+\t\t\t\t\t\t\"INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = '\" + DEFAULT_DB_NAME + \"';\");\n+\t\t\t\t\tif (resultSet.next()) {\n+\t\t\t\t\t\tString dbName = resultSet.getString(1);\n+\t\t\t\t\t\tinitDbSuccess = DEFAULT_DB_NAME.equalsIgnoreCase(dbName);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tlog.info(\"Initialize DB fail caused by {}\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1MDA5MA==", "bodyText": "stop the DB to release potential resources if errors happen?", "url": "https://github.com/apache/flink/pull/13244#discussion_r478450090", "createdAt": "2020-08-27T14:12:07Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "diffHunk": "@@ -60,27 +60,54 @@\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n \n \tprivate StreamTableEnvironment tEnv;\n+\tprivate DB db;\n \tprivate String dbUrl;\n \tprivate Connection connection;\n \n-\t@ClassRule\n-\tpublic static MariaDB4jRule db4jRule = new MariaDB4jRule(\n-\t\tDBConfigurationBuilder.newBuilder().build(),\n-\t\tDEFAULT_DB_NAME,\n-\t\tnull);\n-\n \t@Before\n-\tpublic void setUp() throws SQLException, ClassNotFoundException {\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n+\tpublic void setUp() throws SQLException, IllegalStateException {\n \t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tdbUrl = db4jRule.getURL();\n-\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\tprepareMariaDB();\n \t\tcreateMysqlTable();\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\ttEnv = StreamTableEnvironment.create(env);\n \t\tcreateFlinkTable();\n \t\tprepareData();\n \t}\n \n+\tprivate void prepareMariaDB() throws IllegalStateException {\n+\t\tboolean initDbSuccess = false;\n+\t\tint i = 0;\n+\t\t//retry\n+\t\twhile (i < 3) {\n+\t\t\ttry {\n+\t\t\t\tdb = DB.newEmbeddedDB(DBConfigurationBuilder.newBuilder().build());\n+\t\t\t\tdb.start();\n+\t\t\t\tdbUrl = db.getConfiguration().getURL(DEFAULT_DB_NAME);\n+\t\t\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\t\t\ttry (Statement statement = connection.createStatement()) {\n+\t\t\t\t\tstatement.execute(\"CREATE DATABASE IF NOT EXISTS `\" + DEFAULT_DB_NAME + \"`;\");\n+\t\t\t\t\tResultSet resultSet = statement.executeQuery(\"SELECT SCHEMA_NAME FROM \" +\n+\t\t\t\t\t\t\"INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = '\" + DEFAULT_DB_NAME + \"';\");\n+\t\t\t\t\tif (resultSet.next()) {\n+\t\t\t\t\t\tString dbName = resultSet.getString(1);\n+\t\t\t\t\t\tinitDbSuccess = DEFAULT_DB_NAME.equalsIgnoreCase(dbName);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tlog.info(\"Initialize DB fail caused by {}\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0ODc5OA=="}, "originalCommit": {"oid": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDk4NTMzOnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDoxNTozM1rOHISbdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDoxNTozM1rOHISbdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1MjU5Nw==", "bodyText": "I would suggest to prepare DB in a @ClassBefore instead of @Before to avoid repeated initialization between tests.", "url": "https://github.com/apache/flink/pull/13244#discussion_r478452597", "createdAt": "2020-08-27T14:15:33Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "diffHunk": "@@ -60,27 +60,54 @@\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n \n \tprivate StreamTableEnvironment tEnv;\n+\tprivate DB db;\n \tprivate String dbUrl;\n \tprivate Connection connection;\n \n-\t@ClassRule\n-\tpublic static MariaDB4jRule db4jRule = new MariaDB4jRule(\n-\t\tDBConfigurationBuilder.newBuilder().build(),\n-\t\tDEFAULT_DB_NAME,\n-\t\tnull);\n-\n \t@Before\n-\tpublic void setUp() throws SQLException, ClassNotFoundException {\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n+\tpublic void setUp() throws SQLException, IllegalStateException {\n \t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tdbUrl = db4jRule.getURL();\n-\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\tprepareMariaDB();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDk4NzM2OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDoxNjowNlrOHISc4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDoxNjowNlrOHISc4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1Mjk2Mg==", "bodyText": "Please add more comments for why we add a retry here, we can also link the issue.", "url": "https://github.com/apache/flink/pull/13244#discussion_r478452962", "createdAt": "2020-08-27T14:16:06Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "diffHunk": "@@ -60,27 +60,54 @@\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n \n \tprivate StreamTableEnvironment tEnv;\n+\tprivate DB db;\n \tprivate String dbUrl;\n \tprivate Connection connection;\n \n-\t@ClassRule\n-\tpublic static MariaDB4jRule db4jRule = new MariaDB4jRule(\n-\t\tDBConfigurationBuilder.newBuilder().build(),\n-\t\tDEFAULT_DB_NAME,\n-\t\tnull);\n-\n \t@Before\n-\tpublic void setUp() throws SQLException, ClassNotFoundException {\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n+\tpublic void setUp() throws SQLException, IllegalStateException {\n \t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tdbUrl = db4jRule.getURL();\n-\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\tprepareMariaDB();\n \t\tcreateMysqlTable();\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\ttEnv = StreamTableEnvironment.create(env);\n \t\tcreateFlinkTable();\n \t\tprepareData();\n \t}\n \n+\tprivate void prepareMariaDB() throws IllegalStateException {\n+\t\tboolean initDbSuccess = false;\n+\t\tint i = 0;\n+\t\t//retry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 523, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}