{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwODE3NzY5", "number": 11240, "title": "[FLINK-16190][e2e] Migrate tests to FlinkResource", "bodyText": "Based on #11246.\nMigrates existing java e2e tests from the FlinkDistribution to the FlinkResource.\nTests should only work against the FlinkResource API; the distribution class is more of a low-level construct.\nSince the distribution exposed more functionality than the FlinkResource does we had to extend things slightly.\nFor mutating the distribution (like copying jars) a new FlinkResourceSetup class was introduced with which tests can define customization steps for a distribution.\nThe FlinkResource now also exposes a method for searching logs.\nThe existing FlinkResource#addConfiguration method has been removed as it is subsumed by the resource setup.", "createdAt": "2020-02-27T12:19:24Z", "url": "https://github.com/apache/flink/pull/11240", "merged": true, "mergeCommit": {"oid": "e3307b7dae60709acd90e388a64a35be5ecb9876"}, "closed": true, "closedAt": "2020-03-03T13:18:38Z", "author": {"login": "zentol"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIcagNABqjMwNzgxNDYxNzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKAC2JABqjMwOTE2Mjc3OTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eebaddaf40bfe8144fb96a9847a7d3f4cca09ca2", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/eebaddaf40bfe8144fb96a9847a7d3f4cca09ca2", "committedDate": "2020-02-27T14:38:06Z", "message": "[FLINK-16190][e2e] Move FlinkDistribution into flink package"}, "afterCommit": {"oid": "efe358ec8f76c5663073e76b324aaf54d4fe118f", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/efe358ec8f76c5663073e76b324aaf54d4fe118f", "committedDate": "2020-02-27T14:43:36Z", "message": "[FLINK-16190][e2e] Move FlinkDistribution into flink package"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NTI3MDI3", "url": "https://github.com/apache/flink/pull/11240#pullrequestreview-366527027", "createdAt": "2020-02-28T16:31:34Z", "commit": {"oid": "1bd966ab34a87027fe0446d0987542960fbec568"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNjozMTozNFrOFv7D_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNzozMjozOFrOFv9EFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5NTA2OQ==", "bodyText": "why is it not just FlinkResource.get()?\nalso in MetricsAvailabilityITCase", "url": "https://github.com/apache/flink/pull/11240#discussion_r385795069", "createdAt": "2020-02-28T16:31:34Z", "author": {"login": "azagrebin"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common-kafka/src/test/java/org/apache/flink/tests/util/kafka/SQLClientKafkaITCase.java", "diffHunk": "@@ -76,7 +77,9 @@\n \t}\n \n \t@Rule\n-\tpublic final FlinkResource flink = new LocalStandaloneFlinkResource();\n+\tpublic final FlinkResource flink = new LocalStandaloneFlinkResourceFactory()\n+\t\t.create(FlinkResourceSetup.builder().build())\n+\t\t.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd966ab34a87027fe0446d0987542960fbec568"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5NTczNw==", "bodyText": "I would put it before the constructor for code style", "url": "https://github.com/apache/flink/pull/11240#discussion_r385795737", "createdAt": "2020-02-28T16:32:56Z", "author": {"login": "azagrebin"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common-kafka/src/test/java/org/apache/flink/tests/util/kafka/StreamingKafkaITCase.java", "diffHunk": "@@ -68,20 +69,22 @@\n \tpublic final KafkaResource kafka;\n \n \t@Rule\n-\tpublic final FlinkResource flink = FlinkResource.get();\n+\tpublic final FlinkResource flink = FlinkResource.get(FlinkResourceSetup.builder().addConfiguration(getConfiguration()).build());\n \n \tpublic StreamingKafkaITCase(final String kafkaExampleJarPattern, final String kafkaVersion) {\n \t\tthis.kafkaExampleJar = TestUtils.getResourceJar(kafkaExampleJarPattern);\n \t\tthis.kafka = KafkaResource.get(kafkaVersion);\n \t}\n \n-\t@Test\n-\tpublic void testKafka() throws Exception {\n+\tprivate static Configuration getConfiguration() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd966ab34a87027fe0446d0987542960fbec568"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwMDU1Nw==", "bodyText": "is it already expected that there are other types/directions of jar moving?\nat this point, it looks that there is only one reasonable way to install things: opt -> lib", "url": "https://github.com/apache/flink/pull/11240#discussion_r385800557", "createdAt": "2020-02-28T16:41:26Z", "author": {"login": "azagrebin"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/FlinkDistribution.java", "diffHunk": "@@ -261,19 +263,33 @@ public void submitSQLJob(SQLJobSubmission job) throws IOException {\n \t\tAutoClosableProcess.runBlocking(commands.toArray(new String[0]));\n \t}\n \n-\tpublic void copyOptJarsToLib(String jarNamePrefix) throws FileNotFoundException, IOException {\n-\t\tfinal Optional<Path> reporterJarOptional;\n-\t\ttry (Stream<Path> logFiles = Files.walk(opt)) {\n-\t\t\treporterJarOptional = logFiles\n-\t\t\t\t.filter(path -> path.getFileName().toString().startsWith(jarNamePrefix))\n+\tpublic void moveJar(JarMove move) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd966ab34a87027fe0446d0987542960fbec568"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwMTM0Nw==", "bodyText": "a bit strange that only first match gets copied, if it is a prefix, as a user, I would naturally expect all matches to be copied", "url": "https://github.com/apache/flink/pull/11240#discussion_r385801347", "createdAt": "2020-02-28T16:42:48Z", "author": {"login": "azagrebin"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/FlinkDistribution.java", "diffHunk": "@@ -261,19 +263,33 @@ public void submitSQLJob(SQLJobSubmission job) throws IOException {\n \t\tAutoClosableProcess.runBlocking(commands.toArray(new String[0]));\n \t}\n \n-\tpublic void copyOptJarsToLib(String jarNamePrefix) throws FileNotFoundException, IOException {\n-\t\tfinal Optional<Path> reporterJarOptional;\n-\t\ttry (Stream<Path> logFiles = Files.walk(opt)) {\n-\t\t\treporterJarOptional = logFiles\n-\t\t\t\t.filter(path -> path.getFileName().toString().startsWith(jarNamePrefix))\n+\tpublic void moveJar(JarMove move) throws IOException {\n+\t\tfinal Path source = mapJarLocationToPath(move.getSource());\n+\t\tfinal Path target = mapJarLocationToPath(move.getTarget());\n+\n+\t\tfinal Optional<Path> jarOptional;\n+\t\ttry (Stream<Path> files = Files.walk(source)) {\n+\t\t\tjarOptional = files\n+\t\t\t\t.filter(path -> path.getFileName().toString().startsWith(move.getJarNamePrefix()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd966ab34a87027fe0446d0987542960fbec568"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwMTYwNQ==", "bodyText": "btw, it is actually a copy operation, not a move", "url": "https://github.com/apache/flink/pull/11240#discussion_r385801605", "createdAt": "2020-02-28T16:43:14Z", "author": {"login": "azagrebin"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/FlinkDistribution.java", "diffHunk": "@@ -261,19 +263,33 @@ public void submitSQLJob(SQLJobSubmission job) throws IOException {\n \t\tAutoClosableProcess.runBlocking(commands.toArray(new String[0]));\n \t}\n \n-\tpublic void copyOptJarsToLib(String jarNamePrefix) throws FileNotFoundException, IOException {\n-\t\tfinal Optional<Path> reporterJarOptional;\n-\t\ttry (Stream<Path> logFiles = Files.walk(opt)) {\n-\t\t\treporterJarOptional = logFiles\n-\t\t\t\t.filter(path -> path.getFileName().toString().startsWith(jarNamePrefix))\n+\tpublic void moveJar(JarMove move) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwMDU1Nw=="}, "originalCommit": {"oid": "1bd966ab34a87027fe0446d0987542960fbec568"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNTM4NA==", "bodyText": "at least @param to make it different from get()?", "url": "https://github.com/apache/flink/pull/11240#discussion_r385805384", "createdAt": "2020-02-28T16:49:57Z", "author": {"login": "azagrebin"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkResource.java", "diffHunk": "@@ -52,15 +46,34 @@\n \t */\n \tClusterController startCluster(int numTaskManagers) throws IOException;\n \n+\t/**\n+\t * Searches the logs of all processes for the given pattern, and applies the given processor for every line for\n+\t * which {@link Matcher#matches()} returned true.\n+\t *\n+\t * @param pattern pattern to search for\n+\t * @param matchProcessor match processor\n+\t * @return stream of matched strings\n+\t */\n+\tStream<String> searchAllLogs(Pattern pattern, Function<Matcher, String> matchProcessor) throws IOException;\n+\n \t/**\n \t * Returns the configured FlinkResource implementation, or a {@link LocalStandaloneFlinkResource} if none is configured.\n \t *\n \t * @return configured FlinkResource, or {@link LocalStandaloneFlinkResource} is none is configured\n \t */\n \tstatic FlinkResource get() {\n+\t\treturn get(FlinkResourceSetup.builder().build());\n+\t}\n+\n+\t/**\n+\t * Returns the configured FlinkResource implementation, or a {@link LocalStandaloneFlinkResource} if none is configured.\n+\t *\n+\t * @return configured FlinkResource, or {@link LocalStandaloneFlinkResource} is none is configured", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd966ab34a87027fe0446d0987542960fbec568"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNTcyNA==", "bodyText": "@param", "url": "https://github.com/apache/flink/pull/11240#discussion_r385805724", "createdAt": "2020-02-28T16:50:37Z", "author": {"login": "azagrebin"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkResourceFactory.java", "diffHunk": "@@ -32,5 +32,5 @@\n \t *\n \t * @return FlinkResource instance, or an empty Optional if the instance could not be instantiated\n \t */\n-\tOptional<FlinkResource> create();\n+\tOptional<FlinkResource> create(FlinkResourceSetup setup);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd966ab34a87027fe0446d0987542960fbec568"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNjY4NA==", "bodyText": "AFAIS, class and all methods can be already package private in this commit", "url": "https://github.com/apache/flink/pull/11240#discussion_r385806684", "createdAt": "2020-02-28T16:52:26Z", "author": {"login": "azagrebin"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/JarMove.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.tests.util.flink;\n+\n+/**\n+ * Represents a move operation for a jar..\n+ */\n+public class JarMove {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd966ab34a87027fe0446d0987542960fbec568"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwNjkzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Represents a move operation for a jar..\n          \n          \n            \n             * Represents a move operation for a jar.", "url": "https://github.com/apache/flink/pull/11240#discussion_r385806936", "createdAt": "2020-02-28T16:52:57Z", "author": {"login": "azagrebin"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/JarMove.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.tests.util.flink;\n+\n+/**\n+ * Represents a move operation for a jar..", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd966ab34a87027fe0446d0987542960fbec568"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgwOTgxOA==", "bodyText": "nit: defensive copy", "url": "https://github.com/apache/flink/pull/11240#discussion_r385809818", "createdAt": "2020-02-28T16:58:27Z", "author": {"login": "azagrebin"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkResourceSetup.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.tests.util.flink;\n+\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.util.Preconditions;\n+\n+import javax.annotation.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Optional;\n+\n+/**\n+ * Setup instructions for a {@link FlinkResource}.\n+ */\n+public class FlinkResourceSetup {\n+\n+\t@Nullable\n+\tprivate final Configuration config;\n+\tprivate final Collection<JarMove> jarMoveOperations;\n+\n+\tprivate FlinkResourceSetup(@Nullable Configuration config, Collection<JarMove> jarMoveOperations) {\n+\t\tthis.config = config;\n+\t\tthis.jarMoveOperations = Preconditions.checkNotNull(jarMoveOperations);\n+\t}\n+\n+\tpublic Optional<Configuration> getConfig() {\n+\t\treturn Optional.ofNullable(config);\n+\t}\n+\n+\tpublic Collection<JarMove> getJarMoveOperations() {\n+\t\treturn jarMoveOperations;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd966ab34a87027fe0446d0987542960fbec568"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgxMDg5Ng==", "bodyText": "unused leftover?\nalthough I would go with it for now instead of jarMoveOperations if there are no other use cases for it in foreseeable future", "url": "https://github.com/apache/flink/pull/11240#discussion_r385810896", "createdAt": "2020-02-28T17:00:24Z", "author": {"login": "azagrebin"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkResourceSetup.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.tests.util.flink;\n+\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.util.Preconditions;\n+\n+import javax.annotation.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Optional;\n+\n+/**\n+ * Setup instructions for a {@link FlinkResource}.\n+ */\n+public class FlinkResourceSetup {\n+\n+\t@Nullable\n+\tprivate final Configuration config;\n+\tprivate final Collection<JarMove> jarMoveOperations;\n+\n+\tprivate FlinkResourceSetup(@Nullable Configuration config, Collection<JarMove> jarMoveOperations) {\n+\t\tthis.config = config;\n+\t\tthis.jarMoveOperations = Preconditions.checkNotNull(jarMoveOperations);\n+\t}\n+\n+\tpublic Optional<Configuration> getConfig() {\n+\t\treturn Optional.ofNullable(config);\n+\t}\n+\n+\tpublic Collection<JarMove> getJarMoveOperations() {\n+\t\treturn jarMoveOperations;\n+\t}\n+\n+\tpublic static FlinkResourceSetupBuilder builder() {\n+\t\treturn new FlinkResourceSetupBuilder();\n+\t}\n+\n+\t/**\n+\t * Builder for {@link FlinkResourceSetup}.\n+\t */\n+\tpublic static class FlinkResourceSetupBuilder {\n+\n+\t\tprivate Configuration config;\n+\t\tprivate final Collection<String> jarsToCopyFromOptToLib = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd966ab34a87027fe0446d0987542960fbec568"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyNjQ0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\ttry (ClusterController cluster = dist.startCluster(1)) {\n          \n          \n            \n            \t\ttry (ClusterController ignored = dist.startCluster(1)) {", "url": "https://github.com/apache/flink/pull/11240#discussion_r385826448", "createdAt": "2020-02-28T17:29:22Z", "author": {"login": "azagrebin"}, "path": "flink-end-to-end-tests/flink-metrics-availability-test/src/test/java/org/pache/flink/metrics/tests/MetricsAvailabilityITCase.java", "diffHunk": "@@ -91,16 +96,16 @@ public static void shutdownExecutor() {\n \n \t@Test\n \tpublic void testReporter() throws Exception {\n-\t\tdist.startFlinkCluster();\n+\t\ttry (ClusterController cluster = dist.startCluster(1)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bd966ab34a87027fe0446d0987542960fbec568"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyNzg2Mw==", "bodyText": "other non-overridden methods can also be package private?", "url": "https://github.com/apache/flink/pull/11240#discussion_r385827863", "createdAt": "2020-02-28T17:32:38Z", "author": {"login": "azagrebin"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/flink/FlinkDistribution.java", "diffHunk": "@@ -86,7 +84,7 @@\n \n \tprivate Configuration defaultConfig;\n \n-\tpublic FlinkDistribution() {\n+\tFlinkDistribution() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efe358ec8f76c5663073e76b324aaf54d4fe118f"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5cac62effcd13b115d767af9256d00cfb7d7d2b3", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/5cac62effcd13b115d767af9256d00cfb7d7d2b3", "committedDate": "2020-02-28T22:59:33Z", "message": "javadocs"}, "afterCommit": {"oid": "662e405a63d064000d67306c67c219d2d76fdfa0", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/662e405a63d064000d67306c67c219d2d76fdfa0", "committedDate": "2020-02-28T23:00:44Z", "message": "javadocs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3ODY2MTk2", "url": "https://github.com/apache/flink/pull/11240#pullrequestreview-367866196", "createdAt": "2020-03-03T10:34:09Z", "commit": {"oid": "662e405a63d064000d67306c67c219d2d76fdfa0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1b623a907cc3298f63db7515e1640b0e74f5ca3", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/f1b623a907cc3298f63db7515e1640b0e74f5ca3", "committedDate": "2020-03-03T10:48:18Z", "message": "[FLINK-16190][e2e] Migrate tests to FlinkResource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6ddc053a9cb61b261e57fdf9cddc59e9ed6ba31", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/b6ddc053a9cb61b261e57fdf9cddc59e9ed6ba31", "committedDate": "2020-03-03T10:48:18Z", "message": "[FLINK-16190][e2e] Move FlinkDistribution into flink package"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "662e405a63d064000d67306c67c219d2d76fdfa0", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/662e405a63d064000d67306c67c219d2d76fdfa0", "committedDate": "2020-02-28T23:00:44Z", "message": "javadocs"}, "afterCommit": {"oid": "b6ddc053a9cb61b261e57fdf9cddc59e9ed6ba31", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/b6ddc053a9cb61b261e57fdf9cddc59e9ed6ba31", "committedDate": "2020-03-03T10:48:18Z", "message": "[FLINK-16190][e2e] Move FlinkDistribution into flink package"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3264, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}