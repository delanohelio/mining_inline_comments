{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxOTkzNDkz", "number": 10839, "title": "[FLINK-15567][table][docs] Add documentation for INSERT statements for Flink SQL", "bodyText": "What is the purpose of the change\nWe missed to add documentation for INSERT statements which should be added under \"SQL\" page.\nBrief change log\nAdd insert.md and insert.zh.md under sql directory.\nVerifying this change\nNo tests required.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-01-13T08:31:02Z", "url": "https://github.com/apache/flink/pull/10839", "merged": true, "mergeCommit": {"oid": "b2e3967c15ca719fb599060c88ccad242f4095d3"}, "closed": true, "closedAt": "2020-01-14T03:19:08Z", "author": {"login": "wuchong"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb54FwZgH2gAyMzYxOTkzNDkzOmM1NTk1ZWEwYzk5NGRjZjY2NGNiNjhlYzQ1YTZmNTAwZTcwNWEzYjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6IB6cAH2gAyMzYxOTkzNDkzOjM5ZDc0NzhhOWVkYjljZTNmNTkyYTAyYzZhZmEyYWE2OWU0OWE1ZDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c5595ea0c994dcf664cb68ec45a6f500e705a3b7", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/c5595ea0c994dcf664cb68ec45a6f500e705a3b7", "committedDate": "2020-01-13T08:29:35Z", "message": "[FLINK-15567][table][docs] Add documentation for INSERT statements for Flink SQL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjUyMzk3", "url": "https://github.com/apache/flink/pull/10839#pullrequestreview-342252397", "createdAt": "2020-01-14T01:57:56Z", "commit": {"oid": "c5595ea0c994dcf664cb68ec45a6f500e705a3b7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMTo1Nzo1N1rOFdKNRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMjoxMzoxNlrOFdKaFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMDI2MA==", "bodyText": "Maybe we can point to https://ci.apache.org/projects/flink/flink-docs-master/dev/table/sqlClient.html#detached-sql-queries to emphasize detach.", "url": "https://github.com/apache/flink/pull/10839#discussion_r366120260", "createdAt": "2020-01-14T01:57:57Z", "author": {"login": "JingsongLi"}, "path": "docs/dev/table/sql/insert.md", "diffHunk": "@@ -0,0 +1,173 @@\n+---\n+title: \"INSERT Statement\"\n+nav-parent_id: sql\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* This will be replaced by the TOC\n+{:toc}\n+\n+INSERT statements are used to add rows to a table.\n+\n+## Run an INSERT statement\n+\n+INSERT statements are specified with the `sqlUpdate()` method of the `TableEnvironment` or executed in [SQL CLI]({{ site.baseurl }}/dev/table/sqlClient.html). The method `sqlUpdate()` for INSERT statements is a lazy execution, they will be executed only when `TableEnvironment.execute(jobName)` is invoked.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5595ea0c994dcf664cb68ec45a6f500e705a3b7"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMzU0Mw==", "bodyText": "Can you add append/overwrite dynamic partition inserting?", "url": "https://github.com/apache/flink/pull/10839#discussion_r366123543", "createdAt": "2020-01-14T02:13:16Z", "author": {"login": "JingsongLi"}, "path": "docs/dev/table/sql/insert.md", "diffHunk": "@@ -0,0 +1,173 @@\n+---\n+title: \"INSERT Statement\"\n+nav-parent_id: sql\n+nav-pos: 5\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+* This will be replaced by the TOC\n+{:toc}\n+\n+INSERT statements are used to add rows to a table.\n+\n+## Run an INSERT statement\n+\n+INSERT statements are specified with the `sqlUpdate()` method of the `TableEnvironment` or executed in [SQL CLI]({{ site.baseurl }}/dev/table/sqlClient.html). The method `sqlUpdate()` for INSERT statements is a lazy execution, they will be executed only when `TableEnvironment.execute(jobName)` is invoked.\n+\n+The following examples show how to run an INSERT statement in `TableEnvironment` and in SQL CLI.\n+\n+<div class=\"codetabs\" markdown=\"1\">\n+<div data-lang=\"java\" markdown=\"1\">\n+{% highlight java %}\n+EnvironmentSettings settings = EnvironmentSettings.newInstance()...\n+TableEnvironment tEnv = TableEnvironment.create(settings);\n+\n+// register a source table named \"Orders\" and a sink table named \"RubberOrders\"\n+tEnv.sqlUpdate(\"CREATE TABLE Orders (`user` BIGINT, product VARCHAR, amount INT) WITH (...)\");\n+tEnv.sqlUpdate(\"CREATE TABLE RubberOrders(product VARCHAR, amount INT) WITH (...)\");\n+\n+// run a SQL update query on the registered source table and emit the result to registered sink table\n+tEnv.sqlUpdate(\n+  \"INSERT INTO RubberOrders SELECT product, amount FROM Orders WHERE product LIKE '%Rubber%'\");\n+{% endhighlight %}\n+</div>\n+\n+<div data-lang=\"scala\" markdown=\"1\">\n+{% highlight scala %}\n+val settings = EnvironmentSettings.newInstance()...\n+val tEnv = TableEnvironment.create(settings)\n+\n+// register a source table named \"Orders\" and a sink table named \"RubberOrders\"\n+tEnv.sqlUpdate(\"CREATE TABLE Orders (`user` BIGINT, product STRING, amount INT) WITH (...)\")\n+tEnv.sqlUpdate(\"CREATE TABLE RubberOrders(product STRING, amount INT) WITH (...)\")\n+\n+// run a SQL update query on the registered source table and emit the result to registered sink table\n+tEnv.sqlUpdate(\n+  \"INSERT INTO RubberOrders SELECT product, amount FROM Orders WHERE product LIKE '%Rubber%'\")\n+{% endhighlight %}\n+</div>\n+\n+<div data-lang=\"python\" markdown=\"1\">\n+{% highlight python %}\n+settings = EnvironmentSettings.newInstance()...\n+table_env = TableEnvironment.create(settings)\n+\n+# register a source table named \"Orders\" and a sink table named \"RubberOrders\"\n+table_env.sqlUpdate(\"CREATE TABLE Orders (`user` BIGINT, product STRING, amount INT) WITH (...)\")\n+table_env.sqlUpdate(\"CREATE TABLE RubberOrders(product STRING, amount INT) WITH (...)\")\n+\n+# run a SQL update query on the registered source table and emit the result to registered sink table\n+table_env \\\n+    .sqlUpdate(\"INSERT INTO RubberOrders SELECT product, amount FROM Orders WHERE product LIKE '%Rubber%'\")\n+{% endhighlight %}\n+</div>\n+\n+<div data-lang=\"SQL CLI\" markdown=\"1\">\n+{% highlight sql %}\n+Flink SQL> CREATE TABLE Orders (`user` BIGINT, product STRING, amount INT) WITH (...);\n+[INFO] Table has been created.\n+\n+Flink SQL> CREATE TABLE RubberOrders(product STRING, amount INT) WITH (...);\n+\n+Flink SQL> SHOW TABLES;\n+Orders\n+RubberOrders\n+\n+Flink SQL> INSERT INTO RubberOrders SELECT product, amount FROM Orders WHERE product LIKE '%Rubber%';\n+[INFO] Submitting SQL update statement to the cluster...\n+[INFO] Table update statement has been successfully submitted to the cluster:\n+{% endhighlight %}\n+</div>\n+</div>\n+\n+{% top %}\n+\n+## Insert from select queries\n+\n+Query Results can be inserted into tables by using the insert clause.\n+\n+### Syntax\n+\n+{% highlight sql %}\n+\n+INSERT { INTO | OVERWRITE } [catalog_name.][db_name.]table_name [PARTITION part_spec] select_statement\n+\n+part_spec:\n+  (part_col_name1=val1 [, part_col_name2=val2, ...])\n+\n+{% endhighlight %}\n+\n+**OVERWRITE**\n+\n+`INSERT OVERWRITE` will overwrite any existing data in the table or partition. Otherwise, new data is appended.\n+\n+**PARTITION**\n+\n+`PARTITION` clause should contain static partition columns of this inserting.\n+\n+### Examples\n+\n+{% highlight sql %}\n+\n+-- Creates a partitioned table\n+CREATE TABLE country_page_view (user STRING, cnt INT, date STRING, country STRING)\n+PARTITIONED BY (date, country)\n+WITH (...)\n+\n+-- Appends rows into the partition (date='2019-8-30', country='China')\n+INSERT INTO country_page_view PARTITION (date='2019-8-30', country='China')\n+  SELECT user, cnt FROM page_view_source;\n+\n+-- Overwrites the partition (date='2019-8-30', country='China') using rows in page_view_source\n+INSERT INTO country_page_view PARTITION (date='2019-8-30', country='China')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5595ea0c994dcf664cb68ec45a6f500e705a3b7"}, "originalPosition": 139}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0be9e1e476aa9f810dab3e3ae89c1b4664474aea", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/0be9e1e476aa9f810dab3e3ae89c1b4664474aea", "committedDate": "2020-01-14T02:45:24Z", "message": "address Jingsong's comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjY2Mjg1", "url": "https://github.com/apache/flink/pull/10839#pullrequestreview-342266285", "createdAt": "2020-01-14T02:53:15Z", "commit": {"oid": "0be9e1e476aa9f810dab3e3ae89c1b4664474aea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMjo1MzoxNlrOFdK5Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMjo1MzoxNlrOFdK5Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEzMTU0Nw==", "bodyText": "Remove , country='China'", "url": "https://github.com/apache/flink/pull/10839#discussion_r366131547", "createdAt": "2020-01-14T02:53:16Z", "author": {"login": "JingsongLi"}, "path": "docs/dev/table/sql/insert.md", "diffHunk": "@@ -125,20 +125,28 @@ part_spec:\n ### Examples\n \n {% highlight sql %}\n-\n -- Creates a partitioned table\n CREATE TABLE country_page_view (user STRING, cnt INT, date STRING, country STRING)\n PARTITIONED BY (date, country)\n WITH (...)\n \n--- Appends rows into the partition (date='2019-8-30', country='China')\n+-- Appends rows into the static partition (date='2019-8-30', country='China')\n INSERT INTO country_page_view PARTITION (date='2019-8-30', country='China')\n   SELECT user, cnt FROM page_view_source;\n \n--- Overwrites the partition (date='2019-8-30', country='China') using rows in page_view_source\n+-- Appends rows into partition (date, country), where date is static partition with value '2019-8-30',\n+-- country is dynamic partition whose value is dynamic determined by each row.\n INSERT INTO country_page_view PARTITION (date='2019-8-30', country='China')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0be9e1e476aa9f810dab3e3ae89c1b4664474aea"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39d7478a9edb9ce3f592a02c6afa2aa69e49a5d5", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/39d7478a9edb9ce3f592a02c6afa2aa69e49a5d5", "committedDate": "2020-01-14T03:03:52Z", "message": "fix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4683, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}