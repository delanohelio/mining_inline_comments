{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1OTkwNzc2", "number": 14184, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzoyMjowNVrOE8uBew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzoyMjowNVrOE8uBew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTA0MDU5OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/operators/BatchTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzoyMjowNVrOH5AkIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMzozNjowMlrOH5BHWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU0MDEzMA==", "bodyText": "This condition seems the wrong way around.", "url": "https://github.com/apache/flink/pull/14184#discussion_r529540130", "createdAt": "2020-11-24T13:22:05Z", "author": {"login": "StephanEwen"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/operators/BatchTask.java", "diffHunk": "@@ -893,21 +896,34 @@ protected void resetAllInputs() throws Exception {\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\t// close the async barrier if there is one\n-\t\t\t\t\tif (this.tempBarriers[i] != null) {\n-\t\t\t\t\t\tthis.tempBarriers[i].close();\n-\t\t\t\t\t\tthis.tempBarriers[i] = null;\n-\t\t\t\t\t}\n+\t\t\t\t\tList<MemorySegment> allocated = tempBarriers[i] == null ? emptyList() :\n+\t\t\t\t\t\ttempBarriers[i].closeAndGetLeftoverMemory();\n+\t\t\t\t\ttempBarriers[i] = null;\n \n-\t\t\t\t\t// recreate the local strategy\n-\t\t\t\t\tinitInputLocalStrategy(i);\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tinitInputLocalStrategy(i);\n \n-\t\t\t\t\tif (this.inputIsAsyncMaterialized[i]) {\n-\t\t\t\t\t\tfinal int pages = this.materializationMemory[i];\n-\t\t\t\t\t\t@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-\t\t\t\t\t\tTempBarrier<?> barrier = new TempBarrier(this, getInput(i), this.inputSerializers[i], memMan, ioMan, pages);\n-\t\t\t\t\t\tbarrier.startReading();\n-\t\t\t\t\t\tthis.tempBarriers[i] = barrier;\n-\t\t\t\t\t\tthis.inputs[i] = null;\n+\t\t\t\t\t\tif (this.inputIsAsyncMaterialized[i]) {\n+\t\t\t\t\t\t\tfinal int pages = this.materializationMemory[i];\n+\t\t\t\t\t\t\tif (pages > allocated.size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5cb5d73481a41652fe13e99b427d50d41cd73e1"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU0OTE0Nw==", "bodyText": "You are right, thanks!\nI changed it to just\nPreconditions.checkState(allocated.size() <= pages);\n(pages should never change as you pointed out, but some of the allocated segments might have been consumed, so it's <= and not ==)", "url": "https://github.com/apache/flink/pull/14184#discussion_r529549147", "createdAt": "2020-11-24T13:36:02Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/operators/BatchTask.java", "diffHunk": "@@ -893,21 +896,34 @@ protected void resetAllInputs() throws Exception {\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\t// close the async barrier if there is one\n-\t\t\t\t\tif (this.tempBarriers[i] != null) {\n-\t\t\t\t\t\tthis.tempBarriers[i].close();\n-\t\t\t\t\t\tthis.tempBarriers[i] = null;\n-\t\t\t\t\t}\n+\t\t\t\t\tList<MemorySegment> allocated = tempBarriers[i] == null ? emptyList() :\n+\t\t\t\t\t\ttempBarriers[i].closeAndGetLeftoverMemory();\n+\t\t\t\t\ttempBarriers[i] = null;\n \n-\t\t\t\t\t// recreate the local strategy\n-\t\t\t\t\tinitInputLocalStrategy(i);\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tinitInputLocalStrategy(i);\n \n-\t\t\t\t\tif (this.inputIsAsyncMaterialized[i]) {\n-\t\t\t\t\t\tfinal int pages = this.materializationMemory[i];\n-\t\t\t\t\t\t@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-\t\t\t\t\t\tTempBarrier<?> barrier = new TempBarrier(this, getInput(i), this.inputSerializers[i], memMan, ioMan, pages);\n-\t\t\t\t\t\tbarrier.startReading();\n-\t\t\t\t\t\tthis.tempBarriers[i] = barrier;\n-\t\t\t\t\t\tthis.inputs[i] = null;\n+\t\t\t\t\t\tif (this.inputIsAsyncMaterialized[i]) {\n+\t\t\t\t\t\t\tfinal int pages = this.materializationMemory[i];\n+\t\t\t\t\t\t\tif (pages > allocated.size()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU0MDEzMA=="}, "originalCommit": {"oid": "b5cb5d73481a41652fe13e99b427d50d41cd73e1"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4736, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}