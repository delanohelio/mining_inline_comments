{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NTE4MDk1", "number": 11619, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjowNjo0NlrODt7A1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjowNjo0NlrODt7A1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDc5MzgzOnYy", "diffSide": "RIGHT", "path": "flink-end-to-end-tests/test-scripts/common_kubernetes.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjowNjo0NlrOF_oFdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMzoxOTozNlrOGADysw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI2MTM2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                echo \"Currently exiting Kubernetes resources\"\n          \n          \n            \n                echo \"Currently existing Kubernetes resources\"", "url": "https://github.com/apache/flink/pull/11619#discussion_r402261366", "createdAt": "2020-04-02T12:06:46Z", "author": {"login": "rmetzger"}, "path": "flink-end-to-end-tests/test-scripts/common_kubernetes.sh", "diffHunk": "@@ -88,22 +86,43 @@ function start_kubernetes_if_not_running {\n }\n \n function start_kubernetes {\n-    [[ \"${OS_TYPE}\" = \"linux\" ]] && setup_kubernetes_for_linux\n-    if ! retry_times ${MINIKUBE_START_RETRIES} ${MINIKUBE_START_BACKOFF} start_kubernetes_if_not_running; then\n-        echo \"Could not start minikube. Aborting...\"\n-        exit 1\n+    if [[ \"${OS_TYPE}\" != \"linux\" ]]; then\n+        if ! check_kubernetes_status; then\n+            echo \"$NON_LINUX_ENV_NOTE\"\n+            exit 1\n+        fi\n+    else\n+        setup_kubernetes_for_linux\n+        if ! retry_times ${MINIKUBE_START_RETRIES} ${MINIKUBE_START_BACKOFF} start_kubernetes_if_not_running; then\n+            echo \"Could not start minikube. Aborting...\"\n+            exit 1\n+        fi\n     fi\n     eval $(minikube docker-env)\n }\n \n function stop_kubernetes {\n-    echo \"Stopping minikube ...\"\n-    stop_command=\"minikube stop\"\n-    [[ \"${OS_TYPE}\" = \"linux\" ]] && stop_command=\"sudo ${stop_command}\"\n-    if ! retry_times ${MINIKUBE_START_RETRIES} ${MINIKUBE_START_BACKOFF} \"${stop_command}\"; then\n-        echo \"Could not stop minikube. Aborting...\"\n-        exit 1\n+    if [[ \"${OS_TYPE}\" != \"linux\" ]]; then\n+        echo \"$NON_LINUX_ENV_NOTE\"\n+    else\n+        echo \"Stopping minikube ...\"\n+        stop_command=\"sudo minikube stop\"\n+        if ! retry_times ${MINIKUBE_START_RETRIES} ${MINIKUBE_START_BACKOFF} \"${stop_command}\"; then\n+            echo \"Could not stop minikube. Aborting...\"\n+            exit 1\n+        fi\n     fi\n }\n \n+function debug_copy_and_show_logs {\n+    echo \"Debugging failed Kubernetes test:\"\n+    echo \"Currently exiting Kubernetes resources\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68c82eef3469c403b1a0f8a64c13f04d989bf145"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcxNTMxNQ==", "bodyText": "Nice catch. I will fix it.", "url": "https://github.com/apache/flink/pull/11619#discussion_r402715315", "createdAt": "2020-04-03T03:19:36Z", "author": {"login": "wangyang0918"}, "path": "flink-end-to-end-tests/test-scripts/common_kubernetes.sh", "diffHunk": "@@ -88,22 +86,43 @@ function start_kubernetes_if_not_running {\n }\n \n function start_kubernetes {\n-    [[ \"${OS_TYPE}\" = \"linux\" ]] && setup_kubernetes_for_linux\n-    if ! retry_times ${MINIKUBE_START_RETRIES} ${MINIKUBE_START_BACKOFF} start_kubernetes_if_not_running; then\n-        echo \"Could not start minikube. Aborting...\"\n-        exit 1\n+    if [[ \"${OS_TYPE}\" != \"linux\" ]]; then\n+        if ! check_kubernetes_status; then\n+            echo \"$NON_LINUX_ENV_NOTE\"\n+            exit 1\n+        fi\n+    else\n+        setup_kubernetes_for_linux\n+        if ! retry_times ${MINIKUBE_START_RETRIES} ${MINIKUBE_START_BACKOFF} start_kubernetes_if_not_running; then\n+            echo \"Could not start minikube. Aborting...\"\n+            exit 1\n+        fi\n     fi\n     eval $(minikube docker-env)\n }\n \n function stop_kubernetes {\n-    echo \"Stopping minikube ...\"\n-    stop_command=\"minikube stop\"\n-    [[ \"${OS_TYPE}\" = \"linux\" ]] && stop_command=\"sudo ${stop_command}\"\n-    if ! retry_times ${MINIKUBE_START_RETRIES} ${MINIKUBE_START_BACKOFF} \"${stop_command}\"; then\n-        echo \"Could not stop minikube. Aborting...\"\n-        exit 1\n+    if [[ \"${OS_TYPE}\" != \"linux\" ]]; then\n+        echo \"$NON_LINUX_ENV_NOTE\"\n+    else\n+        echo \"Stopping minikube ...\"\n+        stop_command=\"sudo minikube stop\"\n+        if ! retry_times ${MINIKUBE_START_RETRIES} ${MINIKUBE_START_BACKOFF} \"${stop_command}\"; then\n+            echo \"Could not stop minikube. Aborting...\"\n+            exit 1\n+        fi\n     fi\n }\n \n+function debug_copy_and_show_logs {\n+    echo \"Debugging failed Kubernetes test:\"\n+    echo \"Currently exiting Kubernetes resources\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI2MTM2Ng=="}, "originalCommit": {"oid": "68c82eef3469c403b1a0f8a64c13f04d989bf145"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 613, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}