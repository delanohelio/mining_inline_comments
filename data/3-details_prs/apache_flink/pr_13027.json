{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4OTYyMzA2", "number": 13027, "title": "[FLINK-16245] Decoupling user classloader from context classloader. ", "bodyText": "This is a follow-up PR of #11303 after #11611 disabled it because of performance regression in blink e2e test.\nWhat is the purpose of the change\nDecoupling user class loader from context classloader.\nThus, user classloader can be unloaded even though a reference on the context classloader outlives the user code.\nBrief change log\n\nAdding SafetyNetWrapperClassLoader\nUse it for FlinkUserCodeClassLoaders\nMake sure LocalExecutor closes user classloader\n\nCompared to the original PR, it includes the following changes\n\nUse the parent classloader of the FlinkUserCodeClassLoader in SafetyNetWrapperClassLoader to address the performance concerns.\nFurther, improve performance by enabling parallel class loading in all involved classloaders.\n\nVerifying this change\nAdded unit test.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-07-30T08:20:03Z", "url": "https://github.com/apache/flink/pull/13027", "merged": true, "mergeCommit": {"oid": "fce82d7f56d5da3d3bf9ea6b66888d1350eb172f"}, "closed": true, "closedAt": "2020-08-16T21:27:40Z", "author": {"login": "AHeise"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5_s0GAH2gAyNDU4OTYyMzA2OjY0NDdhZThhMWY4Yzk2OTAwMzVmMDFmYTA4Zjc1YTliZDM1YmI1YTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-aselABqjM2NTA3MzQwMTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6447ae8a1f8c9690035f01fa08f75a9bd35bb5a7", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/6447ae8a1f8c9690035f01fa08f75a9bd35bb5a7", "committedDate": "2020-07-30T13:32:44Z", "message": "[FLINK-16245][runtime] Decouple user from context classloader\n\nAllows user classloader can be unloaded even if a reference on the context classloader outlives the user code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a85022a179f2d972520f5a478c40153ce317920", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/4a85022a179f2d972520f5a478c40153ce317920", "committedDate": "2020-07-30T13:32:44Z", "message": "[FLINK-16245][table] Close user classloader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47ea974f8307084c080c6d343bf7b22296ed8b44", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/47ea974f8307084c080c6d343bf7b22296ed8b44", "committedDate": "2020-07-30T13:32:44Z", "message": "[FLINK-16245][tests] Adjust BatchFineGrainedRecoveryITCase\n\nBecause the classloader is now closed when the task fails the UDF only has access to the bootstrap classloader, which doesn't contain our own test classes."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4301bfa208eabbbe2017eaa433183266bb9b4ac9", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/4301bfa208eabbbe2017eaa433183266bb9b4ac9", "committedDate": "2020-07-30T08:15:21Z", "message": "[FLINK-16245][tests] Adjust BatchFineGrainedRecoveryITCase\n\nBecause the classloader is now closed when the task fails the UDF only has access to the bootstrap classloader, which doesn't contain our own test classes."}, "afterCommit": {"oid": "47ea974f8307084c080c6d343bf7b22296ed8b44", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/47ea974f8307084c080c6d343bf7b22296ed8b44", "committedDate": "2020-07-30T13:32:44Z", "message": "[FLINK-16245][tests] Adjust BatchFineGrainedRecoveryITCase\n\nBecause the classloader is now closed when the task fails the UDF only has access to the bootstrap classloader, which doesn't contain our own test classes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cccf1bd4390323e70e998f819975fa9c29e0e4e5", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/cccf1bd4390323e70e998f819975fa9c29e0e4e5", "committedDate": "2020-08-05T07:28:13Z", "message": "[FLINK-16917][orc] Workaround for classloader leak in OrcFile.\n\nSee https://issues.apache.org/jira/browse/ORC-653\nOrcFile#getStaticMemoryManager caches initial configuration and leaks classloader in it. Thus, new Flink jobs use the classloader of the first job implicitly.\n\nBy adding ThreadLocalClassLoaderConfiguration, which forces the use of thread-local classloader over the initial classloader, Flink jobs use the appropriate classloader on higher runtime costs (no caches).\nThis commit should be reverted, once the bug in ORC is fixed."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c03925d4b90fc68ef1d8a6d4189960724cd398cd", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/c03925d4b90fc68ef1d8a6d4189960724cd398cd", "committedDate": "2020-08-04T09:49:13Z", "message": "[FLINK-16917][orc] Workaround for classloader leak in OrcFile.\n\nSee https://issues.apache.org/jira/browse/ORC-653\nOrcFile#getStaticMemoryManager caches initial configuration and leaks classloader in it. Thus, new Flink jobs use the classloader of the first job implicitly.\n\nBy adding ThreadLocalClassLoaderConfiguration, which forces the use of thread-local classloader over the initial classloader, Flink jobs use the appropriate classloader on higher runtime costs (no caches).\nThis commit should be reverted, once the bug in ORC is fixed."}, "afterCommit": {"oid": "cccf1bd4390323e70e998f819975fa9c29e0e4e5", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/cccf1bd4390323e70e998f819975fa9c29e0e4e5", "committedDate": "2020-08-05T07:28:13Z", "message": "[FLINK-16917][orc] Workaround for classloader leak in OrcFile.\n\nSee https://issues.apache.org/jira/browse/ORC-653\nOrcFile#getStaticMemoryManager caches initial configuration and leaks classloader in it. Thus, new Flink jobs use the classloader of the first job implicitly.\n\nBy adding ThreadLocalClassLoaderConfiguration, which forces the use of thread-local classloader over the initial classloader, Flink jobs use the appropriate classloader on higher runtime costs (no caches).\nThis commit should be reverted, once the bug in ORC is fixed."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMDkwODk5", "url": "https://github.com/apache/flink/pull/13027#pullrequestreview-463090899", "createdAt": "2020-08-07T07:25:03Z", "commit": {"oid": "cccf1bd4390323e70e998f819975fa9c29e0e4e5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzoyNTowM1rOG9PYrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzoyNTowM1rOG9PYrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2ODM5Ng==", "bodyText": "If we were to use a normal configuration, what would happen? Subsequent jobs would not be able to run?", "url": "https://github.com/apache/flink/pull/13027#discussion_r466868396", "createdAt": "2020-08-07T07:25:03Z", "author": {"login": "zentol"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/HiveTableSink.java", "diffHunk": "@@ -241,12 +242,14 @@ public final DataStreamSink consumeDataStream(DataStream dataStream) {\n \t\t\tformatTypes[i] = tableSchema.getFieldDataType(i).get().getLogicalType();\n \t\t}\n \t\tRowType formatType = RowType.of(formatTypes, formatNames);\n-\t\tConfiguration formatConf = new Configuration(jobConf);\n-\t\tsd.getSerdeInfo().getParameters().forEach(formatConf::set);\n \t\tif (serLib.contains(\"parquet\")) {\n+\t\t\tConfiguration formatConf = new Configuration(jobConf);\n+\t\t\tsd.getSerdeInfo().getParameters().forEach(formatConf::set);\n \t\t\treturn Optional.of(ParquetRowDataBuilder.createWriterFactory(\n \t\t\t\t\tformatType, formatConf, hiveVersion.startsWith(\"3.\")));\n \t\t} else if (serLib.contains(\"orc\")) {\n+\t\t\tConfiguration formatConf = new ThreadLocalClassLoaderConfiguration(jobConf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cccf1bd4390323e70e998f819975fa9c29e0e4e5"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f85e2aed8e736a6b384063518d72ca0cb44869ad", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/f85e2aed8e736a6b384063518d72ca0cb44869ad", "committedDate": "2020-08-08T08:15:23Z", "message": "[FLINK-16917][runtime] Added option to disable safety net user classloader.\n\nIf users experience class loader leaks in libraries not under his control, they can force old behavior with the config option."}, "afterCommit": {"oid": "30c7fa20d57633b62a3e28ddf4256193e6439ec2", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/30c7fa20d57633b62a3e28ddf4256193e6439ec2", "committedDate": "2020-08-08T19:28:00Z", "message": "[FLINK-16917][runtime] Added option to disable safety net user classloader.\n\nIf users experience class loader leaks in libraries not under his control, they can force old behavior with the config option."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "30c7fa20d57633b62a3e28ddf4256193e6439ec2", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/30c7fa20d57633b62a3e28ddf4256193e6439ec2", "committedDate": "2020-08-08T19:28:00Z", "message": "[FLINK-16917][runtime] Added option to disable safety net user classloader.\n\nIf users experience class loader leaks in libraries not under his control, they can force old behavior with the config option."}, "afterCommit": {"oid": "d98d4b17c52db1cea0fe0308b5330175c30e90da", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/d98d4b17c52db1cea0fe0308b5330175c30e90da", "committedDate": "2020-08-10T12:26:18Z", "message": "[FLINK-16917][runtime] Added option to disable safety net user classloader.\n\nIf users experience class loader leaks in libraries not under his control, they can force old behavior with the config option."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NjgyNzAy", "url": "https://github.com/apache/flink/pull/13027#pullrequestreview-465682702", "createdAt": "2020-08-12T08:06:45Z", "commit": {"oid": "d98d4b17c52db1cea0fe0308b5330175c30e90da"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODowNjo0NVrOG_WZiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwODo0NzoyM1rOG_X3Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA4MDQ1Ng==", "bodyText": "we don't use underscores.", "url": "https://github.com/apache/flink/pull/13027#discussion_r469080456", "createdAt": "2020-08-12T08:06:45Z", "author": {"login": "zentol"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "diffHunk": "@@ -124,6 +124,15 @@\n \t\treturn parseParentFirstLoaderPatterns(base, append);\n \t}\n \n+\t@Documentation.Section(Documentation.Sections.EXPERT_CLASS_LOADING)\n+\tpublic static final ConfigOption<Boolean> CHECK_LEAKED_CLASSLOADER = ConfigOptions\n+\t\t.key(\"classloader.check_leaked_classloader\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d98d4b17c52db1cea0fe0308b5330175c30e90da"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA4MTgzMw==", "bodyText": "Retrieve the key from the actual configuration object instead.", "url": "https://github.com/apache/flink/pull/13027#discussion_r469081833", "createdAt": "2020-08-12T08:09:25Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders.java", "diffHunk": "@@ -136,7 +150,10 @@ public void close() {\n \n \t\tprivate FlinkUserCodeClassLoader ensureInner() {\n \t\t\tif (inner == null) {\n-\t\t\t\tthrow new IllegalStateException(\"Trying to access closed classloader\");\n+\t\t\t\tthrow new IllegalStateException(\"Trying to access closed classloader. Please check if you store \" +\n+\t\t\t\t\t\"classloaders directly or indirectly in static fields. If the stacktrace suggests that the leak \" +\n+\t\t\t\t\t\"occurs in a third party library and cannot be fixed immediately, you can disable this check \" +\n+\t\t\t\t\t\"with the configuration 'classloader.check_leaked_classloader'.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d98d4b17c52db1cea0fe0308b5330175c30e90da"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEwNDQzMQ==", "bodyText": "Fails attempts at loading classes if the user classloader of a job is used after it has terminated.\nThis is usually caused by the classloader being leaked by lingering threads or misbehaving libraries, which may also result in the classloader being used by other jobs.\nThis check should only be disabled if such a leak prevents further jobs from running.", "url": "https://github.com/apache/flink/pull/13027#discussion_r469104431", "createdAt": "2020-08-12T08:47:23Z", "author": {"login": "zentol"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "diffHunk": "@@ -124,6 +124,15 @@\n \t\treturn parseParentFirstLoaderPatterns(base, append);\n \t}\n \n+\t@Documentation.Section(Documentation.Sections.EXPERT_CLASS_LOADING)\n+\tpublic static final ConfigOption<Boolean> CHECK_LEAKED_CLASSLOADER = ConfigOptions\n+\t\t.key(\"classloader.check_leaked_classloader\")\n+\t\t.booleanType()\n+\t\t.defaultValue(true)\n+\t\t.withDescription(\"Fails if a user classloader is used in another job after a job has been finished. This \" +\n+\t\t\t\"check should only be disabled if the class leak occurs in an external library cannot be fixed \" +\n+\t\t\t\"immediately.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d98d4b17c52db1cea0fe0308b5330175c30e90da"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74857e7cfe766ea0ba163e56a41251ca3fa0b4cf", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/74857e7cfe766ea0ba163e56a41251ca3fa0b4cf", "committedDate": "2020-08-13T07:15:20Z", "message": "[FLINK-16917][runtime] Added option to disable safety net user classloader.\n\nIf users experience class loader leaks in libraries not under his control, they can force old behavior with the config option."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d98d4b17c52db1cea0fe0308b5330175c30e90da", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/d98d4b17c52db1cea0fe0308b5330175c30e90da", "committedDate": "2020-08-10T12:26:18Z", "message": "[FLINK-16917][runtime] Added option to disable safety net user classloader.\n\nIf users experience class loader leaks in libraries not under his control, they can force old behavior with the config option."}, "afterCommit": {"oid": "74857e7cfe766ea0ba163e56a41251ca3fa0b4cf", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/74857e7cfe766ea0ba163e56a41251ca3fa0b4cf", "committedDate": "2020-08-13T07:15:20Z", "message": "[FLINK-16917][runtime] Added option to disable safety net user classloader.\n\nIf users experience class loader leaks in libraries not under his control, they can force old behavior with the config option."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4878, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}