{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MDI1MjA3", "number": 13776, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNDo0MjozNVrOE2g1cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNDo0MjozNVrOE2g1cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NTk2NTI5OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-base/src/main/java/org/apache/flink/connector/base/source/reader/fetcher/SplitFetcherManager.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNDo0MjozNVrOHvW37g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMjo0NDoyMlrOHvdSXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQxOTg4Ng==", "bodyText": "I am curious. Is there a reason that we replace the ThrowableCatchingRunnable wrapper with the explicit error handler passed to the split fetcher here?", "url": "https://github.com/apache/flink/pull/13776#discussion_r519419886", "createdAt": "2020-11-08T14:42:35Z", "author": {"login": "becketqin"}, "path": "flink-connectors/flink-connector-base/src/main/java/org/apache/flink/connector/base/source/reader/fetcher/SplitFetcherManager.java", "diffHunk": "@@ -112,7 +111,7 @@ public void accept(Throwable t) {\n \tpublic abstract void addSplits(List<SplitT> splitsToAdd);\n \n \tprotected void startFetcher(SplitFetcher<E, SplitT> fetcher) {\n-\t\texecutors.submit(new ThrowableCatchingRunnable(errorHandler, fetcher));\n+\t\texecutors.submit(fetcher);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "100b67ca171766bec1ff561a66688471b24745be"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQzNDgwMw==", "bodyText": "We need error-setting(errorHandler.accept(t)) happens-before fetcher-removing(shutdownHook.run()) so that newly added error-checking wouldn't lost it. In order to achieve this, we need move errorHandler to SplitFetcher where shutdownHook locates in. After movement, ThrowableCatchingRunnable is useless.\nBesides above semantic changes, I think it would be good to drop extra layer between two concurrent components SourceReaderBase and SplitFetcher.", "url": "https://github.com/apache/flink/pull/13776#discussion_r519434803", "createdAt": "2020-11-08T15:26:59Z", "author": {"login": "kezhuw"}, "path": "flink-connectors/flink-connector-base/src/main/java/org/apache/flink/connector/base/source/reader/fetcher/SplitFetcherManager.java", "diffHunk": "@@ -112,7 +111,7 @@ public void accept(Throwable t) {\n \tpublic abstract void addSplits(List<SplitT> splitsToAdd);\n \n \tprotected void startFetcher(SplitFetcher<E, SplitT> fetcher) {\n-\t\texecutors.submit(new ThrowableCatchingRunnable(errorHandler, fetcher));\n+\t\texecutors.submit(fetcher);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQxOTg4Ng=="}, "originalCommit": {"oid": "100b67ca171766bec1ff561a66688471b24745be"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQzNDg0OQ==", "bodyText": "I personally like the change - less wrapping tends to make code navigation easier. But this is a matter of taste here, either way looks totally fine.", "url": "https://github.com/apache/flink/pull/13776#discussion_r519434849", "createdAt": "2020-11-08T15:27:07Z", "author": {"login": "StephanEwen"}, "path": "flink-connectors/flink-connector-base/src/main/java/org/apache/flink/connector/base/source/reader/fetcher/SplitFetcherManager.java", "diffHunk": "@@ -112,7 +111,7 @@ public void accept(Throwable t) {\n \tpublic abstract void addSplits(List<SplitT> splitsToAdd);\n \n \tprotected void startFetcher(SplitFetcher<E, SplitT> fetcher) {\n-\t\texecutors.submit(new ThrowableCatchingRunnable(errorHandler, fetcher));\n+\t\texecutors.submit(fetcher);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQxOTg4Ng=="}, "originalCommit": {"oid": "100b67ca171766bec1ff561a66688471b24745be"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQzNjE1Nw==", "bodyText": "But I think @kezhuw has a point - having this in the same class (rather than in a separat class ThrowableCatchingRunnable) is a good if there is a strict contract between the exception handling and closing. Otherwise the exception handling is factored out into a separate class (ThrowableCatchingRunnable) but with an implicit contract on how it must be used, to guarantee the happens-before relationship.", "url": "https://github.com/apache/flink/pull/13776#discussion_r519436157", "createdAt": "2020-11-08T15:30:40Z", "author": {"login": "StephanEwen"}, "path": "flink-connectors/flink-connector-base/src/main/java/org/apache/flink/connector/base/source/reader/fetcher/SplitFetcherManager.java", "diffHunk": "@@ -112,7 +111,7 @@ public void accept(Throwable t) {\n \tpublic abstract void addSplits(List<SplitT> splitsToAdd);\n \n \tprotected void startFetcher(SplitFetcher<E, SplitT> fetcher) {\n-\t\texecutors.submit(new ThrowableCatchingRunnable(errorHandler, fetcher));\n+\t\texecutors.submit(fetcher);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQxOTg4Ng=="}, "originalCommit": {"oid": "100b67ca171766bec1ff561a66688471b24745be"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0MjgzOQ==", "bodyText": "@becketqin I see new code in SplitFetcher.run throwing exception after shutdownHook.run. Is there any specific reason where run splitReader.close after shutdownHook ? Or, in another word, does exception from splitReader.close should fail job ? I will do rebase to solve conflict, please take a took after rebasing.", "url": "https://github.com/apache/flink/pull/13776#discussion_r519442839", "createdAt": "2020-11-08T15:52:38Z", "author": {"login": "kezhuw"}, "path": "flink-connectors/flink-connector-base/src/main/java/org/apache/flink/connector/base/source/reader/fetcher/SplitFetcherManager.java", "diffHunk": "@@ -112,7 +111,7 @@ public void accept(Throwable t) {\n \tpublic abstract void addSplits(List<SplitT> splitsToAdd);\n \n \tprotected void startFetcher(SplitFetcher<E, SplitT> fetcher) {\n-\t\texecutors.submit(new ThrowableCatchingRunnable(errorHandler, fetcher));\n+\t\texecutors.submit(fetcher);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQxOTg4Ng=="}, "originalCommit": {"oid": "100b67ca171766bec1ff561a66688471b24745be"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUyNDk1Nw==", "bodyText": "@kezhuw Thanks for the explanation. Good point.", "url": "https://github.com/apache/flink/pull/13776#discussion_r519524957", "createdAt": "2020-11-09T02:44:22Z", "author": {"login": "becketqin"}, "path": "flink-connectors/flink-connector-base/src/main/java/org/apache/flink/connector/base/source/reader/fetcher/SplitFetcherManager.java", "diffHunk": "@@ -112,7 +111,7 @@ public void accept(Throwable t) {\n \tpublic abstract void addSplits(List<SplitT> splitsToAdd);\n \n \tprotected void startFetcher(SplitFetcher<E, SplitT> fetcher) {\n-\t\texecutors.submit(new ThrowableCatchingRunnable(errorHandler, fetcher));\n+\t\texecutors.submit(fetcher);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQxOTg4Ng=="}, "originalCommit": {"oid": "100b67ca171766bec1ff561a66688471b24745be"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4955, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}