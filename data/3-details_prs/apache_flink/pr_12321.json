{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNzMyMTU2", "number": 12321, "title": "[FLINK-17872][doc] Add document for writing Avro files with StreamingFileSink", "bodyText": "What is the purpose of the change\nThis PR add documents for the newly added Avro writers introduced in Flink-11395.\nBrief change log\n\n499e54c fixes the existing html error in the streaming file sink doc which makes readers unable to switch between Java and Scala codes.\n56bdc3a adds the docs for the Avro writers.\n\nVerifying this change\nThis change is a trivial work without any test coverage.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector:no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? not applicable", "createdAt": "2020-05-25T12:41:39Z", "url": "https://github.com/apache/flink/pull/12321", "merged": true, "mergeCommit": {"oid": "545a5ecea885c8df80f30692a945a511d0876e33"}, "closed": true, "closedAt": "2020-06-09T11:43:42Z", "author": {"login": "gaoyunhaii"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnkRegAFqTQyMzI4MzY4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpZzZ0gH2gAyNDIyNzMyMTU2OmU1NjM5NDgzMmI4ODljNDc5NmVkZjM2OWYzZjVkMTk4NzgxZDVkYmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMjgzNjg0", "url": "https://github.com/apache/flink/pull/12321#pullrequestreview-423283684", "createdAt": "2020-06-03T07:24:47Z", "commit": {"oid": "56bdc3a61f65cb30b48cf7f932520be02ebed734"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzoyNDo0N1rOGePRnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzoyNDo0N1rOGePRnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2MDczNQ==", "bodyText": "maybe \"For creating customized Avro writers, e.g. enabling compression, ...\" ?", "url": "https://github.com/apache/flink/pull/12321#discussion_r434360735", "createdAt": "2020-06-03T07:24:47Z", "author": {"login": "zhuzhurk"}, "path": "docs/dev/connectors/streamfile_sink.md", "diffHunk": "@@ -204,6 +205,65 @@ input.addSink(sink)\n </div>\n </div>\n \n+#### Avro format\n+\n+Flink also provides built-in support for writing data into Avro files. A list of convenience methods to create\n+Avro writer factories and their associated documentation can be found in the \n+[AvroWriters]({{ site.javadocs_baseurl }}/api/java/org/apache/flink/formats/avro/AvroWriters.html) class.\n+\n+For creating customized Avro writers like enabling compression, users need to create the `AvroWriterFactory`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56bdc3a61f65cb30b48cf7f932520be02ebed734"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMzA5NTU4", "url": "https://github.com/apache/flink/pull/12321#pullrequestreview-423309558", "createdAt": "2020-06-03T08:00:51Z", "commit": {"oid": "56bdc3a61f65cb30b48cf7f932520be02ebed734"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODowMDo1MVrOGeQgBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODowMDo1MVrOGeQgBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM4MDgwNg==", "bodyText": "Would it make sense to add an example on creating customized Avro writers?", "url": "https://github.com/apache/flink/pull/12321#discussion_r434380806", "createdAt": "2020-06-03T08:00:51Z", "author": {"login": "zhuzhurk"}, "path": "docs/dev/connectors/streamfile_sink.md", "diffHunk": "@@ -204,6 +205,65 @@ input.addSink(sink)\n </div>\n </div>\n \n+#### Avro format\n+\n+Flink also provides built-in support for writing data into Avro files. A list of convenience methods to create\n+Avro writer factories and their associated documentation can be found in the \n+[AvroWriters]({{ site.javadocs_baseurl }}/api/java/org/apache/flink/formats/avro/AvroWriters.html) class.\n+\n+For creating customized Avro writers like enabling compression, users need to create the `AvroWriterFactory`\n+with a custom implementation of the [AvroBuilder]({{ site.javadocs_baseurl }}/api/java/org/apache/flink/formats/avro/AvroBuilder.html) interface.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56bdc3a61f65cb30b48cf7f932520be02ebed734"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1OTI3MjE2", "url": "https://github.com/apache/flink/pull/12321#pullrequestreview-425927216", "createdAt": "2020-06-08T05:42:17Z", "commit": {"oid": "23a939d18a7e3b989e521963e0399b73c775165d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1OTI5ODAw", "url": "https://github.com/apache/flink/pull/12321#pullrequestreview-425929800", "createdAt": "2020-06-08T05:50:22Z", "commit": {"oid": "23a939d18a7e3b989e521963e0399b73c775165d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1OTMwNzcy", "url": "https://github.com/apache/flink/pull/12321#pullrequestreview-425930772", "createdAt": "2020-06-08T05:53:20Z", "commit": {"oid": "23a939d18a7e3b989e521963e0399b73c775165d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNTo1MzoyMFrOGgQAkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNTo1MzoyMFrOGgQAkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ2OTkwNQ==", "bodyText": "Better to use lambda, because lambda is serializable, but inner class depends on outer class.", "url": "https://github.com/apache/flink/pull/12321#discussion_r436469905", "createdAt": "2020-06-08T05:53:20Z", "author": {"login": "JingsongLi"}, "path": "docs/dev/connectors/streamfile_sink.md", "diffHunk": "@@ -204,6 +205,109 @@ input.addSink(sink)\n </div>\n </div>\n \n+#### Avro format\n+\n+Flink also provides built-in support for writing data into Avro files. A list of convenience methods to create\n+Avro writer factories and their associated documentation can be found in the \n+[AvroWriters]({{ site.javadocs_baseurl }}/api/java/org/apache/flink/formats/avro/AvroWriters.html) class.\n+\n+To use the Avro writers in your application you need to add the following dependency:\n+\n+{% highlight xml %}\n+<dependency>\n+  <groupId>org.apache.flink</groupId>\n+  <artifactId>flink-avro</artifactId>\n+  <version>{{ site.version }}</version>\n+</dependency>\n+{% endhighlight %}\n+\n+A StreamingFileSink that writes data to Avro files can be created like this:\n+\n+<div class=\"codetabs\" markdown=\"1\">\n+<div data-lang=\"java\" markdown=\"1\">\n+{% highlight java %}\n+import org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSink;\n+import org.apache.flink.formats.avro.AvroWriters;\n+import org.apache.avro.Schema;\n+\n+\n+Schema schema = ...;\n+DataStream<GenericRecord> stream = ...;\n+\n+final StreamingFileSink<GenericRecord> sink = StreamingFileSink\n+\t.forBulkFormat(outputBasePath, AvroWriters.forGenericRecord(schema))\n+\t.build();\n+\n+input.addSink(sink);\n+\n+{% endhighlight %}\n+</div>\n+<div data-lang=\"scala\" markdown=\"1\">\n+{% highlight scala %}\n+import org.apache.flink.streaming.api.functions.sink.filesystem.StreamingFileSink\n+import org.apache.flink.formats.avro.AvroWriters\n+import org.apache.avro.Schema\n+\n+val schema: Schema = ...\n+val input: DataStream[GenericRecord] = ...\n+\n+val sink: StreamingFileSink[GenericRecord] = StreamingFileSink\n+    .forBulkFormat(outputBasePath, AvroWriters.forGenericRecord(schema))\n+    .build()\n+\n+input.addSink(sink)\n+\n+{% endhighlight %}\n+</div>\n+</div>\n+\n+For creating customized Avro writers, e.g. enabling compression, users need to create the `AvroWriterFactory`\n+with a custom implementation of the [AvroBuilder]({{ site.javadocs_baseurl }}/api/java/org/apache/flink/formats/avro/AvroBuilder.html) interface:\n+\n+<div class=\"codetabs\" markdown=\"1\">\n+<div data-lang=\"java\" markdown=\"1\">\n+{% highlight java %}\n+AvroWriterFactory<?> factory = new AvroWriterFactory<>(new AvroBuilder<Address>() {\n+\t@Override\n+\tpublic DataFileWriter<Address> createWriter(OutputStream out) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23a939d18a7e3b989e521963e0399b73c775165d"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af9e843cca7e5fc94b85a9cf61359eb350a82fa5", "author": {"user": {"login": "gaoyunhaii", "name": "Yun Gao"}}, "url": "https://github.com/apache/flink/commit/af9e843cca7e5fc94b85a9cf61359eb350a82fa5", "committedDate": "2020-06-08T11:35:51Z", "message": "[FLINK-17872][docs] Add document for writing Avro files with StreamingFileSink"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17461cb077f242c89fbba19bb950d40f3beefe5d", "author": {"user": {"login": "gaoyunhaii", "name": "Yun Gao"}}, "url": "https://github.com/apache/flink/commit/17461cb077f242c89fbba19bb950d40f3beefe5d", "committedDate": "2020-06-08T11:35:51Z", "message": "Fix comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23a939d18a7e3b989e521963e0399b73c775165d", "author": {"user": {"login": "gaoyunhaii", "name": "Yun Gao"}}, "url": "https://github.com/apache/flink/commit/23a939d18a7e3b989e521963e0399b73c775165d", "committedDate": "2020-06-07T08:49:33Z", "message": "Fix comments"}, "afterCommit": {"oid": "17461cb077f242c89fbba19bb950d40f3beefe5d", "author": {"user": {"login": "gaoyunhaii", "name": "Yun Gao"}}, "url": "https://github.com/apache/flink/commit/17461cb077f242c89fbba19bb950d40f3beefe5d", "committedDate": "2020-06-08T11:35:51Z", "message": "Fix comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e56394832b889c4796edf369f3f5d198781d5dbd", "author": {"user": {"login": "gaoyunhaii", "name": "Yun Gao"}}, "url": "https://github.com/apache/flink/commit/e56394832b889c4796edf369f3f5d198781d5dbd", "committedDate": "2020-06-09T00:20:45Z", "message": "Replace with lambda"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4404, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}