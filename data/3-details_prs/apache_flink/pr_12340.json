{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMTU2MDAx", "number": 12340, "title": "[FLINK-17844][build] Enforce @PublicEvolving compatibility for minor versions", "bodyText": "This PR makes 2 changes to the create_release_branch release script:\n\n\nThe japicmp reference version is now automatically updated.\n\nFor a major release x.y.0 the reference version is x.y-1.0\n\n1.10.0 checks against 1.9.0\n\n\nFor a minor release x.y.z the reference version is x.y.z-1\n\n1.10.1 checks against 1.10.0\n\n\n\n\n\nEnforce @PublicEvolving compatibility for minor versions\n\nremove japicmp exclusion\nun-comment the newly added japicmp inclusion", "createdAt": "2020-05-26T11:47:30Z", "url": "https://github.com/apache/flink/pull/12340", "merged": true, "mergeCommit": {"oid": "5fc54bb4d056130c3c666859d7980d544eb82e64"}, "closed": true, "closedAt": "2020-05-29T07:24:40Z", "author": {"login": "zentol"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclGH4RgFqTQxODM3NjQ4MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcl9Qt-gBqjMzODU5NjE5NjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4Mzc2NDgx", "url": "https://github.com/apache/flink/pull/12340#pullrequestreview-418376481", "createdAt": "2020-05-26T14:49:40Z", "commit": {"oid": "4c67c51b003823e1abd4373963f7d1ea53e829b6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDo0OTo0MFrOGah7PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTowNDo0OFrOGain1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3MTk5Ng==", "bodyText": "Isn't \"major.minor.patch\" the \"official\" terminology for versions?", "url": "https://github.com/apache/flink/pull/12340#discussion_r430471996", "createdAt": "2020-05-26T14:49:40Z", "author": {"login": "rmetzger"}, "path": "tools/releasing/create_release_branch.sh", "diffHunk": "@@ -59,6 +59,22 @@ git checkout -b $target_branch\n #change version in all pom files\n find . -name 'pom.xml' -type f -exec perl -pi -e 's#<version>(.*)'$OLD_VERSION'(.*)</version>#<version>${1}'$NEW_VERSION'${2}</version>#' {} \\;\n \n+ultra=$(echo \"${NEW_VERSION}\" | perl -p -e 's#(\\d+)\\.\\d+\\.\\d+#$1#')\n+major=$(echo \"${NEW_VERSION}\" | perl -p -e 's#\\d+\\.(\\d+)\\.\\d+#$1#')\n+minor=$(echo \"${NEW_VERSION}\" | perl -p -e 's#\\d+\\.\\d+\\.(\\d+)#$1#')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c67c51b003823e1abd4373963f7d1ea53e829b6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ4MjIxMg==", "bodyText": "Shouldn't these changes go into releasing/update_branch_version.sh? This file here seems to be used for preparing release candidate branches. (According to https://cwiki.apache.org/confluence/display/FLINK/Creating+a+Flink+Release#CreatingaFlinkRelease-Createareleasebranch)", "url": "https://github.com/apache/flink/pull/12340#discussion_r430482212", "createdAt": "2020-05-26T15:03:09Z", "author": {"login": "rmetzger"}, "path": "tools/releasing/create_release_branch.sh", "diffHunk": "@@ -59,6 +59,22 @@ git checkout -b $target_branch\n #change version in all pom files\n find . -name 'pom.xml' -type f -exec perl -pi -e 's#<version>(.*)'$OLD_VERSION'(.*)</version>#<version>${1}'$NEW_VERSION'${2}</version>#' {} \\;\n \n+ultra=$(echo \"${NEW_VERSION}\" | perl -p -e 's#(\\d+)\\.\\d+\\.\\d+#$1#')\n+major=$(echo \"${NEW_VERSION}\" | perl -p -e 's#\\d+\\.(\\d+)\\.\\d+#$1#')\n+minor=$(echo \"${NEW_VERSION}\" | perl -p -e 's#\\d+\\.\\d+\\.(\\d+)#$1#')\n+\n+# update japicmp configuration\n+if [[ ${minor} == \"0\" ]]; then\n+  # set japicmp reference version to previous major version\n+  perl -pi -e 's#(<japicmp.referenceVersion>).*(</japicmp.referenceVersion>)#${1}'${ultra}.$((${major}-1)).0'${2}#' pom.xml\n+else\n+  # set japicmp reference version to previous minor version\n+  perl -pi -e 's#(<japicmp.referenceVersion>).*(</japicmp.referenceVersion>)#${1}'${ultra}.${major}.$(($minor - 1))'${2}#' pom.xml\n+  # harden compatibility constraints for minor versions\n+  perl -pi -e 's#<!--(<include>\\@org.apache.flink.annotation.PublicEvolving</include>)-->#${1}#' pom.xml\n+  perl -pi -e 's#\\t+<exclude>\\@org.apache.flink.annotation.PublicEvolving.*\\n##' pom.xml\n+fi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c67c51b003823e1abd4373963f7d1ea53e829b6"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ4MzQxNA==", "bodyText": "Maybe update the comment that this will be done automatically by a script?", "url": "https://github.com/apache/flink/pull/12340#discussion_r430483414", "createdAt": "2020-05-26T15:04:48Z", "author": {"login": "rmetzger"}, "path": "pom.xml", "diffHunk": "@@ -1961,6 +1961,8 @@ under the License.\n \t\t\t\t\t\t\t<onlyModified>true</onlyModified>\n \t\t\t\t\t\t\t<includes>\n \t\t\t\t\t\t\t\t<include>@org.apache.flink.annotation.Public</include>\n+\t\t\t\t\t\t\t\t<!-- The following line must be un-commented for minor releases-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c67c51b003823e1abd4373963f7d1ea53e829b6"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3a0dab10d3615b52001b02e3b5143274d0ddb08", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/b3a0dab10d3615b52001b02e3b5143274d0ddb08", "committedDate": "2020-05-27T12:19:42Z", "message": "tmp"}, "afterCommit": {"oid": "122bae66113d7f2430c2568d594d39e38fe22585", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/122bae66113d7f2430c2568d594d39e38fe22585", "committedDate": "2020-05-27T12:54:36Z", "message": "rev2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NTcxNjIy", "url": "https://github.com/apache/flink/pull/12340#pullrequestreview-419571622", "createdAt": "2020-05-27T20:10:17Z", "commit": {"oid": "122bae66113d7f2430c2568d594d39e38fe22585"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMDoxMDoxOFrOGbbY9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMDoyNzo1MVrOGbb6VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxMzQ5NQ==", "bodyText": "when do we have a branch name containing \"-SNAPSHOT\"? Shouldn't this be a check on the version set in the ./pom.xml ?", "url": "https://github.com/apache/flink/pull/12340#discussion_r431413495", "createdAt": "2020-05-27T20:10:18Z", "author": {"login": "rmetzger"}, "path": "tools/releasing/update_japicmp_configuration.sh", "diffHunk": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+if [ -z \"${NEW_VERSION}\" ]; then\n+    echo \"NEW_VERSION was not set.\"\n+    exit 1\n+fi\n+\n+CURR_DIR=`pwd`\n+if [[ `basename $CURR_DIR` != \"tools\" ]] ; then\n+  echo \"You have to call the script from the tools/ dir\"\n+  exit 1\n+fi\n+\n+# Idealized use-cases:\n+# Scenario A) New major release X.Y.0\n+#   Premise:\n+#     There is a master branch with a version X.Y-SNAPSHOT, with a japicmp reference version of X.(Y-1).0 .\n+#   Release flow:\n+#     - update the master to X.(Y+1)-SNAPSHOT, but keep the reference version intact since X.Y.0 is not released (yet)\n+#     - create X.Y-SNAPSHOT branch, but keep the reference version intact since X.Y.0 is not released (yet)\n+#     - release X.Y.0\n+#     - update the japicmp reference version of both master and X.Y-SNAPSHOT to X.Y.0\n+#     - enable stronger compatibility constraints for X.Y-SNAPSHOT to ensure compatibility for PublicEvolving\n+# Scenario B) New minor release X.Y.Z\n+#   Premise:\n+#     There is a snapshot branch with a version X.Y-SNAPSHOT, with a japicmp reference version of X.Y.(Z-1)\n+#   Release flow:\n+#     - create X.Y.Z-rc branch\n+#     - update the japicmp reference version of X.Y.Z to X.Y.(Z-1)\n+#     - release X.Y.Z\n+#     - update the japicmp reference version of X.Y-SNAPSHOT to X.Y.Z\n+\n+POM=../pom.xml\n+function enable_public_evolving_compatibility_checks() {\n+  perl -pi -e 's#<!--(<include>\\@org.apache.flink.annotation.PublicEvolving</include>)-->#${1}#' ${POM}\n+  perl -pi -e 's#\\t+<exclude>\\@org.apache.flink.annotation.PublicEvolving.*\\n##' ${POM}\n+}\n+\n+function set_japicmp_reference_version() {\n+  local version=$1\n+\n+  perl -pi -e 's#(<japicmp.referenceVersion>).*(</japicmp.referenceVersion>)#${1}'${version}'${2}#' ${POM}\n+}\n+\n+current_branch=$(git rev-parse --abbrev-ref HEAD)\n+\n+if [[ ${current_branch} =~ -rc ]]; then\n+  # release branch\n+  version_prefix=$(echo \"${NEW_VERSION}\" | perl -p -e 's#(\\d+\\.\\d+)\\.\\d+#$1#')\n+  minor=$(echo \"${NEW_VERSION}\" | perl -p -e 's#\\d+\\.\\d+\\.(\\d+)#$1#')\n+  if ! [[ ${minor} == \"0\" ]]; then\n+    set_japicmp_reference_version ${version_prefix}.$((minor - 1))\n+    # this is a safeguard in case the manual step of enabling checks after the X.Y.0 release was forgotten\n+    enable_public_evolving_compatibility_checks\n+  fi\n+elif [[ ${current_branch} =~ -SNAPSHOT ]]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "122bae66113d7f2430c2568d594d39e38fe22585"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQyMTUzOA==", "bodyText": "This case (and the previous one) require a manual invocation of update_japicmp_configuration.sh by the RM, right? (I assume you'll update the wiki?)", "url": "https://github.com/apache/flink/pull/12340#discussion_r431421538", "createdAt": "2020-05-27T20:26:55Z", "author": {"login": "rmetzger"}, "path": "tools/releasing/update_japicmp_configuration.sh", "diffHunk": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+if [ -z \"${NEW_VERSION}\" ]; then\n+    echo \"NEW_VERSION was not set.\"\n+    exit 1\n+fi\n+\n+CURR_DIR=`pwd`\n+if [[ `basename $CURR_DIR` != \"tools\" ]] ; then\n+  echo \"You have to call the script from the tools/ dir\"\n+  exit 1\n+fi\n+\n+# Idealized use-cases:\n+# Scenario A) New major release X.Y.0\n+#   Premise:\n+#     There is a master branch with a version X.Y-SNAPSHOT, with a japicmp reference version of X.(Y-1).0 .\n+#   Release flow:\n+#     - update the master to X.(Y+1)-SNAPSHOT, but keep the reference version intact since X.Y.0 is not released (yet)\n+#     - create X.Y-SNAPSHOT branch, but keep the reference version intact since X.Y.0 is not released (yet)\n+#     - release X.Y.0\n+#     - update the japicmp reference version of both master and X.Y-SNAPSHOT to X.Y.0\n+#     - enable stronger compatibility constraints for X.Y-SNAPSHOT to ensure compatibility for PublicEvolving\n+# Scenario B) New minor release X.Y.Z\n+#   Premise:\n+#     There is a snapshot branch with a version X.Y-SNAPSHOT, with a japicmp reference version of X.Y.(Z-1)\n+#   Release flow:\n+#     - create X.Y.Z-rc branch\n+#     - update the japicmp reference version of X.Y.Z to X.Y.(Z-1)\n+#     - release X.Y.Z\n+#     - update the japicmp reference version of X.Y-SNAPSHOT to X.Y.Z\n+\n+POM=../pom.xml\n+function enable_public_evolving_compatibility_checks() {\n+  perl -pi -e 's#<!--(<include>\\@org.apache.flink.annotation.PublicEvolving</include>)-->#${1}#' ${POM}\n+  perl -pi -e 's#\\t+<exclude>\\@org.apache.flink.annotation.PublicEvolving.*\\n##' ${POM}\n+}\n+\n+function set_japicmp_reference_version() {\n+  local version=$1\n+\n+  perl -pi -e 's#(<japicmp.referenceVersion>).*(</japicmp.referenceVersion>)#${1}'${version}'${2}#' ${POM}\n+}\n+\n+current_branch=$(git rev-parse --abbrev-ref HEAD)\n+\n+if [[ ${current_branch} =~ -rc ]]; then\n+  # release branch\n+  version_prefix=$(echo \"${NEW_VERSION}\" | perl -p -e 's#(\\d+\\.\\d+)\\.\\d+#$1#')\n+  minor=$(echo \"${NEW_VERSION}\" | perl -p -e 's#\\d+\\.\\d+\\.(\\d+)#$1#')\n+  if ! [[ ${minor} == \"0\" ]]; then\n+    set_japicmp_reference_version ${version_prefix}.$((minor - 1))\n+    # this is a safeguard in case the manual step of enabling checks after the X.Y.0 release was forgotten\n+    enable_public_evolving_compatibility_checks\n+  fi\n+elif [[ ${current_branch} =~ -SNAPSHOT ]]; then\n+  # snapshot branch\n+  set_japicmp_reference_version ${NEW_VERSION}\n+  enable_public_evolving_compatibility_checks\n+elif [[ ${current_branch} =~ ^master$ ]]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "122bae66113d7f2430c2568d594d39e38fe22585"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQyMjAzNg==", "bodyText": "for this case, the RM doesn't need to invoke this script, because it is called from the create_release_branch.sh script, right?", "url": "https://github.com/apache/flink/pull/12340#discussion_r431422036", "createdAt": "2020-05-27T20:27:51Z", "author": {"login": "rmetzger"}, "path": "tools/releasing/update_japicmp_configuration.sh", "diffHunk": "@@ -0,0 +1,83 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+if [ -z \"${NEW_VERSION}\" ]; then\n+    echo \"NEW_VERSION was not set.\"\n+    exit 1\n+fi\n+\n+CURR_DIR=`pwd`\n+if [[ `basename $CURR_DIR` != \"tools\" ]] ; then\n+  echo \"You have to call the script from the tools/ dir\"\n+  exit 1\n+fi\n+\n+# Idealized use-cases:\n+# Scenario A) New major release X.Y.0\n+#   Premise:\n+#     There is a master branch with a version X.Y-SNAPSHOT, with a japicmp reference version of X.(Y-1).0 .\n+#   Release flow:\n+#     - update the master to X.(Y+1)-SNAPSHOT, but keep the reference version intact since X.Y.0 is not released (yet)\n+#     - create X.Y-SNAPSHOT branch, but keep the reference version intact since X.Y.0 is not released (yet)\n+#     - release X.Y.0\n+#     - update the japicmp reference version of both master and X.Y-SNAPSHOT to X.Y.0\n+#     - enable stronger compatibility constraints for X.Y-SNAPSHOT to ensure compatibility for PublicEvolving\n+# Scenario B) New minor release X.Y.Z\n+#   Premise:\n+#     There is a snapshot branch with a version X.Y-SNAPSHOT, with a japicmp reference version of X.Y.(Z-1)\n+#   Release flow:\n+#     - create X.Y.Z-rc branch\n+#     - update the japicmp reference version of X.Y.Z to X.Y.(Z-1)\n+#     - release X.Y.Z\n+#     - update the japicmp reference version of X.Y-SNAPSHOT to X.Y.Z\n+\n+POM=../pom.xml\n+function enable_public_evolving_compatibility_checks() {\n+  perl -pi -e 's#<!--(<include>\\@org.apache.flink.annotation.PublicEvolving</include>)-->#${1}#' ${POM}\n+  perl -pi -e 's#\\t+<exclude>\\@org.apache.flink.annotation.PublicEvolving.*\\n##' ${POM}\n+}\n+\n+function set_japicmp_reference_version() {\n+  local version=$1\n+\n+  perl -pi -e 's#(<japicmp.referenceVersion>).*(</japicmp.referenceVersion>)#${1}'${version}'${2}#' ${POM}\n+}\n+\n+current_branch=$(git rev-parse --abbrev-ref HEAD)\n+\n+if [[ ${current_branch} =~ -rc ]]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "122bae66113d7f2430c2568d594d39e38fe22585"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5OTkxNTg2", "url": "https://github.com/apache/flink/pull/12340#pullrequestreview-419991586", "createdAt": "2020-05-28T10:50:51Z", "commit": {"oid": "4c519b3424be300a5d0462a2f7d11e822a28afc7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07e80c0c14c3ac3358423e4e22788a0de2c0e39a", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/07e80c0c14c3ac3358423e4e22788a0de2c0e39a", "committedDate": "2020-05-29T07:22:50Z", "message": "[FLINK-17844][build] Add tooling for updating japicmp configuration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4c519b3424be300a5d0462a2f7d11e822a28afc7", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/4c519b3424be300a5d0462a2f7d11e822a28afc7", "committedDate": "2020-05-28T10:19:51Z", "message": "use release- as snapshot branch suffix"}, "afterCommit": {"oid": "07e80c0c14c3ac3358423e4e22788a0de2c0e39a", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/07e80c0c14c3ac3358423e4e22788a0de2c0e39a", "committedDate": "2020-05-29T07:22:50Z", "message": "[FLINK-17844][build] Add tooling for updating japicmp configuration"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4448, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}