{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzODM5Nzg2", "number": 14451, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzowNDo1MVrOFIJpww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwOToxMzo0M1rOFJefTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDkxMDc1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner/src/test/scala/org/apache/flink/table/calcite/FlinkTypeFactoryTest.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxMzowNDo1MVrOIJ6f0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwNzowMToxMlrOIKW2Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI2NjUxNA==", "bodyText": "I find the test does not cover the changes. I revert the changes and run the method, all tests are success.", "url": "https://github.com/apache/flink/pull/14451#discussion_r547266514", "createdAt": "2020-12-22T13:04:51Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner/src/test/scala/org/apache/flink/table/calcite/FlinkTypeFactoryTest.scala", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.apache.flink.table.calcite\n+\n+import org.apache.flink.api.scala.typeutils.Types\n+\n+import org.apache.calcite.sql.`type`.SqlTypeName\n+import org.junit.Assert.{assertFalse, assertTrue}\n+import org.junit.Test\n+\n+/** Test cases for [[FlinkTypeFactory]]. */\n+class FlinkTypeFactoryTest {\n+\n+  @Test\n+  def testCanonizeType(): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e0d0bf7183c4a4392efe08ad1adcebd36103cc"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzczMTAyMw==", "bodyText": "Thanks for the check, i have updated the test cases.", "url": "https://github.com/apache/flink/pull/14451#discussion_r547731023", "createdAt": "2020-12-23T07:01:12Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner/src/test/scala/org/apache/flink/table/calcite/FlinkTypeFactoryTest.scala", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.apache.flink.table.calcite\n+\n+import org.apache.flink.api.scala.typeutils.Types\n+\n+import org.apache.calcite.sql.`type`.SqlTypeName\n+import org.junit.Assert.{assertFalse, assertTrue}\n+import org.junit.Test\n+\n+/** Test cases for [[FlinkTypeFactory]]. */\n+class FlinkTypeFactoryTest {\n+\n+  @Test\n+  def testCanonizeType(): Unit = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzI2NjUxNA=="}, "originalCommit": {"oid": "d4e0d0bf7183c4a4392efe08ad1adcebd36103cc"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NzkyOTUzOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/calcite/FlinkTypeFactoryTest.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMzowNTozMFrOIK9VRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMzowNTozMFrOIK9VRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM2MTU0Mg==", "bodyText": "should use eq instead of == for object equivalence in Scala", "url": "https://github.com/apache/flink/pull/14451#discussion_r548361542", "createdAt": "2020-12-24T03:05:30Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/calcite/FlinkTypeFactoryTest.scala", "diffHunk": "@@ -91,4 +94,16 @@ class FlinkTypeFactoryTest {\n     Assert.assertEquals(new DecimalType(38, 5), FlinkTypeSystem.inferAggSumType(5))\n     Assert.assertEquals(new DecimalType(false, 38, 6), FlinkTypeSystem.inferAggAvgType(5))\n   }\n+\n+  @Test\n+  def testCanonizeType(): Unit = {\n+    val typeFactory = FlinkTypeFactory.INSTANCE\n+    val genericTypeInfo = Types.GENERIC(classOf[TestClass])\n+    val genericRelType = typeFactory.createFieldTypeFromLogicalType(new TypeInformationRawType(genericTypeInfo))\n+    val genericRelType2 = typeFactory.createFieldTypeFromLogicalType(new TypeInformationRawType(genericTypeInfo))\n+\n+    assertTrue(\"The type expect to be canonized\", genericRelType == genericRelType2)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c747527ef92f6a6b9cbedc907d4acaf04d774192"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NzkzMDk1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner/src/main/scala/org/apache/flink/table/plan/schema/GenericRelDataType.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMzowNjowMlrOIK9V8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMzowNjowMlrOIK9V8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM2MTcxMg==", "bodyText": "nit: use toString() ?", "url": "https://github.com/apache/flink/pull/14451#discussion_r548361712", "createdAt": "2020-12-24T03:06:02Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner/src/main/scala/org/apache/flink/table/plan/schema/GenericRelDataType.scala", "diffHunk": "@@ -55,4 +53,10 @@ class GenericRelDataType(\n   override def hashCode(): Int = {\n     typeInfo.hashCode()\n   }\n+\n+  override def isNullable: Boolean = nullable\n+\n+  override def generateTypeString(sb: java.lang.StringBuilder, withDetail: Boolean): Unit = {\n+    sb.append(s\"ANY($typeInfo)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c747527ef92f6a6b9cbedc907d4acaf04d774192"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NzkzMTM3OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner/src/main/scala/org/apache/flink/table/plan/schema/MapRelDataType.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMzowNjoxN1rOIK9WKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMzowNjoxN1rOIK9WKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM2MTc3MQ==", "bodyText": "ditto", "url": "https://github.com/apache/flink/pull/14451#discussion_r548361771", "createdAt": "2020-12-24T03:06:17Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner/src/main/scala/org/apache/flink/table/plan/schema/MapRelDataType.scala", "diffHunk": "@@ -46,4 +46,7 @@ class MapRelDataType(\n     Objects.hashCode(keyType, valueType)\n   }\n \n+  override def generateTypeString(sb: java.lang.StringBuilder, withDetail: Boolean): Unit = {\n+    sb.append(s\"MAP($typeInfo)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c747527ef92f6a6b9cbedc907d4acaf04d774192"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDgxMDM5OnYy", "diffSide": "LEFT", "path": "flink-table/flink-table-planner/src/main/scala/org/apache/flink/table/plan/schema/MapRelDataType.scala", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwOToxMzo0M1rOIL0-tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwMTozNTozMFrOIMFHEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI3MzI3MQ==", "bodyText": "the change is reverted ?", "url": "https://github.com/apache/flink/pull/14451#discussion_r549273271", "createdAt": "2020-12-28T09:13:43Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner/src/main/scala/org/apache/flink/table/plan/schema/MapRelDataType.scala", "diffHunk": "@@ -45,5 +45,4 @@ class MapRelDataType(\n   override def hashCode(): Int = {\n     Objects.hashCode(keyType, valueType)\n   }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3976f5cf20bd5a78289cf388c830a1739992bd0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI3NTY1MA==", "bodyText": "Yes, the map type has nullability issue for its nested key and values, because currently we create the map type and ignore its key/value nullability (both of them are from the type information with nullability true as default).", "url": "https://github.com/apache/flink/pull/14451#discussion_r549275650", "createdAt": "2020-12-28T09:20:50Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner/src/main/scala/org/apache/flink/table/plan/schema/MapRelDataType.scala", "diffHunk": "@@ -45,5 +45,4 @@ class MapRelDataType(\n   override def hashCode(): Int = {\n     Objects.hashCode(keyType, valueType)\n   }\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI3MzI3MQ=="}, "originalCommit": {"oid": "b3976f5cf20bd5a78289cf388c830a1739992bd0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUzNzU1Mg==", "bodyText": "related issue: https://issues.apache.org/jira/browse/FLINK-20785", "url": "https://github.com/apache/flink/pull/14451#discussion_r549537552", "createdAt": "2020-12-29T01:35:30Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner/src/main/scala/org/apache/flink/table/plan/schema/MapRelDataType.scala", "diffHunk": "@@ -45,5 +45,4 @@ class MapRelDataType(\n   override def hashCode(): Int = {\n     Objects.hashCode(keyType, valueType)\n   }\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI3MzI3MQ=="}, "originalCommit": {"oid": "b3976f5cf20bd5a78289cf388c830a1739992bd0"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4563, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}