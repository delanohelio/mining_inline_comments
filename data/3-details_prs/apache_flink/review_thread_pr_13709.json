{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2OTMxODI1", "number": 13709, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNjowNDoyMVrOEwFb0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMTo0ODozOFrOEwNRGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODU2MTQ2OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNjowNDoyMVrOHlbg7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNjowNDoyMVrOHlbg7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAxMDE1Nw==", "bodyText": "Also log the count of \"All checkpoints\" ?", "url": "https://github.com/apache/flink/pull/13709#discussion_r509010157", "createdAt": "2020-10-21T06:04:21Z", "author": {"login": "Jiayi-Liao"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java", "diffHunk": "@@ -143,6 +145,10 @@ public void recover() throws Exception {\n \t\tint numberOfInitialCheckpoints = initialCheckpoints.size();\n \n \t\tLOG.info(\"Found {} checkpoints in ZooKeeper.\", numberOfInitialCheckpoints);\n+\t\tif (haveAllDownloaded(initialCheckpoints)) {\n+\t\t\tLOG.info(\"All checkpoints found are already downloaded.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14f7ba792a5ff15a1e6c2ca8cae93c7f3c63fe7c"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4OTgzMTA0OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStoreTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMTo0NDo0OVrOHlnrxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzoxNDo0MVrOHlrMTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIwOTU0Mw==", "bodyText": "Could we reuse ExpectedTestException from runtime testutils package?", "url": "https://github.com/apache/flink/pull/13709#discussion_r509209543", "createdAt": "2020-10-21T11:44:49Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStoreTest.java", "diffHunk": "@@ -58,6 +66,54 @@ public void testPathConversion() {\n \t\tassertEquals(checkpointId, ZooKeeperCompletedCheckpointStore.pathToCheckpointId(path));\n \t}\n \n+\tprivate static class TestException extends RuntimeException{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6924cfd9a0a8172e3e1ef47649936046163ac2da"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NzAyMQ==", "bodyText": "I searched for suitable TestException and missed ExpectedTestException :)\nWill use it, thanks!", "url": "https://github.com/apache/flink/pull/13709#discussion_r509267021", "createdAt": "2020-10-21T13:14:41Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStoreTest.java", "diffHunk": "@@ -58,6 +66,54 @@ public void testPathConversion() {\n \t\tassertEquals(checkpointId, ZooKeeperCompletedCheckpointStore.pathToCheckpointId(path));\n \t}\n \n+\tprivate static class TestException extends RuntimeException{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIwOTU0Mw=="}, "originalCommit": {"oid": "6924cfd9a0a8172e3e1ef47649936046163ac2da"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4OTg0NDcyOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMTo0ODozOFrOHln0Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOToyNzozM1rOHmABmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIxMTY4Mw==", "bodyText": "What happens if all but one checkpoint have been downloaded? Would it download all of them or just the missing one?\nIf the former, I'd modify this method to return all missing checkpoints instead.", "url": "https://github.com/apache/flink/pull/13709#discussion_r509211683", "createdAt": "2020-10-21T11:48:38Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java", "diffHunk": "@@ -143,6 +145,10 @@ public void recover() throws Exception {\n \t\tint numberOfInitialCheckpoints = initialCheckpoints.size();\n \n \t\tLOG.info(\"Found {} checkpoints in ZooKeeper.\", numberOfInitialCheckpoints);\n+\t\tif (haveAllDownloaded(initialCheckpoints)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6af74f96aa6de790a7d28afd6d438ed8959da4be"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NTY5NQ==", "bodyText": "Yes, if at least one checkpoint is missing (or some extra checkpoints exist) it will re-download initialCheckpoints.\nIt's quite a sensitive part affecting correctness so I think it's better to keep it as simple as possible and not optimize further.\nWith that in mind, I think the only use of returning missing checkpoints would be to log them.\nIs this what you propose?", "url": "https://github.com/apache/flink/pull/13709#discussion_r509265695", "createdAt": "2020-10-21T13:12:50Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java", "diffHunk": "@@ -143,6 +145,10 @@ public void recover() throws Exception {\n \t\tint numberOfInitialCheckpoints = initialCheckpoints.size();\n \n \t\tLOG.info(\"Found {} checkpoints in ZooKeeper.\", numberOfInitialCheckpoints);\n+\t\tif (haveAllDownloaded(initialCheckpoints)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIxMTY4Mw=="}, "originalCommit": {"oid": "6af74f96aa6de790a7d28afd6d438ed8959da4be"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwODM0Nw==", "bodyText": "I was thinking of optimization, but I understand your argument.", "url": "https://github.com/apache/flink/pull/13709#discussion_r509608347", "createdAt": "2020-10-21T19:27:33Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/ZooKeeperCompletedCheckpointStore.java", "diffHunk": "@@ -143,6 +145,10 @@ public void recover() throws Exception {\n \t\tint numberOfInitialCheckpoints = initialCheckpoints.size();\n \n \t\tLOG.info(\"Found {} checkpoints in ZooKeeper.\", numberOfInitialCheckpoints);\n+\t\tif (haveAllDownloaded(initialCheckpoints)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTIxMTY4Mw=="}, "originalCommit": {"oid": "6af74f96aa6de790a7d28afd6d438ed8959da4be"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 44, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}