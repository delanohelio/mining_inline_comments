{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNjcwMTEw", "number": 11011, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNjo0NTo1OVrODc3zew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNjo0NTo1OVrODc3zew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjAxMDE5OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/utils/KeySelectorUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNjo0NTo1OVrOFlJiOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwNjo0NTo1OVrOFlJiOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ5Nzg1MQ==", "bodyText": "rowType.toRowType()", "url": "https://github.com/apache/flink/pull/11011#discussion_r374497851", "createdAt": "2020-02-04T06:45:59Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/utils/KeySelectorUtil.java", "diffHunk": "@@ -44,20 +44,20 @@\n \tpublic static BaseRowKeySelector getBaseRowSelector(int[] keyFields, BaseRowTypeInfo rowType) {\n \t\tif (keyFields.length > 0) {\n \t\t\tLogicalType[] inputFieldTypes = rowType.getLogicalTypes();\n-\t\t\tString[] inputFieldNames = rowType.getFieldNames();\n \t\t\tLogicalType[] keyFieldTypes = new LogicalType[keyFields.length];\n-\t\t\tString[] keyFieldNames = new String[keyFields.length];\n \t\t\tfor (int i = 0; i < keyFields.length; ++i) {\n \t\t\t\tkeyFieldTypes[i] = inputFieldTypes[keyFields[i]];\n-\t\t\t\tkeyFieldNames[i] = inputFieldNames[keyFields[i]];\n \t\t\t}\n-\t\t\tRowType returnType = RowType.of(keyFieldTypes, keyFieldNames);\n+\t\t\t// do not provide field names for the result key type,\n+\t\t\t// because we may have duplicate key fields and the field names may conflict\n+\t\t\tRowType returnType = RowType.of(keyFieldTypes);\n \t\t\tRowType inputType = RowType.of(inputFieldTypes, rowType.getFieldNames());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0a75123cffb0bef0a2d155f52d793ee3f6804c6"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1183, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}