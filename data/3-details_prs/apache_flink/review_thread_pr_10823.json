{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMzI3MDgy", "number": 10823, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzoyNDoyMlrODXhLrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwMzoxODoxNVrODZBiqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTg3NTAxOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/RankITCase.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzoyNDoyMlrOFc2tCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNDozMjoxNVrOFdtG3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgwMDcxNQ==", "bodyText": "Could you use testTopNWithGroupByAvgWithoutRowNumber to verify this which already have a meaningful testing data?", "url": "https://github.com/apache/flink/pull/10823#discussion_r365800715", "createdAt": "2020-01-13T13:24:22Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/RankITCase.scala", "diffHunk": "@@ -1311,4 +1311,49 @@ class RankITCase(mode: StateBackendMode) extends StreamingWithStateTestBase(mode\n     assertEquals(expected2.sorted, sink2.getRetractResults.sorted)\n   }\n \n+  @Test\n+  def testRetractRank(): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98b6f5aa1f7623e1aba1d1531a0a2973dbdc5873"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5MjA2Mg==", "bodyText": "done", "url": "https://github.com/apache/flink/pull/10823#discussion_r366692062", "createdAt": "2020-01-15T04:32:15Z", "author": {"login": "beyond1920"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/stream/sql/RankITCase.scala", "diffHunk": "@@ -1311,4 +1311,49 @@ class RankITCase(mode: StateBackendMode) extends StreamingWithStateTestBase(mode\n     assertEquals(expected2.sorted, sink2.getRetractResults.sorted)\n   }\n \n+  @Test\n+  def testRetractRank(): Unit = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgwMDcxNQ=="}, "originalCommit": {"oid": "98b6f5aa1f7623e1aba1d1531a0a2973dbdc5873"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTg5NDU5OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-runtime-blink/src/test/java/org/apache/flink/table/runtime/operators/rank/RetractableTopNFunctionTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzozMDozN1rOFc24cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNDozMTo1OFrOFdtGug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgwMzYzMg==", "bodyText": "We should emit delete/retract record first, then emit accumulate record. Otherwise, there might be some problems, e.g. user may see instantly incorrect results (top3 but see top4 at some point of time).", "url": "https://github.com/apache/flink/pull/10823#discussion_r365803632", "createdAt": "2020-01-13T13:30:37Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-runtime-blink/src/test/java/org/apache/flink/table/runtime/operators/rank/RetractableTopNFunctionTest.java", "diffHunk": "@@ -209,12 +301,12 @@ public void testDisableGenerateRetraction() throws Exception {\n \t\tList<Object> expectedOutput = new ArrayList<>();\n \t\texpectedOutput.add(record(\"book\", 1L, 12));\n \t\texpectedOutput.add(record(\"book\", 2L, 19));\n-\t\texpectedOutput.add(record(\"book\", 1L, 12));\n \t\texpectedOutput.add(record(\"book\", 4L, 11));\n+\t\texpectedOutput.add(deleteRecord(\"book\", 2L, 19));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98b6f5aa1f7623e1aba1d1531a0a2973dbdc5873"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5MjAyNg==", "bodyText": "make sense.", "url": "https://github.com/apache/flink/pull/10823#discussion_r366692026", "createdAt": "2020-01-15T04:31:58Z", "author": {"login": "beyond1920"}, "path": "flink-table/flink-table-runtime-blink/src/test/java/org/apache/flink/table/runtime/operators/rank/RetractableTopNFunctionTest.java", "diffHunk": "@@ -209,12 +301,12 @@ public void testDisableGenerateRetraction() throws Exception {\n \t\tList<Object> expectedOutput = new ArrayList<>();\n \t\texpectedOutput.add(record(\"book\", 1L, 12));\n \t\texpectedOutput.add(record(\"book\", 2L, 19));\n-\t\texpectedOutput.add(record(\"book\", 1L, 12));\n \t\texpectedOutput.add(record(\"book\", 4L, 11));\n+\t\texpectedOutput.add(deleteRecord(\"book\", 2L, 19));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgwMzYzMg=="}, "originalCommit": {"oid": "98b6f5aa1f7623e1aba1d1531a0a2973dbdc5873"}, "originalPosition": 185}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTY2MjUxOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/RetractableTopNFunction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwMzoxODoxNVrOFfM9VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwMzoxODoxNVrOFfM9VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI2MjQ4NQ==", "bodyText": "Could you add some comments on this? IIUC, this is for padding the last entry because we retract a entry from the top-n.\nBesides, could you improve the local field name of tmpRank? It's not easy to understand what the rank it is.", "url": "https://github.com/apache/flink/pull/10823#discussion_r368262485", "createdAt": "2020-01-19T03:18:15Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/RetractableTopNFunction.java", "diffHunk": "@@ -374,10 +381,10 @@ private void retractRecordWithoutRowNumber(\n \t\t\t} else if (findsSortKey) {\n \t\t\t\tlong count = entry.getValue();\n \t\t\t\tlong tmpRank = curRank + count;\n-\t\t\t\tif (isInRankEnd(tmpRank)) {\n+\t\t\t\tif (tmpRank < rankEnd) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c57927e992beddecbb3eb93d71919b08abc469a7"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1193, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}