{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NTMzMTc4", "number": 12053, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwOToxNDo0NFrOD62MlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwOToxNTo1NVrOD62M8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDMxOTU2OnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/sink/filesystem/StreamingFileSink.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwOToxNDo0NFrOGS5uzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMDo1MzoyOVrOGVIcWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MzQyMA==", "bodyText": "Add litsener setter to this bulk part writer builder?", "url": "https://github.com/apache/flink/pull/12053#discussion_r422473420", "createdAt": "2020-05-09T09:14:44Z", "author": {"login": "JingsongLi"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/sink/filesystem/StreamingFileSink.java", "diffHunk": "@@ -401,6 +402,7 @@ public T withOutputFileConfig(final OutputFileConfig outputFileConfig) {\n \t\t\t\t\tbucketFactory,\n \t\t\t\t\tnew BulkPartWriter.Factory<>(writerFactory),\n \t\t\t\t\trollingPolicy,\n+\t\t\t\t\tnull,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1d15d10c7026928824e1fbc99099cc52821de4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzODE4MQ==", "bodyText": "I think we may only first add the listener for internal user this time ? We may publish the listen also to users' API when we are more confirm with the listener interface in the future.", "url": "https://github.com/apache/flink/pull/12053#discussion_r423138181", "createdAt": "2020-05-11T15:48:37Z", "author": {"login": "gaoyunhaii"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/sink/filesystem/StreamingFileSink.java", "diffHunk": "@@ -401,6 +402,7 @@ public T withOutputFileConfig(final OutputFileConfig outputFileConfig) {\n \t\t\t\t\tbucketFactory,\n \t\t\t\t\tnew BulkPartWriter.Factory<>(writerFactory),\n \t\t\t\t\trollingPolicy,\n+\t\t\t\t\tnull,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MzQyMA=="}, "originalCommit": {"oid": "1e1d15d10c7026928824e1fbc99099cc52821de4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQzNTc4MA==", "bodyText": "For the table file system connector, it uses BulkWriter and Encoder to write files, so it need this listener too.", "url": "https://github.com/apache/flink/pull/12053#discussion_r423435780", "createdAt": "2020-05-12T03:09:05Z", "author": {"login": "JingsongLi"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/sink/filesystem/StreamingFileSink.java", "diffHunk": "@@ -401,6 +402,7 @@ public T withOutputFileConfig(final OutputFileConfig outputFileConfig) {\n \t\t\t\t\tbucketFactory,\n \t\t\t\t\tnew BulkPartWriter.Factory<>(writerFactory),\n \t\t\t\t\trollingPolicy,\n+\t\t\t\t\tnull,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MzQyMA=="}, "originalCommit": {"oid": "1e1d15d10c7026928824e1fbc99099cc52821de4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgxMTYwOQ==", "bodyText": "Added the listener to the format builder to allow users to use it.", "url": "https://github.com/apache/flink/pull/12053#discussion_r424811609", "createdAt": "2020-05-14T00:53:29Z", "author": {"login": "gaoyunhaii"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/sink/filesystem/StreamingFileSink.java", "diffHunk": "@@ -401,6 +402,7 @@ public T withOutputFileConfig(final OutputFileConfig outputFileConfig) {\n \t\t\t\t\tbucketFactory,\n \t\t\t\t\tnew BulkPartWriter.Factory<>(writerFactory),\n \t\t\t\t\trollingPolicy,\n+\t\t\t\t\tnull,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MzQyMA=="}, "originalCommit": {"oid": "1e1d15d10c7026928824e1fbc99099cc52821de4"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDMxOTgyOnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/sink/filesystem/StreamingFileSink.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwOToxNTowNlrOGS5u8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMzo0NTowN1rOGVx0dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MzQ1OQ==", "bodyText": "Add listener setter to this row wise part writer builder?", "url": "https://github.com/apache/flink/pull/12053#discussion_r422473459", "createdAt": "2020-05-09T09:15:06Z", "author": {"login": "JingsongLi"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/sink/filesystem/StreamingFileSink.java", "diffHunk": "@@ -291,6 +291,7 @@ T withBucketFactory(final BucketFactory<IN, BucketID> factory) {\n \t\t\t\t\tbucketFactory,\n \t\t\t\t\tnew RowWisePartWriter.Factory<>(encoder),\n \t\t\t\t\trollingPolicy,\n+\t\t\t\t\tnull,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1d15d10c7026928824e1fbc99099cc52821de4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ4OTUyNA==", "bodyText": "Also added as previous one.", "url": "https://github.com/apache/flink/pull/12053#discussion_r425489524", "createdAt": "2020-05-14T23:45:07Z", "author": {"login": "gaoyunhaii"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/sink/filesystem/StreamingFileSink.java", "diffHunk": "@@ -291,6 +291,7 @@ T withBucketFactory(final BucketFactory<IN, BucketID> factory) {\n \t\t\t\t\tbucketFactory,\n \t\t\t\t\tnew RowWisePartWriter.Factory<>(encoder),\n \t\t\t\t\trollingPolicy,\n+\t\t\t\t\tnull,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MzQ1OQ=="}, "originalCommit": {"oid": "1e1d15d10c7026928824e1fbc99099cc52821de4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDMyMDUwOnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/sink/filesystem/Buckets.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwOToxNTo1NVrOGS5vTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMTowMDowNVrOGVIi5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MzU0OA==", "bodyText": "Should this be a List<Listener>?", "url": "https://github.com/apache/flink/pull/12053#discussion_r422473548", "createdAt": "2020-05-09T09:15:55Z", "author": {"login": "JingsongLi"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/sink/filesystem/Buckets.java", "diffHunk": "@@ -65,6 +65,9 @@\n \n \tprivate final RollingPolicy<IN, BucketID> rollingPolicy;\n \n+\t@Nullable\n+\tprivate final BucketLifeCycleListener<IN, BucketID> bucketLifeCycleListener;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1d15d10c7026928824e1fbc99099cc52821de4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgxMzI4NA==", "bodyText": "Do we need to supports more than one listeners currently ? I think we might postpone the support if it could support the current use cases. We should be able to keep compatibility with adding a new withBucketLifeCycleListener(List<BucketLifeCycleListener> listeners> to the  format builder.", "url": "https://github.com/apache/flink/pull/12053#discussion_r424813284", "createdAt": "2020-05-14T01:00:05Z", "author": {"login": "gaoyunhaii"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/functions/sink/filesystem/Buckets.java", "diffHunk": "@@ -65,6 +65,9 @@\n \n \tprivate final RollingPolicy<IN, BucketID> rollingPolicy;\n \n+\t@Nullable\n+\tprivate final BucketLifeCycleListener<IN, BucketID> bucketLifeCycleListener;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MzU0OA=="}, "originalCommit": {"oid": "1e1d15d10c7026928824e1fbc99099cc52821de4"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1382, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}