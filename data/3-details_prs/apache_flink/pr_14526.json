{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2OTM4MjE2", "number": 14526, "title": "[FLINK-14814][WebUI] Highlight back pressured and busy nodes in the WebUI", "bodyText": "This PR adds coloring nodes in the webUI based on newly defined backPressuredTimeMsPerSecond and busyTimeMsPerSecond metrics.\nBrief change log\nPlease check the individual commits.\nVerifying this change\nThis is a webui change without test coverage.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-12-30T13:05:21Z", "url": "https://github.com/apache/flink/pull/14526", "merged": true, "mergeCommit": {"oid": "7aafc4c51b0314efbfabb94c5efea330914a60c7"}, "closed": true, "closedAt": "2021-01-06T07:49:24Z", "author": {"login": "pnowojski"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrPCVJABqjQxNTcyMDI5ODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtM3_tgFqTU2MTg5OTMyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b1c3b4d28c4eb37ae0ef5afbdb4aadbef6b2f5b", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/9b1c3b4d28c4eb37ae0ef5afbdb4aadbef6b2f5b", "committedDate": "2020-12-30T13:01:24Z", "message": "[hotfix] Remove unneccessary <br/> and improve formatting"}, "afterCommit": {"oid": "f2d56f6bb144e0ab3588504fabc8deb18a18129f", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/f2d56f6bb144e0ab3588504fabc8deb18a18129f", "committedDate": "2020-12-30T13:06:44Z", "message": "[hotfix] Remove unneccessary <br/> and improve formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2d56f6bb144e0ab3588504fabc8deb18a18129f", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/f2d56f6bb144e0ab3588504fabc8deb18a18129f", "committedDate": "2020-12-30T13:06:44Z", "message": "[hotfix] Remove unneccessary <br/> and improve formatting"}, "afterCommit": {"oid": "581fee7ea3a656a997664368665cee270e8d8dc7", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/581fee7ea3a656a997664368665cee270e8d8dc7", "committedDate": "2020-12-30T13:07:48Z", "message": "[FLINK-14814][webui] Color nodes based on back pressure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "581fee7ea3a656a997664368665cee270e8d8dc7", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/581fee7ea3a656a997664368665cee270e8d8dc7", "committedDate": "2020-12-30T13:07:48Z", "message": "[FLINK-14814][webui] Color nodes based on back pressure"}, "afterCommit": {"oid": "af89d36ef1ec641dd9acb240bd211132a52f3798", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/af89d36ef1ec641dd9acb240bd211132a52f3798", "committedDate": "2020-12-31T10:04:26Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af89d36ef1ec641dd9acb240bd211132a52f3798", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/af89d36ef1ec641dd9acb240bd211132a52f3798", "committedDate": "2020-12-31T10:04:26Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}, "afterCommit": {"oid": "eb574e5180fff6ceaf7b76035fc8c45c27a9fa09", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/eb574e5180fff6ceaf7b76035fc8c45c27a9fa09", "committedDate": "2020-12-31T11:22:24Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb574e5180fff6ceaf7b76035fc8c45c27a9fa09", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/eb574e5180fff6ceaf7b76035fc8c45c27a9fa09", "committedDate": "2020-12-31T11:22:24Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}, "afterCommit": {"oid": "6cff7c3ed0b6694c5494bf4be9a1393cf7bec631", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/6cff7c3ed0b6694c5494bf4be9a1393cf7bec631", "committedDate": "2020-12-31T12:45:32Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6cff7c3ed0b6694c5494bf4be9a1393cf7bec631", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/6cff7c3ed0b6694c5494bf4be9a1393cf7bec631", "committedDate": "2020-12-31T12:45:32Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}, "afterCommit": {"oid": "9c058a5518d886948980c0df71bbfa58a12ff969", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/9c058a5518d886948980c0df71bbfa58a12ff969", "committedDate": "2021-01-01T19:55:34Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c058a5518d886948980c0df71bbfa58a12ff969", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/9c058a5518d886948980c0df71bbfa58a12ff969", "committedDate": "2021-01-01T19:55:34Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}, "afterCommit": {"oid": "1bd73de4edd53b7a28cb9841518997e56caf6f9a", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/1bd73de4edd53b7a28cb9841518997e56caf6f9a", "committedDate": "2021-01-02T19:40:29Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1bd73de4edd53b7a28cb9841518997e56caf6f9a", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/1bd73de4edd53b7a28cb9841518997e56caf6f9a", "committedDate": "2021-01-02T19:40:29Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}, "afterCommit": {"oid": "8d3e6ca74fa6599b5f04313c9e954b9c8b294549", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/8d3e6ca74fa6599b5f04313c9e954b9c8b294549", "committedDate": "2021-01-03T07:18:32Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d3e6ca74fa6599b5f04313c9e954b9c8b294549", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/8d3e6ca74fa6599b5f04313c9e954b9c8b294549", "committedDate": "2021-01-03T07:18:32Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}, "afterCommit": {"oid": "36c6736bfdc8ec1d28bedf3f36c8552415fda611", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/36c6736bfdc8ec1d28bedf3f36c8552415fda611", "committedDate": "2021-01-03T07:23:26Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMDMxMDE0", "url": "https://github.com/apache/flink/pull/14526#pullrequestreview-561031014", "createdAt": "2021-01-04T13:33:12Z", "commit": {"oid": "36c6736bfdc8ec1d28bedf3f36c8552415fda611"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMzozMzoxM1rOINx0Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMzo1NjoyNFrOINyi5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMxODU5MQ==", "bodyText": "move to the metrics package?", "url": "https://github.com/apache/flink/pull/14526#discussion_r551318591", "createdAt": "2021-01-04T13:33:13Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TimeGauge.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// ----------------------------------------------------------------------------\n+//  This class is largely adapted from \"com.google.common.base.Preconditions\",\n+//  which is part of the \"Guava\" library.\n+//\n+//  Because of frequent issues with dependency conflicts, this class was\n+//  added to the Flink code base to reduce dependency on Guava.\n+// ----------------------------------------------------------------------------\n+\n+package org.apache.flink.runtime.metrics.groups;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36c6736bfdc8ec1d28bedf3f36c8552415fda611"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMyMTEwNA==", "bodyText": "You could make testing easier by making the time measurements be based on a Clock.", "url": "https://github.com/apache/flink/pull/14526#discussion_r551321104", "createdAt": "2021-01-04T13:38:02Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/TimeGaugeTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// ----------------------------------------------------------------------------\n+//  This class is largely adapted from \"com.google.common.base.Preconditions\",\n+//  which is part of the \"Guava\" library.\n+//\n+//  Because of frequent issues with dependency conflicts, this class was\n+//  added to the Flink code base to reduce dependency on Guava.\n+// ----------------------------------------------------------------------------\n+\n+package org.apache.flink.runtime.metrics.groups;\n+\n+import org.apache.flink.metrics.View;\n+\n+import org.junit.Test;\n+\n+import static org.hamcrest.Matchers.greaterThanOrEqualTo;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.Assert.assertThat;\n+\n+/** Tests for {@link TimeGauge}. */\n+public class TimeGaugeTest {\n+    private static final long SLEEP = 10;\n+\n+    @Test\n+    public void testBasicUsage() throws Exception {\n+        TimeGauge gauge = new TimeGauge();\n+\n+        gauge.update();\n+        assertThat(gauge.getValue(), is(0L));\n+\n+        gauge.markStart();\n+        Thread.sleep(SLEEP);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36c6736bfdc8ec1d28bedf3f36c8552415fda611"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMyMzA3Mg==", "bodyText": "It is not obvious from this description why this is important.\nOverall I would wager that it would be difficult to accurately state what this thing does based on the javadocs.\nMaybe something alone the lines of \"...measures how much time is spent in a given state, with entry into that state being signaled by #markStart()\" could help with that.\nThen it also makes it obvious why it is important to account for the case that markEnd has not been called yet.", "url": "https://github.com/apache/flink/pull/14526#discussion_r551323072", "createdAt": "2021-01-04T13:42:04Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TimeGauge.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// ----------------------------------------------------------------------------\n+//  This class is largely adapted from \"com.google.common.base.Preconditions\",\n+//  which is part of the \"Guava\" library.\n+//\n+//  Because of frequent issues with dependency conflicts, this class was\n+//  added to the Flink code base to reduce dependency on Guava.\n+// ----------------------------------------------------------------------------\n+\n+package org.apache.flink.runtime.metrics.groups;\n+\n+import org.apache.flink.annotation.VisibleForTesting;\n+import org.apache.flink.metrics.Gauge;\n+import org.apache.flink.metrics.View;\n+\n+/**\n+ * {@link TimeGauge} encapsulate logic of measuring time rates (like idleTime ms/s). In particularly\n+ * it takes care of the case, when single measurement (as defined by {@link #markStart()} and {@link\n+ * #markEnd()}), crosses the boundary of single {@link #update()} interval. Thanks to the {@link\n+ * #markStart()} {@link TimeGauge} can correctly calculate next value in {@link #update()}, even if\n+ * this measurement hasn't not ended ({@link #markEnd()}).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36c6736bfdc8ec1d28bedf3f36c8552415fda611"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMyNDUxNg==", "bodyText": "This question may come a bit late, but why are we exposing this as msPerSecond instead of a percentage? I understand they are equivalent (1000 == 100%), but I'd think a percentage would be easier to understand?", "url": "https://github.com/apache/flink/pull/14526#discussion_r551324516", "createdAt": "2021-01-04T13:44:54Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TimeGauge.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// ----------------------------------------------------------------------------\n+//  This class is largely adapted from \"com.google.common.base.Preconditions\",\n+//  which is part of the \"Guava\" library.\n+//\n+//  Because of frequent issues with dependency conflicts, this class was\n+//  added to the Flink code base to reduce dependency on Guava.\n+// ----------------------------------------------------------------------------\n+\n+package org.apache.flink.runtime.metrics.groups;\n+\n+import org.apache.flink.annotation.VisibleForTesting;\n+import org.apache.flink.metrics.Gauge;\n+import org.apache.flink.metrics.View;\n+\n+/**\n+ * {@link TimeGauge} encapsulate logic of measuring time rates (like idleTime ms/s). In particularly", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36c6736bfdc8ec1d28bedf3f36c8552415fda611"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMyNjA4OA==", "bodyText": "Wrong class? Surely there is no timer-like class in Preconditions.", "url": "https://github.com/apache/flink/pull/14526#discussion_r551326088", "createdAt": "2021-01-04T13:47:46Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TimeGauge.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// ----------------------------------------------------------------------------\n+//  This class is largely adapted from \"com.google.common.base.Preconditions\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36c6736bfdc8ec1d28bedf3f36c8552415fda611"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMzMDUzNA==", "bodyText": "Couldn't we simplify this be setting currentCount to 0?", "url": "https://github.com/apache/flink/pull/14526#discussion_r551330534", "createdAt": "2021-01-04T13:56:24Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TimeGauge.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// ----------------------------------------------------------------------------\n+//  This class is largely adapted from \"com.google.common.base.Preconditions\",\n+//  which is part of the \"Guava\" library.\n+//\n+//  Because of frequent issues with dependency conflicts, this class was\n+//  added to the Flink code base to reduce dependency on Guava.\n+// ----------------------------------------------------------------------------\n+\n+package org.apache.flink.runtime.metrics.groups;\n+\n+import org.apache.flink.annotation.VisibleForTesting;\n+import org.apache.flink.metrics.Gauge;\n+import org.apache.flink.metrics.View;\n+\n+/**\n+ * {@link TimeGauge} encapsulate logic of measuring time rates (like idleTime ms/s). In particularly\n+ * it takes care of the case, when single measurement (as defined by {@link #markStart()} and {@link\n+ * #markEnd()}), crosses the boundary of single {@link #update()} interval. Thanks to the {@link\n+ * #markStart()} {@link TimeGauge} can correctly calculate next value in {@link #update()}, even if\n+ * this measurement hasn't not ended ({@link #markEnd()}).\n+ */\n+public class TimeGauge implements Gauge<Long>, View {\n+    private long previousCount;\n+    private long currentCount;\n+    private long lastDifference;\n+    private long currentMeasurementStart;\n+\n+    public synchronized void markStart() {\n+        if (currentMeasurementStart == 0) {\n+            currentMeasurementStart = System.currentTimeMillis();\n+        }\n+    }\n+\n+    public synchronized void markEnd() {\n+        if (currentMeasurementStart != 0) {\n+            currentCount += System.currentTimeMillis() - currentMeasurementStart;\n+            currentMeasurementStart = 0;\n+        }\n+    }\n+\n+    @Override\n+    public synchronized void update() {\n+        if (currentMeasurementStart != 0) {\n+            long now = System.currentTimeMillis();\n+            currentCount += now - currentMeasurementStart;\n+            currentMeasurementStart = now;\n+        }\n+        lastDifference = (currentCount - previousCount) / UPDATE_INTERVAL_SECONDS;\n+        lastDifference = Math.max(Math.min(lastDifference, 1000), 0);\n+        previousCount = currentCount;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36c6736bfdc8ec1d28bedf3f36c8552415fda611"}, "originalPosition": 68}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36c6736bfdc8ec1d28bedf3f36c8552415fda611", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/36c6736bfdc8ec1d28bedf3f36c8552415fda611", "committedDate": "2021-01-03T07:23:26Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}, "afterCommit": {"oid": "71569bc3355e08260077a05b0c349bfa74ee4700", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/71569bc3355e08260077a05b0c349bfa74ee4700", "committedDate": "2021-01-04T14:17:36Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71569bc3355e08260077a05b0c349bfa74ee4700", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/71569bc3355e08260077a05b0c349bfa74ee4700", "committedDate": "2021-01-04T14:17:36Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}, "afterCommit": {"oid": "542b4bd111eaa7bedc6d6b93b43a1e7bd889bff8", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/542b4bd111eaa7bedc6d6b93b43a1e7bd889bff8", "committedDate": "2021-01-04T14:56:42Z", "message": "fixup! [FLINK-19174] Fix idle and backpressured time accuracy on long sleeps"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "542b4bd111eaa7bedc6d6b93b43a1e7bd889bff8", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/542b4bd111eaa7bedc6d6b93b43a1e7bd889bff8", "committedDate": "2021-01-04T14:56:42Z", "message": "fixup! [FLINK-19174] Fix idle and backpressured time accuracy on long sleeps"}, "afterCommit": {"oid": "ac07adaea38d996036646e20e988fef3e0b35427", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/ac07adaea38d996036646e20e988fef3e0b35427", "committedDate": "2021-01-04T14:58:07Z", "message": "fixup! [FLINK-19174] Fix idle and backpressured time accuracy on long sleeps"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMDczMDQ3", "url": "https://github.com/apache/flink/pull/14526#pullrequestreview-561073047", "createdAt": "2021-01-04T14:31:55Z", "commit": {"oid": "71569bc3355e08260077a05b0c349bfa74ee4700"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNDozMTo1NVrOINzw3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNDo0MzoxN1rOIN0K6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1MDQ5NA==", "bodyText": "ops, I copied pasted MeterView and missed this comment. Removed.", "url": "https://github.com/apache/flink/pull/14526#discussion_r551350494", "createdAt": "2021-01-04T14:31:55Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TimeGauge.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// ----------------------------------------------------------------------------\n+//  This class is largely adapted from \"com.google.common.base.Preconditions\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMyNjA4OA=="}, "originalCommit": {"oid": "36c6736bfdc8ec1d28bedf3f36c8552415fda611"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1MjcyOA==", "bodyText": "I think this was unconscious decision. It was kind of natural from the perspective that we are measuring idleTime but the MeterView is exposing it a ms/s rate.\nBut yes, maybe percentage would have been better? Do you think it's worth the hassle of changing the API at this point of time?", "url": "https://github.com/apache/flink/pull/14526#discussion_r551352728", "createdAt": "2021-01-04T14:35:37Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TimeGauge.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// ----------------------------------------------------------------------------\n+//  This class is largely adapted from \"com.google.common.base.Preconditions\",\n+//  which is part of the \"Guava\" library.\n+//\n+//  Because of frequent issues with dependency conflicts, this class was\n+//  added to the Flink code base to reduce dependency on Guava.\n+// ----------------------------------------------------------------------------\n+\n+package org.apache.flink.runtime.metrics.groups;\n+\n+import org.apache.flink.annotation.VisibleForTesting;\n+import org.apache.flink.metrics.Gauge;\n+import org.apache.flink.metrics.View;\n+\n+/**\n+ * {@link TimeGauge} encapsulate logic of measuring time rates (like idleTime ms/s). In particularly", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMyNDUxNg=="}, "originalCommit": {"oid": "36c6736bfdc8ec1d28bedf3f36c8552415fda611"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1Njc0OQ==", "bodyText": "I've rephrased the comment. Could you take a look? Also I have renamed TimeGauge to TimerGauge.", "url": "https://github.com/apache/flink/pull/14526#discussion_r551356749", "createdAt": "2021-01-04T14:42:30Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TimeGauge.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// ----------------------------------------------------------------------------\n+//  This class is largely adapted from \"com.google.common.base.Preconditions\",\n+//  which is part of the \"Guava\" library.\n+//\n+//  Because of frequent issues with dependency conflicts, this class was\n+//  added to the Flink code base to reduce dependency on Guava.\n+// ----------------------------------------------------------------------------\n+\n+package org.apache.flink.runtime.metrics.groups;\n+\n+import org.apache.flink.annotation.VisibleForTesting;\n+import org.apache.flink.metrics.Gauge;\n+import org.apache.flink.metrics.View;\n+\n+/**\n+ * {@link TimeGauge} encapsulate logic of measuring time rates (like idleTime ms/s). In particularly\n+ * it takes care of the case, when single measurement (as defined by {@link #markStart()} and {@link\n+ * #markEnd()}), crosses the boundary of single {@link #update()} interval. Thanks to the {@link\n+ * #markStart()} {@link TimeGauge} can correctly calculate next value in {@link #update()}, even if\n+ * this measurement hasn't not ended ({@link #markEnd()}).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMyMzA3Mg=="}, "originalCommit": {"oid": "36c6736bfdc8ec1d28bedf3f36c8552415fda611"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1NzE2Mw==", "bodyText": "Yes we could :) Thanks for the suggestion.", "url": "https://github.com/apache/flink/pull/14526#discussion_r551357163", "createdAt": "2021-01-04T14:43:17Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TimeGauge.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// ----------------------------------------------------------------------------\n+//  This class is largely adapted from \"com.google.common.base.Preconditions\",\n+//  which is part of the \"Guava\" library.\n+//\n+//  Because of frequent issues with dependency conflicts, this class was\n+//  added to the Flink code base to reduce dependency on Guava.\n+// ----------------------------------------------------------------------------\n+\n+package org.apache.flink.runtime.metrics.groups;\n+\n+import org.apache.flink.annotation.VisibleForTesting;\n+import org.apache.flink.metrics.Gauge;\n+import org.apache.flink.metrics.View;\n+\n+/**\n+ * {@link TimeGauge} encapsulate logic of measuring time rates (like idleTime ms/s). In particularly\n+ * it takes care of the case, when single measurement (as defined by {@link #markStart()} and {@link\n+ * #markEnd()}), crosses the boundary of single {@link #update()} interval. Thanks to the {@link\n+ * #markStart()} {@link TimeGauge} can correctly calculate next value in {@link #update()}, even if\n+ * this measurement hasn't not ended ({@link #markEnd()}).\n+ */\n+public class TimeGauge implements Gauge<Long>, View {\n+    private long previousCount;\n+    private long currentCount;\n+    private long lastDifference;\n+    private long currentMeasurementStart;\n+\n+    public synchronized void markStart() {\n+        if (currentMeasurementStart == 0) {\n+            currentMeasurementStart = System.currentTimeMillis();\n+        }\n+    }\n+\n+    public synchronized void markEnd() {\n+        if (currentMeasurementStart != 0) {\n+            currentCount += System.currentTimeMillis() - currentMeasurementStart;\n+            currentMeasurementStart = 0;\n+        }\n+    }\n+\n+    @Override\n+    public synchronized void update() {\n+        if (currentMeasurementStart != 0) {\n+            long now = System.currentTimeMillis();\n+            currentCount += now - currentMeasurementStart;\n+            currentMeasurementStart = now;\n+        }\n+        lastDifference = (currentCount - previousCount) / UPDATE_INTERVAL_SECONDS;\n+        lastDifference = Math.max(Math.min(lastDifference, 1000), 0);\n+        previousCount = currentCount;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTMzMDUzNA=="}, "originalCommit": {"oid": "36c6736bfdc8ec1d28bedf3f36c8552415fda611"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMDc3MzU1", "url": "https://github.com/apache/flink/pull/14526#pullrequestreview-561077355", "createdAt": "2021-01-04T14:37:14Z", "commit": {"oid": "71569bc3355e08260077a05b0c349bfa74ee4700"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNDozNzoxNFrOINz9dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNTowMjoxNlrOIN06JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1MzcxOQ==", "bodyText": "Do we have to rely on UPDATE_INTERVAL_SECONDS?\nWhy not to record previous update time (currentTimeMillis) instead?", "url": "https://github.com/apache/flink/pull/14526#discussion_r551353719", "createdAt": "2021-01-04T14:37:14Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TimeGauge.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// ----------------------------------------------------------------------------\n+//  This class is largely adapted from \"com.google.common.base.Preconditions\",\n+//  which is part of the \"Guava\" library.\n+//\n+//  Because of frequent issues with dependency conflicts, this class was\n+//  added to the Flink code base to reduce dependency on Guava.\n+// ----------------------------------------------------------------------------\n+\n+package org.apache.flink.runtime.metrics.groups;\n+\n+import org.apache.flink.annotation.VisibleForTesting;\n+import org.apache.flink.metrics.Gauge;\n+import org.apache.flink.metrics.View;\n+\n+/**\n+ * {@link TimeGauge} encapsulate logic of measuring time rates (like idleTime ms/s). In particularly\n+ * it takes care of the case, when single measurement (as defined by {@link #markStart()} and {@link\n+ * #markEnd()}), crosses the boundary of single {@link #update()} interval. Thanks to the {@link\n+ * #markStart()} {@link TimeGauge} can correctly calculate next value in {@link #update()}, even if\n+ * this measurement hasn't not ended ({@link #markEnd()}).\n+ */\n+public class TimeGauge implements Gauge<Long>, View {\n+    private long previousCount;\n+    private long currentCount;\n+    private long lastDifference;\n+    private long currentMeasurementStart;\n+\n+    public synchronized void markStart() {\n+        if (currentMeasurementStart == 0) {\n+            currentMeasurementStart = System.currentTimeMillis();\n+        }\n+    }\n+\n+    public synchronized void markEnd() {\n+        if (currentMeasurementStart != 0) {\n+            currentCount += System.currentTimeMillis() - currentMeasurementStart;\n+            currentMeasurementStart = 0;\n+        }\n+    }\n+\n+    @Override\n+    public synchronized void update() {\n+        if (currentMeasurementStart != 0) {\n+            long now = System.currentTimeMillis();\n+            currentCount += now - currentMeasurementStart;\n+            currentMeasurementStart = now;\n+        }\n+        lastDifference = (currentCount - previousCount) / UPDATE_INTERVAL_SECONDS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71569bc3355e08260077a05b0c349bfa74ee4700"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM1OTE0MA==", "bodyText": "This method (processInput) became quite long now.\nCan we extract getBackPressuredGauge or onOutputUnavailable?", "url": "https://github.com/apache/flink/pull/14526#discussion_r551359140", "createdAt": "2021-01-04T14:46:26Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/StreamTask.java", "diffHunk": "@@ -400,9 +404,23 @@ protected void processInput(MailboxDefaultAction.Controller controller) throws E\n             controller.allActionsCompleted();\n             return;\n         }\n-        CompletableFuture<?> jointFuture = getInputOutputJointFuture(status);\n-        MailboxDefaultAction.Suspension suspendedDefaultAction = controller.suspendDefaultAction();\n-        assertNoException(jointFuture.thenRun(suspendedDefaultAction::resume));\n+\n+        final Suspension suspension = controller.suspendDefaultAction();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71569bc3355e08260077a05b0c349bfa74ee4700"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM2MTE5MA==", "bodyText": "IIUC, the same TimeGauge object is now used by SteamTask and BufferWritingResultPartition.\nIf that's true, one of the markStart calls will be ignored, and \"wrong\" markEnd can record currentCount.", "url": "https://github.com/apache/flink/pull/14526#discussion_r551361190", "createdAt": "2021-01-04T14:49:43Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TimeGauge.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// ----------------------------------------------------------------------------\n+//  This class is largely adapted from \"com.google.common.base.Preconditions\",\n+//  which is part of the \"Guava\" library.\n+//\n+//  Because of frequent issues with dependency conflicts, this class was\n+//  added to the Flink code base to reduce dependency on Guava.\n+// ----------------------------------------------------------------------------\n+\n+package org.apache.flink.runtime.metrics.groups;\n+\n+import org.apache.flink.annotation.VisibleForTesting;\n+import org.apache.flink.metrics.Gauge;\n+import org.apache.flink.metrics.View;\n+\n+/**\n+ * {@link TimeGauge} encapsulate logic of measuring time rates (like idleTime ms/s). In particularly\n+ * it takes care of the case, when single measurement (as defined by {@link #markStart()} and {@link\n+ * #markEnd()}), crosses the boundary of single {@link #update()} interval. Thanks to the {@link\n+ * #markStart()} {@link TimeGauge} can correctly calculate next value in {@link #update()}, even if\n+ * this measurement hasn't not ended ({@link #markEnd()}).\n+ */\n+public class TimeGauge implements Gauge<Long>, View {\n+    private long previousCount;\n+    private long currentCount;\n+    private long lastDifference;\n+    private long currentMeasurementStart;\n+\n+    public synchronized void markStart() {\n+        if (currentMeasurementStart == 0) {\n+            currentMeasurementStart = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71569bc3355e08260077a05b0c349bfa74ee4700"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM2MTU4OQ==", "bodyText": "nit: can be inlined", "url": "https://github.com/apache/flink/pull/14526#discussion_r551361589", "createdAt": "2021-01-04T14:50:23Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TaskIOMetricGroup.java", "diffHunk": "@@ -98,10 +105,26 @@ public Counter getNumBuffersOutCounter() {\n         return numBuffersOut;\n     }\n \n-    public Meter getIdleTimeMsPerSecond() {\n+    public TimeGauge getIdleTimeMsPerSecond() {\n         return idleTimePerSecond;\n     }\n \n+    public TimeGauge getBackPressuredTimePerSecond() {\n+        return backPressuredTimePerSecond;\n+    }\n+\n+    public void setEnableBusyTime(boolean enabled) {\n+        busyTimeEnabled = enabled;\n+    }\n+\n+    private double getBusyTimePerSecond() {\n+        double v =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71569bc3355e08260077a05b0c349bfa74ee4700"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM2ODMzNw==", "bodyText": "Typo?", "url": "https://github.com/apache/flink/pull/14526#discussion_r551368337", "createdAt": "2021-01-04T15:00:46Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime-web/web-dashboard/src/app/share/common/dagre/node.component.ts", "diffHunk": "@@ -9,7 +9,7 @@\n  *\n  *     http://www.apache.org/licenses/LICENSE-2.0\n  *\n- * Unless required by applicable law or agreed to in writing, software\n+ * Unless requilightRed by applicable law or agreed to in writing, software", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac07adaea38d996036646e20e988fef3e0b35427"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM2OTI1Mw==", "bodyText": "I think it's better to name these colors semantically, e.g. back-pressuring instead of red, back-pressured instead of black.", "url": "https://github.com/apache/flink/pull/14526#discussion_r551369253", "createdAt": "2021-01-04T15:02:16Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime-web/web-dashboard/src/app/share/common/dagre/node.component.ts", "diffHunk": "@@ -31,8 +31,18 @@ export class NodeComponent {\n   operatorStrategy: string | null;\n   parallelism: number | null;\n   lowWatermark: number | null | undefined;\n+  backPressuredPercentage: number | undefined = NaN;\n+  busyPercentage: number | undefined = NaN;\n+  backgroundColor: string | undefined;\n+  borderColor: string | undefined;\n   height = 0;\n   id: string;\n+  lightRed = '#ee6464';\n+  lightBlue = '#5db1ff';\n+  lightBlack = '#888888';\n+  red = '#ee2222';\n+  blue = '#1890ff';\n+  black = '#000000';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac07adaea38d996036646e20e988fef3e0b35427"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac07adaea38d996036646e20e988fef3e0b35427", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/ac07adaea38d996036646e20e988fef3e0b35427", "committedDate": "2021-01-04T14:58:07Z", "message": "fixup! [FLINK-19174] Fix idle and backpressured time accuracy on long sleeps"}, "afterCommit": {"oid": "6a91c22600fb5c1b40831e9173f75ee58455d5e4", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/6a91c22600fb5c1b40831e9173f75ee58455d5e4", "committedDate": "2021-01-04T15:55:36Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a91c22600fb5c1b40831e9173f75ee58455d5e4", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/6a91c22600fb5c1b40831e9173f75ee58455d5e4", "committedDate": "2021-01-04T15:55:36Z", "message": "[FLINK-19174] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}, "afterCommit": {"oid": "022f89d7468e2c8fe5dc5820b2de3a9b4f9b16a5", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/022f89d7468e2c8fe5dc5820b2de3a9b4f9b16a5", "committedDate": "2021-01-04T16:24:26Z", "message": "[FLINK-19174][metrics] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "022f89d7468e2c8fe5dc5820b2de3a9b4f9b16a5", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/022f89d7468e2c8fe5dc5820b2de3a9b4f9b16a5", "committedDate": "2021-01-04T16:24:26Z", "message": "[FLINK-19174][metrics] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}, "afterCommit": {"oid": "ad105c66a58a01adfffa51eb8fe78b750056bc21", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/ad105c66a58a01adfffa51eb8fe78b750056bc21", "committedDate": "2021-01-04T19:31:40Z", "message": "[FLINK-19174][metrics] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad105c66a58a01adfffa51eb8fe78b750056bc21", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/ad105c66a58a01adfffa51eb8fe78b750056bc21", "committedDate": "2021-01-04T19:31:40Z", "message": "[FLINK-19174][metrics] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}, "afterCommit": {"oid": "69d825d0856f54a9c038469e5e920eaa236320f9", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/69d825d0856f54a9c038469e5e920eaa236320f9", "committedDate": "2021-01-05T12:29:21Z", "message": "run WebUI in WordCount"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "69d825d0856f54a9c038469e5e920eaa236320f9", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/69d825d0856f54a9c038469e5e920eaa236320f9", "committedDate": "2021-01-05T12:29:21Z", "message": "run WebUI in WordCount"}, "afterCommit": {"oid": "c192498b5438fc51c7199f1d44b89077fb5aadb4", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/c192498b5438fc51c7199f1d44b89077fb5aadb4", "committedDate": "2021-01-05T12:29:16Z", "message": "[FLINK-19174][metrics] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72fa7b1b3e5f43116150c2476afbeaccf29dcdb3", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/72fa7b1b3e5f43116150c2476afbeaccf29dcdb3", "committedDate": "2021-01-05T13:54:33Z", "message": "[hotfix][metrics] Rename constant IS_BACKPRESSURE to IS_BACK_PRESSURE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a48869cb46166670124507aea7251c867f22bb8", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/5a48869cb46166670124507aea7251c867f22bb8", "committedDate": "2021-01-05T13:54:34Z", "message": "[hotfix][task] Optimize and simplify Task#isBackPressured"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c192498b5438fc51c7199f1d44b89077fb5aadb4", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/c192498b5438fc51c7199f1d44b89077fb5aadb4", "committedDate": "2021-01-05T12:29:16Z", "message": "[FLINK-19174][metrics] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}, "afterCommit": {"oid": "916982a7cd81f0b8e3d8b3d4ca06605149d3e90d", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/916982a7cd81f0b8e3d8b3d4ca06605149d3e90d", "committedDate": "2021-01-05T13:54:34Z", "message": "[FLINK-19174][metrics] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90ef17210a33bd96e5afa507418e6e2032215659", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/90ef17210a33bd96e5afa507418e6e2032215659", "committedDate": "2021-01-05T15:03:50Z", "message": "[FLINK-20717][metrics] Provide new backPressuredTimeMsPerSecond metric"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44d7b2289f034c2bae565c558c44afddb4867bc4", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/44d7b2289f034c2bae565c558c44afddb4867bc4", "committedDate": "2021-01-05T15:03:50Z", "message": "[FLINK-20718][metrics] Add busyTimeMsPerSecond metric\n\nIt's defined as inverted value of idleTimeMsPerSecond"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "102277ec1015aebae0cce83496d33d61051ba425", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/102277ec1015aebae0cce83496d33d61051ba425", "committedDate": "2021-01-05T15:03:50Z", "message": "[FLINK-14814][webui] Display back pressured and busy times"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6ef68d04e5fcaed123c5ee0931cedb72adc83f3", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/e6ef68d04e5fcaed123c5ee0931cedb72adc83f3", "committedDate": "2021-01-05T15:03:50Z", "message": "[FLINK-14814][webui] Color nodes based on back pressure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dc138055350ad401ac7783619bd3d3968d1806e", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/9dc138055350ad401ac7783619bd3d3968d1806e", "committedDate": "2021-01-05T15:03:51Z", "message": "[FLINK-19174][metrics] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "916982a7cd81f0b8e3d8b3d4ca06605149d3e90d", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/916982a7cd81f0b8e3d8b3d4ca06605149d3e90d", "committedDate": "2021-01-05T13:54:34Z", "message": "[FLINK-19174][metrics] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}, "afterCommit": {"oid": "9dc138055350ad401ac7783619bd3d3968d1806e", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/9dc138055350ad401ac7783619bd3d3968d1806e", "committedDate": "2021-01-05T15:03:51Z", "message": "[FLINK-19174][metrics] Fix idle and backpressured time accuracy on long sleeps\n\nIn particularly, if task is idling forever, as there are no new records incomming\nprevious version would report idleTime as 0% and busyTime as 100% which is incorrect.\n\nIn this version, idleTime metric is aware that idling period has started and can take\nthat into account when updating it's value."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxODk5MzIz", "url": "https://github.com/apache/flink/pull/14526#pullrequestreview-561899323", "createdAt": "2021-01-05T15:43:51Z", "commit": {"oid": "9dc138055350ad401ac7783619bd3d3968d1806e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3496, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}