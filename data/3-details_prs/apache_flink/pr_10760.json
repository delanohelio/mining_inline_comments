{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4OTM2MDU4", "number": 10760, "title": "[FLINK-15466][table-planner] Fix bug of `FlinkAggregateExpandDistinct\u2026", "bodyText": "What is the purpose of the change\nFix bug of FlinkAggregateExpandDistinctAggregatesRule; it'll generate wrong plan for cases where distinct aggregate calls with filter are used.\nBrief change log\n\nThis PR mainly fix bugs of FlinkAggregateExpandDistinctAggregatesRule.\n\nVerifying this change\nThis change added tests and can be verified as follows:\n\nAdded integration tests in DistinctAggregateITCaseBase for end-to-end test.\nAdded tests in DistinctAggregateTest that validates the plan for cases with distinct aggregate calls with filter.\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)", "createdAt": "2020-01-03T10:11:47Z", "url": "https://github.com/apache/flink/pull/10760", "merged": true, "mergeCommit": {"oid": "6f2e9abffb0b1ef68e4f2cf058a24524b61e88a1"}, "closed": true, "closedAt": "2020-01-09T09:04:25Z", "author": {"login": "cshuo"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2raxcAH2gAyMzU4OTM2MDU4OjFkNGU5ODdjMWIzM2YyMzUyZjc2NDY5YjczYmMxYzBhZTM5ZWY2YjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4mKn2gFqTM0MDM3MDgzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6", "committedDate": "2020-01-03T10:02:00Z", "message": "[FLINK-15466][table-planner] Fix bug of `FlinkAggregateExpandDistinctAggregatesRule` for cases where distinct aggs with filter are used."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NDQwMzMz", "url": "https://github.com/apache/flink/pull/10760#pullrequestreview-338440333", "createdAt": "2020-01-06T01:50:35Z", "commit": {"oid": "1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwMTo1MDozNVrOFaUAfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwMjowMDowMVrOFaUEnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNTEwMA==", "bodyText": "Get and remap xx ?", "url": "https://github.com/apache/flink/pull/10760#discussion_r363135100", "createdAt": "2020-01-06T01:50:35Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java", "diffHunk": "@@ -471,10 +474,24 @@ private void rewriteUsingGroupingSets(RelOptRuleCall call,\n \t\t\tfinal RexNode nodeZ = nodes.remove(nodes.size() - 1);\n \t\t\tfor (Map.Entry<ImmutableBitSet, Integer> entry : filters.entrySet()) {\n \t\t\t\tfinal long v = groupValue(fullGroupSet, entry.getKey());\n-\t\t\t\tnodes.add(\n+\t\t\t\t// Remap and get the filterArg of the distinct aggregate call.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNTc0MA==", "bodyText": "please move these cases to FlinkAggregateExpandDistinctAggregatesRuleTest", "url": "https://github.com/apache/flink/pull/10760#discussion_r363135740", "createdAt": "2020-01-06T01:55:53Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/batch/sql/agg/DistinctAggregateTest.scala", "diffHunk": "@@ -82,4 +83,39 @@ class DistinctAggregateTest extends TableTestBase {\n     util.verifyPlan(sqlQuery)\n   }\n \n+  @Test\n+  def testSingleDistinctWithFilter(): Unit = {\n+    val sqlQuery = \"SELECT d, COUNT(DISTINCT c) FILTER (WHERE a > 0) FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+\n+  @Test\n+  def testMultiDistinctOnSameColumnWithFilter(): Unit = {\n+    val sqlQuery = \"SELECT d, COUNT(DISTINCT c), COUNT(DISTINCT c) FILTER (WHERE a > 10),\\n\" +\n+      \"COUNT(DISTINCT c) FILTER (WHERE a < 10) FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+\n+  @Test\n+  def TestMultiDistinctOnDifferentColumnWithFilter(): Unit = {\n+    val sqlQuery = \"SELECT d, COUNT(DISTINCT c), COUNT(DISTINCT c) FILTER (WHERE a > 0),\\n\" +\n+      \"COUNT(DISTINCT b) FILTER (WHERE b > 1) FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+\n+  @Test\n+  def TestMultiDistinctWithFilterAndNonDistinctAgg(): Unit = {\n+    val sqlQuery = \"SELECT d, COUNT(DISTINCT c), COUNT(DISTINCT c) FILTER (WHERE a > 0),\\n\" +\n+      \"MAX(e), MIN(e) FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+\n+  @Test\n+  def testMultiDistinctAndNonDistinctAggWithFilter(): Unit = {\n+    val sqlQuery = \"SELECT d, MAX(e), MAX(e) FILTER (WHERE a < 10), COUNT(DISTINCT c),\\n\" +\n+      \"COUNT(DISTINCT c) FILTER (WHERE a > 5), COUNT(DISTINCT b) FILTER (WHERE b > 3)\\n\" +\n+      \"FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNTkwNA==", "bodyText": "please add some cases without GROUP BY", "url": "https://github.com/apache/flink/pull/10760#discussion_r363135904", "createdAt": "2020-01-06T01:57:35Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/batch/sql/agg/DistinctAggregateTest.scala", "diffHunk": "@@ -82,4 +83,39 @@ class DistinctAggregateTest extends TableTestBase {\n     util.verifyPlan(sqlQuery)\n   }\n \n+  @Test\n+  def testSingleDistinctWithFilter(): Unit = {\n+    val sqlQuery = \"SELECT d, COUNT(DISTINCT c) FILTER (WHERE a > 0) FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+\n+  @Test\n+  def testMultiDistinctOnSameColumnWithFilter(): Unit = {\n+    val sqlQuery = \"SELECT d, COUNT(DISTINCT c), COUNT(DISTINCT c) FILTER (WHERE a > 10),\\n\" +\n+      \"COUNT(DISTINCT c) FILTER (WHERE a < 10) FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+\n+  @Test\n+  def TestMultiDistinctOnDifferentColumnWithFilter(): Unit = {\n+    val sqlQuery = \"SELECT d, COUNT(DISTINCT c), COUNT(DISTINCT c) FILTER (WHERE a > 0),\\n\" +\n+      \"COUNT(DISTINCT b) FILTER (WHERE b > 1) FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+\n+  @Test\n+  def TestMultiDistinctWithFilterAndNonDistinctAgg(): Unit = {\n+    val sqlQuery = \"SELECT d, COUNT(DISTINCT c), COUNT(DISTINCT c) FILTER (WHERE a > 0),\\n\" +\n+      \"MAX(e), MIN(e) FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+\n+  @Test\n+  def testMultiDistinctAndNonDistinctAggWithFilter(): Unit = {\n+    val sqlQuery = \"SELECT d, MAX(e), MAX(e) FILTER (WHERE a < 10), COUNT(DISTINCT c),\\n\" +\n+      \"COUNT(DISTINCT c) FILTER (WHERE a > 5), COUNT(DISTINCT b) FILTER (WHERE b > 3)\\n\" +\n+      \"FROM MyTable2 GROUP BY d\"\n+    util.verifyPlan(sqlQuery)\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNTc0MA=="}, "originalCommit": {"oid": "1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEzNjE1Nw==", "bodyText": "it's better to extract nodes.add(relBuilder.alias(project, \"$g_\" + v) as common part", "url": "https://github.com/apache/flink/pull/10760#discussion_r363136157", "createdAt": "2020-01-06T02:00:01Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/FlinkAggregateExpandDistinctAggregatesRule.java", "diffHunk": "@@ -471,10 +474,24 @@ private void rewriteUsingGroupingSets(RelOptRuleCall call,\n \t\t\tfinal RexNode nodeZ = nodes.remove(nodes.size() - 1);\n \t\t\tfor (Map.Entry<ImmutableBitSet, Integer> entry : filters.entrySet()) {\n \t\t\t\tfinal long v = groupValue(fullGroupSet, entry.getKey());\n-\t\t\t\tnodes.add(\n+\t\t\t\t// Remap and get the filterArg of the distinct aggregate call.\n+\t\t\t\tint distinctAggCallFilterArg = remap(fullGroupSet,\n+\t\t\t\t\tgroupSetToDistinctAggCallFilterArg.getOrDefault(entry.getKey(), -1));\n+\t\t\t\tif (distinctAggCallFilterArg < 0) {\n+\t\t\t\t\tnodes.add(\n \t\t\t\t\t\trelBuilder.alias(\n-\t\t\t\t\t\t\t\trelBuilder.equals(nodeZ, relBuilder.literal(v)),\n-\t\t\t\t\t\t\t\t\"$g_\" + v));\n+\t\t\t\t\t\t\trelBuilder.equals(nodeZ, relBuilder.literal(v)),\n+\t\t\t\t\t\t\t\"$g_\" + v));\n+\t\t\t\t} else {\n+\t\t\t\t\tRexBuilder rexBuilder = aggregate.getCluster().getRexBuilder();\n+\t\t\t\t\t// merge the filter of the distinct aggregate call itself.\n+\t\t\t\t\tnodes.add(relBuilder.alias(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d4e987c1b33f2352f76469b73bc1c0ae39ef6b6"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1a1050925ee174aafd73f365bba300e194d95f1", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/a1a1050925ee174aafd73f365bba300e194d95f1", "committedDate": "2020-01-07T08:45:54Z", "message": "fix comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMzcwODM1", "url": "https://github.com/apache/flink/pull/10760#pullrequestreview-340370835", "createdAt": "2020-01-09T09:02:42Z", "commit": {"oid": "a1a1050925ee174aafd73f365bba300e194d95f1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4916, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}