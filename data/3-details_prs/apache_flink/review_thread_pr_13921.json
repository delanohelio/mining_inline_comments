{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MTgxMzk0", "number": 13921, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0zMVQwMjozODoyOFrOGEfdig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wMVQwNjoxMDowN1rOGE5nSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA3MzYyOTU0OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/AppendOnlyFirstNFunction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0zMVQwMjozODoyOFrOJkbXgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0zMVQxMjoyNzowOVrOJksGEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjE3Njg5Ng==", "bodyText": "serialVersionUID  should be 1L at first, From the Flink code style.", "url": "https://github.com/apache/flink/pull/13921#discussion_r642176896", "createdAt": "2021-05-31T02:38:28Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/AppendOnlyFirstNFunction.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.runtime.operators.rank;\n+\n+import org.apache.flink.api.common.state.StateTtlConfig;\n+import org.apache.flink.api.common.state.ValueState;\n+import org.apache.flink.api.common.state.ValueStateDescriptor;\n+import org.apache.flink.api.common.typeinfo.Types;\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.table.data.RowData;\n+import org.apache.flink.table.runtime.generated.GeneratedRecordComparator;\n+import org.apache.flink.table.runtime.keyselector.RowDataKeySelector;\n+import org.apache.flink.table.runtime.typeutils.InternalTypeInfo;\n+import org.apache.flink.types.RowKind;\n+import org.apache.flink.util.Collector;\n+import org.apache.flink.util.Preconditions;\n+\n+import static org.apache.flink.table.runtime.util.StateConfigUtil.createTtlConfig;\n+\n+/**\n+ * A variant of {@link AppendOnlyTopNFunction} to handle first-n case.\n+ *\n+ * <p>The input stream should only contain INSERT messages.\n+ */\n+public class AppendOnlyFirstNFunction extends AbstractTopNFunction {\n+\n+    private static final long serialVersionUID = -889227691088906246L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d298115ba9c62cbf2eb3dbbe457c926d0668cb0a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjQ1MDk2Mw==", "bodyText": "serialVersionUID is at the 2nd in all other classes, thus in consistent with them.", "url": "https://github.com/apache/flink/pull/13921#discussion_r642450963", "createdAt": "2021-05-31T12:27:09Z", "author": {"login": "tragicjun"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/rank/AppendOnlyFirstNFunction.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.runtime.operators.rank;\n+\n+import org.apache.flink.api.common.state.StateTtlConfig;\n+import org.apache.flink.api.common.state.ValueState;\n+import org.apache.flink.api.common.state.ValueStateDescriptor;\n+import org.apache.flink.api.common.typeinfo.Types;\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.table.data.RowData;\n+import org.apache.flink.table.runtime.generated.GeneratedRecordComparator;\n+import org.apache.flink.table.runtime.keyselector.RowDataKeySelector;\n+import org.apache.flink.table.runtime.typeutils.InternalTypeInfo;\n+import org.apache.flink.types.RowKind;\n+import org.apache.flink.util.Collector;\n+import org.apache.flink.util.Preconditions;\n+\n+import static org.apache.flink.table.runtime.util.StateConfigUtil.createTtlConfig;\n+\n+/**\n+ * A variant of {@link AppendOnlyTopNFunction} to handle first-n case.\n+ *\n+ * <p>The input stream should only contain INSERT messages.\n+ */\n+public class AppendOnlyFirstNFunction extends AbstractTopNFunction {\n+\n+    private static final long serialVersionUID = -889227691088906246L;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjE3Njg5Ng=="}, "originalCommit": {"oid": "d298115ba9c62cbf2eb3dbbe457c926d0668cb0a"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA3MzYzOTg1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecRank.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0zMVQwMjo0NDozMlrOJkbdPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNS0zMVQxMjoyNzo0NlrOJksHzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjE3ODM2Nw==", "bodyText": "Just TIMESTAMP_WITHOUT_TIME_ZONE? I don't see any proc-time.", "url": "https://github.com/apache/flink/pull/13921#discussion_r642178367", "createdAt": "2021-05-31T02:44:32Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecRank.java", "diffHunk": "@@ -207,18 +209,35 @@ public StreamExecRank(\n \n         AbstractTopNFunction processFunction;\n         if (rankStrategy instanceof RankProcessStrategy.AppendFastStrategy) {\n-            processFunction =\n-                    new AppendOnlyTopNFunction(\n-                            minIdleStateRetentionTime,\n-                            maxIdleStateRetentionTime,\n-                            inputRowTypeInfo,\n-                            sortKeyComparator,\n-                            sortKeySelector,\n-                            rankType,\n-                            rankRange,\n-                            generateUpdateBefore,\n-                            outputRankNumber,\n-                            cacheSize);\n+            if (sortFields.length == 1\n+                    && inputType.getChildren().get(sortFields[0]).getTypeRoot()\n+                            == LogicalTypeRoot.TIMESTAMP_WITHOUT_TIME_ZONE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d298115ba9c62cbf2eb3dbbe457c926d0668cb0a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjQ1MTQwNg==", "bodyText": "sorry, forgot to push the latest commit.", "url": "https://github.com/apache/flink/pull/13921#discussion_r642451406", "createdAt": "2021-05-31T12:27:46Z", "author": {"login": "tragicjun"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecRank.java", "diffHunk": "@@ -207,18 +209,35 @@ public StreamExecRank(\n \n         AbstractTopNFunction processFunction;\n         if (rankStrategy instanceof RankProcessStrategy.AppendFastStrategy) {\n-            processFunction =\n-                    new AppendOnlyTopNFunction(\n-                            minIdleStateRetentionTime,\n-                            maxIdleStateRetentionTime,\n-                            inputRowTypeInfo,\n-                            sortKeyComparator,\n-                            sortKeySelector,\n-                            rankType,\n-                            rankRange,\n-                            generateUpdateBefore,\n-                            outputRankNumber,\n-                            cacheSize);\n+            if (sortFields.length == 1\n+                    && inputType.getChildren().get(sortFields[0]).getTypeRoot()\n+                            == LogicalTypeRoot.TIMESTAMP_WITHOUT_TIME_ZONE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjE3ODM2Nw=="}, "originalCommit": {"oid": "d298115ba9c62cbf2eb3dbbe457c926d0668cb0a"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDA3NzkxNDM0OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecRank.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wMVQwNjoxMDowN1rOJlBylA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNi0wMlQwMzo1OToxM1rOJl0V4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjgwNjQyMA==", "bodyText": "TypeCheckUtils.isProcTime", "url": "https://github.com/apache/flink/pull/13921#discussion_r642806420", "createdAt": "2021-06-01T06:10:07Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecRank.java", "diffHunk": "@@ -207,18 +211,42 @@ public StreamExecRank(\n \n         AbstractTopNFunction processFunction;\n         if (rankStrategy instanceof RankProcessStrategy.AppendFastStrategy) {\n-            processFunction =\n-                    new AppendOnlyTopNFunction(\n-                            minIdleStateRetentionTime,\n-                            maxIdleStateRetentionTime,\n-                            inputRowTypeInfo,\n-                            sortKeyComparator,\n-                            sortKeySelector,\n-                            rankType,\n-                            rankRange,\n-                            generateUpdateBefore,\n-                            outputRankNumber,\n-                            cacheSize);\n+            boolean isAppendOnlyFirstN = false;\n+            if (sortFields.length == 1) {\n+                LogicalType sortKeyType = inputType.getChildren().get(sortFields[0]);\n+                if (sortKeyType instanceof LocalZonedTimestampType", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "866cb86ec4c679e3d46327649c4483bd512f7289"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MzYzNDY1Ng==", "bodyText": "great, thx", "url": "https://github.com/apache/flink/pull/13921#discussion_r643634656", "createdAt": "2021-06-02T03:59:13Z", "author": {"login": "tragicjun"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/stream/StreamExecRank.java", "diffHunk": "@@ -207,18 +211,42 @@ public StreamExecRank(\n \n         AbstractTopNFunction processFunction;\n         if (rankStrategy instanceof RankProcessStrategy.AppendFastStrategy) {\n-            processFunction =\n-                    new AppendOnlyTopNFunction(\n-                            minIdleStateRetentionTime,\n-                            maxIdleStateRetentionTime,\n-                            inputRowTypeInfo,\n-                            sortKeyComparator,\n-                            sortKeySelector,\n-                            rankType,\n-                            rankRange,\n-                            generateUpdateBefore,\n-                            outputRankNumber,\n-                            cacheSize);\n+            boolean isAppendOnlyFirstN = false;\n+            if (sortFields.length == 1) {\n+                LogicalType sortKeyType = inputType.getChildren().get(sortFields[0]);\n+                if (sortKeyType instanceof LocalZonedTimestampType", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjgwNjQyMA=="}, "originalCommit": {"oid": "866cb86ec4c679e3d46327649c4483bd512f7289"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4924, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}