{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MDI1MDYy", "number": 11848, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMjo0NzoxMVrOD1RCmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODoyODoyNlrOD1qEVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MTgwMzE1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMjo0NzoxMVrOGKneag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMzo0NzozNFrOGKo6sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc4NTcwNg==", "bodyText": "Lets just inline the last argument.", "url": "https://github.com/apache/flink/pull/11848#discussion_r413785706", "createdAt": "2020-04-23T12:47:11Z", "author": {"login": "dawidwys"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java", "diffHunk": "@@ -158,19 +158,33 @@ public static void checkPhysicalLogicalTypeCompatible(\n \t\t\tString physicalFieldName,\n \t\t\tString logicalFieldName,\n \t\t\tboolean isSource) {\n-\t\tcheckIfCompatible(\n-\t\t\tphysicalFieldType,\n-\t\t\tlogicalFieldType,\n-\t\t\t(cause) -> new ValidationException(\n-\t\t\t\tString.format(\n-\t\t\t\t\t\"Type %s of table field '%s' does not match with \" +\n-\t\t\t\t\t\t\"the physical type %s of the '%s' field of the %s.\",\n+\t\tif (isSource) {\n+\t\t\tcheckIfCompatible(\n+\t\t\t\t\tphysicalFieldType,\n+\t\t\t\t\tlogicalFieldType,\n+\t\t\t\t\t(cause) -> new ValidationException(\n+\t\t\t\t\t\t\t\tString.format(\"Type %s of table field '%s' does not match with \" +\n+\t\t\t\t\t\t\t\t\t\"the physical type %s of the '%s' field of the %s.\",\n+\t\t\t\t\t\t\t\t\t\tlogicalFieldType,\n+\t\t\t\t\t\t\t\t\t\tlogicalFieldName,\n+\t\t\t\t\t\t\t\t\t\tphysicalFieldType,\n+\t\t\t\t\t\t\t\t\t\tphysicalFieldName,\n+\t\t\t\t\t\t\t\t\t\t\"TableSource return type\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b24a40f43a101b63ab73d1fa1e0c0f31178b36d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgwOTMyOQ==", "bodyText": "ok", "url": "https://github.com/apache/flink/pull/11848#discussion_r413809329", "createdAt": "2020-04-23T13:47:34Z", "author": {"login": "zjuwangg"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java", "diffHunk": "@@ -158,19 +158,33 @@ public static void checkPhysicalLogicalTypeCompatible(\n \t\t\tString physicalFieldName,\n \t\t\tString logicalFieldName,\n \t\t\tboolean isSource) {\n-\t\tcheckIfCompatible(\n-\t\t\tphysicalFieldType,\n-\t\t\tlogicalFieldType,\n-\t\t\t(cause) -> new ValidationException(\n-\t\t\t\tString.format(\n-\t\t\t\t\t\"Type %s of table field '%s' does not match with \" +\n-\t\t\t\t\t\t\"the physical type %s of the '%s' field of the %s.\",\n+\t\tif (isSource) {\n+\t\t\tcheckIfCompatible(\n+\t\t\t\t\tphysicalFieldType,\n+\t\t\t\t\tlogicalFieldType,\n+\t\t\t\t\t(cause) -> new ValidationException(\n+\t\t\t\t\t\t\t\tString.format(\"Type %s of table field '%s' does not match with \" +\n+\t\t\t\t\t\t\t\t\t\"the physical type %s of the '%s' field of the %s.\",\n+\t\t\t\t\t\t\t\t\t\tlogicalFieldType,\n+\t\t\t\t\t\t\t\t\t\tlogicalFieldName,\n+\t\t\t\t\t\t\t\t\t\tphysicalFieldType,\n+\t\t\t\t\t\t\t\t\t\tphysicalFieldName,\n+\t\t\t\t\t\t\t\t\t\t\"TableSource return type\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzc4NTcwNg=="}, "originalCommit": {"oid": "9b24a40f43a101b63ab73d1fa1e0c0f31178b36d"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NTkwMzU4OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwODoyODoyNlrOGLMhew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDowNToyOVrOGLQW3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM5MjY5OQ==", "bodyText": "What I meant is that we can inline the TableSource return type into the string. There is no reason for having it as an argument to String.format().:\n(cause) -> new ValidationException(\n\tString.format(\"Type %s of table field '%s' does not match with \" +\n\t\t\"the physical type %s of the '%s' field of the TableSource return type.\",\n\t\t\tlogicalFieldType,\n\t\t\tlogicalFieldName,\n\t\t\tphysicalFieldType,\n\t\t\tphysicalFieldName),\n\tcause));", "url": "https://github.com/apache/flink/pull/11848#discussion_r414392699", "createdAt": "2020-04-24T08:28:26Z", "author": {"login": "dawidwys"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java", "diffHunk": "@@ -169,8 +169,7 @@ public static void checkPhysicalLogicalTypeCompatible(\n \t\t\t\t\t\t\t\t\t\tlogicalFieldName,\n \t\t\t\t\t\t\t\t\t\tphysicalFieldType,\n \t\t\t\t\t\t\t\t\t\tphysicalFieldName,\n-\t\t\t\t\t\t\t\t\t\t\"TableSource return type\"),\n-\t\t\t\t\t\t\t\tcause));\n+\t\t\t\t\t\t\t\t\t\t\"TableSource return type\"), cause));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9e94d75abf678712b7a56b2a4246d3f71b7eb9e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1NTUxNg==", "bodyText": "Oh, sry, you are right.", "url": "https://github.com/apache/flink/pull/11848#discussion_r414455516", "createdAt": "2020-04-24T10:05:29Z", "author": {"login": "zjuwangg"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/utils/TypeMappingUtils.java", "diffHunk": "@@ -169,8 +169,7 @@ public static void checkPhysicalLogicalTypeCompatible(\n \t\t\t\t\t\t\t\t\t\tlogicalFieldName,\n \t\t\t\t\t\t\t\t\t\tphysicalFieldType,\n \t\t\t\t\t\t\t\t\t\tphysicalFieldName,\n-\t\t\t\t\t\t\t\t\t\t\"TableSource return type\"),\n-\t\t\t\t\t\t\t\tcause));\n+\t\t\t\t\t\t\t\t\t\t\"TableSource return type\"), cause));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM5MjY5OQ=="}, "originalCommit": {"oid": "d9e94d75abf678712b7a56b2a4246d3f71b7eb9e"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1557, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}