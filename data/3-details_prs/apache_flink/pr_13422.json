{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MjEyOTM5", "number": 13422, "title": "[FLINK-19286][runtime] Improve pipelined region scheduling performance", "bodyText": "What is the purpose of the change\nThis PR is to fix the performance regression of pipelined region scheduling due to the suboptimal implementation of PipelinedRegionSchedulingStrategy, including:\n\ntopologically sorting of vertices to deploy\nunnecessary O(V) loop when sorting an empty set of regions\n\nVerifying this change\nThis change is already covered by existing tests of pipelined region scheduling\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-09-18T10:03:55Z", "url": "https://github.com/apache/flink/pull/13422", "merged": true, "mergeCommit": {"oid": "247e45214464efc2943cedb9e6766d50171ff236"}, "closed": true, "closedAt": "2020-09-23T16:40:39Z", "author": {"login": "zhuzhurk"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKB14RAH2gAyNDg5MjEyOTM5OjBmYmNmZTFhMTE0YWFjOGQzMjU4ZDM0OWFiMzc1NTc5YTYyZTc3Y2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLnfPCgFqTQ5NDM1Mjg5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0fbcfe1a114aac8d3258d349ab375579a62e77cc", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/0fbcfe1a114aac8d3258d349ab375579a62e77cc", "committedDate": "2020-09-18T09:05:14Z", "message": "[FLINK-19286][runtime] Replace java streams on critical paths with normal for-loop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f83ae1d3e63dd910dda897f2a60fa3f802b464e", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/2f83ae1d3e63dd910dda897f2a60fa3f802b464e", "committedDate": "2020-09-18T09:47:31Z", "message": "[FLINK-19286][runtime] Improve region vertex sorting performance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62e3ab653c5b01e5ad7b750e1db97d3d066ef287", "author": {"user": {"login": "zhuzhurk", "name": "Zhu Zhu"}}, "url": "https://github.com/apache/flink/commit/62e3ab653c5b01e5ad7b750e1db97d3d066ef287", "committedDate": "2020-09-18T09:55:47Z", "message": "[FLINK-19286][runtime] Improve region sorting performance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMzc2NTQ0", "url": "https://github.com/apache/flink/pull/13422#pullrequestreview-492376544", "createdAt": "2020-09-21T08:30:28Z", "commit": {"oid": "2f83ae1d3e63dd910dda897f2a60fa3f802b464e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwODozMDoyOFrOHVFYEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwODozMzo0MFrOHVFfYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg3MDIyNA==", "bodyText": "should we also do this optimisation for other strategies to compare performance in a cleaner way?", "url": "https://github.com/apache/flink/pull/13422#discussion_r491870224", "createdAt": "2020-09-21T08:30:28Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/strategy/PipelinedRegionSchedulingStrategy.java", "diffHunk": "@@ -127,13 +136,9 @@ private void maybeScheduleRegion(final SchedulingPipelinedRegion region) {\n \n \t\tcheckState(areRegionVerticesAllInCreatedState(region), \"BUG: trying to schedule a region which is not in CREATED state\");\n \n-\t\tfinal Set<ExecutionVertexID> verticesToSchedule = IterableUtils.toStream(region.getVertices())\n-\t\t\t.map(SchedulingExecutionVertex::getId)\n-\t\t\t.collect(Collectors.toSet());\n \t\tfinal List<ExecutionVertexDeploymentOption> vertexDeploymentOptions =\n-\t\t\tSchedulingStrategyUtils.createExecutionVertexDeploymentOptionsInTopologicalOrder(\n-\t\t\t\tschedulingTopology,\n-\t\t\t\tverticesToSchedule,\n+\t\t\tSchedulingStrategyUtils.createExecutionVertexDeploymentOptions(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f83ae1d3e63dd910dda897f2a60fa3f802b464e"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg3MjA5OA==", "bodyText": "maybe we should also convert stream to a loop for performance in sortPipelinedRegionsInTopologicalOrder?", "url": "https://github.com/apache/flink/pull/13422#discussion_r491872098", "createdAt": "2020-09-21T08:33:40Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/strategy/SchedulingStrategyUtils.java", "diffHunk": "@@ -81,6 +82,14 @@\n \t\t\tfinal SchedulingTopology topology,\n \t\t\tfinal Set<SchedulingPipelinedRegion> regions) {\n \n+\t\t// Avoid the O(V) (V is the number of vertices in the topology) sorting\n+\t\t// complexity if the given set of regions is small enough\n+\t\tif (regions.size() == 0) {\n+\t\t\treturn Collections.emptyList();\n+\t\t} else if (regions.size() == 1) {\n+\t\t\treturn Collections.singletonList(regions.iterator().next());\n+\t\t}\n+\n \t\treturn IterableUtils.toStream(topology.getVertices())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e3ab653c5b01e5ad7b750e1db97d3d066ef287"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0MzUyODk5", "url": "https://github.com/apache/flink/pull/13422#pullrequestreview-494352899", "createdAt": "2020-09-23T07:30:49Z", "commit": {"oid": "62e3ab653c5b01e5ad7b750e1db97d3d066ef287"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4096, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}