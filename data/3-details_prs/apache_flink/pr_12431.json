{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2Mzc2NzQy", "number": 12431, "title": "[FLINK-18055] [sql-client] Fix catalog/database does not exist in sql client", "bodyText": "What is the purpose of the change\n*When executing use catalog hive in sql client, CatalogException will occur. The reason is SqlCommandParser adds `` for catalog name, which is unnecessary. similar case for use database command *\nBrief change log\n\nignore `` for catalog name in SqlCommandParser\nonly return database name for use database command in SqlCommandParser\n\nVerifying this change\nThis change added tests and can be verified as follows:\n\nUpdate existing test: SqlCommandParserTest\nAdded test methods in CliClientTest to for e2e test\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-06-02T06:25:38Z", "url": "https://github.com/apache/flink/pull/12431", "merged": true, "mergeCommit": {"oid": "aa40ffd94a19ed9b57988d42b8c9262ef60e172e"}, "closed": true, "closedAt": "2020-06-04T09:25:36Z", "author": {"login": "godfreyhe"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnPGEaAH2gAyNDI2Mzc2NzQyOmIwNDg4M2EyZDkxNTZjYzY4MjdkN2RlMWFhMmRiNTgzMWViMWZmNTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcn6j0ogFqTQyNDI1OTY0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56", "author": {"user": {"login": "godfreyhe", "name": "godfrey he"}}, "url": "https://github.com/apache/flink/commit/b04883a2d9156cc6827d7de1aa2db5831eb1ff56", "committedDate": "2020-06-02T06:44:20Z", "message": "[FLINK-18055] [sql-client] Fix catalog/database does not exist in sql client"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "49a0c4b73b9b54e7431aec85bf53b7fbf50ee5c9", "author": {"user": {"login": "godfreyhe", "name": "godfrey he"}}, "url": "https://github.com/apache/flink/commit/49a0c4b73b9b54e7431aec85bf53b7fbf50ee5c9", "committedDate": "2020-06-02T06:19:40Z", "message": "[FLINK-18055] [sql-client] Fix catalog/database does not exist in sql client"}, "afterCommit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56", "author": {"user": {"login": "godfreyhe", "name": "godfrey he"}}, "url": "https://github.com/apache/flink/commit/b04883a2d9156cc6827d7de1aa2db5831eb1ff56", "committedDate": "2020-06-02T06:44:20Z", "message": "[FLINK-18055] [sql-client] Fix catalog/database does not exist in sql client"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNTIzNjY2", "url": "https://github.com/apache/flink/pull/12431#pullrequestreview-422523666", "createdAt": "2020-06-02T09:56:52Z", "commit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwOTo1Njo1MlrOGdqmfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMDowMDo0NVrOGdqu_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc1OTg3MA==", "bodyText": "we can use try(resources) to avoid call finally here?", "url": "https://github.com/apache/flink/pull/12431#discussion_r433759870", "createdAt": "2020-06-02T09:56:52Z", "author": {"login": "leonardBang"}, "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java", "diffHunk": "@@ -166,6 +167,64 @@ public void write(int b) throws IOException {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testUseCatalog() throws Exception {\n+\t\tTestingExecutor executor = new TestingExecutorBuilder()\n+\t\t\t\t.setUseCatalogConsumer((ignored1, catalogName) -> {\n+\t\t\t\t\tif (!catalogName.equals(\"cat\")) {\n+\t\t\t\t\t\tthrow new SqlExecutionException(\"unexpected catalog name: \" + catalogName);\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.build();\n+\n+\t\tInputStream inputStream = new ByteArrayInputStream(\"use catalog cat;\\n\".getBytes());\n+\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream(256);\n+\t\tCliClient cliClient = null;\n+\t\tSessionContext sessionContext = new SessionContext(\"test-session\", new Environment());\n+\t\tString sessionId = executor.openSession(sessionContext);\n+\n+\t\ttry (Terminal terminal = new DumbTerminal(inputStream, outputStream)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc2MjA0Nw==", "bodyText": "Could we extract this code to a function for reuse purpose?", "url": "https://github.com/apache/flink/pull/12431#discussion_r433762047", "createdAt": "2020-06-02T10:00:45Z", "author": {"login": "leonardBang"}, "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/cli/CliClientTest.java", "diffHunk": "@@ -166,6 +167,64 @@ public void write(int b) throws IOException {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testUseCatalog() throws Exception {\n+\t\tTestingExecutor executor = new TestingExecutorBuilder()\n+\t\t\t\t.setUseCatalogConsumer((ignored1, catalogName) -> {\n+\t\t\t\t\tif (!catalogName.equals(\"cat\")) {\n+\t\t\t\t\t\tthrow new SqlExecutionException(\"unexpected catalog name: \" + catalogName);\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.build();\n+\n+\t\tInputStream inputStream = new ByteArrayInputStream(\"use catalog cat;\\n\".getBytes());\n+\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream(256);\n+\t\tCliClient cliClient = null;\n+\t\tSessionContext sessionContext = new SessionContext(\"test-session\", new Environment());\n+\t\tString sessionId = executor.openSession(sessionContext);\n+\n+\t\ttry (Terminal terminal = new DumbTerminal(inputStream, outputStream)) {\n+\t\t\tcliClient = new CliClient(terminal, sessionId, executor, File.createTempFile(\"history\", \"tmp\").toPath());\n+\t\t\tcliClient.open();\n+\t\t\tassertThat(executor.getNumUseCatalogCalls(), is(1));\n+\t\t\tString output = new String(outputStream.toByteArray());\n+\t\t\tassertFalse(output.contains(\"unexpected catalog name\"));\n+\t\t} finally {\n+\t\t\tif (cliClient != null) {\n+\t\t\t\tcliClient.close();\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Test\n+\tpublic void testUseDatabase() throws Exception {\n+\t\tTestingExecutor executor = new TestingExecutorBuilder()\n+\t\t\t\t.setUseDatabaseConsumer((ignored1, databaseName) -> {\n+\t\t\t\t\tif (!databaseName.equals(\"db\")) {\n+\t\t\t\t\t\tthrow new SqlExecutionException(\"unexpected database name: \" + databaseName);\n+\t\t\t\t\t}\n+\t\t\t\t})\n+\t\t\t\t.build();\n+\n+\t\tInputStream inputStream = new ByteArrayInputStream(\"use db;\\n\".getBytes());\n+\t\tByteArrayOutputStream outputStream = new ByteArrayOutputStream(256);\n+\t\tCliClient cliClient = null;\n+\t\tSessionContext sessionContext = new SessionContext(\"test-session\", new Environment());\n+\t\tString sessionId = executor.openSession(sessionContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTk2NDU3", "url": "https://github.com/apache/flink/pull/12431#pullrequestreview-423196457", "createdAt": "2020-06-03T03:37:23Z", "commit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzozNzoyM1rOGeK8dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzozNzozOVrOGeK8uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4OTc4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\toperands = new String[] { ((UseCatalogOperation) operation).getCatalogName() };\n          \n          \n            \n            \t\t\toperands = new String[]{StringUtils.strip(((UseCatalogOperation) operation).getCatalogName(), \"`\")};", "url": "https://github.com/apache/flink/pull/12431#discussion_r434289783", "createdAt": "2020-06-03T03:37:23Z", "author": {"login": "jxeditor"}, "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/SqlCommandParser.java", "diffHunk": "@@ -132,11 +132,10 @@ private SqlCommandParser() {\n \t\t\tcmd = SqlCommand.DROP_CATALOG;\n \t\t} else if (operation instanceof UseCatalogOperation) {\n \t\t\tcmd = SqlCommand.USE_CATALOG;\n-\t\t\toperands = new String[] { String.format(\"`%s`\", ((UseCatalogOperation) operation).getCatalogName()) };\n+\t\t\toperands = new String[] { ((UseCatalogOperation) operation).getCatalogName() };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI4OTg0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\toperands = new String[] { ((UseDatabaseOperation) operation).getDatabaseName() };\n          \n          \n            \n            \t\t\toperands = new String[]{String.format(\"%s.%s\", StringUtils.strip(op.getCatalogName(), \"`\"), StringUtils.strip(op.getDatabaseName(), \"`\"))};", "url": "https://github.com/apache/flink/pull/12431#discussion_r434289848", "createdAt": "2020-06-03T03:37:39Z", "author": {"login": "jxeditor"}, "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/SqlCommandParser.java", "diffHunk": "@@ -132,11 +132,10 @@ private SqlCommandParser() {\n \t\t\tcmd = SqlCommand.DROP_CATALOG;\n \t\t} else if (operation instanceof UseCatalogOperation) {\n \t\t\tcmd = SqlCommand.USE_CATALOG;\n-\t\t\toperands = new String[] { String.format(\"`%s`\", ((UseCatalogOperation) operation).getCatalogName()) };\n+\t\t\toperands = new String[] { ((UseCatalogOperation) operation).getCatalogName() };\n \t\t} else if (operation instanceof UseDatabaseOperation) {\n \t\t\tcmd = SqlCommand.USE;\n-\t\t\tUseDatabaseOperation op = ((UseDatabaseOperation) operation);\n-\t\t\toperands = new String[] { String.format(\"`%s`.`%s`\", op.getCatalogName(), op.getDatabaseName()) };\n+\t\t\toperands = new String[] { ((UseDatabaseOperation) operation).getDatabaseName() };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b04883a2d9156cc6827d7de1aa2db5831eb1ff56"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3911c798a8a165f31e1db500b28dcd848a0f653c", "author": {"user": {"login": "godfreyhe", "name": "godfrey he"}}, "url": "https://github.com/apache/flink/commit/3911c798a8a165f31e1db500b28dcd848a0f653c", "committedDate": "2020-06-03T05:52:24Z", "message": "address Leonard's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MjU5NjQz", "url": "https://github.com/apache/flink/pull/12431#pullrequestreview-424259643", "createdAt": "2020-06-04T09:22:45Z", "commit": {"oid": "3911c798a8a165f31e1db500b28dcd848a0f653c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4183, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}