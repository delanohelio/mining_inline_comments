{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2OTkwMzA3", "number": 12994, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOToyMzoyNlrOEVvpIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTozMjo1OVrOEWJbKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjM2MTMwOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/BufferManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOToyMzoyNlrOG8q_VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOToyMzoyNlrOG8q_VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI3MjA4NA==", "bodyText": "The previous initial credit seems to be got from the returned collection size of globalPool.requestMemorySegments() somehow. If we can get the initial credit in advance, then it would be better to also pass it as argument into requestMemorySegments to get required size. To do so, the NetworkBufferPool#requestMemorySegments seems more general to decouple with credit semantic.", "url": "https://github.com/apache/flink/pull/12994#discussion_r466272084", "createdAt": "2020-08-06T09:23:26Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/BufferManager.java", "diffHunk": "@@ -125,9 +125,9 @@ private boolean shouldContinueRequest(BufferPool bufferPool) {\n \t}\n \n \t/**\n-\t * Requests exclusive buffers from the provider and returns the number of requested amount.\n+\t * Requests exclusive buffers from the provider.\n \t */\n-\tint requestExclusiveBuffers() throws IOException {\n+\tvoid requestExclusiveBuffers() throws IOException {\n \t\tCollection<MemorySegment> segments = globalPool.requestMemorySegments();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2efaa69c5791a59239feec7c122ba4fd39462238"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjU1ODY1OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/NetworkBufferPool.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToyNDo1NFrOG9S--Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToyNDo1NFrOG9S--Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkyNzM1Mw==", "bodyText": "Do you think we should check the passed argument more than 0 in advance?", "url": "https://github.com/apache/flink/pull/12994#discussion_r466927353", "createdAt": "2020-08-07T09:24:54Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/NetworkBufferPool.java", "diffHunk": "@@ -161,13 +155,13 @@ public void recycle(MemorySegment segment) {\n \t}\n \n \t@Override\n-\tpublic List<MemorySegment> requestMemorySegments() throws IOException {\n+\tpublic List<MemorySegment> requestMemorySegments(int numberOfSegmentsToRequest) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "707c67f554cf59d2ba1e848e05cef0aea1fe7a89"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjU1OTIxOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToyNTowM1rOG9S_SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOToyNTowM1rOG9S_SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkyNzQzMg==", "bodyText": "nit: if we want to check this argument, it would be better to be done in the initialization of constructor.\nI think we can remove it directly since the passed networkBuffersPerChannel in constructor should already be checked in previous component.", "url": "https://github.com/apache/flink/pull/12994#discussion_r466927432", "createdAt": "2020-08-07T09:25:03Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannel.java", "diffHunk": "@@ -128,8 +128,9 @@ public RemoteInputChannel(\n \tvoid assignExclusiveSegments() throws IOException {\n \t\tcheckState(bufferManager.unsynchronizedGetAvailableExclusiveBuffers() == 0,\n \t\t\t\"Bug in input channel setup logic: exclusive buffers have already been set for this input channel.\");\n+\t\tcheckState(initialCredit > 0, \"Number of exclusive buffers must be larger than 0.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "707c67f554cf59d2ba1e848e05cef0aea1fe7a89"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjU4MjkzOnYy", "diffSide": "LEFT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannelTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTozMjoxOFrOG9TNgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTozMjoxOFrOG9TNgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzMTA3Mg==", "bodyText": "This change seems unnecessary?", "url": "https://github.com/apache/flink/pull/12994#discussion_r466931072", "createdAt": "2020-08-07T09:32:18Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannelTest.java", "diffHunk": "@@ -1121,14 +1118,15 @@ public void testUnblockReleasedChannel() throws Exception {\n \t\tremoteChannel.resumeConsumption();\n \t}\n \n-\t// ---------------------------------------------------------------------------------------------\n-\n-\tpublic static RemoteInputChannel createRemoteInputChannel(SingleInputGate inputGate, int numExclusiveSegments) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "707c67f554cf59d2ba1e848e05cef0aea1fe7a89"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNjU4NTM3OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannelTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTozMjo1OVrOG9TO5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwOTozMjo1OVrOG9TO5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzMTQyOA==", "bodyText": "I guess this test should be adjusted as well based on above comments.", "url": "https://github.com/apache/flink/pull/12994#discussion_r466931428", "createdAt": "2020-08-07T09:32:59Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/RemoteInputChannelTest.java", "diffHunk": "@@ -1121,14 +1118,15 @@ public void testUnblockReleasedChannel() throws Exception {\n \t\tremoteChannel.resumeConsumption();\n \t}\n \n-\t// ---------------------------------------------------------------------------------------------\n-\n-\tpublic static RemoteInputChannel createRemoteInputChannel(SingleInputGate inputGate, int numExclusiveSegments) {\n-\t\treturn InputChannelBuilder.newBuilder()\n-\t\t\t.setNetworkBuffersPerChannel(numExclusiveSegments)\n-\t\t\t.buildRemoteChannel(inputGate);\n+\t@Test(expected = IllegalStateException.class)\n+\tpublic void testIllegalNumberOfExclusiveBuffers() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "707c67f554cf59d2ba1e848e05cef0aea1fe7a89"}, "originalPosition": 120}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4990, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}