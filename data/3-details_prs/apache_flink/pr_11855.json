{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MDg2MDEw", "number": 11855, "title": "[FLINK-13639] Refactor the IntermediateResultPartitionID to consist o\u2026", "bodyText": "\u2026f IntermediateDataSetID and partitionIndex\nWhat is the purpose of the change\nRefactor the IntermediateResultPartitionID to consist of IntermediateDataSetID and partitionIndex\nBrief change log\nRefactor the IntermediateResultPartitionID to consist of IntermediateDataSetID and partitionIndex\nVerifying this change\nThis change is already covered by existing tests, such as basic wordcount e2e test.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: yes\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: probably yes\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-04-22T06:55:55Z", "url": "https://github.com/apache/flink/pull/11855", "merged": true, "mergeCommit": {"oid": "c4b44e9d4a7af9e841f785fcf0e4831f4cd5afe9"}, "closed": true, "closedAt": "2020-04-24T15:30:08Z", "author": {"login": "KarmaGYZ"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaDzZXAFqTM5Nzk0ODA0MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcazN6WAFqTQwMDA0OTY0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3OTQ4MDQx", "url": "https://github.com/apache/flink/pull/11855#pullrequestreview-397948041", "createdAt": "2020-04-22T08:13:58Z", "commit": {"oid": "023e49457714f991f4213803372d5e3e2ba844f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoxMzo1OFrOGJpbsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoxMzo1OFrOGJpbsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc2OTIwMQ==", "bodyText": "Consider make ResultID Serializable?", "url": "https://github.com/apache/flink/pull/11855#discussion_r412769201", "createdAt": "2020-04-22T08:13:58Z", "author": {"login": "zhuzhurk"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobgraph/IntermediateResultPartitionID.java", "diffHunk": "@@ -27,29 +28,76 @@\n /**\n  * Id identifying {@link IntermediateResultPartition}.\n  */\n-public class IntermediateResultPartitionID extends AbstractID implements ResultID {\n+public class IntermediateResultPartitionID implements Comparable<IntermediateResultPartitionID>, ResultID, java.io.Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023e49457714f991f4213803372d5e3e2ba844f4"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3OTQ4OTY0", "url": "https://github.com/apache/flink/pull/11855#pullrequestreview-397948964", "createdAt": "2020-04-22T08:15:07Z", "commit": {"oid": "023e49457714f991f4213803372d5e3e2ba844f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoxNTowOFrOGJpeww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoxNTowOFrOGJpeww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc2OTk4Nw==", "bodyText": "I think it's better to let intermediateDataSetID implement writeTo() and fromByteBuf (...) and just invokes them in IntermediateResultPartitionID.", "url": "https://github.com/apache/flink/pull/11855#discussion_r412769987", "createdAt": "2020-04-22T08:15:08Z", "author": {"login": "zhuzhurk"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobgraph/IntermediateResultPartitionID.java", "diffHunk": "@@ -27,29 +28,76 @@\n /**\n  * Id identifying {@link IntermediateResultPartition}.\n  */\n-public class IntermediateResultPartitionID extends AbstractID implements ResultID {\n+public class IntermediateResultPartitionID implements Comparable<IntermediateResultPartitionID>, ResultID, java.io.Serializable {\n \n \tprivate static final long serialVersionUID = 1L;\n \n+\tprivate final IntermediateDataSetID intermediateDataSetID;\n+\tprivate final int partitionNum;\n+\n \t/**\n-\t * Creates an new random intermediate result partition ID.\n+\t * Creates an new random intermediate result partition ID for testing.\n \t */\n+\t@VisibleForTesting\n \tpublic IntermediateResultPartitionID() {\n-\t\tsuper();\n+\t\tthis.partitionNum = -1;\n+\t\tthis.intermediateDataSetID = new IntermediateDataSetID(new AbstractID());\n \t}\n \n-\tpublic IntermediateResultPartitionID(long lowerPart, long upperPart) {\n-\t\tsuper(lowerPart, upperPart);\n+\t/**\n+\t * Creates an new intermediate result partition ID with {@link IntermediateDataSetID} and the partitionNum.\n+\t */\n+\tpublic IntermediateResultPartitionID(IntermediateDataSetID intermediateDataSetID, int partitionNum) {\n+\t\tthis.intermediateDataSetID = intermediateDataSetID;\n+\t\tthis.partitionNum = partitionNum;\n \t}\n \n \tpublic void writeTo(ByteBuf buf) {\n-\t\tbuf.writeLong(this.lowerPart);\n-\t\tbuf.writeLong(this.upperPart);\n+\t\tbuf.writeLong(intermediateDataSetID.getLowerPart());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023e49457714f991f4213803372d5e3e2ba844f4"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3OTQ5MzYy", "url": "https://github.com/apache/flink/pull/11855#pullrequestreview-397949362", "createdAt": "2020-04-22T08:15:37Z", "commit": {"oid": "023e49457714f991f4213803372d5e3e2ba844f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoxNTozN1rOGJpgBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoxNTozN1rOGJpgBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc3MDMwOA==", "bodyText": "consider implement IntermediateResultPartitionID#equals(...)", "url": "https://github.com/apache/flink/pull/11855#discussion_r412770308", "createdAt": "2020-04-22T08:15:37Z", "author": {"login": "zhuzhurk"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobgraph/IntermediateResultPartitionID.java", "diffHunk": "@@ -27,29 +28,76 @@\n /**\n  * Id identifying {@link IntermediateResultPartition}.\n  */\n-public class IntermediateResultPartitionID extends AbstractID implements ResultID {\n+public class IntermediateResultPartitionID implements Comparable<IntermediateResultPartitionID>, ResultID, java.io.Serializable {\n \n \tprivate static final long serialVersionUID = 1L;\n \n+\tprivate final IntermediateDataSetID intermediateDataSetID;\n+\tprivate final int partitionNum;\n+\n \t/**\n-\t * Creates an new random intermediate result partition ID.\n+\t * Creates an new random intermediate result partition ID for testing.\n \t */\n+\t@VisibleForTesting\n \tpublic IntermediateResultPartitionID() {\n-\t\tsuper();\n+\t\tthis.partitionNum = -1;\n+\t\tthis.intermediateDataSetID = new IntermediateDataSetID(new AbstractID());\n \t}\n \n-\tpublic IntermediateResultPartitionID(long lowerPart, long upperPart) {\n-\t\tsuper(lowerPart, upperPart);\n+\t/**\n+\t * Creates an new intermediate result partition ID with {@link IntermediateDataSetID} and the partitionNum.\n+\t */\n+\tpublic IntermediateResultPartitionID(IntermediateDataSetID intermediateDataSetID, int partitionNum) {\n+\t\tthis.intermediateDataSetID = intermediateDataSetID;\n+\t\tthis.partitionNum = partitionNum;\n \t}\n \n \tpublic void writeTo(ByteBuf buf) {\n-\t\tbuf.writeLong(this.lowerPart);\n-\t\tbuf.writeLong(this.upperPart);\n+\t\tbuf.writeLong(intermediateDataSetID.getLowerPart());\n+\t\tbuf.writeLong(intermediateDataSetID.getUpperPart());\n+\t\tbuf.writeInt(partitionNum);\n \t}\n \n \tpublic static IntermediateResultPartitionID fromByteBuf(ByteBuf buf) {\n-\t\tlong lower = buf.readLong();\n-\t\tlong upper = buf.readLong();\n-\t\treturn new IntermediateResultPartitionID(lower, upper);\n+\t\tfinal long lower = buf.readLong();\n+\t\tfinal long upper = buf.readLong();\n+\t\tfinal int partitionNum = buf.readInt();\n+\t\tfinal IntermediateDataSetID intermediateDataSetID = new IntermediateDataSetID(new AbstractID(lower, upper));\n+\t\treturn new IntermediateResultPartitionID(intermediateDataSetID, partitionNum);\n+\t}\n+\n+\t@Override\n+\tpublic boolean equals(Object obj) {\n+\t\tif (obj == this) {\n+\t\t\treturn true;\n+\t\t} else if (obj != null && obj.getClass() == getClass()) {\n+\t\t\tIntermediateResultPartitionID that = (IntermediateResultPartitionID) obj;\n+\t\t\treturn that.intermediateDataSetID.getLowerPart() == this.intermediateDataSetID.getLowerPart()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023e49457714f991f4213803372d5e3e2ba844f4"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3OTQ5NjMw", "url": "https://github.com/apache/flink/pull/11855#pullrequestreview-397949630", "createdAt": "2020-04-22T08:15:55Z", "commit": {"oid": "023e49457714f991f4213803372d5e3e2ba844f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoxNTo1NVrOGJpg8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoxNTo1NVrOGJpg8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc3MDU0Ng==", "bodyText": "consider implement IntermediateResultPartitionID#hashCode(...)", "url": "https://github.com/apache/flink/pull/11855#discussion_r412770546", "createdAt": "2020-04-22T08:15:55Z", "author": {"login": "zhuzhurk"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobgraph/IntermediateResultPartitionID.java", "diffHunk": "@@ -27,29 +28,76 @@\n /**\n  * Id identifying {@link IntermediateResultPartition}.\n  */\n-public class IntermediateResultPartitionID extends AbstractID implements ResultID {\n+public class IntermediateResultPartitionID implements Comparable<IntermediateResultPartitionID>, ResultID, java.io.Serializable {\n \n \tprivate static final long serialVersionUID = 1L;\n \n+\tprivate final IntermediateDataSetID intermediateDataSetID;\n+\tprivate final int partitionNum;\n+\n \t/**\n-\t * Creates an new random intermediate result partition ID.\n+\t * Creates an new random intermediate result partition ID for testing.\n \t */\n+\t@VisibleForTesting\n \tpublic IntermediateResultPartitionID() {\n-\t\tsuper();\n+\t\tthis.partitionNum = -1;\n+\t\tthis.intermediateDataSetID = new IntermediateDataSetID(new AbstractID());\n \t}\n \n-\tpublic IntermediateResultPartitionID(long lowerPart, long upperPart) {\n-\t\tsuper(lowerPart, upperPart);\n+\t/**\n+\t * Creates an new intermediate result partition ID with {@link IntermediateDataSetID} and the partitionNum.\n+\t */\n+\tpublic IntermediateResultPartitionID(IntermediateDataSetID intermediateDataSetID, int partitionNum) {\n+\t\tthis.intermediateDataSetID = intermediateDataSetID;\n+\t\tthis.partitionNum = partitionNum;\n \t}\n \n \tpublic void writeTo(ByteBuf buf) {\n-\t\tbuf.writeLong(this.lowerPart);\n-\t\tbuf.writeLong(this.upperPart);\n+\t\tbuf.writeLong(intermediateDataSetID.getLowerPart());\n+\t\tbuf.writeLong(intermediateDataSetID.getUpperPart());\n+\t\tbuf.writeInt(partitionNum);\n \t}\n \n \tpublic static IntermediateResultPartitionID fromByteBuf(ByteBuf buf) {\n-\t\tlong lower = buf.readLong();\n-\t\tlong upper = buf.readLong();\n-\t\treturn new IntermediateResultPartitionID(lower, upper);\n+\t\tfinal long lower = buf.readLong();\n+\t\tfinal long upper = buf.readLong();\n+\t\tfinal int partitionNum = buf.readInt();\n+\t\tfinal IntermediateDataSetID intermediateDataSetID = new IntermediateDataSetID(new AbstractID(lower, upper));\n+\t\treturn new IntermediateResultPartitionID(intermediateDataSetID, partitionNum);\n+\t}\n+\n+\t@Override\n+\tpublic boolean equals(Object obj) {\n+\t\tif (obj == this) {\n+\t\t\treturn true;\n+\t\t} else if (obj != null && obj.getClass() == getClass()) {\n+\t\t\tIntermediateResultPartitionID that = (IntermediateResultPartitionID) obj;\n+\t\t\treturn that.intermediateDataSetID.getLowerPart() == this.intermediateDataSetID.getLowerPart()\n+\t\t\t\t&& that.intermediateDataSetID.getUpperPart() == this.intermediateDataSetID.getUpperPart()\n+\t\t\t\t&& that.partitionNum == this.partitionNum;\n+\t\t} else {\n+\t\t\treturn false;\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic int hashCode() {\n+\t\treturn ((int)  this.intermediateDataSetID.getLowerPart()) ^", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023e49457714f991f4213803372d5e3e2ba844f4"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3OTUxMTQx", "url": "https://github.com/apache/flink/pull/11855#pullrequestreview-397951141", "createdAt": "2020-04-22T08:17:48Z", "commit": {"oid": "023e49457714f991f4213803372d5e3e2ba844f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoxNzo0OFrOGJpmWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODoxNzo0OFrOGJpmWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc3MTkyOA==", "bodyText": "Why is Comparable needed?", "url": "https://github.com/apache/flink/pull/11855#discussion_r412771928", "createdAt": "2020-04-22T08:17:48Z", "author": {"login": "zhuzhurk"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobgraph/IntermediateResultPartitionID.java", "diffHunk": "@@ -27,29 +28,76 @@\n /**\n  * Id identifying {@link IntermediateResultPartition}.\n  */\n-public class IntermediateResultPartitionID extends AbstractID implements ResultID {\n+public class IntermediateResultPartitionID implements Comparable<IntermediateResultPartitionID>, ResultID, java.io.Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023e49457714f991f4213803372d5e3e2ba844f4"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "023e49457714f991f4213803372d5e3e2ba844f4", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/023e49457714f991f4213803372d5e3e2ba844f4", "committedDate": "2020-04-22T06:52:21Z", "message": "[FLINK-13639] Refactor the IntermediateResultPartitionID to consist of IntermediateDataSetID and partitionIndex"}, "afterCommit": {"oid": "77720a95c9fb8163487dbec5bc82681f1e7f9fde", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/77720a95c9fb8163487dbec5bc82681f1e7f9fde", "committedDate": "2020-04-22T08:49:53Z", "message": "[FLINK-13639] Refactor the IntermediateResultPartitionID to consist of IntermediateDataSetID and partitionIndex"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "77720a95c9fb8163487dbec5bc82681f1e7f9fde", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/77720a95c9fb8163487dbec5bc82681f1e7f9fde", "committedDate": "2020-04-22T08:49:53Z", "message": "[FLINK-13639] Refactor the IntermediateResultPartitionID to consist of IntermediateDataSetID and partitionIndex"}, "afterCommit": {"oid": "d093e3078fb4456fd866e6d63dd36b3da1a4f776", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/d093e3078fb4456fd866e6d63dd36b3da1a4f776", "committedDate": "2020-04-22T09:13:43Z", "message": "[FLINK-13639] Refactor the IntermediateResultPartitionID to consist of IntermediateDataSetID and partitionIndex"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MDAwOTQ0", "url": "https://github.com/apache/flink/pull/11855#pullrequestreview-398000944", "createdAt": "2020-04-22T09:18:38Z", "commit": {"oid": "d093e3078fb4456fd866e6d63dd36b3da1a4f776"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToxODozOVrOGJsTJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOToxODozOVrOGJsTJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjgxNjE2Ng==", "bodyText": "IntermediateDataSetID has a param-less ctor I think.", "url": "https://github.com/apache/flink/pull/11855#discussion_r412816166", "createdAt": "2020-04-22T09:18:39Z", "author": {"login": "zhuzhurk"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobgraph/IntermediateResultPartitionID.java", "diffHunk": "@@ -27,29 +28,61 @@\n /**\n  * Id identifying {@link IntermediateResultPartition}.\n  */\n-public class IntermediateResultPartitionID extends AbstractID implements ResultID {\n+public class IntermediateResultPartitionID implements ResultID {\n \n \tprivate static final long serialVersionUID = 1L;\n \n+\tprivate final IntermediateDataSetID intermediateDataSetID;\n+\tprivate final int partitionNum;\n+\n \t/**\n-\t * Creates an new random intermediate result partition ID.\n+\t * Creates an new random intermediate result partition ID for testing.\n \t */\n+\t@VisibleForTesting\n \tpublic IntermediateResultPartitionID() {\n-\t\tsuper();\n+\t\tthis.partitionNum = -1;\n+\t\tthis.intermediateDataSetID = new IntermediateDataSetID(new AbstractID());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d093e3078fb4456fd866e6d63dd36b3da1a4f776"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d093e3078fb4456fd866e6d63dd36b3da1a4f776", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/d093e3078fb4456fd866e6d63dd36b3da1a4f776", "committedDate": "2020-04-22T09:13:43Z", "message": "[FLINK-13639] Refactor the IntermediateResultPartitionID to consist of IntermediateDataSetID and partitionIndex"}, "afterCommit": {"oid": "32d5ffa4730232c0ae2d978c4a9537604e5510db", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/32d5ffa4730232c0ae2d978c4a9537604e5510db", "committedDate": "2020-04-22T09:20:39Z", "message": "[FLINK-13639] Refactor the IntermediateResultPartitionID to consist of IntermediateDataSetID and partitionIndex"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "206279cb7c4bbb95605ce57a71d5f43568a2649b", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/206279cb7c4bbb95605ce57a71d5f43568a2649b", "committedDate": "2020-04-24T08:05:47Z", "message": "[FLINK-13639] Refactor the IntermediateResultPartitionID to consist of IntermediateDataSetID and partitionIndex"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32d5ffa4730232c0ae2d978c4a9537604e5510db", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/32d5ffa4730232c0ae2d978c4a9537604e5510db", "committedDate": "2020-04-22T09:20:39Z", "message": "[FLINK-13639] Refactor the IntermediateResultPartitionID to consist of IntermediateDataSetID and partitionIndex"}, "afterCommit": {"oid": "206279cb7c4bbb95605ce57a71d5f43568a2649b", "author": {"user": {"login": "KarmaGYZ", "name": "Yangze Guo"}}, "url": "https://github.com/apache/flink/commit/206279cb7c4bbb95605ce57a71d5f43568a2649b", "committedDate": "2020-04-24T08:05:47Z", "message": "[FLINK-13639] Refactor the IntermediateResultPartitionID to consist of IntermediateDataSetID and partitionIndex"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMDQ5NjQz", "url": "https://github.com/apache/flink/pull/11855#pullrequestreview-400049643", "createdAt": "2020-04-24T15:28:29Z", "commit": {"oid": "206279cb7c4bbb95605ce57a71d5f43568a2649b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4759, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}