{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NzgyNjU5", "number": 14024, "title": "[FLINK-20079][task] Fix StreamTask initialization order", "bodyText": "What is the purpose of the change\nIn FLINK-19681, UnalignedCheckpointITCase was updated to put more backpressure.\nThis revealed a bug introduced in FLINK-19907: resultPartitions can be requested before the operator chain is initialized.\nIf partitions are requested fast enough then the operator (chain) can receive data before being initialized. In particular, this can cause out-of-orderness: elements from the upstream followed by elements from operator state (not channel state).\nA proper fix would be to initialize the chain after the outputs but before the inputs.\nBrief change log\n\npull the change to UnalignedCheckpointITCase from FLINK-19681\nfix initialization in StreamTask: inline readRecoveredChannelState and put operatorChain init between in and out\n\n(the two commits can be squashed)\nVerifying this change\nUpdated UnalignedCheckpointITCase, OverWindowITCase\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: yes\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? no", "createdAt": "2020-11-10T21:45:40Z", "url": "https://github.com/apache/flink/pull/14024", "merged": true, "mergeCommit": {"oid": "bf16a7dd2a2786847abd440c69ab8ade59853a1d"}, "closed": true, "closedAt": "2020-11-11T16:48:12Z", "author": {"login": "rkhachatryan"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbQwr7gBqjM5ODExNTM1NjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbayWVgBqjM5ODMwMTAxMzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10e38b5e449d42aa2d7563a9e44f6eb1c53c9509", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/10e38b5e449d42aa2d7563a9e44f6eb1c53c9509", "committedDate": "2020-11-10T20:19:35Z", "message": "[FLINK-20079][task] Initialize operator chain before upstream partition request"}, "afterCommit": {"oid": "26ec4e6904ae7ae4d307fc10c08bbbc264a820a5", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/26ec4e6904ae7ae4d307fc10c08bbbc264a820a5", "committedDate": "2020-11-10T22:04:21Z", "message": "[FLINK-20079][task] Initialize operator chain before upstream partition request"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3OTA0MzY0", "url": "https://github.com/apache/flink/pull/14024#pullrequestreview-527904364", "createdAt": "2020-11-11T06:48:51Z", "commit": {"oid": "d206d47d44909992405611c8af17a65cb5be0775"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0ODo1MVrOHxAVwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNjo0ODo1MVrOHxAVwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE0Nzg0MQ==", "bodyText": "Why do we need to reduce the backpressure here? I'm worried that any solution on top of it will only work with a certain minimal flow.\nNote that in ef4f78d#diff-c0d448d637f04cc203de3592d7fab0ba2412f2d75c59dcf6e44cc4a3c18e5851R568 I added a modification to the test that avoids backpressuring during recovery (by applying backpressure only after the first successful checkpoint.", "url": "https://github.com/apache/flink/pull/14024#discussion_r521147841", "createdAt": "2020-11-11T06:48:51Z", "author": {"login": "AHeise"}, "path": "flink-tests/src/test/java/org/apache/flink/test/checkpointing/UnalignedCheckpointITCase.java", "diffHunk": "@@ -531,8 +534,10 @@ public void invoke(Long value, Context context) throws Exception {\n \t\t\tstate.numOutput++;\n \n \t\t\tif (state.completedCheckpoints < minCheckpoints) {\n-\t\t\t\t// induce heavy backpressure until enough checkpoints have been written\n-\t\t\t\tThread.sleep(0, 100_000);\n+\t\t\t\t// induce backpressure until enough checkpoints have been written\n+\t\t\t\tif (random.nextInt(1000) == 42) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d206d47d44909992405611c8af17a65cb5be0775"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1531ec1122918c4a30311af8fb3f2dcd9deaf774", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/1531ec1122918c4a30311af8fb3f2dcd9deaf774", "committedDate": "2020-11-11T09:45:27Z", "message": "[FLINK-20079][task] Initialize operator chain before upstream partition request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "26ec4e6904ae7ae4d307fc10c08bbbc264a820a5", "author": {"user": {"login": "rkhachatryan", "name": "Roman"}}, "url": "https://github.com/apache/flink/commit/26ec4e6904ae7ae4d307fc10c08bbbc264a820a5", "committedDate": "2020-11-10T22:04:21Z", "message": "[FLINK-20079][task] Initialize operator chain before upstream partition request"}, "afterCommit": {"oid": "1531ec1122918c4a30311af8fb3f2dcd9deaf774", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/1531ec1122918c4a30311af8fb3f2dcd9deaf774", "committedDate": "2020-11-11T09:45:27Z", "message": "[FLINK-20079][task] Initialize operator chain before upstream partition request"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4591, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}