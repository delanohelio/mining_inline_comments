{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NzQ4MTAw", "number": 11874, "title": "[FLINK-16935][table-planner-blink] Enable or delete most of the ignored test cases in blink planner.", "bodyText": "Most of the ignored tests are actually already supported.", "createdAt": "2020-04-23T08:01:57Z", "url": "https://github.com/apache/flink/pull/11874", "merged": true, "mergeCommit": {"oid": "490e2af0f9cc3021b6423535768e9f3604b27519"}, "closed": true, "closedAt": "2020-04-25T12:37:00Z", "author": {"login": "KurtYoung"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaYMHUAH2gAyNDA3NzQ4MTAwOmYwYTViYmFiODllZjU1YTUxMzVkYWY3MGIxYTk5MGUxMzIxMjFkYjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbFRx7gFqTQwMDM4OTI3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f0a5bbab89ef55a5135daf70b1a990e132121db0", "author": {"user": {"login": "KurtYoung", "name": "Kurt Young"}}, "url": "https://github.com/apache/flink/commit/f0a5bbab89ef55a5135daf70b1a990e132121db0", "committedDate": "2020-04-23T07:59:04Z", "message": "[FLINK-16935][table-planner-blink] Enable or delete most of the ignored test cases in blink planner."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjAzNjgw", "url": "https://github.com/apache/flink/pull/11874#pullrequestreview-399603680", "createdAt": "2020-04-24T02:43:07Z", "commit": {"oid": "f0a5bbab89ef55a5135daf70b1a990e132121db0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMjo0MzowOFrOGLD4Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMzowMDo0MVrOGLEN2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1MTAxNA==", "bodyText": "This is on purpose. Tests in this file should be manually checked (e.g. whether the current timestamp is correct).", "url": "https://github.com/apache/flink/pull/11874#discussion_r414251014", "createdAt": "2020-04-24T02:43:08Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/expressions/NonDeterministicTests.scala", "diffHunk": "@@ -23,71 +23,65 @@ import org.apache.flink.table.api.scala._\n import org.apache.flink.table.planner.expressions.utils.ExpressionTestBase\n import org.apache.flink.types.Row\n \n-import org.junit.{Ignore, Test}\n+import org.junit.Test\n \n /**\n   * Tests that can only be checked manually as they are non-deterministic.\n   */\n class NonDeterministicTests extends ExpressionTestBase {\n \n-  @Ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0a5bbab89ef55a5135daf70b1a990e132121db0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1MTE0MA==", "bodyText": "Shoud we fix this problem? This test is moved from old planner DecimalTypeTest#testDecimalCasting. And in blink planner, it will throw exception when cast using TypeInformation.\njava.lang.ClassCastException: org.apache.flink.table.types.logical.LegacyTypeInformationType cannot be cast to org.apache.flink.table.types.logical.DecimalType\n\n\tat org.apache.flink.table.planner.calcite.FlinkTypeFactory.newRelDataType$1(FlinkTypeFactory.scala:95)\n\tat org.apache.flink.table.planner.calcite.FlinkTypeFactory.createFieldTypeFromLogicalType(FlinkTypeFactory.scala:146)\n\tat org.apache.flink.table.planner.expressions.converter.CustomizedConvertRule.convertCast(CustomizedConvertRule.java:106)\n\tat org.apache.flink.table.planner.expressions.converter.CustomizedConvertRule.lambda$convert$0(CustomizedConvertRule.java:98)\n\tat java.util.Optional.map(Optional.java:215)\n\tat org.apache.flink.table.planner.expressions.converter.CustomizedConvertRule.convert(CustomizedConvertRule.java:98)\n\tat org.apache.flink.table.planner.expressions.converter.ExpressionConverter.visit(ExpressionConverter.java:97)\n\tat org.apache.flink.table.planner.expressions.converter.ExpressionConverter.visit(ExpressionConverter.java:72)\n\tat org.apache.flink.table.expressions.CallExpression.accept(CallExpression.java:122)\n\tat org.apache.flink.table.planner.plan.QueryOperationConverter.convertExprToRexNode(QueryOperationConverter.java:741)\n\tat org.apache.flink.table.planner.plan.QueryOperationConverter.access$800(QueryOperationConverter.java:132)\n\tat org.apache.flink.table.planner.plan.QueryOperationConverter$SingleRelVisitor.lambda$convertToRexNodes$6(QueryOperationConverter.java:547)\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\n\tat org.apache.flink.table.planner.plan.QueryOperationConverter$SingleRelVisitor.convertToRexNodes(QueryOperationConverter.java:548)\n\tat org.apache.flink.table.planner.plan.QueryOperationConverter$SingleRelVisitor.visit(QueryOperationConverter.java:156)\n\tat org.apache.flink.table.planner.plan.QueryOperationConverter$SingleRelVisitor.visit(QueryOperationConverter.java:152)\n\tat org.apache.flink.table.operations.ProjectQueryOperation.accept(ProjectQueryOperation.java:75)\n\tat org.apache.flink.table.planner.plan.QueryOperationConverter.defaultMethod(QueryOperationConverter.java:149)\n\tat org.apache.flink.table.planner.plan.QueryOperationConverter.defaultMethod(QueryOperationConverter.java:131)\n\tat org.apache.flink.table.operations.utils.QueryOperationDefaultVisitor.visit(QueryOperationDefaultVisitor.java:47)\n\tat org.apache.flink.table.operations.ProjectQueryOperation.accept(ProjectQueryOperation.java:75)\n\tat org.apache.flink.table.planner.calcite.FlinkRelBuilder.queryOperation(FlinkRelBuilder.scala:176)\n\tat org.apache.flink.table.planner.expressions.utils.ExpressionTestBase.addTableApiTestExpr(ExpressionTestBase.scala:242)\n\tat org.apache.flink.table.planner.expressions.utils.ExpressionTestBase.addTableApiTestExpr(ExpressionTestBase.scala:236)\n\tat org.apache.flink.table.planner.expressions.utils.ExpressionTestBase.testTableApi(ExpressionTestBase.scala:226)\n\tat org.apache.flink.table.planner.expressions.DecimalTypeTest.testDecimalCasting(DecimalTypeTest.scala:136)", "url": "https://github.com/apache/flink/pull/11874#discussion_r414251140", "createdAt": "2020-04-24T02:43:28Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/expressions/DecimalTypeTest.scala", "diffHunk": "@@ -129,23 +130,6 @@ class DecimalTypeTest extends ExpressionTestBase {\n       Long.MinValue.toString)\n   }\n \n-  @Ignore\n-  @Test\n-  def testDefaultDecimalCasting(): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0a5bbab89ef55a5135daf70b1a990e132121db0"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NjYwMw==", "bodyText": "Why this is removed? I run this test and can get a plan. Is the plan incorrect? cc @godfreyhe\nHashJoin(joinType=[LeftSemiJoin], where=[=(c, a1)], select=[a, b, c], build=[right], tryDistinctBuildRow=[true])\n:- Exchange(distribution=[hash[c]], shuffle_mode=[BATCH])\n:  +- TableSourceScan(table=[[default_catalog, default_database, A, source: [TestTableSource(a, b, c)]]], fields=[a, b, c], reuse_id=[1])\n+- Exchange(distribution=[hash[a1]])\n   +- LocalHashAggregate(groupBy=[a1], select=[a1])\n      +- Calc(select=[a AS a1], where=[=(b, _UTF-16LE'two')])\n         +- Reused(reference_id=[1])", "url": "https://github.com/apache/flink/pull/11874#discussion_r414256603", "createdAt": "2020-04-24T03:00:41Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/batch/table/stringexpr/SetOperatorsTest.scala", "diffHunk": "@@ -22,24 +22,12 @@ import org.apache.flink.api.scala._\n import org.apache.flink.table.api.scala._\n import org.apache.flink.table.planner.utils.TableTestBase\n \n-import org.junit.{Ignore, Test}\n+import org.junit.Test\n \n import java.sql.Timestamp\n \n class SetOperatorsTest extends TableTestBase {\n \n-  @Ignore(\"Support in subQuery in ExpressionConverter\")\n-  @Test\n-  def testInWithFilter(): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0a5bbab89ef55a5135daf70b1a990e132121db0"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bdd69335126fb32b5c98ea0dfcfe32d588610f5", "author": {"user": {"login": "KurtYoung", "name": "Kurt Young"}}, "url": "https://github.com/apache/flink/commit/1bdd69335126fb32b5c98ea0dfcfe32d588610f5", "committedDate": "2020-04-24T09:58:02Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzg5Mjc0", "url": "https://github.com/apache/flink/pull/11874#pullrequestreview-400389274", "createdAt": "2020-04-25T12:30:59Z", "commit": {"oid": "1bdd69335126fb32b5c98ea0dfcfe32d588610f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4805, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}