{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNDA4MjQ5", "number": 11441, "title": "[FLINK-16653][network][tests] Introduce ResultPartitionWriterTestBase for simplifying tests", "bodyText": "What is the purpose of the change\nAt the moment there are at-least four implementations of ResultPartitionWriter interface used in unit tests. And there are about ten methods to be implemented for ResultPartitionWriter and most of them are dummy in tests.\nWhen we want to extend the methods for ResultPartitionWriter, the above four dummy implementations in tests have to be adjusted as well, to waste a bit efforts.\nTherefore the abstract ResultPartitionWriterTestBase is proposed to implement the basic dummy methods for ResultPartitionWriter, and the previous four instances can all extend it to only implement one or two methods based on specific requirements in tests. It will probably only need to adjust the ResultPartitionWriterTestBase when extending the ResultPartitionWriter interface.\nBrief change log\n\nIntroduce abstract ResultPartitionWriterTestBase to implement ResultPartitionWriter\nMake previous related ResultPartitionWriter instances to extend ResultPartitionWriterTestBase\n\nVerifying this change\nThis change is a trivial rework / code cleanup without any test coverage.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-03-18T12:33:02Z", "url": "https://github.com/apache/flink/pull/11441", "merged": true, "mergeCommit": {"oid": "c60d11d40dc288bc467e7414be5fe7bb2f583f17"}, "closed": true, "closedAt": "2020-03-20T08:48:22Z", "author": {"login": "zhijiangW"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO2uKXgFqTM3NjgyNzk1OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPccvkgFqTM3ODMwNTM4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2ODI3OTU5", "url": "https://github.com/apache/flink/pull/11441#pullrequestreview-376827959", "createdAt": "2020-03-18T12:46:19Z", "commit": {"oid": "868a19b2c11913e814c529698178234c23fa3e92"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjo0NjoxOVrOF4DUVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjo0NjoxOVrOF4DUVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMxODkzMg==", "bodyText": "Could this class be directly be used without subclassing? Then we should remove abstract.", "url": "https://github.com/apache/flink/pull/11441#discussion_r394318932", "createdAt": "2020-03-18T12:46:19Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/ResultPartitionWriterTestBase.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.io.network.partition;\n+\n+import org.apache.flink.runtime.io.network.api.writer.ResultPartitionWriter;\n+import org.apache.flink.runtime.io.network.buffer.BufferBuilder;\n+import org.apache.flink.runtime.io.network.buffer.BufferConsumer;\n+import org.apache.flink.util.TestLogger;\n+\n+import javax.annotation.Nullable;\n+\n+import java.io.IOException;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * Basic behaviours of {@link ResultPartitionWriter} for test purpose.\n+ */\n+public abstract class ResultPartitionWriterTestBase extends TestLogger implements ResultPartitionWriter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "868a19b2c11913e814c529698178234c23fa3e92"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2ODI4MDY3", "url": "https://github.com/apache/flink/pull/11441#pullrequestreview-376828067", "createdAt": "2020-03-18T12:46:27Z", "commit": {"oid": "868a19b2c11913e814c529698178234c23fa3e92"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjo0NjoyOFrOF4DUtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMjo0NzozNFrOF4DXPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMxOTAzMA==", "bodyText": "Further I propose to change the name to MockResultPartitionWriter. I think the suffix TestBase is mostly used for unit tests.", "url": "https://github.com/apache/flink/pull/11441#discussion_r394319030", "createdAt": "2020-03-18T12:46:28Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/ResultPartitionWriterTestBase.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.io.network.partition;\n+\n+import org.apache.flink.runtime.io.network.api.writer.ResultPartitionWriter;\n+import org.apache.flink.runtime.io.network.buffer.BufferBuilder;\n+import org.apache.flink.runtime.io.network.buffer.BufferConsumer;\n+import org.apache.flink.util.TestLogger;\n+\n+import javax.annotation.Nullable;\n+\n+import java.io.IOException;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * Basic behaviours of {@link ResultPartitionWriter} for test purpose.\n+ */\n+public abstract class ResultPartitionWriterTestBase extends TestLogger implements ResultPartitionWriter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "868a19b2c11913e814c529698178234c23fa3e92"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMxOTY3Nw==", "bodyText": "Finally, there is no benefit by implementing TestLogger since subclasses will not be used for implementing test cases.", "url": "https://github.com/apache/flink/pull/11441#discussion_r394319677", "createdAt": "2020-03-18T12:47:34Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/ResultPartitionWriterTestBase.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.io.network.partition;\n+\n+import org.apache.flink.runtime.io.network.api.writer.ResultPartitionWriter;\n+import org.apache.flink.runtime.io.network.buffer.BufferBuilder;\n+import org.apache.flink.runtime.io.network.buffer.BufferConsumer;\n+import org.apache.flink.util.TestLogger;\n+\n+import javax.annotation.Nullable;\n+\n+import java.io.IOException;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * Basic behaviours of {@link ResultPartitionWriter} for test purpose.\n+ */\n+public abstract class ResultPartitionWriterTestBase extends TestLogger implements ResultPartitionWriter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMxOTAzMA=="}, "originalCommit": {"oid": "868a19b2c11913e814c529698178234c23fa3e92"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "868a19b2c11913e814c529698178234c23fa3e92", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/868a19b2c11913e814c529698178234c23fa3e92", "committedDate": "2020-03-18T12:28:33Z", "message": "[FLINK-16653][network][tests] Introduce ResultPartitionWriterTestBase for simplifying tests\n\nAt the moment there are at-least four implementations of `ResultPartitionWriter` interface used in unit tests.\nAnd there are about ten methods to be implemented for `ResultPartitionWriter` and most of them are dummy in tests.\n\nWhen we want to extend the methods for `ResultPartitionWriter`, the above four dummy implementations in tests have to be adjusted as well, to waste a bit efforts.\n\nTherefore the abstract ResultPartitionWriterTestBase is proposed to implement the basic dummy methods for `ResultPartitionWriter`,\nand the previous four instances can all extend it to only implement one or two methods based on specific requirements in tests.\nIt will probably only need to adjust the ResultPartitionWriterTestBase when extending the `ResultPartitionWriter` interface."}, "afterCommit": {"oid": "d7225c3fc71d6ab0c89bfe6735034151f10c4505", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/d7225c3fc71d6ab0c89bfe6735034151f10c4505", "committedDate": "2020-03-19T03:23:27Z", "message": "[FLINK-16653][network][tests] Introduce ResultPartitionWriterTestBase for simplifying tests\n\nAt the moment there are at-least four implementations of `ResultPartitionWriter` interface used in unit tests.\nAnd there are about ten methods to be implemented for `ResultPartitionWriter` and most of them are dummy in tests.\n\nWhen we want to extend the methods for `ResultPartitionWriter`, the above four dummy implementations in tests have to be adjusted as well, to waste a bit efforts.\n\nTherefore the abstract ResultPartitionWriterTestBase is proposed to implement the basic dummy methods for `ResultPartitionWriter`,\nand the previous four instances can all extend it to only implement one or two methods based on specific requirements in tests.\nIt will probably only need to adjust the ResultPartitionWriterTestBase when extending the `ResultPartitionWriter` interface.\n\nThis closes #11441."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e086365841288029738647ad417863e12adb8cb3", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/e086365841288029738647ad417863e12adb8cb3", "committedDate": "2020-03-19T03:29:16Z", "message": "[FLINK-16653][network][tests] Implement MockResultPartitionWriter base for simplifying tests\n\nAt the moment there are at-least four implementations of `ResultPartitionWriter` interface used in unit tests.\nAnd there are about ten methods to be implemented for `ResultPartitionWriter` and most of them are dummy in tests.\n\nWhen we want to extend the methods for `ResultPartitionWriter`, the above four dummy implementations in tests have to be adjusted as well, to waste a bit efforts.\n\nTherefore the MockResultPartitionWriter is proposed to implement the basic dummy methods for `ResultPartitionWriter`,\nand the previous four instances can all extend it to only implement one or two methods based on specific requirements in tests.\nIt will probably only need to adjust the MockResultPartitionWriter when extending the `ResultPartitionWriter` interface.\n\nThis closes #11441."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d7225c3fc71d6ab0c89bfe6735034151f10c4505", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/d7225c3fc71d6ab0c89bfe6735034151f10c4505", "committedDate": "2020-03-19T03:23:27Z", "message": "[FLINK-16653][network][tests] Introduce ResultPartitionWriterTestBase for simplifying tests\n\nAt the moment there are at-least four implementations of `ResultPartitionWriter` interface used in unit tests.\nAnd there are about ten methods to be implemented for `ResultPartitionWriter` and most of them are dummy in tests.\n\nWhen we want to extend the methods for `ResultPartitionWriter`, the above four dummy implementations in tests have to be adjusted as well, to waste a bit efforts.\n\nTherefore the abstract ResultPartitionWriterTestBase is proposed to implement the basic dummy methods for `ResultPartitionWriter`,\nand the previous four instances can all extend it to only implement one or two methods based on specific requirements in tests.\nIt will probably only need to adjust the ResultPartitionWriterTestBase when extending the `ResultPartitionWriter` interface.\n\nThis closes #11441."}, "afterCommit": {"oid": "e086365841288029738647ad417863e12adb8cb3", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/e086365841288029738647ad417863e12adb8cb3", "committedDate": "2020-03-19T03:29:16Z", "message": "[FLINK-16653][network][tests] Implement MockResultPartitionWriter base for simplifying tests\n\nAt the moment there are at-least four implementations of `ResultPartitionWriter` interface used in unit tests.\nAnd there are about ten methods to be implemented for `ResultPartitionWriter` and most of them are dummy in tests.\n\nWhen we want to extend the methods for `ResultPartitionWriter`, the above four dummy implementations in tests have to be adjusted as well, to waste a bit efforts.\n\nTherefore the MockResultPartitionWriter is proposed to implement the basic dummy methods for `ResultPartitionWriter`,\nand the previous four instances can all extend it to only implement one or two methods based on specific requirements in tests.\nIt will probably only need to adjust the MockResultPartitionWriter when extending the `ResultPartitionWriter` interface.\n\nThis closes #11441."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MzA1Mzg3", "url": "https://github.com/apache/flink/pull/11441#pullrequestreview-378305387", "createdAt": "2020-03-20T08:43:42Z", "commit": {"oid": "e086365841288029738647ad417863e12adb8cb3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2865, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}