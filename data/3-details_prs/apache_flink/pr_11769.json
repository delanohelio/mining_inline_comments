{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MTgzOTMx", "number": 11769, "title": "[FLINK-16766][python]Support create StreamTableEnvironment without pa\u2026", "bodyText": "What is the purpose of the change\nThis pull request will create StreamTableEnvironment without passing StreamExecutionEnvironment parameter.\nBrief change log\n\nModify StreamExecutionEnvironment parameter to optional, support create StreamTableEnvironment without passing StreamExecutionEnvironment parameter through method create of TableTableEnvironment.\n\nVerifying this change\n\nModify test_create_table_environment_with_blink_planner method to add create StreamTableEnvironment without passing StreamExecutionEnvironment test case.\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-04-16T08:00:56Z", "url": "https://github.com/apache/flink/pull/11769", "merged": true, "mergeCommit": {"oid": "c6949540c6c639695e1a0fb2684b467c6219024f"}, "closed": true, "closedAt": "2020-04-23T01:39:22Z", "author": {"login": "SteNicholas"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZZacdAFqTM5NjE1OTk3MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaGyLUgFqTM5ODEwNDkzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTU5OTcx", "url": "https://github.com/apache/flink/pull/11769#pullrequestreview-396159971", "createdAt": "2020-04-20T06:03:52Z", "commit": {"oid": "91e11790567ac173db216ac8d0a4bae76d2b81ae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNjowMzo1MlrOGIEcBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNjo0MTozNVrOGIFZUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTExNDUwMA==", "bodyText": "BatchTableEnvironment => StreamTableEnvironment", "url": "https://github.com/apache/flink/pull/11769#discussion_r411114500", "createdAt": "2020-04-20T06:03:52Z", "author": {"login": "hequn8128"}, "path": "flink-python/pyflink/table/table_environment.py", "diffHunk": "@@ -1154,26 +1154,28 @@ def connect(self, connector_descriptor):\n             self._j_tenv.connect(connector_descriptor._j_connector_descriptor))\n \n     @staticmethod\n-    def create(stream_execution_environment, table_config=None, environment_settings=None):\n+    def create(stream_execution_environment=None, table_config=None, environment_settings=None):\n         \"\"\"\n-        Creates a :class:`~pyflink.table.TableEnvironment` for a\n+        Creates a :class:`~pyflink.table.StreamTableEnvironment` for a\n         :class:`~pyflink.datastream.StreamExecutionEnvironment`.\n \n         Example:\n         ::\n \n+            # create with StreamExecutionEnvironment.\n             >>> env = StreamExecutionEnvironment.get_execution_environment()\n-            # create without optional parameters.\n             >>> table_env = StreamTableEnvironment.create(env)\n-            # create with TableConfig\n+            # create with StreamExecutionEnvironment and TableConfig.\n             >>> table_config = TableConfig()\n             >>> table_config.set_null_check(False)\n             >>> table_env = StreamTableEnvironment.create(env, table_config)\n-            # create with EnvrionmentSettings\n+            # create with StreamExecutionEnvironment and EnvironmentSettings.\n             >>> environment_settings = EnvironmentSettings.new_instance().use_blink_planner() \\\\\n             ...     .build()\n             >>> table_env = StreamTableEnvironment.create(\n             ...     env, environment_settings=environment_settings)\n+            # create with EnvironmentSettings.\n+            >>> table_env = BatchTableEnvironment.create(environment_settings=environment_settings)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91e11790567ac173db216ac8d0a4bae76d2b81ae"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyOTk4NA==", "bodyText": "Change to\nCreates a :class:`~pyflink.table.StreamTableEnvironment`.\n\nsince we can also create the TableEnvironment without the execution environment.", "url": "https://github.com/apache/flink/pull/11769#discussion_r411129984", "createdAt": "2020-04-20T06:41:06Z", "author": {"login": "hequn8128"}, "path": "flink-python/pyflink/table/table_environment.py", "diffHunk": "@@ -1154,26 +1154,28 @@ def connect(self, connector_descriptor):\n             self._j_tenv.connect(connector_descriptor._j_connector_descriptor))\n \n     @staticmethod\n-    def create(stream_execution_environment, table_config=None, environment_settings=None):\n+    def create(stream_execution_environment=None, table_config=None, environment_settings=None):\n         \"\"\"\n-        Creates a :class:`~pyflink.table.TableEnvironment` for a\n+        Creates a :class:`~pyflink.table.StreamTableEnvironment` for a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91e11790567ac173db216ac8d0a4bae76d2b81ae"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEzMDE5NQ==", "bodyText": "Revert the change as we can also create the TableEnvironment without the execution_environment.", "url": "https://github.com/apache/flink/pull/11769#discussion_r411130195", "createdAt": "2020-04-20T06:41:35Z", "author": {"login": "hequn8128"}, "path": "flink-python/pyflink/table/table_environment.py", "diffHunk": "@@ -1280,7 +1297,8 @@ def connect(self, connector_descriptor):\n     @staticmethod\n     def create(execution_environment=None, table_config=None, environment_settings=None):\n         \"\"\"\n-        Creates a :class:`~pyflink.table.BatchTableEnvironment`.\n+        Creates a :class:`~pyflink.table.BatchTableEnvironment` for a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91e11790567ac173db216ac8d0a4bae76d2b81ae"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b052af39c5612f8ba67b3e650a3fdc3fdb8fdb9e", "author": {"user": {"login": "SteNicholas", "name": "SteNicholas"}}, "url": "https://github.com/apache/flink/commit/b052af39c5612f8ba67b3e650a3fdc3fdb8fdb9e", "committedDate": "2020-04-22T03:56:36Z", "message": "[FLINK-16766][python]Support create StreamTableEnvironment without passing StreamExecutionEnvironment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91e11790567ac173db216ac8d0a4bae76d2b81ae", "author": {"user": {"login": "SteNicholas", "name": "SteNicholas"}}, "url": "https://github.com/apache/flink/commit/91e11790567ac173db216ac8d0a4bae76d2b81ae", "committedDate": "2020-04-16T07:51:31Z", "message": "[FLINK-16766][python]Support create StreamTableEnvironment without passing StreamExecutionEnvironment"}, "afterCommit": {"oid": "b052af39c5612f8ba67b3e650a3fdc3fdb8fdb9e", "author": {"user": {"login": "SteNicholas", "name": "SteNicholas"}}, "url": "https://github.com/apache/flink/commit/b052af39c5612f8ba67b3e650a3fdc3fdb8fdb9e", "committedDate": "2020-04-22T03:56:36Z", "message": "[FLINK-16766][python]Support create StreamTableEnvironment without passing StreamExecutionEnvironment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3OTAwNDM5", "url": "https://github.com/apache/flink/pull/11769#pullrequestreview-397900439", "createdAt": "2020-04-22T07:08:22Z", "commit": {"oid": "b052af39c5612f8ba67b3e650a3fdc3fdb8fdb9e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzowODoyMlrOGJmypg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzowODoyMlrOGJmypg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyNTkyNg==", "bodyText": "Would be great if we can also add tests for flink planner. FYI: test will be failed for flink planner with the current PR.", "url": "https://github.com/apache/flink/pull/11769#discussion_r412725926", "createdAt": "2020-04-22T07:08:22Z", "author": {"login": "hequn8128"}, "path": "flink-python/pyflink/table/tests/test_table_environment_api.py", "diffHunk": "@@ -296,6 +296,15 @@ def test_create_table_environment_with_blink_planner(self):\n             planner.getClass().getName(),\n             \"org.apache.flink.table.planner.delegation.StreamPlanner\")\n \n+        t_env = StreamTableEnvironment.create(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b052af39c5612f8ba67b3e650a3fdc3fdb8fdb9e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2eafb3412af1d64f3dc5a6c5a489d9e3471fe542", "author": {"user": {"login": "SteNicholas", "name": "SteNicholas"}}, "url": "https://github.com/apache/flink/commit/2eafb3412af1d64f3dc5a6c5a489d9e3471fe542", "committedDate": "2020-04-22T10:00:53Z", "message": "[FLINK-16766][python]Support create StreamTableEnvironment without passing StreamExecutionEnvironment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f337d746222669bb65cf1c8823e6bbbcc86e4554", "author": {"user": {"login": "SteNicholas", "name": "SteNicholas"}}, "url": "https://github.com/apache/flink/commit/f337d746222669bb65cf1c8823e6bbbcc86e4554", "committedDate": "2020-04-22T11:16:08Z", "message": "[FLINK-16766][python]Support create StreamTableEnvironment without passing StreamExecutionEnvironment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MTA0OTMy", "url": "https://github.com/apache/flink/pull/11769#pullrequestreview-398104932", "createdAt": "2020-04-22T11:42:22Z", "commit": {"oid": "f337d746222669bb65cf1c8823e6bbbcc86e4554"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1822, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}