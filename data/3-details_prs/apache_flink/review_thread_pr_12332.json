{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMDIwMDAx", "number": 12332, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxMDowM1rOD_kT_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0ODozM1rOD_vG5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTgxODIzOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStreamFactory.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxMDowM1rOGaTQlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNzowMTo1N1rOGan2XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzMTcwMg==", "bodyText": "Maybe extend this to if (stream != null || pos > localStateThreshold)?", "url": "https://github.com/apache/flink/pull/12332#discussion_r430231702", "createdAt": "2020-05-26T08:10:03Z", "author": {"login": "StephanEwen"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStreamFactory.java", "diffHunk": "@@ -266,6 +264,16 @@ public void flush() throws IOException {\n \t\t\t}\n \t\t}\n \n+\t\t/**\n+\t\t * Flush buffers to file if their size is above {@link #localStateThreshold}.\n+\t\t */\n+\t\t@Override\n+\t\tpublic void flush() throws IOException {\n+\t\t\tif (pos > localStateThreshold) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdc25159e69734b32bf88f72c6224dee235c1ddc"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI2MzEzNA==", "bodyText": "Makes sense, expanded the condition.", "url": "https://github.com/apache/flink/pull/12332#discussion_r430263134", "createdAt": "2020-05-26T09:02:55Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStreamFactory.java", "diffHunk": "@@ -266,6 +264,16 @@ public void flush() throws IOException {\n \t\t\t}\n \t\t}\n \n+\t\t/**\n+\t\t * Flush buffers to file if their size is above {@link #localStateThreshold}.\n+\t\t */\n+\t\t@Override\n+\t\tpublic void flush() throws IOException {\n+\t\t\tif (pos > localStateThreshold) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzMTcwMg=="}, "originalCommit": {"oid": "bdc25159e69734b32bf88f72c6224dee235c1ddc"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxNzcxMQ==", "bodyText": "I guess the added condition of stream != null is not addressed yet?", "url": "https://github.com/apache/flink/pull/12332#discussion_r430517711", "createdAt": "2020-05-26T15:47:36Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStreamFactory.java", "diffHunk": "@@ -266,6 +264,16 @@ public void flush() throws IOException {\n \t\t\t}\n \t\t}\n \n+\t\t/**\n+\t\t * Flush buffers to file if their size is above {@link #localStateThreshold}.\n+\t\t */\n+\t\t@Override\n+\t\tpublic void flush() throws IOException {\n+\t\t\tif (pos > localStateThreshold) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzMTcwMg=="}, "originalCommit": {"oid": "bdc25159e69734b32bf88f72c6224dee235c1ddc"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU2OTA1Mw==", "bodyText": "I must have reverted it while updating the tests. Fixed.", "url": "https://github.com/apache/flink/pull/12332#discussion_r430569053", "createdAt": "2020-05-26T17:01:57Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStreamFactory.java", "diffHunk": "@@ -266,6 +264,16 @@ public void flush() throws IOException {\n \t\t\t}\n \t\t}\n \n+\t\t/**\n+\t\t * Flush buffers to file if their size is above {@link #localStateThreshold}.\n+\t\t */\n+\t\t@Override\n+\t\tpublic void flush() throws IOException {\n+\t\t\tif (pos > localStateThreshold) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzMTcwMg=="}, "originalCommit": {"oid": "bdc25159e69734b32bf88f72c6224dee235c1ddc"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTgxODY5OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStreamFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxMDowOVrOGaTQ2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOTowMzowOFrOGaVL5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzMTc3MQ==", "bodyText": "We can make this public, let the tests call it directly.", "url": "https://github.com/apache/flink/pull/12332#discussion_r430231771", "createdAt": "2020-05-26T08:10:09Z", "author": {"login": "StephanEwen"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStreamFactory.java", "diffHunk": "@@ -247,15 +247,13 @@ public long getPos() throws IOException {\n \t\t\treturn pos + (outStream == null ? 0 : outStream.getPos());\n \t\t}\n \n-\t\t@Override\n-\t\tpublic void flush() throws IOException {\n+\t\tprivate void flushToFile() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdc25159e69734b32bf88f72c6224dee235c1ddc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI2MzI2OQ==", "bodyText": "Done.", "url": "https://github.com/apache/flink/pull/12332#discussion_r430263269", "createdAt": "2020-05-26T09:03:08Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStreamFactory.java", "diffHunk": "@@ -247,15 +247,13 @@ public long getPos() throws IOException {\n \t\t\treturn pos + (outStream == null ? 0 : outStream.getPos());\n \t\t}\n \n-\t\t@Override\n-\t\tpublic void flush() throws IOException {\n+\t\tprivate void flushToFile() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzMTc3MQ=="}, "originalCommit": {"oid": "bdc25159e69734b32bf88f72c6224dee235c1ddc"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTgzMzM3OnYy", "diffSide": "LEFT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStorageTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODoxNDoyMVrOGaTZ6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOTowMzozN1rOGaVM_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNDA5MA==", "bodyText": "If we type the exclusiveStream to FsCheckpointStateOutputStream, we could call flushToFile() directly.\nThen we don't implicitly rely on the threshold logic here as well.", "url": "https://github.com/apache/flink/pull/12332#discussion_r430234090", "createdAt": "2020-05-26T08:14:21Z", "author": {"login": "StephanEwen"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStorageTest.java", "diffHunk": "@@ -165,8 +165,7 @@ public void testDirectoriesForExclusiveAndSharedState() throws Exception {\n \t\tCheckpointStateOutputStream exclusiveStream =\n \t\t\t\tstorageLocation.createCheckpointStateOutputStream(CheckpointedStateScope.EXCLUSIVE);\n \n-\t\texclusiveStream.write(42);\n-\t\texclusiveStream.flush();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdc25159e69734b32bf88f72c6224dee235c1ddc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI2MzU0OA==", "bodyText": "Good point!", "url": "https://github.com/apache/flink/pull/12332#discussion_r430263548", "createdAt": "2020-05-26T09:03:37Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/state/filesystem/FsCheckpointStorageTest.java", "diffHunk": "@@ -165,8 +165,7 @@ public void testDirectoriesForExclusiveAndSharedState() throws Exception {\n \t\tCheckpointStateOutputStream exclusiveStream =\n \t\t\t\tstorageLocation.createCheckpointStateOutputStream(CheckpointedStateScope.EXCLUSIVE);\n \n-\t\texclusiveStream.write(42);\n-\t\texclusiveStream.flush();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzNDA5MA=="}, "originalCommit": {"oid": "bdc25159e69734b32bf88f72c6224dee235c1ddc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTU4NjkyOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/channel/ChannelStateCheckpointWriterTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0ODozM1rOGakwTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNzowNDoyOFrOGan7ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxODM1MQ==", "bodyText": "nit: unnecessary formatting changes, I guess it was done automatically by IDE.", "url": "https://github.com/apache/flink/pull/12332#discussion_r430518351", "createdAt": "2020-05-26T15:48:33Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/channel/ChannelStateCheckpointWriterTest.java", "diffHunk": "@@ -95,12 +118,12 @@ public void flush() throws IOException {\n \n \t\tFlushRecorder dataStream = new FlushRecorder();\n \t\tfinal ChannelStateCheckpointWriter writer = new ChannelStateCheckpointWriter(\n-\t\t\t1L,\n-\t\t\tnew ChannelStateWriteResult(),\n-\t\t\tnew ChannelStateSerializerImpl(),\n-\t\t\tNO_OP_RUNNABLE,\n-\t\t\tnew MemoryCheckpointOutputStream(42),\n-\t\t\tdataStream\n+\t\t\t\t1L,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c574198c34562970cc0939c57f750c6bac3530d5"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU3MDQzNQ==", "bodyText": "Yes, accidental change, reverted it.", "url": "https://github.com/apache/flink/pull/12332#discussion_r430570435", "createdAt": "2020-05-26T17:04:28Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/checkpoint/channel/ChannelStateCheckpointWriterTest.java", "diffHunk": "@@ -95,12 +118,12 @@ public void flush() throws IOException {\n \n \t\tFlushRecorder dataStream = new FlushRecorder();\n \t\tfinal ChannelStateCheckpointWriter writer = new ChannelStateCheckpointWriter(\n-\t\t\t1L,\n-\t\t\tnew ChannelStateWriteResult(),\n-\t\t\tnew ChannelStateSerializerImpl(),\n-\t\t\tNO_OP_RUNNABLE,\n-\t\t\tnew MemoryCheckpointOutputStream(42),\n-\t\t\tdataStream\n+\t\t\t\t1L,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxODM1MQ=="}, "originalCommit": {"oid": "c574198c34562970cc0939c57f750c6bac3530d5"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4460, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}