{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMDQwMDc4", "number": 13861, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo1MzowNlrOE0YtaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo1NjozMFrOE0YzRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzY2MjQ4OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroup.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo1MzowNlrOHsFN9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo1MzowNlrOHsFN9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4NDg4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn internalGetAllVariables(-1, Collections.emptySet());\n          \n          \n            \n            \t\treturn internalGetAllVariables(0, Collections.emptySet());\n          \n      \n    \n    \n  \n\nThe PR. version causes an ArrayIndexOutOfBoundsException in internalGetAllVariables:136.", "url": "https://github.com/apache/flink/pull/13861#discussion_r515984885", "createdAt": "2020-11-02T13:53:06Z", "author": {"login": "XComp"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroup.java", "diffHunk": "@@ -116,15 +116,18 @@ public AbstractMetricGroup(MetricRegistry registry, String[] scope, A parent) {\n \n \t@Override\n \tpublic Map<String, String> getAllVariables() {\n-\t\treturn internalGetAllVariables(0, Collections.emptySet());\n+\t\treturn internalGetAllVariables(-1, Collections.emptySet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0f24d76255c54cbb928dadbb38b95c9b42061c9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzY2NzUwOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo1NDoxNFrOHsFQ_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo1NDoxNFrOHsFQ_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4NTY2Mg==", "bodyText": "That's just a minor thing, but I would remove the brackets around IsMapContaining.hasKey(..) to make the code more readable.", "url": "https://github.com/apache/flink/pull/13861#discussion_r515985662", "createdAt": "2020-11-02T13:54:14Z", "author": {"login": "XComp"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java", "diffHunk": "@@ -93,6 +96,26 @@ public void testGetAllVariablesWithExclusions() {\n \t\tassertEquals(group.getAllVariables(-1, Collections.singleton(ScopeFormat.SCOPE_HOST)).size(), 0);\n \t}\n \n+\t@Test\n+\tpublic void testGetAllVariablesWithExclusionsForReporters() {\n+\t\tMetricRegistry registry = TestingMetricRegistry.builder().setNumberReporters(2).build();\n+\n+\t\tAbstractMetricGroup<?> group = new GenericMetricGroup(registry, null, \"test\") {\n+\t\t\t@Override\n+\t\t\tprotected void putVariables(Map<String, String> variables) {\n+\t\t\t\tvariables.put(\"k1\", \"v1\");\n+\t\t\t\tvariables.put(\"k2\", \"v2\");\n+\t\t\t}\n+\t\t};\n+\n+\t\tgroup.getAllVariables(-1, Collections.emptySet());\n+\n+\t\tassertThat(group.getAllVariables(0, Collections.singleton(\"k1\")), not(IsMapContaining.hasKey(\"k1\")));\n+\t\tassertThat(group.getAllVariables(0, Collections.singleton(\"k1\")), (IsMapContaining.hasKey(\"k2\")));\n+\t\tassertThat(group.getAllVariables(1, Collections.singleton(\"k2\")), (IsMapContaining.hasKey(\"k1\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0f24d76255c54cbb928dadbb38b95c9b42061c9"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzY3NzQ5OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo1NjozMFrOHsFWvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo1NjozMFrOHsFWvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4NzEzMg==", "bodyText": "The static method import org.hamcrest.collection.IsMapContaining.hasKey is never used. You're referring to the IsMapContaining class in the test code.", "url": "https://github.com/apache/flink/pull/13861#discussion_r515987132", "createdAt": "2020-11-02T13:56:30Z", "author": {"login": "XComp"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java", "diffHunk": "@@ -43,9 +43,12 @@\n \n import java.util.Arrays;\n import java.util.Collections;\n+import java.util.Map;\n import java.util.concurrent.atomic.AtomicReference;\n \n import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.collection.IsMapContaining.hasKey;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0f24d76255c54cbb928dadbb38b95c9b42061c9"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4997, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}