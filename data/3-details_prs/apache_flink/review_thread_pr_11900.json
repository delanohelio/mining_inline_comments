{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NDE5NDE5", "number": 11900, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNDowODo1MFrOD6FQHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOToxOTo1NlrOD_l4ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjMwMDQ0OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-jdbc/src/main/java/org/apache/flink/api/java/io/jdbc/catalog/PostgresCatalog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNDowODo1MFrOGRtriA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODo0MjoxMVrOGR0crA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyNzQwMA==", "bodyText": "just add comments, rather than commenting out string constants?", "url": "https://github.com/apache/flink/pull/11900#discussion_r421227400", "createdAt": "2020-05-07T04:08:50Z", "author": {"login": "bowenli86"}, "path": "flink-connectors/flink-jdbc/src/main/java/org/apache/flink/api/java/io/jdbc/catalog/PostgresCatalog.java", "diffHunk": "@@ -216,6 +216,12 @@ public CatalogBaseTable getTable(ObjectPath tablePath) throws TableNotExistExcep\n \t\t}\n \t}\n \n+\tpublic static final String PG_SERIAL = \"serial\";\n+\t//public static final String PG_SERIAL2 = \"serial2\"; //ResultSetMetaData.getColumnTypeName() returns int2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d068905bd0bcdcdc6074ec657ee5b87b5377e2c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMzODI4NA==", "bodyText": "Ok", "url": "https://github.com/apache/flink/pull/11900#discussion_r421338284", "createdAt": "2020-05-07T08:42:11Z", "author": {"login": "fpompermaier"}, "path": "flink-connectors/flink-jdbc/src/main/java/org/apache/flink/api/java/io/jdbc/catalog/PostgresCatalog.java", "diffHunk": "@@ -216,6 +216,12 @@ public CatalogBaseTable getTable(ObjectPath tablePath) throws TableNotExistExcep\n \t\t}\n \t}\n \n+\tpublic static final String PG_SERIAL = \"serial\";\n+\t//public static final String PG_SERIAL2 = \"serial2\"; //ResultSetMetaData.getColumnTypeName() returns int2", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyNzQwMA=="}, "originalCommit": {"oid": "6d068905bd0bcdcdc6074ec657ee5b87b5377e2c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjMwMTcwOnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-jdbc/src/test/java/org/apache/flink/api/java/io/jdbc/catalog/PostgresCatalogTestBase.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwNDowOToyOFrOGRtsNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjo1OTo1NVrOGTlHCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyNzU3Mg==", "bodyText": "why use a separate table rather than reusing existing one?", "url": "https://github.com/apache/flink/pull/11900#discussion_r421227572", "createdAt": "2020-05-07T04:09:28Z", "author": {"login": "bowenli86"}, "path": "flink-connectors/flink-jdbc/src/test/java/org/apache/flink/api/java/io/jdbc/catalog/PostgresCatalogTestBase.java", "diffHunk": "@@ -58,6 +58,7 @@\n \tprotected static final String TABLE5 = \"t5\";\n \tprotected static final String TABLE_PRIMITIVE_TYPE = \"dt\";\n \tprotected static final String TABLE_ARRAY_TYPE = \"dt2\";\n+\tprotected static final String TABLE_SERIAL_TYPE = \"dt3\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d068905bd0bcdcdc6074ec657ee5b87b5377e2c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMzODAxNQ==", "bodyText": "Beacause the other table was becoming too big..I think we need to split it a little bit..what do you think?", "url": "https://github.com/apache/flink/pull/11900#discussion_r421338015", "createdAt": "2020-05-07T08:41:46Z", "author": {"login": "fpompermaier"}, "path": "flink-connectors/flink-jdbc/src/test/java/org/apache/flink/api/java/io/jdbc/catalog/PostgresCatalogTestBase.java", "diffHunk": "@@ -58,6 +58,7 @@\n \tprotected static final String TABLE5 = \"t5\";\n \tprotected static final String TABLE_PRIMITIVE_TYPE = \"dt\";\n \tprotected static final String TABLE_ARRAY_TYPE = \"dt2\";\n+\tprotected static final String TABLE_SERIAL_TYPE = \"dt3\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyNzU3Mg=="}, "originalCommit": {"oid": "6d068905bd0bcdcdc6074ec657ee5b87b5377e2c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU4NDEwNw==", "bodyText": "I'd recommend to rename dt,dt2, and dt3 to reflect the types they individually contain and test; otherwise, it's getting confusing", "url": "https://github.com/apache/flink/pull/11900#discussion_r422584107", "createdAt": "2020-05-10T04:47:46Z", "author": {"login": "bowenli86"}, "path": "flink-connectors/flink-jdbc/src/test/java/org/apache/flink/api/java/io/jdbc/catalog/PostgresCatalogTestBase.java", "diffHunk": "@@ -58,6 +58,7 @@\n \tprotected static final String TABLE5 = \"t5\";\n \tprotected static final String TABLE_PRIMITIVE_TYPE = \"dt\";\n \tprotected static final String TABLE_ARRAY_TYPE = \"dt2\";\n+\tprotected static final String TABLE_SERIAL_TYPE = \"dt3\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyNzU3Mg=="}, "originalCommit": {"oid": "6d068905bd0bcdcdc6074ec657ee5b87b5377e2c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcwNjY0OQ==", "bodyText": "How should I rename them? Do you have something in mind?", "url": "https://github.com/apache/flink/pull/11900#discussion_r422706649", "createdAt": "2020-05-10T22:03:02Z", "author": {"login": "fpompermaier"}, "path": "flink-connectors/flink-jdbc/src/test/java/org/apache/flink/api/java/io/jdbc/catalog/PostgresCatalogTestBase.java", "diffHunk": "@@ -58,6 +58,7 @@\n \tprotected static final String TABLE5 = \"t5\";\n \tprotected static final String TABLE_PRIMITIVE_TYPE = \"dt\";\n \tprotected static final String TABLE_ARRAY_TYPE = \"dt2\";\n+\tprotected static final String TABLE_SERIAL_TYPE = \"dt3\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyNzU3Mg=="}, "originalCommit": {"oid": "6d068905bd0bcdcdc6074ec657ee5b87b5377e2c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE4NDEzNw==", "bodyText": "\u201dprimitive_type\u201c, \"array_type\", \"serial_type\"?", "url": "https://github.com/apache/flink/pull/11900#discussion_r423184137", "createdAt": "2020-05-11T16:59:55Z", "author": {"login": "bowenli86"}, "path": "flink-connectors/flink-jdbc/src/test/java/org/apache/flink/api/java/io/jdbc/catalog/PostgresCatalogTestBase.java", "diffHunk": "@@ -58,6 +58,7 @@\n \tprotected static final String TABLE5 = \"t5\";\n \tprotected static final String TABLE_PRIMITIVE_TYPE = \"dt\";\n \tprotected static final String TABLE_ARRAY_TYPE = \"dt2\";\n+\tprotected static final String TABLE_SERIAL_TYPE = \"dt3\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyNzU3Mg=="}, "originalCommit": {"oid": "6d068905bd0bcdcdc6074ec657ee5b87b5377e2c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjAxOTQzOnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNToxODo1MlrOGZvlDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNToxODo1MlrOGZvlDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0NzExNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t// serial2 <=> int2\n          \n          \n            \n            \t// serial4 <=> serial\n          \n          \n            \n            \t// serial8 <=> bigserial\n          \n          \n            \n            \t// smallserial <=> int2\n          \n          \n            \n            \t// serial2 <=> int2\n          \n          \n            \n            \t// smallserial <=> int2\n          \n          \n            \n            \t// serial4 <=> serial\n          \n          \n            \n            \t// serial8 <=> bigserial\n          \n      \n    \n    \n  \n\nHow about bubbling up \"// smallserial <=> int2 \" to make them look better?", "url": "https://github.com/apache/flink/pull/11900#discussion_r429647116", "createdAt": "2020-05-24T15:18:52Z", "author": {"login": "leonardBang"}, "path": "flink-connectors/flink-connector-jdbc/src/main/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalog.java", "diffHunk": "@@ -231,13 +231,19 @@ public CatalogBaseTable getTable(ObjectPath tablePath) throws TableNotExistExcep\n \t}\n \n \t// Postgres jdbc driver maps several alias to real type, we use real type rather than alias:\n+\t// serial2 <=> int2\n+\t// serial4 <=> serial\n+\t// serial8 <=> bigserial\n+\t// smallserial <=> int2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccd3b17332d5a7eb5bb97124cd1a9a4c3986d82d"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjAyNzk3OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogTestBase.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNTozMjoyNVrOGZvpug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOToyNDo0MVrOGaV-bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0ODMxNA==", "bodyText": "This values is never used.\nHow about add a ITCase that read serial type data properly to check the type mapping logic? and we can use more meaningful values like \"32767, 2147483647, 32767, 2147483647 , 9223372036854775807, 9223372036854775807\" .", "url": "https://github.com/apache/flink/pull/11900#discussion_r429648314", "createdAt": "2020-05-24T15:32:25Z", "author": {"login": "leonardBang"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogTestBase.java", "diffHunk": "@@ -289,4 +292,29 @@ public static TestTable getArrayTable() {\n \t\t\t));\n \t}\n \n+\tpublic static TestTable getSerialTable() {\n+\t\treturn new TestTable(\n+\t\t\tTableSchema.builder()\n+\t\t\t\t.field(\"f0\", DataTypes.SMALLINT())\n+\t\t\t\t.field(\"f1\", DataTypes.INT())\n+\t\t\t\t.field(\"f2\", DataTypes.SMALLINT())\n+\t\t\t\t.field(\"f3\", DataTypes.INT())\n+\t\t\t\t.field(\"f4\", DataTypes.BIGINT())\n+\t\t\t\t.field(\"f5\", DataTypes.BIGINT())\n+\t\t\t\t.build(),\n+\t\t\t\"f0 smallserial, \" +\n+\t\t\t\t\"f1 serial, \" +\n+\t\t\t\t\"f2 serial2, \" +\n+\t\t\t\t\"f3 serial4, \" +\n+\t\t\t\t\"f4 serial8, \" +\n+\t\t\t\t\"f5 bigserial\",\n+\t\t\t\"0,\" +\n+\t\t\t\t\"1,\" +\n+\t\t\t\t\"2,\" +\n+\t\t\t\t\"3,\" +\n+\t\t\t\t\"4,\" +\n+\t\t\t\t\"5\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccd3b17332d5a7eb5bb97124cd1a9a4c3986d82d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1MzAzMw==", "bodyText": "What do you mean exactly? Should I just use the suggested values or do sonething else?", "url": "https://github.com/apache/flink/pull/11900#discussion_r429653033", "createdAt": "2020-05-24T16:27:22Z", "author": {"login": "fpompermaier"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogTestBase.java", "diffHunk": "@@ -289,4 +292,29 @@ public static TestTable getArrayTable() {\n \t\t\t));\n \t}\n \n+\tpublic static TestTable getSerialTable() {\n+\t\treturn new TestTable(\n+\t\t\tTableSchema.builder()\n+\t\t\t\t.field(\"f0\", DataTypes.SMALLINT())\n+\t\t\t\t.field(\"f1\", DataTypes.INT())\n+\t\t\t\t.field(\"f2\", DataTypes.SMALLINT())\n+\t\t\t\t.field(\"f3\", DataTypes.INT())\n+\t\t\t\t.field(\"f4\", DataTypes.BIGINT())\n+\t\t\t\t.field(\"f5\", DataTypes.BIGINT())\n+\t\t\t\t.build(),\n+\t\t\t\"f0 smallserial, \" +\n+\t\t\t\t\"f1 serial, \" +\n+\t\t\t\t\"f2 serial2, \" +\n+\t\t\t\t\"f3 serial4, \" +\n+\t\t\t\t\"f4 serial8, \" +\n+\t\t\t\t\"f5 bigserial\",\n+\t\t\t\"0,\" +\n+\t\t\t\t\"1,\" +\n+\t\t\t\t\"2,\" +\n+\t\t\t\t\"3,\" +\n+\t\t\t\t\"4,\" +\n+\t\t\t\t\"5\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0ODMxNA=="}, "originalCommit": {"oid": "ccd3b17332d5a7eb5bb97124cd1a9a4c3986d82d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY5NjQyMw==", "bodyText": "I mean we can add an ITCase that read serial type from PG, and the serial type value could be suggested values.", "url": "https://github.com/apache/flink/pull/11900#discussion_r429696423", "createdAt": "2020-05-25T01:10:39Z", "author": {"login": "leonardBang"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogTestBase.java", "diffHunk": "@@ -289,4 +292,29 @@ public static TestTable getArrayTable() {\n \t\t\t));\n \t}\n \n+\tpublic static TestTable getSerialTable() {\n+\t\treturn new TestTable(\n+\t\t\tTableSchema.builder()\n+\t\t\t\t.field(\"f0\", DataTypes.SMALLINT())\n+\t\t\t\t.field(\"f1\", DataTypes.INT())\n+\t\t\t\t.field(\"f2\", DataTypes.SMALLINT())\n+\t\t\t\t.field(\"f3\", DataTypes.INT())\n+\t\t\t\t.field(\"f4\", DataTypes.BIGINT())\n+\t\t\t\t.field(\"f5\", DataTypes.BIGINT())\n+\t\t\t\t.build(),\n+\t\t\t\"f0 smallserial, \" +\n+\t\t\t\t\"f1 serial, \" +\n+\t\t\t\t\"f2 serial2, \" +\n+\t\t\t\t\"f3 serial4, \" +\n+\t\t\t\t\"f4 serial8, \" +\n+\t\t\t\t\"f5 bigserial\",\n+\t\t\t\"0,\" +\n+\t\t\t\t\"1,\" +\n+\t\t\t\t\"2,\" +\n+\t\t\t\t\"3,\" +\n+\t\t\t\t\"4,\" +\n+\t\t\t\t\"5\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0ODMxNA=="}, "originalCommit": {"oid": "ccd3b17332d5a7eb5bb97124cd1a9a4c3986d82d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc3Njc2OA==", "bodyText": "Probably now I understood..you mean that for this table there's only the test that verifies the schema, not the returned values..I'll add it right now", "url": "https://github.com/apache/flink/pull/11900#discussion_r429776768", "createdAt": "2020-05-25T07:33:42Z", "author": {"login": "fpompermaier"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogTestBase.java", "diffHunk": "@@ -289,4 +292,29 @@ public static TestTable getArrayTable() {\n \t\t\t));\n \t}\n \n+\tpublic static TestTable getSerialTable() {\n+\t\treturn new TestTable(\n+\t\t\tTableSchema.builder()\n+\t\t\t\t.field(\"f0\", DataTypes.SMALLINT())\n+\t\t\t\t.field(\"f1\", DataTypes.INT())\n+\t\t\t\t.field(\"f2\", DataTypes.SMALLINT())\n+\t\t\t\t.field(\"f3\", DataTypes.INT())\n+\t\t\t\t.field(\"f4\", DataTypes.BIGINT())\n+\t\t\t\t.field(\"f5\", DataTypes.BIGINT())\n+\t\t\t\t.build(),\n+\t\t\t\"f0 smallserial, \" +\n+\t\t\t\t\"f1 serial, \" +\n+\t\t\t\t\"f2 serial2, \" +\n+\t\t\t\t\"f3 serial4, \" +\n+\t\t\t\t\"f4 serial8, \" +\n+\t\t\t\t\"f5 bigserial\",\n+\t\t\t\"0,\" +\n+\t\t\t\t\"1,\" +\n+\t\t\t\t\"2,\" +\n+\t\t\t\t\"3,\" +\n+\t\t\t\t\"4,\" +\n+\t\t\t\t\"5\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0ODMxNA=="}, "originalCommit": {"oid": "ccd3b17332d5a7eb5bb97124cd1a9a4c3986d82d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc5MDc2NA==", "bodyText": "Just one note..now I've rebased the PR and addressed your comments..however I also had to set notNull() on the fields because serial fields are marked as not null by PG. Let me know if you think I should handle this situation in a different way", "url": "https://github.com/apache/flink/pull/11900#discussion_r429790764", "createdAt": "2020-05-25T08:02:47Z", "author": {"login": "fpompermaier"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogTestBase.java", "diffHunk": "@@ -289,4 +292,29 @@ public static TestTable getArrayTable() {\n \t\t\t));\n \t}\n \n+\tpublic static TestTable getSerialTable() {\n+\t\treturn new TestTable(\n+\t\t\tTableSchema.builder()\n+\t\t\t\t.field(\"f0\", DataTypes.SMALLINT())\n+\t\t\t\t.field(\"f1\", DataTypes.INT())\n+\t\t\t\t.field(\"f2\", DataTypes.SMALLINT())\n+\t\t\t\t.field(\"f3\", DataTypes.INT())\n+\t\t\t\t.field(\"f4\", DataTypes.BIGINT())\n+\t\t\t\t.field(\"f5\", DataTypes.BIGINT())\n+\t\t\t\t.build(),\n+\t\t\t\"f0 smallserial, \" +\n+\t\t\t\t\"f1 serial, \" +\n+\t\t\t\t\"f2 serial2, \" +\n+\t\t\t\t\"f3 serial4, \" +\n+\t\t\t\t\"f4 serial8, \" +\n+\t\t\t\t\"f5 bigserial\",\n+\t\t\t\"0,\" +\n+\t\t\t\t\"1,\" +\n+\t\t\t\t\"2,\" +\n+\t\t\t\t\"3,\" +\n+\t\t\t\t\"4,\" +\n+\t\t\t\t\"5\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0ODMxNA=="}, "originalCommit": {"oid": "ccd3b17332d5a7eb5bb97124cd1a9a4c3986d82d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI3NjIwNQ==", "bodyText": "It's fine to me, we only read serial from PG and wont write a serial column.", "url": "https://github.com/apache/flink/pull/11900#discussion_r430276205", "createdAt": "2020-05-26T09:24:41Z", "author": {"login": "leonardBang"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogTestBase.java", "diffHunk": "@@ -289,4 +292,29 @@ public static TestTable getArrayTable() {\n \t\t\t));\n \t}\n \n+\tpublic static TestTable getSerialTable() {\n+\t\treturn new TestTable(\n+\t\t\tTableSchema.builder()\n+\t\t\t\t.field(\"f0\", DataTypes.SMALLINT())\n+\t\t\t\t.field(\"f1\", DataTypes.INT())\n+\t\t\t\t.field(\"f2\", DataTypes.SMALLINT())\n+\t\t\t\t.field(\"f3\", DataTypes.INT())\n+\t\t\t\t.field(\"f4\", DataTypes.BIGINT())\n+\t\t\t\t.field(\"f5\", DataTypes.BIGINT())\n+\t\t\t\t.build(),\n+\t\t\t\"f0 smallserial, \" +\n+\t\t\t\t\"f1 serial, \" +\n+\t\t\t\t\"f2 serial2, \" +\n+\t\t\t\t\"f3 serial4, \" +\n+\t\t\t\t\"f4 serial8, \" +\n+\t\t\t\t\"f5 bigserial\",\n+\t\t\t\"0,\" +\n+\t\t\t\t\"1,\" +\n+\t\t\t\t\"2,\" +\n+\t\t\t\t\"3,\" +\n+\t\t\t\t\"4,\" +\n+\t\t\t\t\"5\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0ODMxNA=="}, "originalCommit": {"oid": "ccd3b17332d5a7eb5bb97124cd1a9a4c3986d82d"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDA3MzQ0OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogTestBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOToxOToyNFrOGaVyGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOToxOToyNFrOGaVyGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI3MzA0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\"2767,\" +\n          \n          \n            \n            \t\t\t\"32767,\" +", "url": "https://github.com/apache/flink/pull/11900#discussion_r430273049", "createdAt": "2020-05-26T09:19:24Z", "author": {"login": "leonardBang"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogTestBase.java", "diffHunk": "@@ -289,4 +292,30 @@ public static TestTable getArrayTable() {\n \t\t\t));\n \t}\n \n+\tpublic static TestTable getSerialTable() {\n+\t\treturn new TestTable(\n+\t\t\tTableSchema.builder()\n+\t\t\t\t// serial fields are returned as not null by ResultSetMetaData.columnNoNulls\n+\t\t\t\t.field(\"f0\", DataTypes.SMALLINT().notNull())\n+\t\t\t\t.field(\"f1\", DataTypes.INT().notNull())\n+\t\t\t\t.field(\"f2\", DataTypes.SMALLINT().notNull())\n+\t\t\t\t.field(\"f3\", DataTypes.INT().notNull())\n+\t\t\t\t.field(\"f4\", DataTypes.BIGINT().notNull())\n+\t\t\t\t.field(\"f5\", DataTypes.BIGINT().notNull())\n+\t\t\t\t.build(),\n+\t\t\t\"f0 smallserial, \" +\n+\t\t\t\t\"f1 serial, \" +\n+\t\t\t\t\"f2 serial2, \" +\n+\t\t\t\t\"f3 serial4, \" +\n+\t\t\t\t\"f4 serial8, \" +\n+\t\t\t\t\"f5 bigserial\",\n+\t\t\t\"2767,\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9190d85e2b0e02af9a1062263e25c6f9a23b1c5d"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDA3NTI0OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogITCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOToxOTo1NlrOGaVzQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwOToxOTo1NlrOGaVzQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI3MzM0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\"2767,\" +\n          \n          \n            \n            \t\t\t\t\"32767,\" +", "url": "https://github.com/apache/flink/pull/11900#discussion_r430273346", "createdAt": "2020-05-26T09:19:56Z", "author": {"login": "leonardBang"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/catalog/PostgresCatalogITCase.java", "diffHunk": "@@ -139,4 +139,19 @@ public void testArrayTypes() {\n \t\t\t\t\"[00:51:03, 00:59:03]]\",\n \t\t\tresults.toString());\n \t}\n+\n+\t@Test\n+\tpublic void testSerialTypes() {\n+\t\tList<Row> results = Lists.newArrayList(\n+\t\t\ttEnv.sqlQuery(String.format(\"select * from %s\", TABLE_SERIAL_TYPE)).execute().collect());\n+\n+\t\tassertEquals(\"[\" +\n+\t\t\t\t\"2767,\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9190d85e2b0e02af9a1062263e25c6f9a23b1c5d"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1599, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}