{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NDIxMjI3", "number": 12378, "title": "[FLINK-17965][sql-parser-hive] Hive dialect needs to unescape backslash in string literals", "bodyText": "What is the purpose of the change\nHiveQL supports escaping by backslash. But SQL CLI will escape backslashes in its input. Therefore hive dialect needs to unescape it.\nBrief change log\n\nDo the unescape in these places: DB/table/view comments, DB/table/view properties, table SerDe properties, table row format delimiters, partition specs.\nFix an issue of unparse ALTER TABLE PROPERTY, and add test case\nFix an issue of setting table field terminator, add update test case.\n\nVerifying this change\nI have manually verified the test cases (except view tests due to FLINK-17113) in HiveDialectTest via SQL CLI. But cannot add new tests for them since we don't have E2E tests for hive connector.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? yes\nIf yes, how is the feature documented? docs", "createdAt": "2020-05-28T11:21:37Z", "url": "https://github.com/apache/flink/pull/12378", "merged": true, "mergeCommit": {"oid": "6f06e3df84a733dd75c8e273fb1e395d905a2e5c"}, "closed": true, "closedAt": "2020-06-11T06:45:33Z", "author": {"login": "lirui-apache"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcm7Ao1ABqjMzOTE4NTEyMDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqIfZRAFqTQyODYzMjUwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b4156796eded5a87a097c589c2d7d06a829bafa", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/4b4156796eded5a87a097c589c2d7d06a829bafa", "committedDate": "2020-05-28T11:24:15Z", "message": "unescape for insert"}, "afterCommit": {"oid": "7730fcf16fe3ff8e0b7a3c3bc956b79050139030", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/7730fcf16fe3ff8e0b7a3c3bc956b79050139030", "committedDate": "2020-06-01T07:20:03Z", "message": "fix test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7730fcf16fe3ff8e0b7a3c3bc956b79050139030", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/7730fcf16fe3ff8e0b7a3c3bc956b79050139030", "committedDate": "2020-06-01T07:20:03Z", "message": "fix test"}, "afterCommit": {"oid": "aa2b18fb5b07aad9d2fe4664d9c311cfe3f591ef", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/aa2b18fb5b07aad9d2fe4664d9c311cfe3f591ef", "committedDate": "2020-06-05T06:54:02Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MTI0Nzgx", "url": "https://github.com/apache/flink/pull/12378#pullrequestreview-425124781", "createdAt": "2020-06-05T09:04:47Z", "commit": {"oid": "aa2b18fb5b07aad9d2fe4664d9c311cfe3f591ef"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwOTowNDo0N1rOGfmcmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwOTowOToyNlrOGfmmXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4ODk1Mg==", "bodyText": "I think we only need to unescape the option value.", "url": "https://github.com/apache/flink/pull/12378#discussion_r435788952", "createdAt": "2020-06-05T09:04:47Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-sql-parser-hive/src/main/java/org/apache/flink/sql/parser/hive/ddl/HiveDDLUtils.java", "diffHunk": "@@ -317,4 +321,54 @@ public static SqlTableColumn deepCopyTableColumn(SqlTableColumn column) {\n \t\t\t\tcolumn.getParserPosition()\n \t\t);\n \t}\n+\n+\t// the input of sql-client will escape '\\', unescape it so that users can write hive dialect\n+\tpublic static void unescapeProperties(SqlNodeList properties) {\n+\t\tif (properties != null) {\n+\t\t\tfor (int i = 0; i < properties.size(); i++) {\n+\t\t\t\tSqlNode node = properties.get(i);\n+\t\t\t\t// for properties\n+\t\t\t\tif (node instanceof SqlTableOption) {\n+\t\t\t\t\tnode = unescapeTableOption((SqlTableOption) node);\n+\t\t\t\t\tproperties.set(i, node);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tpublic static SqlTableOption unescapeTableOption(SqlTableOption option) {\n+\t\tString key = StringEscapeUtils.unescapeJava(option.getKeyString());\n+\t\tString val = StringEscapeUtils.unescapeJava(option.getValueString());\n+\t\tSqlNode keyNode = SqlLiteral.createCharString(key, option.getKey().getParserPosition());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa2b18fb5b07aad9d2fe4664d9c311cfe3f591ef"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4OTQzNw==", "bodyText": "unescapeLiteral  -> unescapeStringLiteral", "url": "https://github.com/apache/flink/pull/12378#discussion_r435789437", "createdAt": "2020-06-05T09:05:41Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-sql-parser-hive/src/main/java/org/apache/flink/sql/parser/hive/ddl/HiveDDLUtils.java", "diffHunk": "@@ -317,4 +321,54 @@ public static SqlTableColumn deepCopyTableColumn(SqlTableColumn column) {\n \t\t\t\tcolumn.getParserPosition()\n \t\t);\n \t}\n+\n+\t// the input of sql-client will escape '\\', unescape it so that users can write hive dialect\n+\tpublic static void unescapeProperties(SqlNodeList properties) {\n+\t\tif (properties != null) {\n+\t\t\tfor (int i = 0; i < properties.size(); i++) {\n+\t\t\t\tSqlNode node = properties.get(i);\n+\t\t\t\t// for properties\n+\t\t\t\tif (node instanceof SqlTableOption) {\n+\t\t\t\t\tnode = unescapeTableOption((SqlTableOption) node);\n+\t\t\t\t\tproperties.set(i, node);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tpublic static SqlTableOption unescapeTableOption(SqlTableOption option) {\n+\t\tString key = StringEscapeUtils.unescapeJava(option.getKeyString());\n+\t\tString val = StringEscapeUtils.unescapeJava(option.getValueString());\n+\t\tSqlNode keyNode = SqlLiteral.createCharString(key, option.getKey().getParserPosition());\n+\t\tSqlNode valNode = SqlLiteral.createCharString(val, option.getValue().getParserPosition());\n+\t\treturn new SqlTableOption(keyNode, valNode, option.getParserPosition());\n+\t}\n+\n+\tpublic static SqlCharStringLiteral unescapeLiteral(SqlCharStringLiteral literal) {\n+\t\tif (literal != null) {\n+\t\t\tString unescaped = StringEscapeUtils.unescapeJava(literal.getNlsString().getValue());\n+\t\t\treturn SqlLiteral.createCharString(unescaped, literal.getParserPosition());\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa2b18fb5b07aad9d2fe4664d9c311cfe3f591ef"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc5MTQ1NQ==", "bodyText": "Did you try SqlShuttle ?", "url": "https://github.com/apache/flink/pull/12378#discussion_r435791455", "createdAt": "2020-06-05T09:09:26Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-sql-parser-hive/src/main/java/org/apache/flink/sql/parser/hive/ddl/HiveDDLUtils.java", "diffHunk": "@@ -317,4 +321,54 @@ public static SqlTableColumn deepCopyTableColumn(SqlTableColumn column) {\n \t\t\t\tcolumn.getParserPosition()\n \t\t);\n \t}\n+\n+\t// the input of sql-client will escape '\\', unescape it so that users can write hive dialect\n+\tpublic static void unescapeProperties(SqlNodeList properties) {\n+\t\tif (properties != null) {\n+\t\t\tfor (int i = 0; i < properties.size(); i++) {\n+\t\t\t\tSqlNode node = properties.get(i);\n+\t\t\t\t// for properties\n+\t\t\t\tif (node instanceof SqlTableOption) {\n+\t\t\t\t\tnode = unescapeTableOption((SqlTableOption) node);\n+\t\t\t\t\tproperties.set(i, node);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tpublic static SqlTableOption unescapeTableOption(SqlTableOption option) {\n+\t\tString key = StringEscapeUtils.unescapeJava(option.getKeyString());\n+\t\tString val = StringEscapeUtils.unescapeJava(option.getValueString());\n+\t\tSqlNode keyNode = SqlLiteral.createCharString(key, option.getKey().getParserPosition());\n+\t\tSqlNode valNode = SqlLiteral.createCharString(val, option.getValue().getParserPosition());\n+\t\treturn new SqlTableOption(keyNode, valNode, option.getParserPosition());\n+\t}\n+\n+\tpublic static SqlCharStringLiteral unescapeLiteral(SqlCharStringLiteral literal) {\n+\t\tif (literal != null) {\n+\t\t\tString unescaped = StringEscapeUtils.unescapeJava(literal.getNlsString().getValue());\n+\t\t\treturn SqlLiteral.createCharString(unescaped, literal.getParserPosition());\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\tpublic static void unescapePartitionSpec(SqlNodeList partSpec) {\n+\t\tif (partSpec != null) {\n+\t\t\tfor (int i = 0; i < partSpec.size(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa2b18fb5b07aad9d2fe4664d9c311cfe3f591ef"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fba272121e31430be278ac4a064f419f2164b11", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/9fba272121e31430be278ac4a064f419f2164b11", "committedDate": "2020-06-08T07:47:20Z", "message": "[FLINK-17965][sql-parser-hive] Hive dialect needs to unescape backslash in string literals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "825c1178929c313441f856705c4897eec73c3bff", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/825c1178929c313441f856705c4897eec73c3bff", "committedDate": "2020-06-08T07:47:21Z", "message": "fix SERIALIZATION_FORMAT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8101802f238abe8bae4844fe1b2bba870c8dbfe0", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/8101802f238abe8bae4844fe1b2bba870c8dbfe0", "committedDate": "2020-06-08T07:47:21Z", "message": "unescape for insert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87d483174d4ffd11a6bdbda45c92f6e70c680af2", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/87d483174d4ffd11a6bdbda45c92f6e70c680af2", "committedDate": "2020-06-08T07:47:21Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e30df6387ff2da57fa3a48b90dbae6d01633f15b", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/e30df6387ff2da57fa3a48b90dbae6d01633f15b", "committedDate": "2020-06-08T07:47:21Z", "message": "address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa2b18fb5b07aad9d2fe4664d9c311cfe3f591ef", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/aa2b18fb5b07aad9d2fe4664d9c311cfe3f591ef", "committedDate": "2020-06-05T06:54:02Z", "message": "fix test"}, "afterCommit": {"oid": "e30df6387ff2da57fa3a48b90dbae6d01633f15b", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/e30df6387ff2da57fa3a48b90dbae6d01633f15b", "committedDate": "2020-06-08T07:47:21Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjMyNTA0", "url": "https://github.com/apache/flink/pull/12378#pullrequestreview-428632504", "createdAt": "2020-06-11T06:44:26Z", "commit": {"oid": "e30df6387ff2da57fa3a48b90dbae6d01633f15b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4537, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}