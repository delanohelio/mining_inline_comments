{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NjA5MTY0", "number": 11327, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjoyNToyN1rODlx2NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjoyNToyN1rODlx2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwOTQwNTk3OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/read/HiveTableInputFormat.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMjoyNToyN1rOFy3AKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMTo0NDowOFrOFzZCnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3NDI4Mw==", "bodyText": "I think this method actually returns whether a type is not supported?", "url": "https://github.com/apache/flink/pull/11327#discussion_r388874283", "createdAt": "2020-03-06T12:25:27Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/read/HiveTableInputFormat.java", "diffHunk": "@@ -113,16 +114,74 @@ public void configure(org.apache.flink.configuration.Configuration parameters) {\n \n \t@Override\n \tpublic void open(HiveTableInputSplit split) throws IOException {\n-\t\tif (!useMapRedReader && useOrcVectorizedRead(split.getHiveTablePartition())) {\n+\t\tHiveTablePartition partition = split.getHiveTablePartition();\n+\t\tif (!useMapRedReader && useOrcVectorizedRead(partition)) {\n \t\t\tthis.reader = new HiveVectorizedOrcSplitReader(\n \t\t\t\t\thiveVersion, jobConf, fieldNames, fieldTypes, selectedFields, split);\n+\t\t} else if (!useMapRedReader && useParquetVectorizedRead(partition)) {\n+\t\t\tthis.reader = new HiveVectorizedParquetSplitReader(\n+\t\t\t\t\thiveVersion, jobConf, fieldNames, fieldTypes, selectedFields, split);\n \t\t} else {\n \t\t\tthis.reader = new HiveMapredSplitReader(jobConf, partitionKeys, fieldTypes, selectedFields, split,\n \t\t\t\t\tHiveShimLoader.loadHiveShim(hiveVersion));\n \t\t}\n \t\tcurrentReadCount = 0L;\n \t}\n \n+\tprivate boolean isVectorizationSupport(LogicalType t) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1864a6fe88ffdb1ce37f928a7fade4b38e13c876"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQzMTk2NQ==", "bodyText": "Ah... yes, I will change name to isVectorizationUnsupported", "url": "https://github.com/apache/flink/pull/11327#discussion_r389431965", "createdAt": "2020-03-09T01:44:08Z", "author": {"login": "JingsongLi"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/connectors/hive/read/HiveTableInputFormat.java", "diffHunk": "@@ -113,16 +114,74 @@ public void configure(org.apache.flink.configuration.Configuration parameters) {\n \n \t@Override\n \tpublic void open(HiveTableInputSplit split) throws IOException {\n-\t\tif (!useMapRedReader && useOrcVectorizedRead(split.getHiveTablePartition())) {\n+\t\tHiveTablePartition partition = split.getHiveTablePartition();\n+\t\tif (!useMapRedReader && useOrcVectorizedRead(partition)) {\n \t\t\tthis.reader = new HiveVectorizedOrcSplitReader(\n \t\t\t\t\thiveVersion, jobConf, fieldNames, fieldTypes, selectedFields, split);\n+\t\t} else if (!useMapRedReader && useParquetVectorizedRead(partition)) {\n+\t\t\tthis.reader = new HiveVectorizedParquetSplitReader(\n+\t\t\t\t\thiveVersion, jobConf, fieldNames, fieldTypes, selectedFields, split);\n \t\t} else {\n \t\t\tthis.reader = new HiveMapredSplitReader(jobConf, partitionKeys, fieldTypes, selectedFields, split,\n \t\t\t\t\tHiveShimLoader.loadHiveShim(hiveVersion));\n \t\t}\n \t\tcurrentReadCount = 0L;\n \t}\n \n+\tprivate boolean isVectorizationSupport(LogicalType t) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3NDI4Mw=="}, "originalCommit": {"oid": "1864a6fe88ffdb1ce37f928a7fade4b38e13c876"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 869, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}