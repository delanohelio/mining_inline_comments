{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MTczMDQy", "number": 12883, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzowMToyOFrOENzq9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo0NzozMFrOEONGXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTEzNTI3OnYy", "diffSide": "RIGHT", "path": "flink-metrics/flink-metrics-prometheus/src/test/java/org/apache/flink/metrics/prometheus/PrometheusMetricReporterFactoryTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzowMToyOFrOGwnfxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzowMToyOFrOGwnfxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMTk0MQ==", "bodyText": "redundant as we have a e2e test covering it, which is preferable. I'd only add this to reporters that are not otherwise covered as a band-aid.", "url": "https://github.com/apache/flink/pull/12883#discussion_r453631941", "createdAt": "2020-07-13T13:01:28Z", "author": {"login": "zentol"}, "path": "flink-metrics/flink-metrics-prometheus/src/test/java/org/apache/flink/metrics/prometheus/PrometheusMetricReporterFactoryTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.metrics.prometheus;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.runtime.metrics.MetricReporterSetupTestBase;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/**\n+ * Tests for loading the {@link PrometheusPushGatewayReporterFactory} and {@link PrometheusReporterFactory}.\n+ */\n+public class PrometheusMetricReporterFactoryTest extends MetricReporterSetupTestBase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTEzNzEzOnYy", "diffSide": "RIGHT", "path": "flink-metrics/flink-metrics-slf4j/src/test/java/org/apache/flink/metrics/slf4j/Slf4jReporterFactoryTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzowMTo1NlrOGwng3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDoyMzoxMlrOGxNl6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMjIyMA==", "bodyText": "redundant due to usage in e2e tests.", "url": "https://github.com/apache/flink/pull/12883#discussion_r453632220", "createdAt": "2020-07-13T13:01:56Z", "author": {"login": "zentol"}, "path": "flink-metrics/flink-metrics-slf4j/src/test/java/org/apache/flink/metrics/slf4j/Slf4jReporterFactoryTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.metrics.slf4j;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.runtime.metrics.MetricReporterSetupTestBase;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Tests for loading the {@link Slf4jReporterFactory}.\n+ */\n+public class Slf4jReporterFactoryTest extends MetricReporterSetupTestBase {\n+\n+\t@Override\n+\tprotected List<Class<? extends MetricReporterFactory>> getMetricReporterFactoryClass() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgwNDU5NA==", "bodyText": "I think e2e test does not focus on this feature and unit test should just focus on one thing. If we change the implementation of e2e test one day, who would guarantee the SPI work successfully?\nI still prefer to include slf4j and Prometheus in the test scopes especially we already include tests for the rest 5 reporters.", "url": "https://github.com/apache/flink/pull/12883#discussion_r453804594", "createdAt": "2020-07-13T17:16:16Z", "author": {"login": "Myasuka"}, "path": "flink-metrics/flink-metrics-slf4j/src/test/java/org/apache/flink/metrics/slf4j/Slf4jReporterFactoryTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.metrics.slf4j;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.runtime.metrics.MetricReporterSetupTestBase;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Tests for loading the {@link Slf4jReporterFactory}.\n+ */\n+public class Slf4jReporterFactoryTest extends MetricReporterSetupTestBase {\n+\n+\t@Override\n+\tprotected List<Class<? extends MetricReporterFactory>> getMetricReporterFactoryClass() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMjIyMA=="}, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIxOTE1Ng==", "bodyText": "The Prometheus e2e test very much focuses on this, and tests all configurations one can think of (jar in plugins/lib, loaded via reflection/factory).\nThe reason it is necessary to test as an e2e test is that this feature working in production is reliant on the packaging; if the services stuff isn't included in the jar then it just won't work, and the unit test cannot catch that.", "url": "https://github.com/apache/flink/pull/12883#discussion_r454219156", "createdAt": "2020-07-14T09:16:35Z", "author": {"login": "zentol"}, "path": "flink-metrics/flink-metrics-slf4j/src/test/java/org/apache/flink/metrics/slf4j/Slf4jReporterFactoryTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.metrics.slf4j;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.runtime.metrics.MetricReporterSetupTestBase;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Tests for loading the {@link Slf4jReporterFactory}.\n+ */\n+public class Slf4jReporterFactoryTest extends MetricReporterSetupTestBase {\n+\n+\t@Override\n+\tprotected List<Class<? extends MetricReporterFactory>> getMetricReporterFactoryClass() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMjIyMA=="}, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI1NjEwNw==", "bodyText": "After looking at the PrometheusReporterEndToEndITCase, I agree that it has already focused on this and I'll skip to cover on slf4j and Prometheus modules.", "url": "https://github.com/apache/flink/pull/12883#discussion_r454256107", "createdAt": "2020-07-14T10:23:12Z", "author": {"login": "Myasuka"}, "path": "flink-metrics/flink-metrics-slf4j/src/test/java/org/apache/flink/metrics/slf4j/Slf4jReporterFactoryTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.metrics.slf4j;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.runtime.metrics.MetricReporterSetupTestBase;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Tests for loading the {@link Slf4jReporterFactory}.\n+ */\n+public class Slf4jReporterFactoryTest extends MetricReporterSetupTestBase {\n+\n+\t@Override\n+\tprotected List<Class<? extends MetricReporterFactory>> getMetricReporterFactoryClass() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMjIyMA=="}, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTE0NTI3OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricReporterSetupTestBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzowNDowNFrOGwnlrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzowNDowNFrOGwnlrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMzQ1Mg==", "bodyText": "It would be good to get rid of the dependency to flink-runtime; this change goes contrary to our goals of separating the metric modules from flink-runtime.\nThe ServiceLoader mechanism is standardized, so it's fine to just call ServiceLoader.load(MetricReporterFactory.class).iterator() here.", "url": "https://github.com/apache/flink/pull/12883#discussion_r453633452", "createdAt": "2020-07-13T13:04:04Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricReporterSetupTestBase.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.metrics;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.util.TestLogger;\n+\n+import org.junit.Test;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * The base class to verify metric reporter factory.\n+ */\n+public abstract class MetricReporterSetupTestBase extends TestLogger {\n+\n+\t@Test\n+\tpublic void testMetricReporterSetupViaSPI() {\n+\t\tIterator<MetricReporterFactory> factoryIterator = ReporterSetup.getAllReporterFactoriesViaSPI();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTE0NjczOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricReporterSetupTestBase.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzowNDoyOFrOGwnmjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDoyNDoxOFrOGxNoHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMzY3OA==", "bodyText": "Let's not introduce inheritance for this. The test could just be a method that is being called with the factory class.", "url": "https://github.com/apache/flink/pull/12883#discussion_r453633678", "createdAt": "2020-07-13T13:04:28Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricReporterSetupTestBase.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.metrics;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.util.TestLogger;\n+\n+import org.junit.Test;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * The base class to verify metric reporter factory.\n+ */\n+public abstract class MetricReporterSetupTestBase extends TestLogger {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3Nzc1Ng==", "bodyText": "If we do not inherit from a base class, we need to add this test method in 5 modules: flink-metrics-datadog, flink-metrics-graphite, flink-metrics-influxdb, flink-metrics-jmx and flink-metrics-statsd (if we give the background knowledge that Prometheus and slf4j reporter has been used in e2e tests). From my point of view, this would be too redundant.\nI could move the base test class from flink-runtime to flink-metrics-core  module to get rid of dependency of flink-runtime even they're in test scope. What do you think?", "url": "https://github.com/apache/flink/pull/12883#discussion_r453777756", "createdAt": "2020-07-13T16:31:45Z", "author": {"login": "Myasuka"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricReporterSetupTestBase.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.metrics;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.util.TestLogger;\n+\n+import org.junit.Test;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * The base class to verify metric reporter factory.\n+ */\n+public abstract class MetricReporterSetupTestBase extends TestLogger {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMzY3OA=="}, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyMjAxMg==", "bodyText": "It's fine to duplicate things. Factory support is optional after all, and having this as a simple opt-in method that external reporter implementations could use without interfering with class structures is useful.\nWe already see the downsides of inheritance in this PR; the test method must be unnecessarily complex since it must support the Prometheus case where there are multiple reporters, with a signature that for all other reporters doesn't make sense.", "url": "https://github.com/apache/flink/pull/12883#discussion_r454222012", "createdAt": "2020-07-14T09:21:39Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricReporterSetupTestBase.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.metrics;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.util.TestLogger;\n+\n+import org.junit.Test;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * The base class to verify metric reporter factory.\n+ */\n+public abstract class MetricReporterSetupTestBase extends TestLogger {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMzY3OA=="}, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI1NjY2OA==", "bodyText": "Okay, I'll update the PR with duplicate test methods to see the final effect.", "url": "https://github.com/apache/flink/pull/12883#discussion_r454256668", "createdAt": "2020-07-14T10:24:18Z", "author": {"login": "Myasuka"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricReporterSetupTestBase.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.metrics;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.util.TestLogger;\n+\n+import org.junit.Test;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * The base class to verify metric reporter factory.\n+ */\n+public abstract class MetricReporterSetupTestBase extends TestLogger {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMzY3OA=="}, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTE3MzAxOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricReporterSetupTestBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxMToyMFrOGwn2Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxMToyMFrOGwn2Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzNzcwMw==", "bodyText": "public static void testMetricReporterSetupViaSPI(Class<MetricReporterFactory> clazz) {\n\tSet<Class<? extends MetricReporterFactory>> loadedFactories = StreamSupport\n\t\t.stream(ServiceLoader.load(MetricReporterFactory.class).iterator(), false)\n\t\t.map(MetricReporterFactory::getClass)\n\t\t.collect(Collectors.toSet());\n\tassertThat(loadedFactories , hasItems(clazz));\n}", "url": "https://github.com/apache/flink/pull/12883#discussion_r453637703", "createdAt": "2020-07-13T13:11:20Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricReporterSetupTestBase.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.metrics;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.util.TestLogger;\n+\n+import org.junit.Test;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * The base class to verify metric reporter factory.\n+ */\n+public abstract class MetricReporterSetupTestBase extends TestLogger {\n+\n+\t@Test\n+\tpublic void testMetricReporterSetupViaSPI() {\n+\t\tIterator<MetricReporterFactory> factoryIterator = ReporterSetup.getAllReporterFactoriesViaSPI();\n+\t\tSet<String> metricReporterFactoryClasses = getMetricReporterFactoryClass().stream().map(Class::getCanonicalName).collect(Collectors.toSet());\n+\t\tassertFalse(metricReporterFactoryClasses.isEmpty());\n+\t\twhile (factoryIterator.hasNext()) {\n+\t\t\tMetricReporterFactory metricReporterFactory = factoryIterator.next();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzMwMTQyOnYy", "diffSide": "RIGHT", "path": "flink-metrics/flink-metrics-datadog/src/test/java/org/apache/flink/metrics/datadog/DatadogHttpReporterFactoryTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo0NzozMFrOGxOWQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjozMzo1MFrOGxRpJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2ODQ4MQ==", "bodyText": "What I meant was to have this method:\npublic static void testMetricReporterSetupViaSPI(Class<MetricReporterFactory> clazz) {\n\tSet<Class<? extends MetricReporterFactory>> loadedFactories = StreamSupport\n\t\t.stream(ServiceLoader.load(MetricReporterFactory.class).iterator(), false)\n\t\t.map(MetricReporterFactory::getClass)\n\t\t.collect(Collectors.toSet());\n\tassertThat(loadedFactories , hasItems(clazz));\n}\n\nin flink-metrics-core, and the reporter tests just call it.", "url": "https://github.com/apache/flink/pull/12883#discussion_r454268481", "createdAt": "2020-07-14T10:47:30Z", "author": {"login": "zentol"}, "path": "flink-metrics/flink-metrics-datadog/src/test/java/org/apache/flink/metrics/datadog/DatadogHttpReporterFactoryTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.metrics.datadog;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.util.TestLogger;\n+\n+import org.junit.Test;\n+\n+import java.util.ServiceLoader;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+\n+import static org.hamcrest.Matchers.hasItem;\n+import static org.junit.Assert.assertThat;\n+\n+/**\n+ * Tests for the {@link DatadogHttpReporterFactory}.\n+ */\n+public class DatadogHttpReporterFactoryTest extends TestLogger {\n+\n+\t@Test\n+\tpublic void testMetricReporterSetupViaSPI() {\n+\t\tSet<Class<? extends MetricReporterFactory>> loadedFactories = StreamSupport", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93616ee036d921efea80c8003e408d35339cc4ec"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMyMjQ3MA==", "bodyText": "Hmm, no wonder I feel confused that you did not want the inherent test classes but still feel okay for those redundant code as they are really not much if following this idea.\nSorry for the misunderstanding, and already updated this PR", "url": "https://github.com/apache/flink/pull/12883#discussion_r454322470", "createdAt": "2020-07-14T12:33:50Z", "author": {"login": "Myasuka"}, "path": "flink-metrics/flink-metrics-datadog/src/test/java/org/apache/flink/metrics/datadog/DatadogHttpReporterFactoryTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.metrics.datadog;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.util.TestLogger;\n+\n+import org.junit.Test;\n+\n+import java.util.ServiceLoader;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+\n+import static org.hamcrest.Matchers.hasItem;\n+import static org.junit.Assert.assertThat;\n+\n+/**\n+ * Tests for the {@link DatadogHttpReporterFactory}.\n+ */\n+public class DatadogHttpReporterFactoryTest extends TestLogger {\n+\n+\t@Test\n+\tpublic void testMetricReporterSetupViaSPI() {\n+\t\tSet<Class<? extends MetricReporterFactory>> loadedFactories = StreamSupport", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2ODQ4MQ=="}, "originalCommit": {"oid": "93616ee036d921efea80c8003e408d35339cc4ec"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4192, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}