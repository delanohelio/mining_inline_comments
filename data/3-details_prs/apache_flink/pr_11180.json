{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NTQyNzk3", "number": 11180, "title": "[FLINK-16220][json] Fix JsonRowSerializationSchema cast exception due\u2026", "bodyText": "\u2026 to object reuse\n\nWhat is the purpose of the change\nFix JsonRowSerializationSchema cast exception.\nBrief change log\nAdd instantof before cast to avoid nested array/map/row cast exception.\nVerifying this change\nThis change added tests and can be verified as follows:\n\nJsonRowSerializationSchemaTest.testNestedSchema()\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-02-22T02:54:03Z", "url": "https://github.com/apache/flink/pull/11180", "merged": true, "mergeCommit": {"oid": "0619a5b3e000855f00d11e71ae2f1b9deef05c98"}, "closed": true, "closedAt": "2020-03-20T06:44:19Z", "author": {"login": "libenchao"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGrNtNgH2gAyMzc4NTQyNzk3OjU2YzkyOGVhMzlkYzBjMWI5ZGUzZTI2NjlkOGU0ODk5NGIyMDgwMTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPE_HFAFqTM3NzQzMTYyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "56c928ea39dc0c1b9de3e2669d8e48994b208010", "author": {"user": {"login": "libenchao", "name": "Benchao Li"}}, "url": "https://github.com/apache/flink/commit/56c928ea39dc0c1b9de3e2669d8e48994b208010", "committedDate": "2020-02-22T02:50:31Z", "message": "[FLINK-16220][json] Fix JsonRowSerializationSchema cast exception due to object reuse"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1OTc5MjUy", "url": "https://github.com/apache/flink/pull/11180#pullrequestreview-375979252", "createdAt": "2020-03-17T12:16:42Z", "commit": {"oid": "56c928ea39dc0c1b9de3e2669d8e48994b208010"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjoxNjo0MlrOF3ZozA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjoyMzowNlrOF3Z15A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzNjA0NA==", "bodyText": "Have you considered to use if (reuse == null || reuse.isNull()) which might be more straightforward?", "url": "https://github.com/apache/flink/pull/11180#discussion_r393636044", "createdAt": "2020-03-17T12:16:42Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowSerializationSchema.java", "diffHunk": "@@ -360,7 +360,8 @@ private SerializationRuntimeConverter assembleRowConverter(\n \t\treturn (mapper, reuse, object) -> {\n \t\t\tObjectNode node;\n \n-\t\t\tif (reuse == null) {\n+\t\t\t// reuse could be a NullNode if last record is null.\n+\t\t\tif (!(reuse instanceof ObjectNode)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56c928ea39dc0c1b9de3e2669d8e48994b208010"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzOTM5Ng==", "bodyText": "This test can't reproduce the problem. I woudl suggest to have another test, e.g. (of course, we should add null array into it)\n\t@Test\n\tpublic void test() throws IOException {\n\t\tString[] jsons = new String[] {\n\t\t\t\"{\\\"svt\\\":\\\"2020-02-24T12:58:09.209+0800\\\"}\",\n\t\t\t\"{\\\"svt\\\":\\\"2020-02-24T12:58:09.209+0800\\\", \\\"ops\\\":{\\\"id\\\":\\\"281708d0-4092-4c21-9233-931950b6eccf\\\"}}\",\n\t\t\t\"{\\\"svt\\\":\\\"2020-02-24T12:58:09.209+0800\\\"}\",\n\t\t};\n\n\t\tString[] expected = new String[] {\n\t\t\t\"{\\\"svt\\\":\\\"2020-02-24T12:58:09.209+0800\\\",\\\"ops\\\":null}\",\n\t\t\t\"{\\\"svt\\\":\\\"2020-02-24T12:58:09.209+0800\\\",\\\"ops\\\":{\\\"id\\\":\\\"281708d0-4092-4c21-9233-931950b6eccf\\\"}}\",\n\t\t\t\"{\\\"svt\\\":\\\"2020-02-24T12:58:09.209+0800\\\",\\\"ops\\\":null}\",\n\t\t};\n\n\t\tTypeInformation<Row> schema = Types.ROW_NAMED(\n\t\t\tnew String[]{\"svt\", \"ops\"},\n\t\t\tTypes.STRING,\n\t\t\tTypes.ROW_NAMED(new String[]{\"id\"}, Types.STRING));\n\t\tJsonRowDeserializationSchema deserializationSchema = new JsonRowDeserializationSchema.Builder(schema)\n\t\t\t.build();\n\t\tJsonRowSerializationSchema serializationSchema = JsonRowSerializationSchema.builder()\n\t\t\t.withTypeInfo(schema)\n\t\t\t.build();\n\n\t\tfor (int i = 0; i < jsons.length; i++) {\n\t\t\tString json = jsons[i];\n\t\t\tRow row = deserializationSchema.deserialize(json.getBytes());\n\t\t\tString result = new String(serializationSchema.serialize(row));\n\t\t\tassertEquals(expected[i], result);\n\t\t}\n\t}", "url": "https://github.com/apache/flink/pull/11180#discussion_r393639396", "createdAt": "2020-03-17T12:23:06Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowSerializationSchemaTest.java", "diffHunk": "@@ -113,6 +114,12 @@ public void testNestedSchema() {\n \t\tassertThat(row, whenSerializedWith(serializationSchema)\n \t\t\t.andDeserializedWith(deserializationSchema)\n \t\t\t.equalsTo(row));\n+\n+\t\trow.setField(3, new int[]{1, 2, 3});\n+\n+\t\tassertThat(row, whenSerializedWith(serializationSchema)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56c928ea39dc0c1b9de3e2669d8e48994b208010"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1cf2dd26b61af5f530525b09a96a5ac25f5df3f", "author": {"user": {"login": "libenchao", "name": "Benchao Li"}}, "url": "https://github.com/apache/flink/commit/f1cf2dd26b61af5f530525b09a96a5ac25f5df3f", "committedDate": "2020-03-17T14:34:12Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NDAzNjAy", "url": "https://github.com/apache/flink/pull/11180#pullrequestreview-377403602", "createdAt": "2020-03-19T03:39:26Z", "commit": {"oid": "f1cf2dd26b61af5f530525b09a96a5ac25f5df3f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMzozOToyNlrOF4fFfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMzozOToyNlrOF4fFfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc3Mzg4NA==", "bodyText": "Could you also verify for array type?", "url": "https://github.com/apache/flink/pull/11180#discussion_r394773884", "createdAt": "2020-03-19T03:39:26Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowSerializationSchemaTest.java", "diffHunk": "@@ -91,20 +91,51 @@ public void testSerializationOfTwoRows() throws IOException {\n \t\tassertEquals(row2, deserializationSchema.deserialize(bytes));\n \t}\n \n+\t@Test\n+\tpublic void testMultiRowsWithNullValues() throws IOException {\n+\t\tString[] jsons = new String[] {\n+\t\t\t\"{\\\"svt\\\":\\\"2020-02-24T12:58:09.209+0800\\\"}\",\n+\t\t\t\"{\\\"svt\\\":\\\"2020-02-24T12:58:09.209+0800\\\", \\\"ops\\\":{\\\"id\\\":\\\"281708d0-4092-4c21-9233-931950b6eccf\\\"}}\",\n+\t\t\t\"{\\\"svt\\\":\\\"2020-02-24T12:58:09.209+0800\\\"}\",\n+\t\t};\n+\n+\t\tString[] expected = new String[] {\n+\t\t\t\"{\\\"svt\\\":\\\"2020-02-24T12:58:09.209+0800\\\",\\\"ops\\\":null}\",\n+\t\t\t\"{\\\"svt\\\":\\\"2020-02-24T12:58:09.209+0800\\\",\\\"ops\\\":{\\\"id\\\":\\\"281708d0-4092-4c21-9233-931950b6eccf\\\"}}\",\n+\t\t\t\"{\\\"svt\\\":\\\"2020-02-24T12:58:09.209+0800\\\",\\\"ops\\\":null}\",\n+\t\t};\n+\n+\t\tTypeInformation<Row> schema = Types.ROW_NAMED(\n+\t\t\tnew String[]{\"svt\", \"ops\"},\n+\t\t\tTypes.STRING,\n+\t\t\tTypes.ROW_NAMED(new String[]{\"id\"}, Types.STRING));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1cf2dd26b61af5f530525b09a96a5ac25f5df3f"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "142438bb79505c78246151b6e13bb163300a73a3", "author": {"user": {"login": "libenchao", "name": "Benchao Li"}}, "url": "https://github.com/apache/flink/commit/142438bb79505c78246151b6e13bb163300a73a3", "committedDate": "2020-03-19T04:15:50Z", "message": "Add array test case to JsonRowSerializationSchema"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NDMxNjI0", "url": "https://github.com/apache/flink/pull/11180#pullrequestreview-377431624", "createdAt": "2020-03-19T05:23:30Z", "commit": {"oid": "142438bb79505c78246151b6e13bb163300a73a3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4929, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}