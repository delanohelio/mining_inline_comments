{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3OTI2NzE5", "number": 13402, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo0MjoyOVrOEkA_eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjoyMDoyN1rOEkIYEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjAwNDQwOnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo0MjoyOVrOHSs3DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjoyMjozNlrOHSuOOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MTQwNA==", "bodyText": "int is OK.", "url": "https://github.com/apache/flink/pull/13402#discussion_r489371404", "createdAt": "2020-09-16T11:42:29Z", "author": {"login": "JingsongLi"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){\n+\t\tInteger expectParallelism = 100;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b3231fcf0cbe8d16feb855dc287d09977c11de7"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM5MzcyMw==", "bodyText": "ok", "url": "https://github.com/apache/flink/pull/13402#discussion_r489393723", "createdAt": "2020-09-16T12:22:36Z", "author": {"login": "pyscala"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){\n+\t\tInteger expectParallelism = 100;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MTQwNA=="}, "originalCommit": {"oid": "0b3231fcf0cbe8d16feb855dc287d09977c11de7"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjAwNTAxOnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo0Mjo0MVrOHSs3eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjoyMjozMVrOHSuOCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MTUxMw==", "bodyText": "ditto boolean", "url": "https://github.com/apache/flink/pull/13402#discussion_r489371513", "createdAt": "2020-09-16T11:42:41Z", "author": {"login": "JingsongLi"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){\n+\t\tInteger expectParallelism = 100;\n+\t\tBoolean expectIsParallel = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b3231fcf0cbe8d16feb855dc287d09977c11de7"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM5MzY3NA==", "bodyText": "ok", "url": "https://github.com/apache/flink/pull/13402#discussion_r489393674", "createdAt": "2020-09-16T12:22:31Z", "author": {"login": "pyscala"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){\n+\t\tInteger expectParallelism = 100;\n+\t\tBoolean expectIsParallel = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MTUxMw=="}, "originalCommit": {"oid": "0b3231fcf0cbe8d16feb855dc287d09977c11de7"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjAwNjg3OnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo0MzoxNFrOHSs4rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjoyMjoyNVrOHSuNxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MTgyMA==", "bodyText": "use expectParallelism", "url": "https://github.com/apache/flink/pull/13402#discussion_r489371820", "createdAt": "2020-09-16T11:43:14Z", "author": {"login": "JingsongLi"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){\n+\t\tInteger expectParallelism = 100;\n+\t\tBoolean expectIsParallel = true;\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\tMockSource mockSource = new MockSource(Boundedness.BOUNDED, 10);\n+\t\tDataStreamSource<Integer> stream = new DataStreamSource<Integer>(\n+\t\t\tenv,\n+\t\t\tmockSource,\n+\t\t\tWatermarkStrategy.noWatermarks() ,\n+\t\t\tnull,\n+\t\t\t\"TestingSource\");\n+\t\tstream.setParallelism(100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b3231fcf0cbe8d16feb855dc287d09977c11de7"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM5MzYwNA==", "bodyText": "sorry for careless.", "url": "https://github.com/apache/flink/pull/13402#discussion_r489393604", "createdAt": "2020-09-16T12:22:25Z", "author": {"login": "pyscala"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){\n+\t\tInteger expectParallelism = 100;\n+\t\tBoolean expectIsParallel = true;\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\tMockSource mockSource = new MockSource(Boundedness.BOUNDED, 10);\n+\t\tDataStreamSource<Integer> stream = new DataStreamSource<Integer>(\n+\t\t\tenv,\n+\t\t\tmockSource,\n+\t\t\tWatermarkStrategy.noWatermarks() ,\n+\t\t\tnull,\n+\t\t\t\"TestingSource\");\n+\t\tstream.setParallelism(100);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MTgyMA=="}, "originalCommit": {"oid": "0b3231fcf0cbe8d16feb855dc287d09977c11de7"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjAxMDczOnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo0NDoxOVrOHSs7Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjoyMjo0OFrOHSuOsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MjQyNw==", "bodyText": "Use env.fromSource(mockSource, WatermarkStrategy.noWatermarks(), \"TestingSource\")", "url": "https://github.com/apache/flink/pull/13402#discussion_r489372427", "createdAt": "2020-09-16T11:44:19Z", "author": {"login": "JingsongLi"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){\n+\t\tInteger expectParallelism = 100;\n+\t\tBoolean expectIsParallel = true;\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\tMockSource mockSource = new MockSource(Boundedness.BOUNDED, 10);\n+\t\tDataStreamSource<Integer> stream = new DataStreamSource<Integer>(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b3231fcf0cbe8d16feb855dc287d09977c11de7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM5Mzg0MA==", "bodyText": "good idea.", "url": "https://github.com/apache/flink/pull/13402#discussion_r489393840", "createdAt": "2020-09-16T12:22:48Z", "author": {"login": "pyscala"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){\n+\t\tInteger expectParallelism = 100;\n+\t\tBoolean expectIsParallel = true;\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\tMockSource mockSource = new MockSource(Boundedness.BOUNDED, 10);\n+\t\tDataStreamSource<Integer> stream = new DataStreamSource<Integer>(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MjQyNw=="}, "originalCommit": {"oid": "0b3231fcf0cbe8d16feb855dc287d09977c11de7"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzIxNDI1OnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjoyMDoyN1rOHS4mww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwMzowNToxOFrOHTOGVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU2Mzg0Mw==", "bodyText": "There is still a format issue here.\nI think this might not be caught automatically by the checkstyle tools.", "url": "https://github.com/apache/flink/pull/13402#discussion_r489563843", "createdAt": "2020-09-16T16:20:27Z", "author": {"login": "StephanEwen"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b7f5b86b91caffdb8436913467d165254000745"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg5MjMzMQ==", "bodyText": "Thanks for your reminder.", "url": "https://github.com/apache/flink/pull/13402#discussion_r489892331", "createdAt": "2020-09-17T02:27:25Z", "author": {"login": "pyscala"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU2Mzg0Mw=="}, "originalCommit": {"oid": "4b7f5b86b91caffdb8436913467d165254000745"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg5MjkyMQ==", "bodyText": "@pyscala I think Stephan means: testConstructor() { instead of testConstructor(){.", "url": "https://github.com/apache/flink/pull/13402#discussion_r489892921", "createdAt": "2020-09-17T02:28:21Z", "author": {"login": "JingsongLi"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU2Mzg0Mw=="}, "originalCommit": {"oid": "4b7f5b86b91caffdb8436913467d165254000745"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTkxNTk5MA==", "bodyText": "Done.", "url": "https://github.com/apache/flink/pull/13402#discussion_r489915990", "createdAt": "2020-09-17T03:05:18Z", "author": {"login": "pyscala"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU2Mzg0Mw=="}, "originalCommit": {"oid": "4b7f5b86b91caffdb8436913467d165254000745"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 280, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}