{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNDYwMTI0", "number": 13865, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzo1MTozMlrOE1-ppA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzo1NjozM1rOE1-vQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDM2NDUyOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/expressions/ScalarOperatorsTest.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzo1MTozMlrOHujXGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzo1MTozMlrOHujXGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3NTg5OQ==", "bodyText": "We may also need to add some test in SqlExpressionTest.testComparisonFunctions", "url": "https://github.com/apache/flink/pull/13865#discussion_r518575899", "createdAt": "2020-11-06T07:51:32Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/expressions/ScalarOperatorsTest.scala", "diffHunk": "@@ -62,6 +62,40 @@ class ScalarOperatorsTest extends ScalarOperatorsTestBase {\n     )\n   }\n \n+  @Test\n+  def testCompareOperator(): Unit= {\n+\n+    // f18 and f19 have same length.\n+    testSqlApi(\n+      \"f18 > f19\",\n+      \"true\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d54115a3a75f39792e919014ac8e299f70a4be3"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDM3ODg5OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzo1NjozM1rOHujfmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwNzo1NjozM1rOHujfmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU3ODA3Mg==", "bodyText": "/**\n\t * Compares two byte arrays in lexicographical order.\n\t * \n     * <p>The result is\n     * positive if {@code array1} is great than {@code array2},\n\t * negative if {@code array1} is less than {@code array2} and\n     * 0 if {@code array1} is equal to {@code array2}.\n\t * \n     * <p>Note: Currently, this is used in {@code ScalarOperatorGens}\n\t * for comparing two fields of binary or varbinary type.\n\t *\n\t * @param array1 byte array to compare.\n\t * @param array2 byte array to compare.\n\t * @return an Integer indicating which one is bigger\n\t */", "url": "https://github.com/apache/flink/pull/13865#discussion_r518578072", "createdAt": "2020-11-06T07:56:33Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/functions/SqlFunctionUtils.java", "diffHunk": "@@ -1116,4 +1116,26 @@ public static float struncate(float b0) {\n \tpublic static float struncate(float b0, int b1) {\n \t\treturn (float) doubleValue(struncate(castFrom((double) b0, 38, 18), b1));\n \t}\n+\n+\t/**\n+\t * Compare between two byte arrays.\n+\t * The result is 1 if array1 is great than array2,\n+\t * -1 if array1 is less than array2 and 0 if array1 is equal array2.\n+\t * Note: Currently, this is used in {@code ScalarOperatorGens}\n+\t * for comparing two fields of binary or varbinary type.\n+\t *\n+\t * @param array1 byte array1 to be compared.\n+\t * @param array2 byte array2 to be compared.\n+\t * @return Target value.\n+\t */\n+\tpublic static int byteArrayCompare(byte[] array1, byte[] array2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d54115a3a75f39792e919014ac8e299f70a4be3"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}