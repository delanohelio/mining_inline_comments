{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNjAwMjI1", "number": 13216, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjo0MDo1OVrOEn8TMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoxMDoyN1rOEr8j8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzE3ODc1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/factories/FactoryUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjo0MDo1OVrOHYwQ7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTo0NDoyMlrOHY2M_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcxODYzOQ==", "bodyText": "Why don't remove old methods? Looks like they will hides potential bugs.", "url": "https://github.com/apache/flink/pull/13216#discussion_r495718639", "createdAt": "2020-09-28T06:40:59Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/factories/FactoryUtil.java", "diffHunk": "@@ -109,11 +109,27 @@ public static DynamicTableSource createTableSource(\n \t\t\tCatalogTable catalogTable,\n \t\t\tReadableConfig configuration,\n \t\t\tClassLoader classLoader) {\n+\t\treturn createTableSource(catalog, objectIdentifier, catalogTable, configuration, classLoader, false);\n+\t}\n+\n+\t/**\n+\t * Creates a {@link DynamicTableSource} from a {@link CatalogTable}.\n+\t *\n+\t * <p>It considers {@link Catalog#getFactory()} if provided.\n+\t */\n+\tpublic static DynamicTableSource createTableSource(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00910669a7c7b63e947ee691103578a4dc37545d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNTkzNQ==", "bodyText": "Some tests rely on the old method. But I agree it's better to remove it.", "url": "https://github.com/apache/flink/pull/13216#discussion_r495815935", "createdAt": "2020-09-28T09:44:22Z", "author": {"login": "lirui-apache"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/factories/FactoryUtil.java", "diffHunk": "@@ -109,11 +109,27 @@ public static DynamicTableSource createTableSource(\n \t\t\tCatalogTable catalogTable,\n \t\t\tReadableConfig configuration,\n \t\t\tClassLoader classLoader) {\n+\t\treturn createTableSource(catalog, objectIdentifier, catalogTable, configuration, classLoader, false);\n+\t}\n+\n+\t/**\n+\t * Creates a {@link DynamicTableSource} from a {@link CatalogTable}.\n+\t *\n+\t * <p>It considers {@link Catalog#getFactory()} if provided.\n+\t */\n+\tpublic static DynamicTableSource createTableSource(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcxODYzOQ=="}, "originalCommit": {"oid": "00910669a7c7b63e947ee691103578a4dc37545d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTE2NDY0OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/factories/FactoryUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoxMDoyN1rOHe_hcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoxMDoyN1rOHe_hcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2MDA4MQ==", "bodyText": "Not only source, sink too.\nI can see the bug in HiveDynamicTableFactory because not remove old method.", "url": "https://github.com/apache/flink/pull/13216#discussion_r502260081", "createdAt": "2020-10-09T08:10:27Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/factories/FactoryUtil.java", "diffHunk": "@@ -148,11 +150,27 @@ public static DynamicTableSink createTableSink(\n \t\t\tCatalogTable catalogTable,\n \t\t\tReadableConfig configuration,\n \t\t\tClassLoader classLoader) {\n+\t\treturn createTableSink(catalog, objectIdentifier, catalogTable, configuration, classLoader, false);\n+\t}\n+\n+\t/**\n+\t * Creates a {@link DynamicTableSink} from a {@link CatalogTable}.\n+\t *\n+\t * <p>It considers {@link Catalog#getFactory()} if provided.\n+\t */\n+\tpublic static DynamicTableSink createTableSink(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "528277a79d67bb9309ec3d6121d40dfca9e83553"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 503, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}