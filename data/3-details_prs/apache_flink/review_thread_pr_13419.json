{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MTY1MDQz", "number": 13419, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxNDo1OFrOEl_qcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToyMzo1NVrOEn_syw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Mjc1ODI1OnYy", "diffSide": "RIGHT", "path": "flink-end-to-end-tests/test-scripts/common.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOToxNDo1OFrOHVxMFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzo0OTo1OFrOHV7Cxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4ODA1Mg==", "bodyText": "We should be able to re-use run_test_with_timeout. All we basically need to do is move this\necho \"Printing Flink logs and killing it:\"\ncat ${FLINK_DIR}/log/*\n\ninto a separate function, and add a new run_with_timeout that accepts a timeout, run-command, and on-failure-command.\nrun_test_with_timeout() {\n  local TEST_TIMEOUT_SECONDS=$1\n  shift\n  local TEST_COMMAND=$@\n  internal_run_with_timeout $TEST_TIMEOUT_SECONDS \"$TEST_COMMAND\" print_logs\n}\n\nrun_with_timeout() {\n  internal_run_with_timeout $1 \"$2\" \"\"\n}\n\ninternal_run_with_timeout() {\n  local timeout=$1\n  local runCommand=$2\n  local onFailureCommand=$3\n\n  // do stuff\n}\n\nprint_logs() {\n  echo \"Printing Flink logs and killing it:\"\n   cat ${FLINK_DIR}/log/*\n}", "url": "https://github.com/apache/flink/pull/13419#discussion_r492588052", "createdAt": "2020-09-22T09:14:58Z", "author": {"login": "zentol"}, "path": "flink-end-to-end-tests/test-scripts/common.sh", "diffHunk": "@@ -830,3 +830,30 @@ run_test_with_timeout() {\n       $TEST_COMMAND\n   )\n }\n+\n+run_with_timeout() {\n+  local timeout=\"$1\"\n+  shift\n+  local pidFile=\"$1\"\n+  shift\n+  local command=\"$@\"\n+\n+  # invoke command\n+  (eval \"$command\"; rm $pidFile; ) &\n+  pid=$!\n+  echo $pid > $pidFile\n+\n+  # invoke timeout guard\n+  (\n+    sleep $timeout\n+    if [[ -e $pidFile ]]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eedc94a8daeab56af338a0783e3bb2aa014d7191"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc0OTUxMQ==", "bodyText": "First, I tried to make it work with the old implementation. But I struggled to test it locally on MacOS. Hence, I switched to the new implementation. I tried to make the code change not cause changes to test output. Let's see if the tests run through.", "url": "https://github.com/apache/flink/pull/13419#discussion_r492749511", "createdAt": "2020-09-22T13:49:58Z", "author": {"login": "XComp"}, "path": "flink-end-to-end-tests/test-scripts/common.sh", "diffHunk": "@@ -830,3 +830,30 @@ run_test_with_timeout() {\n       $TEST_COMMAND\n   )\n }\n+\n+run_with_timeout() {\n+  local timeout=\"$1\"\n+  shift\n+  local pidFile=\"$1\"\n+  shift\n+  local command=\"$@\"\n+\n+  # invoke command\n+  (eval \"$command\"; rm $pidFile; ) &\n+  pid=$!\n+  echo $pid > $pidFile\n+\n+  # invoke timeout guard\n+  (\n+    sleep $timeout\n+    if [[ -e $pidFile ]]; then", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4ODA1Mg=="}, "originalCommit": {"oid": "eedc94a8daeab56af338a0783e3bb2aa014d7191"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDk3NDY2OnYy", "diffSide": "RIGHT", "path": "flink-end-to-end-tests/test-scripts/common_docker.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMDo1MzowM1rOHXAjUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMDo1MzowM1rOHXAjUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg4ODMzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                run_with_timeout 600 \"${TEST_DATA_DIR}/docker-build-${RANDOM}.pid\" docker build --no-cache --network=\"host\" -t ${image_name} dev/${image_name}-debian\n          \n          \n            \n                run_with_timeout 600 docker build --no-cache --network=\"host\" -t ${image_name} dev/${image_name}-debian", "url": "https://github.com/apache/flink/pull/13419#discussion_r493888336", "createdAt": "2020-09-23T20:53:03Z", "author": {"login": "zentol"}, "path": "flink-end-to-end-tests/test-scripts/common_docker.sh", "diffHunk": "@@ -50,7 +50,7 @@ function build_image() {\n     ./add-custom.sh -u localhost:9999/flink.tgz -n ${image_name}\n \n     echo \"Building images\"\n-    docker build --no-cache --network=\"host\" -t ${image_name} dev/${image_name}-debian\n+    run_with_timeout 600 \"${TEST_DATA_DIR}/docker-build-${RANDOM}.pid\" docker build --no-cache --network=\"host\" -t ${image_name} dev/${image_name}-debian", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13127f0fb01159538233c928cdc1f1d7f74dbcd9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzczNTc5OnYy", "diffSide": "RIGHT", "path": "flink-end-to-end-tests/test-scripts/common.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToyMzo1NVrOHY1drQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToyMzo1NVrOHY1drQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgwMzgyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  (sleep \"${timeout_in_seconds}\" # set a timeout for this test\n          \n          \n            \n                  (sleep \"${timeout_in_seconds}\" # set a timeout for this command", "url": "https://github.com/apache/flink/pull/13419#discussion_r495803821", "createdAt": "2020-09-28T09:23:55Z", "author": {"login": "zentol"}, "path": "flink-end-to-end-tests/test-scripts/common.sh", "diffHunk": "@@ -801,32 +801,44 @@ function extract_job_id_from_job_submission_return() {\n     echo \"$JOB_ID\"\n }\n \n-\n-#\n-# NOTE: This function requires at least Bash version >= 4. Mac OS in 2020 still ships 3.x\n-#\n kill_test_watchdog() {\n-    local watchdog_pid=`cat $TEST_DATA_DIR/job_watchdog.pid`\n+    local watchdog_pid=$(cat $TEST_DATA_DIR/job_watchdog.pid)\n     echo \"Stopping job timeout watchdog (with pid=$watchdog_pid)\"\n     kill $watchdog_pid\n }\n \n-run_test_with_timeout() {\n-  local TEST_TIMEOUT_SECONDS=$1\n-  shift\n-  local TEST_COMMAND=$@\n+#\n+# NOTE: This function requires at least Bash version >= 4 due to the usage of $BASHPID. Mac OS in 2020 still ships 3.x\n+#\n+internal_run_with_timeout() {\n+  local timeout_in_seconds=\"$1\"\n+  local on_failure=\"$2\"\n+  local command_label=\"$3\"\n+  local command=\"${@:4}\"\n \n   on_exit kill_test_watchdog\n \n   (\n-      cmdpid=$BASHPID\n-      (sleep $TEST_TIMEOUT_SECONDS # set a timeout for this test\n-      echo \"Test (pid: $cmdpid) did not finish after $TEST_TIMEOUT_SECONDS seconds.\"\n-      echo \"Printing Flink logs and killing it:\"\n-      cat ${FLINK_DIR}/log/*\n-      kill \"$cmdpid\") & watchdog_pid=$!\n+      command_pid=$BASHPID\n+      (sleep \"${timeout_in_seconds}\" # set a timeout for this test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e955f78bf582ca3b1c50e357d6ed5d7bfe159268"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 292, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}