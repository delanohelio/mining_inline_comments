{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNDgyMzI3", "number": 11444, "title": "[FLINK-16608][python] Support primitive data types for vectorized Python UDF", "bodyText": "What is the purpose of the change\nThis pull request adds support of BooleanType, FloatType, DoubleType, VarCharType, VarBinaryType, DecimalType, DateType and TimeType for vectorized Python UDF.\nVerifying this change\n\nJava Tests ArrowUtilsTest, BaseRowArrowReaderWriterTest, RowArrowReaderWriterTest and Python tests PandasUDFITTests.test_all_data_types\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)\nIf yes, how is the feature documented? (not applicable)", "createdAt": "2020-03-18T14:50:37Z", "url": "https://github.com/apache/flink/pull/11444", "merged": true, "mergeCommit": {"oid": "28bcbd0cf68a4e1820bc091a8be0417f060dd01c"}, "closed": true, "closedAt": "2020-03-24T06:20:00Z", "author": {"login": "dianfu"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO4aIhgH2gAyMzkwNDgyMzI3OjNhOGQ3N2E3MGVhMzhmNjY1MmY1YmM1ZDhhMmI0NTFlZmU4OTVhZTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQn00yABqjMxNTc2MjI4NjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3a8d77a70ea38f6652f5bc5d8a2b451efe895ae0", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/3a8d77a70ea38f6652f5bc5d8a2b451efe895ae0", "committedDate": "2020-03-18T14:44:15Z", "message": "[FLINK-16608][python] Remove the method which derives the LogicalType from the Arrow ValueVector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "474eb675e42e12a40743ed618521652c5b0d1968", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/474eb675e42e12a40743ed618521652c5b0d1968", "committedDate": "2020-03-18T14:44:40Z", "message": "[FLINK-16608][python] Support BooleanType in vectorized Python UDF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3a6ae47d0ff7ad4bc13aca221d6f4a06a492115", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/b3a6ae47d0ff7ad4bc13aca221d6f4a06a492115", "committedDate": "2020-03-18T14:44:48Z", "message": "[FLINK-16608][python] Support FloatType in vectorized Python UDF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1caa7595273accdd02d1a66a0ee4e396838ebe42", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/1caa7595273accdd02d1a66a0ee4e396838ebe42", "committedDate": "2020-03-18T14:44:54Z", "message": "[FLINK-16608][python] Support DoubleType in vectorized Python UDF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "307c75523c6fb4afadb2f54f9fac843f10a2362b", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/307c75523c6fb4afadb2f54f9fac843f10a2362b", "committedDate": "2020-03-18T14:45:01Z", "message": "[FLINK-16608][python] Support VarCharType in vectorized Python UDF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95574f67e9f3c3e3a4fc8fd3e847239f008a4b34", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/95574f67e9f3c3e3a4fc8fd3e847239f008a4b34", "committedDate": "2020-03-18T14:45:07Z", "message": "[FLINK-16608][python] Support VarBinaryType in vectorized Python UDF"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MTYyNTcx", "url": "https://github.com/apache/flink/pull/11444#pullrequestreview-379162571", "createdAt": "2020-03-23T06:41:00Z", "commit": {"oid": "f2ef0c0c560faa93cc7663ae7080676488066a10"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNjo0MTowMVrOF54aWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwNzowMTowMVrOF54xIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzNzQwMg==", "bodyText": "Should we also adjust the precision and scale here, like it in DecimalWriter? If we pass a decimal with different precision and scale, an exception will be thrown.", "url": "https://github.com/apache/flink/pull/11444#discussion_r396237402", "createdAt": "2020-03-23T06:41:01Z", "author": {"login": "hequn8128"}, "path": "flink-python/src/main/java/org/apache/flink/table/runtime/arrow/writers/BaseRowDecimalWriter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.runtime.arrow.writers;\n+\n+import org.apache.flink.annotation.Internal;\n+import org.apache.flink.table.dataformat.BaseRow;\n+\n+import org.apache.arrow.vector.DecimalVector;\n+\n+/**\n+ * {@link ArrowFieldWriter} for Decimal.\n+ */\n+@Internal\n+public final class BaseRowDecimalWriter extends ArrowFieldWriter<BaseRow> {\n+\n+\tprivate final int precision;\n+\tprivate final int scale;\n+\n+\tpublic BaseRowDecimalWriter(DecimalVector decimalVector, int precision, int scale) {\n+\t\tsuper(decimalVector);\n+\t\tthis.precision = precision;\n+\t\tthis.scale = scale;\n+\t}\n+\n+\t@Override\n+\tpublic void doWrite(BaseRow row, int ordinal) {\n+\t\tif (row.isNullAt(ordinal)) {\n+\t\t\t((DecimalVector) getValueVector()).setNull(getCount());\n+\t\t} else {\n+\t\t\t((DecimalVector) getValueVector()).setSafe(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2ef0c0c560faa93cc7663ae7080676488066a10"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzNzU4OA==", "bodyText": "Should we also adjust the precision and scale here, like it in DecimalWriter? If we pass a decimal with different precision and scale for the BaseRowDecimalWriter, an exception will be thrown.", "url": "https://github.com/apache/flink/pull/11444#discussion_r396237588", "createdAt": "2020-03-23T06:41:39Z", "author": {"login": "hequn8128"}, "path": "flink-python/src/main/java/org/apache/flink/table/runtime/arrow/writers/BaseRowDecimalWriter.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.runtime.arrow.writers;\n+\n+import org.apache.flink.annotation.Internal;\n+import org.apache.flink.table.dataformat.BaseRow;\n+\n+import org.apache.arrow.vector.DecimalVector;\n+\n+/**\n+ * {@link ArrowFieldWriter} for Decimal.\n+ */\n+@Internal\n+public final class BaseRowDecimalWriter extends ArrowFieldWriter<BaseRow> {\n+\n+\tprivate final int precision;\n+\tprivate final int scale;\n+\n+\tpublic BaseRowDecimalWriter(DecimalVector decimalVector, int precision, int scale) {\n+\t\tsuper(decimalVector);\n+\t\tthis.precision = precision;\n+\t\tthis.scale = scale;\n+\t}\n+\n+\t@Override\n+\tpublic void doWrite(BaseRow row, int ordinal) {\n+\t\tif (row.isNullAt(ordinal)) {\n+\t\t\t((DecimalVector) getValueVector()).setNull(getCount());\n+\t\t} else {\n+\t\t\t((DecimalVector) getValueVector()).setSafe(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2ef0c0c560faa93cc7663ae7080676488066a10"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0MzIzMw==", "bodyText": "DateWriter is used for the old planner. It seems we can't use the blink planner class directly here, otherwise, Pyflink will depend on blink planner even it is configured to use the old planner.", "url": "https://github.com/apache/flink/pull/11444#discussion_r396243233", "createdAt": "2020-03-23T07:01:01Z", "author": {"login": "hequn8128"}, "path": "flink-python/src/main/java/org/apache/flink/table/runtime/arrow/writers/DateWriter.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.runtime.arrow.writers;\n+\n+import org.apache.flink.annotation.Internal;\n+import org.apache.flink.table.runtime.functions.SqlDateTimeUtils;\n+import org.apache.flink.types.Row;\n+\n+import org.apache.arrow.vector.DateDayVector;\n+\n+import java.sql.Date;\n+\n+/**\n+ * {@link ArrowFieldWriter} for Date.\n+ */\n+@Internal\n+public final class DateWriter extends ArrowFieldWriter<Row> {\n+\n+\tpublic DateWriter(DateDayVector dateDayVector) {\n+\t\tsuper(dateDayVector);\n+\t}\n+\n+\t@Override\n+\tpublic void doWrite(Row value, int ordinal) {\n+\t\tif (value.getField(ordinal) == null) {\n+\t\t\t((DateDayVector) getValueVector()).setNull(getCount());\n+\t\t} else {\n+\t\t\t((DateDayVector) getValueVector()).setSafe(\n+\t\t\t\tgetCount(), SqlDateTimeUtils.dateToInternal(((Date) value.getField(ordinal))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2ef0c0c560faa93cc7663ae7080676488066a10"}, "originalPosition": 45}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2ef0c0c560faa93cc7663ae7080676488066a10", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/f2ef0c0c560faa93cc7663ae7080676488066a10", "committedDate": "2020-03-18T14:45:22Z", "message": "[FLINK-16608][python] Support TimeType in vectorized Python UDF"}, "afterCommit": {"oid": "b71ecc25d378f9d33a133b7bd2a85d89268580a9", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/b71ecc25d378f9d33a133b7bd2a85d89268580a9", "committedDate": "2020-03-23T10:32:40Z", "message": "[FLINK-16608][python] Support TimeType in vectorized Python UDF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b2ff6f60ffba45037b76169b9b23aa7d4de3e9d", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/2b2ff6f60ffba45037b76169b9b23aa7d4de3e9d", "committedDate": "2020-03-24T00:32:28Z", "message": "[FLINK-16608][python] Support DecimalType in vectorized Python UDF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52399b23f52c868d27daa27034b7a8d23dcccaad", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/52399b23f52c868d27daa27034b7a8d23dcccaad", "committedDate": "2020-03-24T00:32:31Z", "message": "[FLINK-16608][python] Support DateType in vectorized Python UDF"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "527f5dd8b6dcef9d1064186a20e9c4faf9ab65b2", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/527f5dd8b6dcef9d1064186a20e9c4faf9ab65b2", "committedDate": "2020-03-24T00:32:32Z", "message": "[FLINK-16608][python] Support TimeType in vectorized Python UDF"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b71ecc25d378f9d33a133b7bd2a85d89268580a9", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/b71ecc25d378f9d33a133b7bd2a85d89268580a9", "committedDate": "2020-03-23T10:32:40Z", "message": "[FLINK-16608][python] Support TimeType in vectorized Python UDF"}, "afterCommit": {"oid": "527f5dd8b6dcef9d1064186a20e9c4faf9ab65b2", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/527f5dd8b6dcef9d1064186a20e9c4faf9ab65b2", "committedDate": "2020-03-24T00:32:32Z", "message": "[FLINK-16608][python] Support TimeType in vectorized Python UDF"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2876, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}