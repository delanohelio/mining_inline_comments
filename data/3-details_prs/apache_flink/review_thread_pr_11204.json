{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MzQxMzI0", "number": 11204, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNToyMzozN1rODikcUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMDoxNzowNVrODipHlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NTc1MjUwOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-java/src/test/java/org/apache/flink/table/descriptors/ConnectTableDescriptorTest.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNToyMzozN1rOFt5BDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMDoxNzozM1rOFuAUXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY2NDM5Ng==", "bodyText": "I think we can add a verification in org.apache.flink.table.client.gateway.local.ExecutionContextTest#testTemporalTables to check that the tableEnv.from(\"EnrichmentSource\").getTableSchema contains the rowtime field. It can cover the bug path.\nIt's not clear what the purpose of this test.", "url": "https://github.com/apache/flink/pull/11204#discussion_r383664396", "createdAt": "2020-02-25T05:23:37Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-api-java/src/test/java/org/apache/flink/table/descriptors/ConnectTableDescriptorTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.descriptors;\n+\n+import org.apache.flink.table.api.DataTypes;\n+import org.apache.flink.table.api.internal.Registration;\n+import org.apache.flink.table.catalog.CatalogTableImpl;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+/**\n+ * Test for {@link ConnectTableDescriptor}.\n+ */\n+public class ConnectTableDescriptorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fe032f57c6dbe542682c2acf0a187f618b425ca"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3MjA2OQ==", "bodyText": "There is no rowtime field in tableEnv.from(\"EnrichmentSource\").getSchema. Rowtime field needs special handle in connector codes when translate select ... query.\nThis test is just for making sure CatalogTable should be same to properties.", "url": "https://github.com/apache/flink/pull/11204#discussion_r383672069", "createdAt": "2020-02-25T05:55:50Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-api-java/src/test/java/org/apache/flink/table/descriptors/ConnectTableDescriptorTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.descriptors;\n+\n+import org.apache.flink.table.api.DataTypes;\n+import org.apache.flink.table.api.internal.Registration;\n+import org.apache.flink.table.catalog.CatalogTableImpl;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+/**\n+ * Test for {@link ConnectTableDescriptor}.\n+ */\n+public class ConnectTableDescriptorTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY2NDM5Ng=="}, "originalCommit": {"oid": "9fe032f57c6dbe542682c2acf0a187f618b425ca"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3NTg5Mw==", "bodyText": "There should be a rowtime field in tableEnv.from(\"EnrichmentSource\").getSchema, because DummyTableSourceFactory in sql-client handles this.", "url": "https://github.com/apache/flink/pull/11204#discussion_r383675893", "createdAt": "2020-02-25T06:10:38Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-api-java/src/test/java/org/apache/flink/table/descriptors/ConnectTableDescriptorTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.descriptors;\n+\n+import org.apache.flink.table.api.DataTypes;\n+import org.apache.flink.table.api.internal.Registration;\n+import org.apache.flink.table.catalog.CatalogTableImpl;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+/**\n+ * Test for {@link ConnectTableDescriptor}.\n+ */\n+public class ConnectTableDescriptorTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY2NDM5Ng=="}, "originalCommit": {"oid": "9fe032f57c6dbe542682c2acf0a187f618b425ca"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY3NzU3OQ==", "bodyText": "Maybe not.\nIt is catalog table, not ConnectorCatalogTable.\nReal invoking is in StreamTableSourceScan.translateToPlan, it is hard to validate it.", "url": "https://github.com/apache/flink/pull/11204#discussion_r383677579", "createdAt": "2020-02-25T06:17:04Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-api-java/src/test/java/org/apache/flink/table/descriptors/ConnectTableDescriptorTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.descriptors;\n+\n+import org.apache.flink.table.api.DataTypes;\n+import org.apache.flink.table.api.internal.Registration;\n+import org.apache.flink.table.catalog.CatalogTableImpl;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+/**\n+ * Test for {@link ConnectTableDescriptor}.\n+ */\n+public class ConnectTableDescriptorTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY2NDM5Ng=="}, "originalCommit": {"oid": "9fe032f57c6dbe542682c2acf0a187f618b425ca"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4NDAzMA==", "bodyText": "OK, it is from SQL-CLI, it is ConnectorCatalogTable now, added test.", "url": "https://github.com/apache/flink/pull/11204#discussion_r383784030", "createdAt": "2020-02-25T10:17:33Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-api-java/src/test/java/org/apache/flink/table/descriptors/ConnectTableDescriptorTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.descriptors;\n+\n+import org.apache.flink.table.api.DataTypes;\n+import org.apache.flink.table.api.internal.Registration;\n+import org.apache.flink.table.catalog.CatalogTableImpl;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+/**\n+ * Test for {@link ConnectTableDescriptor}.\n+ */\n+public class ConnectTableDescriptorTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY2NDM5Ng=="}, "originalCommit": {"oid": "9fe032f57c6dbe542682c2acf0a187f618b425ca"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjUxODYwOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/gateway/utils/TestTableSourceFactoryBase.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMDoxNzowNVrOFuATRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMDoyMTowOVrOFuAcXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4Mzc1MQ==", "bodyText": "Why do you change this? Is it a mistake?", "url": "https://github.com/apache/flink/pull/11204#discussion_r383783751", "createdAt": "2020-02-25T10:17:05Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/gateway/utils/TestTableSourceFactoryBase.java", "diffHunk": "@@ -100,7 +100,7 @@ public TestTableSourceFactoryBase(String type, String testProperty) {\n \tpublic StreamTableSource<Row> createTableSource(TableSourceFactory.Context context) {\n \t\tTableSchema schema = context.getTable().getSchema();\n \t\tfinal DescriptorProperties params = new DescriptorProperties(true);\n-\t\tparams.putProperties(context.getTable().getProperties());\n+\t\tparams.putProperties(context.getTable().toProperties());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c80dda8bc1a4903b03cf75d3570ecb1fc8b1d68"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4NDU3MA==", "bodyText": "Yes, SchemaValidator.deriveRowtimeAttributes need properties contains TableSchema.", "url": "https://github.com/apache/flink/pull/11204#discussion_r383784570", "createdAt": "2020-02-25T10:18:34Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/gateway/utils/TestTableSourceFactoryBase.java", "diffHunk": "@@ -100,7 +100,7 @@ public TestTableSourceFactoryBase(String type, String testProperty) {\n \tpublic StreamTableSource<Row> createTableSource(TableSourceFactory.Context context) {\n \t\tTableSchema schema = context.getTable().getSchema();\n \t\tfinal DescriptorProperties params = new DescriptorProperties(true);\n-\t\tparams.putProperties(context.getTable().getProperties());\n+\t\tparams.putProperties(context.getTable().toProperties());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4Mzc1MQ=="}, "originalCommit": {"oid": "0c80dda8bc1a4903b03cf75d3570ecb1fc8b1d68"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4NTA5Mg==", "bodyText": "The class was createTableSource(properties), we should revert to that properties.", "url": "https://github.com/apache/flink/pull/11204#discussion_r383785092", "createdAt": "2020-02-25T10:19:28Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/gateway/utils/TestTableSourceFactoryBase.java", "diffHunk": "@@ -100,7 +100,7 @@ public TestTableSourceFactoryBase(String type, String testProperty) {\n \tpublic StreamTableSource<Row> createTableSource(TableSourceFactory.Context context) {\n \t\tTableSchema schema = context.getTable().getSchema();\n \t\tfinal DescriptorProperties params = new DescriptorProperties(true);\n-\t\tparams.putProperties(context.getTable().getProperties());\n+\t\tparams.putProperties(context.getTable().toProperties());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4Mzc1MQ=="}, "originalCommit": {"oid": "0c80dda8bc1a4903b03cf75d3570ecb1fc8b1d68"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4NjA3Nw==", "bodyText": "Thank you. I see.", "url": "https://github.com/apache/flink/pull/11204#discussion_r383786077", "createdAt": "2020-02-25T10:21:09Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-sql-client/src/test/java/org/apache/flink/table/client/gateway/utils/TestTableSourceFactoryBase.java", "diffHunk": "@@ -100,7 +100,7 @@ public TestTableSourceFactoryBase(String type, String testProperty) {\n \tpublic StreamTableSource<Row> createTableSource(TableSourceFactory.Context context) {\n \t\tTableSchema schema = context.getTable().getSchema();\n \t\tfinal DescriptorProperties params = new DescriptorProperties(true);\n-\t\tparams.putProperties(context.getTable().getProperties());\n+\t\tparams.putProperties(context.getTable().toProperties());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc4Mzc1MQ=="}, "originalCommit": {"oid": "0c80dda8bc1a4903b03cf75d3570ecb1fc8b1d68"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1007, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}