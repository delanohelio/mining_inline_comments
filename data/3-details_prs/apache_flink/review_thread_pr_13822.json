{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNDc3Nzc3", "number": 13822, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODoxNTozN1rOEzL6fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODoyMTozNFrOEzMDUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTA4MDI5OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODoxNTozN1rOHqQkHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1NDoxOFrOHreKYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3MzYyOQ==", "bodyText": "We should probably generalize ALIGNED_EXACTLY_ONCE_CHECKPOINT_BARRIER + RECOVERY_COMPLETION to some BLOCKING_EVENT type.", "url": "https://github.com/apache/flink/pull/13822#discussion_r514073629", "createdAt": "2020-10-29T08:15:37Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java", "diffHunk": "@@ -270,7 +271,13 @@\n \t\t * ALIGNED_EXACTLY_ONCE_CHECKPOINT_BARRIER indicates that this buffer represents a\n \t\t * serialized checkpoint barrier of aligned exactly-once checkpoint mode.\n \t\t */\n-\t\tALIGNED_EXACTLY_ONCE_CHECKPOINT_BARRIER(false, true, true, false);\n+\t\tALIGNED_EXACTLY_ONCE_CHECKPOINT_BARRIER(false, true, true, false),\n+\n+\t\t/**\n+\t\t * Indicates that this subpartition state is fully recovered (emitted).\n+\t\t * Further data can be consumed after unblocking.\n+\t\t */\n+\t\tRECOVERY_COMPLETION(false, true, true, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e23ce525a7af28103e7abd8547b2ba6c9850567"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0NDk5Mg==", "bodyText": "I'd keep these events separate as long as they mean different things.\nEven if they are treated the same way today, doesn't mean they will in the future.", "url": "https://github.com/apache/flink/pull/13822#discussion_r515344992", "createdAt": "2020-10-30T19:54:18Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java", "diffHunk": "@@ -270,7 +271,13 @@\n \t\t * ALIGNED_EXACTLY_ONCE_CHECKPOINT_BARRIER indicates that this buffer represents a\n \t\t * serialized checkpoint barrier of aligned exactly-once checkpoint mode.\n \t\t */\n-\t\tALIGNED_EXACTLY_ONCE_CHECKPOINT_BARRIER(false, true, true, false);\n+\t\tALIGNED_EXACTLY_ONCE_CHECKPOINT_BARRIER(false, true, true, false),\n+\n+\t\t/**\n+\t\t * Indicates that this subpartition state is fully recovered (emitted).\n+\t\t * Further data can be consumed after unblocking.\n+\t\t */\n+\t\tRECOVERY_COMPLETION(false, true, true, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3MzYyOQ=="}, "originalCommit": {"oid": "6e23ce525a7af28103e7abd8547b2ba6c9850567"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTA4NjkzOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/PipelinedSubpartition.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODoxNzoyOVrOHqQoLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxNzoxNDozMlrOHrouWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3NDY3MA==", "bodyText": "Why do we need that change here and not for aligned barriers?", "url": "https://github.com/apache/flink/pull/13822#discussion_r514074670", "createdAt": "2020-10-29T08:17:29Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/PipelinedSubpartition.java", "diffHunk": "@@ -263,7 +269,8 @@ BufferAndBacklog pollBuffer() {\n \n \t\t\t\tbuffer = bufferConsumer.build();\n \n-\t\t\t\tcheckState(bufferConsumer.isFinished() || buffers.size() == 1,\n+\t\t\t\tcheckState(bufferConsumer.isFinished() || buffers.size() == 1 ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e23ce525a7af28103e7abd8547b2ba6c9850567"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxNjM5Nw==", "bodyText": "Reverted this change - will fix FLINK-19907 instead.", "url": "https://github.com/apache/flink/pull/13822#discussion_r515516397", "createdAt": "2020-10-31T16:58:08Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/PipelinedSubpartition.java", "diffHunk": "@@ -263,7 +269,8 @@ BufferAndBacklog pollBuffer() {\n \n \t\t\t\tbuffer = bufferConsumer.build();\n \n-\t\t\t\tcheckState(bufferConsumer.isFinished() || buffers.size() == 1,\n+\t\t\t\tcheckState(bufferConsumer.isFinished() || buffers.size() == 1 ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3NDY3MA=="}, "originalCommit": {"oid": "6e23ce525a7af28103e7abd8547b2ba6c9850567"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxODA0Mg==", "bodyText": "And thanks for this question! \ud83d\udc4d", "url": "https://github.com/apache/flink/pull/13822#discussion_r515518042", "createdAt": "2020-10-31T17:14:32Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/partition/PipelinedSubpartition.java", "diffHunk": "@@ -263,7 +269,8 @@ BufferAndBacklog pollBuffer() {\n \n \t\t\t\tbuffer = bufferConsumer.build();\n \n-\t\t\t\tcheckState(bufferConsumer.isFinished() || buffers.size() == 1,\n+\t\t\t\tcheckState(bufferConsumer.isFinished() || buffers.size() == 1 ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3NDY3MA=="}, "originalCommit": {"oid": "6e23ce525a7af28103e7abd8547b2ba6c9850567"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTEwMjkxOnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/UpstreamRecoveryTracker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODoyMTozNFrOHqQxeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxOTo1ODo1MlrOHreSDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3NzA1MA==", "bodyText": "We should generalize it for all epochs. Not sure if we already do it in this PR or then later.", "url": "https://github.com/apache/flink/pull/13822#discussion_r514077050", "createdAt": "2020-10-29T08:21:34Z", "author": {"login": "AHeise"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/UpstreamRecoveryTracker.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.runtime.io;\n+\n+import org.apache.flink.runtime.checkpoint.channel.InputChannelInfo;\n+import org.apache.flink.runtime.io.network.partition.consumer.InputGate;\n+import org.apache.flink.util.Preconditions;\n+\n+import java.io.IOException;\n+import java.util.HashSet;\n+\n+final class UpstreamRecoveryTracker {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e23ce525a7af28103e7abd8547b2ba6c9850567"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM0Njk1OA==", "bodyText": "I'd prefer to do it later if needed.\nThis PR is already a bit disconnected from how it will be used (tearing down VCs), and the code will probably change.", "url": "https://github.com/apache/flink/pull/13822#discussion_r515346958", "createdAt": "2020-10-30T19:58:52Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/UpstreamRecoveryTracker.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.runtime.io;\n+\n+import org.apache.flink.runtime.checkpoint.channel.InputChannelInfo;\n+import org.apache.flink.runtime.io.network.partition.consumer.InputGate;\n+import org.apache.flink.util.Preconditions;\n+\n+import java.io.IOException;\n+import java.util.HashSet;\n+\n+final class UpstreamRecoveryTracker {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA3NzA1MA=="}, "originalCommit": {"oid": "6e23ce525a7af28103e7abd8547b2ba6c9850567"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4974, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}