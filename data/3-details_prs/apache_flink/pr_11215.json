{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NTg2NDA0", "number": 11215, "title": "[FLINK-16275][table-planner-blink] AggsHandlerCodeGenerator can fail \u2026", "bodyText": "\u2026with custom module\n\nWhat is the purpose of the change\nTo fix the issue of AggsHandlerCodeGenerator working with a custom module.\nCode generated by AggsHandlerCodeGenerator can fail to compile if certain functions get overridden by custom module:\nCaused by: org.codehaus.commons.compiler.CompileException: Line 20, Column 215: A method named \"getRuntimeContext\" is not declared in any enclosing class nor any supertype, nor through a static import\n\nBrief change log\n\nMake sure the generated AggsHandleFunction can get RuntimeContext properly.\nAdd test case\n\nVerifying this change\nNew test case\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? NA", "createdAt": "2020-02-25T13:35:59Z", "url": "https://github.com/apache/flink/pull/11215", "merged": true, "mergeCommit": {"oid": "68afd048fbf63898c584973023fbb9f3675c8f58"}, "closed": true, "closedAt": "2020-02-27T09:02:25Z", "author": {"login": "lirui-apache"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHyJaOgH2gAyMzc5NTg2NDA0OmVhOTcyMmVhOTA1OTA3YmRiYjk1OTYzMzU5MTE4NmE5MzVjMTY4ZjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIHKxvgH2gAyMzc5NTg2NDA0OjRjMjcyMTBkMmFkYTYyZGUyYWI3YTFhZWQxZjAwNDY5ZWRiOTZjYWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ea9722ea905907bdbb959633591186a935c168f4", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/ea9722ea905907bdbb959633591186a935c168f4", "committedDate": "2020-02-25T13:29:05Z", "message": "[FLINK-16275][table-planner-blink] AggsHandlerCodeGenerator can fail with custom module"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MTUwMjM2", "url": "https://github.com/apache/flink/pull/11215#pullrequestreview-364150236", "createdAt": "2020-02-25T13:45:47Z", "commit": {"oid": "ea9722ea905907bdbb959633591186a935c168f4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzo0NTo0N1rOFuGlOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxMzo0NzozOFrOFuGpQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4NjY1MQ==", "bodyText": "What not introduce a method getRuntimeContext in this agg handle function?", "url": "https://github.com/apache/flink/pull/11215#discussion_r383886651", "createdAt": "2020-02-25T13:45:47Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/codegen/agg/AggsHandlerCodeGenerator.scala", "diffHunk": "@@ -333,6 +333,10 @@ class AggsHandlerCodeGenerator(\n \n     val functionName = newName(name)\n \n+    // make sure we can get the RuntimeContext properly\n+    val openCode = ctx.reuseOpenCode().replaceAll(\"\\\\(getRuntimeContext\\\\(\\\\)\\\\)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea9722ea905907bdbb959633591186a935c168f4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4NzA5Mw==", "bodyText": "Move this test to OverWindowITCase.", "url": "https://github.com/apache/flink/pull/11215#discussion_r383887093", "createdAt": "2020-02-25T13:46:34Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/batch/sql/CalcITCase.scala", "diffHunk": "@@ -1244,4 +1247,40 @@ class CalcITCase extends BatchTestBase {\n       Seq(row(1), row(111), row(15), row(34), row(5), row(65), row(null))\n     )\n   }\n+\n+  @Test\n+  def testRankWithCustomModule(): Unit = {\n+    try {\n+      tEnv.unloadModule(\"core\")\n+      tEnv.loadModule(\"test-module\", new TestModule)\n+      tEnv.loadModule(\"core\", CoreModule.INSTANCE)\n+      registerCollection(\"emp\",\n+        Seq(row(\"1\", \"A\", 1), row(\"1\", \"B\", 2), row(\"2\", \"C\", 3)),\n+        new RowTypeInfo(STRING_TYPE_INFO, STRING_TYPE_INFO, INT_TYPE_INFO),\n+        \"dep,name,salary\")\n+      checkResult(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea9722ea905907bdbb959633591186a935c168f4"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4NzY4MQ==", "bodyText": "Do we need do this? Every test should be a new context in JUnit?", "url": "https://github.com/apache/flink/pull/11215#discussion_r383887681", "createdAt": "2020-02-25T13:47:38Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/batch/sql/CalcITCase.scala", "diffHunk": "@@ -1244,4 +1247,40 @@ class CalcITCase extends BatchTestBase {\n       Seq(row(1), row(111), row(15), row(34), row(5), row(65), row(null))\n     )\n   }\n+\n+  @Test\n+  def testRankWithCustomModule(): Unit = {\n+    try {\n+      tEnv.unloadModule(\"core\")\n+      tEnv.loadModule(\"test-module\", new TestModule)\n+      tEnv.loadModule(\"core\", CoreModule.INSTANCE)\n+      registerCollection(\"emp\",\n+        Seq(row(\"1\", \"A\", 1), row(\"1\", \"B\", 2), row(\"2\", \"C\", 3)),\n+        new RowTypeInfo(STRING_TYPE_INFO, STRING_TYPE_INFO, INT_TYPE_INFO),\n+        \"dep,name,salary\")\n+      checkResult(\n+        \"select dep,name,rank() over (partition by dep order by salary desc) as rnk from emp\",\n+        Seq(row(\"1\", \"A\", 2), row(\"1\", \"B\", 1), row(\"2\", \"C\", 1)))\n+    } finally {\n+      val modules = tEnv.listModules()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea9722ea905907bdbb959633591186a935c168f4"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ff1117bd2b221fc4c4761984e952e380e8946af", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/7ff1117bd2b221fc4c4761984e952e380e8946af", "committedDate": "2020-02-26T10:01:57Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a397a816cf507be5810bc6ea2f94a64583fe2ed6", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/a397a816cf507be5810bc6ea2f94a64583fe2ed6", "committedDate": "2020-02-26T10:07:00Z", "message": "revert unnecessary changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODE2ODkx", "url": "https://github.com/apache/flink/pull/11215#pullrequestreview-364816891", "createdAt": "2020-02-26T11:17:41Z", "commit": {"oid": "a397a816cf507be5810bc6ea2f94a64583fe2ed6"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMToxNzo0MVrOFuns-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMToyMToyOVrOFun0Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyOTMwNw==", "bodyText": "maybe we could improve this name: MyIsNull ?\nlike IsNullFunction or IsNullUDF or IsNullScalarFunction ?", "url": "https://github.com/apache/flink/pull/11215#discussion_r384429307", "createdAt": "2020-02-26T11:17:41Z", "author": {"login": "libenchao"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/utils/UserDefinedFunctionTestUtils.scala", "diffHunk": "@@ -377,6 +377,13 @@ object UserDefinedFunctionTestUtils {\n     override def getResultType(signature: Array[Class[_]]): TypeInformation[_] = Types.JAVA_BIG_DEC\n   }\n \n+  @SerialVersionUID(1L)\n+  object MyIsNull extends ScalarFunction {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a397a816cf507be5810bc6ea2f94a64583fe2ed6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQyOTgzOQ==", "bodyText": "isnull -> isNull ?", "url": "https://github.com/apache/flink/pull/11215#discussion_r384429839", "createdAt": "2020-02-26T11:18:42Z", "author": {"login": "libenchao"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/batch/sql/OverWindowITCase.scala", "diffHunk": "@@ -2576,3 +2594,19 @@ class CountAggFunction extends AggregateFunction[JLong, CountAccumulator] {\n \n   override def getResultType: TypeInformation[JLong] = Types.LONG\n }\n+\n+private class TestModule extends Module {\n+\n+  private val funcName = \"isnull\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a397a816cf507be5810bc6ea2f94a64583fe2ed6"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQzMDQ1Mw==", "bodyText": "Collections.singleton(funcName) ?", "url": "https://github.com/apache/flink/pull/11215#discussion_r384430453", "createdAt": "2020-02-26T11:19:58Z", "author": {"login": "libenchao"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/batch/sql/OverWindowITCase.scala", "diffHunk": "@@ -2576,3 +2594,19 @@ class CountAggFunction extends AggregateFunction[JLong, CountAccumulator] {\n \n   override def getResultType: TypeInformation[JLong] = Types.LONG\n }\n+\n+private class TestModule extends Module {\n+\n+  private val funcName = \"isnull\"\n+\n+  override def listFunctions(): util.Set[String] =\n+    new util.HashSet(Collections.singletonList(funcName))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a397a816cf507be5810bc6ea2f94a64583fe2ed6"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQzMTE3MQ==", "bodyText": "java.util already contains java.util.{Collections, Optional} ?", "url": "https://github.com/apache/flink/pull/11215#discussion_r384431171", "createdAt": "2020-02-26T11:21:29Z", "author": {"login": "libenchao"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/batch/sql/OverWindowITCase.scala", "diffHunk": "@@ -23,16 +23,20 @@ import org.apache.flink.api.java.tuple.{Tuple1 => JTuple1}\n import org.apache.flink.api.java.typeutils.{RowTypeInfo, TupleTypeInfo}\n import org.apache.flink.api.scala._\n import org.apache.flink.table.api.Types\n-import org.apache.flink.table.functions.AggregateFunction\n+import org.apache.flink.table.functions.{AggregateFunction, FunctionDefinition, ScalarFunctionDefinition}\n+import org.apache.flink.table.module.{CoreModule, Module}\n import org.apache.flink.table.planner.runtime.utils.BatchTestBase\n import org.apache.flink.table.planner.runtime.utils.BatchTestBase.row\n import org.apache.flink.table.planner.runtime.utils.TestData._\n+import org.apache.flink.table.planner.runtime.utils.UserDefinedFunctionTestUtils.MyIsNull\n import org.apache.flink.table.planner.utils.DateTimeTestUtil._\n import org.apache.flink.types.Row\n \n import org.junit.{Before, Test}\n \n import java.lang.{Iterable => JIterable, Long => JLong}\n+import java.util\n+import java.util.{Collections, Optional}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a397a816cf507be5810bc6ea2f94a64583fe2ed6"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODE5OTc1", "url": "https://github.com/apache/flink/pull/11215#pullrequestreview-364819975", "createdAt": "2020-02-26T11:23:00Z", "commit": {"oid": "a397a816cf507be5810bc6ea2f94a64583fe2ed6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODIwMjgz", "url": "https://github.com/apache/flink/pull/11215#pullrequestreview-364820283", "createdAt": "2020-02-26T11:23:29Z", "commit": {"oid": "a397a816cf507be5810bc6ea2f94a64583fe2ed6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c27210d2ada62de2ab7a1aed1f00469edb96caf", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/4c27210d2ada62de2ab7a1aed1f00469edb96caf", "committedDate": "2020-02-26T13:58:35Z", "message": "address comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4203, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}