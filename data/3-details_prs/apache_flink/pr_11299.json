{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyOTc3Njc5", "number": 11299, "title": "[FLINK-16008][table-planner][table-planner-blink] Add rules to transpose the join condition of Python Correlate node", "bodyText": "What is the purpose of the change\nThis pull request add rules to transpose the join condition of Python Correlate node\nBrief change log\n\nAdd rule CalcPythonCorrelateTransposeRule\nChange match logic in SplitPythonConditionFromCorrelateRule\n\nVerifying this change\nThis change added tests and can be verified as follows:\n\nCalcPythonCorrelateTransposeRuleTest\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)\nIf yes, how is the feature documented? (not applicable)", "createdAt": "2020-03-03T14:18:29Z", "url": "https://github.com/apache/flink/pull/11299", "merged": true, "mergeCommit": {"oid": "ae1d1b2481b4c585b7ee53f53ec44b0d9bcda3b5"}, "closed": true, "closedAt": "2020-03-13T03:07:16Z", "author": {"login": "HuangXingBo"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcM4nQSAFqTM3MzM5MTI4OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcM9aTpgH2gAyMzgyOTc3Njc5OjQwYWRhY2UxM2IwMTA5MGYyZjg2ZjMyYjQxNDFjYWFhNWFlNThjYzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMzkxMjg4", "url": "https://github.com/apache/flink/pull/11299#pullrequestreview-373391288", "createdAt": "2020-03-12T09:25:33Z", "commit": {"oid": "5ccd5a1c4800a864b045cb3bb0d89f867c382558"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOToyNTozM1rOF1WyOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTo0MzowOFrOF1XYgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5MjE1NQ==", "bodyText": "If we only support INNER, we need to also check the condition in StreamExecPythonCorrelate and throws a friendly error message to info users that currently correlate does not support conditions.\nWhat do you think?", "url": "https://github.com/apache/flink/pull/11299#discussion_r391492155", "createdAt": "2020-03-12T09:25:33Z", "author": {"login": "hequn8128"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/CalcPythonCorrelateTransposeRule.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.planner.plan.rules.logical;\n+\n+import org.apache.flink.table.planner.plan.nodes.logical.FlinkLogicalCalc;\n+import org.apache.flink.table.planner.plan.nodes.logical.FlinkLogicalCorrelate;\n+import org.apache.flink.table.planner.plan.nodes.logical.FlinkLogicalRel;\n+import org.apache.flink.table.planner.plan.nodes.logical.FlinkLogicalTableFunctionScan;\n+import org.apache.flink.table.planner.plan.rules.physical.stream.StreamExecCorrelateRule;\n+import org.apache.flink.table.planner.plan.utils.PythonUtil;\n+\n+import org.apache.calcite.plan.RelOptRule;\n+import org.apache.calcite.plan.RelOptRuleCall;\n+import org.apache.calcite.plan.RelOptUtil;\n+import org.apache.calcite.rel.core.JoinRelType;\n+import org.apache.calcite.rex.RexBuilder;\n+import org.apache.calcite.rex.RexNode;\n+import org.apache.calcite.rex.RexProgram;\n+import org.apache.calcite.rex.RexProgramBuilder;\n+import org.apache.calcite.rex.RexUtil;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Rule will transpose the conditions after the Python correlate node if the join type is inner join.\n+ */\n+public class CalcPythonCorrelateTransposeRule extends RelOptRule {\n+\n+\tpublic static final CalcPythonCorrelateTransposeRule INSTANCE =\n+\t\tnew CalcPythonCorrelateTransposeRule();\n+\n+\tprivate CalcPythonCorrelateTransposeRule() {\n+\t\tsuper(operand(FlinkLogicalCorrelate.class,\n+\t\t\toperand(FlinkLogicalRel.class, any()),\n+\t\t\toperand(FlinkLogicalCalc.class, any())),\n+\t\t\t\"CalcPythonCorrelateTransposeRule\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean matches(RelOptRuleCall call) {\n+\t\tFlinkLogicalCorrelate correlate = call.rel(0);\n+\t\tFlinkLogicalCalc right = call.rel(2);\n+\t\tJoinRelType joinType = correlate.getJoinType();\n+\t\tFlinkLogicalCalc mergedCalc = StreamExecCorrelateRule.getMergedCalc(right);\n+\t\tFlinkLogicalTableFunctionScan scan = StreamExecCorrelateRule.getTableScan(mergedCalc);\n+\t\treturn joinType == JoinRelType.INNER &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccd5a1c4800a864b045cb3bb0d89f867c382558"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5NzgyMw==", "bodyText": "Add a blank after the TableTestBase", "url": "https://github.com/apache/flink/pull/11299#discussion_r391497823", "createdAt": "2020-03-12T09:35:50Z", "author": {"login": "hequn8128"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/rules/logical/CalcPythonCorrelateTransposeRuleTest.scala", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.planner.plan.rules.logical\n+\n+import org.apache.calcite.plan.hep.HepMatchOrder\n+import org.apache.flink.api.scala._\n+import org.apache.flink.table.api.scala._\n+import org.apache.flink.table.planner.plan.nodes.FlinkConventions\n+import org.apache.flink.table.planner.plan.optimize.program._\n+import org.apache.flink.table.planner.plan.rules.FlinkStreamRuleSets\n+import org.apache.flink.table.planner.runtime.utils.JavaUserDefinedScalarFunctions.PythonScalarFunction\n+import org.apache.flink.table.planner.utils.{MockPythonTableFunction, TableTestBase}\n+import org.junit.{Before, Test}\n+\n+class CalcPythonCorrelateTransposeRuleTest extends TableTestBase{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccd5a1c4800a864b045cb3bb0d89f867c382558"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ5Nzg5NA==", "bodyText": "Add a blank after the TableTestBase", "url": "https://github.com/apache/flink/pull/11299#discussion_r391497894", "createdAt": "2020-03-12T09:35:56Z", "author": {"login": "hequn8128"}, "path": "flink-table/flink-table-planner/src/test/scala/org/apache/flink/table/plan/CalcPythonCorrelateTransposeRuleTest.scala", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.plan\n+\n+import org.apache.flink.api.scala._\n+import org.apache.flink.table.api.scala._\n+import org.apache.flink.table.runtime.utils.JavaUserDefinedScalarFunctions.PythonScalarFunction\n+import org.apache.flink.table.utils.{MockPythonTableFunction, TableTestBase}\n+import org.apache.flink.table.utils.TableTestUtil.{streamTableNode, term, unaryNode}\n+import org.junit.Test\n+\n+class CalcPythonCorrelateTransposeRuleTest extends TableTestBase{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccd5a1c4800a864b045cb3bb0d89f867c382558"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUwMTk1Mw==", "bodyText": "Check whether scan is defined? scan.isDefined() &&", "url": "https://github.com/apache/flink/pull/11299#discussion_r391501953", "createdAt": "2020-03-12T09:43:08Z", "author": {"login": "hequn8128"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/plan/rules/logical/CalcPythonCorrelateTransposeRule.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.planner.plan.rules.logical;\n+\n+import org.apache.flink.table.planner.plan.nodes.logical.FlinkLogicalCalc;\n+import org.apache.flink.table.planner.plan.nodes.logical.FlinkLogicalCorrelate;\n+import org.apache.flink.table.planner.plan.nodes.logical.FlinkLogicalRel;\n+import org.apache.flink.table.planner.plan.nodes.logical.FlinkLogicalTableFunctionScan;\n+import org.apache.flink.table.planner.plan.rules.physical.stream.StreamExecCorrelateRule;\n+import org.apache.flink.table.planner.plan.utils.PythonUtil;\n+\n+import org.apache.calcite.plan.RelOptRule;\n+import org.apache.calcite.plan.RelOptRuleCall;\n+import org.apache.calcite.plan.RelOptUtil;\n+import org.apache.calcite.rel.core.JoinRelType;\n+import org.apache.calcite.rex.RexBuilder;\n+import org.apache.calcite.rex.RexNode;\n+import org.apache.calcite.rex.RexProgram;\n+import org.apache.calcite.rex.RexProgramBuilder;\n+import org.apache.calcite.rex.RexUtil;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Rule will transpose the conditions after the Python correlate node if the join type is inner join.\n+ */\n+public class CalcPythonCorrelateTransposeRule extends RelOptRule {\n+\n+\tpublic static final CalcPythonCorrelateTransposeRule INSTANCE =\n+\t\tnew CalcPythonCorrelateTransposeRule();\n+\n+\tprivate CalcPythonCorrelateTransposeRule() {\n+\t\tsuper(operand(FlinkLogicalCorrelate.class,\n+\t\t\toperand(FlinkLogicalRel.class, any()),\n+\t\t\toperand(FlinkLogicalCalc.class, any())),\n+\t\t\t\"CalcPythonCorrelateTransposeRule\");\n+\t}\n+\n+\t@Override\n+\tpublic boolean matches(RelOptRuleCall call) {\n+\t\tFlinkLogicalCorrelate correlate = call.rel(0);\n+\t\tFlinkLogicalCalc right = call.rel(2);\n+\t\tJoinRelType joinType = correlate.getJoinType();\n+\t\tFlinkLogicalCalc mergedCalc = StreamExecCorrelateRule.getMergedCalc(right);\n+\t\tFlinkLogicalTableFunctionScan scan = StreamExecCorrelateRule.getTableScan(mergedCalc);\n+\t\treturn joinType == JoinRelType.INNER &&\n+\t\t\tPythonUtil.isPythonCall(scan.getCall()) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ccd5a1c4800a864b045cb3bb0d89f867c382558"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a29c65eff7a72716f92d288ef08dba7213c5adff", "author": {"user": {"login": "HuangXingBo", "name": null}}, "url": "https://github.com/apache/flink/commit/a29c65eff7a72716f92d288ef08dba7213c5adff", "committedDate": "2020-03-12T11:48:38Z", "message": "[FLINK-16008][table-planner][table-planner-blink] Add rules to transpose the join condition of Python Correlate node"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f67e2803fad3344e56cba748487660bbacbaf4f9", "author": {"user": {"login": "HuangXingBo", "name": null}}, "url": "https://github.com/apache/flink/commit/f67e2803fad3344e56cba748487660bbacbaf4f9", "committedDate": "2020-03-12T13:09:43Z", "message": "[FLINK-16008][table-planner][table-planner-blink] Add rules to transpose the join condition of Python Correlate node-fix-1"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ccd5a1c4800a864b045cb3bb0d89f867c382558", "author": {"user": {"login": "HuangXingBo", "name": null}}, "url": "https://github.com/apache/flink/commit/5ccd5a1c4800a864b045cb3bb0d89f867c382558", "committedDate": "2020-03-03T14:15:52Z", "message": "[FLINK-16008][table-planner][table-planner-blink] Add rules to transpose the join condition of Python Correlate node"}, "afterCommit": {"oid": "f67e2803fad3344e56cba748487660bbacbaf4f9", "author": {"user": {"login": "HuangXingBo", "name": null}}, "url": "https://github.com/apache/flink/commit/f67e2803fad3344e56cba748487660bbacbaf4f9", "committedDate": "2020-03-12T13:09:43Z", "message": "[FLINK-16008][table-planner][table-planner-blink] Add rules to transpose the join condition of Python Correlate node-fix-1"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjQ5Njg2", "url": "https://github.com/apache/flink/pull/11299#pullrequestreview-373649686", "createdAt": "2020-03-12T15:17:17Z", "commit": {"oid": "f67e2803fad3344e56cba748487660bbacbaf4f9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNToxNzoxOFrOF1jFfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNToxNzoxOFrOF1jFfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY5MzY5Mg==", "bodyText": "Put a full comma at the end of the sentence.", "url": "https://github.com/apache/flink/pull/11299#discussion_r391693692", "createdAt": "2020-03-12T15:17:18Z", "author": {"login": "hequn8128"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/nodes/physical/stream/StreamExecPythonCorrelate.scala", "diffHunk": "@@ -51,6 +52,10 @@ class StreamExecPythonCorrelate(\n     joinType)\n   with CommonPythonCorrelate {\n \n+  if (condition.isDefined) {\n+    throw new TableException(\"Currently Python correlate does not support conditions in left join\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f67e2803fad3344e56cba748487660bbacbaf4f9"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40adace13b01090f2f86f32b4141caaa5ae58cc4", "author": {"user": {"login": "HuangXingBo", "name": null}}, "url": "https://github.com/apache/flink/commit/40adace13b01090f2f86f32b4141caaa5ae58cc4", "committedDate": "2020-03-12T15:26:07Z", "message": "[FLINK-16008][table-planner][table-planner-blink] Add rules to transpose the join condition of Python Correlate node-fix-2"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3003, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}