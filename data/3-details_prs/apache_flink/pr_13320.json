{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NjUxMzA5", "number": 13320, "title": "[FLINK-19035] Remove fold from DataStream API ", "bodyText": "What is the purpose of the change\nRemoves deprecated DataStream#fold and all related classes.\nThis was voted in https://lists.apache.org/thread.html/rc1cd927939fcdce3a2dca9f509b48be0740c50b73304c2d46c6a4347%40%3Cdev.flink.apache.org%3E\nVerifying this change\nThis change is a trivial rework / code cleanup without any test coverage.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-09-03T13:55:44Z", "url": "https://github.com/apache/flink/pull/13320", "merged": true, "mergeCommit": {"oid": "899a70142925edb8e07951505f5113ef4e9e1da1"}, "closed": true, "closedAt": "2020-09-07T07:33:17Z", "author": {"login": "dawidwys"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFkgEaAFqTQ4MjYwMzcyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGRJUqgBqjM3MzQyMTMxNjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNjAzNzI0", "url": "https://github.com/apache/flink/pull/13320#pullrequestreview-482603724", "createdAt": "2020-09-04T12:18:37Z", "commit": {"oid": "a424075cc80ced3f5620b580134393213cc378a5"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjoxODozOFrOHNLWdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjozNzoxOFrOHNL5Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU3OTUxMA==", "bodyText": "nit: remove empty line and add a comment to this section that fold was dropped in 1.12", "url": "https://github.com/apache/flink/pull/13320#discussion_r483579510", "createdAt": "2020-09-04T12:18:38Z", "author": {"login": "twalthr"}, "path": "flink-streaming-scala/pom.xml", "diffHunk": "@@ -262,6 +262,22 @@ under the License.\n \t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.DataStream#iterate\\$default\\$3()</exclude>\n \t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.DataStream#assignTimestamps(org.apache.flink.streaming.api.functions.TimestampExtractor)</exclude>\n \t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.ConnectedStreams#keyBy(scala.Function1,scala.Function1,org.apache.flink.api.common.typeinfo.TypeInformation,org.apache.flink.api.common.typeinfo.TypeInformation)</exclude>\n+\n+\t\t\t\t\t\t\t<exlcude>org.apache.flink.streaming.api.scala.AllWindowedStream#apply(java.lang.Object,org.apache.flink.api.common.functions.FoldFunction,org.apache.flink.streaming.api.scala.function.AllWindowFunction,org.apache.flink.api.common.typeinfo.TypeInformation)</exlcude>\n+\t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.AllWindowedStream#apply(java.lang.Object,scala.Function2,scala.Function3,org.apache.flink.api.common.typeinfo.TypeInformation)</exclude>\n+\t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.AllWindowedStream#fold(java.lang.Object,scala.Function2,org.apache.flink.api.common.typeinfo.TypeInformation)</exclude>\n+\t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.AllWindowedStream#fold(java.lang.Object,org.apache.flink.api.common.functions.FoldFunction,org.apache.flink.streaming.api.scala.function.AllWindowFunction,org.apache.flink.api.common.typeinfo.TypeInformation,org.apache.flink.api.common.typeinfo.TypeInformation)</exclude>\n+\t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.AllWindowedStream#fold(java.lang.Object,scala.Function2,scala.Function3,org.apache.flink.api.common.typeinfo.TypeInformation,org.apache.flink.api.common.typeinfo.TypeInformation)</exclude>\n+\t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.KeyedStream#fold(java.lang.Object,org.apache.flink.api.common.functions.FoldFunction,org.apache.flink.api.common.typeinfo.TypeInformation)</exclude>\n+\t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.KeyedStream#fold(java.lang.Object,scala.Function2,org.apache.flink.api.common.typeinfo.TypeInformation)</exclude>\n+\t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.WindowedStream#apply(java.lang.Object,org.apache.flink.api.common.functions.FoldFunction,org.apache.flink.streaming.api.scala.function.WindowFunction,org.apache.flink.api.common.typeinfo.TypeInformation)</exclude>\n+\t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.WindowedStream#apply(java.lang.Object,scala.Function2,scala.Function4,org.apache.flink.api.common.typeinfo.TypeInformation)</exclude>\n+\t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.WindowedStream#fold(java.lang.Object,scala.Function2,org.apache.flink.api.common.typeinfo.TypeInformation)</exclude>\n+\t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.WindowedStream#fold(java.lang.Object,org.apache.flink.api.common.functions.FoldFunction,org.apache.flink.streaming.api.scala.function.WindowFunction,org.apache.flink.api.common.typeinfo.TypeInformation,org.apache.flink.api.common.typeinfo.TypeInformation)</exclude>\n+\t\t\t\t\t\t\t<exclude>org.apache.flink.streaming.api.scala.WindowedStream#fold(java.lang.Object,scala.Function2,scala.Function4,org.apache.flink.api.common.typeinfo.TypeInformation,org.apache.flink.api.common.typeinfo.TypeInformation)</exclude>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a424075cc80ced3f5620b580134393213cc378a5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU4NTgyNw==", "bodyText": "this comment still occurs in the file", "url": "https://github.com/apache/flink/pull/13320#discussion_r483585827", "createdAt": "2020-09-04T12:32:01Z", "author": {"login": "twalthr"}, "path": "flink-streaming-scala/src/test/scala/org/apache/flink/streaming/api/scala/AllWindowTranslationTest.scala", "diffHunk": "@@ -91,54 +91,10 @@ class AllWindowTranslationTest {\n     fail(\"exception was not thrown\")\n   }\n \n-  /**\n-    * .fold() does not support [[RichFoldFunction]], since the reduce function is used internally\n-    * in a [[org.apache.flink.api.common.state.FoldingState]].\n-    */\n-  @Test(expected = classOf[UnsupportedOperationException])\n-  def testFoldWithRichFolderFails() {\n-    val env = StreamExecutionEnvironment.getExecutionEnvironment\n-    val source = env.fromElements((\"hello\", 1), (\"hello\", 2))\n-\n-    env.setStreamTimeCharacteristic(TimeCharacteristic.ProcessingTime)\n-\n-    source\n-      .windowAll(SlidingEventTimeWindows.of(Time.seconds(1), Time.milliseconds(100)))\n-      .fold((\"\", 0), new RichFoldFunction[(String, Int), (String, Int)] {\n-        override def fold(accumulator: (String, Int), value: (String, Int)) = null\n-      })\n-\n-    fail(\"exception was not thrown\")\n-  }\n-\n   // ------------------------------------------------------------------------\n   //  merging window precondition\n   // ------------------------------------------------------------------------\n \n-  @Test\n-  def testSessionWithFoldFails() {\n-    // verify that fold does not work with merging windows\n-    val env = StreamExecutionEnvironment.getExecutionEnvironment\n-\n-    val windowedStream = env.fromElements(\"Hello\", \"Ciao\")\n-      .windowAll(EventTimeSessionWindows.withGap(Time.seconds(5)))\n-\n-    try\n-      windowedStream.fold(\"\", new FoldFunction[String, String]() {\n-        @throws[Exception]\n-        def fold(accumulator: String, value: String): String = accumulator\n-      })\n-\n-    catch {\n-      case _: UnsupportedOperationException =>\n-        // expected\n-        // use a catch to ensure that the exception is thrown by the fold", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a424075cc80ced3f5620b580134393213cc378a5"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU4NzIyMQ==", "bodyText": "update testResource() in this class", "url": "https://github.com/apache/flink/pull/13320#discussion_r483587221", "createdAt": "2020-09-04T12:34:58Z", "author": {"login": "twalthr"}, "path": "flink-streaming-scala/src/test/scala/org/apache/flink/streaming/api/scala/DataStreamTest.scala", "diffHunk": "@@ -35,10 +35,13 @@ import org.apache.flink.streaming.runtime.partitioner._\n import org.apache.flink.test.util.AbstractTestBase\n import org.apache.flink.util.Collector\n \n+import org.hamcrest.CoreMatchers.equalTo\n import org.junit.Assert._\n import org.junit.rules.ExpectedException\n import org.junit.{Rule, Test}\n \n+import java.lang\n+\n class DataStreamTest extends AbstractTestBase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a424075cc80ced3f5620b580134393213cc378a5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU4ODQxNA==", "bodyText": "this comment is does still exist in the class", "url": "https://github.com/apache/flink/pull/13320#discussion_r483588414", "createdAt": "2020-09-04T12:37:18Z", "author": {"login": "twalthr"}, "path": "flink-streaming-scala/src/test/scala/org/apache/flink/streaming/api/scala/WindowTranslationTest.scala", "diffHunk": "@@ -92,56 +93,10 @@ class WindowTranslationTest {\n     fail(\"exception was not thrown\")\n   }\n \n-  /**\n-    * .fold() does not support [[RichFoldFunction]], since the reduce function is used internally\n-    * in a [[org.apache.flink.api.common.state.FoldingState]].\n-    */\n-  @Test(expected = classOf[UnsupportedOperationException])\n-  def testFoldWithRichFolderFails() {\n-    val env = StreamExecutionEnvironment.getExecutionEnvironment\n-    val source = env.fromElements((\"hello\", 1), (\"hello\", 2))\n-\n-    env.setStreamTimeCharacteristic(TimeCharacteristic.ProcessingTime)\n-\n-    source\n-      .keyBy(0)\n-      .window(SlidingEventTimeWindows.of(Time.seconds(1), Time.milliseconds(100)))\n-      .fold((\"\", 0), new RichFoldFunction[(String, Int), (String, Int)] {\n-        override def fold(accumulator: (String, Int), value: (String, Int)) = null\n-      })\n-\n-    fail(\"exception was not thrown\")\n-  }\n-\n   // --------------------------------------------------------------------------\n   //  merging window checks\n   // --------------------------------------------------------------------------\n \n-  @Test\n-  def testSessionWithFoldFails() {\n-    // verify that fold does not work with merging windows\n-    val env = StreamExecutionEnvironment.getExecutionEnvironment\n-\n-    val windowedStream = env.fromElements(\"Hello\", \"Ciao\")\n-      .keyBy(x => x)\n-      .window(EventTimeSessionWindows.withGap(Time.seconds(5)))\n-\n-    try\n-      windowedStream.fold(\"\", new FoldFunction[String, String]() {\n-        @throws[Exception]\n-        def fold(accumulator: String, value: String): String = accumulator\n-      })\n-\n-    catch {\n-      case _: UnsupportedOperationException =>\n-        // expected\n-        // use a catch to ensure that the exception is thrown by the fold", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a424075cc80ced3f5620b580134393213cc378a5"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNzUzNjMw", "url": "https://github.com/apache/flink/pull/13320#pullrequestreview-482753630", "createdAt": "2020-09-04T15:29:44Z", "commit": {"oid": "a424075cc80ced3f5620b580134393213cc378a5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNToyOTo0NFrOHNSLFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNToyOTo0NFrOHNSLFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MTI4Nw==", "bodyText": "This and the next one should also be removed from the Chinese version. But I think I could help remove it separately after this PR.", "url": "https://github.com/apache/flink/pull/13320#discussion_r483691287", "createdAt": "2020-09-04T15:29:44Z", "author": {"login": "gaoyunhaii"}, "path": "docs/dev/stream/state/queryable_state.md", "diffHunk": "@@ -155,7 +150,7 @@ descriptor.setQueryable(\"query-name\"); // queryable state name\n </div>\n \n This variant has no limitations as to which type of state can be made queryable. This means that this can be used for \n-any `ValueState`, `ReduceState`, `ListState`, `MapState`, `AggregatingState`, and the currently deprecated `FoldingState`.\n+any `ValueState`, `ReduceState`, `ListState`, `MapState`, and `AggregatingState`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a424075cc80ced3f5620b580134393213cc378a5"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3f0df0d8ac8c8f03a897cb14ad2fbb3fff59c7b", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/e3f0df0d8ac8c8f03a897cb14ad2fbb3fff59c7b", "committedDate": "2020-09-06T16:39:01Z", "message": "[FLINK-19035] Remove fold from DataStream API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "184596b8cf59637e39c9be2df010a8fd57a802ce", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/184596b8cf59637e39c9be2df010a8fd57a802ce", "committedDate": "2020-09-06T16:39:03Z", "message": "[FLINK-19035] Remove DataStream#fold references from docs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a424075cc80ced3f5620b580134393213cc378a5", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/a424075cc80ced3f5620b580134393213cc378a5", "committedDate": "2020-09-03T07:25:46Z", "message": "[FLINK-19035] Remove DataStream#fold references from docs"}, "afterCommit": {"oid": "184596b8cf59637e39c9be2df010a8fd57a802ce", "author": {"user": {"login": "dawidwys", "name": "Dawid Wysakowicz"}}, "url": "https://github.com/apache/flink/commit/184596b8cf59637e39c9be2df010a8fd57a802ce", "committedDate": "2020-09-06T16:39:03Z", "message": "[FLINK-19035] Remove DataStream#fold references from docs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4428, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}