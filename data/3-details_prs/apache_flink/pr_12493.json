{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MTEzNzU0", "number": 12493, "title": "[FLINK-18139][checkpointing] Fixing unaligned checkpoints checks wrong channels for inflight data.", "bodyText": "What is the purpose of the change\nCheckpointBarrierUnaligner#hasInflightData was not called with input gate contextual information, such that only the same first few channels are checked during initial snapshotting of inflight data for multi-gate setups.\nBrief change log\n\nUsing InputChannelInfo in hasInflightData to get the flattened index\n\nVerifying this change\n\nAdded StreamTaskNetworkInputTest#testSnapshotWithTwoInputGates.\nVarious ITCases with sporadic data losses.\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-06-04T22:01:50Z", "url": "https://github.com/apache/flink/pull/12493", "merged": true, "mergeCommit": {"oid": "d25609d07f52ba9bac3f7bb33ce0635e255e3d9d"}, "closed": true, "closedAt": "2020-06-05T17:11:25Z", "author": {"login": "AHeise"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoKU6qgFqTQyNDk3NzIyNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoRKrRABqjM0MTA5Mzk5Mzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTc3MjI2", "url": "https://github.com/apache/flink/pull/12493#pullrequestreview-424977226", "createdAt": "2020-06-05T03:44:56Z", "commit": {"oid": "6a3c915168d43845b305e4fdaf4ec5463678a625"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0NDo1N1rOGffcjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0NDo1N1rOGffcjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3NDI1Mw==", "bodyText": "irrelevant changes should be cleanup?", "url": "https://github.com/apache/flink/pull/12493#discussion_r435674253", "createdAt": "2020-06-05T03:44:57Z", "author": {"login": "zhijiangW"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointBarrierUnaligner.java", "diffHunk": "@@ -310,16 +310,16 @@ private void notifyCheckpoint(CheckpointBarrier barrier) throws IOException {\n \t\tpublic synchronized void notifyBarrierReceived(CheckpointBarrier barrier, InputChannelInfo channelInfo) throws IOException {\n \t\t\tlong barrierId = barrier.getId();\n \n+\t\t\tint channelIndex = handler.getFlattenedChannelIndex(channelInfo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a3c915168d43845b305e4fdaf4ec5463678a625"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTc3MjU3", "url": "https://github.com/apache/flink/pull/12493#pullrequestreview-424977257", "createdAt": "2020-06-05T03:45:05Z", "commit": {"oid": "6a3c915168d43845b305e4fdaf4ec5463678a625"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0NTowNVrOGffcpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0NTowNVrOGffcpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3NDI3OA==", "bodyText": "ditto", "url": "https://github.com/apache/flink/pull/12493#discussion_r435674278", "createdAt": "2020-06-05T03:45:05Z", "author": {"login": "zhijiangW"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointBarrierUnaligner.java", "diffHunk": "@@ -310,16 +310,16 @@ private void notifyCheckpoint(CheckpointBarrier barrier) throws IOException {\n \t\tpublic synchronized void notifyBarrierReceived(CheckpointBarrier barrier, InputChannelInfo channelInfo) throws IOException {\n \t\t\tlong barrierId = barrier.getId();\n \n+\t\t\tint channelIndex = handler.getFlattenedChannelIndex(channelInfo);\n+\t\t\tLOG.error(\"{}: Received barrier from channel {} ({}) @ {}.\", handler.taskName, channelIndex, storeNewBuffers[channelIndex], barrierId);\n \t\t\tif (currentReceivedCheckpointId < barrierId) {\n \t\t\t\thandleNewCheckpoint(barrier);\n \t\t\t\thandler.executeInTaskThread(() -> handler.notifyCheckpoint(barrier), \"notifyCheckpoint\");\n \t\t\t}\n \n-\t\t\tint channelIndex = handler.getFlattenedChannelIndex(channelInfo);\n \t\t\tif (barrierId == currentReceivedCheckpointId && storeNewBuffers[channelIndex]) {\n-\t\t\t\tif (LOG.isDebugEnabled()) {\n-\t\t\t\t\tLOG.debug(\"{}: Received barrier from channel {} @ {}.\", handler.taskName, channelIndex, barrierId);\n-\t\t\t\t}\n+//\t\t\t\tif (LOG.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a3c915168d43845b305e4fdaf4ec5463678a625"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTc3NDEz", "url": "https://github.com/apache/flink/pull/12493#pullrequestreview-424977413", "createdAt": "2020-06-05T03:45:42Z", "commit": {"oid": "6a3c915168d43845b305e4fdaf4ec5463678a625"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0NTo0MlrOGffdOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzo0NTo0MlrOGffdOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3NDQyNQ==", "bodyText": "ditto", "url": "https://github.com/apache/flink/pull/12493#discussion_r435674425", "createdAt": "2020-06-05T03:45:42Z", "author": {"login": "zhijiangW"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointBarrierUnaligner.java", "diffHunk": "@@ -331,6 +331,7 @@ public synchronized void notifyBarrierReceived(CheckpointBarrier barrier, InputC\n \n \t\t@Override\n \t\tpublic synchronized void notifyBufferReceived(Buffer buffer, InputChannelInfo channelInfo) {\n+\t\t\tLOG.error(\"{}: notifyBufferReceived @ {}: {}.\", handler.taskName, channelInfo, storeNewBuffers[handler.getFlattenedChannelIndex(channelInfo)]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a3c915168d43845b305e4fdaf4ec5463678a625"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTgyNzEx", "url": "https://github.com/apache/flink/pull/12493#pullrequestreview-424982711", "createdAt": "2020-06-05T04:06:54Z", "commit": {"oid": "6a3c915168d43845b305e4fdaf4ec5463678a625"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDowNjo1NFrOGffu9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNDowNjo1NFrOGffu9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3ODk2Ng==", "bodyText": "nit: maybe such indentation formatting:\nassertEquals(\n\t\t\tArrays.asList(2, 3),\n\t\t\tchannelStateWriter.getAddedInput().get(channel2.getChannelInfo())\n\t\t\t\t.stream()\n\t\t\t\t.map(Buffer::getSize)\n\t\t\t\t.collect(Collectors.toList()));", "url": "https://github.com/apache/flink/pull/12493#discussion_r435678966", "createdAt": "2020-06-05T04:06:54Z", "author": {"login": "zhijiangW"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/StreamTaskNetworkInputTest.java", "diffHunk": "@@ -110,6 +118,69 @@ public void testNoDataProcessedAfterCheckpointBarrier() throws Exception {\n \t\tassertEquals(0, output.getNumberOfEmittedRecords());\n \t}\n \n+\t@Test\n+\tpublic void testSnapshotWithTwoInputGates() throws Exception {\n+\t\tCheckpointBarrierUnaligner unaligner = new CheckpointBarrierUnaligner(\n+\t\t\t\tnew int[]{ 1, 1 },\n+\t\t\t\tChannelStateWriter.NO_OP,\n+\t\t\t\t\"test\",\n+\t\t\t\tnew DummyCheckpointInvokable());\n+\n+\t\tSingleInputGate inputGate1 = new SingleInputGateBuilder().setSingleInputGateIndex(0).build();\n+\t\tRemoteInputChannel channel1 = InputChannelBuilder.newBuilder().buildRemoteChannel(inputGate1);\n+\t\tinputGate1.setInputChannels(channel1);\n+\t\tinputGate1.registerBufferReceivedListener(unaligner.getBufferReceivedListener().get());\n+\t\tStreamTaskNetworkInput<Long> input1 = createInput(unaligner, inputGate1);\n+\n+\t\tSingleInputGate inputGate2 = new SingleInputGateBuilder().setSingleInputGateIndex(1).build();\n+\t\tRemoteInputChannel channel2 = InputChannelBuilder.newBuilder().buildRemoteChannel(inputGate2);\n+\t\tinputGate2.setInputChannels(channel2);\n+\t\tinputGate2.registerBufferReceivedListener(unaligner.getBufferReceivedListener().get());\n+\t\tStreamTaskNetworkInput<Long> input2 = createInput(unaligner, inputGate2);\n+\n+\t\tCheckpointBarrier barrier = new CheckpointBarrier(0, 0L, CheckpointOptions.forCheckpointWithDefaultLocation());\n+\t\tchannel1.onBuffer(EventSerializer.toBuffer(barrier), 0, 0);\n+\t\tchannel1.onBuffer(BufferBuilderTestUtils.buildSomeBuffer(1), 1, 0);\n+\n+\t\t// all records on inputGate2 are now in-flight\n+\t\tchannel2.onBuffer(BufferBuilderTestUtils.buildSomeBuffer(2), 0, 0);\n+\t\tchannel2.onBuffer(BufferBuilderTestUtils.buildSomeBuffer(3), 1, 0);\n+\n+\t\t// now snapshot all inflight buffers\n+\t\tRecordingChannelStateWriter channelStateWriter = new RecordingChannelStateWriter();\n+\t\tchannelStateWriter.start(0, CheckpointOptions.forCheckpointWithDefaultLocation());\n+\t\tCompletableFuture<Void> completableFuture1 = input1.prepareSnapshot(channelStateWriter, 0);\n+\t\tCompletableFuture<Void> completableFuture2 = input2.prepareSnapshot(channelStateWriter, 0);\n+\n+\t\t// finish unaligned checkpoint on input side\n+\t\tchannel2.onBuffer(EventSerializer.toBuffer(barrier), 2, 0);\n+\n+\t\t// futures should be completed\n+\t\tcompletableFuture1.join();\n+\t\tcompletableFuture2.join();\n+\n+\t\tassertEquals(channelStateWriter.getAddedInput().get(channel1.getChannelInfo()), Collections.emptyList());\n+\t\tassertEquals(Arrays.asList(2, 3),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a3c915168d43845b305e4fdaf4ec5463678a625"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTgzMDE2", "url": "https://github.com/apache/flink/pull/12493#pullrequestreview-424983016", "createdAt": "2020-06-05T04:08:08Z", "commit": {"oid": "6a3c915168d43845b305e4fdaf4ec5463678a625"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a3c915168d43845b305e4fdaf4ec5463678a625", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/6a3c915168d43845b305e4fdaf4ec5463678a625", "committedDate": "2020-06-04T22:00:10Z", "message": "[FLINK-18139][checkpointing] Fixing unaligned checkpoints checks wrong channels for inflight data.\n\nCheckpointBarrierUnaligner#hasInflightData was not called with input gate contextual information, such that only the same first few channels are checked during initial snapshotting of inflight data for multi-gate setups."}, "afterCommit": {"oid": "4898cf7f19dcf17491c0f1d0fb67b08dc4788d24", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/4898cf7f19dcf17491c0f1d0fb67b08dc4788d24", "committedDate": "2020-06-05T11:36:40Z", "message": "[FLINK-18139][checkpointing] Fixing unaligned checkpoints checks wrong channels for inflight data.\n\nCheckpointBarrierUnaligner#hasInflightData was not called with input gate contextual information, such that only the same first few channels are checked during initial snapshotting of inflight data for multi-gate setups."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4898cf7f19dcf17491c0f1d0fb67b08dc4788d24", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/4898cf7f19dcf17491c0f1d0fb67b08dc4788d24", "committedDate": "2020-06-05T11:36:40Z", "message": "[FLINK-18139][checkpointing] Fixing unaligned checkpoints checks wrong channels for inflight data.\n\nCheckpointBarrierUnaligner#hasInflightData was not called with input gate contextual information, such that only the same first few channels are checked during initial snapshotting of inflight data for multi-gate setups."}, "afterCommit": {"oid": "6afa9f2d703cead1c7a6080c08e5a2adc46cdd52", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/6afa9f2d703cead1c7a6080c08e5a2adc46cdd52", "committedDate": "2020-06-05T11:40:14Z", "message": "[FLINK-18139][checkpointing] Fixing unaligned checkpoints checks wrong channels for inflight data.\n\nCheckpointBarrierUnaligner#hasInflightData was not called with input gate contextual information, such that only the same first few channels are checked during initial snapshotting of inflight data for multi-gate setups."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MjIzODk1", "url": "https://github.com/apache/flink/pull/12493#pullrequestreview-425223895", "createdAt": "2020-06-05T11:40:55Z", "commit": {"oid": "4898cf7f19dcf17491c0f1d0fb67b08dc4788d24"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMTo0MDo1NVrOGfrGHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMTo0MDo1NVrOGfrGHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg2NTExOQ==", "bodyText": "Ended up with splitting the line with an additional assignment.", "url": "https://github.com/apache/flink/pull/12493#discussion_r435865119", "createdAt": "2020-06-05T11:40:55Z", "author": {"login": "AHeise"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/io/StreamTaskNetworkInputTest.java", "diffHunk": "@@ -110,6 +118,69 @@ public void testNoDataProcessedAfterCheckpointBarrier() throws Exception {\n \t\tassertEquals(0, output.getNumberOfEmittedRecords());\n \t}\n \n+\t@Test\n+\tpublic void testSnapshotWithTwoInputGates() throws Exception {\n+\t\tCheckpointBarrierUnaligner unaligner = new CheckpointBarrierUnaligner(\n+\t\t\t\tnew int[]{ 1, 1 },\n+\t\t\t\tChannelStateWriter.NO_OP,\n+\t\t\t\t\"test\",\n+\t\t\t\tnew DummyCheckpointInvokable());\n+\n+\t\tSingleInputGate inputGate1 = new SingleInputGateBuilder().setSingleInputGateIndex(0).build();\n+\t\tRemoteInputChannel channel1 = InputChannelBuilder.newBuilder().buildRemoteChannel(inputGate1);\n+\t\tinputGate1.setInputChannels(channel1);\n+\t\tinputGate1.registerBufferReceivedListener(unaligner.getBufferReceivedListener().get());\n+\t\tStreamTaskNetworkInput<Long> input1 = createInput(unaligner, inputGate1);\n+\n+\t\tSingleInputGate inputGate2 = new SingleInputGateBuilder().setSingleInputGateIndex(1).build();\n+\t\tRemoteInputChannel channel2 = InputChannelBuilder.newBuilder().buildRemoteChannel(inputGate2);\n+\t\tinputGate2.setInputChannels(channel2);\n+\t\tinputGate2.registerBufferReceivedListener(unaligner.getBufferReceivedListener().get());\n+\t\tStreamTaskNetworkInput<Long> input2 = createInput(unaligner, inputGate2);\n+\n+\t\tCheckpointBarrier barrier = new CheckpointBarrier(0, 0L, CheckpointOptions.forCheckpointWithDefaultLocation());\n+\t\tchannel1.onBuffer(EventSerializer.toBuffer(barrier), 0, 0);\n+\t\tchannel1.onBuffer(BufferBuilderTestUtils.buildSomeBuffer(1), 1, 0);\n+\n+\t\t// all records on inputGate2 are now in-flight\n+\t\tchannel2.onBuffer(BufferBuilderTestUtils.buildSomeBuffer(2), 0, 0);\n+\t\tchannel2.onBuffer(BufferBuilderTestUtils.buildSomeBuffer(3), 1, 0);\n+\n+\t\t// now snapshot all inflight buffers\n+\t\tRecordingChannelStateWriter channelStateWriter = new RecordingChannelStateWriter();\n+\t\tchannelStateWriter.start(0, CheckpointOptions.forCheckpointWithDefaultLocation());\n+\t\tCompletableFuture<Void> completableFuture1 = input1.prepareSnapshot(channelStateWriter, 0);\n+\t\tCompletableFuture<Void> completableFuture2 = input2.prepareSnapshot(channelStateWriter, 0);\n+\n+\t\t// finish unaligned checkpoint on input side\n+\t\tchannel2.onBuffer(EventSerializer.toBuffer(barrier), 2, 0);\n+\n+\t\t// futures should be completed\n+\t\tcompletableFuture1.join();\n+\t\tcompletableFuture2.join();\n+\n+\t\tassertEquals(channelStateWriter.getAddedInput().get(channel1.getChannelInfo()), Collections.emptyList());\n+\t\tassertEquals(Arrays.asList(2, 3),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3ODk2Ng=="}, "originalCommit": {"oid": "6a3c915168d43845b305e4fdaf4ec5463678a625"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1973dc85708e04da3b66b511eb89c84478087dd5", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/1973dc85708e04da3b66b511eb89c84478087dd5", "committedDate": "2020-06-05T11:42:56Z", "message": "[FLINK-18139][checkpointing] Fixing unaligned checkpoints checks wrong channels for inflight data.\n\nCheckpointBarrierUnaligner#hasInflightData was not called with input gate contextual information, such that only the same first few channels are checked during initial snapshotting of inflight data for multi-gate setups."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6afa9f2d703cead1c7a6080c08e5a2adc46cdd52", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/6afa9f2d703cead1c7a6080c08e5a2adc46cdd52", "committedDate": "2020-06-05T11:40:14Z", "message": "[FLINK-18139][checkpointing] Fixing unaligned checkpoints checks wrong channels for inflight data.\n\nCheckpointBarrierUnaligner#hasInflightData was not called with input gate contextual information, such that only the same first few channels are checked during initial snapshotting of inflight data for multi-gate setups."}, "afterCommit": {"oid": "1973dc85708e04da3b66b511eb89c84478087dd5", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/1973dc85708e04da3b66b511eb89c84478087dd5", "committedDate": "2020-06-05T11:42:56Z", "message": "[FLINK-18139][checkpointing] Fixing unaligned checkpoints checks wrong channels for inflight data.\n\nCheckpointBarrierUnaligner#hasInflightData was not called with input gate contextual information, such that only the same first few channels are checked during initial snapshotting of inflight data for multi-gate setups."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4339, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}