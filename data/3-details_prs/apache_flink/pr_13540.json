{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3Njc3MjE1", "number": 13540, "title": "[FLINK-19344] Fix DispatcherResourceCleanupTest race condition", "bodyText": "What is the purpose of the change\nThis is removing a test-instability, where sometimes, the DispatcherResourceCleanupTest. testJobSubmissionUnderSameJobId() would report a DuplicateJobSubmissionException.\nThe test is initialized with a dispatcher, recovering the testing job graph. Once the TestingJobManagerRunner for this job graph has been created, the result future is completed, and a new job gets submitted.\nThe problem is that the DispatcherJob.isDuplicateJob() method might still find the job in the runningJobs list, because the cleanup from that list happens asynchronously.\nThe test instability is resolved by waiting until TestingJobManagerRunner has been closed.\nVerifying this change\nI have executed this patch 4000 times on CI, without a failure: https://dev.azure.com/rmetzger/Flink/_build/results?buildId=8421&view=results\nDoes this pull request potentially affect one of the following parts:\nThe change only affects tests.", "createdAt": "2020-10-05T08:14:05Z", "url": "https://github.com/apache/flink/pull/13540", "merged": true, "mergeCommit": {"oid": "238d94d3798a55feee0e5d86168a088b568c8b2e"}, "closed": true, "closedAt": "2020-10-07T06:17:37Z", "author": {"login": "rmetzger"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPkq5OAFqTUwMjEwMDU4OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP6AEUABqjM4NDYwNTk5MjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMTAwNTg4", "url": "https://github.com/apache/flink/pull/13540#pullrequestreview-502100588", "createdAt": "2020-10-05T14:15:06Z", "commit": {"oid": "6650579aa244c53d76237be84b861224c451b4ba"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNDoxNTowNlrOHcfCzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNDoyODowNlrOHcfpIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYzMDc5Nw==", "bodyText": "I would suggest to use a OneShotLatch.", "url": "https://github.com/apache/flink/pull/13540#discussion_r499630797", "createdAt": "2020-10-05T14:15:06Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/TestingJobManagerRunner.java", "diffHunk": "@@ -39,6 +39,8 @@\n \n \tprivate final CompletableFuture<ArchivedExecutionGraph> resultFuture;\n \n+\tprivate final CompletableFuture<Void> closeAsyncCalledFuture = new CompletableFuture<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6650579aa244c53d76237be84b861224c451b4ba"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYzNjg3MA==", "bodyText": "I don't fully understand why this additional synchronization step is necessary. If I am not mistaken, then testingJobManagerRunner.completeResultFutureExceptionally won't trigger Dispatcher.jobNotFinished directly but at least it will enqueue the RunAsync message which will run this task into the mailbox of the Dispatcher. dispatcherGateway.submitJob should do the same just that the submit message is enqueued after the RunAsync message.\nCould you show me an execution order in which the submitJob RPC call is executed before the handleAsync (https://github.com/apache/flink/blob/master/flink-runtime/src/main/java/org/apache/flink/runtime/dispatcher/Dispatcher.java#L374)?\nCould you reproduce the problem locally?", "url": "https://github.com/apache/flink/pull/13540#discussion_r499636870", "createdAt": "2020-10-05T14:23:21Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/dispatcher/DispatcherResourceCleanupTest.java", "diffHunk": "@@ -350,6 +350,10 @@ public void testJobSubmissionUnderSameJobId() throws Exception {\n \t\tfinal TestingJobManagerRunner testingJobManagerRunner = jobManagerRunnerFactory.takeCreatedJobManagerRunner();\n \t\ttestingJobManagerRunner.completeResultFutureExceptionally(new JobNotFinishedException(jobId));\n \n+\t\t// wait until termination JobManagerRunner closeAsync has been called.\n+\t\t// this is necessary to avoid race conditions with completion of the 1st job and the submission of the 2nd job (DuplicateJobSubmissionException).\n+\t\ttestingJobManagerRunner.getCloseAsyncCalledFuture().get();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6650579aa244c53d76237be84b861224c451b4ba"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY0MDYxMA==", "bodyText": "I agree that relying on the fact that the testing main thread will enqueue the handleAsync payload before the submitJob is not a safe assumption. Hence, the fix should be fine. Still I would like to understand what exactly is going wrong here.", "url": "https://github.com/apache/flink/pull/13540#discussion_r499640610", "createdAt": "2020-10-05T14:28:06Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/dispatcher/DispatcherResourceCleanupTest.java", "diffHunk": "@@ -350,6 +350,10 @@ public void testJobSubmissionUnderSameJobId() throws Exception {\n \t\tfinal TestingJobManagerRunner testingJobManagerRunner = jobManagerRunnerFactory.takeCreatedJobManagerRunner();\n \t\ttestingJobManagerRunner.completeResultFutureExceptionally(new JobNotFinishedException(jobId));\n \n+\t\t// wait until termination JobManagerRunner closeAsync has been called.\n+\t\t// this is necessary to avoid race conditions with completion of the 1st job and the submission of the 2nd job (DuplicateJobSubmissionException).\n+\t\ttestingJobManagerRunner.getCloseAsyncCalledFuture().get();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYzNjg3MA=="}, "originalCommit": {"oid": "6650579aa244c53d76237be84b861224c451b4ba"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyOTYwNDk1", "url": "https://github.com/apache/flink/pull/13540#pullrequestreview-502960495", "createdAt": "2020-10-06T13:29:31Z", "commit": {"oid": "6650579aa244c53d76237be84b861224c451b4ba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cee7879a71c349715ea5ab714c9c21dc46d211c", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/7cee7879a71c349715ea5ab714c9c21dc46d211c", "committedDate": "2020-10-06T15:15:25Z", "message": "[FLINK-19344] Fix dispatcher cleanup test race condition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8842d1927613cdcd09f4e6c671c9cb1dc671269e", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/8842d1927613cdcd09f4e6c671c9cb1dc671269e", "committedDate": "2020-10-06T15:20:18Z", "message": "address PR comments: use OneShotLatch"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6650579aa244c53d76237be84b861224c451b4ba", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/6650579aa244c53d76237be84b861224c451b4ba", "committedDate": "2020-09-29T12:28:24Z", "message": "[FLINK-19344] Fix dispatcher cleanup test race condition"}, "afterCommit": {"oid": "8842d1927613cdcd09f4e6c671c9cb1dc671269e", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/8842d1927613cdcd09f4e6c671c9cb1dc671269e", "committedDate": "2020-10-06T15:20:18Z", "message": "address PR comments: use OneShotLatch"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3695, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}