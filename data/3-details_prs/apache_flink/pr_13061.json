{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMDk5MjAx", "number": 13061, "title": "[FLINK-18764][python] Add DataStream class and support from_collectio\u2026", "bodyText": "What is the purpose of the change\nIntroduced a new class named DataStream including its common interfaces. And support to get a DataStream through StreamExecutionEnvironment.from_collection().\nBrief change log\n\nadd a new python module named DataStream.\nsupport to get a DataStream through StreamExecutionEnvironment.from_collection()\n\nVerifying this change\nThis change is verified by the test cases in test_stream_execution_environment.py\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): ( no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes)\nIf yes, how is the feature documented? ( not documented)", "createdAt": "2020-08-05T02:01:41Z", "url": "https://github.com/apache/flink/pull/13061", "merged": true, "mergeCommit": {"oid": "c966182ee051e4f21d8490a19f357abe86952af2"}, "closed": true, "closedAt": "2020-08-05T07:49:57Z", "author": {"login": "shuiqiangchen"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7xVJyAH2gAyNDYzMDk5MjAxOjhjY2M0YmFkMTdkNTY4MDU4NDQ2YWQ2ODE2YTZkMTgxZjA5MGVjZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc70DpwAH2gAyNDYzMDk5MjAxOjM2OGQ4MjIyZDE5Y2UyN2QzODY3NzQ3Y2FkNzI3ZGVmMGFlMzVkYTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8ccc4bad17d568058446ad6816a6d181f090ecf0", "author": {"user": {"login": "shuiqiangchen", "name": "Shuiqiang Chen"}}, "url": "https://github.com/apache/flink/commit/8ccc4bad17d568058446ad6816a6d181f090ecf0", "committedDate": "2020-08-05T01:56:04Z", "message": "[FLINK-18764][python] Add DataStream class and support from_collection() in StreamExecutionEnvironment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMjkzNjU2", "url": "https://github.com/apache/flink/pull/13061#pullrequestreview-461293656", "createdAt": "2020-08-05T02:15:38Z", "commit": {"oid": "8ccc4bad17d568058446ad6816a6d181f090ecf0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMjoxNTozOVrOG73tBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMjo0Mzo1M1rOG74Jow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzMTgxNA==", "bodyText": "Please be careful about these unnecessary changes.", "url": "https://github.com/apache/flink/pull/13061#discussion_r465431814", "createdAt": "2020-08-05T02:15:39Z", "author": {"login": "hequn8128"}, "path": "flink-python/pyflink/datastream/tests/test_stream_execution_environment.py", "diffHunk": "@@ -22,9 +22,12 @@\n \n import unittest\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ccc4bad17d568058446ad6816a6d181f090ecf0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzNDgyNQ==", "bodyText": "There are some problems with the design:\n\nwe need to pass java datastream object explicitly which should be avoided.\nwe need to specify True false manually. I think we can infer the true false from the input datastream, i.e., set true when output_type is PickledBytesTypeInfo.\n\nThe code may looks like:\ncollect_util = DataStreamCollectUtil()\ncollect_util.collect(ds)\nresults = collect_util.results()", "url": "https://github.com/apache/flink/pull/13061#discussion_r465434825", "createdAt": "2020-08-05T02:27:28Z", "author": {"login": "hequn8128"}, "path": "flink-python/pyflink/datastream/tests/test_stream_execution_environment.py", "diffHunk": "@@ -211,3 +214,31 @@ def test_execute(self):\n         self.assertEqual(len(execution_result.get_all_accumulator_results()), 0)\n         self.assertIsNone(execution_result.get_accumulator_result('accumulator'))\n         self.assertIsNotNone(str(execution_result))\n+\n+    def test_from_collection_without_data_types(self):\n+        ds = self.env.from_collection([(1, 'Hi', 'Hello'), (2, 'Hello', 'Hi')])\n+        test_sink = DataStreamTestCollectSink(True)\n+        ds._j_data_stream.addSink(test_sink._j_data_stream_test_collect_sink)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ccc4bad17d568058446ad6816a6d181f090ecf0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzNTM4NQ==", "bodyText": "Refactor the class according to the comments above.", "url": "https://github.com/apache/flink/pull/13061#discussion_r465435385", "createdAt": "2020-08-05T02:29:40Z", "author": {"login": "hequn8128"}, "path": "flink-python/pyflink/datastream/tests/test_util.py", "diffHunk": "@@ -0,0 +1,45 @@\n+################################################################################\n+#  Licensed to the Apache Software Foundation (ASF) under one\n+#  or more contributor license agreements.  See the NOTICE file\n+#  distributed with this work for additional information\n+#  regarding copyright ownership.  The ASF licenses this file\n+#  to you under the Apache License, Version 2.0 (the\n+#  \"License\"); you may not use this file except in compliance\n+#  with the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+# limitations under the License.\n+################################################################################\n+\n+import pickle\n+\n+from pyflink.java_gateway import get_gateway\n+\n+\n+class DataStreamTestCollectSink(object):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ccc4bad17d568058446ad6816a6d181f090ecf0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQzOTEzOQ==", "bodyText": "Should also add tests to verify these methods.", "url": "https://github.com/apache/flink/pull/13061#discussion_r465439139", "createdAt": "2020-08-05T02:43:53Z", "author": {"login": "hequn8128"}, "path": "flink-python/pyflink/datastream/data_stream.py", "diffHunk": "@@ -0,0 +1,162 @@\n+################################################################################\n+#  Licensed to the Apache Software Foundation (ASF) under one\n+#  or more contributor license agreements.  See the NOTICE file\n+#  distributed with this work for additional information\n+#  regarding copyright ownership.  The ASF licenses this file\n+#  to you under the Apache License, Version 2.0 (the\n+#  \"License\"); you may not use this file except in compliance\n+#  with the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#  Unless required by applicable law or agreed to in writing, software\n+#  distributed under the License is distributed on an \"AS IS\" BASIS,\n+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#  See the License for the specific language governing permissions and\n+# limitations under the License.\n+################################################################################\n+from pyflink.common import typeinfo, ExecutionConfig\n+from pyflink.common.typeinfo import TypeInformation\n+\n+\n+class DataStream(object):\n+    \"\"\"\n+    A DataStream represents a stream of elements of the same type. A DataStream can be transformed\n+    into another DataStream by applying a transformation as for example:\n+    ::\n+        >>> DataStream.map(MapFunctionImpl())\n+        >>> DataStream.filter(FilterFunctionImpl())\n+    \"\"\"\n+\n+    def __init__(self, j_data_stream):\n+        self._j_data_stream = j_data_stream\n+\n+    def get_name(self) -> str:\n+        \"\"\"\n+        Gets the name of the current data stream. This name is used by the visualization and logging\n+        during runtime.\n+\n+        :return: Name of the stream.\n+        \"\"\"\n+        return self._j_data_stream.getName()\n+\n+    def name(self, name: str):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ccc4bad17d568058446ad6816a6d181f090ecf0"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "368d8222d19ce27d3867747cad727def0ae35da1", "author": {"user": {"login": "shuiqiangchen", "name": "Shuiqiang Chen"}}, "url": "https://github.com/apache/flink/commit/368d8222d19ce27d3867747cad727def0ae35da1", "committedDate": "2020-08-05T05:06:40Z", "message": "- refactor the test result collect util, add more tests for DataStream."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4952, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}