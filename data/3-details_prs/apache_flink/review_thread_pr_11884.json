{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3ODc4MjYz", "number": 11884, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNTowODo0MlrOD1Uvsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNToxNDozMlrOD1U9Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjQxMDEwOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/catalog/FunctionCatalog.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNTowODo0M1rOGKtNJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMjo1NTo1MVrOGLEH6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg3OTU5MQ==", "bodyText": "Could you explain the aim of this change? It seems to me there is no difference between the changed logic and the original logic.", "url": "https://github.com/apache/flink/pull/11884#discussion_r413879591", "createdAt": "2020-04-23T15:08:43Z", "author": {"login": "dianfu"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/catalog/FunctionCatalog.java", "diffHunk": "@@ -194,22 +194,32 @@ public void registerCatalogFunction(\n \t\t\tUnresolvedIdentifier unresolvedIdentifier,\n \t\t\tClass<? extends UserDefinedFunction> functionClass,\n \t\t\tboolean ignoreIfExists) {\n-\t\tfinal ObjectIdentifier identifier = catalogManager.qualifyIdentifier(unresolvedIdentifier);\n-\t\tfinal ObjectIdentifier normalizedIdentifier = FunctionIdentifier.normalizeObjectIdentifier(identifier);\n \n \t\ttry {\n \t\t\tUserDefinedFunctionHelper.validateClass(functionClass);\n \t\t} catch (Throwable t) {\n \t\t\tthrow new ValidationException(\n \t\t\t\tString.format(\n \t\t\t\t\t\"Could not register catalog function '%s' due to implementation errors.\",\n-\t\t\t\t\tidentifier.asSummaryString()),\n+\t\t\t\t\tcatalogManager.qualifyIdentifier(unresolvedIdentifier).asSummaryString()),\n \t\t\t\tt);\n \t\t}\n \n-\t\tfinal Catalog catalog = catalogManager.getCatalog(normalizedIdentifier.getCatalogName())\n-\t\t\t.orElseThrow(IllegalStateException::new);\n-\t\tfinal ObjectPath path = identifier.toObjectPath();\n+\t\tfinal CatalogFunction catalogFunction = new CatalogFunctionImpl(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecd663181bfe20940c7c2ff311100f9007316392"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NTA4MQ==", "bodyText": "The initial reason of this change is provide an approach in FunctionCatalog to register Python CatalogFunction. But it seems not necessary now because the upper layer accesses the Catalog object directly.", "url": "https://github.com/apache/flink/pull/11884#discussion_r414255081", "createdAt": "2020-04-24T02:55:51Z", "author": {"login": "WeiZhong94"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/catalog/FunctionCatalog.java", "diffHunk": "@@ -194,22 +194,32 @@ public void registerCatalogFunction(\n \t\t\tUnresolvedIdentifier unresolvedIdentifier,\n \t\t\tClass<? extends UserDefinedFunction> functionClass,\n \t\t\tboolean ignoreIfExists) {\n-\t\tfinal ObjectIdentifier identifier = catalogManager.qualifyIdentifier(unresolvedIdentifier);\n-\t\tfinal ObjectIdentifier normalizedIdentifier = FunctionIdentifier.normalizeObjectIdentifier(identifier);\n \n \t\ttry {\n \t\t\tUserDefinedFunctionHelper.validateClass(functionClass);\n \t\t} catch (Throwable t) {\n \t\t\tthrow new ValidationException(\n \t\t\t\tString.format(\n \t\t\t\t\t\"Could not register catalog function '%s' due to implementation errors.\",\n-\t\t\t\t\tidentifier.asSummaryString()),\n+\t\t\t\t\tcatalogManager.qualifyIdentifier(unresolvedIdentifier).asSummaryString()),\n \t\t\t\tt);\n \t\t}\n \n-\t\tfinal Catalog catalog = catalogManager.getCatalog(normalizedIdentifier.getCatalogName())\n-\t\t\t.orElseThrow(IllegalStateException::new);\n-\t\tfinal ObjectPath path = identifier.toObjectPath();\n+\t\tfinal CatalogFunction catalogFunction = new CatalogFunctionImpl(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg3OTU5MQ=="}, "originalCommit": {"oid": "ecd663181bfe20940c7c2ff311100f9007316392"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjQ0NDUxOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/catalog/CatalogFunctionImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNToxNDozMlrOGKthqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMjo1Mjo1MVrOGLEEeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg4NDg0Mg==", "bodyText": "What's the aim of this change?", "url": "https://github.com/apache/flink/pull/11884#discussion_r413884842", "createdAt": "2020-04-23T15:14:32Z", "author": {"login": "dianfu"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/catalog/CatalogFunctionImpl.java", "diffHunk": "@@ -67,6 +67,9 @@ public CatalogFunction copy() {\n \n \t@Override\n \tpublic boolean isGeneric() {\n+\t\tif (functionLanguage == FunctionLanguage.PYTHON) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecd663181bfe20940c7c2ff311100f9007316392"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NDIwMQ==", "bodyText": "Currently the Python UDF is always generic and can not be loaded via Class.forName. So just return true if the CatalogFunction is a Python UDF.", "url": "https://github.com/apache/flink/pull/11884#discussion_r414254201", "createdAt": "2020-04-24T02:52:51Z", "author": {"login": "WeiZhong94"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/catalog/CatalogFunctionImpl.java", "diffHunk": "@@ -67,6 +67,9 @@ public CatalogFunction copy() {\n \n \t@Override\n \tpublic boolean isGeneric() {\n+\t\tif (functionLanguage == FunctionLanguage.PYTHON) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg4NDg0Mg=="}, "originalCommit": {"oid": "ecd663181bfe20940c7c2ff311100f9007316392"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1591, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}