{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MTM2NDkw", "number": 12679, "title": "[FLINK-18310][metrics] Properly handle interval parsing errors", "bodyText": "Changes the reporter interval parsing to use the TimeUtils instead, which should make it more consistent with other time-based options . This also makes the parsing of both components an atomic operation.", "createdAt": "2020-06-16T10:57:31Z", "url": "https://github.com/apache/flink/pull/12679", "merged": true, "mergeCommit": {"oid": "476a8ba72156d708b4132c5b6e75b750fdfd5b1f"}, "closed": true, "closedAt": "2020-06-18T08:06:44Z", "author": {"login": "zentol"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcr3E8KAFqTQzMTYyMzM1MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsZ3GxABqjM0NTY4OTY2NzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNjIzMzUx", "url": "https://github.com/apache/flink/pull/12679#pullrequestreview-431623351", "createdAt": "2020-06-16T15:21:57Z", "commit": {"oid": "0170d15e5356c3c566d18fd2e530c951a4a1e5cb"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNToyMTo1N1rOGkgsHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNTozNDo0M1rOGkhROQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkzNzUwMA==", "bodyText": "Although, it is not very probable but possible test instability if the worker hangs for more than 10 sec.\nIn general, it would be nice to add a manual Clock to ManuallyTriggeredScheduledExecutor and inject it into MetricRegistryImpl constructor but this is an extra effort of course. Maybe a mocking executor would be easier.", "url": "https://github.com/apache/flink/pull/12679#discussion_r440937500", "createdAt": "2020-06-16T15:21:57Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricRegistryImplTest.java", "diffHunk": "@@ -161,6 +161,26 @@ public void testReporterScheduling() throws Exception {\n \t\tregistry.shutdown().get();\n \t}\n \n+\t@Test\n+\tpublic void testReporterIntervalParsingErrorDoesNotResultInPartialApplication() throws Exception {\n+\t\tTestReporter3.reportCount = 0;\n+\n+\t\tMetricConfig config = new MetricConfig();\n+\t\tconfig.setProperty(ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, \"1 UNICORN\");\n+\n+\t\tMetricRegistryImpl registry = new MetricRegistryImpl(\n+\t\t\tMetricRegistryConfiguration.defaultMetricRegistryConfiguration(),\n+\t\t\tCollections.singletonList(ReporterSetup.forReporter(\"test\", config, new TestReporter3())));\n+\t\ttry {\n+\t\t\t// in a prior implementation the time amount was applied even if the time unit was invalid\n+\t\t\t// in this case this would imply using 1 SECOND as the interval (seconds is the default)\n+\t\t\tThread.sleep(2000);\n+\t\t\tAssert.assertEquals(0, TestReporter3.reportCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0170d15e5356c3c566d18fd2e530c951a4a1e5cb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0MTM4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tconfig.setProperty(ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, \"1 UNICORN\");\n          \n          \n            \n                    long defaultIntervalMillis = MetricOptions.REPORTER_INTERVAL.defaultValue().toMillis();\n          \n          \n            \n                    long waitMillis = defaultIntervalMillis / 5;\n          \n          \n            \n                    long customMalformedIntervalSec =  defaultIntervalMillis / 10 / 1000;\n          \n          \n            \n            \t\tconfig.setProperty(ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, customMalformedIntervalSec + \" UNICORN\");", "url": "https://github.com/apache/flink/pull/12679#discussion_r440941389", "createdAt": "2020-06-16T15:27:11Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricRegistryImplTest.java", "diffHunk": "@@ -161,6 +161,26 @@ public void testReporterScheduling() throws Exception {\n \t\tregistry.shutdown().get();\n \t}\n \n+\t@Test\n+\tpublic void testReporterIntervalParsingErrorDoesNotResultInPartialApplication() throws Exception {\n+\t\tTestReporter3.reportCount = 0;\n+\n+\t\tMetricConfig config = new MetricConfig();\n+\t\tconfig.setProperty(ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, \"1 UNICORN\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0170d15e5356c3c566d18fd2e530c951a4a1e5cb"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0MTQzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tThread.sleep(2000);\n          \n          \n            \n            \t\t\tThread.sleep(waitMillis);", "url": "https://github.com/apache/flink/pull/12679#discussion_r440941431", "createdAt": "2020-06-16T15:27:14Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricRegistryImplTest.java", "diffHunk": "@@ -161,6 +161,26 @@ public void testReporterScheduling() throws Exception {\n \t\tregistry.shutdown().get();\n \t}\n \n+\t@Test\n+\tpublic void testReporterIntervalParsingErrorDoesNotResultInPartialApplication() throws Exception {\n+\t\tTestReporter3.reportCount = 0;\n+\n+\t\tMetricConfig config = new MetricConfig();\n+\t\tconfig.setProperty(ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, \"1 UNICORN\");\n+\n+\t\tMetricRegistryImpl registry = new MetricRegistryImpl(\n+\t\t\tMetricRegistryConfiguration.defaultMetricRegistryConfiguration(),\n+\t\t\tCollections.singletonList(ReporterSetup.forReporter(\"test\", config, new TestReporter3())));\n+\t\ttry {\n+\t\t\t// in a prior implementation the time amount was applied even if the time unit was invalid\n+\t\t\t// in this case this would imply using 1 SECOND as the interval (seconds is the default)\n+\t\t\tThread.sleep(2000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0170d15e5356c3c566d18fd2e530c951a4a1e5cb"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0MjM1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpublic void testReporterIntervalParsingErrorDoesNotResultInPartialApplication() throws Exception {\n          \n          \n            \n            \tpublic void testReporterIntervalParsingErrorFallbacksToDefaultValue() throws Exception {", "url": "https://github.com/apache/flink/pull/12679#discussion_r440942354", "createdAt": "2020-06-16T15:28:26Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricRegistryImplTest.java", "diffHunk": "@@ -161,6 +161,26 @@ public void testReporterScheduling() throws Exception {\n \t\tregistry.shutdown().get();\n \t}\n \n+\t@Test\n+\tpublic void testReporterIntervalParsingErrorDoesNotResultInPartialApplication() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0170d15e5356c3c566d18fd2e530c951a4a1e5cb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0NDM5Mg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/flink/pull/12679#discussion_r440944392", "createdAt": "2020-06-16T15:31:08Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/MetricRegistryImpl.java", "diffHunk": "@@ -139,10 +138,10 @@ public MetricRegistryImpl(MetricRegistryConfiguration config, Collection<Reporte\n \t\t\t\t\tfinal String className = reporterInstance.getClass().getName();\n \n \t\t\t\t\tif (reporterInstance instanceof Scheduled) {\n-\t\t\t\t\t\tLOG.info(\"Periodically reporting metrics in intervals of {} {} for reporter {} of type {}.\", period, timeunit.name(), namedReporter, className);\n+\t\t\t\t\t\tLOG.info(\"Periodically reporting metrics in intervals of {} for reporter {} of type {}.\", TimeUtils.formatWithHighestUnit(period), namedReporter, className);\n \n \t\t\t\t\t\texecutor.scheduleWithFixedDelay(\n-\t\t\t\t\t\t\t\tnew MetricRegistryImpl.ReporterTask((Scheduled) reporterInstance), period, period, timeunit);\n+\t\t\t\t\t\t\t\tnew MetricRegistryImpl.ReporterTask((Scheduled) reporterInstance), period.toMillis(), period.toMillis(), TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0170d15e5356c3c566d18fd2e530c951a4a1e5cb"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0NTk4NQ==", "bodyText": "nit: imo it would be nice to factor out period parsing into a method and use it in the if (reporterInstance instanceof Scheduled) where it is actually needed.", "url": "https://github.com/apache/flink/pull/12679#discussion_r440945985", "createdAt": "2020-06-16T15:33:18Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/MetricRegistryImpl.java", "diffHunk": "@@ -119,14 +121,11 @@ public MetricRegistryImpl(MetricRegistryConfiguration config, Collection<Reporte\n \n \t\t\t\ttry {\n \t\t\t\t\tOptional<String> configuredPeriod = reporterSetup.getIntervalSettings();\n-\t\t\t\t\tTimeUnit timeunit = TimeUnit.SECONDS;\n-\t\t\t\t\tlong period = MetricOptions.REPORTER_INTERVAL.defaultValue().getSeconds();\n+\t\t\t\t\tDuration period = MetricOptions.REPORTER_INTERVAL.defaultValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0170d15e5356c3c566d18fd2e530c951a4a1e5cb"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0NzAwMQ==", "bodyText": "or at least explain a bit more the magic numbers in comments", "url": "https://github.com/apache/flink/pull/12679#discussion_r440947001", "createdAt": "2020-06-16T15:34:43Z", "author": {"login": "azagrebin"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricRegistryImplTest.java", "diffHunk": "@@ -161,6 +161,26 @@ public void testReporterScheduling() throws Exception {\n \t\tregistry.shutdown().get();\n \t}\n \n+\t@Test\n+\tpublic void testReporterIntervalParsingErrorDoesNotResultInPartialApplication() throws Exception {\n+\t\tTestReporter3.reportCount = 0;\n+\n+\t\tMetricConfig config = new MetricConfig();\n+\t\tconfig.setProperty(ConfigConstants.METRICS_REPORTER_INTERVAL_SUFFIX, \"1 UNICORN\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk0MTM4OQ=="}, "originalCommit": {"oid": "0170d15e5356c3c566d18fd2e530c951a4a1e5cb"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNDExMjkx", "url": "https://github.com/apache/flink/pull/12679#pullrequestreview-432411291", "createdAt": "2020-06-17T13:39:54Z", "commit": {"oid": "718b39d079aa4005e551a2561d8b3b14e7dcab2f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0eea6031d1a68968a2ef5a580eeba45724b4a24", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/d0eea6031d1a68968a2ef5a580eeba45724b4a24", "committedDate": "2020-06-18T08:06:23Z", "message": "[FLINK-18310][metrics] Properly handle interval parsing errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc365c48ddbd146a976d6fe21c9de9cdef7a4d36", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/dc365c48ddbd146a976d6fe21c9de9cdef7a4d36", "committedDate": "2020-06-18T08:06:23Z", "message": "[hotfix][metrics] Only parse reporter interval if required"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "718b39d079aa4005e551a2561d8b3b14e7dcab2f", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/718b39d079aa4005e551a2561d8b3b14e7dcab2f", "committedDate": "2020-06-17T12:15:10Z", "message": "[hotfix][metrics] Only parse reporter interval if required"}, "afterCommit": {"oid": "dc365c48ddbd146a976d6fe21c9de9cdef7a4d36", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/dc365c48ddbd146a976d6fe21c9de9cdef7a4d36", "committedDate": "2020-06-18T08:06:23Z", "message": "[hotfix][metrics] Only parse reporter interval if required"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3577, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}