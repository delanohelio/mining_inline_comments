{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4Nzc5Nzc3", "number": 13175, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMjoyMzoxNlrOEZ89yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwODozNjoxOVrOEaaDhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NjQ4NzEzOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMjoyMzoxNlrOHDE3Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMzo0Mzo0N1rOHDoZmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk4NzQxOA==", "bodyText": "I don't really see how @NicoK 's suggestion makes it clearer that it could also be a savepoint.\nMy suggestion would be to encode the type checkpoint/savepoint into CompletedCheckpoint#toString and just use: LOG.info(\"Restoring job {} from  {}.\", job, latest);.\nThen the full message would be\n8004 [flink-akka.actor.default-dispatcher-3] INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator [] - Restoring job 36681198e38a2c91932eb131f47e3641 from Checkpoint 1 @ 1597663438566 for 36681198e38a2c91932eb131f47e3641 located at file:/var/folders/dm/5xn_h6n9135dwy4j27sr65zh0000gp/T/junit492898918775365121/junit2392379173263601046/checkpoints/36681198e38a2c91932eb131f47e3641/chk-1.\n\ninstead of\n8004 [flink-akka.actor.default-dispatcher-3] INFO org.apache.flink.runtime.checkpoint.CheckpointCoordinator [] - Restoring job 36681198e38a2c91932eb131f47e3641 from checkpoint: Checkpoint 1 @ 1597663438566 for 36681198e38a2c91932eb131f47e3641 located at file:/var/folders/dm/5xn_h6n9135dwy4j27sr65zh0000gp/T/junit492898918775365121/junit2392379173263601046/checkpoints/36681198e38a2c91932eb131f47e3641/chk-1.", "url": "https://github.com/apache/flink/pull/13175#discussion_r472987418", "createdAt": "2020-08-19T12:23:16Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java", "diffHunk": "@@ -1293,7 +1293,7 @@ private boolean restoreLatestCheckpointedStateInternal(\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\tLOG.info(\"Restoring job {} from latest valid checkpoint: {}.\", job, latest);\n+\t\t\tLOG.info(\"Restoring job {} from checkpoint: {}.\", job, latest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc43ac38a2161bfd6c005782c08d2c70cc47e43"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2OTY5MA==", "bodyText": "That's a good idea!", "url": "https://github.com/apache/flink/pull/13175#discussion_r473569690", "createdAt": "2020-08-20T03:43:47Z", "author": {"login": "curcur"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java", "diffHunk": "@@ -1293,7 +1293,7 @@ private boolean restoreLatestCheckpointedStateInternal(\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\tLOG.info(\"Restoring job {} from latest valid checkpoint: {}.\", job, latest);\n+\t\t\tLOG.info(\"Restoring job {} from checkpoint: {}.\", job, latest);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk4NzQxOA=="}, "originalCommit": {"oid": "0cc43ac38a2161bfd6c005782c08d2c70cc47e43"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MTI1MzE2OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CompletedCheckpoint.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwODozNjoxOVrOHD0ZQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNjo1NzozNFrOHE0gzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc2NjIwOQ==", "bodyText": "Currently that would display:\n\"CHECKPOINT\"\n\"SAVEPOINT\"\n\"SYNC_SAVEPOINT\"\nI'm proposing to translate them into just \"Checkpoint\" and \"Savepoint\" to reduce the technicality. However, no strong feelings, so you can also convince me that it's better to leave as is.", "url": "https://github.com/apache/flink/pull/13175#discussion_r473766209", "createdAt": "2020-08-20T08:36:19Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CompletedCheckpoint.java", "diffHunk": "@@ -320,6 +320,12 @@ void setDiscardCallback(@Nullable CompletedCheckpointStats.DiscardCallback disca\n \n \t@Override\n \tpublic String toString() {\n-\t\treturn String.format(\"Checkpoint %d @ %d for %s\", checkpointID, timestamp, job);\n+\t\treturn String.format(\n+\t\t\t\"%s %d @ %d for %s located at %s\",\n+\t\t\tprops.getCheckpointType(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "635f839466122e36674a38a9845c2d6b5eb5c244"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkyOTg0NA==", "bodyText": "I do not have a strong opinion on this as well. But since you ask, let me have a try LOL :-)\nThe only concern is that we \"might\" have more types in the future\n\ncheckpoint or savepoint; 2. Synchronous or not; 3. Global or Individual; 4. unaligned or not (I mean it could be);\n\n\nIt is a bit difficult to categorize the enum of CheckpointType to just \"Checkpoint\" and \"Savepoint\"\nIt is also difficult to tell what level of technicality a user needs. Or in other words, if we think SYNC_SAVEPOINT is not that understandable, we can improve its expressiveness.", "url": "https://github.com/apache/flink/pull/13175#discussion_r473929844", "createdAt": "2020-08-20T12:24:39Z", "author": {"login": "curcur"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CompletedCheckpoint.java", "diffHunk": "@@ -320,6 +320,12 @@ void setDiscardCallback(@Nullable CompletedCheckpointStats.DiscardCallback disca\n \n \t@Override\n \tpublic String toString() {\n-\t\treturn String.format(\"Checkpoint %d @ %d for %s\", checkpointID, timestamp, job);\n+\t\treturn String.format(\n+\t\t\t\"%s %d @ %d for %s located at %s\",\n+\t\t\tprops.getCheckpointType(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc2NjIwOQ=="}, "originalCommit": {"oid": "635f839466122e36674a38a9845c2d6b5eb5c244"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkzNTc2Mg==", "bodyText": "Please let me know what do you think :-). I would be happy to change it.", "url": "https://github.com/apache/flink/pull/13175#discussion_r473935762", "createdAt": "2020-08-20T12:35:07Z", "author": {"login": "curcur"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CompletedCheckpoint.java", "diffHunk": "@@ -320,6 +320,12 @@ void setDiscardCallback(@Nullable CompletedCheckpointStats.DiscardCallback disca\n \n \t@Override\n \tpublic String toString() {\n-\t\treturn String.format(\"Checkpoint %d @ %d for %s\", checkpointID, timestamp, job);\n+\t\treturn String.format(\n+\t\t\t\"%s %d @ %d for %s located at %s\",\n+\t\t\tprops.getCheckpointType(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc2NjIwOQ=="}, "originalCommit": {"oid": "635f839466122e36674a38a9845c2d6b5eb5c244"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE1NDg1Mg==", "bodyText": "I guess having a bit technicality in the log should be okay.\nAnother easy fix would be to override the toString in the checkpoint type and output it in more readable form.\n\"Checkpoint\"\n\"Savepoint\"\n\"Savepoint (sync)\"\nI also don't know if SYNC_SAVEPOINT would appear in materialized checkpoint at all - might be also some transient information that gets replaced by SAVEPOINT on recovery?", "url": "https://github.com/apache/flink/pull/13175#discussion_r474154852", "createdAt": "2020-08-20T17:28:18Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CompletedCheckpoint.java", "diffHunk": "@@ -320,6 +320,12 @@ void setDiscardCallback(@Nullable CompletedCheckpointStats.DiscardCallback disca\n \n \t@Override\n \tpublic String toString() {\n-\t\treturn String.format(\"Checkpoint %d @ %d for %s\", checkpointID, timestamp, job);\n+\t\treturn String.format(\n+\t\t\t\"%s %d @ %d for %s located at %s\",\n+\t\t\tprops.getCheckpointType(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc2NjIwOQ=="}, "originalCommit": {"oid": "635f839466122e36674a38a9845c2d6b5eb5c244"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgxNjcxNg==", "bodyText": "updated :-)\nI can double-check whether SYNC_SAVEPOINT is user-aware or not.", "url": "https://github.com/apache/flink/pull/13175#discussion_r474816716", "createdAt": "2020-08-21T16:57:34Z", "author": {"login": "curcur"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CompletedCheckpoint.java", "diffHunk": "@@ -320,6 +320,12 @@ void setDiscardCallback(@Nullable CompletedCheckpointStats.DiscardCallback disca\n \n \t@Override\n \tpublic String toString() {\n-\t\treturn String.format(\"Checkpoint %d @ %d for %s\", checkpointID, timestamp, job);\n+\t\treturn String.format(\n+\t\t\t\"%s %d @ %d for %s located at %s\",\n+\t\t\tprops.getCheckpointType(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc2NjIwOQ=="}, "originalCommit": {"oid": "635f839466122e36674a38a9845c2d6b5eb5c244"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 466, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}