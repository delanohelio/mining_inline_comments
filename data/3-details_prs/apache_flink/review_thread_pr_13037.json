{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5OTk0MDYx", "number": 13037, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMDoyMzozNlrOEUAgQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMDoyNDozMVrOEUAhOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDE1MjMyOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-sql-parser/src/main/codegen/includes/parserImpls.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMDoyMzozNlrOG6DrSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMDoyMzozNlrOG6DrSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzMDgyNA==", "bodyText": "We can use IfNotExistsOpt parse block directly.", "url": "https://github.com/apache/flink/pull/13037#discussion_r463530824", "createdAt": "2020-07-31T10:23:36Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-sql-parser/src/main/codegen/includes/parserImpls.ftl", "diffHunk": "@@ -735,6 +736,11 @@ SqlCreate SqlCreateTable(Span s, boolean replace, boolean isTemporary) :\n {\n     <TABLE>\n \n+    [\n+        LOOKAHEAD(3)\n+        <IF> <NOT> <EXISTS> { ifNotExists = true; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00568a9ee6d18beaffeafb6462f9e33924e3cae6"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDE1NDgwOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/api/TableEnvironmentTest.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMDoyNDozMVrOG6Dswg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMDoyNDozMVrOG6Dswg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzMTIwMg==", "bodyText": "The ALTER TABLE tbl1 SET is not necessary, we can merge the test testExecuteSqlWithCreateTableIfNotExistsTwice into this one.", "url": "https://github.com/apache/flink/pull/13037#discussion_r463531202", "createdAt": "2020-07-31T10:24:31Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/api/TableEnvironmentTest.scala", "diffHunk": "@@ -135,6 +135,82 @@ class TableEnvironmentTest {\n       .tableExists(ObjectPath.fromString(s\"${tableEnv.getCurrentDatabase}.tbl1\")))\n   }\n \n+  @Test\n+  def testExecuteSqlWithCreateTableAlterDropIfNotExists(): Unit = {\n+    val createTableStmt =\n+      \"\"\"\n+        |CREATE TABLE IF NOT EXISTS tbl1 (\n+        |  a bigint,\n+        |  b int,\n+        |  c varchar\n+        |) with (\n+        |  'connector' = 'COLLECTION',\n+        |  'is-bounded' = 'false'\n+        |)\n+      \"\"\".stripMargin\n+    val tableResult1 = tableEnv.executeSql(createTableStmt)\n+    assertEquals(ResultKind.SUCCESS, tableResult1.getResultKind)\n+    assertTrue(tableEnv.getCatalog(tableEnv.getCurrentCatalog).get()\n+      .tableExists(ObjectPath.fromString(s\"${tableEnv.getCurrentDatabase}.tbl1\")))\n+\n+    val tableResult2 = tableEnv.executeSql(\"ALTER TABLE tbl1 SET ('k1' = 'a', 'k2' = 'b')\")\n+    assertEquals(ResultKind.SUCCESS, tableResult2.getResultKind)\n+    assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00568a9ee6d18beaffeafb6462f9e33924e3cae6"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4896, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}