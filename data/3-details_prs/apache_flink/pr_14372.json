{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM4NDAxMTE0", "number": 14372, "title": "[FLINK-19259][Kinesis] Remove references to allow classloader unloading", "bodyText": "What is the purpose of the change\nThe Kinesis producer is loading some classes which register static final instance fields. These fields prevent the user code classloader from unloading, leading to pollution of the JVM Metaspace.\nVerifying this change\nI manually verified the behavior by monitoring the metaspace of a TaskManager. The initial spikes are caused by a Kinesis Producer implementation with the new changes applied (= using the classloader shutdown hook). Later, the TM gets killed by running out of JVM metaspace, when running the old Kinesis Producer implementation.", "createdAt": "2020-12-12T19:13:12Z", "url": "https://github.com/apache/flink/pull/14372", "merged": true, "mergeCommit": {"oid": "46d3f20e14afdf32e4ece21b1651fb55603479c7"}, "closed": true, "closedAt": "2020-12-16T16:04:49Z", "author": {"login": "rmetzger"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmKm-pgFqTU1MTc5NzIzOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmtyMxgFqTU1MzYyMjg5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNzk3MjM4", "url": "https://github.com/apache/flink/pull/14372#pullrequestreview-551797238", "createdAt": "2020-12-14T18:54:53Z", "commit": {"oid": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxODo1NDo1M1rOIFgVLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxOTowNzoyOFrOIFhQnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY0MzUwMA==", "bodyText": "revert", "url": "https://github.com/apache/flink/pull/14372#discussion_r542643500", "createdAt": "2020-12-14T18:54:53Z", "author": {"login": "zentol"}, "path": "flink-core/src/main/java/org/apache/flink/api/common/functions/RuntimeContext.java", "diffHunk": "@@ -128,12 +129,11 @@\n \t *\n \t * <p>The release hook is executed just before the user code class loader is being released.\n \t * Registration only happens if no hook has been registered under this name already.\n-\t *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY0NDk2MA==", "bodyText": "Shouldn't we be able to use getClass().getClassLoader()? Then we wouldn't have to modify the RuntimeContext API.", "url": "https://github.com/apache/flink/pull/14372#discussion_r542644960", "createdAt": "2020-12-14T18:56:07Z", "author": {"login": "zentol"}, "path": "flink-connectors/flink-connector-kinesis/src/main/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducer.java", "diffHunk": "@@ -423,4 +432,43 @@ private void flushSync() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Remove references created by the producer, preventing the classloader to unload. References were\n+\t * analyzed as of version 0.14.0.\n+\t */\n+\tprivate void runClassLoaderReleaseHook(ClassLoader classLoader) {\n+\t\t// unregister admin mbean\n+\t\tAwsSdkMetrics.unregisterMetricAdminMBean();\n+\n+\t\ttry {\n+\t\t\t// Remove FileAgeManager\n+\t\t\tClass<?> fileAgeManagerClazz = Class.forName(\"com.amazonaws.services.kinesis.producer.FileAgeManager\", true, classLoader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY0ODkzMA==", "bodyText": "This should be the key change necessary to ensure the ClassLoader can be cleaned up.\nWe shouldn't have to touch the FileAgeManager#instance reference; so long as no thread has references to them we should be good.", "url": "https://github.com/apache/flink/pull/14372#discussion_r542648930", "createdAt": "2020-12-14T18:59:07Z", "author": {"login": "zentol"}, "path": "flink-connectors/flink-connector-kinesis/src/main/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducer.java", "diffHunk": "@@ -423,4 +432,43 @@ private void flushSync() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Remove references created by the producer, preventing the classloader to unload. References were\n+\t * analyzed as of version 0.14.0.\n+\t */\n+\tprivate void runClassLoaderReleaseHook(ClassLoader classLoader) {\n+\t\t// unregister admin mbean\n+\t\tAwsSdkMetrics.unregisterMetricAdminMBean();\n+\n+\t\ttry {\n+\t\t\t// Remove FileAgeManager\n+\t\t\tClass<?> fileAgeManagerClazz = Class.forName(\"com.amazonaws.services.kinesis.producer.FileAgeManager\", true, classLoader);\n+\t\t\tField instanceField = fileAgeManagerClazz.getDeclaredField(\"instance\");\n+\t\t\tinstanceField.setAccessible(true);\n+\n+\t\t\t// unset (static final) field FileAgeManager.instance\n+\t\t\tField modifiersField = Field.class.getDeclaredField(\"modifiers\");\n+\t\t\tmodifiersField.setAccessible(true);\n+\t\t\tmodifiersField.setInt(instanceField, instanceField.getModifiers() & ~Modifier.FINAL);\n+\t\t\tObject fileAgeManager = instanceField.get(null);\n+\t\t\tinstanceField.set(null, null);\n+\n+\t\t\t// shutdown thread pool", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY1MjY1Nw==", "bodyText": "Why are we clearing this singleton?", "url": "https://github.com/apache/flink/pull/14372#discussion_r542652657", "createdAt": "2020-12-14T19:01:52Z", "author": {"login": "zentol"}, "path": "flink-connectors/flink-connector-kinesis/src/main/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducer.java", "diffHunk": "@@ -423,4 +432,43 @@ private void flushSync() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Remove references created by the producer, preventing the classloader to unload. References were\n+\t * analyzed as of version 0.14.0.\n+\t */\n+\tprivate void runClassLoaderReleaseHook(ClassLoader classLoader) {\n+\t\t// unregister admin mbean\n+\t\tAwsSdkMetrics.unregisterMetricAdminMBean();\n+\n+\t\ttry {\n+\t\t\t// Remove FileAgeManager\n+\t\t\tClass<?> fileAgeManagerClazz = Class.forName(\"com.amazonaws.services.kinesis.producer.FileAgeManager\", true, classLoader);\n+\t\t\tField instanceField = fileAgeManagerClazz.getDeclaredField(\"instance\");\n+\t\t\tinstanceField.setAccessible(true);\n+\n+\t\t\t// unset (static final) field FileAgeManager.instance\n+\t\t\tField modifiersField = Field.class.getDeclaredField(\"modifiers\");\n+\t\t\tmodifiersField.setAccessible(true);\n+\t\t\tmodifiersField.setInt(instanceField, instanceField.getModifiers() & ~Modifier.FINAL);\n+\t\t\tObject fileAgeManager = instanceField.get(null);\n+\t\t\tinstanceField.set(null, null);\n+\n+\t\t\t// shutdown thread pool\n+\t\t\tField executorField = fileAgeManagerClazz.getDeclaredField(\"executorService\");\n+\t\t\texecutorField.setAccessible(true);\n+\t\t\tExecutorService executorService = (ExecutorService) executorField.get(fileAgeManager);\n+\t\t\texecutorService.shutdown();\n+\t\t\texecutorService.awaitTermination(1, TimeUnit.MINUTES);\n+\n+\t\t\t// Remove InstanceProfileCredentialsProvider\n+\t\t\tClass<?> credProviderClazz = Class.forName(\"com.amazonaws.auth.InstanceProfileCredentialsProvider\", true, classLoader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY1NzYwOA==", "bodyText": "It would be good to add a version reference for which aws-java-sdk-core was used.", "url": "https://github.com/apache/flink/pull/14372#discussion_r542657608", "createdAt": "2020-12-14T19:06:28Z", "author": {"login": "zentol"}, "path": "flink-connectors/flink-connector-kinesis/src/main/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducer.java", "diffHunk": "@@ -423,4 +432,43 @@ private void flushSync() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Remove references created by the producer, preventing the classloader to unload. References were\n+\t * analyzed as of version 0.14.0.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY1ODYyMg==", "bodyText": "seems outdated?", "url": "https://github.com/apache/flink/pull/14372#discussion_r542658622", "createdAt": "2020-12-14T19:07:23Z", "author": {"login": "zentol"}, "path": "flink-connectors/flink-connector-kinesis/src/main/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducer.java", "diffHunk": "@@ -423,4 +432,43 @@ private void flushSync() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Remove references created by the producer, preventing the classloader to unload. References were\n+\t * analyzed as of version 0.14.0.\n+\t */\n+\tprivate void runClassLoaderReleaseHook(ClassLoader classLoader) {\n+\t\t// unregister admin mbean\n+\t\tAwsSdkMetrics.unregisterMetricAdminMBean();\n+\n+\t\ttry {\n+\t\t\t// Remove FileAgeManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY1ODcxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t// unregister admin mbean", "url": "https://github.com/apache/flink/pull/14372#discussion_r542658717", "createdAt": "2020-12-14T19:07:28Z", "author": {"login": "zentol"}, "path": "flink-connectors/flink-connector-kinesis/src/main/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducer.java", "diffHunk": "@@ -423,4 +432,43 @@ private void flushSync() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n+\n+\t/**\n+\t * Remove references created by the producer, preventing the classloader to unload. References were\n+\t * analyzed as of version 0.14.0.\n+\t */\n+\tprivate void runClassLoaderReleaseHook(ClassLoader classLoader) {\n+\t\t// unregister admin mbean", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8ec7aa31e1a94882c6e0677348c8c8a1d5dbc1f", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/f8ec7aa31e1a94882c6e0677348c8c8a1d5dbc1f", "committedDate": "2020-12-16T11:34:10Z", "message": "[FLINK-19259][kinesis] Remove references to allow classloader unloading"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/d7cddbfc09ea4961d8675dbb21fd3c2c3ca54586", "committedDate": "2020-12-12T19:03:57Z", "message": "[FLINK-19259][Kinesis] Remove references to allow classloader unloading"}, "afterCommit": {"oid": "f8ec7aa31e1a94882c6e0677348c8c8a1d5dbc1f", "author": {"user": {"login": "rmetzger", "name": "Robert Metzger"}}, "url": "https://github.com/apache/flink/commit/f8ec7aa31e1a94882c6e0677348c8c8a1d5dbc1f", "committedDate": "2020-12-16T11:34:10Z", "message": "[FLINK-19259][kinesis] Remove references to allow classloader unloading"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNjIyODk0", "url": "https://github.com/apache/flink/pull/14372#pullrequestreview-553622894", "createdAt": "2020-12-16T12:06:55Z", "commit": {"oid": "f8ec7aa31e1a94882c6e0677348c8c8a1d5dbc1f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3562, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}