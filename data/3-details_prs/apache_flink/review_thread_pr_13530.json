{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NzM3MjIy", "number": 13530, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjoyMjo0MVrOEp353Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjoyOTowN1rOEp4BSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzQzMDA1OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/minicluster/MiniClusterJobClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjoyMjo0MVrOHbzzRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjoyMjo0MVrOHbzzRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyMjMwOA==", "bodyText": "I tend to prefer enums instead of booleans for parameters because it makes it explicit what true and false means.", "url": "https://github.com/apache/flink/pull/13530#discussion_r498922308", "createdAt": "2020-10-02T16:22:41Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/minicluster/MiniClusterJobClient.java", "diffHunk": "@@ -43,23 +43,30 @@\n /**\n  * A {@link JobClient} for a {@link MiniCluster}.\n  */\n-public final class PerJobMiniClusterJobClient implements JobClient, CoordinationRequestGateway {\n+public final class MiniClusterJobClient implements JobClient, CoordinationRequestGateway {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(PerJobMiniClusterJobClient.class);\n+\tprivate static final Logger LOG = LoggerFactory.getLogger(MiniClusterJobClient.class);\n \n \tprivate final JobID jobID;\n \tprivate final MiniCluster miniCluster;\n-\tprivate final CompletableFuture<JobResult> jobResultFuture;\n \tprivate final ClassLoader classLoader;\n+\tprivate final CompletableFuture<JobResult> jobResultFuture;\n \n-\tpublic PerJobMiniClusterJobClient(JobID jobID, MiniCluster miniCluster, ClassLoader classLoader) {\n+\t/**\n+\t * Creates a {@link MiniClusterJobClient} for the given {@link JobID} and {@link MiniCluster}.\n+\t * This will shut down the {@code MiniCluster} after job result retrieval if {@code\n+\t * shutdownCluster} is {@code true}.\n+\t */\n+\tpublic MiniClusterJobClient(JobID jobID, MiniCluster miniCluster, ClassLoader classLoader, boolean shutdownCluster) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d4b30a92c9dd7b13bf4d906b58b9cf591edf036"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzQ0NjQ1OnYy", "diffSide": "RIGHT", "path": "flink-test-utils-parent/flink-test-utils/src/main/java/org/apache/flink/test/util/TestEnvironment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjoyODoxNFrOHbz-Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjoyODoxNFrOHbz-Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyNTA1OQ==", "bodyText": "I think an extra tab of indentation is probably not correct here.", "url": "https://github.com/apache/flink/pull/13530#discussion_r498925059", "createdAt": "2020-10-02T16:28:14Z", "author": {"login": "tillrohrmann"}, "path": "flink-test-utils-parent/flink-test-utils/src/main/java/org/apache/flink/test/util/TestEnvironment.java", "diffHunk": "@@ -78,58 +63,33 @@ public TestEnvironment(\n \t}\n \n \tpublic TestEnvironment(\n-\t\t\tJobExecutor executor,\n+\t\t\tMiniCluster executor,\n \t\t\tint parallelism,\n \t\t\tboolean isObjectReuseEnabled) {\n \t\tthis(\n-\t\t\texecutor,\n-\t\t\tparallelism,\n-\t\t\tisObjectReuseEnabled,\n-\t\t\tCollections.emptyList(),\n-\t\t\tCollections.emptyList());\n+\t\t\t\texecutor,\n+\t\t\t\tparallelism,\n+\t\t\t\tisObjectReuseEnabled,\n+\t\t\t\tCollections.emptyList(),\n+\t\t\t\tCollections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0349d078595fe3b752d4b606413e6bb30e1e18a8"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzQ0NzY5OnYy", "diffSide": "RIGHT", "path": "flink-test-utils-parent/flink-test-utils/src/main/java/org/apache/flink/test/util/TestEnvironment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjoyODo0M1rOHbz-6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjoyODo0M1rOHbz-6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyNTI4OQ==", "bodyText": "nit: this looks too deeply intended.", "url": "https://github.com/apache/flink/pull/13530#discussion_r498925289", "createdAt": "2020-10-02T16:28:43Z", "author": {"login": "tillrohrmann"}, "path": "flink-test-utils-parent/flink-test-utils/src/main/java/org/apache/flink/test/util/TestEnvironment.java", "diffHunk": "@@ -19,52 +19,37 @@\n package org.apache.flink.test.util;\n \n import org.apache.flink.api.common.JobExecutionResult;\n-import org.apache.flink.api.common.Plan;\n import org.apache.flink.api.java.ExecutionEnvironment;\n import org.apache.flink.api.java.ExecutionEnvironmentFactory;\n-import org.apache.flink.client.deployment.executors.LocalExecutor;\n-import org.apache.flink.configuration.Configuration;\n-import org.apache.flink.configuration.DeploymentOptions;\n import org.apache.flink.core.fs.Path;\n-import org.apache.flink.optimizer.DataStatistics;\n-import org.apache.flink.optimizer.Optimizer;\n-import org.apache.flink.optimizer.plan.OptimizedPlan;\n-import org.apache.flink.optimizer.plantranslate.JobGraphGenerator;\n-import org.apache.flink.runtime.jobgraph.JobGraph;\n-import org.apache.flink.runtime.minicluster.JobExecutor;\n import org.apache.flink.runtime.minicluster.MiniCluster;\n import org.apache.flink.util.Preconditions;\n \n import java.net.URL;\n-import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n \n /**\n- * A {@link ExecutionEnvironment} implementation which executes its jobs on a\n- * {@link MiniCluster}.\n+ * A {@link ExecutionEnvironment} implementation which executes its jobs on a {@link MiniCluster}.\n  */\n public class TestEnvironment extends ExecutionEnvironment {\n \n-\tprivate final JobExecutor jobExecutor;\n-\n-\tprivate final Collection<Path> jarFiles;\n-\n-\tprivate final Collection<URL> classPaths;\n+\tprivate final MiniCluster miniCluster;\n \n \tprivate TestEnvironment lastEnv;\n \n \tpublic TestEnvironment(\n-\t\t\tJobExecutor jobExecutor,\n+\t\t\tMiniCluster miniCluster,\n \t\t\tint parallelism,\n \t\t\tboolean isObjectReuseEnabled,\n \t\t\tCollection<Path> jarFiles,\n \t\t\tCollection<URL> classPaths) {\n-\t\tthis.jobExecutor = Preconditions.checkNotNull(jobExecutor);\n-\t\tthis.jarFiles = Preconditions.checkNotNull(jarFiles);\n-\t\tthis.classPaths = Preconditions.checkNotNull(classPaths);\n-\t\tgetConfiguration().set(DeploymentOptions.TARGET, LocalExecutor.NAME);\n-\t\tgetConfiguration().set(DeploymentOptions.ATTACHED, true);\n+\t\tsuper(\n+\t\t\t\tnew MiniClusterPipelineExecutorServiceLoader(miniCluster),\n+\t\t\t\tMiniClusterPipelineExecutorServiceLoader.createConfiguration(jarFiles, classPaths),\n+\t\t\t\tnull);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0349d078595fe3b752d4b606413e6bb30e1e18a8"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzQ0OTA1OnYy", "diffSide": "RIGHT", "path": "flink-test-utils-parent/flink-test-utils/src/main/java/org/apache/flink/test/util/TestEnvironment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjoyOTowN1rOHbz_wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNjoyOTowN1rOHbz_wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyNTUwNQ==", "bodyText": "nit: I am not sure about this indentation here.", "url": "https://github.com/apache/flink/pull/13530#discussion_r498925505", "createdAt": "2020-10-02T16:29:07Z", "author": {"login": "tillrohrmann"}, "path": "flink-test-utils-parent/flink-test-utils/src/main/java/org/apache/flink/test/util/TestEnvironment.java", "diffHunk": "@@ -174,15 +129,15 @@ public ExecutionEnvironment createExecutionEnvironment() {\n \t * environment executes the given jobs on a Flink mini cluster with the given default\n \t * parallelism and the additional jar files and class paths.\n \t *\n-\t * @param jobExecutor The executor to run the jobs on\n+\t * @param miniCluster The MiniCluster to execute jobs on.\n \t * @param parallelism The default parallelism\n \t */\n-\tpublic static void setAsContext(final JobExecutor jobExecutor, final int parallelism) {\n+\tpublic static void setAsContext(final MiniCluster miniCluster, final int parallelism) {\n \t\tsetAsContext(\n-\t\t\tjobExecutor,\n-\t\t\tparallelism,\n-\t\t\tCollections.emptyList(),\n-\t\t\tCollections.emptyList());\n+\t\t\t\tminiCluster,\n+\t\t\t\tparallelism,\n+\t\t\t\tCollections.emptyList(),\n+\t\t\t\tCollections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0349d078595fe3b752d4b606413e6bb30e1e18a8"}, "originalPosition": 195}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 205, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}