{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMTAxNTI2", "number": 13356, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMDoyNjo0N1rOEiDVLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNDoyMDoxNFrOEoGj7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MTQxNjEzOnYy", "diffSide": "RIGHT", "path": "docs/_includes/generated/execution_config_configuration.html", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMDoyNjo0N1rOHPtN5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTozODowMFrOHSst6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIzMTUyNw==", "bodyText": "@zentol It seems that the documentation generation is not deterministic?", "url": "https://github.com/apache/flink/pull/13356#discussion_r486231527", "createdAt": "2020-09-10T10:26:47Z", "author": {"login": "rmetzger"}, "path": "docs/_includes/generated/execution_config_configuration.html", "diffHunk": "@@ -106,6 +100,12 @@\n             <td>Boolean</td>\n             <td>Whether to compress spilled data. Currently we only support compress spilled data for sort and hash-agg and hash-join operators.</td>\n         </tr>\n+        <tr>\n+            <td><h5>table.exec.state.ttl</h5><br> <span class=\"label label-primary\">Streaming</span></td>\n+            <td style=\"word-wrap: break-word;\">0 ms</td>\n+            <td>Duration</td>\n+            <td>Specifies a minimum time interval for how long idle state (i.e. state which was not updated), will be retained. State will never be cleared until it was idle for less than the minimum time, and will be cleared at some time after it was idle. Default is never clean-up the state. NOTE: Cleaning up state requires additional overhead for bookkeeping. Default value is 0, which means that it will never clean up state.</td>\n+        </tr>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "656789f8c2f1288e3b9cf369f82d0698b249f179"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIzNDIzMQ==", "bodyText": "It would be good to understand where these changes are coming from -- I want to avoid a situation where the next person generating docs will change the order again.", "url": "https://github.com/apache/flink/pull/13356#discussion_r486234231", "createdAt": "2020-09-10T10:31:45Z", "author": {"login": "rmetzger"}, "path": "docs/_includes/generated/execution_config_configuration.html", "diffHunk": "@@ -106,6 +100,12 @@\n             <td>Boolean</td>\n             <td>Whether to compress spilled data. Currently we only support compress spilled data for sort and hash-agg and hash-join operators.</td>\n         </tr>\n+        <tr>\n+            <td><h5>table.exec.state.ttl</h5><br> <span class=\"label label-primary\">Streaming</span></td>\n+            <td style=\"word-wrap: break-word;\">0 ms</td>\n+            <td>Duration</td>\n+            <td>Specifies a minimum time interval for how long idle state (i.e. state which was not updated), will be retained. State will never be cleared until it was idle for less than the minimum time, and will be cleared at some time after it was idle. Default is never clean-up the state. NOTE: Cleaning up state requires additional overhead for bookkeeping. Default value is 0, which means that it will never clean up state.</td>\n+        </tr>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIzMTUyNw=="}, "originalCommit": {"oid": "656789f8c2f1288e3b9cf369f82d0698b249f179"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzMjQ2MA==", "bodyText": "not sure why but the doc generated by this PR actually preserves alphabetical ordering", "url": "https://github.com/apache/flink/pull/13356#discussion_r487432460", "createdAt": "2020-09-12T17:48:47Z", "author": {"login": "walterddr"}, "path": "docs/_includes/generated/execution_config_configuration.html", "diffHunk": "@@ -106,6 +100,12 @@\n             <td>Boolean</td>\n             <td>Whether to compress spilled data. Currently we only support compress spilled data for sort and hash-agg and hash-join operators.</td>\n         </tr>\n+        <tr>\n+            <td><h5>table.exec.state.ttl</h5><br> <span class=\"label label-primary\">Streaming</span></td>\n+            <td style=\"word-wrap: break-word;\">0 ms</td>\n+            <td>Duration</td>\n+            <td>Specifies a minimum time interval for how long idle state (i.e. state which was not updated), will be retained. State will never be cleared until it was idle for less than the minimum time, and will be cleared at some time after it was idle. Default is never clean-up the state. NOTE: Cleaning up state requires additional overhead for bookkeeping. Default value is 0, which means that it will never clean up state.</td>\n+        </tr>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIzMTUyNw=="}, "originalCommit": {"oid": "656789f8c2f1288e3b9cf369f82d0698b249f179"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI0NzQ2NA==", "bodyText": "The ordering is deterministic; but when people manually modify the files and commit it this can of course happen.", "url": "https://github.com/apache/flink/pull/13356#discussion_r489247464", "createdAt": "2020-09-16T08:11:46Z", "author": {"login": "zentol"}, "path": "docs/_includes/generated/execution_config_configuration.html", "diffHunk": "@@ -106,6 +100,12 @@\n             <td>Boolean</td>\n             <td>Whether to compress spilled data. Currently we only support compress spilled data for sort and hash-agg and hash-join operators.</td>\n         </tr>\n+        <tr>\n+            <td><h5>table.exec.state.ttl</h5><br> <span class=\"label label-primary\">Streaming</span></td>\n+            <td style=\"word-wrap: break-word;\">0 ms</td>\n+            <td>Duration</td>\n+            <td>Specifies a minimum time interval for how long idle state (i.e. state which was not updated), will be retained. State will never be cleared until it was idle for less than the minimum time, and will be cleared at some time after it was idle. Default is never clean-up the state. NOTE: Cleaning up state requires additional overhead for bookkeeping. Default value is 0, which means that it will never clean up state.</td>\n+        </tr>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIzMTUyNw=="}, "originalCommit": {"oid": "656789f8c2f1288e3b9cf369f82d0698b249f179"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1NzUwNg==", "bodyText": "We could enhance the tests to also check that the entries are sorted properly.", "url": "https://github.com/apache/flink/pull/13356#discussion_r489257506", "createdAt": "2020-09-16T08:28:15Z", "author": {"login": "zentol"}, "path": "docs/_includes/generated/execution_config_configuration.html", "diffHunk": "@@ -106,6 +100,12 @@\n             <td>Boolean</td>\n             <td>Whether to compress spilled data. Currently we only support compress spilled data for sort and hash-agg and hash-join operators.</td>\n         </tr>\n+        <tr>\n+            <td><h5>table.exec.state.ttl</h5><br> <span class=\"label label-primary\">Streaming</span></td>\n+            <td style=\"word-wrap: break-word;\">0 ms</td>\n+            <td>Duration</td>\n+            <td>Specifies a minimum time interval for how long idle state (i.e. state which was not updated), will be retained. State will never be cleared until it was idle for less than the minimum time, and will be cleared at some time after it was idle. Default is never clean-up the state. NOTE: Cleaning up state requires additional overhead for bookkeeping. Default value is 0, which means that it will never clean up state.</td>\n+        </tr>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIzMTUyNw=="}, "originalCommit": {"oid": "656789f8c2f1288e3b9cf369f82d0698b249f179"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM2OTA2Nw==", "bodyText": "https://issues.apache.org/jira/browse/FLINK-19263", "url": "https://github.com/apache/flink/pull/13356#discussion_r489369067", "createdAt": "2020-09-16T11:38:00Z", "author": {"login": "zentol"}, "path": "docs/_includes/generated/execution_config_configuration.html", "diffHunk": "@@ -106,6 +100,12 @@\n             <td>Boolean</td>\n             <td>Whether to compress spilled data. Currently we only support compress spilled data for sort and hash-agg and hash-join operators.</td>\n         </tr>\n+        <tr>\n+            <td><h5>table.exec.state.ttl</h5><br> <span class=\"label label-primary\">Streaming</span></td>\n+            <td style=\"word-wrap: break-word;\">0 ms</td>\n+            <td>Duration</td>\n+            <td>Specifies a minimum time interval for how long idle state (i.e. state which was not updated), will be retained. State will never be cleared until it was idle for less than the minimum time, and will be cleared at some time after it was idle. Default is never clean-up the state. NOTE: Cleaning up state requires additional overhead for bookkeeping. Default value is 0, which means that it will never clean up state.</td>\n+        </tr>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIzMTUyNw=="}, "originalCommit": {"oid": "656789f8c2f1288e3b9cf369f82d0698b249f179"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MTQzMTE5OnYy", "diffSide": "RIGHT", "path": "docs/_includes/generated/jmx_server_configuration.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMDozMDo0OVrOHPtWiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMlQxNzo0OTo0NlrOHQ2hTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIzMzczNw==", "bodyText": "Why is this file generated now? (I don't see a code change that triggers this)", "url": "https://github.com/apache/flink/pull/13356#discussion_r486233737", "createdAt": "2020-09-10T10:30:49Z", "author": {"login": "rmetzger"}, "path": "docs/_includes/generated/jmx_server_configuration.html", "diffHunk": "@@ -0,0 +1,18 @@\n+<table class=\"table table-bordered\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "656789f8c2f1288e3b9cf369f82d0698b249f179"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQzMjUyNw==", "bodyText": "this is actually due to the fact that doc gen only regenerate files (and if there's deletion, lines will be removed) but it doesn't remove the html when all items in that file was removed. I manually removed this for one of my fault doc gen", "url": "https://github.com/apache/flink/pull/13356#discussion_r487432527", "createdAt": "2020-09-12T17:49:46Z", "author": {"login": "walterddr"}, "path": "docs/_includes/generated/jmx_server_configuration.html", "diffHunk": "@@ -0,0 +1,18 @@\n+<table class=\"table table-bordered\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIzMzczNw=="}, "originalCommit": {"oid": "656789f8c2f1288e3b9cf369f82d0698b249f179"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTI0MzAwOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/resourcemanager/TaskExecutorRegistration.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwODoyMDoxNFrOHSlmiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTozMzozN1rOHY10AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1MjQ4OA==", "bodyText": "I would prefer a more general approach; basically just a Map<String, String> containing various meta-data bits. Then we could easily add information about other services and/or ports in the future.", "url": "https://github.com/apache/flink/pull/13356#discussion_r489252488", "createdAt": "2020-09-16T08:20:14Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/resourcemanager/TaskExecutorRegistration.java", "diffHunk": "@@ -72,13 +77,15 @@ public TaskExecutorRegistration(\n \t\t\tfinal String taskExecutorAddress,\n \t\t\tfinal ResourceID resourceId,\n \t\t\tfinal int dataPort,\n+\t\t\tfinal int jmxPort,\n \t\t\tfinal HardwareDescription hardwareDescription,\n \t\t\tfinal TaskExecutorMemoryConfiguration memoryConfiguration,\n \t\t\tfinal ResourceProfile defaultSlotResourceProfile,\n \t\t\tfinal ResourceProfile totalResourceProfile) {\n \t\tthis.taskExecutorAddress = checkNotNull(taskExecutorAddress);\n \t\tthis.resourceId = checkNotNull(resourceId);\n \t\tthis.dataPort = dataPort;\n+\t\tthis.jmxPort = jmxPort;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "060bb38dd26df122e05fc232cd730b35717e84b0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUwNjk3Mg==", "bodyText": "we can do that, in fact it is very similar to the JobConfigInfo message content.\ndo you want to move dataPort and some other components into this generic metadata collection? (we can mark them deprecated first then remove them in the next release)", "url": "https://github.com/apache/flink/pull/13356#discussion_r489506972", "createdAt": "2020-09-16T15:00:13Z", "author": {"login": "walterddr"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/resourcemanager/TaskExecutorRegistration.java", "diffHunk": "@@ -72,13 +77,15 @@ public TaskExecutorRegistration(\n \t\t\tfinal String taskExecutorAddress,\n \t\t\tfinal ResourceID resourceId,\n \t\t\tfinal int dataPort,\n+\t\t\tfinal int jmxPort,\n \t\t\tfinal HardwareDescription hardwareDescription,\n \t\t\tfinal TaskExecutorMemoryConfiguration memoryConfiguration,\n \t\t\tfinal ResourceProfile defaultSlotResourceProfile,\n \t\t\tfinal ResourceProfile totalResourceProfile) {\n \t\tthis.taskExecutorAddress = checkNotNull(taskExecutorAddress);\n \t\tthis.resourceId = checkNotNull(resourceId);\n \t\tthis.dataPort = dataPort;\n+\t\tthis.jmxPort = jmxPort;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1MjQ4OA=="}, "originalCommit": {"oid": "060bb38dd26df122e05fc232cd730b35717e84b0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg0NjkwOQ==", "bodyText": "hmm...I think it would make sense to also include the dataPort; it doesn't appear to be used by the runtime? But that also seems to apply to the hardwareDescription and memoryConfiguration.\nhmm...maybe we should instead just bundle them in container, that is then just passed along. It would achieve my goal of not having explicit accesses to the jmx Port in various components, while still allowing us to use them for other things down the line.", "url": "https://github.com/apache/flink/pull/13356#discussion_r490846909", "createdAt": "2020-09-18T10:15:40Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/resourcemanager/TaskExecutorRegistration.java", "diffHunk": "@@ -72,13 +77,15 @@ public TaskExecutorRegistration(\n \t\t\tfinal String taskExecutorAddress,\n \t\t\tfinal ResourceID resourceId,\n \t\t\tfinal int dataPort,\n+\t\t\tfinal int jmxPort,\n \t\t\tfinal HardwareDescription hardwareDescription,\n \t\t\tfinal TaskExecutorMemoryConfiguration memoryConfiguration,\n \t\t\tfinal ResourceProfile defaultSlotResourceProfile,\n \t\t\tfinal ResourceProfile totalResourceProfile) {\n \t\tthis.taskExecutorAddress = checkNotNull(taskExecutorAddress);\n \t\tthis.resourceId = checkNotNull(resourceId);\n \t\tthis.dataPort = dataPort;\n+\t\tthis.jmxPort = jmxPort;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1MjQ4OA=="}, "originalCommit": {"oid": "060bb38dd26df122e05fc232cd730b35717e84b0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQ3MTE0Ng==", "bodyText": "hmm. I understand your concern. and putting an opaque Map<String, String> would definitely be safer.\ncould you elaborate what you meant by \"just bundle them in container\"? do you mean putting everything in the Map<String, String> container?", "url": "https://github.com/apache/flink/pull/13356#discussion_r491471146", "createdAt": "2020-09-19T16:33:23Z", "author": {"login": "walterddr"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/resourcemanager/TaskExecutorRegistration.java", "diffHunk": "@@ -72,13 +77,15 @@ public TaskExecutorRegistration(\n \t\t\tfinal String taskExecutorAddress,\n \t\t\tfinal ResourceID resourceId,\n \t\t\tfinal int dataPort,\n+\t\t\tfinal int jmxPort,\n \t\t\tfinal HardwareDescription hardwareDescription,\n \t\t\tfinal TaskExecutorMemoryConfiguration memoryConfiguration,\n \t\t\tfinal ResourceProfile defaultSlotResourceProfile,\n \t\t\tfinal ResourceProfile totalResourceProfile) {\n \t\tthis.taskExecutorAddress = checkNotNull(taskExecutorAddress);\n \t\tthis.resourceId = checkNotNull(resourceId);\n \t\tthis.dataPort = dataPort;\n+\t\tthis.jmxPort = jmxPort;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1MjQ4OA=="}, "originalCommit": {"oid": "060bb38dd26df122e05fc232cd730b35717e84b0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk0NTg5OA==", "bodyText": "could you elaborate what you meant by \"just bundle them in container\"?\n\nJust a POJO containing all these.", "url": "https://github.com/apache/flink/pull/13356#discussion_r491945898", "createdAt": "2020-09-21T10:41:58Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/resourcemanager/TaskExecutorRegistration.java", "diffHunk": "@@ -72,13 +77,15 @@ public TaskExecutorRegistration(\n \t\t\tfinal String taskExecutorAddress,\n \t\t\tfinal ResourceID resourceId,\n \t\t\tfinal int dataPort,\n+\t\t\tfinal int jmxPort,\n \t\t\tfinal HardwareDescription hardwareDescription,\n \t\t\tfinal TaskExecutorMemoryConfiguration memoryConfiguration,\n \t\t\tfinal ResourceProfile defaultSlotResourceProfile,\n \t\t\tfinal ResourceProfile totalResourceProfile) {\n \t\tthis.taskExecutorAddress = checkNotNull(taskExecutorAddress);\n \t\tthis.resourceId = checkNotNull(resourceId);\n \t\tthis.dataPort = dataPort;\n+\t\tthis.jmxPort = jmxPort;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1MjQ4OA=="}, "originalCommit": {"oid": "060bb38dd26df122e05fc232cd730b35717e84b0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MjEyOA==", "bodyText": "after some experiment, it seems like it is modifying a whole lot of public classes including header/messages in REST API as well as TaskExecutor. I think separating that into a refactor PR might've been a better idea. what do you think?", "url": "https://github.com/apache/flink/pull/13356#discussion_r495482128", "createdAt": "2020-09-26T18:21:04Z", "author": {"login": "walterddr"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/resourcemanager/TaskExecutorRegistration.java", "diffHunk": "@@ -72,13 +77,15 @@ public TaskExecutorRegistration(\n \t\t\tfinal String taskExecutorAddress,\n \t\t\tfinal ResourceID resourceId,\n \t\t\tfinal int dataPort,\n+\t\t\tfinal int jmxPort,\n \t\t\tfinal HardwareDescription hardwareDescription,\n \t\t\tfinal TaskExecutorMemoryConfiguration memoryConfiguration,\n \t\t\tfinal ResourceProfile defaultSlotResourceProfile,\n \t\t\tfinal ResourceProfile totalResourceProfile) {\n \t\tthis.taskExecutorAddress = checkNotNull(taskExecutorAddress);\n \t\tthis.resourceId = checkNotNull(resourceId);\n \t\tthis.dataPort = dataPort;\n+\t\tthis.jmxPort = jmxPort;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1MjQ4OA=="}, "originalCommit": {"oid": "060bb38dd26df122e05fc232cd730b35717e84b0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgwOTUzNw==", "bodyText": "Let's leave it like it is then. I'm sure there is some way to achieve it, but it seems more hassle than it's worth.", "url": "https://github.com/apache/flink/pull/13356#discussion_r495809537", "createdAt": "2020-09-28T09:33:37Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/resourcemanager/TaskExecutorRegistration.java", "diffHunk": "@@ -72,13 +77,15 @@ public TaskExecutorRegistration(\n \t\t\tfinal String taskExecutorAddress,\n \t\t\tfinal ResourceID resourceId,\n \t\t\tfinal int dataPort,\n+\t\t\tfinal int jmxPort,\n \t\t\tfinal HardwareDescription hardwareDescription,\n \t\t\tfinal TaskExecutorMemoryConfiguration memoryConfiguration,\n \t\t\tfinal ResourceProfile defaultSlotResourceProfile,\n \t\t\tfinal ResourceProfile totalResourceProfile) {\n \t\tthis.taskExecutorAddress = checkNotNull(taskExecutorAddress);\n \t\tthis.resourceId = checkNotNull(resourceId);\n \t\tthis.dataPort = dataPort;\n+\t\tthis.jmxPort = jmxPort;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1MjQ4OA=="}, "originalCommit": {"oid": "060bb38dd26df122e05fc232cd730b35717e84b0"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTI2NDM3OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/taskexecutor/TaskExecutor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwODoyNTo0MlrOHSlzsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwODoyNTo0MlrOHSlzsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI1NTg1Nw==", "bodyText": "This strikes me as an odd default value, and I could imagine this being misunderstood as \"running on some random port\". -1 may be a better choice, or even better, with my above suggestion of using a map, just not including it in the map at all.", "url": "https://github.com/apache/flink/pull/13356#discussion_r489255857", "createdAt": "2020-09-16T08:25:42Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/taskexecutor/TaskExecutor.java", "diffHunk": "@@ -1130,6 +1131,7 @@ private void connectToResourceManager() {\n \t\t\tgetAddress(),\n \t\t\tgetResourceID(),\n \t\t\tunresolvedTaskManagerLocation.getDataPort(),\n+\t\t\tJMXService.getPort().orElse(0),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "060bb38dd26df122e05fc232cd730b35717e84b0"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDg1OTk2OnYy", "diffSide": "LEFT", "path": "docs/_includes/generated/jmx_server_configuration.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNDoyMDoxNFrOHY__Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNDoyMDoxNFrOHY__Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk3NjI0Nw==", "bodyText": "this shouldn't be deleted; even if options are included in specific sections we also always generate a separate table for each originating file", "url": "https://github.com/apache/flink/pull/13356#discussion_r495976247", "createdAt": "2020-09-28T14:20:14Z", "author": {"login": "zentol"}, "path": "docs/_includes/generated/jmx_server_configuration.html", "diffHunk": "@@ -1,18 +0,0 @@\n-<table class=\"table table-bordered\">\n-    <thead>\n-        <tr>\n-            <th class=\"text-left\" style=\"width: 20%\">Key</th>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c95d0e33b9cd23264c899aae7df75c83d290f129"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 453, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}