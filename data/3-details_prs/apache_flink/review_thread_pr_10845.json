{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMTg0OTIz", "number": 10845, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODowMjo0MVrODYaqUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODoxMzoxM1rODYazJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2OTI5MjMzOnYy", "diffSide": "RIGHT", "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODowMjo0MVrOFeQxfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODowMjo0MVrOFeQxfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI3NjQxNA==", "bodyText": "revert?", "url": "https://github.com/apache/flink/pull/10845#discussion_r367276414", "createdAt": "2020-01-16T08:02:41Z", "author": {"login": "pnowojski"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "diffHunk": "@@ -121,7 +121,7 @@\n \tpublic static final ConfigOption<String> PLUGIN_ALWAYS_PARENT_FIRST_LOADER_PATTERNS = ConfigOptions\n \t\t.key(\"plugin.classloader.parent-first-patterns.default\")\n \t\t.stringType()\n-\t\t.defaultValue(\"java.;scala.;org.apache.flink.;javax.annotation.;org.slf4j;org.apache.log4j;org.apache\" +\n+\t\t.defaultValue(\"java.;javax.;scala.;org.apache.flink.;org.slf4j;org.apache.log4j;org.apache\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1bd37255a1fbdffba63def90f85f9c1a0557d32"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2OTMxMjQ0OnYy", "diffSide": "RIGHT", "path": "flink-core/src/main/java/org/apache/flink/core/plugin/PluginLoader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODoxMjowNlrOFeQ9nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODoxMjowNlrOFeQ9nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI3OTUxOQ==", "bodyText": "return super.getResource(name);\n\n?", "url": "https://github.com/apache/flink/pull/10845#discussion_r367279519", "createdAt": "2020-01-16T08:12:06Z", "author": {"login": "pnowojski"}, "path": "flink-core/src/main/java/org/apache/flink/core/plugin/PluginLoader.java", "diffHunk": "@@ -100,4 +105,97 @@ public P next() {\n \t\t}\n \t}\n \n+\t/**\n+\t * Loads all classes from the plugin jar except for explicitly white-listed packages (org.apache.flink, logging).\n+\t *\n+\t * <p>No class/resource in the system class loader (everything in lib/) can be seen in the plugin except those\n+\t * starting with a whitelist prefix.\n+\t */\n+\tprivate static final class PluginClassLoader extends URLClassLoader {\n+\t\tprivate final ClassLoader flinkClassLoader;\n+\n+\t\tprivate final String[] allowedFlinkPackages;\n+\n+\t\tprivate final String[] allowedResourcePrefixes;\n+\n+\t\tPluginClassLoader(URL[] pluginResourceURLs, ClassLoader flinkClassLoader, String[] allowedFlinkPackages) {\n+\t\t\tsuper(pluginResourceURLs, null);\n+\t\t\tthis.flinkClassLoader = flinkClassLoader;\n+\t\t\tthis.allowedFlinkPackages = allowedFlinkPackages;\n+\t\t\tallowedResourcePrefixes = Arrays.stream(allowedFlinkPackages)\n+\t\t\t\t.map(packageName -> packageName.replace('.', '/'))\n+\t\t\t\t.toArray(String[]::new);\n+\t\t}\n+\n+\t\t@Override\n+\t\tprotected Class<?> loadClass(final String name, final boolean resolve) throws ClassNotFoundException {\n+\t\t\tsynchronized (getClassLoadingLock(name)) {\n+\t\t\t\tfinal Class<?> loadedClass = findLoadedClass(name);\n+\t\t\t\tif (loadedClass != null) {\n+\t\t\t\t\treturn resolveIfNeeded(resolve, loadedClass);\n+\t\t\t\t}\n+\n+\t\t\t\tif (isAllowedFlinkClass(name)) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\treturn resolveIfNeeded(resolve, flinkClassLoader.loadClass(name));\n+\t\t\t\t\t} catch (ClassNotFoundException e) {\n+\t\t\t\t\t\t// fallback to resolving it in this classloader\n+\t\t\t\t\t\t// for cases where the plugin uses org.apache.flink namespace\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t\treturn super.loadClass(name, resolve);\n+\t\t\t}\n+\t\t}\n+\n+\t\tprivate Class<?> resolveIfNeeded(final boolean resolve, final Class<?> loadedClass) {\n+\t\t\tif (resolve) {\n+\t\t\t\tresolveClass(loadedClass);\n+\t\t\t}\n+\t\t\treturn loadedClass;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic URL getResource(final String name) {\n+\t\t\tif (isAllowedFlinkResource(name)) {\n+\t\t\t\treturn flinkClassLoader.getResource(name);\n+\t\t\t}\n+\n+\t\t\tURL urlClassLoaderResource = findResource(name);\n+\n+\t\t\tif (urlClassLoaderResource != null) {\n+\t\t\t\treturn urlClassLoaderResource;\n+\t\t\t}\n+\n+\t\t\treturn null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1bd37255a1fbdffba63def90f85f9c1a0557d32"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2OTMxNDk0OnYy", "diffSide": "RIGHT", "path": "flink-tests/src/test/java/org/apache/flink/test/plugin/PluginLoaderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODoxMzoxM1rOFeQ_Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwODoxMzoxM1rOFeQ_Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI3OTkxNQ==", "bodyText": "Why have all the tests changed in this commit?", "url": "https://github.com/apache/flink/pull/10845#discussion_r367279915", "createdAt": "2020-01-16T08:13:13Z", "author": {"login": "pnowojski"}, "path": "flink-tests/src/test/java/org/apache/flink/test/plugin/PluginLoaderTest.java", "diffHunk": "@@ -21,6 +21,7 @@\n import org.apache.flink.core.plugin.PluginDescriptor;\n import org.apache.flink.core.plugin.PluginLoader;\n import org.apache.flink.test.plugin.jar.plugina.TestServiceA;\n+import org.apache.flink.test.plugin.spi.TestSpi;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1bd37255a1fbdffba63def90f85f9c1a0557d32"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1212, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}