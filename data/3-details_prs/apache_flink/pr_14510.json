{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2MTMwMTYz", "number": 14510, "title": "[FLINK-19656] [metrics] filter delimiter in metrics components", "bodyText": "What is the purpose of the change\nThis PR makes sure the configured per-reporter delimiter is filtered out of the metrics components names.\nBrief change log\n\nI made the configured reporter delimiter come through to the reporter instance itself. For this I made a default impl in AbstractReporter.open() that loads the configured delimiter and I made all the reporters extend AbstractReporter and I made open() overrides call the default impl. But for configuration name, I chose to copy the conf string \"scope.delimiter\" which was already defined twice in flink-core/ConfigConstants and flink-core/MetricsOptions rather than making flink-metrics depend on flink-core. Is that correct ?\nIn MetricsOptions, the deprecated \"metrics.scope.delimiter\" conf name was in use. I replaced with the new name \"scope.delimiter\" in a separate commit. But I find it weird that this conf name is duplicated between MetricsOptions and ConfigConstants\nI made a default impl in AbstractReporter.filterCharacter() that filters out the configured delimiter. I made sure all AbstractReporter subclasses (all the reporters) and overrides call this default impl.\n\nVerifying this change\nAdded AbstractReporterITCase test\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no unless MetricOptions is used publicly (I have fixed a deprecation in this file)\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\nAdded javadocs on AbstractReporter#open and AbstractReporter#filterCharacters to document the default impl and recall users to call super when they override.", "createdAt": "2020-12-28T15:14:08Z", "url": "https://github.com/apache/flink/pull/14510", "merged": true, "mergeCommit": {"oid": "56dbc24367979fdf9bd3f83ba115db1c5680effb"}, "closed": true, "closedAt": "2021-01-19T10:24:34Z", "author": {"login": "echauchot"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdqoD_cgBqjQxNTIzNjUxNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdxYULQgBqjQyMTg2ODkzODg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28ad12bd042be2b768dda8e46c8a19458df52a92", "author": {"user": {"login": "echauchot", "name": "Etienne Chauchot"}}, "url": "https://github.com/apache/flink/commit/28ad12bd042be2b768dda8e46c8a19458df52a92", "committedDate": "2020-12-28T14:30:41Z", "message": "[FLINK-19656] Apply deprecation of metrics.scope.delimiter configuration parameter"}, "afterCommit": {"oid": "0f3b4c5c88e5bde16c5785750dd7eeae845ed84a", "author": {"user": {"login": "echauchot", "name": "Etienne Chauchot"}}, "url": "https://github.com/apache/flink/commit/0f3b4c5c88e5bde16c5785750dd7eeae845ed84a", "committedDate": "2020-12-28T15:42:17Z", "message": "[FLINK-19656] Apply deprecation of metrics.scope.delimiter configuration parameter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f3b4c5c88e5bde16c5785750dd7eeae845ed84a", "author": {"user": {"login": "echauchot", "name": "Etienne Chauchot"}}, "url": "https://github.com/apache/flink/commit/0f3b4c5c88e5bde16c5785750dd7eeae845ed84a", "committedDate": "2020-12-28T15:42:17Z", "message": "[FLINK-19656] Apply deprecation of metrics.scope.delimiter configuration parameter"}, "afterCommit": {"oid": "932157724cf6bd963643aa9970c82ce0e0b2c8fe", "author": {"user": {"login": "echauchot", "name": "Etienne Chauchot"}}, "url": "https://github.com/apache/flink/commit/932157724cf6bd963643aa9970c82ce0e0b2c8fe", "committedDate": "2020-12-30T18:06:02Z", "message": "[FLINK-19656] Add a test to make sure that the configured delimiter is used in filtering variable names and values in getAllVariables()."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwOTM3NDk1", "url": "https://github.com/apache/flink/pull/14510#pullrequestreview-560937495", "createdAt": "2021-01-04T10:50:45Z", "commit": {"oid": "932157724cf6bd963643aa9970c82ce0e0b2c8fe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMDo1MDo0NlrOINtR8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMToyNjoyNFrOINuTZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI0NDI3NA==", "bodyText": "It is not required to extend this interface since the FrontMetricGroup works against the AbstractMetricGroup, and we currently don't want to extend this interface further.\n(This will also render some other changes moot)", "url": "https://github.com/apache/flink/pull/14510#discussion_r551244274", "createdAt": "2021-01-04T10:50:46Z", "author": {"login": "zentol"}, "path": "flink-metrics/flink-metrics-core/src/main/java/org/apache/flink/metrics/MetricGroup.java", "diffHunk": "@@ -186,6 +186,15 @@\n      */\n     Map<String, String> getAllVariables();\n \n+    /**\n+     * Returns a map of all variables and their associated value, for example {@code\n+     * {\"<host>\"=\"host-7\", \"<tm_id>\"=\"taskmanager-2\"}}.\n+     *\n+     * @param filter character filter which is applied to the variables and values if not null.\n+     * @return map of all variables and their associated value\n+     */\n+    Map<String, String> getAllVariables(CharacterFilter filter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "932157724cf6bd963643aa9970c82ce0e0b2c8fe"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI1MTk1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                CharacterFilter wrapWithDefaultFilter(CharacterFilter filter, char delimiter) {\n          \n          \n            \n                private CharacterFilter wrapWithDefaultFilter(CharacterFilter filter, char delimiter) {", "url": "https://github.com/apache/flink/pull/14510#discussion_r551251953", "createdAt": "2021-01-04T11:06:28Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroup.java", "diffHunk": "@@ -119,12 +122,28 @@ public AbstractMetricGroup(MetricRegistry registry, String[] scope, A parent) {\n         this.variables = new Map[registry.getNumberReporters() + 1];\n     }\n \n+    CharacterFilter wrapWithDefaultFilter(CharacterFilter filter, char delimiter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "932157724cf6bd963643aa9970c82ce0e0b2c8fe"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI1MjQzNA==", "bodyText": "I'd like to keep the reporterIndex as the first argument because all other arguments are somewhat dependent on it", "url": "https://github.com/apache/flink/pull/14510#discussion_r551252434", "createdAt": "2021-01-04T11:07:35Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroup.java", "diffHunk": "@@ -119,12 +122,28 @@ public AbstractMetricGroup(MetricRegistry registry, String[] scope, A parent) {\n         this.variables = new Map[registry.getNumberReporters() + 1];\n     }\n \n+    CharacterFilter wrapWithDefaultFilter(CharacterFilter filter, char delimiter) {\n+        CharacterFilter defaultFilter = input -> input.replace(delimiter, DEFAULT_REPLACEMENT);\n+        return filter == null\n+                ? defaultFilter\n+                : input -> defaultFilter.filterCharacters(filter.filterCharacters(input));\n+    }\n+\n     @Override\n     public Map<String, String> getAllVariables() {\n-        return internalGetAllVariables(0, Collections.emptySet());\n+        return internalGetAllVariables(null, 0, Collections.emptySet(), registry.getDelimiter());\n+    }\n+\n+    @Override\n+    public Map<String, String> getAllVariables(CharacterFilter filter) {\n+        return internalGetAllVariables(filter, 0, Collections.emptySet(), registry.getDelimiter());\n     }\n \n-    public Map<String, String> getAllVariables(int reporterIndex, Set<String> excludedVariables) {\n+    public Map<String, String> getAllVariables(\n+            CharacterFilter filter,\n+            int reporterIndex,\n+            Set<String> excludedVariables,\n+            char delimiter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "932157724cf6bd963643aa9970c82ce0e0b2c8fe"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI1NTk2Ng==", "bodyText": "There should also be a test that an exclusion that matches the filtered variable (e.g., k_1) is not applied. (i.e., that exclusions are always applied before they are filtered)\nThat said, I don't think that currently works correctly if a group retrieves variables from a parent, because they will already have the default filter applied to them.", "url": "https://github.com/apache/flink/pull/14510#discussion_r551255966", "createdAt": "2021-01-04T11:15:30Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroupTest.java", "diffHunk": "@@ -415,4 +419,119 @@ public void testGetAllVariablesDoesNotDeadlock() throws InterruptedException {\n             childRegisteringThread.join();\n         }\n     }\n+\n+    @Test\n+    public void testReporterDelimiterIsFiltered() throws Exception {\n+        MetricConfig metricConfig = new MetricConfig();\n+        metricConfig.setProperty(\n+                ConfigConstants.METRICS_REPORTER_SCOPE_DELIMITER, String.valueOf('*'));\n+\n+        MetricRegistryImpl metricRegistry =\n+                new MetricRegistryImpl(\n+                        MetricRegistryConfiguration.defaultMetricRegistryConfiguration(),\n+                        Collections.singletonList(\n+                                ReporterSetup.forReporter(\n+                                        \"test\", metricConfig, new TestReporter())));\n+        try {\n+            String metricName = \"Test*Counter\";\n+            TaskManagerMetricGroup metricGroup =\n+                    new TaskManagerMetricGroup(metricRegistry, \"hos*t\", \"i*d\");\n+            Counter counter = metricGroup.counter(metricName);\n+            TestReporter reporter = (TestReporter) metricRegistry.getReporters().get(0);\n+            final String expected =\n+                    String.format(\n+                            \"%s%s%s%s%s%s%s\",\n+                            \"hos*t\".replace('*', AbstractMetricGroup.DEFAULT_REPLACEMENT),\n+                            '*',\n+                            TaskExecutor.TASK_MANAGER_NAME.replace(\n+                                    '*', AbstractMetricGroup.DEFAULT_REPLACEMENT),\n+                            '*',\n+                            \"i*d\".replace('*', AbstractMetricGroup.DEFAULT_REPLACEMENT),\n+                            '*',\n+                            metricName.replace('*', AbstractMetricGroup.DEFAULT_REPLACEMENT));\n+            assertEquals(expected, reporter.getCounters().get(counter));\n+        } finally {\n+            metricRegistry.shutdown().get();\n+        }\n+    }\n+\n+    private static class TestReporter extends AbstractReporter {\n+        @Override\n+        public void open(MetricConfig config) {}\n+\n+        @Override\n+        public void close() {}\n+\n+        public Map<Counter, String> getCounters() {\n+            return counters;\n+        }\n+\n+        @Override\n+        public String filterCharacters(String input) {\n+            return input;\n+        }\n+    }\n+\n+    @Test\n+    public void testLowLevelGetAllVariablesWithFilterAndDelimiter() throws Exception {\n+        MetricRegistry registry = TestingMetricRegistry.builder().setNumberReporters(2).build();\n+\n+        AbstractMetricGroup<?> group =\n+                new GenericMetricGroup(registry, null, \"test\") {\n+                    @Override\n+                    protected void putVariables(Map<String, String> variables) {\n+                        variables.put(\"k*1\", \"v*1\");\n+                        variables.put(\"k*2\", \"v*2\");\n+                    }\n+                };\n+\n+        Map<String, String> allVariables;\n+        final CharacterFilter simpleFilter = input -> input.replace('1', 'a');\n+\n+        // test filter wrapping\n+        allVariables = group.getAllVariables(simpleFilter, 0, Collections.emptySet(), '*');\n+        assertThat(allVariables, IsMapContaining.hasKey(\"k_a\"));\n+        assertThat(allVariables, IsMapContaining.hasValue(\"v_a\"));\n+\n+        // test default filter, add exclusions to avoid cache hit\n+        allVariables = group.getAllVariables(null, 1, Collections.singleton(\"k*2\"), '*');\n+        assertThat(allVariables, IsMapContaining.hasKey(\"k_1\"));\n+        assertThat(allVariables, IsMapContaining.hasValue(\"v_1\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "932157724cf6bd963643aa9970c82ce0e0b2c8fe"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI2MTAzMQ==", "bodyText": "This implies that variables returned by parent.getAllVariables() already had a filter applied to them for a delimiter that may not be matching delimiter (i.e., registry.getDelimiter()).\nFurthermore, this also means that exclusion may not be applied correctly.\nI think we need to restrict the filtering to cases where the calls originate from a reporter.", "url": "https://github.com/apache/flink/pull/14510#discussion_r551261031", "createdAt": "2021-01-04T11:26:24Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/AbstractMetricGroup.java", "diffHunk": "@@ -137,11 +156,18 @@ public AbstractMetricGroup(MetricRegistry registry, String[] scope, A parent) {\n         // if no variables are excluded (which is the default!) we re-use the general variables map\n         // to save space\n         return internalGetAllVariables(\n-                excludedVariables.isEmpty() ? 0 : reporterIndex, excludedVariables);\n+                filter,\n+                excludedVariables.isEmpty() ? 0 : reporterIndex,\n+                excludedVariables,\n+                delimiter);\n     }\n \n     private Map<String, String> internalGetAllVariables(\n-            int cachingIndex, Set<String> excludedVariables) {\n+            CharacterFilter filter,\n+            int cachingIndex,\n+            Set<String> excludedVariables,\n+            char delimiter) {\n+        CharacterFilter newFilter = wrapWithDefaultFilter(filter, delimiter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "932157724cf6bd963643aa9970c82ce0e0b2c8fe"}, "originalPosition": 65}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94d081f186325c9902d37c8475afc5452f1bf3d2", "author": {"user": {"login": "echauchot", "name": "Etienne Chauchot"}}, "url": "https://github.com/apache/flink/commit/94d081f186325c9902d37c8475afc5452f1bf3d2", "committedDate": "2021-01-13T16:20:52Z", "message": "apply spotless"}, "afterCommit": {"oid": "37d19b610a94e37fdf6fd73b008521fbad799b5d", "author": {"user": {"login": "echauchot", "name": "Etienne Chauchot"}}, "url": "https://github.com/apache/flink/commit/37d19b610a94e37fdf6fd73b008521fbad799b5d", "committedDate": "2021-01-18T15:10:51Z", "message": "[FLINK-19656][metrics] Automatically replace delimiter characters in identifier and logical scope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82bdbb806b32df333113990b6df2df3e034418b3", "author": {"user": {"login": "echauchot", "name": "Etienne Chauchot"}}, "url": "https://github.com/apache/flink/commit/82bdbb806b32df333113990b6df2df3e034418b3", "committedDate": "2021-01-18T15:19:04Z", "message": "[FLINK-19656][metrics] Enforce non-null character filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8954fbfdc02b534424f218ef603f5c3be429f7b7", "author": {"user": {"login": "echauchot", "name": "Etienne Chauchot"}}, "url": "https://github.com/apache/flink/commit/8954fbfdc02b534424f218ef603f5c3be429f7b7", "committedDate": "2021-01-18T15:19:04Z", "message": "[FLINK-19656][metrics] Automatically replace delimiter characters in identifier and logical scope"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37d19b610a94e37fdf6fd73b008521fbad799b5d", "author": {"user": {"login": "echauchot", "name": "Etienne Chauchot"}}, "url": "https://github.com/apache/flink/commit/37d19b610a94e37fdf6fd73b008521fbad799b5d", "committedDate": "2021-01-18T15:10:51Z", "message": "[FLINK-19656][metrics] Automatically replace delimiter characters in identifier and logical scope"}, "afterCommit": {"oid": "8954fbfdc02b534424f218ef603f5c3be429f7b7", "author": {"user": {"login": "echauchot", "name": "Etienne Chauchot"}}, "url": "https://github.com/apache/flink/commit/8954fbfdc02b534424f218ef603f5c3be429f7b7", "committedDate": "2021-01-18T15:19:04Z", "message": "[FLINK-19656][metrics] Automatically replace delimiter characters in identifier and logical scope"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3469, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}