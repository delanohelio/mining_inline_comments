{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MzAxOTQw", "number": 11536, "title": "[FLINK-16807][e2e] Improve reporting for instantiation errors ", "bodyText": "If no resource can be instantiated we now throw an exception with a suppressed exception for every resource candidate that could not be instantiated.\nBefore you'd get a generic exception, with the actual cause only being logged.\nAdditionally this Pr consolidates logging to significantly reduce code duplication.", "createdAt": "2020-03-26T17:09:04Z", "url": "https://github.com/apache/flink/pull/11536", "merged": true, "mergeCommit": {"oid": "7c3b065e4af44e3ab8ebc78e5c5e689c664e98ed"}, "closed": true, "closedAt": "2020-04-01T07:49:32Z", "author": {"login": "zentol"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcR2UQyAFqTM4MzE2MjgwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTS3EWgBqjMxODY2MzQwNzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTYyODA4", "url": "https://github.com/apache/flink/pull/11536#pullrequestreview-383162808", "createdAt": "2020-03-27T19:59:47Z", "commit": {"oid": "02744178a91af131c0be0337a18e7cc65303495d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOTo1OTo0N1rOF9AEqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOTo1OTo0N1rOF9AEqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUwODY0OQ==", "bodyText": "(General comment: I'm not familiar enough with this part of the code yet to feel really qualified for a comment here, so I'm potentially shooting in the dark with this feedback item):\nAre we sure that we can always ignore the Exception e?\nDoes it make sense to add it as a cause to the RuntimeException, or log it on DEBUG level?\nThe CI on Azure for this PR was failing with the following error:\n[INFO] Running org.apache.flink.tests.util.kafka.StreamingKafkaITCase\n[ERROR] Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.006 s <<< FAILURE! - in org.apache.flink.tests.util.kafka.StreamingKafkaITCase\n[ERROR] testKafka[0: kafka-version:0.10.2.0](org.apache.flink.tests.util.kafka.StreamingKafkaITCase)  Time elapsed: 0.004 s  <<< ERROR!\njava.lang.RuntimeException: Could not instantiate instance.\n\tat org.apache.flink.tests.util.kafka.StreamingKafkaITCase.<init>(StreamingKafkaITCase.java:72)\n\n[ERROR] testKafka[1: kafka-version:0.11.0.2](org.apache.flink.tests.util.kafka.StreamingKafkaITCase)  Time elapsed: 0.001 s  <<< ERROR!\njava.lang.RuntimeException: Could not instantiate instance.\n\tat org.apache.flink.tests.util.kafka.StreamingKafkaITCase.<init>(StreamingKafkaITCase.java:72)\n\n[ERROR] testKafka[2: kafka-version:2.2.0](org.apache.flink.tests.util.kafka.StreamingKafkaITCase)  Time elapsed: 0 s  <<< ERROR!\njava.lang.RuntimeException: Could not instantiate instance.\n\tat org.apache.flink.tests.util.kafka.StreamingKafkaITCase.<init>(StreamingKafkaITCase.java:72)\n\nI would have assumed that this PR is improving the exception output for this case specifically.\nI wonder if throwing a RuntimeException here is the right approach? Maybe we should have a checked exception type for this, so that we are forced to handle it at the call site (FlinkResource.get(), where we could rethrow with additonal information (\"Error instantiating FlinkResource\")).", "url": "https://github.com/apache/flink/pull/11536#discussion_r399508649", "createdAt": "2020-03-27T19:59:47Z", "author": {"login": "rmetzger"}, "path": "flink-end-to-end-tests/flink-end-to-end-tests-common/src/main/java/org/apache/flink/tests/util/util/FactoryUtils.java", "diffHunk": "@@ -43,24 +45,43 @@\n \t * @throws RuntimeException if no or multiple resources could be instantiated\n \t * @return created instance\n \t */\n-\tpublic static <R, F> R loadAndInvokeFactory(final Class<F> factoryInterface, final Function<F, Optional<R>> factoryInvoker, final Supplier<F> defaultProvider) {\n+\tpublic static <R, F> R loadAndInvokeFactory(final Class<F> factoryInterface, final FactoryInvoker<F, R> factoryInvoker, final Supplier<F> defaultProvider) {\n \t\tfinal ServiceLoader<F> factories = ServiceLoader.load(factoryInterface);\n \n-\t\tfinal List<R> resources = StreamSupport.stream(factories.spliterator(), false)\n-\t\t\t.map(factoryInvoker)\n-\t\t\t.filter(Optional::isPresent)\n-\t\t\t.map(Optional::get)\n-\t\t\t.collect(Collectors.toList());\n+\t\tfinal List<R> instantiatedResources = new ArrayList<>();\n+\t\tfinal List<Exception> errorsDuringInitialization = new ArrayList<>();\n+\t\tfor (F factory : factories) {\n+\t\t\ttry {\n+\t\t\t\tR resource = factoryInvoker.invoke(factory);\n+\t\t\t\tinstantiatedResources.add(resource);\n+\t\t\t\tLOG.info(\"Instantiated {}.\", resource.getClass().getSimpleName());\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tLOG.debug(\"Factory {} could not instantiate instance.\", factory.getClass().getSimpleName(), e);\n+\t\t\t\terrorsDuringInitialization.add(e);\n+\t\t\t}\n+\t\t}\n \n-\t\tif (resources.size() == 1) {\n-\t\t\treturn resources.get(0);\n+\t\tif (instantiatedResources.size() == 1) {\n+\t\t\treturn instantiatedResources.get(0);\n \t\t}\n \n-\t\tif (resources.isEmpty()) {\n-\t\t\treturn factoryInvoker.apply(defaultProvider.get())\n-\t\t\t\t.orElseThrow(() -> new RuntimeException(\"Could not instantiate instance using default factory.\"));\n+\t\tif (instantiatedResources.isEmpty()) {\n+\t\t\ttry {\n+\t\t\t\treturn factoryInvoker.invoke(defaultProvider.get());\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tfinal RuntimeException exception = new RuntimeException(\"Could not instantiate instance.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02744178a91af131c0be0337a18e7cc65303495d"}, "originalPosition": 66}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "802f318ba4f27032ff3dc74372dfd2e6ede50bb8", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/802f318ba4f27032ff3dc74372dfd2e6ede50bb8", "committedDate": "2020-03-27T21:29:12Z", "message": "[FLINK-16837][build] Disable trimStackTrace in surefire-plugin"}, "afterCommit": {"oid": "a96a67f9c1aeacc4b6e8c63149597c0beb39e771", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/a96a67f9c1aeacc4b6e8c63149597c0beb39e771", "committedDate": "2020-03-30T08:04:19Z", "message": "[FLINK-16837][build] Disable trimStackTrace in surefire-plugin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0Nzg5NDM4", "url": "https://github.com/apache/flink/pull/11536#pullrequestreview-384789438", "createdAt": "2020-03-31T14:27:41Z", "commit": {"oid": "a96a67f9c1aeacc4b6e8c63149597c0beb39e771"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "550035771736b29f89feae4bb60192ff9a4d924c", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/550035771736b29f89feae4bb60192ff9a4d924c", "committedDate": "2020-04-01T07:48:56Z", "message": "[FLINK-16807][e2e] Improve reporting for instantiation errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4199584a0d1f4371db55b3e65784ede66a1bd103", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/4199584a0d1f4371db55b3e65784ede66a1bd103", "committedDate": "2020-04-01T07:48:56Z", "message": "[FLINK-16808][e2e] Consolidated logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dd19358b2b14a413ff53c7b1fd98581df675747", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/5dd19358b2b14a413ff53c7b1fd98581df675747", "committedDate": "2020-04-01T07:48:56Z", "message": "[FLINK-16837][build] Disable trimStackTrace in surefire-plugin"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a96a67f9c1aeacc4b6e8c63149597c0beb39e771", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/a96a67f9c1aeacc4b6e8c63149597c0beb39e771", "committedDate": "2020-03-30T08:04:19Z", "message": "[FLINK-16837][build] Disable trimStackTrace in surefire-plugin"}, "afterCommit": {"oid": "5dd19358b2b14a413ff53c7b1fd98581df675747", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/5dd19358b2b14a413ff53c7b1fd98581df675747", "committedDate": "2020-04-01T07:48:56Z", "message": "[FLINK-16837][build] Disable trimStackTrace in surefire-plugin"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2604, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}