{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNzMxOTQw", "number": 12320, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1MjowNVrOEBKE6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1OTozN1rOEBKF_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjQ5MTMwOnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-kafka-0.11/src/test/java/org/apache/flink/streaming/connectors/kafka/table/Kafka011DynamicTableFactoryTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1MjowNVrOGc240A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1MjowNVrOGc240A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMjU5Mg==", "bodyText": "fix wrong indention here and at other locations", "url": "https://github.com/apache/flink/pull/12320#discussion_r432912592", "createdAt": "2020-05-31T05:52:05Z", "author": {"login": "twalthr"}, "path": "flink-connectors/flink-connector-kafka-0.11/src/test/java/org/apache/flink/streaming/connectors/kafka/table/Kafka011DynamicTableFactoryTest.java", "diffHunk": "@@ -82,12 +82,12 @@ protected KafkaDynamicSinkBase getExpectedSink(\n \t\t\tString topic,\n \t\t\tProperties properties,\n \t\t\tOptional<FlinkKafkaPartitioner<RowData>> partitioner,\n-\t\t\tSinkFormat<SerializationSchema<RowData>> sinkFormat) {\n+\t\t\tEncodingFormat<SerializationSchema<RowData>> encodingFormat) {\n \t\treturn new Kafka011DynamicSink(\n \t\t\t\tconsumedDataType,\n \t\t\t\ttopic,\n \t\t\t\tproperties,\n \t\t\t\tpartitioner,\n-\t\t\t\tsinkFormat);\n+\t\t\tencodingFormat);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80bfdeac6274c0cfa3218da26c88f7e05d517f86"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjQ5MTY0OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSinkBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1Mjo0OFrOGc24-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1Mjo0OFrOGc24-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMjYzNA==", "bodyText": "update error message?", "url": "https://github.com/apache/flink/pull/12320#discussion_r432912634", "createdAt": "2020-05-31T05:52:48Z", "author": {"login": "twalthr"}, "path": "flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSinkBase.java", "diffHunk": "@@ -63,23 +63,23 @@ protected KafkaDynamicSinkBase(\n \t\t\tString topic,\n \t\t\tProperties properties,\n \t\t\tOptional<FlinkKafkaPartitioner<RowData>> partitioner,\n-\t\t\tSinkFormat<SerializationSchema<RowData>> sinkFormat) {\n+\t\t\tEncodingFormat<SerializationSchema<RowData>> encodingFormat) {\n \t\tthis.consumedDataType = Preconditions.checkNotNull(consumedDataType, \"Consumed data type must not be null.\");\n \t\tthis.topic = Preconditions.checkNotNull(topic, \"Topic must not be null.\");\n \t\tthis.properties = Preconditions.checkNotNull(properties, \"Properties must not be null.\");\n \t\tthis.partitioner = Preconditions.checkNotNull(partitioner, \"Partitioner must not be null.\");\n-\t\tthis.sinkFormat = Preconditions.checkNotNull(sinkFormat, \"Sink format must not be null.\");\n+\t\tthis.encodingFormat = Preconditions.checkNotNull(encodingFormat, \"Sink format must not be null.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80bfdeac6274c0cfa3218da26c88f7e05d517f86"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjQ5MTk2OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSourceBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1Mzo0NVrOGc25Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1Mzo0NVrOGc25Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMjY4Mw==", "bodyText": "fix wrong indention and remove \"Scan\" from Javadoc?", "url": "https://github.com/apache/flink/pull/12320#discussion_r432912683", "createdAt": "2020-05-31T05:53:45Z", "author": {"login": "twalthr"}, "path": "flink-connectors/flink-connector-kafka-base/src/main/java/org/apache/flink/streaming/connectors/kafka/table/KafkaDynamicSourceBase.java", "diffHunk": "@@ -85,7 +85,7 @@\n \t * @param outputDataType         Source produced data type\n \t * @param topic                  Kafka topic to consume.\n \t * @param properties             Properties for the Kafka consumer.\n-\t * @param scanFormat             Scan format for decoding records from Kafka.\n+\t * @param decodingFormat             Scan format for decoding records from Kafka.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80bfdeac6274c0cfa3218da26c88f7e05d517f86"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjQ5MjU1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/DecodingFormat.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1NToyMVrOGc25fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1NToyMVrOGc25fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMjc2NQ==", "bodyText": "nit: for reading rows", "url": "https://github.com/apache/flink/pull/12320#discussion_r432912765", "createdAt": "2020-05-31T05:55:21Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/DecodingFormat.java", "diffHunk": "@@ -19,19 +19,19 @@\n package org.apache.flink.table.connector.format;\n \n import org.apache.flink.annotation.PublicEvolving;\n-import org.apache.flink.table.connector.source.ScanTableSource;\n+import org.apache.flink.table.connector.source.DynamicTableSource;\n import org.apache.flink.table.types.DataType;\n \n /**\n- * A {@link Format} for a {@link ScanTableSource}.\n+ * A {@link Format} for a {@link DynamicTableSource} to reading rows.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80bfdeac6274c0cfa3218da26c88f7e05d517f86"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjQ5Mjk1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/Format.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1NjozNFrOGc25sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1NjozNFrOGc25sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMjgxNw==", "bodyText": "we can remove the e.g. it is only for those two locations now", "url": "https://github.com/apache/flink/pull/12320#discussion_r432912817", "createdAt": "2020-05-31T05:56:34Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/connector/format/Format.java", "diffHunk": "@@ -34,15 +34,15 @@\n  *\n  * <p>Formats can be distinguished along two dimensions:\n  * <ul>\n- *     <li>Context in which the format is applied (e.g. {@link ScanTableSource} or {@link DynamicTableSink}).\n+ *     <li>Context in which the format is applied (e.g. {@link DynamicTableSource} or {@link DynamicTableSink}).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80bfdeac6274c0cfa3218da26c88f7e05d517f86"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjQ5NDA1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-common/src/test/java/org/apache/flink/table/factories/TestDynamicTableFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1OTozN1rOGc26Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTo1OTozN1rOGc26Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMjk1OA==", "bodyText": "fix formatting here and below", "url": "https://github.com/apache/flink/pull/12320#discussion_r432912958", "createdAt": "2020-05-31T05:59:37Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-common/src/test/java/org/apache/flink/table/factories/TestDynamicTableFactory.java", "diffHunk": "@@ -134,13 +134,14 @@ public String factoryIdentifier() {\n \tpublic static class DynamicTableSourceMock implements ScanTableSource {\n \n \t\tpublic final String target;\n-\t\tpublic final @Nullable ScanFormat<DeserializationSchema<RowData>> sourceKeyFormat;\n-\t\tpublic final ScanFormat<DeserializationSchema<RowData>> sourceValueFormat;\n+\t\tpublic final @Nullable\n+\t\tDecodingFormat<DeserializationSchema<RowData>> sourceKeyFormat;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80bfdeac6274c0cfa3218da26c88f7e05d517f86"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4451, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}