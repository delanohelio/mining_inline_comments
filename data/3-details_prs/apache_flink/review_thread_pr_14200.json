{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NDgxNTU1", "number": 14200, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMzo0Mjo0NVrOE9DPCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMzo0Mjo0NVrOE9DPCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNDUxNTk0OnYy", "diffSide": "LEFT", "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/common/CommonTemporalTableJoinRule.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMzo0Mjo0NVrOH5iCJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMzo0NjoyMVrOH5iF8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA4ODQ4NA==", "bodyText": "Do we check the period type in other place ?", "url": "https://github.com/apache/flink/pull/14200#discussion_r530088484", "createdAt": "2020-11-25T03:42:45Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/common/CommonTemporalTableJoinRule.scala", "diffHunk": "@@ -44,20 +44,15 @@ trait CommonTemporalTableJoinRule {\n \n     // period specification check\n     snapshot.getPeriod match {\n-      // it's left table's field, pass\n-      case r: RexFieldAccess if r.getReferenceExpr.isInstanceOf[RexCorrelVariable] =>\n+      // it should be left table's field and is a time attribute\n+      case r: RexFieldAccess\n+        if r.getType.isInstanceOf[TimeIndicatorRelDataType] &&\n+          r.getReferenceExpr.isInstanceOf[RexCorrelVariable] => // pass\n       case _ =>\n         throw new TableException(\"Temporal table join currently only supports \" +\n-          \"'FOR SYSTEM_TIME AS OF' left table's time attribute field, doesn't support 'PROCTIME()'\")\n+          \"'FOR SYSTEM_TIME AS OF' left table's time attribute field.\")\n     }\n \n-    snapshot.getPeriod.getType match {\n-      // supports both event-time and processing time\n-      case t: TimeIndicatorRelDataType =>\n-      case _ =>\n-        throw new TableException(\"Temporal table join currently only supports \" +\n-          \"'FOR SYSTEM_TIME AS OF' left table's time attribute field\")\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed0be72260d4b1a51d4d17ead21ee88eb84aa6f2"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA4OTQ1OA==", "bodyText": "I merged it into the above check.", "url": "https://github.com/apache/flink/pull/14200#discussion_r530089458", "createdAt": "2020-11-25T03:46:21Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/plan/rules/common/CommonTemporalTableJoinRule.scala", "diffHunk": "@@ -44,20 +44,15 @@ trait CommonTemporalTableJoinRule {\n \n     // period specification check\n     snapshot.getPeriod match {\n-      // it's left table's field, pass\n-      case r: RexFieldAccess if r.getReferenceExpr.isInstanceOf[RexCorrelVariable] =>\n+      // it should be left table's field and is a time attribute\n+      case r: RexFieldAccess\n+        if r.getType.isInstanceOf[TimeIndicatorRelDataType] &&\n+          r.getReferenceExpr.isInstanceOf[RexCorrelVariable] => // pass\n       case _ =>\n         throw new TableException(\"Temporal table join currently only supports \" +\n-          \"'FOR SYSTEM_TIME AS OF' left table's time attribute field, doesn't support 'PROCTIME()'\")\n+          \"'FOR SYSTEM_TIME AS OF' left table's time attribute field.\")\n     }\n \n-    snapshot.getPeriod.getType match {\n-      // supports both event-time and processing time\n-      case t: TimeIndicatorRelDataType =>\n-      case _ =>\n-        throw new TableException(\"Temporal table join currently only supports \" +\n-          \"'FOR SYSTEM_TIME AS OF' left table's time attribute field\")\n-    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA4ODQ4NA=="}, "originalCommit": {"oid": "ed0be72260d4b1a51d4d17ead21ee88eb84aa6f2"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4747, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}