{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NDEzNjY0", "number": 12651, "title": "[FLINK-18272][table-runtime-blink] Add retry logic to FileSystemLooku\u2026", "bodyText": "\u2026pFunction\n\nWhat is the purpose of the change\nAdd some retry logic to FileSystemLookupFunction, which is useful if we try to reload the cache while the underlying files are being updated.\nBrief change log\n\nAdd retry logic to FileSystemLookupFunction\nWhen we hit exceptions when loading the cache, will sleep for a while and retry. Max number of retries is 3.\n\nVerifying this change\nManually verified the change\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? NA", "createdAt": "2020-06-15T09:37:14Z", "url": "https://github.com/apache/flink/pull/12651", "merged": true, "mergeCommit": {"oid": "40621c733c1647c5745d2795eaa32b6cc7dae3ae"}, "closed": true, "closedAt": "2020-06-18T03:32:22Z", "author": {"login": "lirui-apache"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcruL4PAFqTQzMTE2NDYxMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsV7oCgFqTQzMjkxNjU3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMTY0NjEy", "url": "https://github.com/apache/flink/pull/12651#pullrequestreview-431164612", "createdAt": "2020-06-16T05:13:25Z", "commit": {"oid": "c257450f6449b99af763adb8c7f15487f676d0d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNToxMzoyNVrOGkLf6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNToxMzoyNVrOGkLf6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU5MDMxMw==", "bodyText": "10 sec?", "url": "https://github.com/apache/flink/pull/12651#discussion_r440590313", "createdAt": "2020-06-16T05:13:25Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/filesystem/FileSystemLookupFunction.java", "diffHunk": "@@ -59,6 +59,11 @@\n \n \tprivate static final Logger LOG = LoggerFactory.getLogger(FileSystemLookupFunction.class);\n \n+\t// the max number of retries before throwing exception, in case of failure to load the table into cache\n+\tprivate static final int MAX_RETRIES = 3;\n+\t// interval between retries\n+\tprivate static final Duration RETRY_INTERVAL = Duration.ofSeconds(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c257450f6449b99af763adb8c7f15487f676d0d7"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMTY1MTU1", "url": "https://github.com/apache/flink/pull/12651#pullrequestreview-431165155", "createdAt": "2020-06-16T05:15:07Z", "commit": {"oid": "c257450f6449b99af763adb8c7f15487f676d0d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNToxNTowN1rOGkLheg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNToxNTowN1rOGkLheg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU5MDcxNA==", "bodyText": "One single line to numRetry ++", "url": "https://github.com/apache/flink/pull/12651#discussion_r440590714", "createdAt": "2020-06-16T05:15:07Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/filesystem/FileSystemLookupFunction.java", "diffHunk": "@@ -143,26 +148,41 @@ private void checkCacheReload() {\n \t\t} else {\n \t\t\tLOG.info(\"Populating lookup join cache\");\n \t\t}\n-\t\tcache.clear();\n-\t\ttry {\n-\t\t\tT[] inputSplits = inputFormat.createInputSplits(1);\n-\t\t\tGenericRowData reuse = new GenericRowData(producedNames.length);\n-\t\t\tlong count = 0;\n-\t\t\tfor (T split : inputSplits) {\n-\t\t\t\tinputFormat.open(split);\n-\t\t\t\twhile (!inputFormat.reachedEnd()) {\n-\t\t\t\t\tRowData row = inputFormat.nextRecord(reuse);\n-\t\t\t\t\tcount++;\n-\t\t\t\t\tRow key = extractKey(row);\n-\t\t\t\t\tList<RowData> rows = cache.computeIfAbsent(key, k -> new ArrayList<>());\n-\t\t\t\t\trows.add(serializer.copy(row));\n+\t\tint numRetry = 0;\n+\t\twhile (true) {\n+\t\t\tcache.clear();\n+\t\t\ttry {\n+\t\t\t\tT[] inputSplits = inputFormat.createInputSplits(1);\n+\t\t\t\tGenericRowData reuse = new GenericRowData(producedNames.length);\n+\t\t\t\tlong count = 0;\n+\t\t\t\tfor (T split : inputSplits) {\n+\t\t\t\t\tinputFormat.open(split);\n+\t\t\t\t\twhile (!inputFormat.reachedEnd()) {\n+\t\t\t\t\t\tRowData row = inputFormat.nextRecord(reuse);\n+\t\t\t\t\t\tcount++;\n+\t\t\t\t\t\tRow key = extractKey(row);\n+\t\t\t\t\t\tList<RowData> rows = cache.computeIfAbsent(key, k -> new ArrayList<>());\n+\t\t\t\t\t\trows.add(serializer.copy(row));\n+\t\t\t\t\t}\n+\t\t\t\t\tinputFormat.close();\n+\t\t\t\t}\n+\t\t\t\tnextLoadTime = System.currentTimeMillis() + getCacheTTL().toMillis();\n+\t\t\t\tLOG.info(\"Loaded {} row(s) into lookup join cache\", count);\n+\t\t\t\treturn;\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tif (numRetry >= MAX_RETRIES) {\n+\t\t\t\t\tthrow new FlinkRuntimeException(\n+\t\t\t\t\t\t\tString.format(\"Failed to load table into cache after %d retries\", numRetry), e);\n+\t\t\t\t}\n+\t\t\t\tlong toSleep = ++numRetry * RETRY_INTERVAL.toMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c257450f6449b99af763adb8c7f15487f676d0d7"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6ed43338a7b9692d6502332ff83903029974a5b", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/f6ed43338a7b9692d6502332ff83903029974a5b", "committedDate": "2020-06-17T10:36:28Z", "message": "[FLINK-18272][table-runtime-blink] Add retry logic to FileSystemLookupFunction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cba6e4d4661cd4eb5d112f8963fbc3256cc8327", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/6cba6e4d4661cd4eb5d112f8963fbc3256cc8327", "committedDate": "2020-06-17T10:38:36Z", "message": "address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c257450f6449b99af763adb8c7f15487f676d0d7", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/c257450f6449b99af763adb8c7f15487f676d0d7", "committedDate": "2020-06-15T09:05:44Z", "message": "[FLINK-18272][table-runtime-blink] Add retry logic to FileSystemLookupFunction"}, "afterCommit": {"oid": "6cba6e4d4661cd4eb5d112f8963fbc3256cc8327", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/6cba6e4d4661cd4eb5d112f8963fbc3256cc8327", "committedDate": "2020-06-17T10:38:36Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyOTE2NTc5", "url": "https://github.com/apache/flink/pull/12651#pullrequestreview-432916579", "createdAt": "2020-06-18T03:31:53Z", "commit": {"oid": "6cba6e4d4661cd4eb5d112f8963fbc3256cc8327"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3461, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}