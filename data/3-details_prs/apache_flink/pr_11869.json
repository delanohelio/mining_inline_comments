{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3Njc2OTc3", "number": 11869, "title": "[FLINK-17111][table] Support SHOW VIEWS in Flink SQL", "bodyText": "What is the purpose of the change\nFLINK-17106 introduces create/drop view in Flink SQL. But we can't list views from TableEnvironment or SQL. This PR supports SHOW VIEWS in Flink SQL. BTW: We follows the Hive style which lists all tables and views with SHOW TABLES and lists only views with SHOW VIEWS.\nBrief change log\n\n546d367 Add show views syntax in sql parser\nfe6f4d9 Add listViews interface in TableEnvironment\n39fb3f9 hotfix create/drop view in batch mode for legacy planner\n05288fe Support SHOW VIEWS in blink planner\n28223e2 Support SHOW VIEWS in legacy planner\n\nVerifying this change\nThis change added tests\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-04-23T04:44:57Z", "url": "https://github.com/apache/flink/pull/11869", "merged": true, "mergeCommit": {"oid": "ea5111607cb3557308de7665b25c6f737132d1b3"}, "closed": true, "closedAt": "2020-04-28T13:52:17Z", "author": {"login": "docete"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaUAz5AH2gAyNDA3Njc2OTc3OjU0NmQzNjdmMmUzZDdjMGZkY2NjMWU0OGU2NDUzNDI5ZjFmYjQ0YmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccEOxZgFqTQwMTg1NjM3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "546d367f2e3d7c0fdccc1e48e6453429f1fb44bd", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/546d367f2e3d7c0fdccc1e48e6453429f1fb44bd", "committedDate": "2020-04-23T03:07:06Z", "message": "[FLINK-17111][table] Add show views syntax support in parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe6f4d971e7b0121f2c4a60898ffed7c5bde2551", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/fe6f4d971e7b0121f2c4a60898ffed7c5bde2551", "committedDate": "2020-04-23T03:07:06Z", "message": "[FLINK-17111][table] Add listViews interface to TableEnvironment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39fb3f948d2364e8117c35b593ba129ad8f7ce92", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/39fb3f948d2364e8117c35b593ba129ad8f7ce92", "committedDate": "2020-04-23T04:28:35Z", "message": "[hotfix][table-planner-legacy] Support create/drop view in batch mode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05288fe00da8854b0c6f2f16d1006d8e2bc11b51", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/05288fe00da8854b0c6f2f16d1006d8e2bc11b51", "committedDate": "2020-04-23T04:28:46Z", "message": "[FLINK-17111][table-planner-blink] Support SHOW VIEWS in blink planner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28223e277ee06677a7c973300e3e1c85902874fd", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/28223e277ee06677a7c973300e3e1c85902874fd", "committedDate": "2020-04-23T04:32:16Z", "message": "[FLINK-17111][table-planner] Support SHOW VIEWS in legacy planner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "425e26536e512e5fec88852a462fdf88e6e1a562", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/425e26536e512e5fec88852a462fdf88e6e1a562", "committedDate": "2020-04-23T07:22:34Z", "message": "fixup: fix python ut"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5Njg0NDI5", "url": "https://github.com/apache/flink/pull/11869#pullrequestreview-399684429", "createdAt": "2020-04-24T06:56:02Z", "commit": {"oid": "425e26536e512e5fec88852a462fdf88e6e1a562"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNjo1NjowMlrOGLJR5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzowOTo0MFrOGLJs8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMzOTU1Nw==", "bodyText": "add @see #listTemporaryViews()", "url": "https://github.com/apache/flink/pull/11869#discussion_r414339557", "createdAt": "2020-04-24T06:56:02Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/TableEnvironment.java", "diffHunk": "@@ -756,6 +756,13 @@ default Table fromValues(DataType rowType, Object... values) {\n \t */\n \tString[] listTables();\n \n+\t/**\n+\t * Gets the names of all views available in the current namespace (the current database of the current catalog).\n+\t * It returns both temporary and permanent views.\n+\t * @return A list of the names of all registered views in the current database of the current catalog.\n+\t */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "425e26536e512e5fec88852a462fdf88e6e1a562"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0MzM4MQ==", "bodyText": "add a method listTemporaryViews(String catalogName, String databaseName), listTemporaryViews() method and here can use this method", "url": "https://github.com/apache/flink/pull/11869#discussion_r414343381", "createdAt": "2020-04-24T07:03:46Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/catalog/CatalogManager.java", "diffHunk": "@@ -415,6 +415,37 @@ public CatalogBaseTable getTable() {\n \t\t\t});\n \t}\n \n+\t/**\n+\t * Returns an array of names of all views(both temporary and permanent) registered in\n+\t * the namespace of the current catalog and database.\n+\t *\n+\t * @return names of all registered views\n+\t */\n+\tpublic Set<String> listViews() {\n+\t\treturn listViews(getCurrentCatalog(), getCurrentDatabase());\n+\t}\n+\n+\t/**\n+\t * Returns an array of names of all views(both temporary and permanent) registered in\n+\t * the namespace of the current catalog and database.\n+\t *\n+\t * @return names of registered views\n+\t */\n+\tpublic Set<String> listViews(String catalogName, String databaseName) {\n+\t\tCatalog currentCatalog = catalogs.get(getCurrentCatalog());\n+\n+\t\ttry {\n+\t\t\treturn Stream.concat(\n+\t\t\t\tcurrentCatalog.listViews(getCurrentDatabase()).stream(),\n+\t\t\t\tlistTemporaryTablesInternal(catalogName, databaseName)\n+\t\t\t\t\t.filter(e -> e.getValue() instanceof CatalogView)\n+\t\t\t\t\t.map(e -> e.getKey().getObjectName())\n+\t\t\t).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "425e26536e512e5fec88852a462fdf88e6e1a562"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0NTUzNQ==", "bodyText": "add a test \"CREATE TEMPORARY VIEW ...\"", "url": "https://github.com/apache/flink/pull/11869#discussion_r414345535", "createdAt": "2020-04-24T07:07:52Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-planner/src/test/scala/org/apache/flink/table/api/batch/BatchTableEnvironmentTest.scala", "diffHunk": "@@ -257,6 +257,64 @@ class BatchTableEnvironmentTest extends TableTestBase {\n     util.tableEnv.executeSql(\"select * from MyTable\")\n   }\n \n+  @Test\n+  def testExecuteSqlWithCreateDropView(): Unit = {\n+    val util = batchTestUtil()\n+\n+    val createTableStmt =\n+      \"\"\"\n+        |CREATE TABLE tbl1 (\n+        |  a bigint,\n+        |  b int,\n+        |  c varchar\n+        |) with (\n+        |  'connector' = 'COLLECTION',\n+        |  'is-bounded' = 'true'\n+        |)\n+      \"\"\".stripMargin\n+    val tableResult1 = util.tableEnv.executeSql(createTableStmt)\n+    assertEquals(ResultKind.SUCCESS, tableResult1.getResultKind)\n+    assertTrue(util.tableEnv.getCatalog(util.tableEnv.getCurrentCatalog).get()\n+      .tableExists(ObjectPath.fromString(s\"${util.tableEnv.getCurrentDatabase}.tbl1\")))\n+\n+    val tableResult2 = util.tableEnv.executeSql(\"CREATE VIEW view1 AS SELECT * FROM tbl1\")\n+    assertEquals(ResultKind.SUCCESS, tableResult2.getResultKind)\n+    assertTrue(util.tableEnv.getCatalog(util.tableEnv.getCurrentCatalog).get()\n+      .tableExists(ObjectPath.fromString(s\"${util.tableEnv.getCurrentDatabase}.view1\")))\n+\n+    val tableResult3 = util.tableEnv.executeSql(\"DROP VIEW view1\")\n+    assertEquals(ResultKind.SUCCESS, tableResult3.getResultKind)\n+    assertFalse(util.tableEnv.getCatalog(util.tableEnv.getCurrentCatalog).get()\n+      .tableExists(ObjectPath.fromString(s\"${util.tableEnv.getCurrentDatabase}.view1\")))\n+  }\n+\n+  @Test\n+  def testExecuteSqlWithShowViews(): Unit = {\n+    val util = batchTestUtil()\n+    val createTableStmt =\n+      \"\"\"\n+        |CREATE TABLE tbl1 (\n+        |  a bigint,\n+        |  b int,\n+        |  c varchar\n+        |) with (\n+        |  'connector' = 'COLLECTION',\n+        |  'is-bounded' = 'false'\n+        |)\n+      \"\"\".stripMargin\n+    val tableResult1 = util.tableEnv.executeSql(createTableStmt)\n+    assertEquals(ResultKind.SUCCESS, tableResult1.getResultKind)\n+\n+    val tableResult2 = util.tableEnv.executeSql(\"CREATE VIEW view1 AS SELECT * FROM tbl1\")\n+    assertEquals(ResultKind.SUCCESS, tableResult2.getResultKind)\n+\n+    val tableResult3 = util.tableEnv.executeSql(\"SHOW VIEWS\")\n+    assertEquals(ResultKind.SUCCESS_WITH_CONTENT, tableResult3.getResultKind)\n+    checkData(\n+      util.tableEnv.listViews().map(Row.of(_)).toList.asJava.iterator(),\n+      tableResult3.collect())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "425e26536e512e5fec88852a462fdf88e6e1a562"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0NjQ4MA==", "bodyText": "remove this, and we should support list_views in table_environment.py", "url": "https://github.com/apache/flink/pull/11869#discussion_r414346480", "createdAt": "2020-04-24T07:09:40Z", "author": {"login": "godfreyhe"}, "path": "flink-python/pyflink/table/tests/test_environment_completeness.py", "diffHunk": "@@ -50,7 +50,8 @@ def excluded_methods(cls):\n             'createFunction',\n             'dropFunction',\n             'createTemporaryFunction',\n-            'dropTemporaryFunction'}\n+            'dropTemporaryFunction',\n+            'listViews'}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "425e26536e512e5fec88852a462fdf88e6e1a562"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a602abb4a2d51262c393a373aa13cb4875b4a7f5", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/a602abb4a2d51262c393a373aa13cb4875b4a7f5", "committedDate": "2020-04-24T09:15:50Z", "message": "fixup: address godfrey's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5ODU4ODA1", "url": "https://github.com/apache/flink/pull/11869#pullrequestreview-399858805", "createdAt": "2020-04-24T11:20:21Z", "commit": {"oid": "a602abb4a2d51262c393a373aa13cb4875b4a7f5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyMDoyMlrOGLS-Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyMzo0MFrOGLTFNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5ODMwNw==", "bodyText": "add \"It returns both temporary and permanent views.\"", "url": "https://github.com/apache/flink/pull/11869#discussion_r414498307", "createdAt": "2020-04-24T11:20:22Z", "author": {"login": "godfreyhe"}, "path": "flink-python/pyflink/table/table_environment.py", "diffHunk": "@@ -345,14 +345,24 @@ def list_databases(self):\n \n     def list_tables(self):\n         \"\"\"\n-        Gets the names of all tables in the current database of the current catalog.\n+        Gets the names of all tables and views in the current database of the current catalog.\n \n-        :return: List of table names in the current database of the current catalog.\n+        :return: List of table and view names in the current database of the current catalog.\n         :rtype: list[str]\n         \"\"\"\n         j_table_name_array = self._j_tenv.listTables()\n         return [item for item in j_table_name_array]\n \n+    def list_views(self):\n+        \"\"\"\n+        Gets the names of all views in the current database of the current catalog.\n+\n+        :return: List of view names in the current database of the current catalog.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a602abb4a2d51262c393a373aa13cb4875b4a7f5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMDE0OA==", "bodyText": "listTemporaryTablesInternal already exists", "url": "https://github.com/apache/flink/pull/11869#discussion_r414500148", "createdAt": "2020-04-24T11:23:40Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/catalog/CatalogManager.java", "diffHunk": "@@ -415,6 +415,37 @@ public CatalogBaseTable getTable() {\n \t\t\t});\n \t}\n \n+\t/**\n+\t * Returns an array of names of all views(both temporary and permanent) registered in\n+\t * the namespace of the current catalog and database.\n+\t *\n+\t * @return names of all registered views\n+\t */\n+\tpublic Set<String> listViews() {\n+\t\treturn listViews(getCurrentCatalog(), getCurrentDatabase());\n+\t}\n+\n+\t/**\n+\t * Returns an array of names of all views(both temporary and permanent) registered in\n+\t * the namespace of the current catalog and database.\n+\t *\n+\t * @return names of registered views\n+\t */\n+\tpublic Set<String> listViews(String catalogName, String databaseName) {\n+\t\tCatalog currentCatalog = catalogs.get(getCurrentCatalog());\n+\n+\t\ttry {\n+\t\t\treturn Stream.concat(\n+\t\t\t\tcurrentCatalog.listViews(getCurrentDatabase()).stream(),\n+\t\t\t\tlistTemporaryTablesInternal(catalogName, databaseName)\n+\t\t\t\t\t.filter(e -> e.getValue() instanceof CatalogView)\n+\t\t\t\t\t.map(e -> e.getKey().getObjectName())\n+\t\t\t).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0MzM4MQ=="}, "originalCommit": {"oid": "425e26536e512e5fec88852a462fdf88e6e1a562"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c2c52ba9d217d52576adf6a4bcd3c57ff211ebf", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/7c2c52ba9d217d52576adf6a4bcd3c57ff211ebf", "committedDate": "2020-04-26T02:56:03Z", "message": "fixup: clarify python docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f791f8202242f80022244ea56428a2bd69d78f7", "author": {"user": {"login": "docete", "name": "Zhenghua Gao"}}, "url": "https://github.com/apache/flink/commit/5f791f8202242f80022244ea56428a2bd69d78f7", "committedDate": "2020-04-26T03:05:42Z", "message": "fixup: wrap an util listTemporaryViewsInternal function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDUyNDAw", "url": "https://github.com/apache/flink/pull/11869#pullrequestreview-400452400", "createdAt": "2020-04-26T03:07:17Z", "commit": {"oid": "5f791f8202242f80022244ea56428a2bd69d78f7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxODU2Mzcz", "url": "https://github.com/apache/flink/pull/11869#pullrequestreview-401856373", "createdAt": "2020-04-28T13:51:43Z", "commit": {"oid": "5f791f8202242f80022244ea56428a2bd69d78f7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4791, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}