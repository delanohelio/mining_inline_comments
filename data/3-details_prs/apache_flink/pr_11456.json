{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMzIxMTc4", "number": 11456, "title": "[FLINK-16602][k8s] Rework the internal/external Service", "bodyText": "What is the purpose of the change\nAt the moment we usually create two Services for a Flink application, one is the internal Service and the other is the so-called rest Service, the previous aims for forwarding request from the TMs to the JM, and the rest Service mainly serves as an external service for the Flink application. Here is a summary of the issues:\n\nThe functionality boundary of the two Services is not clear enough since the internal Service could also become the rest Service when its exposed type is ClusterIP.\nFor the high availability scenario, we create a useless internal Service which does not help forward the internal requests since the TMs directly communicate with the JM via the IP or hostname of the JM Pod.\nHeadless service is enough to help forward the internal requests from the TMs to the JM. Service of ClusterIP type would add corresponding rules into the iptables, too many rules in the iptables would lower the kube-proxy's efficiency in refreshing iptables while notified of change events, which could possibly cause severe stability problems in a Kubernetes cluster.\n\nTherefore, we propose some improvements to the current design:\n\nClarify the functionality boundary for the two Services, the internal Service only serves the internal communication from TMs to JM, while the rest Service makes the Flink cluster accessible from outside. The internal Service only exposes the RPC and BLOB ports while the external one exposes the REST port.\nDo not create the internal Service in the high availability case.\nUse HEADLESS type for the internal Service.\n\nVerifying this change\nThis change added unit tests and can be verified on a real K8s cluster as follows:\n\nDeploy a non-HA session cluster and check there are two dedicated Services created, the internal one has NONE CLUSTER-IP.\nDeploy an HA session cluster and check only the rest Service is created.\nCheck that the internal Service only exposes the RPC and BLOB port while the external one exposes the REST port.\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)", "createdAt": "2020-03-20T02:27:21Z", "url": "https://github.com/apache/flink/pull/11456", "merged": true, "mergeCommit": {"oid": "562e7711914e58f152288b512bbf05ec3a1cfbfa"}, "closed": true, "closedAt": "2020-04-08T09:31:58Z", "author": {"login": "zhengcanbin"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQrkbvgBqjMxNTgwNzE3Nzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVkcmngFqTM4OTgwMjUzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e4c3073a6fb379bacb4da0e299245a73ea2a97d4", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/e4c3073a6fb379bacb4da0e299245a73ea2a97d4", "committedDate": "2020-03-20T01:56:56Z", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup."}, "afterCommit": {"oid": "0ccf40035e815a3073eefb8abd6155e176c998f4", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/0ccf40035e815a3073eefb8abd6155e176c998f4", "committedDate": "2020-03-24T04:53:54Z", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ccf40035e815a3073eefb8abd6155e176c998f4", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/0ccf40035e815a3073eefb8abd6155e176c998f4", "committedDate": "2020-03-24T04:53:54Z", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup."}, "afterCommit": {"oid": "8b988ea012330eaf2e1c42865a198192d27e23cd", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/8b988ea012330eaf2e1c42865a198192d27e23cd", "committedDate": "2020-03-25T14:28:00Z", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b988ea012330eaf2e1c42865a198192d27e23cd", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/8b988ea012330eaf2e1c42865a198192d27e23cd", "committedDate": "2020-03-25T14:28:00Z", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup."}, "afterCommit": {"oid": "4983430dece0dec9f17f0280e1cf499a8b639061", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/4983430dece0dec9f17f0280e1cf499a8b639061", "committedDate": "2020-03-26T01:17:12Z", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4983430dece0dec9f17f0280e1cf499a8b639061", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/4983430dece0dec9f17f0280e1cf499a8b639061", "committedDate": "2020-03-26T01:17:12Z", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup."}, "afterCommit": {"oid": "d80bf44961a0689f289e1ed7fe3a2ff30e8005eb", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/d80bf44961a0689f289e1ed7fe3a2ff30e8005eb", "committedDate": "2020-03-28T02:12:16Z", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTE1NjYy", "url": "https://github.com/apache/flink/pull/11456#pullrequestreview-383515662", "createdAt": "2020-03-30T03:52:55Z", "commit": {"oid": "d80bf44961a0689f289e1ed7fe3a2ff30e8005eb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwMzo1Mjo1NVrOF9YzIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwMzo1Mjo1NVrOF9YzIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkxMzc2Mg==", "bodyText": "nit: maybe isInternalServiceEnabled is better. Since we do not really enable the internal service here, we just check the state.", "url": "https://github.com/apache/flink/pull/11456#discussion_r399913762", "createdAt": "2020-03-30T03:52:55Z", "author": {"login": "wangyang0918"}, "path": "flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/parameters/KubernetesJobManagerParameters.java", "diffHunk": "@@ -112,4 +113,8 @@ public String getEntrypointClass() {\n \tpublic KubernetesConfigOptions.ServiceExposedType getRestServiceExposedType() {\n \t\treturn flinkConfig.get(KubernetesConfigOptions.REST_SERVICE_EXPOSED_TYPE);\n \t}\n+\n+\tpublic boolean enableInternalService() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80bf44961a0689f289e1ed7fe3a2ff30e8005eb"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d80bf44961a0689f289e1ed7fe3a2ff30e8005eb", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/d80bf44961a0689f289e1ed7fe3a2ff30e8005eb", "committedDate": "2020-03-28T02:12:16Z", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup."}, "afterCommit": {"oid": "b5a234817c48fa865b6086490ce8bf2e5c3c436f", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/b5a234817c48fa865b6086490ce8bf2e5c3c436f", "committedDate": "2020-03-30T14:03:16Z", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c92f7417fc12a878879653e7a17e592a9816640", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/3c92f7417fc12a878879653e7a17e592a9816640", "committedDate": "2020-04-07T07:28:37Z", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5a234817c48fa865b6086490ce8bf2e5c3c436f", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/b5a234817c48fa865b6086490ce8bf2e5c3c436f", "committedDate": "2020-03-30T14:03:16Z", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup."}, "afterCommit": {"oid": "3c92f7417fc12a878879653e7a17e592a9816640", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/3c92f7417fc12a878879653e7a17e592a9816640", "committedDate": "2020-04-07T07:28:37Z", "message": "[FLINK-16602][k8s] Rework the internal/external Service\n\t1.The rest Service serves for the rest traffic while the internal one serves for the internal request from TMs to JM.\n\t2.The rest Service is always created but the internal one only created in non-high availability setup."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4ODY5MjIz", "url": "https://github.com/apache/flink/pull/11456#pullrequestreview-388869223", "createdAt": "2020-04-07T07:53:41Z", "commit": {"oid": "3c92f7417fc12a878879653e7a17e592a9816640"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo1Mzo0MVrOGB3Vdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzo1NDowMlrOGB3WPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwODM3NQ==", "bodyText": "@zhengcanbin does this setting refer to Headless service? Can we move \"None\" into Constants?", "url": "https://github.com/apache/flink/pull/11456#discussion_r404608375", "createdAt": "2020-04-07T07:53:41Z", "author": {"login": "tisonkun"}, "path": "flink-kubernetes/src/main/java/org/apache/flink/kubernetes/kubeclient/decorators/InternalServiceDecorator.java", "diffHunk": "@@ -19,63 +19,67 @@\n package org.apache.flink.kubernetes.kubeclient.decorators;\n \n import org.apache.flink.configuration.JobManagerOptions;\n-import org.apache.flink.kubernetes.configuration.KubernetesConfigOptions;\n import org.apache.flink.kubernetes.kubeclient.parameters.KubernetesJobManagerParameters;\n import org.apache.flink.kubernetes.utils.Constants;\n import org.apache.flink.kubernetes.utils.KubernetesUtils;\n \n import io.fabric8.kubernetes.api.model.HasMetadata;\n-import io.fabric8.kubernetes.api.model.ServicePort;\n+import io.fabric8.kubernetes.api.model.Service;\n+import io.fabric8.kubernetes.api.model.ServiceBuilder;\n \n import java.io.IOException;\n+import java.util.Collections;\n import java.util.List;\n \n+import static org.apache.flink.util.Preconditions.checkNotNull;\n+\n /**\n  * Creates an internal Service which forwards the requests from the TaskManager(s) to the\n  * active JobManager.\n  * Note that only the non-HA scenario relies on this Service for internal communication, since\n  * in the HA mode, the TaskManager(s) directly connects to the JobManager via IP address.\n  */\n-public class InternalServiceDecorator extends AbstractServiceDecorator {\n+public class InternalServiceDecorator extends AbstractKubernetesStepDecorator {\n+\n+\tprivate final KubernetesJobManagerParameters kubernetesJobManagerParameters;\n \n \tpublic InternalServiceDecorator(KubernetesJobManagerParameters kubernetesJobManagerParameters) {\n-\t\tsuper(kubernetesJobManagerParameters);\n+\t\tthis.kubernetesJobManagerParameters = checkNotNull(kubernetesJobManagerParameters);\n \t}\n \n \t@Override\n \tpublic List<HasMetadata> buildAccompanyingKubernetesResources() throws IOException {\n-\t\tfinal String serviceName = getServiceName();\n+\t\tif (!kubernetesJobManagerParameters.isInternalServiceEnabled()) {\n+\t\t\treturn Collections.emptyList();\n+\t\t}\n+\n+\t\tfinal String serviceName = KubernetesUtils.getInternalServiceName(kubernetesJobManagerParameters.getClusterId());\n+\n+\t\tfinal Service headlessService = new ServiceBuilder()\n+\t\t\t.withApiVersion(Constants.API_VERSION)\n+\t\t\t.withNewMetadata()\n+\t\t\t\t.withName(serviceName)\n+\t\t\t\t.withLabels(kubernetesJobManagerParameters.getCommonLabels())\n+\t\t\t\t.endMetadata()\n+\t\t\t.withNewSpec()\n+\t\t\t\t.withClusterIP(\"None\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c92f7417fc12a878879653e7a17e592a9816640"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYwODU3NQ==", "bodyText": "Also update literal \"None\" here.", "url": "https://github.com/apache/flink/pull/11456#discussion_r404608575", "createdAt": "2020-04-07T07:54:02Z", "author": {"login": "tisonkun"}, "path": "flink-kubernetes/src/test/java/org/apache/flink/kubernetes/kubeclient/factory/KubernetesJobManagerFactoryTest.java", "diffHunk": "@@ -179,8 +180,9 @@ public void testServices() {\n \t\tfinal Service resultInternalService = internalServiceCandidates.get(0);\n \t\tassertEquals(2, resultInternalService.getMetadata().getLabels().size());\n \n-\t\tassertEquals(resultInternalService.getSpec().getType(), \"ClusterIP\");\n-\t\tassertEquals(3, resultInternalService.getSpec().getPorts().size());\n+\t\tassertNull(resultInternalService.getSpec().getType());\n+\t\tassertEquals(\"None\", resultInternalService.getSpec().getClusterIP());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c92f7417fc12a878879653e7a17e592a9816640"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1188bfdbd6ecde4c6277b93cea471636852ea9b9", "author": {"user": {"login": "zhengcanbin", "name": "Canbin Zheng"}}, "url": "https://github.com/apache/flink/commit/1188bfdbd6ecde4c6277b93cea471636852ea9b9", "committedDate": "2020-04-07T08:05:33Z", "message": "[FLINK-16602][k8s] Move literal \"None\" into Constants"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5ODAyNTMx", "url": "https://github.com/apache/flink/pull/11456#pullrequestreview-389802531", "createdAt": "2020-04-08T09:26:19Z", "commit": {"oid": "1188bfdbd6ecde4c6277b93cea471636852ea9b9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2906, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}