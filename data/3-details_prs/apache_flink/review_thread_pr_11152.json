{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NjE2NTU5", "number": 11152, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTo0NDoxNlrODhdNAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTo0NzozN1rODhdRjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDA4MDY1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/types/inference/TypeInferenceUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTo0NDoxNlrOFsMi5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTo0NDoxNlrOFsMi5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4NzIwNg==", "bodyText": "nit: I think we can even make this private. I wouldn't copy the JavaDoc then.", "url": "https://github.com/apache/flink/pull/11152#discussion_r381887206", "createdAt": "2020-02-20T09:44:16Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/types/inference/TypeInferenceUtil.java", "diffHunk": "@@ -99,6 +99,20 @@ public static AdaptedCallContext adaptArguments(\n \t\t\tTypeInference typeInference,\n \t\t\tCallContext callContext,\n \t\t\t@Nullable DataType outputType) {\n+\t\treturn adaptArguments(typeInference, callContext, outputType, true);\n+\t}\n+\n+\t/**\n+\t * Adapts the call's argument if necessary.\n+\t *\n+\t * <p>This includes casts that need to be inserted, reordering of arguments (*), or insertion of default\n+\t * values (*) where (*) is future work.\n+\t */\n+\tpublic static AdaptedCallContext adaptArguments(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49654f6f62ab81b913b70771ddddac7e2cf4c1f5"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDA5MjI5OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/types/inference/TypeInferenceUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTo0NzozN1rOFsMqWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTo0NzozN1rOFsMqWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4OTExMg==", "bodyText": "nit: allowUnknownInputTypes instead?", "url": "https://github.com/apache/flink/pull/11152#discussion_r381889112", "createdAt": "2020-02-20T09:47:37Z", "author": {"login": "twalthr"}, "path": "flink-table/flink-table-common/src/main/java/org/apache/flink/table/types/inference/TypeInferenceUtil.java", "diffHunk": "@@ -99,6 +99,20 @@ public static AdaptedCallContext adaptArguments(\n \t\t\tTypeInference typeInference,\n \t\t\tCallContext callContext,\n \t\t\t@Nullable DataType outputType) {\n+\t\treturn adaptArguments(typeInference, callContext, outputType, true);\n+\t}\n+\n+\t/**\n+\t * Adapts the call's argument if necessary.\n+\t *\n+\t * <p>This includes casts that need to be inserted, reordering of arguments (*), or insertion of default\n+\t * values (*) where (*) is future work.\n+\t */\n+\tpublic static AdaptedCallContext adaptArguments(\n+\t\t\tTypeInference typeInference,\n+\t\t\tCallContext callContext,\n+\t\t\t@Nullable DataType outputType,\n+\t\t\tboolean checkNoUnknownInputTypes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49654f6f62ab81b913b70771ddddac7e2cf4c1f5"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 971, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}