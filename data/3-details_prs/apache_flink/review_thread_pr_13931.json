{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1ODA4MDE4", "number": 13931, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNjo1OToyMFrOE1hXGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNzowMDo0OVrOE1hYhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTU2NTY4OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/calcite/rex/RexSimplify.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNjo1OToyMFrOHt1ujg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNjo1OToyMFrOHt1ujg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgyODIzOA==", "bodyText": "2683 -> 2638", "url": "https://github.com/apache/flink/pull/13931#discussion_r517828238", "createdAt": "2020-11-05T06:59:20Z", "author": {"login": "tsreaper"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/calcite/rex/RexSimplify.java", "diffHunk": "@@ -0,0 +1,2764 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to you under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.calcite.rex;\n+\n+import org.apache.calcite.avatica.util.TimeUnit;\n+import org.apache.calcite.avatica.util.TimeUnitRange;\n+import org.apache.calcite.plan.RelOptPredicateList;\n+import org.apache.calcite.plan.RelOptUtil;\n+import org.apache.calcite.plan.Strong;\n+import org.apache.calcite.rel.core.Project;\n+import org.apache.calcite.rel.metadata.NullSentinel;\n+import org.apache.calcite.rel.type.RelDataType;\n+import org.apache.calcite.sql.SqlKind;\n+import org.apache.calcite.sql.SqlOperator;\n+import org.apache.calcite.sql.fun.SqlStdOperatorTable;\n+import org.apache.calcite.sql.type.SqlTypeCoercionRule;\n+import org.apache.calcite.sql.type.SqlTypeName;\n+import org.apache.calcite.sql.type.SqlTypeUtil;\n+import org.apache.calcite.util.Bug;\n+import org.apache.calcite.util.Pair;\n+import org.apache.calcite.util.RangeSets;\n+import org.apache.calcite.util.Sarg;\n+import org.apache.calcite.util.Util;\n+\n+import com.google.common.collect.ArrayListMultimap;\n+import com.google.common.collect.BoundType;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableRangeSet;\n+import com.google.common.collect.Iterables;\n+import com.google.common.collect.Multimap;\n+import com.google.common.collect.Range;\n+import com.google.common.collect.RangeSet;\n+import com.google.common.collect.Sets;\n+import com.google.common.collect.TreeRangeSet;\n+\n+import java.util.ArrayList;\n+import java.util.BitSet;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.EnumSet;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Set;\n+import javax.annotation.Nonnull;\n+\n+import static org.apache.calcite.rex.RexUnknownAs.FALSE;\n+import static org.apache.calcite.rex.RexUnknownAs.TRUE;\n+import static org.apache.calcite.rex.RexUnknownAs.UNKNOWN;\n+\n+/**\n+ * Context required to simplify a row-expression.\n+ *\n+ * <p>Copied to fix CALCITE-4364, should be removed for the next Calcite upgrade.\n+ *\n+ * <p>Changes: Line 1307, Line 1764, Line 2683 ~ Line 2656.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea93667f09807f3e9eae819bed19678d7a699173"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTU2OTM1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/utils/FlinkRexUtilTest.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNzowMDo0OVrOHt1woQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNzowMDo0OVrOHt1woQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgyODc2OQ==", "bodyText": "Improve what? This case seems correct.", "url": "https://github.com/apache/flink/pull/13931#discussion_r517828769", "createdAt": "2020-11-05T07:00:49Z", "author": {"login": "tsreaper"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/utils/FlinkRexUtilTest.scala", "diffHunk": "@@ -402,6 +403,57 @@ class FlinkRexUtilTest {\n     val predicate16 = rexBuilder.makeCall(LESS_THAN, a, a)\n     val newPredicate16 = FlinkRexUtil.simplify(rexBuilder, predicate16)\n     assertEquals(rexBuilder.makeLiteral(false).toString, newPredicate16.toString)\n+\n+    // c = 0 AND SEARCH(c, [0, 1])\n+    val predicate17Equals = rexBuilder.makeCall(EQUALS, c, intLiteral(0))\n+    val predicate17 = rexBuilder.makeCall(\n+      AND,\n+      predicate17Equals,\n+      rexBuilder.makeIn(c, java.util.Arrays.asList(\n+        intLiteral(0),\n+        intLiteral(1))))\n+    val newPredicate17 = FlinkRexUtil.simplify(rexBuilder, predicate17)\n+    assertEquals(\n+      rexBuilder.makeIn(c, Collections.singletonList[RexNode](intLiteral(0))).toString,\n+      newPredicate17.toString)\n+\n+    // c = 0 OR SEARCH(c, [0, 1])\n+    // TODO improve this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea93667f09807f3e9eae819bed19678d7a699173"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4933, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}