{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMDIxNDMy", "number": 11219, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMjo0MDo0N1rODjcsGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMjo0MDo0N1rODjcsGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDk2Nzk0OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyMessage.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMjo0MDo0OFrOFvQtOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDo0NzowOVrOFvUq-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEwMTExNA==", "bodyText": "nit: replace numbers with constants Integer.BYTES and Long.BYTES?", "url": "https://github.com/apache/flink/pull/11219#discussion_r385101114", "createdAt": "2020-02-27T12:40:48Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyMessage.java", "diffHunk": "@@ -666,10 +663,7 @@ ByteBuf write(ByteBufAllocator allocator) throws IOException {\n \t\t\tByteBuf result = null;\n \n \t\t\ttry {\n-\t\t\t\tresult = allocateBuffer(allocator, ID, 16 + 16 + 4 + 16);\n-\n-\t\t\t\tpartitionId.getPartitionId().writeTo(result);\n-\t\t\t\tpartitionId.getProducerId().writeTo(result);\n+\t\t\t\tresult = allocateBuffer(allocator, ID, 4 + 16);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75bddc5732f99c88a183b683660a85202ac8c5cb"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2NjA3NA==", "bodyText": "Yes, it seems more readable for this change, but not quite relevant with this PR purpose.\nAfter double checking the codes, there are many other places to take the current way in this class. So I might consider this change as a separate issue for unification future.", "url": "https://github.com/apache/flink/pull/11219#discussion_r385166074", "createdAt": "2020-02-27T14:47:09Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyMessage.java", "diffHunk": "@@ -666,10 +663,7 @@ ByteBuf write(ByteBufAllocator allocator) throws IOException {\n \t\t\tByteBuf result = null;\n \n \t\t\ttry {\n-\t\t\t\tresult = allocateBuffer(allocator, ID, 16 + 16 + 4 + 16);\n-\n-\t\t\t\tpartitionId.getPartitionId().writeTo(result);\n-\t\t\t\tpartitionId.getProducerId().writeTo(result);\n+\t\t\t\tresult = allocateBuffer(allocator, ID, 4 + 16);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTEwMTExNA=="}, "originalCommit": {"oid": "75bddc5732f99c88a183b683660a85202ac8c5cb"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 910, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}