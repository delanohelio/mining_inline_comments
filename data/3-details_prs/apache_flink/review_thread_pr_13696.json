{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NDg5MjM5", "number": 13696, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNzo0MToyNlrOEwox2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNzo0MzowOVrOEwo0Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NDM1MjI1OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/sink/SinkNotNullEnforcer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNzo0MToyNlrOHmUmdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNzo0MToyNlrOHmUmdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk0NTQ2Mw==", "bodyText": "nit: add serialVersionUID", "url": "https://github.com/apache/flink/pull/13696#discussion_r509945463", "createdAt": "2020-10-22T07:41:26Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/sink/SinkNotNullEnforcer.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.runtime.operators.sink;\n+\n+import org.apache.flink.api.common.functions.FilterFunction;\n+import org.apache.flink.table.api.TableException;\n+import org.apache.flink.table.api.config.ExecutionConfigOptions;\n+import org.apache.flink.table.api.config.ExecutionConfigOptions.NotNullEnforcer;\n+import org.apache.flink.table.data.RowData;\n+\n+/**\n+ * Checks writing null values into NOT NULL columns.\n+ */\n+public class SinkNotNullEnforcer implements FilterFunction<RowData> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dad3de0291d32afee24e9a91edfedb132d6f211f"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NDM1ODY2OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/sink/SinkNotNullEnforcer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNzo0MzoxMFrOHmUqZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNzo0MzoxMFrOHmUqZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk0NjQ3MA==", "bodyText": "nit: return false directly when notNullCheck is false, reduce nesting depth.", "url": "https://github.com/apache/flink/pull/13696#discussion_r509946470", "createdAt": "2020-10-22T07:43:10Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/runtime/operators/sink/SinkNotNullEnforcer.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.runtime.operators.sink;\n+\n+import org.apache.flink.api.common.functions.FilterFunction;\n+import org.apache.flink.table.api.TableException;\n+import org.apache.flink.table.api.config.ExecutionConfigOptions;\n+import org.apache.flink.table.api.config.ExecutionConfigOptions.NotNullEnforcer;\n+import org.apache.flink.table.data.RowData;\n+\n+/**\n+ * Checks writing null values into NOT NULL columns.\n+ */\n+public class SinkNotNullEnforcer implements FilterFunction<RowData> {\n+\n+\tprivate final NotNullEnforcer notNullEnforcer;\n+\tprivate final int[] notNullFieldIndices;\n+\tprivate final boolean notNullCheck;\n+\tprivate final String[] allFieldNames;\n+\n+\tpublic SinkNotNullEnforcer(\n+\t\t\tNotNullEnforcer notNullEnforcer, int[] notNullFieldIndices, String[] allFieldNames) {\n+\t\tthis.notNullFieldIndices = notNullFieldIndices;\n+\t\tthis.notNullEnforcer = notNullEnforcer;\n+\t\tthis.notNullCheck = notNullFieldIndices.length > 0;\n+\t\tthis.allFieldNames = allFieldNames;\n+\t}\n+\n+\t@Override\n+\tpublic boolean filter(RowData row) {\n+\t\tif (notNullCheck) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dad3de0291d32afee24e9a91edfedb132d6f211f"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 32, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}