{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMjgzODAz", "number": 12617, "title": "[FLINK-18252][checkpointing] Fix savepoint overtaking output data.", "bodyText": "What is the purpose of the change\nCurrently, a checkpoint/savepoint barrier is always send as a priority events to the output partitions, where it overtakes data. After the fix a barrier is only a priority event iff it's unaligned.\nBrief change log\n\nCheckpointCoordinator only set unaligned flag if the barrier belongs to a checkpoint.\nBarrier is only a priority event iff it's unaligned.\n\nVerifying this change\n\nAdded SubtaskCheckpointCoordinatorTest#testSavepointNotResultingInPriorityEvents\nCovered by existing test_resume_savepoint e2e with UC enabled (FLINK-17258)\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-06-11T19:24:03Z", "url": "https://github.com/apache/flink/pull/12617", "merged": true, "mergeCommit": {"oid": "dd3717e8383c39eb086f21fba79db0381dfac248"}, "closed": true, "closedAt": "2020-06-12T08:20:46Z", "author": {"login": "AHeise"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqTaI_gBqjM0MzU2MjkyODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqeX_8ABqjM0Mzc0MDEzNzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e897aef269df2e904df87af729deeb5029e640b8", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/e897aef269df2e904df87af729deeb5029e640b8", "committedDate": "2020-06-11T19:22:53Z", "message": "[FLINK-18252][checkpointing] Fix savepoint overtaking output data.\n\nCurrently, a checkpoint/savepoint barrier is always send as a priority events to the output partitions, where it overtakes data. After the fix a barrier is only a priority event iff it's unaligned.\nAlso CheckpointCoordinator only set unaligned flag if the barrier belongs to a checkpoint."}, "afterCommit": {"oid": "1e534d1a704430e11761cab5d978608e33be6f1d", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/1e534d1a704430e11761cab5d978608e33be6f1d", "committedDate": "2020-06-11T19:27:22Z", "message": "[FLINK-18252][checkpointing] Fix savepoint overtaking output data.\n\nCurrently, a checkpoint/savepoint barrier is always send as a priority events to the output partitions, where it overtakes data. After the fix a barrier is only a priority event iff it's unaligned.\nAlso CheckpointCoordinator only set unaligned flag if the barrier belongs to a checkpoint.\nUltimately, the unaligned checkpoint config option is not used by SubtaskCheckpointCoordinatorImpl except for initializing the channel state writer. The source of truth is now the CheckpointOptions."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MjgyMTg3", "url": "https://github.com/apache/flink/pull/12617#pullrequestreview-429282187", "createdAt": "2020-06-11T20:55:19Z", "commit": {"oid": "1e534d1a704430e11761cab5d978608e33be6f1d"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDo1NToyMFrOGiucyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMTowMzo1OVrOGiuseA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2NTgwMg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/flink/pull/12617#discussion_r439065802", "createdAt": "2020-06-11T20:55:20Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CheckpointCoordinator.java", "diffHunk": "@@ -732,7 +732,7 @@ private void snapshotTaskState(\n \t\t\tprops.getCheckpointType(),\n \t\t\tcheckpointStorageLocation.getLocationReference(),\n \t\t\tisExactlyOnceMode,\n-\t\t\tunalignedCheckpointsEnabled);\n+\t\t\tprops.getCheckpointType() == CheckpointType.CHECKPOINT && unalignedCheckpointsEnabled);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e534d1a704430e11761cab5d978608e33be6f1d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2NzgxNQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/flink/pull/12617#discussion_r439067815", "createdAt": "2020-06-11T20:59:36Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorTest.java", "diffHunk": "@@ -119,10 +122,40 @@ public void testNotifyCheckpointComplete() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testSavepointNotResultingInPriorityEvents() throws Exception {\n+\t\tMockEnvironment mockEnvironment = MockEnvironment.builder().build();\n+\n+\t\tSubtaskCheckpointCoordinator coordinator = new MockSubtaskCheckpointCoordinatorBuilder()\n+\t\t\t\t.setUnalignedCheckpointEnabled(true)\n+\t\t\t\t.setEnvironment(mockEnvironment)\n+\t\t\t\t.build();\n+\n+\t\tAtomicReference<Boolean> broadcastedPriorityEvent = new AtomicReference<>(null);\n+\t\tfinal OperatorChain<?, ?> operatorChain = new OperatorChain(\n+\t\t\t\tnew MockStreamTaskBuilder(mockEnvironment).build(),\n+\t\t\t\tnew NonRecordWriter<>()) {\n+\t\t\t@Override\n+\t\t\tpublic void broadcastEvent(AbstractEvent event, boolean isPriorityEvent) throws IOException {\n+\t\t\t\tsuper.broadcastEvent(event, isPriorityEvent);\n+\t\t\t\tbroadcastedPriorityEvent.set(isPriorityEvent);\n+\t\t\t}\n+\t\t};\n+\n+\t\tcoordinator.checkpointState(\n+\t\t\t\tnew CheckpointMetaData(0, 0),\n+\t\t\t\tnew CheckpointOptions(SAVEPOINT, CheckpointStorageLocationReference.getDefault()),\n+\t\t\t\tnew CheckpointMetrics(),\n+\t\t\t\toperatorChain,\n+\t\t\t\t() -> false);\n+\n+\t\tassertEquals(false, broadcastedPriorityEvent.get());\n+\t}\n+\n \t@Test\n \tpublic void testSkipChannelStateForSavepoints() throws Exception {\n \t\tSubtaskCheckpointCoordinator coordinator = new MockSubtaskCheckpointCoordinatorBuilder()\n-\t\t\t.setUnalignedCheckpointEnabled(false)\n+\t\t\t.setUnalignedCheckpointEnabled(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e534d1a704430e11761cab5d978608e33be6f1d"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2OTgxNg==", "bodyText": "I like the idea of using barrier options instead of local task configuration.", "url": "https://github.com/apache/flink/pull/12617#discussion_r439069816", "createdAt": "2020-06-11T21:03:59Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java", "diffHunk": "@@ -253,7 +249,7 @@ public void checkpointState(\n \t\t// Step (2): Send the checkpoint barrier downstream\n \t\toperatorChain.broadcastEvent(\n \t\t\tnew CheckpointBarrier(metadata.getCheckpointId(), metadata.getTimestamp(), options),\n-\t\t\tunalignedCheckpointEnabled);\n+\t\t\toptions.isUnalignedCheckpoint());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e534d1a704430e11761cab5d978608e33be6f1d"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDQ5ODc4", "url": "https://github.com/apache/flink/pull/12617#pullrequestreview-429449878", "createdAt": "2020-06-12T04:14:37Z", "commit": {"oid": "1e534d1a704430e11761cab5d978608e33be6f1d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNDoxNDozN1rOGi2fMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNDoxNDozN1rOGi2fMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE5NzQ5MA==", "bodyText": "nit: might seem more consistent if we either remove below #includeChannelState method or use that method in all the places.", "url": "https://github.com/apache/flink/pull/12617#discussion_r439197490", "createdAt": "2020-06-12T04:14:37Z", "author": {"login": "zhijiangW"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/SubtaskCheckpointCoordinatorImpl.java", "diffHunk": "@@ -253,7 +249,7 @@ public void checkpointState(\n \t\t// Step (2): Send the checkpoint barrier downstream\n \t\toperatorChain.broadcastEvent(\n \t\t\tnew CheckpointBarrier(metadata.getCheckpointId(), metadata.getTimestamp(), options),\n-\t\t\tunalignedCheckpointEnabled);\n+\t\t\toptions.isUnalignedCheckpoint());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e534d1a704430e11761cab5d978608e33be6f1d"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDUyNjY4", "url": "https://github.com/apache/flink/pull/12617#pullrequestreview-429452668", "createdAt": "2020-06-12T04:25:47Z", "commit": {"oid": "1e534d1a704430e11761cab5d978608e33be6f1d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02e1afbacf0c41f4d5412eca02654fa00ca179ce", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/02e1afbacf0c41f4d5412eca02654fa00ca179ce", "committedDate": "2020-06-12T08:13:25Z", "message": "[FLINK-18252][checkpointing] Fix savepoint overtaking output data.\n\nCurrently, a checkpoint/savepoint barrier is always send as a priority events to the output partitions, where it overtakes data. After the fix a barrier is only a priority event iff it's unaligned.\nAlso CheckpointCoordinator only set unaligned flag if the barrier belongs to a checkpoint.\nUltimately, the unaligned checkpoint config option is not used by SubtaskCheckpointCoordinatorImpl except for initializing the channel state writer. The source of truth is now the CheckpointOptions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e534d1a704430e11761cab5d978608e33be6f1d", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/1e534d1a704430e11761cab5d978608e33be6f1d", "committedDate": "2020-06-11T19:27:22Z", "message": "[FLINK-18252][checkpointing] Fix savepoint overtaking output data.\n\nCurrently, a checkpoint/savepoint barrier is always send as a priority events to the output partitions, where it overtakes data. After the fix a barrier is only a priority event iff it's unaligned.\nAlso CheckpointCoordinator only set unaligned flag if the barrier belongs to a checkpoint.\nUltimately, the unaligned checkpoint config option is not used by SubtaskCheckpointCoordinatorImpl except for initializing the channel state writer. The source of truth is now the CheckpointOptions."}, "afterCommit": {"oid": "02e1afbacf0c41f4d5412eca02654fa00ca179ce", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/02e1afbacf0c41f4d5412eca02654fa00ca179ce", "committedDate": "2020-06-12T08:13:25Z", "message": "[FLINK-18252][checkpointing] Fix savepoint overtaking output data.\n\nCurrently, a checkpoint/savepoint barrier is always send as a priority events to the output partitions, where it overtakes data. After the fix a barrier is only a priority event iff it's unaligned.\nAlso CheckpointCoordinator only set unaligned flag if the barrier belongs to a checkpoint.\nUltimately, the unaligned checkpoint config option is not used by SubtaskCheckpointCoordinatorImpl except for initializing the channel state writer. The source of truth is now the CheckpointOptions."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3381, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}