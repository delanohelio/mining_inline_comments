{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NDI3NTU5", "number": 14245, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDozNTo1N1rOFBl8UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDo0MTowMFrOFBmA4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjE0NTQ1OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/connectors/formats/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDozNTo1N1rOIAVnlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDozNTo1N1rOIAVnlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIyNTEwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     <td><a href=\"{% link dev/table/connectors/formats/canal.md %}\">Maxwell CDC</a></td>\n          \n          \n            \n                     <td><a href=\"{% link dev/table/connectors/formats/maxwell.md %}\">Maxwell CDC</a></td>", "url": "https://github.com/apache/flink/pull/14245#discussion_r537225109", "createdAt": "2020-12-07T04:35:57Z", "author": {"login": "wuchong"}, "path": "docs/dev/table/connectors/formats/index.md", "diffHunk": "@@ -73,6 +73,11 @@ Flink supports the following formats:\n           <td><a href=\"{% link dev/table/connectors/kafka.md %}\">Apache Kafka</a>,\n            <a href=\"{% link dev/table/connectors/filesystem.md %}\">Filesystem</a></td>\n         </tr>\n+        <tr>\n+         <td><a href=\"{% link dev/table/connectors/formats/canal.md %}\">Maxwell CDC</a></td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5dbc4b9863d79bf944eba22df06643ebf909816"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjE0NTczOnYy", "diffSide": "RIGHT", "path": "docs/dev/table/connectors/formats/index.zh.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDozNjowOFrOIAVnvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDozNjowOFrOIAVnvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIyNTE0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     <td><a href=\"{% link dev/table/connectors/formats/canal.zh.md %}\">Maxwell CDC</a></td>\n          \n          \n            \n                     <td><a href=\"{% link dev/table/connectors/formats/maxwell.zh.md %}\">Maxwell CDC</a></td>", "url": "https://github.com/apache/flink/pull/14245#discussion_r537225148", "createdAt": "2020-12-07T04:36:08Z", "author": {"login": "wuchong"}, "path": "docs/dev/table/connectors/formats/index.zh.md", "diffHunk": "@@ -73,6 +73,11 @@ Flink \u652f\u6301\u4ee5\u4e0b\u683c\u5f0f\uff1a\n           <td><a href=\"{% link dev/table/connectors/kafka.zh.md %}\">Apache Kafka</a>,\n            <a href=\"{% link dev/table/connectors/filesystem.zh.md %}\">Filesystem</a></td>\n         </tr>\n+        <tr>\n+         <td><a href=\"{% link dev/table/connectors/formats/canal.zh.md %}\">Maxwell CDC</a></td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5dbc4b9863d79bf944eba22df06643ebf909816"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjE1MzQ0OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/connectors/formats/maxwell.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDozOToyNFrOIAVrlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDozOToyNFrOIAVrlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIyNjEzNQ==", "bodyText": "We don't need the Maxwell tab.", "url": "https://github.com/apache/flink/pull/14245#discussion_r537226135", "createdAt": "2020-12-07T04:39:24Z", "author": {"login": "wuchong"}, "path": "docs/dev/table/connectors/formats/maxwell.md", "diffHunk": "@@ -0,0 +1,212 @@\n+---\n+title: \"Maxwell Format\"\n+nav-title: Maxwell\n+nav-parent_id: sql-formats\n+nav-pos: 6\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<span class=\"label label-info\">Changelog-Data-Capture Format</span>\n+<span class=\"label label-info\">Format: Serialization Schema</span>\n+<span class=\"label label-info\">Format: Deserialization Schema</span>\n+\n+* This will be replaced by the TOC\n+{:toc}\n+\n+[Maxwell](https://maxwells-daemon.io/) is a CDC (Changelog Data Capture) tool that can stream changes in real-time from MySQL into Kafka, Kinesis and other streaming connectors. Maxwell provides a unified format schema for changelog and supports to serialize messages using JSON.\n+\n+Flink supports to interpret Maxwell JSON messages as INSERT/UPDATE/DELETE messages into Flink SQL system. This is useful in many cases to leverage this feature, such as\n+ - synchronizing incremental data from databases to other systems\n+ - auditing logs\n+ - real-time materialized views on databases\n+ - temporal join changing history of a database table and so on.\n+\n+Flink also supports to encode the INSERT/UPDATE/DELETE messages in Flink SQL as Maxwell JSON messages, and emit to external systems like Kafka.\n+However, currently Flink can't combine UPDATE_BEFORE and UPDATE_AFTER into a single UPDATE message. Therefore, Flink encodes UPDATE_BEFORE and UDPATE_AFTER as DELETE and INSERT Maxwell messages.\n+\n+Dependencies\n+------------\n+\n+<div class=\"codetabs\" markdown=\"1\">\n+<div data-lang=\"Maxwell\" markdown=\"1\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5dbc4b9863d79bf944eba22df06643ebf909816"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjE1NzEzOnYy", "diffSide": "RIGHT", "path": "docs/dev/table/connectors/formats/maxwell.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDo0MTowMFrOIAVtZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDo0MTowMFrOIAVtZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIyNjU5OQ==", "bodyText": "Please fix all the \"debezium\".", "url": "https://github.com/apache/flink/pull/14245#discussion_r537226599", "createdAt": "2020-12-07T04:41:00Z", "author": {"login": "wuchong"}, "path": "docs/dev/table/connectors/formats/maxwell.md", "diffHunk": "@@ -0,0 +1,212 @@\n+---\n+title: \"Maxwell Format\"\n+nav-title: Maxwell\n+nav-parent_id: sql-formats\n+nav-pos: 6\n+---\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<span class=\"label label-info\">Changelog-Data-Capture Format</span>\n+<span class=\"label label-info\">Format: Serialization Schema</span>\n+<span class=\"label label-info\">Format: Deserialization Schema</span>\n+\n+* This will be replaced by the TOC\n+{:toc}\n+\n+[Maxwell](https://maxwells-daemon.io/) is a CDC (Changelog Data Capture) tool that can stream changes in real-time from MySQL into Kafka, Kinesis and other streaming connectors. Maxwell provides a unified format schema for changelog and supports to serialize messages using JSON.\n+\n+Flink supports to interpret Maxwell JSON messages as INSERT/UPDATE/DELETE messages into Flink SQL system. This is useful in many cases to leverage this feature, such as\n+ - synchronizing incremental data from databases to other systems\n+ - auditing logs\n+ - real-time materialized views on databases\n+ - temporal join changing history of a database table and so on.\n+\n+Flink also supports to encode the INSERT/UPDATE/DELETE messages in Flink SQL as Maxwell JSON messages, and emit to external systems like Kafka.\n+However, currently Flink can't combine UPDATE_BEFORE and UPDATE_AFTER into a single UPDATE message. Therefore, Flink encodes UPDATE_BEFORE and UDPATE_AFTER as DELETE and INSERT Maxwell messages.\n+\n+Dependencies\n+------------\n+\n+<div class=\"codetabs\" markdown=\"1\">\n+<div data-lang=\"Maxwell\" markdown=\"1\">\n+{% assign connector = site.data.sql-connectors['maxwell'] %}\n+{% include sql-connector-download-table.html\n+    connector=connector\n+%}\n+</div>\n+</div>\n+\n+*Note: please refer to [Maxwell documentation](http://maxwells-daemon.io/quickstart/) about how to synchronize changelog to Kafka topics with Maxwell JSON.*\n+\n+\n+How to use Maxwell format\n+----------------\n+\n+Maxwell provides a unified format for changelog, here is a simple example for an update operation captured from a MySQL `products` table in JSON format:\n+\n+```json\n+{\n+   \"database\":\"test\",\n+   \"table\":\"e\",\n+   \"type\":\"insert\",\n+   \"ts\":1477053217,\n+   \"xid\":23396,\n+   \"commit\":true,\n+   \"position\":\"master.000006:800911\",\n+   \"server_id\":23042,\n+   \"thread_id\":108,\n+   \"primary_key\": [1, \"2016-10-21 05:33:37.523000\"],\n+   \"primary_key_columns\": [\"id\", \"c\"],\n+   \"data\":{\n+     \"id\":111,\n+     \"name\":\"scooter\",\n+     \"description\":\"Big 2-wheel scooter\",\n+     \"weight\":5.15\n+   },\n+   \"old\":{\n+     \"weight\":5.18,\n+   }\n+}\n+```\n+\n+*Note: please refer to [Maxwell documentation](http://maxwells-daemon.io/dataformat/) about the meaning of each fields.*\n+\n+The MySQL `products` table has 4 columns (`id`, `name`, `description` and `weight`). The above JSON message is an update change event on the `products` table where the `weight` value of the row with `id = 111` is changed from `5.18` to `5.15`.\n+Assuming this messages is synchronized to Kafka topic `products_binlog`, then we can use the following DDL to consume this topic and interpret the change events.\n+\n+<div class=\"codetabs\" markdown=\"1\">\n+<div data-lang=\"SQL\" markdown=\"1\">\n+{% highlight sql %}\n+CREATE TABLE topic_products (\n+  -- schema is totally the same to the MySQL \"products\" table\n+  id BIGINT,\n+  name STRING,\n+  description STRING,\n+  weight DECIMAL(10, 2)\n+) WITH (\n+ 'connector' = 'kafka',\n+ 'topic' = 'products_binlog',\n+ 'properties.bootstrap.servers' = 'localhost:9092',\n+ 'properties.group.id' = 'testGroup',\n+ 'format' = 'maxwell-json'\n+)\n+{% endhighlight %}\n+</div>\n+</div>\n+\n+After registering the topic as a Flink table, then you can consume the Maxwell messages as a changelog source.\n+\n+<div class=\"codetabs\" markdown=\"1\">\n+<div data-lang=\"SQL\" markdown=\"1\">\n+{% highlight sql %}\n+-- a real-time materialized view on the MySQL \"products\"\n+-- which calculate the latest average of weight for the same products\n+SELECT name, AVG(weight) FROM topic_products GROUP BY name;\n+\n+-- synchronize all the data and incremental changes of MySQL \"products\" table to\n+-- Elasticsearch \"products\" index for future searching\n+INSERT INTO elasticsearch_products\n+SELECT * FROM topic_products;\n+{% endhighlight %}\n+</div>\n+</div>\n+\n+Format Options\n+----------------\n+\n+<div data-lang=\"Maxwell Json\" markdown=\"1\">\n+\n+<table class=\"table table-bordered\">\n+    <thead>\n+      <tr>\n+        <th class=\"text-left\" style=\"width: 25%\">Option</th>\n+        <th class=\"text-center\" style=\"width: 8%\">Required</th>\n+        <th class=\"text-center\" style=\"width: 7%\">Default</th>\n+        <th class=\"text-center\" style=\"width: 10%\">Type</th>\n+        <th class=\"text-center\" style=\"width: 50%\">Description</th>\n+      </tr>\n+    </thead>\n+    <tbody>\n+    <tr>\n+      <td><h5>format</h5></td>\n+      <td>required</td>\n+      <td style=\"word-wrap: break-word;\">(none)</td>\n+      <td>String</td>\n+      <td>Specify what format to use, here should be <code>'maxwell-json'</code>.</td>\n+    </tr>\n+    <tr>\n+      <td><h5>maxwell-json.ignore-parse-errors</h5></td>\n+      <td>optional</td>\n+      <td style=\"word-wrap: break-word;\">false</td>\n+      <td>Boolean</td>\n+      <td>Skip fields and rows with parse errors instead of failing.\n+      Fields are set to null in case of errors.</td>\n+    </tr>\n+    <tr>\n+       <td><h5>maxwell-json.timestamp-format.standard</h5></td>\n+       <td>optional</td>\n+       <td style=\"word-wrap: break-word;\"><code>'SQL'</code></td>\n+       <td>String</td>\n+       <td>Specify the input and output timestamp format. Currently supported values are <code>'SQL'</code> and <code>'ISO-8601'</code>:\n+       <ul>\n+         <li>Option <code>'SQL'</code> will parse input timestamp in \"yyyy-MM-dd HH:mm:ss.s{precision}\" format, e.g '2020-12-30 12:13:14.123' and output timestamp in the same format.</li>\n+         <li>Option <code>'ISO-8601'</code>will parse input timestamp in \"yyyy-MM-ddTHH:mm:ss.s{precision}\" format, e.g '2020-12-30T12:13:14.123' and output timestamp in the same format.</li>\n+       </ul>\n+       </td>\n+    </tr>\n+    <tr>\n+      <td><h5>maxwell-json.map-null-key.mode</h5></td>\n+      <td>optional</td>\n+      <td style=\"word-wrap: break-word;\"><code>'FAIL'</code></td>\n+      <td>String</td>\n+      <td>Specify the handling mode when serializing null keys for map data. Currently supported values are <code>'FAIL'</code>, <code>'DROP'</code> and <code>'LITERAL'</code>:\n+      <ul>\n+        <li>Option <code>'FAIL'</code> will throw exception when encountering map with null key.</li>\n+        <li>Option <code>'DROP'</code> will drop null key entries for map data.</li>\n+        <li>Option <code>'LITERAL'</code> will replace null key with string literal. The string literal is defined by <code>debezium-json.map-null-key.literal</code> option.</li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5dbc4b9863d79bf944eba22df06643ebf909816"}, "originalPosition": 183}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4661, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}