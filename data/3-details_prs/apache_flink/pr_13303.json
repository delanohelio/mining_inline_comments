{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NzEwMDc0", "number": 13303, "title": "[FLINK-19098][format] Make row data converters public", "bodyText": "What is the purpose of the change\nThis pull request makes the rowdata converters public. That way third party projects can utilize the converter to serialize and deserialize between csv/json JsonNode and Rowdata.\nBrief change log\n\nRefactor json/csv RowData runtime converters out to a class\nMake the rowdata converter public\nAdd static to RowDataToCsvConverter\n\nVerifying this change\nThis change is already covered by existing tests, such as JsonRowDeserializationSchemaTest, etc.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no", "createdAt": "2020-09-02T10:02:07Z", "url": "https://github.com/apache/flink/pull/13303", "merged": true, "mergeCommit": {"oid": "ef4d997756756bf0e1e722af8a3fcd6995f37dc8"}, "closed": true, "closedAt": "2020-09-25T14:50:10Z", "author": {"login": "crazyzhou"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKCodkgFqTQ5MTMxNjE2OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMM4MdAH2gAyNDc3NzEwMDc0OmU2NTY5NmJlMDhmYzc2NmZiOTZhZmM0NWY1YzZlYTljYmQ5MWU5OWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMzE2MTY4", "url": "https://github.com/apache/flink/pull/13303#pullrequestreview-491316168", "createdAt": "2020-09-18T09:49:43Z", "commit": {"oid": "9e3523a26f23656c5d25be589b295136e20f6f48"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwOTo0OTo0NFrOHUGHuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwOTo1OTo0NVrOHUGcCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzMzg0OQ==", "bodyText": "Add one more indent for constructor parameters.", "url": "https://github.com/apache/flink/pull/13303#discussion_r490833849", "createdAt": "2020-09-18T09:49:44Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonToRowDataConverters.java", "diffHunk": "@@ -0,0 +1,391 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.formats.json;\n+\n+import org.apache.flink.annotation.Internal;\n+import org.apache.flink.table.api.TableException;\n+import org.apache.flink.table.data.DecimalData;\n+import org.apache.flink.table.data.GenericArrayData;\n+import org.apache.flink.table.data.GenericMapData;\n+import org.apache.flink.table.data.GenericRowData;\n+import org.apache.flink.table.data.RowData;\n+import org.apache.flink.table.data.StringData;\n+import org.apache.flink.table.data.TimestampData;\n+import org.apache.flink.table.types.logical.ArrayType;\n+import org.apache.flink.table.types.logical.DecimalType;\n+import org.apache.flink.table.types.logical.LogicalType;\n+import org.apache.flink.table.types.logical.LogicalTypeFamily;\n+import org.apache.flink.table.types.logical.MapType;\n+import org.apache.flink.table.types.logical.RowType;\n+import org.apache.flink.table.types.logical.utils.LogicalTypeChecks;\n+import org.apache.flink.table.types.logical.utils.LogicalTypeUtils;\n+\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode;\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TextNode;\n+\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.lang.reflect.Array;\n+import java.math.BigDecimal;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.time.LocalTime;\n+import java.time.ZoneOffset;\n+import java.time.temporal.TemporalAccessor;\n+import java.time.temporal.TemporalQueries;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;\n+import static org.apache.flink.formats.json.TimeFormats.ISO8601_TIMESTAMP_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.ISO8601_TIMESTAMP_WITH_LOCAL_TIMEZONE_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.SQL_TIMESTAMP_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.SQL_TIMESTAMP_WITH_LOCAL_TIMEZONE_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.SQL_TIME_FORMAT;\n+\n+/** Tool class used to convert from {@link JsonNode} to {@link RowData}. **/\n+@Internal\n+public class JsonToRowDataConverters implements Serializable {\n+\n+\t/**\n+\t * Flag indicating whether to fail if a field is missing.\n+\t */\n+\tprivate final boolean failOnMissingField;\n+\n+\t/**\n+\t * Flag indicating whether to ignore invalid fields/rows (default: throw an exception).\n+\t */\n+\tprivate final boolean ignoreParseErrors;\n+\n+\t/**\n+\t * Timestamp format specification which is used to parse timestamp.\n+\t */\n+\tprivate final TimestampFormat timestampFormat;\n+\n+\tpublic JsonToRowDataConverters(\n+\t\tboolean failOnMissingField,\n+\t\tboolean ignoreParseErrors,\n+\t\tTimestampFormat timestampFormat) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3523a26f23656c5d25be589b295136e20f6f48"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzNTA1Nw==", "bodyText": "Add serialVersionUID for serializable class.", "url": "https://github.com/apache/flink/pull/13303#discussion_r490835057", "createdAt": "2020-09-18T09:52:00Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonToRowDataConverters.java", "diffHunk": "@@ -0,0 +1,391 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.formats.json;\n+\n+import org.apache.flink.annotation.Internal;\n+import org.apache.flink.table.api.TableException;\n+import org.apache.flink.table.data.DecimalData;\n+import org.apache.flink.table.data.GenericArrayData;\n+import org.apache.flink.table.data.GenericMapData;\n+import org.apache.flink.table.data.GenericRowData;\n+import org.apache.flink.table.data.RowData;\n+import org.apache.flink.table.data.StringData;\n+import org.apache.flink.table.data.TimestampData;\n+import org.apache.flink.table.types.logical.ArrayType;\n+import org.apache.flink.table.types.logical.DecimalType;\n+import org.apache.flink.table.types.logical.LogicalType;\n+import org.apache.flink.table.types.logical.LogicalTypeFamily;\n+import org.apache.flink.table.types.logical.MapType;\n+import org.apache.flink.table.types.logical.RowType;\n+import org.apache.flink.table.types.logical.utils.LogicalTypeChecks;\n+import org.apache.flink.table.types.logical.utils.LogicalTypeUtils;\n+\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode;\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ArrayNode;\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;\n+import org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.TextNode;\n+\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.lang.reflect.Array;\n+import java.math.BigDecimal;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.time.LocalTime;\n+import java.time.ZoneOffset;\n+import java.time.temporal.TemporalAccessor;\n+import java.time.temporal.TemporalQueries;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;\n+import static org.apache.flink.formats.json.TimeFormats.ISO8601_TIMESTAMP_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.ISO8601_TIMESTAMP_WITH_LOCAL_TIMEZONE_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.SQL_TIMESTAMP_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.SQL_TIMESTAMP_WITH_LOCAL_TIMEZONE_FORMAT;\n+import static org.apache.flink.formats.json.TimeFormats.SQL_TIME_FORMAT;\n+\n+/** Tool class used to convert from {@link JsonNode} to {@link RowData}. **/\n+@Internal\n+public class JsonToRowDataConverters implements Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3523a26f23656c5d25be589b295136e20f6f48"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDgzOTA0OA==", "bodyText": "We should still keep all the parameters for equals and hashcode method. They are used in JsonFormatFactoryTest to verify the discovered format is as expected.\nThe same to JsonRowDataSerializationSchema.", "url": "https://github.com/apache/flink/pull/13303#discussion_r490839048", "createdAt": "2020-09-18T09:59:45Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "diffHunk": "@@ -149,316 +114,12 @@ public boolean equals(Object o) {\n \t\t\treturn false;\n \t\t}\n \t\tJsonRowDataDeserializationSchema that = (JsonRowDataDeserializationSchema) o;\n-\t\treturn failOnMissingField == that.failOnMissingField &&\n-\t\t\t\tignoreParseErrors == that.ignoreParseErrors &&\n-\t\t\t\tresultTypeInfo.equals(that.resultTypeInfo) &&\n-\t\t\t\ttimestampFormat.equals(that.timestampFormat);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e3523a26f23656c5d25be589b295136e20f6f48"}, "originalPosition": 120}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMzMxMzcw", "url": "https://github.com/apache/flink/pull/13303#pullrequestreview-492331370", "createdAt": "2020-09-21T07:22:40Z", "commit": {"oid": "085c67e7df971456b806b8e2c86ad47059d77bfe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNzoyMjo0MVrOHVDQvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNzoyMjo0MVrOHVDQvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNTU4Mg==", "bodyText": "Fixed a small issue in this equals method.", "url": "https://github.com/apache/flink/pull/13303#discussion_r491835582", "createdAt": "2020-09-21T07:22:41Z", "author": {"login": "crazyzhou"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataSerializationSchema.java", "diffHunk": "@@ -110,240 +85,11 @@ public boolean equals(Object o) {\n \t\t\treturn false;\n \t\t}\n \t\tJsonRowDataSerializationSchema that = (JsonRowDataSerializationSchema) o;\n-\t\treturn rowType.equals(that.rowType) && timestampFormat.equals(timestampFormat);\n+\t\treturn rowType.equals(that.rowType) && timestampFormat.equals(that.timestampFormat);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085c67e7df971456b806b8e2c86ad47059d77bfe"}, "originalPosition": 63}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9f23e94d45a6afb9ecedcda17defe2288673262", "author": {"user": {"login": "crazyzhou", "name": "Brian Zhou"}}, "url": "https://github.com/apache/flink/commit/b9f23e94d45a6afb9ecedcda17defe2288673262", "committedDate": "2020-09-22T05:36:06Z", "message": "Merge branch 'master' into flink-19098"}, "afterCommit": {"oid": "e9cf8d79a242dcf9d141ce7741e18b1a6d356c9d", "author": {"user": {"login": "crazyzhou", "name": "Brian Zhou"}}, "url": "https://github.com/apache/flink/commit/e9cf8d79a242dcf9d141ce7741e18b1a6d356c9d", "committedDate": "2020-09-23T03:09:44Z", "message": "Merge branch 'master' into flink-19098"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MjY4MzU4", "url": "https://github.com/apache/flink/pull/13303#pullrequestreview-495268358", "createdAt": "2020-09-24T06:54:55Z", "commit": {"oid": "e9cf8d79a242dcf9d141ce7741e18b1a6d356c9d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cb102050c173600cf1c537a6bcc41b110b5ad1e", "author": {"user": {"login": "crazyzhou", "name": "Brian Zhou"}}, "url": "https://github.com/apache/flink/commit/5cb102050c173600cf1c537a6bcc41b110b5ad1e", "committedDate": "2020-09-24T07:07:05Z", "message": "[FLINK-19098][json][csv] Make RowData CSV and JSON converters public\n\nThis closes #13303"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9cf8d79a242dcf9d141ce7741e18b1a6d356c9d", "author": {"user": {"login": "crazyzhou", "name": "Brian Zhou"}}, "url": "https://github.com/apache/flink/commit/e9cf8d79a242dcf9d141ce7741e18b1a6d356c9d", "committedDate": "2020-09-23T03:09:44Z", "message": "Merge branch 'master' into flink-19098"}, "afterCommit": {"oid": "5cb102050c173600cf1c537a6bcc41b110b5ad1e", "author": {"user": {"login": "crazyzhou", "name": "Brian Zhou"}}, "url": "https://github.com/apache/flink/commit/5cb102050c173600cf1c537a6bcc41b110b5ad1e", "committedDate": "2020-09-24T07:07:05Z", "message": "[FLINK-19098][json][csv] Make RowData CSV and JSON converters public\n\nThis closes #13303"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1b9c21ec9330791b02f6836fed0b36c4d62a253", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/d1b9c21ec9330791b02f6836fed0b36c4d62a253", "committedDate": "2020-09-24T08:57:52Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e65696be08fc766fb96afc45f5c6ea9cbd91e99b", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/e65696be08fc766fb96afc45f5c6ea9cbd91e99b", "committedDate": "2020-09-25T03:04:34Z", "message": "fix failed test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4352, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}