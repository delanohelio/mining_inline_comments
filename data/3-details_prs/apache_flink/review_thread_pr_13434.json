{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMDIwMzA1", "number": 13434, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzowNjowNFrOEmEv7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNjoyMDoxMFrOEnzvuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzU5MTUwOnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzowNjowNFrOHV5DlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzowNjowNFrOHV5DlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxNjk0OA==", "bodyText": "Let's not modify HadoopUtils. Instead, if hadoopConfDir is not null, set ConfigConstants.PATH_HADOOP_CONFIG in the Configuration instance.", "url": "https://github.com/apache/flink/pull/13434#discussion_r492716948", "createdAt": "2020-09-22T13:06:04Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "diffHunk": "@@ -199,7 +207,7 @@ private static HiveConf createHiveConf(@Nullable String hiveConfDir) {\n \t\tConfiguration hadoopConf = HadoopUtils.getHadoopConfiguration(new org.apache.flink.configuration.Configuration());\n \n \t\t// Add mapred-site.xml. We need to read configurations like compression codec.\n-\t\tfor (String possibleHadoopConfPath : HadoopUtils.possibleHadoopConfPaths(new org.apache.flink.configuration.Configuration())) {\n+\t\tfor (String possibleHadoopConfPath : HadoopUtils.possibleHadoopConfPaths(new org.apache.flink.configuration.Configuration(), hadoopConfDir)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dacd4ae1b261fa2dca65aa02b69142c34da121be"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzYwNzgyOnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/factories/HiveCatalogFactoryTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzowOTo1N1rOHV5NwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMzoxODoyOFrOHY9Q7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxOTU1Mg==", "bodyText": "Create a new test case for this", "url": "https://github.com/apache/flink/pull/13434#discussion_r492719552", "createdAt": "2020-09-22T13:09:57Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/factories/HiveCatalogFactoryTest.java", "diffHunk": "@@ -57,10 +59,10 @@\n \tpublic ExpectedException expectedException = ExpectedException.none();\n \n \t@Test\n-\tpublic void test() {\n+\tpublic void test() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dacd4ae1b261fa2dca65aa02b69142c34da121be"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkzMTYzMA==", "bodyText": "test is too generic, please give a meaningful name for this test", "url": "https://github.com/apache/flink/pull/13434#discussion_r495931630", "createdAt": "2020-09-28T13:18:28Z", "author": {"login": "godfreyhe"}, "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/factories/HiveCatalogFactoryTest.java", "diffHunk": "@@ -57,10 +59,10 @@\n \tpublic ExpectedException expectedException = ExpectedException.none();\n \n \t@Test\n-\tpublic void test() {\n+\tpublic void test() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxOTU1Mg=="}, "originalCommit": {"oid": "dacd4ae1b261fa2dca65aa02b69142c34da121be"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzYxMjU2OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/factories/HiveCatalogFactoryTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzoxMTowNFrOHV5QyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMzoxMTowNFrOHV5QyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcyMDMyOQ==", "bodyText": "Besides, we need to add a test case for the hadoop conf dir configuration.", "url": "https://github.com/apache/flink/pull/13434#discussion_r492720329", "createdAt": "2020-09-22T13:11:04Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/factories/HiveCatalogFactoryTest.java", "diffHunk": "@@ -57,10 +59,10 @@\n \tpublic ExpectedException expectedException = ExpectedException.none();\n \n \t@Test\n-\tpublic void test() {\n+\tpublic void test() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dacd4ae1b261fa2dca65aa02b69142c34da121be"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTY0NjU5OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTableUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo1MjoyNVrOHYkIMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo1MjoyNVrOHYkIMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxOTc5Mw==", "bodyText": "Why do we need hdfs-default.xml?", "url": "https://github.com/apache/flink/pull/13434#discussion_r495519793", "createdAt": "2020-09-27T02:52:25Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTableUtil.java", "diffHunk": "@@ -421,6 +424,31 @@ public static void checkAcidTable(CatalogTable catalogTable, ObjectPath tablePat\n \t\t}\n \t}\n \n+\t/**\n+\t * Returns a new Hadoop Configuration object using the path to the hadoop conf configured.\n+\t *\n+\t * @param hadoopConfDir Hadoop conf directory path.\n+\t * @return A Hadoop configuration instance.\n+\t */\n+\tpublic static Configuration getHadoopConfiguration(String hadoopConfDir) {\n+\t\tConfiguration hadoopConfiguration = new Configuration();\n+\t\tif (new File(hadoopConfDir).exists()) {\n+\t\t\tif (new File(hadoopConfDir + \"/core-site.xml\").exists()) {\n+\t\t\t\thadoopConfiguration.addResource(new Path(hadoopConfDir + \"/core-site.xml\"));\n+\t\t\t}\n+\t\t\tif (new File(hadoopConfDir + \"/hdfs-default.xml\").exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4033f16e326039a0f33958d096ba0c30ef26a6f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTY0NzE1OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTableUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo1MzozM1rOHYkIfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo1MzozM1rOHYkIfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxOTg2OQ==", "bodyText": "We also need yarn-site.xml, which is needed to generate Parquet splits in a kerberized environment.", "url": "https://github.com/apache/flink/pull/13434#discussion_r495519869", "createdAt": "2020-09-27T02:53:33Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTableUtil.java", "diffHunk": "@@ -421,6 +424,31 @@ public static void checkAcidTable(CatalogTable catalogTable, ObjectPath tablePat\n \t\t}\n \t}\n \n+\t/**\n+\t * Returns a new Hadoop Configuration object using the path to the hadoop conf configured.\n+\t *\n+\t * @param hadoopConfDir Hadoop conf directory path.\n+\t * @return A Hadoop configuration instance.\n+\t */\n+\tpublic static Configuration getHadoopConfiguration(String hadoopConfDir) {\n+\t\tConfiguration hadoopConfiguration = new Configuration();\n+\t\tif (new File(hadoopConfDir).exists()) {\n+\t\t\tif (new File(hadoopConfDir + \"/core-site.xml\").exists()) {\n+\t\t\t\thadoopConfiguration.addResource(new Path(hadoopConfDir + \"/core-site.xml\"));\n+\t\t\t}\n+\t\t\tif (new File(hadoopConfDir + \"/hdfs-default.xml\").exists()) {\n+\t\t\t\thadoopConfiguration.addResource(new Path(hadoopConfDir + \"/hdfs-default.xml\"));\n+\t\t\t}\n+\t\t\tif (new File(hadoopConfDir + \"/hdfs-site.xml\").exists()) {\n+\t\t\t\thadoopConfiguration.addResource(new Path(hadoopConfDir + \"/hdfs-site.xml\"));\n+\t\t\t}\n+\t\t\tif (new File(hadoopConfDir + \"/mapred-site.xml\").exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4033f16e326039a0f33958d096ba0c30ef26a6f"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTY1MDA1OnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo1ODowM1rOHYkJ2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo1ODowM1rOHYkJ2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUyMDIxNw==", "bodyText": "Let's not rely on HadoopUtils.getHadoopConfiguration to get the configuration. We can just call HadoopUtils.possibleHadoopConfPaths to get the paths and load the files by ourselves. And the loading logic should be consistent with HiveTableUtil.getHadoopConfiguration.", "url": "https://github.com/apache/flink/pull/13434#discussion_r495520217", "createdAt": "2020-09-27T02:58:03Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "diffHunk": "@@ -196,15 +204,21 @@ private static HiveConf createHiveConf(@Nullable String hiveConfDir) {\n \t\t}\n \n \t\t// create HiveConf from hadoop configuration\n-\t\tConfiguration hadoopConf = HadoopUtils.getHadoopConfiguration(new org.apache.flink.configuration.Configuration());\n+\t\tConfiguration hadoopConf;\n \n-\t\t// Add mapred-site.xml. We need to read configurations like compression codec.\n-\t\tfor (String possibleHadoopConfPath : HadoopUtils.possibleHadoopConfPaths(new org.apache.flink.configuration.Configuration())) {\n-\t\t\tFile mapredSite = new File(new File(possibleHadoopConfPath), \"mapred-site.xml\");\n-\t\t\tif (mapredSite.exists()) {\n-\t\t\t\thadoopConf.addResource(new Path(mapredSite.getAbsolutePath()));\n-\t\t\t\tbreak;\n+\t\tif (isNullOrWhitespaceOnly(hadoopConfDir)) {\n+\t\t\thadoopConf = HadoopUtils.getHadoopConfiguration(new org.apache.flink.configuration.Configuration());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4033f16e326039a0f33958d096ba0c30ef26a6f"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTc3NDcxOnYy", "diffSide": "RIGHT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTableUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNjoxNTo1M1rOHYlB_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNjoxNTo1M1rOHYlB_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzNDU5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tif (new File(hadoopConfDir + \"/core-site.xml\").exists()) {\n          \n          \n            \n            \t\t\tif (new File(hadoopConfDir, \"core-site.xml\").exists()) {", "url": "https://github.com/apache/flink/pull/13434#discussion_r495534590", "createdAt": "2020-09-27T06:15:53Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/util/HiveTableUtil.java", "diffHunk": "@@ -431,22 +431,23 @@ public static void checkAcidTable(CatalogTable catalogTable, ObjectPath tablePat\n \t * @return A Hadoop configuration instance.\n \t */\n \tpublic static Configuration getHadoopConfiguration(String hadoopConfDir) {\n-\t\tConfiguration hadoopConfiguration = new Configuration();\n \t\tif (new File(hadoopConfDir).exists()) {\n+\t\t\tConfiguration hadoopConfiguration = new Configuration();\n \t\t\tif (new File(hadoopConfDir + \"/core-site.xml\").exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c08acf8c251407d39f2628b970d5b7eb437af99"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTc3NzIxOnYy", "diffSide": "LEFT", "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNjoyMDoxMFrOHYlDJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNjoyMDoxMFrOHYlDJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUzNDg4NQ==", "bodyText": "This comment should be migrated to HiveTableUtil::getHadoopConfiguration", "url": "https://github.com/apache/flink/pull/13434#discussion_r495534885", "createdAt": "2020-09-27T06:20:10Z", "author": {"login": "lirui-apache"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "diffHunk": "@@ -195,18 +202,19 @@ private static HiveConf createHiveConf(@Nullable String hiveConfDir) {\n \t\t\t\tString.format(\"Failed to get hive-site.xml from %s\", hiveConfDir), e);\n \t\t}\n \n-\t\t// create HiveConf from hadoop configuration\n-\t\tConfiguration hadoopConf = HadoopUtils.getHadoopConfiguration(new org.apache.flink.configuration.Configuration());\n-\n-\t\t// Add mapred-site.xml. We need to read configurations like compression codec.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c08acf8c251407d39f2628b970d5b7eb437af99"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 307, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}