{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2OTEwOTg5", "number": 13972, "title": "[FLINK-19912][json] Fix JSON format fails to serialize map value with\u2026", "bodyText": "\u2026 null keys\nWhat is the purpose of the change\nFix JSON format fails to serialize map value with null keys\nBrief change log\n\nAdd map-null-key.mode and map-null-key.literal\nto JsonRowDeserializationSchema, MaxwellJsonSerializationSchema , DebeziumJsonSerializationSchema and CanalJsonSerializationSchema.\nAdd decoding format options validator and encoding format options validator to CanalJsonFormatFactory, DebeziumJsonFormatFactory and MaxwellJsonFormatFactory.\nFix GenericMapData  hash code NPE when map value with null keys .\nUpdate documents for Canal,  Debezium and Json.\nMaxwell document is missing, creating issue FLINK-20034 to track it.\n\nVerifying this change\nThis change added tests and can be verified as follows:\n\nJsonRowDataSerDeSchemaTest#testSerializationMapNullKey  ensure options is correct when serializing.\nJsonFormatFactoryTest#testInvalidOptionForMapNullKeyMode ensure options validate correctly.\nJsonFormatFactoryTest#testLowerCaseOptionForMapNullKeyMode ensure options are case insensitive.\nOther Format validator tests.\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no / don't know)\nThe runtime per-record code paths (performance sensitive): (no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (no / don't know)\nThe S3 file system connector: (no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-11-06T18:28:54Z", "url": "https://github.com/apache/flink/pull/13972", "merged": true, "mergeCommit": {"oid": "ba7c232cd2519995b693376cdf08b028e8f2e260"}, "closed": true, "closedAt": "2020-11-11T02:58:05Z", "author": {"login": "wangxlong"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdaLcQSgBqjM5Njk4OTA2ODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbEmVegBqjM5Nzc1MDI1NzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e36811b656573dd5258c4606b89fd00debc4d96", "author": {"user": {"login": "wangxlong", "name": null}}, "url": "https://github.com/apache/flink/commit/1e36811b656573dd5258c4606b89fd00debc4d96", "committedDate": "2020-11-06T18:25:34Z", "message": "[FLINK-19912][json] Fix JSON format fails to serialize map value with null keys"}, "afterCommit": {"oid": "51a6d2c307caa087518945825fb72ac1921c1a50", "author": {"user": {"login": "wangxlong", "name": null}}, "url": "https://github.com/apache/flink/commit/51a6d2c307caa087518945825fb72ac1921c1a50", "committedDate": "2020-11-07T13:17:56Z", "message": "[FLINK-19912][json] Fix JSON format fails to serialize map value with null keys"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51a6d2c307caa087518945825fb72ac1921c1a50", "author": {"user": {"login": "wangxlong", "name": null}}, "url": "https://github.com/apache/flink/commit/51a6d2c307caa087518945825fb72ac1921c1a50", "committedDate": "2020-11-07T13:17:56Z", "message": "[FLINK-19912][json] Fix JSON format fails to serialize map value with null keys"}, "afterCommit": {"oid": "18bd1620f55d1363b4d3173dc2e9c14e83ba859b", "author": {"user": {"login": "wangxlong", "name": null}}, "url": "https://github.com/apache/flink/commit/18bd1620f55d1363b4d3173dc2e9c14e83ba859b", "committedDate": "2020-11-08T13:40:43Z", "message": "[FLINK-19912][json] Fix JSON format fails to serialize map value with null keys"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1OTE2OTA4", "url": "https://github.com/apache/flink/pull/13972#pullrequestreview-525916908", "createdAt": "2020-11-09T04:28:52Z", "commit": {"oid": "951191135eee7d3f7fddea2a5e296dbd36716dd3"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNDoyODo1MlrOHvenAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTowOToxNVrOHvlDAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU0NjYyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t.withDescription(\"Optional flag to specify string literal when 'map-null-key.literal' is LITERAL, \\\"null\\\" by default.\");\n          \n          \n            \n            \t\t.withDescription(\"Optional flag to specify string literal for null keys when 'map-null-key.mode' is LITERAL, \\\"null\\\" by default.\");", "url": "https://github.com/apache/flink/pull/13972#discussion_r519546625", "createdAt": "2020-11-09T04:28:52Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonOptions.java", "diffHunk": "@@ -36,14 +40,28 @@\n \t\t\t.key(\"fail-on-missing-field\")\n \t\t\t.booleanType()\n \t\t\t.defaultValue(false)\n-\t\t\t.withDescription(\"Optional flag to specify whether to fail if a field is missing or not, false by default\");\n+\t\t\t.withDescription(\"Optional flag to specify whether to fail if a field is missing or not, false by default.\");\n \n \tpublic static final ConfigOption<Boolean> IGNORE_PARSE_ERRORS = ConfigOptions\n \t\t\t.key(\"ignore-parse-errors\")\n \t\t\t.booleanType()\n \t\t\t.defaultValue(false)\n \t\t\t.withDescription(\"Optional flag to skip fields and rows with parse errors instead of failing;\\n\"\n-\t\t\t\t\t+ \"fields are set to null in case of errors, false by default\");\n+\t\t\t\t\t+ \"fields are set to null in case of errors, false by default.\");\n+\n+\tpublic static final ConfigOption<String> MAP_NULL_KEY_MODE = ConfigOptions\n+\t\t.key(\"map-null-key.mode\")\n+\t\t.stringType()\n+\t\t.defaultValue(\"FAIL\")\n+\t\t.withDescription(\"Optional flag to control the handling mode when serializing null key for map data, FAIL by default.\"\n+\t\t\t+ \" Option DROP will drop null key entries for map data.\"\n+\t\t\t+ \" Option LITERAL will use 'map-null-key.literal' as key literal.\");\n+\n+\tpublic static final ConfigOption<String> MAP_NULL_KEY_LITERAL = ConfigOptions\n+\t\t.key(\"map-null-key.literal\")\n+\t\t.stringType()\n+\t\t.defaultValue(\"null\")\n+\t\t.withDescription(\"Optional flag to specify string literal when 'map-null-key.literal' is LITERAL, \\\"null\\\" by default.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "951191135eee7d3f7fddea2a5e296dbd36716dd3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU0ODg0Nw==", "bodyText": "We don't need JSON_MAP_NULL_KEY_MODE_ENUM.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t// validator for {@link MAP_NULL_KEY_MODE}\n          \n          \n            \n            \t\tif (!JSON_MAP_NULL_KEY_MODE_ENUM.contains(mapNullKeyMode.toUpperCase())){\n          \n          \n            \n            \t\t\tthrow new ValidationException(\n          \n          \n            \n            \t\t\t\tString.format(\"Unsupported value '%s' for %s. Supported values are [FAIL, DROP, LITERAL].\",\n          \n          \n            \n            \t\t\t\t\tmapNullKeyMode, MAP_NULL_KEY_MODE.key()));\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \t\tSet<String> nullKeyModes = Arrays.stream(MapNullKeyMode.values())\n          \n          \n            \n            \t\t\t.map(Objects::toString)\n          \n          \n            \n            \t\t\t.collect(Collectors.toSet());\n          \n          \n            \n            \t\tif (!nullKeyModes.contains(tableOptions.get(MAP_NULL_KEY_MODE).toUpperCase())){\n          \n          \n            \n            \t\t\tthrow new ValidationException(String.format(\n          \n          \n            \n            \t\t\t\t\"Unsupported value '%s' for option %s. Supported values are %s.\",\n          \n          \n            \n            \t\t\t\tmapNullKeyMode,\n          \n          \n            \n            \t\t\t\tMAP_NULL_KEY_MODE.key(),\n          \n          \n            \n            \t\t\t\tnullKeyModes));\n          \n          \n            \n            \t\t}", "url": "https://github.com/apache/flink/pull/13972#discussion_r519548847", "createdAt": "2020-11-09T04:39:16Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonOptions.java", "diffHunk": "@@ -81,4 +110,89 @@ public static TimestampFormat getTimestampFormat(ReadableConfig config){\n \t\t\t\t\tString.format(\"Unsupported timestamp format '%s'. Validator should have checked that.\", timestampFormat));\n \t\t}\n \t}\n+\n+\t/**\n+\t * Creates handling mode for null key map data.\n+\t *\n+\t * <p>See {@link #JSON_MAP_NULL_KEY_MODE_FAIL}, {@link #JSON_MAP_NULL_KEY_MODE_DROP},\n+\t * and {@link #JSON_MAP_NULL_KEY_MODE_LITERAL} for more information.\n+\t */\n+\tpublic static MapNullKeyMode getMapNullKeyMode(ReadableConfig config){\n+\t\tString mapNullKeyMode = config.get(MAP_NULL_KEY_MODE);\n+\t\tswitch (mapNullKeyMode.toUpperCase()){\n+\t\t\tcase JSON_MAP_NULL_KEY_MODE_FAIL:\n+\t\t\t\treturn MapNullKeyMode.FAIL;\n+\t\t\tcase JSON_MAP_NULL_KEY_MODE_DROP:\n+\t\t\t\treturn MapNullKeyMode.DROP;\n+\t\t\tcase JSON_MAP_NULL_KEY_MODE_LITERAL:\n+\t\t\t\treturn MapNullKeyMode.LITERAL;\n+\t\t\tdefault:\n+\t\t\t\tthrow new TableException(\n+\t\t\t\t\tString.format(\"Unsupported map null key handling mode '%s'. Validator should have checked that.\", mapNullKeyMode));\n+\t\t}\n+\t}\n+\n+\t// --------------------------------------------------------------------------------------------\n+\t// Inner classes\n+\t// --------------------------------------------------------------------------------------------\n+\n+\t/** Handling mode for map data with null key. */\n+\tpublic enum MapNullKeyMode {\n+\t\tFAIL,\n+\t\tDROP,\n+\t\tLITERAL\n+\t}\n+\n+\t// --------------------------------------------------------------------------------------------\n+\t// Validation\n+\t// --------------------------------------------------------------------------------------------\n+\n+\t/**\n+\t * Validator for decoding format.\n+\t */\n+\tpublic static void validateDecodingFormatOptions(ReadableConfig tableOptions) {\n+\t\tboolean failOnMissingField = tableOptions.get(FAIL_ON_MISSING_FIELD);\n+\t\tboolean ignoreParseErrors = tableOptions.get(IGNORE_PARSE_ERRORS);\n+\t\tif (ignoreParseErrors && failOnMissingField) {\n+\t\t\tthrow new ValidationException(FAIL_ON_MISSING_FIELD.key()\n+\t\t\t\t+ \" and \"\n+\t\t\t\t+ IGNORE_PARSE_ERRORS.key()\n+\t\t\t\t+ \" shouldn't both be true.\");\n+\t\t}\n+\t\tvalidateTimestampFormat(tableOptions);\n+\t}\n+\n+\t/**\n+\t * Validator for encoding format.\n+\t */\n+\tpublic static void validateEncodingFormatOptions(ReadableConfig tableOptions) {\n+\t\tString mapNullKeyMode = tableOptions.get(MAP_NULL_KEY_MODE);\n+\t\t// validator for {@link MAP_NULL_KEY_MODE}\n+\t\tif (!JSON_MAP_NULL_KEY_MODE_ENUM.contains(mapNullKeyMode.toUpperCase())){\n+\t\t\tthrow new ValidationException(\n+\t\t\t\tString.format(\"Unsupported value '%s' for %s. Supported values are [FAIL, DROP, LITERAL].\",\n+\t\t\t\t\tmapNullKeyMode, MAP_NULL_KEY_MODE.key()));\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "951191135eee7d3f7fddea2a5e296dbd36716dd3"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYwNjg2MQ==", "bodyText": "Separate parameters into a new line.", "url": "https://github.com/apache/flink/pull/13972#discussion_r519606861", "createdAt": "2020-11-09T07:44:44Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonFormatFactory.java", "diffHunk": "@@ -96,16 +98,21 @@ public ChangelogMode getChangelogMode() {\n \t\t\tDynamicTableFactory.Context context,\n \t\t\tReadableConfig formatOptions) {\n \t\tFactoryUtil.validateFactoryOptions(this, formatOptions);\n+\t\tvalidateEncodingFormatOptions(formatOptions);\n \n \t\tTimestampFormat timestampOption = JsonOptions.getTimestampFormat(formatOptions);\n+\t\tJsonOptions.MapNullKeyMode mapNullKeyMode = JsonOptions.getMapNullKeyMode(formatOptions);\n+\t\tString mapNullKeyLiteral = formatOptions.get(MAP_NULL_KEY_LITERAL);\n \n \t\treturn new EncodingFormat<SerializationSchema<RowData>>() {\n \t\t\t@Override\n \t\t\tpublic SerializationSchema<RowData> createRuntimeEncoder(\n \t\t\t\t\tDynamicTableSink.Context context,\n \t\t\t\t\tDataType consumedDataType) {\n \t\t\t\tfinal RowType rowType = (RowType) consumedDataType.getLogicalType();\n-\t\t\t\treturn new JsonRowDataSerializationSchema(rowType, timestampOption);\n+\t\t\t\treturn new JsonRowDataSerializationSchema(\n+\t\t\t\t\t\trowType, timestampOption,\n+\t\t\t\t\t\tmapNullKeyMode, mapNullKeyLiteral);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2dcd73cb70c5a3a1628aeff8dc1fb8e05d6fd53"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYyMDEyOQ==", "bodyText": "Can simplify invoking keyArray.isNullAt(i) here.", "url": "https://github.com/apache/flink/pull/13972#discussion_r519620129", "createdAt": "2020-11-09T08:12:31Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java", "diffHunk": "@@ -250,7 +261,26 @@ private RowDataToJsonConverter createMapConverter(\n \t\t\tArrayData valueArray = map.valueArray();\n \t\t\tint numElements = map.size();\n \t\t\tfor (int i = 0; i < numElements; i++) {\n-\t\t\t\tString fieldName = keyArray.getString(i).toString(); // key must be string\n+\t\t\t\tboolean isFieldNameNull = keyArray.isNullAt(i);\n+\t\t\t\tString fieldName = null;\n+\t\t\t\tif (isFieldNameNull) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2dcd73cb70c5a3a1628aeff8dc1fb8e05d6fd53"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYyMDI2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\t\tthrow new RuntimeException(\"Map key is null, please have a check.\"\n          \n          \n            \n            \t\t\t\t\t\t\t\t+ \" You can setup null key handling mode to drop entry or replace with a no-null literal.\");\n          \n          \n            \n            \t\t\t\t\t\t\tthrow new RuntimeException(String.format(\n          \n          \n            \n            \t\t\t\t\t\t\t\t\"JSON format doesn't support to serialize map data with null keys. \" +\n          \n          \n            \n            \t\t\t\t\t\t\t\t\t\"You can drop null key entries or encode null in literals by specifying %s option.\",\n          \n          \n            \n            \t\t\t\t\t\t\t\tJsonOptions.MAP_NULL_KEY_LITERAL.key()));", "url": "https://github.com/apache/flink/pull/13972#discussion_r519620269", "createdAt": "2020-11-09T08:12:49Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java", "diffHunk": "@@ -250,7 +261,26 @@ private RowDataToJsonConverter createMapConverter(\n \t\t\tArrayData valueArray = map.valueArray();\n \t\t\tint numElements = map.size();\n \t\t\tfor (int i = 0; i < numElements; i++) {\n-\t\t\t\tString fieldName = keyArray.getString(i).toString(); // key must be string\n+\t\t\t\tboolean isFieldNameNull = keyArray.isNullAt(i);\n+\t\t\t\tString fieldName = null;\n+\t\t\t\tif (isFieldNameNull) {\n+\t\t\t\t\t// when map key is null\n+\t\t\t\t\tswitch (mapNullKeyMode) {\n+\t\t\t\t\t\tcase LITERAL:\n+\t\t\t\t\t\t\tfieldName = mapNullKeyLiteral;\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\tcase DROP:\n+\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\tcase FAIL:\n+\t\t\t\t\t\t\tthrow new RuntimeException(\"Map key is null, please have a check.\"\n+\t\t\t\t\t\t\t\t+ \" You can setup null key handling mode to drop entry or replace with a no-null literal.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2dcd73cb70c5a3a1628aeff8dc1fb8e05d6fd53"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY1MjA5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    <li>Option <code>'LITERAL'</code> will replace null key with string literal.</li>\n          \n          \n            \n                    <li>Option <code>'LITERAL'</code> will replace null key with string literal. The string literal is defined by <code>json.map-null-key.literal</code> option.</li>", "url": "https://github.com/apache/flink/pull/13972#discussion_r519652098", "createdAt": "2020-11-09T09:09:15Z", "author": {"login": "wuchong"}, "path": "docs/dev/table/connectors/formats/json.md", "diffHunk": "@@ -117,6 +117,26 @@ Format Options\n       </ul>\n       </td>\n     </tr>\n+    <tr>\n+      <td><h5>json.map-null-key.mode</h5></td>\n+      <td>optional</td>\n+      <td style=\"word-wrap: break-word;\"><code>'FAIL'</code></td>\n+      <td>String</td>\n+      <td>Specify the handling mode when serializing null keys for map data. Currently supported values are <code>'FAIL'</code>, <code>'DROP'</code> and <code>'LITERAL'</code>:\n+      <ul>\n+        <li>Option <code>'FAIL'</code> will throw exception when encountering map with null key.</li>\n+        <li>Option <code>'DROP'</code> will drop null key entries for map data.</li>\n+        <li>Option <code>'LITERAL'</code> will replace null key with string literal.</li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2dcd73cb70c5a3a1628aeff8dc1fb8e05d6fd53"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDUxMTI3", "url": "https://github.com/apache/flink/pull/13972#pullrequestreview-526051127", "createdAt": "2020-11-09T09:10:58Z", "commit": {"oid": "b2dcd73cb70c5a3a1628aeff8dc1fb8e05d6fd53"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToxMDo1OVrOHvlG8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOToxMDo1OVrOHvlG8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY1MzEwNw==", "bodyText": "json.map-null-key.mode", "url": "https://github.com/apache/flink/pull/13972#discussion_r519653107", "createdAt": "2020-11-09T09:10:59Z", "author": {"login": "wuchong"}, "path": "docs/dev/table/connectors/formats/json.md", "diffHunk": "@@ -117,6 +117,26 @@ Format Options\n       </ul>\n       </td>\n     </tr>\n+    <tr>\n+      <td><h5>json.map-null-key.mode</h5></td>\n+      <td>optional</td>\n+      <td style=\"word-wrap: break-word;\"><code>'FAIL'</code></td>\n+      <td>String</td>\n+      <td>Specify the handling mode when serializing null keys for map data. Currently supported values are <code>'FAIL'</code>, <code>'DROP'</code> and <code>'LITERAL'</code>:\n+      <ul>\n+        <li>Option <code>'FAIL'</code> will throw exception when encountering map with null key.</li>\n+        <li>Option <code>'DROP'</code> will drop null key entries for map data.</li>\n+        <li>Option <code>'LITERAL'</code> will replace null key with string literal.</li>\n+      </ul>\n+      </td>\n+    </tr>\n+    <tr>\n+      <td><h5>json.map-null-key.literal</h5></td>\n+      <td>optional</td>\n+      <td style=\"word-wrap: break-word;\">'null'</td>\n+      <td>String</td>\n+      <td>Specify string literal to replace null key when <code>'json.map-null-key.literal'</code> is LITERAL.</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2dcd73cb70c5a3a1628aeff8dc1fb8e05d6fd53"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTEwMjM5", "url": "https://github.com/apache/flink/pull/13972#pullrequestreview-526910239", "createdAt": "2020-11-10T07:09:00Z", "commit": {"oid": "e1393af2a259f5db3cd78f49130412df83a062a5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNzowOTowMVrOHwOzNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNzowOTowMVrOHwOzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDMzNjE4MQ==", "bodyText": "Sorry, it should be MAP_NULL_KEY_MODE option.", "url": "https://github.com/apache/flink/pull/13972#discussion_r520336181", "createdAt": "2020-11-10T07:09:01Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/RowDataToJsonConverters.java", "diffHunk": "@@ -272,8 +271,10 @@ private RowDataToJsonConverter createMapConverter(\n \t\t\t\t\t\tcase DROP:\n \t\t\t\t\t\t\tcontinue;\n \t\t\t\t\t\tcase FAIL:\n-\t\t\t\t\t\t\tthrow new RuntimeException(\"Map key is null, please have a check.\"\n-\t\t\t\t\t\t\t\t+ \" You can setup null key handling mode to drop entry or replace with a no-null literal.\");\n+\t\t\t\t\t\t\tthrow new RuntimeException(String.format(\n+\t\t\t\t\t\t\t\t\"JSON format doesn't support to serialize map data with null keys. \"\n+\t\t\t\t\t\t\t\t\t+ \"You can drop null key entries or encode null in literals by specifying %s option.\",\n+\t\t\t\t\t\t\t\tJsonOptions.MAP_NULL_KEY_LITERAL.key()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1393af2a259f5db3cd78f49130412df83a062a5"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTMyNzM2", "url": "https://github.com/apache/flink/pull/13972#pullrequestreview-526932736", "createdAt": "2020-11-10T07:49:57Z", "commit": {"oid": "e570f8d0dcd05968a54fd495f0aae838b8cc17b5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeae10f1d6b602b08485ff70d90ea8f536779420", "author": {"user": {"login": "wangxlong", "name": null}}, "url": "https://github.com/apache/flink/commit/aeae10f1d6b602b08485ff70d90ea8f536779420", "committedDate": "2020-11-10T07:53:05Z", "message": "[FLINK-19912][json] Fix JSON format fails to serialize map value with null keys\n\nThis closes #13972"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e570f8d0dcd05968a54fd495f0aae838b8cc17b5", "author": {"user": {"login": "wangxlong", "name": null}}, "url": "https://github.com/apache/flink/commit/e570f8d0dcd05968a54fd495f0aae838b8cc17b5", "committedDate": "2020-11-10T07:26:28Z", "message": "[FLINK-19912][json] Fix comment"}, "afterCommit": {"oid": "aeae10f1d6b602b08485ff70d90ea8f536779420", "author": {"user": {"login": "wangxlong", "name": null}}, "url": "https://github.com/apache/flink/commit/aeae10f1d6b602b08485ff70d90ea8f536779420", "committedDate": "2020-11-10T07:53:05Z", "message": "[FLINK-19912][json] Fix JSON format fails to serialize map value with null keys\n\nThis closes #13972"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4474, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}