{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMzI3Mjg5", "number": 10824, "title": "[FLINK-15152][checkpointing] Restatrt CheckpointCoordinator if StopWithSavepoint failed", "bodyText": "What is the purpose of the change\nRestart CheckpointCoordinator if StopWithSavepoint failed.\nVerifying this change\nThis change added tests and can be verified as follows:\n\nJobMasterStopWithSavepointIT#testRestartCheckpointCoordinatorIfStopWithSavepointFails\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Yarn/Mesos, ZooKeeper: (yes)\nThe S3 file system connector: ( no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)\nIf yes, how is the feature documented? (not applicable)", "createdAt": "2020-01-10T08:14:05Z", "url": "https://github.com/apache/flink/pull/10824", "merged": true, "mergeCommit": {"oid": "e6aff96e575e5d95bb52a0ba34ffbcbdc695873a"}, "closed": true, "closedAt": "2020-01-16T09:37:10Z", "author": {"login": "klion26"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb46BWBgH2gAyMzYxMzI3Mjg5OjdhNjE5NzgwMDdhNWEwMjcyM2E1NjFlZTE0NWQ4MmUyNDEzZTUxYWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb622V7AFqTM0Mzc3OTE3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7a61978007a5a02723a561ee145d82e2413e51ae", "author": {"user": {"login": "klion26", "name": "Congxian Qiu"}}, "url": "https://github.com/apache/flink/commit/7a61978007a5a02723a561ee145d82e2413e51ae", "committedDate": "2020-01-10T08:10:39Z", "message": "[FLINK-15152][checkpointing] Restatrt CheckpointCoordinator if StopWithSavepoint failed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNzk4NTgy", "url": "https://github.com/apache/flink/pull/10824#pullrequestreview-341798582", "createdAt": "2020-01-13T12:05:37Z", "commit": {"oid": "7a61978007a5a02723a561ee145d82e2413e51ae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMjowNTozN1rOFc0zWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMjoyMzowMFrOFc1MWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc2OTU2MA==", "bodyText": "nit:\n\nI think you should be more specific and verify for example exact CheckpointFailureReason if this is easy thing to do (otherwise there are higher chances for the test incorrectly passing because of different bug/exception).\nIf the exception is not what you expected, you should just throw e it, instead of using assertThat, to get an even nicer exception message with a stack trace.", "url": "https://github.com/apache/flink/pull/10824#discussion_r365769560", "createdAt": "2020-01-13T12:05:37Z", "author": {"login": "pnowojski"}, "path": "flink-tests/src/test/java/org/apache/flink/runtime/jobmaster/JobMasterStopWithSavepointIT.java", "diffHunk": "@@ -194,6 +197,30 @@ private void throwingExceptionOnCallbackWithRestartsHelper(final boolean termina\n \t\tassertThat(getJobStatus(), either(equalTo(JobStatus.CANCELLING)).or(equalTo(JobStatus.CANCELED)));\n \t}\n \n+\t@Test\n+\tpublic void testRestartCheckpointCoordinatorIfStopWithSavepointFails() throws Exception {\n+\t\tsetUpJobGraph(ExceptionOnCallbackStreamTask.class, RestartStrategies.noRestart());\n+\n+\t\ttry {\n+\t\t\tFiles.setPosixFilePermissions(savepointDirectory, Collections.emptySet());\n+\t\t} catch (IOException e) {\n+\t\t\tAssume.assumeNoException(e);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tstopWithSavepoint(true).get();\n+\t\t\tfail();\n+\t\t} catch (Exception e) {\n+\t\t\tassertThat(ExceptionUtils.findThrowable(e, CheckpointException.class).isPresent(), equalTo(true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a61978007a5a02723a561ee145d82e2413e51ae"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3NDI4OQ==", "bodyText": "I'm not sure if this is correct and whether the newly created checkpointsToWaitFor is guaranteed to be visible by the ExceptionOnCallbackStreamTask instance, as ExceptionOnCallbackStreamTask's thread is instantiated before this line.\nProbably the easiest fix would be to make checkpointsToWaitFor volatile.", "url": "https://github.com/apache/flink/pull/10824#discussion_r365774289", "createdAt": "2020-01-13T12:18:38Z", "author": {"login": "pnowojski"}, "path": "flink-tests/src/test/java/org/apache/flink/runtime/jobmaster/JobMasterStopWithSavepointIT.java", "diffHunk": "@@ -194,6 +197,30 @@ private void throwingExceptionOnCallbackWithRestartsHelper(final boolean termina\n \t\tassertThat(getJobStatus(), either(equalTo(JobStatus.CANCELLING)).or(equalTo(JobStatus.CANCELED)));\n \t}\n \n+\t@Test\n+\tpublic void testRestartCheckpointCoordinatorIfStopWithSavepointFails() throws Exception {\n+\t\tsetUpJobGraph(ExceptionOnCallbackStreamTask.class, RestartStrategies.noRestart());\n+\n+\t\ttry {\n+\t\t\tFiles.setPosixFilePermissions(savepointDirectory, Collections.emptySet());\n+\t\t} catch (IOException e) {\n+\t\t\tAssume.assumeNoException(e);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tstopWithSavepoint(true).get();\n+\t\t\tfail();\n+\t\t} catch (Exception e) {\n+\t\t\tassertThat(ExceptionUtils.findThrowable(e, CheckpointException.class).isPresent(), equalTo(true));\n+\t\t}\n+\n+\t\tfinal JobStatus jobStatus = clusterClient.getJobStatus(jobGraph.getJobID()).get(60, TimeUnit.SECONDS);\n+\t\tassertThat(jobStatus, equalTo(JobStatus.RUNNING));\n+\t\t// assert that checkpoints are continued to be triggered\n+\t\tcheckpointsToWaitFor = new CountDownLatch(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a61978007a5a02723a561ee145d82e2413e51ae"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc3NTk2Mw==", "bodyText": "I think the fact that you are using ExceptionOnCallbackStreamTask might be a bit misleading, as as far as I understand, you are doing it only for the checkpointsToWaitFor right? And you are ignoring the whole \"exception on notifyCheckpointComplete callback\" part of the ExceptionOnCallbackStreamTask?\nIf that's the case, I think it would be better to move/extract the count down latch to a new\npublic static class CheckpointCountingTask extends NoOpStreamTask {\n}\n\nwhich would be just a NoOpStreamTask with the the CountDownLatch.", "url": "https://github.com/apache/flink/pull/10824#discussion_r365775963", "createdAt": "2020-01-13T12:23:00Z", "author": {"login": "pnowojski"}, "path": "flink-tests/src/test/java/org/apache/flink/runtime/jobmaster/JobMasterStopWithSavepointIT.java", "diffHunk": "@@ -194,6 +197,30 @@ private void throwingExceptionOnCallbackWithRestartsHelper(final boolean termina\n \t\tassertThat(getJobStatus(), either(equalTo(JobStatus.CANCELLING)).or(equalTo(JobStatus.CANCELED)));\n \t}\n \n+\t@Test\n+\tpublic void testRestartCheckpointCoordinatorIfStopWithSavepointFails() throws Exception {\n+\t\tsetUpJobGraph(ExceptionOnCallbackStreamTask.class, RestartStrategies.noRestart());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a61978007a5a02723a561ee145d82e2413e51ae"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e718b2d4d8b3f4c6f846a72ee0cfe28b7a0ce648", "author": {"user": {"login": "klion26", "name": "Congxian Qiu"}}, "url": "https://github.com/apache/flink/commit/e718b2d4d8b3f4c6f846a72ee0cfe28b7a0ce648", "committedDate": "2020-01-15T03:40:16Z", "message": "[hotfix] make JobMasterStopWithSavepointIT#testRestartCheckpointCoordinatorIfStopWithSavepointFails more strict"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c815af966e97b3befdd2fc86e59293f4b49de91f", "author": {"user": {"login": "klion26", "name": "Congxian Qiu"}}, "url": "https://github.com/apache/flink/commit/c815af966e97b3befdd2fc86e59293f4b49de91f", "committedDate": "2020-01-15T03:24:29Z", "message": "[hotfix] make JobMasterStopWithSavepointIT#testRestartCheckpointCoordinatorIfStopWithSavepointFails more strict"}, "afterCommit": {"oid": "e718b2d4d8b3f4c6f846a72ee0cfe28b7a0ce648", "author": {"user": {"login": "klion26", "name": "Congxian Qiu"}}, "url": "https://github.com/apache/flink/commit/e718b2d4d8b3f4c6f846a72ee0cfe28b7a0ce648", "committedDate": "2020-01-15T03:40:16Z", "message": "[hotfix] make JobMasterStopWithSavepointIT#testRestartCheckpointCoordinatorIfStopWithSavepointFails more strict"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMjE4MjYz", "url": "https://github.com/apache/flink/pull/10824#pullrequestreview-343218263", "createdAt": "2020-01-15T13:31:31Z", "commit": {"oid": "e718b2d4d8b3f4c6f846a72ee0cfe28b7a0ce648"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMzozMTozMVrOFd4TNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMzozMTozMVrOFd4TNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njg3NTQ0Ng==", "bodyText": "By extracting I meant that ExceptionOnCallbackStreamTask could also use this CheckpointCountingTask class to avoid some (minor) code duplication. Could you re-use this code in ExceptionOnCallbackStreamTask? Make it extend CheckpointCountingTask and delegate methods/constructors to super calls?", "url": "https://github.com/apache/flink/pull/10824#discussion_r366875446", "createdAt": "2020-01-15T13:31:31Z", "author": {"login": "pnowojski"}, "path": "flink-tests/src/test/java/org/apache/flink/runtime/jobmaster/JobMasterStopWithSavepointIT.java", "diffHunk": "@@ -357,4 +391,36 @@ public void finishTask() throws Exception {\n \t\t\tfinishLatch.trigger();\n \t\t}\n \t}\n+\n+\t/**\n+\t * A {@link StreamTask} that simply calls {@link CountDownLatch#countDown()} when\n+\t * invoking {@link #triggerCheckpointAsync}.\n+\t */\n+\tpublic static class CheckpointCountingTask extends NoOpStreamTask {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e718b2d4d8b3f4c6f846a72ee0cfe28b7a0ce648"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b07862f15aaddd2b6d2a0d21cceaba4a1f55f6e", "author": {"user": {"login": "klion26", "name": "Congxian Qiu"}}, "url": "https://github.com/apache/flink/commit/3b07862f15aaddd2b6d2a0d21cceaba4a1f55f6e", "committedDate": "2020-01-16T04:11:57Z", "message": "[hotfix] extract commont logic in JobMasterStopWithSavepointIT#CheckpointCountingTask and ExceptionOnCallbackStreamTask"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNzc5MTc3", "url": "https://github.com/apache/flink/pull/10824#pullrequestreview-343779177", "createdAt": "2020-01-16T09:36:46Z", "commit": {"oid": "3b07862f15aaddd2b6d2a0d21cceaba4a1f55f6e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4649, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}