{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwOTY1ODM3", "number": 10816, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzo1NDo0OFrODW28_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNDo1OTowNFrODW4TyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Mjk1NjE0OnYy", "diffSide": "RIGHT", "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzo1NDo0OFrOFb2jpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNDozNTowNlrOFb31cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0OTczNQ==", "bodyText": "I think the decision is that we shouldn't be adding more guava dependencies/usages in our code base. At least that's the feedback once I tried to pull out the same trick you did (\"guava already present, so why not to use it?\").", "url": "https://github.com/apache/flink/pull/10816#discussion_r364749735", "createdAt": "2020-01-09T13:54:48Z", "author": {"login": "pnowojski"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "diffHunk": "@@ -25,6 +25,9 @@\n import org.apache.flink.configuration.description.Description;\n import org.apache.flink.util.ArrayUtils;\n \n+import org.apache.flink.shaded.guava18.com.google.common.base.Splitter;\n+import org.apache.flink.shaded.guava18.com.google.common.collect.Iterables;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f7604d34d7048aa46ec86671b43548f88369bb2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1NzM4OQ==", "bodyText": "Turns out people are fine with using more of guava now. \ud83e\udd37\u200d\u2642", "url": "https://github.com/apache/flink/pull/10816#discussion_r364757389", "createdAt": "2020-01-09T14:10:18Z", "author": {"login": "zentol"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "diffHunk": "@@ -25,6 +25,9 @@\n import org.apache.flink.configuration.description.Description;\n import org.apache.flink.util.ArrayUtils;\n \n+import org.apache.flink.shaded.guava18.com.google.common.base.Splitter;\n+import org.apache.flink.shaded.guava18.com.google.common.collect.Iterables;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0OTczNQ=="}, "originalCommit": {"oid": "8f7604d34d7048aa46ec86671b43548f88369bb2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1Nzc2OA==", "bodyText": "Discussion came up when the GuavaFlinkConnectorRateLimiter was added.", "url": "https://github.com/apache/flink/pull/10816#discussion_r364757768", "createdAt": "2020-01-09T14:11:09Z", "author": {"login": "zentol"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "diffHunk": "@@ -25,6 +25,9 @@\n import org.apache.flink.configuration.description.Description;\n import org.apache.flink.util.ArrayUtils;\n \n+import org.apache.flink.shaded.guava18.com.google.common.base.Splitter;\n+import org.apache.flink.shaded.guava18.com.google.common.collect.Iterables;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0OTczNQ=="}, "originalCommit": {"oid": "8f7604d34d7048aa46ec86671b43548f88369bb2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc3MDY3NQ==", "bodyText": "Ok, I don't have any strong preference in that matter :)", "url": "https://github.com/apache/flink/pull/10816#discussion_r364770675", "createdAt": "2020-01-09T14:35:06Z", "author": {"login": "pnowojski"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "diffHunk": "@@ -25,6 +25,9 @@\n import org.apache.flink.configuration.description.Description;\n import org.apache.flink.util.ArrayUtils;\n \n+import org.apache.flink.shaded.guava18.com.google.common.base.Splitter;\n+import org.apache.flink.shaded.guava18.com.google.common.collect.Iterables;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0OTczNQ=="}, "originalCommit": {"oid": "8f7604d34d7048aa46ec86671b43548f88369bb2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Mjk2MjYwOnYy", "diffSide": "RIGHT", "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzo1Njo1MFrOFb2npQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNDozMTozNVrOFb3uDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1MDc1Nw==", "bodyText": "Can you deduplicate this code with getParentFirstLoaderPatterns? Provide a base method private static String[] getParentFirstLoaderPatterns(String base, String append)? Especially that the original method that was copied/duplicated didn't have the bug.\nAlso maybe a unit test since this has failed/caused a bug?", "url": "https://github.com/apache/flink/pull/10816#discussion_r364750757", "createdAt": "2020-01-09T13:56:50Z", "author": {"login": "pnowojski"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "diffHunk": "@@ -147,8 +150,8 @@\n \tpublic static String[] getPluginParentFirstLoaderPatterns(Configuration config) {\n \t\tString base = config.getString(PLUGIN_ALWAYS_PARENT_FIRST_LOADER_PATTERNS);\n \t\tString append = config.getString(PLUGIN_ALWAYS_PARENT_FIRST_LOADER_PATTERNS_ADDITIONAL);\n-\n-\t\treturn ArrayUtils.concat(base.split(\";\"), append.split(\";\"));\n+\t\tfinal Splitter splitter = Splitter.on(';').omitEmptyStrings();\n+\t\treturn Iterables.toArray(Iterables.concat(splitter.split(base), splitter.split(append)), String.class);\n \t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f7604d34d7048aa46ec86671b43548f88369bb2"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc2ODc4Mg==", "bodyText": "Added a test.", "url": "https://github.com/apache/flink/pull/10816#discussion_r364768782", "createdAt": "2020-01-09T14:31:35Z", "author": {"login": "AHeise"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "diffHunk": "@@ -147,8 +150,8 @@\n \tpublic static String[] getPluginParentFirstLoaderPatterns(Configuration config) {\n \t\tString base = config.getString(PLUGIN_ALWAYS_PARENT_FIRST_LOADER_PATTERNS);\n \t\tString append = config.getString(PLUGIN_ALWAYS_PARENT_FIRST_LOADER_PATTERNS_ADDITIONAL);\n-\n-\t\treturn ArrayUtils.concat(base.split(\";\"), append.split(\";\"));\n+\t\tfinal Splitter splitter = Splitter.on(';').omitEmptyStrings();\n+\t\treturn Iterables.toArray(Iterables.concat(splitter.split(base), splitter.split(append)), String.class);\n \t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1MDc1Nw=="}, "originalCommit": {"oid": "8f7604d34d7048aa46ec86671b43548f88369bb2"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MzE3ODMyOnYy", "diffSide": "RIGHT", "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNDo1OTowNFrOFb4sZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNTowNjozOFrOFb48-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc4NDc0Mw==", "bodyText": "GuavaFlinkConnectorRateLimiteradditional\n:)", "url": "https://github.com/apache/flink/pull/10816#discussion_r364784743", "createdAt": "2020-01-09T14:59:04Z", "author": {"login": "pnowojski"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "diffHunk": "@@ -133,7 +127,7 @@\n \t\t.withDescription(\"A (semicolon-separated) list of patterns that specifies which classes should always be\" +\n \t\t\t\" resolved through the plugin parent ClassLoader first. A pattern is a simple prefix that is checked \" +\n \t\t\t\" against the fully qualified class name. This setting should generally not be modified. To add another \" +\n-\t\t\t\" pattern we recommend to use \\\"plugin.classloader.parent-first-patterns.additional\\\" instead.\");\n+\t\t\t\" pattern we recommend to use \\\"plugin.classloader.parent-first-patterns.GuavaFlinkConnectorRateLimiteradditional\\\" instead.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb04c04cdb2cae6a8404e0bfce634f566cd1473c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc4ODk4NA==", "bodyText": "woooops, good catch. that would have been weird.", "url": "https://github.com/apache/flink/pull/10816#discussion_r364788984", "createdAt": "2020-01-09T15:06:38Z", "author": {"login": "AHeise"}, "path": "flink-core/src/main/java/org/apache/flink/configuration/CoreOptions.java", "diffHunk": "@@ -133,7 +127,7 @@\n \t\t.withDescription(\"A (semicolon-separated) list of patterns that specifies which classes should always be\" +\n \t\t\t\" resolved through the plugin parent ClassLoader first. A pattern is a simple prefix that is checked \" +\n \t\t\t\" against the fully qualified class name. This setting should generally not be modified. To add another \" +\n-\t\t\t\" pattern we recommend to use \\\"plugin.classloader.parent-first-patterns.additional\\\" instead.\");\n+\t\t\t\" pattern we recommend to use \\\"plugin.classloader.parent-first-patterns.GuavaFlinkConnectorRateLimiteradditional\\\" instead.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc4NDc0Mw=="}, "originalCommit": {"oid": "cb04c04cdb2cae6a8404e0bfce634f566cd1473c"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1307, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}