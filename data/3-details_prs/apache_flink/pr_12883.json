{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MTczMDQy", "number": 12883, "title": "[FLINK-18573][metrics] Ensure metric reporters could be loaded via SPI", "bodyText": "What is the purpose of the change\nEnsure metric reporters could be loaded via SPI.\nBrief change log\n\nRename META-INF.service folder in flink-metrics-influxdb to META-INF.services to ensure influxdb metric reporter could be loaded via SPI.\nAdded tests to ensure flink-metrics-datadog, flink-metrics-graphite, flink-metrics-influxdb, flink-metrics-jmx, flink-metrics-prometheus, flink-metrics-slf4j and flink-metrics-statsd could load metric reporter factory via SPI.\n\nVerifying this change\nThis change added *ReporterFactoryTest tests.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? not applicable", "createdAt": "2020-07-13T10:45:23Z", "url": "https://github.com/apache/flink/pull/12883", "merged": true, "mergeCommit": {"oid": "c3e0d450c82ea8246a7f0abab3a1f86a0f53de7d"}, "closed": true, "closedAt": "2020-07-14T18:04:24Z", "author": {"login": "Myasuka"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0hQsrgFqTQ0NzIyMjE1Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc05_clABqjM1NDUzMDcyNjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MjIyMTUz", "url": "https://github.com/apache/flink/pull/12883#pullrequestreview-447222153", "createdAt": "2020-07-13T12:54:06Z", "commit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzowMToyOFrOGwnfxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMzoxMToyMFrOGwn2Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMTk0MQ==", "bodyText": "redundant as we have a e2e test covering it, which is preferable. I'd only add this to reporters that are not otherwise covered as a band-aid.", "url": "https://github.com/apache/flink/pull/12883#discussion_r453631941", "createdAt": "2020-07-13T13:01:28Z", "author": {"login": "zentol"}, "path": "flink-metrics/flink-metrics-prometheus/src/test/java/org/apache/flink/metrics/prometheus/PrometheusMetricReporterFactoryTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.metrics.prometheus;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.runtime.metrics.MetricReporterSetupTestBase;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/**\n+ * Tests for loading the {@link PrometheusPushGatewayReporterFactory} and {@link PrometheusReporterFactory}.\n+ */\n+public class PrometheusMetricReporterFactoryTest extends MetricReporterSetupTestBase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMjIyMA==", "bodyText": "redundant due to usage in e2e tests.", "url": "https://github.com/apache/flink/pull/12883#discussion_r453632220", "createdAt": "2020-07-13T13:01:56Z", "author": {"login": "zentol"}, "path": "flink-metrics/flink-metrics-slf4j/src/test/java/org/apache/flink/metrics/slf4j/Slf4jReporterFactoryTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.metrics.slf4j;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.runtime.metrics.MetricReporterSetupTestBase;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Tests for loading the {@link Slf4jReporterFactory}.\n+ */\n+public class Slf4jReporterFactoryTest extends MetricReporterSetupTestBase {\n+\n+\t@Override\n+\tprotected List<Class<? extends MetricReporterFactory>> getMetricReporterFactoryClass() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMzQ1Mg==", "bodyText": "It would be good to get rid of the dependency to flink-runtime; this change goes contrary to our goals of separating the metric modules from flink-runtime.\nThe ServiceLoader mechanism is standardized, so it's fine to just call ServiceLoader.load(MetricReporterFactory.class).iterator() here.", "url": "https://github.com/apache/flink/pull/12883#discussion_r453633452", "createdAt": "2020-07-13T13:04:04Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricReporterSetupTestBase.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.metrics;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.util.TestLogger;\n+\n+import org.junit.Test;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * The base class to verify metric reporter factory.\n+ */\n+public abstract class MetricReporterSetupTestBase extends TestLogger {\n+\n+\t@Test\n+\tpublic void testMetricReporterSetupViaSPI() {\n+\t\tIterator<MetricReporterFactory> factoryIterator = ReporterSetup.getAllReporterFactoriesViaSPI();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzMzY3OA==", "bodyText": "Let's not introduce inheritance for this. The test could just be a method that is being called with the factory class.", "url": "https://github.com/apache/flink/pull/12883#discussion_r453633678", "createdAt": "2020-07-13T13:04:28Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricReporterSetupTestBase.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.metrics;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.util.TestLogger;\n+\n+import org.junit.Test;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * The base class to verify metric reporter factory.\n+ */\n+public abstract class MetricReporterSetupTestBase extends TestLogger {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYzNzcwMw==", "bodyText": "public static void testMetricReporterSetupViaSPI(Class<MetricReporterFactory> clazz) {\n\tSet<Class<? extends MetricReporterFactory>> loadedFactories = StreamSupport\n\t\t.stream(ServiceLoader.load(MetricReporterFactory.class).iterator(), false)\n\t\t.map(MetricReporterFactory::getClass)\n\t\t.collect(Collectors.toSet());\n\tassertThat(loadedFactories , hasItems(clazz));\n}", "url": "https://github.com/apache/flink/pull/12883#discussion_r453637703", "createdAt": "2020-07-13T13:11:20Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/metrics/MetricReporterSetupTestBase.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.metrics;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.util.TestLogger;\n+\n+import org.junit.Test;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * The base class to verify metric reporter factory.\n+ */\n+public abstract class MetricReporterSetupTestBase extends TestLogger {\n+\n+\t@Test\n+\tpublic void testMetricReporterSetupViaSPI() {\n+\t\tIterator<MetricReporterFactory> factoryIterator = ReporterSetup.getAllReporterFactoriesViaSPI();\n+\t\tSet<String> metricReporterFactoryClasses = getMetricReporterFactoryClass().stream().map(Class::getCanonicalName).collect(Collectors.toSet());\n+\t\tassertFalse(metricReporterFactoryClasses.isEmpty());\n+\t\twhile (factoryIterator.hasNext()) {\n+\t\t\tMetricReporterFactory metricReporterFactory = factoryIterator.next();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38cebe617ef8ec1088744d750b6887205a5b1a6e"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3OTk1NTA4", "url": "https://github.com/apache/flink/pull/12883#pullrequestreview-447995508", "createdAt": "2020-07-14T10:47:30Z", "commit": {"oid": "93616ee036d921efea80c8003e408d35339cc4ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo0NzozMFrOGxOWQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo0NzozMFrOGxOWQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2ODQ4MQ==", "bodyText": "What I meant was to have this method:\npublic static void testMetricReporterSetupViaSPI(Class<MetricReporterFactory> clazz) {\n\tSet<Class<? extends MetricReporterFactory>> loadedFactories = StreamSupport\n\t\t.stream(ServiceLoader.load(MetricReporterFactory.class).iterator(), false)\n\t\t.map(MetricReporterFactory::getClass)\n\t\t.collect(Collectors.toSet());\n\tassertThat(loadedFactories , hasItems(clazz));\n}\n\nin flink-metrics-core, and the reporter tests just call it.", "url": "https://github.com/apache/flink/pull/12883#discussion_r454268481", "createdAt": "2020-07-14T10:47:30Z", "author": {"login": "zentol"}, "path": "flink-metrics/flink-metrics-datadog/src/test/java/org/apache/flink/metrics/datadog/DatadogHttpReporterFactoryTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.metrics.datadog;\n+\n+import org.apache.flink.metrics.reporter.MetricReporterFactory;\n+import org.apache.flink.util.TestLogger;\n+\n+import org.junit.Test;\n+\n+import java.util.ServiceLoader;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+\n+import static org.hamcrest.Matchers.hasItem;\n+import static org.junit.Assert.assertThat;\n+\n+/**\n+ * Tests for the {@link DatadogHttpReporterFactory}.\n+ */\n+public class DatadogHttpReporterFactoryTest extends TestLogger {\n+\n+\t@Test\n+\tpublic void testMetricReporterSetupViaSPI() {\n+\t\tSet<Class<? extends MetricReporterFactory>> loadedFactories = StreamSupport", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93616ee036d921efea80c8003e408d35339cc4ec"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MjI4MzMx", "url": "https://github.com/apache/flink/pull/12883#pullrequestreview-448228331", "createdAt": "2020-07-14T15:39:54Z", "commit": {"oid": "25d465768bdf87bd31e0ca9b5749344c35c919d5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25d465768bdf87bd31e0ca9b5749344c35c919d5", "author": {"user": {"login": "Myasuka", "name": "Yun Tang"}}, "url": "https://github.com/apache/flink/commit/25d465768bdf87bd31e0ca9b5749344c35c919d5", "committedDate": "2020-07-14T12:33:26Z", "message": "refactor the PR to use the same test method for reporters"}, "afterCommit": {"oid": "1ff723dcfce4cf39d2bc216c22bbae747bc2aa9f", "author": {"user": {"login": "Myasuka", "name": "Yun Tang"}}, "url": "https://github.com/apache/flink/commit/1ff723dcfce4cf39d2bc216c22bbae747bc2aa9f", "committedDate": "2020-07-14T18:00:39Z", "message": "[FLINK-18573][metrics] Ensure metric reporters could be loaded via SPI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a6278179f97044d4b6caff155434317acb3fe77", "author": {"user": {"login": "Myasuka", "name": "Yun Tang"}}, "url": "https://github.com/apache/flink/commit/6a6278179f97044d4b6caff155434317acb3fe77", "committedDate": "2020-07-14T18:02:23Z", "message": "[FLINK-18573][metrics][influxdb] Fix services directory name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed22112c4d28477c6e0b0df7780cf524ca05ae0f", "author": {"user": {"login": "Myasuka", "name": "Yun Tang"}}, "url": "https://github.com/apache/flink/commit/ed22112c4d28477c6e0b0df7780cf524ca05ae0f", "committedDate": "2020-07-14T18:03:39Z", "message": "[FLINK-18573][metrics] Add test for loading reporters via service loader"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ff723dcfce4cf39d2bc216c22bbae747bc2aa9f", "author": {"user": {"login": "Myasuka", "name": "Yun Tang"}}, "url": "https://github.com/apache/flink/commit/1ff723dcfce4cf39d2bc216c22bbae747bc2aa9f", "committedDate": "2020-07-14T18:00:39Z", "message": "[FLINK-18573][metrics] Ensure metric reporters could be loaded via SPI"}, "afterCommit": {"oid": "ed22112c4d28477c6e0b0df7780cf524ca05ae0f", "author": {"user": {"login": "Myasuka", "name": "Yun Tang"}}, "url": "https://github.com/apache/flink/commit/ed22112c4d28477c6e0b0df7780cf524ca05ae0f", "committedDate": "2020-07-14T18:03:39Z", "message": "[FLINK-18573][metrics] Add test for loading reporters via service loader"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3151, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}