{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3OTI2NzE5", "number": 13402, "title": "[FLINK-19262][API/DataStream] Can not setParallelism for FLIP-27 source", "bodyText": "What is the purpose of the change\nCan not setParallelism for FLIP-27 source\nBrief change log\nCan not setParallelism for FLIP-27 source\nVerifying this change\nThis change added tests and can be verified as follows:\ntestConstructor() in class DataStreamSourceTest\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)", "createdAt": "2020-09-16T11:38:08Z", "url": "https://github.com/apache/flink/pull/13402", "merged": true, "mergeCommit": {"oid": "49e3ff72e7fb06360c02578e30fa03cce24ca04f"}, "closed": true, "closedAt": "2020-09-18T03:57:42Z", "author": {"login": "pyscala"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJa770gFqTQ4OTUzODQ2NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJtUQAAFqTQ5MDM5NTQ1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NTM4NDY0", "url": "https://github.com/apache/flink/pull/13402#pullrequestreview-489538464", "createdAt": "2020-09-16T11:42:29Z", "commit": {"oid": "0b3231fcf0cbe8d16feb855dc287d09977c11de7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo0MjoyOVrOHSs3DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMTo0NDoxOVrOHSs7Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MTQwNA==", "bodyText": "int is OK.", "url": "https://github.com/apache/flink/pull/13402#discussion_r489371404", "createdAt": "2020-09-16T11:42:29Z", "author": {"login": "JingsongLi"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){\n+\t\tInteger expectParallelism = 100;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b3231fcf0cbe8d16feb855dc287d09977c11de7"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MTUxMw==", "bodyText": "ditto boolean", "url": "https://github.com/apache/flink/pull/13402#discussion_r489371513", "createdAt": "2020-09-16T11:42:41Z", "author": {"login": "JingsongLi"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){\n+\t\tInteger expectParallelism = 100;\n+\t\tBoolean expectIsParallel = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b3231fcf0cbe8d16feb855dc287d09977c11de7"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MTgyMA==", "bodyText": "use expectParallelism", "url": "https://github.com/apache/flink/pull/13402#discussion_r489371820", "createdAt": "2020-09-16T11:43:14Z", "author": {"login": "JingsongLi"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){\n+\t\tInteger expectParallelism = 100;\n+\t\tBoolean expectIsParallel = true;\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\tMockSource mockSource = new MockSource(Boundedness.BOUNDED, 10);\n+\t\tDataStreamSource<Integer> stream = new DataStreamSource<Integer>(\n+\t\t\tenv,\n+\t\t\tmockSource,\n+\t\t\tWatermarkStrategy.noWatermarks() ,\n+\t\t\tnull,\n+\t\t\t\"TestingSource\");\n+\t\tstream.setParallelism(100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b3231fcf0cbe8d16feb855dc287d09977c11de7"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MjQyNw==", "bodyText": "Use env.fromSource(mockSource, WatermarkStrategy.noWatermarks(), \"TestingSource\")", "url": "https://github.com/apache/flink/pull/13402#discussion_r489372427", "createdAt": "2020-09-16T11:44:19Z", "author": {"login": "JingsongLi"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){\n+\t\tInteger expectParallelism = 100;\n+\t\tBoolean expectIsParallel = true;\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\tMockSource mockSource = new MockSource(Boundedness.BOUNDED, 10);\n+\t\tDataStreamSource<Integer> stream = new DataStreamSource<Integer>(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b3231fcf0cbe8d16feb855dc287d09977c11de7"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NzkyNjg1", "url": "https://github.com/apache/flink/pull/13402#pullrequestreview-489792685", "createdAt": "2020-09-16T16:20:27Z", "commit": {"oid": "4b7f5b86b91caffdb8436913467d165254000745"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjoyMDoyN1rOHS4mww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjoyMDoyN1rOHS4mww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU2Mzg0Mw==", "bodyText": "There is still a format issue here.\nI think this might not be caught automatically by the checkstyle tools.", "url": "https://github.com/apache/flink/pull/13402#discussion_r489563843", "createdAt": "2020-09-16T16:20:27Z", "author": {"login": "StephanEwen"}, "path": "flink-streaming-java/src/test/java/org/apache/flink/streaming/api/datastream/DataStreamSourceTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.api.datastream;\n+\n+import org.apache.flink.api.common.eventtime.WatermarkStrategy;\n+import org.apache.flink.api.connector.source.Boundedness;\n+import org.apache.flink.api.connector.source.mocks.MockSource;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Unit test for {@link DataStreamSource}.\n+ */\n+public class DataStreamSourceTest {\n+\n+\t/**\n+\t * test Constructor for new Sources (FLIP-27).\n+\t */\n+\t@Test\n+\tpublic void testConstructor(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b7f5b86b91caffdb8436913467d165254000745"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dba1fa46fecbad4534c560ed3c016b0d69a0d1e", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/7dba1fa46fecbad4534c560ed3c016b0d69a0d1e", "committedDate": "2020-09-17T02:18:51Z", "message": "[FLINK-19262][API/DataStream] Can not setParallelism for FLIP-27 source"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d827137220829e71ea5e7f753502339d2a1d5c48", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/d827137220829e71ea5e7f753502339d2a1d5c48", "committedDate": "2020-09-17T02:20:29Z", "message": "code clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4a438df036bada30853b6450931e5b116dce9a1", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/f4a438df036bada30853b6450931e5b116dce9a1", "committedDate": "2020-09-17T02:24:08Z", "message": "fix checkstyle issues & get the latest code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b7f5b86b91caffdb8436913467d165254000745", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/4b7f5b86b91caffdb8436913467d165254000745", "committedDate": "2020-09-16T12:23:29Z", "message": "code clean up"}, "afterCommit": {"oid": "f4a438df036bada30853b6450931e5b116dce9a1", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/f4a438df036bada30853b6450931e5b116dce9a1", "committedDate": "2020-09-17T02:24:08Z", "message": "fix checkstyle issues & get the latest code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83ff7dd5e54dca0b65e99cbf6409dbf6ae0428a4", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/83ff7dd5e54dca0b65e99cbf6409dbf6ae0428a4", "committedDate": "2020-09-17T03:03:55Z", "message": "fix checkstyle issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMzk1NDU3", "url": "https://github.com/apache/flink/pull/13402#pullrequestreview-490395457", "createdAt": "2020-09-17T09:10:24Z", "commit": {"oid": "83ff7dd5e54dca0b65e99cbf6409dbf6ae0428a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4017, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}