{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMzg5NTQw", "number": 11303, "title": "[FLINK-16245] Decoupling user classloader from context classloader.", "bodyText": "What is the purpose of the change\nDecoupling user class loader from context classloader.\nThus, user classloader can be unloaded even though a reference on the context classloader outlives the user code.\nBrief change log\n\nAdding SafetyNetWrapperClassLoader\nUse it for FlinkUserCodeClassLoaders\nMake sure LocalExecutor closes user classloader\n\nVerifying this change\nAdded unit test.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-03-04T07:44:42Z", "url": "https://github.com/apache/flink/pull/11303", "merged": true, "mergeCommit": {"oid": "a982488fd8a6b8155f4fcb45c893661e11bade61"}, "closed": true, "closedAt": "2020-03-31T09:37:14Z", "author": {"login": "AHeise"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKTvRIgFqTM2ODYyODU1Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSp2V7gBqjMxNzczNzAxMTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NjI4NTUz", "url": "https://github.com/apache/flink/pull/11303#pullrequestreview-368628553", "createdAt": "2020-03-04T09:40:57Z", "commit": {"oid": "af7e6a441a3f9105e4cfda044cc0a76331c91c33"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTo0MDo1N1rOFxmIzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwOTo0NDowN1rOFxmPzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU0OTM5MQ==", "bodyText": "is this constructor necessary?", "url": "https://github.com/apache/flink/pull/11303#discussion_r387549391", "createdAt": "2020-03-04T09:40:57Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/execution/librarycache/CloseableClassLoader.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.execution.librarycache;\n+\n+import java.io.Closeable;\n+\n+/**\n+ * A {@link ClassLoader} that can be closed.\n+ *\n+ * <p>Unfortunately, ClassLoader is not an interface and does not implement {@link Closeable}, such that it is\n+ * impossible to cleanly use interfaces to return a closeable ClassLoader. This class aims to provide at least some\n+ * abstraction of the underlying implementation.\n+ */\n+public abstract class CloseableClassLoader extends ClassLoader implements Closeable {\n+\tpublic CloseableClassLoader(ClassLoader parent) {\n+\t\tsuper(parent);\n+\t}\n+\n+\tpublic CloseableClassLoader() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af7e6a441a3f9105e4cfda044cc0a76331c91c33"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1MDYxMQ==", "bodyText": "why is this method necessary? Shouldn't the inner classloader handle this?", "url": "https://github.com/apache/flink/pull/11303#discussion_r387550611", "createdAt": "2020-03-04T09:43:10Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders.java", "diffHunk": "@@ -82,4 +91,78 @@ public static ResolveOrder fromString(String resolveOrder) {\n \t\t\tsuper(urls, parent);\n \t\t}\n \t}\n+\n+\t/**\n+\t * Ensures that holding a reference on the context class loader outliving the scope of user code does not prevent\n+\t * the user classloader to be garbage collected (FLINK-16245).\n+\t *\n+\t * <p>This classloader delegates to the actual user classloader. Upon {@link #close()}, the delegate is nulled\n+\t * and can be garbage collected. Additional class resolution will be resolved solely through the bootstrap\n+\t * classloader and most likely result in ClassNotFound exceptions.\n+\t *\n+\t * @param <T> the classloader type that also needs to be closeable.\n+\t */\n+\tprivate static class SafetyNetWrapperClassLoader<T extends ClassLoader & Closeable> extends CloseableClassLoader\n+\t\t\timplements Closeable {\n+\t\tprivate static final Logger LOG = LoggerFactory.getLogger(SafetyNetWrapperClassLoader.class);\n+\n+\t\tprivate T inner;\n+\n+\t\tSafetyNetWrapperClassLoader(T inner) {\n+\t\t\tsuper(null);\n+\t\t\tthis.inner = inner;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void close() {\n+\t\t\tif (inner != null) {\n+\t\t\t\ttry {\n+\t\t\t\t\tinner.close();\n+\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\tLOG.warn(\"Could not close user classloader\", e);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tinner = null;\n+\t\t}\n+\n+\t\t@Override\n+\t\tprotected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {\n+\t\t\tif (inner == null) {\n+\t\t\t\treturn super.loadClass(name, resolve);\n+\t\t\t}\n+\n+\t\t\tsynchronized (getClassLoadingLock(name)) {\n+\t\t\t\tfinal Class<?> loadedClass = findLoadedClass(name);\n+\t\t\t\tif (loadedClass != null) {\n+\t\t\t\t\treturn resolveIfNeeded(resolve, loadedClass);\n+\t\t\t\t}\n+\n+\t\t\t\treturn resolveIfNeeded(resolve, inner.loadClass(name));\n+\t\t\t}\n+\t\t}\n+\n+\t\tprivate Class<?> resolveIfNeeded(final boolean resolve, final Class<?> loadedClass) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af7e6a441a3f9105e4cfda044cc0a76331c91c33"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU1MTE4MA==", "bodyText": "why aren't we just forwarding the call to the inner class?", "url": "https://github.com/apache/flink/pull/11303#discussion_r387551180", "createdAt": "2020-03-04T09:44:07Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders.java", "diffHunk": "@@ -82,4 +91,78 @@ public static ResolveOrder fromString(String resolveOrder) {\n \t\t\tsuper(urls, parent);\n \t\t}\n \t}\n+\n+\t/**\n+\t * Ensures that holding a reference on the context class loader outliving the scope of user code does not prevent\n+\t * the user classloader to be garbage collected (FLINK-16245).\n+\t *\n+\t * <p>This classloader delegates to the actual user classloader. Upon {@link #close()}, the delegate is nulled\n+\t * and can be garbage collected. Additional class resolution will be resolved solely through the bootstrap\n+\t * classloader and most likely result in ClassNotFound exceptions.\n+\t *\n+\t * @param <T> the classloader type that also needs to be closeable.\n+\t */\n+\tprivate static class SafetyNetWrapperClassLoader<T extends ClassLoader & Closeable> extends CloseableClassLoader\n+\t\t\timplements Closeable {\n+\t\tprivate static final Logger LOG = LoggerFactory.getLogger(SafetyNetWrapperClassLoader.class);\n+\n+\t\tprivate T inner;\n+\n+\t\tSafetyNetWrapperClassLoader(T inner) {\n+\t\t\tsuper(null);\n+\t\t\tthis.inner = inner;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void close() {\n+\t\t\tif (inner != null) {\n+\t\t\t\ttry {\n+\t\t\t\t\tinner.close();\n+\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\tLOG.warn(\"Could not close user classloader\", e);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tinner = null;\n+\t\t}\n+\n+\t\t@Override\n+\t\tprotected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {\n+\t\t\tif (inner == null) {\n+\t\t\t\treturn super.loadClass(name, resolve);\n+\t\t\t}\n+\n+\t\t\tsynchronized (getClassLoadingLock(name)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af7e6a441a3f9105e4cfda044cc0a76331c91c33"}, "originalPosition": 94}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af7e6a441a3f9105e4cfda044cc0a76331c91c33", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/af7e6a441a3f9105e4cfda044cc0a76331c91c33", "committedDate": "2020-03-04T07:42:29Z", "message": "[FLINK-16245][table] Closes user classloader in LocalExecutor#closeSession."}, "afterCommit": {"oid": "58d4f48014cb2860dc97aecd9c58304df4521b5a", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/58d4f48014cb2860dc97aecd9c58304df4521b5a", "committedDate": "2020-03-04T10:38:06Z", "message": "[FLINK-16245][table] Closes user classloader in LocalExecutor#closeSession."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NDU2MTk3", "url": "https://github.com/apache/flink/pull/11303#pullrequestreview-369456197", "createdAt": "2020-03-05T10:31:51Z", "commit": {"oid": "58d4f48014cb2860dc97aecd9c58304df4521b5a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDozMTo1MVrOFyOO2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDozMTo1MVrOFyOO2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIwNjI5Ng==", "bodyText": "I would not reduce the visibility here, that is unrelated to the change, and I actually know users that have used this.", "url": "https://github.com/apache/flink/pull/11303#discussion_r388206296", "createdAt": "2020-03-05T10:31:51Z", "author": {"login": "StephanEwen"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders.java", "diffHunk": "@@ -18,35 +18,44 @@\n \n package org.apache.flink.runtime.execution.librarycache;\n \n+import org.apache.flink.annotation.VisibleForTesting;\n import org.apache.flink.util.ChildFirstClassLoader;\n \n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.Closeable;\n+import java.io.IOException;\n import java.net.URL;\n import java.net.URLClassLoader;\n+import java.util.Enumeration;\n \n /**\n  * Gives the URLClassLoader a nicer name for debugging purposes.\n  */\n public class FlinkUserCodeClassLoaders {\n \n-\tpublic static URLClassLoader parentFirst(URL[] urls, ClassLoader parent) {\n+\t@VisibleForTesting\n+\tstatic URLClassLoader parentFirst(URL[] urls, ClassLoader parent) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58d4f48014cb2860dc97aecd9c58304df4521b5a"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "58d4f48014cb2860dc97aecd9c58304df4521b5a", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/58d4f48014cb2860dc97aecd9c58304df4521b5a", "committedDate": "2020-03-04T10:38:06Z", "message": "[FLINK-16245][table] Closes user classloader in LocalExecutor#closeSession."}, "afterCommit": {"oid": "af98d15e050c902fd22deac103471195b52b9ce2", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/af98d15e050c902fd22deac103471195b52b9ce2", "committedDate": "2020-03-11T12:45:00Z", "message": "[FLINK-16245][table] Closes user classloader in LocalExecutor#closeSession."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af98d15e050c902fd22deac103471195b52b9ce2", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/af98d15e050c902fd22deac103471195b52b9ce2", "committedDate": "2020-03-11T12:45:00Z", "message": "[FLINK-16245][table] Closes user classloader in LocalExecutor#closeSession."}, "afterCommit": {"oid": "11aaf6c93392409e9d7d755e351ad32db48710e1", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/11aaf6c93392409e9d7d755e351ad32db48710e1", "committedDate": "2020-03-12T12:23:44Z", "message": "[FLINK-16245][table] Closes user classloader in LocalExecutor#closeSession."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "11aaf6c93392409e9d7d755e351ad32db48710e1", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/11aaf6c93392409e9d7d755e351ad32db48710e1", "committedDate": "2020-03-12T12:23:44Z", "message": "[FLINK-16245][table] Closes user classloader in LocalExecutor#closeSession."}, "afterCommit": {"oid": "43d3cb28bad9da1cc9c8460915a99aef7a94840e", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/43d3cb28bad9da1cc9c8460915a99aef7a94840e", "committedDate": "2020-03-12T19:43:18Z", "message": "[FLINK-16245][tests] Fixed classloader usage of BatchFineGrainedRecoveryITCase.\n\nBatchFineGrainedRecoveryITCase relied on context classloader of failed tasks to restart task manager."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43d3cb28bad9da1cc9c8460915a99aef7a94840e", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/43d3cb28bad9da1cc9c8460915a99aef7a94840e", "committedDate": "2020-03-12T19:43:18Z", "message": "[FLINK-16245][tests] Fixed classloader usage of BatchFineGrainedRecoveryITCase.\n\nBatchFineGrainedRecoveryITCase relied on context classloader of failed tasks to restart task manager."}, "afterCommit": {"oid": "5246383ea27ab1a98a53e58985ef5923e9e9a6c4", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/5246383ea27ab1a98a53e58985ef5923e9e9a6c4", "committedDate": "2020-03-13T09:43:01Z", "message": "[FLINK-16245][tests] Fixed classloader usage of BatchFineGrainedRecoveryITCase.\n\nBatchFineGrainedRecoveryITCase relied on context classloader of failed tasks to restart task manager."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NDE1MTE2", "url": "https://github.com/apache/flink/pull/11303#pullrequestreview-375415116", "createdAt": "2020-03-16T17:03:49Z", "commit": {"oid": "5246383ea27ab1a98a53e58985ef5923e9e9a6c4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzowMzo0OVrOF29qqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzowODozMVrOF2952Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE3Nzc2OA==", "bodyText": "why do we need a separate classloader here?", "url": "https://github.com/apache/flink/pull/11303#discussion_r393177768", "createdAt": "2020-03-16T17:03:49Z", "author": {"login": "zentol"}, "path": "flink-tests/src/test/java/org/apache/flink/test/recovery/BatchFineGrainedRecoveryITCase.java", "diffHunk": "@@ -396,14 +397,16 @@ private TaskExecutorFailureStrategy(int failAfterCallNumber) {\n \t\t@Override\n \t\tvoid fail(int trackingIndex) throws Exception {\n \t\t\t//noinspection OverlyBroadCatchBlock\n-\t\t\ttry {\n-\t\t\t\trestartTaskManager();\n-\t\t\t} catch (InterruptedException e) {\n-\t\t\t\t// ignore the exception, task should have been failed while stopping TM\n-\t\t\t\tThread.currentThread().interrupt();\n-\t\t\t} catch (Throwable t) {\n-\t\t\t\tfailureTracker.unrelatedFailure(t);\n-\t\t\t\tthrow t;\n+\t\t\ttry (TemporaryClassLoaderContext unused = TemporaryClassLoaderContext.of(ClassLoader.getSystemClassLoader())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5246383ea27ab1a98a53e58985ef5923e9e9a6c4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE3ODM4NA==", "bodyText": "should still be logged", "url": "https://github.com/apache/flink/pull/11303#discussion_r393178384", "createdAt": "2020-03-16T17:04:33Z", "author": {"login": "zentol"}, "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/gateway/local/LocalExecutor.java", "diffHunk": "@@ -240,7 +240,11 @@ public void closeSession(String sessionId) throws SqlExecutionException {\n \t\t\t}\n \t\t});\n \t\t// Remove the session's ExecutionContext from contextMap.\n-\t\tthis.contextMap.remove(sessionId);\n+\t\ttry {\n+\t\t\tthis.contextMap.remove(sessionId).close();\n+\t\t} catch (IOException e) {\n+\t\t\t// ignore any throwable to keep the clean up running", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5246383ea27ab1a98a53e58985ef5923e9e9a6c4"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4MTY1Nw==", "bodyText": "Why are we not failing immediately in this case? This introduces subtle inconsistent behaviors, that to fully grasp require a good understanding of how class-loading works in the JVM which really shows in the added testClosingOfClassloader test. I would wager that barely anyone would be able to explain why the class cannot be loaded at the end of the test.", "url": "https://github.com/apache/flink/pull/11303#discussion_r393181657", "createdAt": "2020-03-16T17:08:31Z", "author": {"login": "zentol"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/execution/librarycache/FlinkUserCodeClassLoaders.java", "diffHunk": "@@ -82,4 +89,61 @@ public static ResolveOrder fromString(String resolveOrder) {\n \t\t\tsuper(urls, parent);\n \t\t}\n \t}\n+\n+\t/**\n+\t * Ensures that holding a reference on the context class loader outliving the scope of user code does not prevent\n+\t * the user classloader to be garbage collected (FLINK-16245).\n+\t *\n+\t * <p>This classloader delegates to the actual user classloader. Upon {@link #close()}, the delegate is nulled\n+\t * and can be garbage collected. Additional class resolution will be resolved solely through the bootstrap\n+\t * classloader and most likely result in ClassNotFound exceptions.\n+\t */\n+\tprivate static class SafetyNetWrapperClassLoader extends URLClassLoader\n+\t\t\timplements Closeable {\n+\t\tprivate static final Logger LOG = LoggerFactory.getLogger(SafetyNetWrapperClassLoader.class);\n+\n+\t\tprivate FlinkUserCodeClassLoader inner;\n+\n+\t\tSafetyNetWrapperClassLoader(FlinkUserCodeClassLoader inner) {\n+\t\t\tsuper(new URL[0], null);\n+\t\t\tthis.inner = inner;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void close() {\n+\t\t\tif (inner != null) {\n+\t\t\t\ttry {\n+\t\t\t\t\tinner.close();\n+\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\tLOG.warn(\"Could not close user classloader\", e);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tinner = null;\n+\t\t}\n+\n+\t\t@Override\n+\t\tprotected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {\n+\t\t\tif (inner == null) {\n+\t\t\t\treturn super.loadClass(name, resolve);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5246383ea27ab1a98a53e58985ef5923e9e9a6c4"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03a8749e27c1f1ace6b13a166bf844ce2fac45c0", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/03a8749e27c1f1ace6b13a166bf844ce2fac45c0", "committedDate": "2020-03-30T08:01:34Z", "message": "[hotfix][runtime][tests] Rename/move ClassLoaderTest\n\nThe test is actually testing FlinkUserCodeClassLoaders."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4be06f5d3aa9f36448ed00a83343df93b09de1a5", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/4be06f5d3aa9f36448ed00a83343df93b09de1a5", "committedDate": "2020-03-30T08:01:35Z", "message": "[FLINK-16245][runtime] Decouple user from context classloader\n\nAllows user classloader can be unloaded even if a reference on the context classloader outlives the user code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92b808b0df3ff53d5a46fcf55afe2bf40c73cf9a", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/92b808b0df3ff53d5a46fcf55afe2bf40c73cf9a", "committedDate": "2020-03-30T08:01:35Z", "message": "[FLINK-16245][table] Close user classloader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fc73a896082ad490854f60135c40616373551ea", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/8fc73a896082ad490854f60135c40616373551ea", "committedDate": "2020-03-30T08:01:35Z", "message": "[FLINK-16245][tests] Adjust BatchFineGrainedRecoveryITCase\n\nBecause the classloader is now closed when the task fails the UDF only has access to the bootstrap classloader, which doesn't contain our own test classes."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5246383ea27ab1a98a53e58985ef5923e9e9a6c4", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/5246383ea27ab1a98a53e58985ef5923e9e9a6c4", "committedDate": "2020-03-13T09:43:01Z", "message": "[FLINK-16245][tests] Fixed classloader usage of BatchFineGrainedRecoveryITCase.\n\nBatchFineGrainedRecoveryITCase relied on context classloader of failed tasks to restart task manager."}, "afterCommit": {"oid": "8fc73a896082ad490854f60135c40616373551ea", "author": {"user": {"login": "AHeise", "name": "Arvid Heise"}}, "url": "https://github.com/apache/flink/commit/8fc73a896082ad490854f60135c40616373551ea", "committedDate": "2020-03-30T08:01:35Z", "message": "[FLINK-16245][tests] Adjust BatchFineGrainedRecoveryITCase\n\nBecause the classloader is now closed when the task fails the UDF only has access to the bootstrap classloader, which doesn't contain our own test classes."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3017, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}