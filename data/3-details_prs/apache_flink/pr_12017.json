{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NTU3OTY0", "number": 12017, "title": "[FLINK-17452][hive] Support creating Hive tables with constraints", "bodyText": "What is the purpose of the change\nSupport creating hive tables with constraints.\nBrief change log\n\nAdd shim method createTableWithConstraints.\nWhen creating a hive table, i.e. non-generic, get PK and NOT NULL from table schema and call createTableWithConstraints.\nAdd test case.\n\nVerifying this change\nManually run the new test with hive-3.1.1 profile.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? yes\nIf yes, how is the feature documented? docs", "createdAt": "2020-05-07T09:09:51Z", "url": "https://github.com/apache/flink/pull/12017", "merged": true, "mergeCommit": {"oid": "25cbce12d7201642b6031e38583489cd803fb1a5"}, "closed": true, "closedAt": "2020-05-11T02:13:22Z", "author": {"login": "lirui-apache"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfhw40AFqTQwODYyNDM2NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfiCRHgBqjMzMTkxMjg4MDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjI0MzY1", "url": "https://github.com/apache/flink/pull/12017#pullrequestreview-408624365", "createdAt": "2020-05-09T07:54:35Z", "commit": {"oid": "e31740d8c7693906aae2ace9336e943a7ad2e186"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNzo1NDozNVrOGS5SnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNzo1NzozOFrOGS5Tvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NjIwNQ==", "bodyText": "Can client do more things to include upper couple of lines?", "url": "https://github.com/apache/flink/pull/12017#discussion_r422466205", "createdAt": "2020-05-09T07:54:35Z", "author": {"login": "JingsongLi"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/HiveCatalog.java", "diffHunk": "@@ -374,8 +375,30 @@ public void createTable(ObjectPath tablePath, CatalogBaseTable table, boolean ig\n \n \t\tTable hiveTable = instantiateHiveTable(tablePath, table);\n \n+\t\tUniqueConstraint pkConstraint = null;\n+\t\tList<String> notNullCols = new ArrayList<>();\n+\t\tboolean isGeneric = isGenericForCreate(table.getOptions());\n+\t\tif (!isGeneric) {\n+\t\t\tpkConstraint = table.getSchema().getPrimaryKey().orElse(null);\n+\t\t\tfor (int i = 0; i < table.getSchema().getFieldDataTypes().length; i++) {\n+\t\t\t\tif (!table.getSchema().getFieldDataTypes()[i].getLogicalType().isNullable()) {\n+\t\t\t\t\tnotNullCols.add(table.getSchema().getFieldNames()[i]);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n \t\ttry {\n-\t\t\tclient.createTable(hiveTable);\n+\t\t\tif (pkConstraint != null || !notNullCols.isEmpty()) {\n+\t\t\t\t// for now we just create constraints that are DISABLE, NOVALIDATE, RELY\n+\t\t\t\tByte[] pkTraits = new Byte[pkConstraint == null ? 0 : pkConstraint.getColumns().size()];\n+\t\t\t\tArrays.fill(pkTraits, HiveTableUtil.relyConstraint((byte) 0));\n+\t\t\t\tByte[] nnTraits = new Byte[notNullCols.size()];\n+\t\t\t\tArrays.fill(nnTraits, HiveTableUtil.relyConstraint((byte) 0));\n+\t\t\t\tclient.createTableWithConstraints(hiveTable, hiveConf,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e31740d8c7693906aae2ace9336e943a7ad2e186"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2NjQ5NQ==", "bodyText": "Too many parameters should be one parameter one line, both call and declaration are like this.", "url": "https://github.com/apache/flink/pull/12017#discussion_r422466495", "createdAt": "2020-05-09T07:57:38Z", "author": {"login": "JingsongLi"}, "path": "flink-connectors/flink-connector-hive/src/main/java/org/apache/flink/table/catalog/hive/client/HiveShimV310.java", "diffHunk": "@@ -239,4 +241,54 @@ public Writable hivePrimitiveToWritable(Object value) {\n \t\t}\n \t\tthrow new FlinkHiveException(\"Unsupported primitive java value of class \" + value.getClass().getName());\n \t}\n+\n+\t@Override\n+\tpublic void createTableWithConstraints(IMetaStoreClient client, Table table, Configuration conf,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e31740d8c7693906aae2ace9336e943a7ad2e186"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25639f2435dc6aacfea1493f84a16880a69be6d3", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/25639f2435dc6aacfea1493f84a16880a69be6d3", "committedDate": "2020-05-09T08:02:59Z", "message": "[FLINK-17452][hive] Support creating Hive tables with constraints"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "185f1aa3a6f4cc739d0120828b739b05b582b7e7", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/185f1aa3a6f4cc739d0120828b739b05b582b7e7", "committedDate": "2020-05-09T08:16:46Z", "message": "fix code style"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e31740d8c7693906aae2ace9336e943a7ad2e186", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/e31740d8c7693906aae2ace9336e943a7ad2e186", "committedDate": "2020-05-07T09:05:17Z", "message": "[FLINK-17452][hive] Support creating Hive tables with constraints"}, "afterCommit": {"oid": "185f1aa3a6f4cc739d0120828b739b05b582b7e7", "author": {"user": {"login": "lirui-apache", "name": "Rui Li"}}, "url": "https://github.com/apache/flink/commit/185f1aa3a6f4cc739d0120828b739b05b582b7e7", "committedDate": "2020-05-09T08:16:46Z", "message": "fix code style"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4636, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}