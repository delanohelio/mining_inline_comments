{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MzQ5MzU4", "number": 12127, "title": "[FLINK-17665][network] Serialize DataType of Buffer into BufferResponse", "bodyText": "What is the purpose of the change\nAfter serializing DataType of Buffer into BufferResponse, we can get the DataType at downstream without deserializing the Buffer, which is more performance friendly.\nBrief change log\n\nSerialize DataType of Buffer into BufferResponse\n\nVerifying this change\nExisting test is modified to verify the change.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-05-13T13:06:19Z", "url": "https://github.com/apache/flink/pull/12127", "merged": true, "mergeCommit": {"oid": "3bb18bb2122147162fbd05f3636255b6e5736906"}, "closed": true, "closedAt": "2020-05-14T10:44:27Z", "author": {"login": "wsry"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg6tl0gFqTQxMTA1MDQ3OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg7XUuABqjMzMzI4NzM5MjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMDUwNDc5", "url": "https://github.com/apache/flink/pull/12127#pullrequestreview-411050479", "createdAt": "2020-05-13T15:35:57Z", "commit": {"oid": "f9e182497db98539df5317ce52f5ce15c8775bc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTozNTo1N1rOGU3inw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTozNTo1N1rOGU3inw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzNDY4Nw==", "bodyText": "redundant empty line", "url": "https://github.com/apache/flink/pull/12127#discussion_r424534687", "createdAt": "2020-05-13T15:35:57Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/NettyMessage.java", "diffHunk": "@@ -279,27 +279,28 @@ protected Object decode(ChannelHandlerContext ctx, ByteBuf in) throws Exception\n \n \t\tfinal int backlog;\n \n-\t\tfinal boolean isBuffer;\n+\t\tfinal Buffer.DataType dataType;\n \n \t\tfinal boolean isCompressed;\n \n \t\tfinal int bufferSize;\n \n \t\tprivate BufferResponse(\n \t\t\t\t@Nullable Buffer buffer,\n-\t\t\t\tboolean isBuffer,\n+\t\t\t\tBuffer.DataType dataType,\n \t\t\t\tboolean isCompressed,\n \t\t\t\tint sequenceNumber,\n \t\t\t\tInputChannelID receiverId,\n \t\t\t\tint backlog,\n \t\t\t\tint bufferSize) {\n \t\t\tthis.buffer = buffer;\n-\t\t\tthis.isBuffer = isBuffer;\n+\t\t\tthis.dataType = dataType;\n \t\t\tthis.isCompressed = isCompressed;\n \t\t\tthis.sequenceNumber = sequenceNumber;\n \t\t\tthis.receiverId = checkNotNull(receiverId);\n \t\t\tthis.backlog = backlog;\n \t\t\tthis.bufferSize = bufferSize;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9e182497db98539df5317ce52f5ce15c8775bc5"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMDU1Mjk5", "url": "https://github.com/apache/flink/pull/12127#pullrequestreview-411055299", "createdAt": "2020-05-13T15:40:59Z", "commit": {"oid": "f9e182497db98539df5317ce52f5ce15c8775bc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTo0MDo1OVrOGU3xrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTo0MDo1OVrOGU3xrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzODU0Mg==", "bodyText": "nit: <p>Notes:", "url": "https://github.com/apache/flink/pull/12127#discussion_r424538542", "createdAt": "2020-05-13T15:40:59Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java", "diffHunk": "@@ -238,6 +238,10 @@\n \t/**\n \t * Used to identify the type of data contained in the {@link Buffer} so that we can get\n \t * the information without deserializing the serialized data.\n+\t *\n+\t * Notes: Currently, one byte is used to serialize {@link DataType}, so the maximum number", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9e182497db98539df5317ce52f5ce15c8775bc5"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMDU2NzUx", "url": "https://github.com/apache/flink/pull/12127#pullrequestreview-411056751", "createdAt": "2020-05-13T15:42:32Z", "commit": {"oid": "f9e182497db98539df5317ce52f5ce15c8775bc5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTo0MjozMlrOGU32MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTo0MjozMlrOGU32MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzOTY5Ng==", "bodyText": "of supported data types is 128", "url": "https://github.com/apache/flink/pull/12127#discussion_r424539696", "createdAt": "2020-05-13T15:42:32Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/buffer/Buffer.java", "diffHunk": "@@ -238,6 +238,10 @@\n \t/**\n \t * Used to identify the type of data contained in the {@link Buffer} so that we can get\n \t * the information without deserializing the serialized data.\n+\t *\n+\t * Notes: Currently, one byte is used to serialize {@link DataType}, so the maximum number\n+\t * of data types can be supported is 128. And for compatibility reason, do not change the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9e182497db98539df5317ce52f5ce15c8775bc5"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMDY2ODQ5", "url": "https://github.com/apache/flink/pull/12127#pullrequestreview-411066849", "createdAt": "2020-05-13T15:53:16Z", "commit": {"oid": "f9e182497db98539df5317ce52f5ce15c8775bc5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d6ed83e3db68867923b60e32e3ed628505cbed2", "author": {"user": {"login": "wsry", "name": "caoyingjie"}}, "url": "https://github.com/apache/flink/commit/1d6ed83e3db68867923b60e32e3ed628505cbed2", "committedDate": "2020-05-13T16:20:40Z", "message": "[FLINK-17665][network] Serialize DataType of Buffer into BufferResponse\n\nAfter serializing DataType of Buffer into BufferResponse, we can get the DataType at downstream without deserializing the Buffer, which is more performance friendly."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9e182497db98539df5317ce52f5ce15c8775bc5", "author": {"user": {"login": "wsry", "name": "caoyingjie"}}, "url": "https://github.com/apache/flink/commit/f9e182497db98539df5317ce52f5ce15c8775bc5", "committedDate": "2020-05-13T12:59:29Z", "message": "[FLINK-17665][network] Serialize DataType of Buffer into BufferResponse\n\nAfter serializing DataType of Buffer into BufferResponse, we can get the DataType at downstream without deserializing the Buffer, which is more performance friendly."}, "afterCommit": {"oid": "1d6ed83e3db68867923b60e32e3ed628505cbed2", "author": {"user": {"login": "wsry", "name": "caoyingjie"}}, "url": "https://github.com/apache/flink/commit/1d6ed83e3db68867923b60e32e3ed628505cbed2", "committedDate": "2020-05-13T16:20:40Z", "message": "[FLINK-17665][network] Serialize DataType of Buffer into BufferResponse\n\nAfter serializing DataType of Buffer into BufferResponse, we can get the DataType at downstream without deserializing the Buffer, which is more performance friendly."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4377, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}