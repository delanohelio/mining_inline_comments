{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MDUyODU1", "number": 11829, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMTozODo1MlrOD0g_AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMTo0MzoyMlrOD0hDNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzkyOTYwOnYy", "diffSide": "RIGHT", "path": "flink-end-to-end-tests/flink-tpcds-test/src/main/java/org/apache/flink/table/tpcds/TpcdsTestProgram.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMTozODo1MlrOGJfdbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMTo1ODoxNVrOGJf4SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNTgwNg==", "bodyText": "Consider default value is ALL_EDGES_BLOCKING, we can remove this code.", "url": "https://github.com/apache/flink/pull/11829#discussion_r412605806", "createdAt": "2020-04-22T01:38:52Z", "author": {"login": "JingsongLi"}, "path": "flink-end-to-end-tests/flink-tpcds-test/src/main/java/org/apache/flink/table/tpcds/TpcdsTestProgram.java", "diffHunk": "@@ -123,8 +123,9 @@ private static TableEnvironment prepareTableEnv(String sourceTablePath, Boolean\n \t\tTableEnvironment tEnv = TableEnvironment.create(environmentSettings);\n \n \t\t//config Optimizer parameters\n-\t\ttEnv.getConfig().getConfiguration()\n-\t\t\t\t.setString(ExecutionConfigOptions.TABLE_EXEC_SHUFFLE_MODE, ShuffleMode.BATCH.toString());\n+\t\ttEnv.getConfig().getConfiguration().setString(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c01e235c3048c97accdd33f7cfe2b03f6f60c8b3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxMjY4MA==", "bodyText": "Ok. Then TpcdsTestProgram will test the default behavior. I think it's even better.", "url": "https://github.com/apache/flink/pull/11829#discussion_r412612680", "createdAt": "2020-04-22T01:58:15Z", "author": {"login": "zhuzhurk"}, "path": "flink-end-to-end-tests/flink-tpcds-test/src/main/java/org/apache/flink/table/tpcds/TpcdsTestProgram.java", "diffHunk": "@@ -123,8 +123,9 @@ private static TableEnvironment prepareTableEnv(String sourceTablePath, Boolean\n \t\tTableEnvironment tEnv = TableEnvironment.create(environmentSettings);\n \n \t\t//config Optimizer parameters\n-\t\ttEnv.getConfig().getConfiguration()\n-\t\t\t\t.setString(ExecutionConfigOptions.TABLE_EXEC_SHUFFLE_MODE, ShuffleMode.BATCH.toString());\n+\t\ttEnv.getConfig().getConfiguration().setString(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNTgwNg=="}, "originalCommit": {"oid": "c01e235c3048c97accdd33f7cfe2b03f6f60c8b3"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzkzMjIyOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/config/ExecutionConfigOptions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMTo0MDowMFrOGJfe3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjowNjoyNlrOGJgC-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNjE3NQ==", "bodyText": "add .stringType()?", "url": "https://github.com/apache/flink/pull/11829#discussion_r412606175", "createdAt": "2020-04-22T01:40:00Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/config/ExecutionConfigOptions.java", "diffHunk": "@@ -216,9 +219,34 @@\n \t@Documentation.TableOption(execMode = Documentation.ExecMode.BATCH)\n \tpublic static final ConfigOption<String> TABLE_EXEC_SHUFFLE_MODE =\n \t\tkey(\"table.exec.shuffle-mode\")\n-\t\t\t.defaultValue(\"batch\")\n-\t\t\t.withDescription(\"Sets exec shuffle mode. Only batch or pipelined can be set.\\n\" +\n-\t\t\t\t\"batch: the job will run stage by stage. \\n\" +\n-\t\t\t\t\"pipelined: the job will run in streaming mode, but it may cause resource deadlock that receiver waits for resource to start when \" +\n-\t\t\t\t\"the sender holds resource to wait to send data to the receiver.\");\n+\t\t\t.defaultValue(\"ALL_EDGES_BLOCKING\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c01e235c3048c97accdd33f7cfe2b03f6f60c8b3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxNTQxNw==", "bodyText": "Ok.", "url": "https://github.com/apache/flink/pull/11829#discussion_r412615417", "createdAt": "2020-04-22T02:06:26Z", "author": {"login": "zhuzhurk"}, "path": "flink-table/flink-table-api-java/src/main/java/org/apache/flink/table/api/config/ExecutionConfigOptions.java", "diffHunk": "@@ -216,9 +219,34 @@\n \t@Documentation.TableOption(execMode = Documentation.ExecMode.BATCH)\n \tpublic static final ConfigOption<String> TABLE_EXEC_SHUFFLE_MODE =\n \t\tkey(\"table.exec.shuffle-mode\")\n-\t\t\t.defaultValue(\"batch\")\n-\t\t\t.withDescription(\"Sets exec shuffle mode. Only batch or pipelined can be set.\\n\" +\n-\t\t\t\t\"batch: the job will run stage by stage. \\n\" +\n-\t\t\t\t\"pipelined: the job will run in streaming mode, but it may cause resource deadlock that receiver waits for resource to start when \" +\n-\t\t\t\t\"the sender holds resource to wait to send data to the receiver.\");\n+\t\t\t.defaultValue(\"ALL_EDGES_BLOCKING\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNjE3NQ=="}, "originalCommit": {"oid": "c01e235c3048c97accdd33f7cfe2b03f6f60c8b3"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzkzNjAxOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ExecutorUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMTo0MToyN1rOGJfg3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjoyNjowMlrOGJgcKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNjY4Ng==", "bodyText": "isShuffleModeAllBlocking?", "url": "https://github.com/apache/flink/pull/11829#discussion_r412606686", "createdAt": "2020-04-22T01:41:27Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ExecutorUtils.java", "diffHunk": "@@ -85,19 +83,14 @@ public static void setBatchProperties(StreamGraph streamGraph, TableConfig table\n \t\tif (streamGraph.getCheckpointConfig().isCheckpointingEnabled()) {\n \t\t\tthrow new IllegalArgumentException(\"Checkpoint is not supported for batch jobs.\");\n \t\t}\n-\t\tif (ExecutorUtils.isShuffleModeAllBatch(tableConfig)) {\n-\t\t\tstreamGraph.setGlobalDataExchangeMode(GlobalDataExchangeMode.ALL_EDGES_BLOCKING);\n-\t\t}\n+\t\tstreamGraph.setGlobalDataExchangeMode(getGlobalDataExchangeMode(tableConfig));\n \t}\n \n \tprivate static boolean isShuffleModeAllBatch(TableConfig tableConfig) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c01e235c3048c97accdd33f7cfe2b03f6f60c8b3"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyMTg2Ng==", "bodyText": "Ok.", "url": "https://github.com/apache/flink/pull/11829#discussion_r412621866", "createdAt": "2020-04-22T02:26:02Z", "author": {"login": "zhuzhurk"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ExecutorUtils.java", "diffHunk": "@@ -85,19 +83,14 @@ public static void setBatchProperties(StreamGraph streamGraph, TableConfig table\n \t\tif (streamGraph.getCheckpointConfig().isCheckpointingEnabled()) {\n \t\t\tthrow new IllegalArgumentException(\"Checkpoint is not supported for batch jobs.\");\n \t\t}\n-\t\tif (ExecutorUtils.isShuffleModeAllBatch(tableConfig)) {\n-\t\t\tstreamGraph.setGlobalDataExchangeMode(GlobalDataExchangeMode.ALL_EDGES_BLOCKING);\n-\t\t}\n+\t\tstreamGraph.setGlobalDataExchangeMode(getGlobalDataExchangeMode(tableConfig));\n \t}\n \n \tprivate static boolean isShuffleModeAllBatch(TableConfig tableConfig) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNjY4Ng=="}, "originalCommit": {"oid": "c01e235c3048c97accdd33f7cfe2b03f6f60c8b3"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2Mzk0MDM5OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ShuffleModeUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMTo0MzoyMlrOGJfjUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjoxMDowM1rOGJgHgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNzMxMw==", "bodyText": "Can we catch the specific exception?", "url": "https://github.com/apache/flink/pull/11829#discussion_r412607313", "createdAt": "2020-04-22T01:43:22Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ShuffleModeUtils.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.planner.utils;\n+\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.streaming.api.graph.GlobalDataExchangeMode;\n+import org.apache.flink.table.api.config.ExecutionConfigOptions;\n+\n+/**\n+ * Utility class to load job-wide shuffle mode.\n+ */\n+public class ShuffleModeUtils {\n+\n+\tstatic final String ALL_EDGES_BLOCKING_LEGACY = \"batch\";\n+\n+\tstatic final String ALL_EDGES_PIPELINED_LEGACY = \"pipelined\";\n+\n+\tstatic GlobalDataExchangeMode getShuffleModeAsGlobalDataExchangeMode(final Configuration configuration) {\n+\t\tfinal String value = configuration.getString(ExecutionConfigOptions.TABLE_EXEC_SHUFFLE_MODE);\n+\n+\t\ttry {\n+\t\t\treturn GlobalDataExchangeMode.valueOf(convertLegacyShuffleMode(value).toUpperCase());\n+\t\t} catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c01e235c3048c97accdd33f7cfe2b03f6f60c8b3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxNjU3Ng==", "bodyText": "Sure. I wanted to catch the NPE as well but seems it is not necessary.", "url": "https://github.com/apache/flink/pull/11829#discussion_r412616576", "createdAt": "2020-04-22T02:10:03Z", "author": {"login": "zhuzhurk"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/utils/ShuffleModeUtils.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.planner.utils;\n+\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.streaming.api.graph.GlobalDataExchangeMode;\n+import org.apache.flink.table.api.config.ExecutionConfigOptions;\n+\n+/**\n+ * Utility class to load job-wide shuffle mode.\n+ */\n+public class ShuffleModeUtils {\n+\n+\tstatic final String ALL_EDGES_BLOCKING_LEGACY = \"batch\";\n+\n+\tstatic final String ALL_EDGES_PIPELINED_LEGACY = \"pipelined\";\n+\n+\tstatic GlobalDataExchangeMode getShuffleModeAsGlobalDataExchangeMode(final Configuration configuration) {\n+\t\tfinal String value = configuration.getString(ExecutionConfigOptions.TABLE_EXEC_SHUFFLE_MODE);\n+\n+\t\ttry {\n+\t\t\treturn GlobalDataExchangeMode.valueOf(convertLegacyShuffleMode(value).toUpperCase());\n+\t\t} catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwNzMxMw=="}, "originalCommit": {"oid": "c01e235c3048c97accdd33f7cfe2b03f6f60c8b3"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1682, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}