{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NjA1Mzgy", "number": 11564, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDowMjowOVrODtCOzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDoyODowOVrODuZrbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTQ5MDcwOnYy", "diffSide": "RIGHT", "path": "docs/monitoring/metrics.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDowMjowOVrOF-OUCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDowMjowOVrOF-OUCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc5MDUzOQ==", "bodyText": "The time (in milliseconds) this task is idle (either has no data to process or it is back pressured) per second.", "url": "https://github.com/apache/flink/pull/11564#discussion_r400790539", "createdAt": "2020-03-31T10:02:09Z", "author": {"login": "pnowojski"}, "path": "docs/monitoring/metrics.md", "diffHunk": "@@ -1440,6 +1440,11 @@ Certain RocksDB native metrics are available but disabled by default, you can fi\n       <td>Whether the task is back-pressured.</td>\n       <td>Gauge</td>\n     </tr>\n+    <tr>\n+      <td>idleTimeMsPerSecond</td>\n+      <td>The time(in milliseconds) this task is dile(eithor waiting mails or waiting output buffer) per second.</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0542c5dc966c56853433d487858711cbba1d9eb3"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTQ5NzU1OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TaskIOMetricGroup.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDowMzo1N1rOF-OYYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDowMzo1N1rOF-OYYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc5MTY1MQ==", "bodyText": "typo idleTimePerSecond", "url": "https://github.com/apache/flink/pull/11564#discussion_r400791651", "createdAt": "2020-03-31T10:03:57Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/metrics/groups/TaskIOMetricGroup.java", "diffHunk": "@@ -45,6 +45,7 @@\n \tprivate final Meter numRecordsInRate;\n \tprivate final Meter numRecordsOutRate;\n \tprivate final Meter numBuffersOutRate;\n+\tprivate final Meter idlTimePerSecond;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0542c5dc966c56853433d487858711cbba1d9eb3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTU1OTU1OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/api/writer/RecordWriter.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDoyMDoxOVrOF-O-VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMjo1NDo0M1rOGCCH0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgwMTM2NA==", "bodyText": "I think this is most of the times correct, however there might be a race condition with NetworkBufferPool#redistributeBuffers and isApproximatelyAvailable() check. Check might return available, while the method would still block.\nThe proper way of doing it would be to add non blocking version of the method getBufferBuilder() (or rather rename the existing one to getBufferBuilderBlocking() and implement new getBufferBuilder() which would be non blocking)   to the ResultPartition (and BufferPool + LocalBufferPool). It should be easy, as there are already non blocking methods for requesting memory segments.", "url": "https://github.com/apache/flink/pull/11564#discussion_r400801364", "createdAt": "2020-03-31T10:20:19Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/api/writer/RecordWriter.java", "diffHunk": "@@ -276,6 +281,21 @@ protected void checkErroneous() throws IOException {\n \t\t}\n \t}\n \n+\tprotected void addBufferConsumer(BufferConsumer consumer, int targetChannel) throws IOException {\n+\t\ttargetPartition.addBufferConsumer(consumer, targetChannel);\n+\t}\n+\n+\tprotected BufferBuilder getBufferBuilder() throws IOException, InterruptedException {\n+\t\tBufferBuilder builder;\n+\t\tif (!targetPartition.isApproximatelyAvailable()) {\n+\t\t\tlong start = System.currentTimeMillis();\n+\t\t\tbuilder = targetPartition.getBufferBuilder();\n+\t\t\tidleTimeMsPerSecond.markEvent(System.currentTimeMillis() - start);\n+\t\t} else {\n+\t\t\tbuilder = targetPartition.getBufferBuilder();\n+\t\t}\n+\t\treturn builder;\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0542c5dc966c56853433d487858711cbba1d9eb3"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMyNzU0Mg==", "bodyText": "NetworkBufferPool#redistributeBuffers reduce the buffer available only when new task deployed right? I think it can be ignored, because we use meter to measure average idle time which use a time window by default 60s and redistributeBuffers happens in very low frequence.", "url": "https://github.com/apache/flink/pull/11564#discussion_r401327542", "createdAt": "2020-04-01T02:54:40Z", "author": {"login": "wenlong88"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/api/writer/RecordWriter.java", "diffHunk": "@@ -276,6 +281,21 @@ protected void checkErroneous() throws IOException {\n \t\t}\n \t}\n \n+\tprotected void addBufferConsumer(BufferConsumer consumer, int targetChannel) throws IOException {\n+\t\ttargetPartition.addBufferConsumer(consumer, targetChannel);\n+\t}\n+\n+\tprotected BufferBuilder getBufferBuilder() throws IOException, InterruptedException {\n+\t\tBufferBuilder builder;\n+\t\tif (!targetPartition.isApproximatelyAvailable()) {\n+\t\t\tlong start = System.currentTimeMillis();\n+\t\t\tbuilder = targetPartition.getBufferBuilder();\n+\t\t\tidleTimeMsPerSecond.markEvent(System.currentTimeMillis() - start);\n+\t\t} else {\n+\t\t\tbuilder = targetPartition.getBufferBuilder();\n+\t\t}\n+\t\treturn builder;\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgwMTM2NA=="}, "originalCommit": {"oid": "0542c5dc966c56853433d487858711cbba1d9eb3"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0MzE2MQ==", "bodyText": "The thing is that the code might change/evolve over time making this check even more wrong. Yes now this bug is pretty harmless, but if we can make it easily completely correct, why not doing it? Proper fix is just ~5 lines of code in LocalBufferPool to provide LocalBufferPool#requestBufferBuilder, maybe 5 more lines TestPooledBufferProvider, add the method to the BufferPool interface and proxy/expose it in the ResultPartition.", "url": "https://github.com/apache/flink/pull/11564#discussion_r403043161", "createdAt": "2020-04-03T14:25:29Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/api/writer/RecordWriter.java", "diffHunk": "@@ -276,6 +281,21 @@ protected void checkErroneous() throws IOException {\n \t\t}\n \t}\n \n+\tprotected void addBufferConsumer(BufferConsumer consumer, int targetChannel) throws IOException {\n+\t\ttargetPartition.addBufferConsumer(consumer, targetChannel);\n+\t}\n+\n+\tprotected BufferBuilder getBufferBuilder() throws IOException, InterruptedException {\n+\t\tBufferBuilder builder;\n+\t\tif (!targetPartition.isApproximatelyAvailable()) {\n+\t\t\tlong start = System.currentTimeMillis();\n+\t\t\tbuilder = targetPartition.getBufferBuilder();\n+\t\t\tidleTimeMsPerSecond.markEvent(System.currentTimeMillis() - start);\n+\t\t} else {\n+\t\t\tbuilder = targetPartition.getBufferBuilder();\n+\t\t}\n+\t\treturn builder;\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgwMTM2NA=="}, "originalCommit": {"oid": "0542c5dc966c56853433d487858711cbba1d9eb3"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc4NTEwNQ==", "bodyText": "Thanks for the update!", "url": "https://github.com/apache/flink/pull/11564#discussion_r404785105", "createdAt": "2020-04-07T12:54:43Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/api/writer/RecordWriter.java", "diffHunk": "@@ -276,6 +281,21 @@ protected void checkErroneous() throws IOException {\n \t\t}\n \t}\n \n+\tprotected void addBufferConsumer(BufferConsumer consumer, int targetChannel) throws IOException {\n+\t\ttargetPartition.addBufferConsumer(consumer, targetChannel);\n+\t}\n+\n+\tprotected BufferBuilder getBufferBuilder() throws IOException, InterruptedException {\n+\t\tBufferBuilder builder;\n+\t\tif (!targetPartition.isApproximatelyAvailable()) {\n+\t\t\tlong start = System.currentTimeMillis();\n+\t\t\tbuilder = targetPartition.getBufferBuilder();\n+\t\t\tidleTimeMsPerSecond.markEvent(System.currentTimeMillis() - start);\n+\t\t} else {\n+\t\t\tbuilder = targetPartition.getBufferBuilder();\n+\t\t}\n+\t\treturn builder;\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgwMTM2NA=="}, "originalCommit": {"oid": "0542c5dc966c56853433d487858711cbba1d9eb3"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTc4NDA4OnYy", "diffSide": "RIGHT", "path": "docs/monitoring/metrics.zh.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDoyMDoyOVrOGAXlqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDoyMDoyOVrOGAXlqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAzOTY1Nw==", "bodyText": "nit: still missing spaces in front of opening braces (", "url": "https://github.com/apache/flink/pull/11564#discussion_r403039657", "createdAt": "2020-04-03T14:20:29Z", "author": {"login": "pnowojski"}, "path": "docs/monitoring/metrics.zh.md", "diffHunk": "@@ -1440,6 +1440,11 @@ Certain RocksDB native metrics are available but disabled by default, you can fi\n       <td>Whether the task is back-pressured.</td>\n       <td>Gauge</td>\n     </tr>\n+    <tr>\n+      <td>idleTimeMsPerSecond</td>\n+      <td>The time(in milliseconds) this task is idle(either has no data to process or it is back pressured) per second.</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc6f9642a2fe6fca383707a11d53ef6ed2ea381"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTgxODA2OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/api/writer/RecordWriterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDoyODowOVrOGAX6_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDoyODowOVrOGAX6_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0NTExNw==", "bodyText": "Test is failing on azure:\n[ERROR] Failures: \n[ERROR]   BroadcastRecordWriterTest>RecordWriterTest.testIdleTime:505 \nExpected: a value equal to or greater than <10L>\n     but: <0L> was less than <10L>\n[ERROR]   RecordWriterTest.testIdleTime:505 \nExpected: a value equal to or greater than <10L>\n     but: <0L> was less than <10L>", "url": "https://github.com/apache/flink/pull/11564#discussion_r403045117", "createdAt": "2020-04-03T14:28:09Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/api/writer/RecordWriterTest.java", "diffHunk": "@@ -464,6 +466,46 @@ public void testIsAvailableOrNot() throws Exception {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testIdleTime() throws IOException, InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc6f9642a2fe6fca383707a11d53ef6ed2ea381"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 575, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}