{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NDkxMzk5", "number": 10775, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzoyMDoyOVrODWKw0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzoyNjowMlrODWK0BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTcxNjAxOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/codegen/calls/ScalarFunctionCallGen.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzoyMDoyOVrOFaxfPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzoyMDoyOVrOFaxfPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYxODEwOA==", "bodyText": "Can you add a UDF case like:\nclass MyUdf extends ScalarFunction {\n   public Object eval(...) {...}\n   public TypeInformation getResultType() {\n      return Types.BIG_DECIMAL;\n   }\n}\n\nto repeat this bug?", "url": "https://github.com/apache/flink/pull/10775#discussion_r363618108", "createdAt": "2020-01-07T07:20:29Z", "author": {"login": "JingsongLi"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/codegen/calls/ScalarFunctionCallGen.scala", "diffHunk": "@@ -79,7 +80,8 @@ class ScalarFunctionCallGen(scalarFunction: ScalarFunction) extends CallGenerato\n         val boxedResultClass = ExtractionUtils.boxPrimitive(resultClass).asInstanceOf[Class[_]]\n         val javaTypeTerm = boxedResultClass.getCanonicalName\n         val resultExternalTypeWithResultClass =\n-          if (resultExternalType.getLogicalType.supportsOutputConversion(boxedResultClass)) {\n+          if (LogicalTypeDataTypeConverter.fromDataTypeToLogicalType(resultExternalType)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f3e87d2f247d4970fdd41e9758f5575710f9cfa"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTcyNDIwOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/dataformat/DataFormatConverters.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzoyNjowMlrOFaxkPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwNzoyNjowMlrOFaxkPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYxOTM4OA==", "bodyText": "Put it in the else branch? Could you help to update other types which have the same problem, e.g. TIMESTAMP_WITHOUT_TIME_ZONE, TIMESTAMP_WITH_LOCAL_TIME_ZONE, TIMESTAMP_WITH_LOCAL_TIME_ZONE...", "url": "https://github.com/apache/flink/pull/10775#discussion_r363619388", "createdAt": "2020-01-07T07:26:02Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-runtime-blink/src/main/java/org/apache/flink/table/dataformat/DataFormatConverters.java", "diffHunk": "@@ -164,9 +164,10 @@ public static DataFormatConverter getConverterForDataType(DataType originDataTyp\n \t\t\t\tTuple2<Integer, Integer> ps = getPrecision(logicalType);\n \t\t\t\tif (clazz == BigDecimal.class) {\n \t\t\t\t\treturn new BigDecimalConverter(ps.f0, ps.f1);\n-\t\t\t\t} else {\n+\t\t\t\t} else if (clazz == Decimal.class) {\n \t\t\t\t\treturn new DecimalConverter(ps.f0, ps.f1);\n \t\t\t\t}\n+\t\t\t\tthrow new RuntimeException(\"Not support class for DECIMAL: \" + clazz);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f3e87d2f247d4970fdd41e9758f5575710f9cfa"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1288, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}