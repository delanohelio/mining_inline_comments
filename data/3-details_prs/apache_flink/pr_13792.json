{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5OTExNjY0", "number": 13792, "title": "[FLINK-19809][coordination] Add DeclareResourceRequirementServiceConnectionManager", "bodyText": "Add a component for managing the connection to the resource manager and declaring resource requirements.\nAlso adjusts ManuallyTriggeredScheduledExecutor#triggerNonPeriodicScheduledTasks to run non-periodic tasks that were scheduled by a previously run non-periodic task.", "createdAt": "2020-10-26T09:57:45Z", "url": "https://github.com/apache/flink/pull/13792", "merged": true, "mergeCommit": {"oid": "a2684659ce93a008665ced27757d102b58ab7deb"}, "closed": true, "closedAt": "2020-11-04T09:28:39Z", "author": {"login": "zentol"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWRArpAH2gAyNTA5OTExNjY0OjQ4NTg1NWYyN2JkNWRhODhhNDcxZjZlNDcwYTdlZDhiNDVkNGE3MWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZKV15gH2gAyNTA5OTExNjY0OjQ5ZWUwZDFlNWViZmU3NzViYjcxOTAyZTZhNDQ5MGYyMDUzODUyOGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "485855f27bd5da88a471f6e470a7ed8b45d4a71a", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/485855f27bd5da88a471f6e470a7ed8b45d4a71a", "committedDate": "2020-10-26T09:32:42Z", "message": "[hotfix] Trigger recursive tasks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "922d6c3d9bafee2a83a06960b1a20dad58fdb0f2", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/922d6c3d9bafee2a83a06960b1a20dad58fdb0f2", "committedDate": "2020-10-26T09:35:49Z", "message": "[FLINK-19809][coordination] Add DeclareResourceRequirementServiceConnectionManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a46db4c9e8a9f0d1d5185b353c21aa7c1cd28e3", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/0a46db4c9e8a9f0d1d5185b353c21aa7c1cd28e3", "committedDate": "2020-10-26T12:15:54Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzgzMDQw", "url": "https://github.com/apache/flink/pull/13792#pullrequestreview-521783040", "createdAt": "2020-11-02T16:20:06Z", "commit": {"oid": "0a46db4c9e8a9f0d1d5185b353c21aa7c1cd28e3"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoyMDowN1rOHsLiKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjoyNDo0NlrOHsLu9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA4ODM2Mw==", "bodyText": "I think this annotation is wrong. sendResourceRequirements is not be guarded by lock. See FutureUtils.retryWithDelay(() -> sendResourceRequirements,....).", "url": "https://github.com/apache/flink/pull/13792#discussion_r516088363", "createdAt": "2020-11-02T16:20:07Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/jobmaster/slotpool/DefaultDeclareResourceRequirementServiceConnectionManager.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.jobmaster.slotpool;\n+\n+import org.apache.flink.runtime.concurrent.ExponentialBackoffRetryStrategy;\n+import org.apache.flink.runtime.concurrent.FutureUtils;\n+import org.apache.flink.runtime.concurrent.ScheduledExecutor;\n+import org.apache.flink.runtime.messages.Acknowledge;\n+import org.apache.flink.runtime.slots.ResourceRequirements;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.annotation.Nullable;\n+import javax.annotation.concurrent.GuardedBy;\n+\n+import java.time.Duration;\n+import java.util.concurrent.CancellationException;\n+import java.util.concurrent.CompletableFuture;\n+\n+/**\n+ * Default implementation of {@link DeclareResourceRequirementServiceConnectionManager}.\n+ *\n+ * <p>This connection manager is responsible for sending new\n+ * resource requirements to the connected service. In case of faults it continues\n+ * retrying to send the latest resource requirements to the service with\n+ * an exponential backoff strategy.\n+ */\n+class DefaultDeclareResourceRequirementServiceConnectionManager\n+\t\textends AbstractServiceConnectionManager<DeclareResourceRequirementServiceConnectionManager.DeclareResourceRequirementsService>\n+\t\timplements DeclareResourceRequirementServiceConnectionManager {\n+\n+\tprivate static final Logger LOG = LoggerFactory.getLogger(DefaultDeclareResourceRequirementServiceConnectionManager.class);\n+\n+\tprivate final ScheduledExecutor scheduledExecutor;\n+\n+\t@Nullable\n+\t@GuardedBy(\"lock\")\n+\tprivate ResourceRequirements currentResourceRequirements;\n+\n+\tprivate DefaultDeclareResourceRequirementServiceConnectionManager(ScheduledExecutor scheduledExecutor) {\n+\t\tthis.scheduledExecutor = scheduledExecutor;\n+\t}\n+\n+\t@Override\n+\tpublic void declareResourceRequirements(ResourceRequirements resourceRequirements) {\n+\t\tsynchronized (lock) {\n+\t\t\tcheckNotClosed();\n+\t\t\tif (isConnected()) {\n+\t\t\t\tcurrentResourceRequirements = resourceRequirements;\n+\n+\t\t\t\ttriggerResourceRequirementsSubmission(Duration.ofMillis(1L), Duration.ofMillis(10000L), currentResourceRequirements);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@GuardedBy(\"lock\")\n+\tprivate void triggerResourceRequirementsSubmission(\n+\t\t\tDuration sleepOnError,\n+\t\t\tDuration maxSleepOnError,\n+\t\t\tResourceRequirements resourceRequirementsToSend) {\n+\n+\t\tFutureUtils.retryWithDelay(\n+\t\t\t\t() -> sendResourceRequirements(resourceRequirementsToSend),\n+\t\t\t\tnew ExponentialBackoffRetryStrategy(Integer.MAX_VALUE, sleepOnError, maxSleepOnError),\n+\t\t\t\tthrowable -> !(throwable instanceof CancellationException),\n+\t\t\t\tscheduledExecutor);\n+\t}\n+\n+\t@GuardedBy(\"lock\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a46db4c9e8a9f0d1d5185b353c21aa7c1cd28e3"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5MTYzNg==", "bodyText": "fail is missing here.", "url": "https://github.com/apache/flink/pull/13792#discussion_r516091636", "createdAt": "2020-11-02T16:24:46Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/jobmaster/slotpool/AbstractServiceConnectionManagerTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.jobmaster.slotpool;\n+\n+import org.apache.flink.util.TestLogger;\n+\n+import org.junit.Test;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertThat;\n+\n+/**\n+ * Tests for the {@link DefaultDeclareResourceRequirementServiceConnectionManager}.\n+ */\n+public class AbstractServiceConnectionManagerTest extends TestLogger {\n+\n+\t@Test\n+\tpublic void testIsConnected() {\n+\t\tAbstractServiceConnectionManager<Object> connectionManager = new TestServiceConnectionManager();\n+\n+\t\tassertThat(connectionManager.isConnected(), is(false));\n+\n+\t\tconnectionManager.connect(new Object());\n+\t\tassertThat(connectionManager.isConnected(), is(true));\n+\n+\t\tconnectionManager.disconnect();\n+\t\tassertThat(connectionManager.isConnected(), is(false));\n+\n+\t\tconnectionManager.close();\n+\t\tassertThat(connectionManager.isConnected(), is(false));\n+\t}\n+\n+\t@Test\n+\tpublic void testCheckNotClosed() {\n+\t\tAbstractServiceConnectionManager<Object> connectionManager = new TestServiceConnectionManager();\n+\n+\t\tconnectionManager.checkNotClosed();\n+\n+\t\tconnectionManager.connect(new Object());\n+\t\tconnectionManager.checkNotClosed();\n+\n+\t\tconnectionManager.disconnect();\n+\t\tconnectionManager.checkNotClosed();\n+\n+\t\tconnectionManager.close();\n+\t\ttry {\n+\t\t\tconnectionManager.checkNotClosed();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a46db4c9e8a9f0d1d5185b353c21aa7c1cd28e3"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a47fbcb20c1fe2046967441e34320c163d83242f", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/a47fbcb20c1fe2046967441e34320c163d83242f", "committedDate": "2020-11-03T11:58:39Z", "message": "address coimments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b697317d44c217b22d491eeb2727c01fe7fa757", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/7b697317d44c217b22d491eeb2727c01fe7fa757", "committedDate": "2020-11-03T19:51:26Z", "message": "reintroduce old variant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49ee0d1e5ebfe775bb71902e6a4490f20538528d", "author": {"user": {"login": "zentol", "name": "Chesnay Schepler"}}, "url": "https://github.com/apache/flink/commit/49ee0d1e5ebfe775bb71902e6a4490f20538528d", "committedDate": "2020-11-04T09:28:15Z", "message": "javadocs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4837, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}