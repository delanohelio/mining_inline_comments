{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMTM4NDc3", "number": 11486, "title": "[FLINK-16712][task] Refactor StreamTask to construct final fields", "bodyText": "What is the purpose of the change\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as stateBackend, checkpointStorage, timerService, asyncOperationsThreadPool.\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead.\nBrief change log\n\nMigrate some files initialization from #beforeInvoke to constructor.\nRemove the null conditions for related fields in StreamTask\nAdd throw Exception for some related classes\n\nVerifying this change\nThis change is a trivial rework / code cleanup without any test coverage.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-03-23T03:43:29Z", "url": "https://github.com/apache/flink/pull/11486", "merged": true, "mergeCommit": {"oid": "bb4ec22a7d0e0d0831ec56b121eefb465bf8f939"}, "closed": true, "closedAt": "2020-03-25T06:08:31Z", "author": {"login": "zhijiangW"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQZ1ruABqjMxNTQwNzM5MTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQ-AuzgBqjMxNjIyMzA3MDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "53b97eb753986785848b55a6626e01f20e070626", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/53b97eb753986785848b55a6626e01f20e070626", "committedDate": "2020-03-23T03:36:02Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead."}, "afterCommit": {"oid": "9535112ff0782fd584600cc3fdbefe0457b1bcfb", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/9535112ff0782fd584600cc3fdbefe0457b1bcfb", "committedDate": "2020-03-23T08:14:20Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9535112ff0782fd584600cc3fdbefe0457b1bcfb", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/9535112ff0782fd584600cc3fdbefe0457b1bcfb", "committedDate": "2020-03-23T08:14:20Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead."}, "afterCommit": {"oid": "4c7dde85991c2181362648abbce207778f84ac07", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/4c7dde85991c2181362648abbce207778f84ac07", "committedDate": "2020-03-23T11:04:40Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MzQ1NTI0", "url": "https://github.com/apache/flink/pull/11486#pullrequestreview-379345524", "createdAt": "2020-03-23T11:33:07Z", "commit": {"oid": "4c7dde85991c2181362648abbce207778f84ac07"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMTozMzowN1rOF6BbZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMTozMzowN1rOF6BbZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM4NTEyNA==", "bodyText": "How long running are those calls? If they are touching some IO files, they might take quite some time and with your change, they would happen before the following lines in Task class:\n\t\t\t// switch to the RUNNING state, if that fails, we have been canceled/failed in the meantime\n\t\t\tif (!transitionState(ExecutionState.DEPLOYING, ExecutionState.RUNNING)) {\n\t\t\t\tthrow new CancelTaskException();\n\t\t\t}\n\n\t\t\t// notify everyone that we switched to running\n\t\t\ttaskManagerActions.updateTaskExecutionState(new TaskExecutionState(jobId, executionId, ExecutionState.RUNNING));\n\n\t\t\t// make sure the user code classloader is accessible thread-locally\n\t\t\texecutingThread.setContextClassLoader(userCodeClassLoader);\n\nas oppose to running after them, as it is now. I'm not sure what could be the side effects?", "url": "https://github.com/apache/flink/pull/11486#discussion_r396385124", "createdAt": "2020-03-23T11:33:07Z", "author": {"login": "pnowojski"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/StreamTask.java", "diffHunk": "@@ -260,17 +258,28 @@ protected StreamTask(\n \t\t\t@Nullable TimerService timerService,\n \t\t\tThread.UncaughtExceptionHandler uncaughtExceptionHandler,\n \t\t\tStreamTaskActionExecutor actionExecutor,\n-\t\t\tTaskMailbox mailbox) {\n+\t\t\tTaskMailbox mailbox) throws Exception {\n \n \t\tsuper(environment);\n \n-\t\tthis.timerService = timerService;\n-\t\tthis.uncaughtExceptionHandler = Preconditions.checkNotNull(uncaughtExceptionHandler);\n \t\tthis.configuration = new StreamConfig(getTaskConfiguration());\n \t\tthis.recordWriter = createRecordWriterDelegate(configuration, environment);\n \t\tthis.actionExecutor = Preconditions.checkNotNull(actionExecutor);\n \t\tthis.mailboxProcessor = new MailboxProcessor(this::processInput, mailbox, actionExecutor);\n \t\tthis.asyncExceptionHandler = new StreamTaskAsyncExceptionHandler(environment);\n+\t\tthis.asyncOperationsThreadPool = Executors.newCachedThreadPool(\n+\t\t\tnew ExecutorThreadFactory(\"AsyncOperations\", uncaughtExceptionHandler));\n+\n+\t\tthis.stateBackend = createStateBackend();\n+\t\tthis.checkpointStorage = stateBackend.createCheckpointStorage(getEnvironment().getJobID());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c7dde85991c2181362648abbce207778f84ac07"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NDE0Mjcz", "url": "https://github.com/apache/flink/pull/11486#pullrequestreview-379414273", "createdAt": "2020-03-23T13:13:17Z", "commit": {"oid": "4c7dde85991c2181362648abbce207778f84ac07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4c7dde85991c2181362648abbce207778f84ac07", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/4c7dde85991c2181362648abbce207778f84ac07", "committedDate": "2020-03-23T11:04:40Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead."}, "afterCommit": {"oid": "0a1a1264434909e99062ffe146c0222d4ed9d558", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/0a1a1264434909e99062ffe146c0222d4ed9d558", "committedDate": "2020-03-23T14:39:15Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NjEwNDk2", "url": "https://github.com/apache/flink/pull/11486#pullrequestreview-379610496", "createdAt": "2020-03-23T16:39:16Z", "commit": {"oid": "0a1a1264434909e99062ffe146c0222d4ed9d558"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjozOToxNlrOF6OENQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjo1MjoyOFrOF6OpxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU5MjE4MQ==", "bodyText": "I'm a bit concerned about concurrency here: we publish a reference to this object before it's being fully constructed.\nSo the other thread can read null as asyncExceptionHandler value.\nBut now this field is final, so the preceding write to it should be already visible.\nIf this is correct, I think we need to put a warning here and near final modifier that changing them can cause concurrency problems.", "url": "https://github.com/apache/flink/pull/11486#discussion_r396592181", "createdAt": "2020-03-23T16:39:16Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/StreamTask.java", "diffHunk": "@@ -260,17 +258,28 @@ protected StreamTask(\n \t\t\t@Nullable TimerService timerService,\n \t\t\tThread.UncaughtExceptionHandler uncaughtExceptionHandler,\n \t\t\tStreamTaskActionExecutor actionExecutor,\n-\t\t\tTaskMailbox mailbox) {\n+\t\t\tTaskMailbox mailbox) throws Exception {\n \n \t\tsuper(environment);\n \n-\t\tthis.timerService = timerService;\n-\t\tthis.uncaughtExceptionHandler = Preconditions.checkNotNull(uncaughtExceptionHandler);\n \t\tthis.configuration = new StreamConfig(getTaskConfiguration());\n \t\tthis.recordWriter = createRecordWriterDelegate(configuration, environment);\n \t\tthis.actionExecutor = Preconditions.checkNotNull(actionExecutor);\n \t\tthis.mailboxProcessor = new MailboxProcessor(this::processInput, mailbox, actionExecutor);\n \t\tthis.asyncExceptionHandler = new StreamTaskAsyncExceptionHandler(environment);\n+\t\tthis.asyncOperationsThreadPool = Executors.newCachedThreadPool(\n+\t\t\tnew ExecutorThreadFactory(\"AsyncOperations\", uncaughtExceptionHandler));\n+\n+\t\tthis.stateBackend = createStateBackend();\n+\t\tthis.checkpointStorage = stateBackend.createCheckpointStorage(getEnvironment().getJobID());\n+\n+\t\t// if the clock is not already set, then assign a default TimeServiceProvider\n+\t\tif (timerService == null) {\n+\t\t\tThreadFactory timerThreadFactory = new DispatcherThreadFactory(TRIGGER_THREAD_GROUP, \"Time Trigger for \" + getName());\n+\t\t\tthis.timerService = new SystemProcessingTimeService(this::handleTimerException, timerThreadFactory);\n+\t\t} else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a1a1264434909e99062ffe146c0222d4ed9d558"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwMTc5Ng==", "bodyText": "If I'm not mistaken, these exceptions were previously thrown from StreamTask.invoke(); and then they weren't wrapped into anything neither by StreamTask nor by Task.\nNow they are thrown from Task.loadAndInstantiateInvokable which can wrap them into FlinkException.\nThis wrapping can break exception-matching logic in Task (e.g. if (t instanceof CancelTaskException) ...).", "url": "https://github.com/apache/flink/pull/11486#discussion_r396601796", "createdAt": "2020-03-23T16:52:28Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/StreamTask.java", "diffHunk": "@@ -260,17 +258,28 @@ protected StreamTask(\n \t\t\t@Nullable TimerService timerService,\n \t\t\tThread.UncaughtExceptionHandler uncaughtExceptionHandler,\n \t\t\tStreamTaskActionExecutor actionExecutor,\n-\t\t\tTaskMailbox mailbox) {\n+\t\t\tTaskMailbox mailbox) throws Exception {\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a1a1264434909e99062ffe146c0222d4ed9d558"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NjM3MDg3", "url": "https://github.com/apache/flink/pull/11486#pullrequestreview-379637087", "createdAt": "2020-03-23T17:08:26Z", "commit": {"oid": "0a1a1264434909e99062ffe146c0222d4ed9d558"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowODoyN1rOF6PViQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowODoyN1rOF6PViQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxMzAwMQ==", "bodyText": "Should we move the appropriate line in Task higher:\nexecutingThread.setContextClassLoader(userCodeClassLoader);\n?\nNow (in master) it's before invoke(); and it looks like it should be moved before\ninvokable = loadAndInstantiateInvokable(userCodeClassLoader, nameOfInvokableClass, env);", "url": "https://github.com/apache/flink/pull/11486#discussion_r396613001", "createdAt": "2020-03-23T17:08:27Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/StreamTask.java", "diffHunk": "@@ -260,17 +258,28 @@ protected StreamTask(\n \t\t\t@Nullable TimerService timerService,\n \t\t\tThread.UncaughtExceptionHandler uncaughtExceptionHandler,\n \t\t\tStreamTaskActionExecutor actionExecutor,\n-\t\t\tTaskMailbox mailbox) {\n+\t\t\tTaskMailbox mailbox) throws Exception {\n \n \t\tsuper(environment);\n \n-\t\tthis.timerService = timerService;\n-\t\tthis.uncaughtExceptionHandler = Preconditions.checkNotNull(uncaughtExceptionHandler);\n \t\tthis.configuration = new StreamConfig(getTaskConfiguration());\n \t\tthis.recordWriter = createRecordWriterDelegate(configuration, environment);\n \t\tthis.actionExecutor = Preconditions.checkNotNull(actionExecutor);\n \t\tthis.mailboxProcessor = new MailboxProcessor(this::processInput, mailbox, actionExecutor);\n \t\tthis.asyncExceptionHandler = new StreamTaskAsyncExceptionHandler(environment);\n+\t\tthis.asyncOperationsThreadPool = Executors.newCachedThreadPool(\n+\t\t\tnew ExecutorThreadFactory(\"AsyncOperations\", uncaughtExceptionHandler));\n+\n+\t\tthis.stateBackend = createStateBackend();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a1a1264434909e99062ffe146c0222d4ed9d558"}, "originalPosition": 86}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a1a1264434909e99062ffe146c0222d4ed9d558", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/0a1a1264434909e99062ffe146c0222d4ed9d558", "committedDate": "2020-03-23T14:39:15Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead."}, "afterCommit": {"oid": "96c328765887f416fce5c49c74094ca6fe0640e2", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/96c328765887f416fce5c49c74094ca6fe0640e2", "committedDate": "2020-03-24T04:46:32Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead.\n\nThis closes #11486."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96c328765887f416fce5c49c74094ca6fe0640e2", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/96c328765887f416fce5c49c74094ca6fe0640e2", "committedDate": "2020-03-24T04:46:32Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead.\n\nThis closes #11486."}, "afterCommit": {"oid": "8fa00239cb575a67dde4f0fa500eab470efe2581", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/8fa00239cb575a67dde4f0fa500eab470efe2581", "committedDate": "2020-03-24T05:58:33Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead.\n\nThis closes #11486."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8fa00239cb575a67dde4f0fa500eab470efe2581", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/8fa00239cb575a67dde4f0fa500eab470efe2581", "committedDate": "2020-03-24T05:58:33Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead.\n\nThis closes #11486."}, "afterCommit": {"oid": "3e6dc74c58a913e0242e127da0e9504e9e0c44d4", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/3e6dc74c58a913e0242e127da0e9504e9e0c44d4", "committedDate": "2020-03-24T07:11:55Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead.\n\nThis closes #11486."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e6dc74c58a913e0242e127da0e9504e9e0c44d4", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/3e6dc74c58a913e0242e127da0e9504e9e0c44d4", "committedDate": "2020-03-24T07:11:55Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead.\n\nThis closes #11486."}, "afterCommit": {"oid": "502f33e71092027ca04a464a213378af173f5fa5", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/502f33e71092027ca04a464a213378af173f5fa5", "committedDate": "2020-03-24T07:53:45Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead.\n\nThis closes #11486."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMTUxMDkx", "url": "https://github.com/apache/flink/pull/11486#pullrequestreview-380151091", "createdAt": "2020-03-24T09:53:50Z", "commit": {"oid": "502f33e71092027ca04a464a213378af173f5fa5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d88662d7b4ba04fde20491e72d18a522d17d8ee", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/9d88662d7b4ba04fde20491e72d18a522d17d8ee", "committedDate": "2020-03-25T02:23:08Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead.\n\nThis closes #11486"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "502f33e71092027ca04a464a213378af173f5fa5", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/502f33e71092027ca04a464a213378af173f5fa5", "committedDate": "2020-03-24T07:53:45Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead.\n\nThis closes #11486."}, "afterCommit": {"oid": "9d88662d7b4ba04fde20491e72d18a522d17d8ee", "author": {"user": {"login": "zhijiangW", "name": "zhijiang"}}, "url": "https://github.com/apache/flink/commit/9d88662d7b4ba04fde20491e72d18a522d17d8ee", "committedDate": "2020-03-25T02:23:08Z", "message": "[FLINK-16712][task] Refactor StreamTask to construct final fields\n\nAt the moment there are four fields initialized in the method of StreamTask#beforeInvoke, such as `stateBackend`, `checkpointStorage`, `timerService`, `asyncOperationsThreadPool`.\n\nIn general it is suggested to use final fields to get known benefits. So we can refactor the StreamTask to initialize these fields in the constructor instead.\n\nThis closes #11486"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2442, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}