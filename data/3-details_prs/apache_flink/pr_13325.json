{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5MzA5MjU1", "number": 13325, "title": "[FLINK-15974][python] Support to use the Python UDF directly in the Python Table API", "bodyText": "What is the purpose of the change\nThis pull request add support to use the Python UDF directly in the Python Table API. E.g. for Python UDF inc, users could use it directly in the Python Table API: tab.select(inc(tab.a)).insert_into(\"sink\")\nBrief change log\n\nAdd call method in UserDefinedFunctionWrapper which will allow to call the user-defined function directly in the Python Table API program\nImprove expressions.call method to support TableFunction in the old planner.\nFix FlinkTypeFactory which doesn't works well with the old Decimal TypeInformation in blink planner.\nUpdate the tests in test_udf.py, test_udtf.py, test_pandas_udf.py to use this feature.\n\nVerifying this change\nThis change is already covered by the updated existing tests test_udf.py, test_pandas_udf.py, etc.*.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes)\nIf yes, how is the feature documented? (Will add documentation in a separate PR)", "createdAt": "2020-09-04T05:32:17Z", "url": "https://github.com/apache/flink/pull/13325", "merged": true, "mergeCommit": {"oid": "bffc61ac7dad8541bde77ee6aed2b72385f420d8"}, "closed": true, "closedAt": "2020-09-04T11:12:43Z", "author": {"login": "dianfu"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFeWOWgH2gAyNDc5MzA5MjU1OjI2YWJmMWVjZjkzNmQwMjMyYzZkNDljMGJkZDRmZTNiZWFlNjI1MmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFielTAFqTQ4MjUzNDMxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "26abf1ecf936d0232c6d49c0bdd4fe3beae6252e", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/26abf1ecf936d0232c6d49c0bdd4fe3beae6252e", "committedDate": "2020-09-04T05:28:17Z", "message": "[FLINK-15974][python] Support to use the Python UDF directly in the Python Table API"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMzg3OTE1", "url": "https://github.com/apache/flink/pull/13325#pullrequestreview-482387915", "createdAt": "2020-09-04T06:23:54Z", "commit": {"oid": "26abf1ecf936d0232c6d49c0bdd4fe3beae6252e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjoyMzo1NFrOHNBHyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNjozOTo1NVrOHNBfPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxMTkxMw==", "bodyText": "Can be replaced by pyflink.util.utils.load_java_class()?", "url": "https://github.com/apache/flink/pull/13325#discussion_r483411913", "createdAt": "2020-09-04T06:23:54Z", "author": {"login": "WeiZhong94"}, "path": "flink-python/pyflink/table/expressions.py", "diffHunk": "@@ -538,9 +538,44 @@ def call(f: Union[str, UserDefinedFunctionWrapper], *args) -> Expression:\n     :param args: parameters of the user-defined function.\n     \"\"\"\n     gateway = get_gateway()\n-    return Expression(gateway.jvm.Expressions.call(\n-        f if isinstance(f, str) else f.java_user_defined_function(),\n-        to_jarray(gateway.jvm.Object, [_get_java_expression(arg) for arg in args])))\n+\n+    if isinstance(f, str):\n+        return Expression(gateway.jvm.Expressions.call(\n+            f, to_jarray(gateway.jvm.Object, [_get_java_expression(arg) for arg in args])))\n+\n+    def get_function_definition(f):\n+        if isinstance(f, UserDefinedTableFunctionWrapper):\n+            \"\"\"\n+            TypeInference was not supported for TableFunction in the old planner. Use\n+            TableFunctionDefinition to work around this issue.\n+            \"\"\"\n+            j_result_types = to_jarray(gateway.jvm.TypeInformation,\n+                                       [_to_java_type(i) for i in f._result_types])\n+            j_result_type = gateway.jvm.org.apache.flink.api.java.typeutils.RowTypeInfo(\n+                j_result_types)\n+            return gateway.jvm.org.apache.flink.table.functions.TableFunctionDefinition(\n+                'f', f.java_user_defined_function(), j_result_type)\n+        else:\n+            return f.java_user_defined_function()\n+\n+    expressions_clz = gateway.jvm.Class \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26abf1ecf936d0232c6d49c0bdd4fe3beae6252e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQxNzkxNg==", "bodyText": "add a type hint?", "url": "https://github.com/apache/flink/pull/13325#discussion_r483417916", "createdAt": "2020-09-04T06:39:55Z", "author": {"login": "WeiZhong94"}, "path": "flink-python/pyflink/table/udf.py", "diffHunk": "@@ -184,6 +184,10 @@ def __init__(self, func, input_types, deterministic=None, name=None):\n         self._deterministic = deterministic if deterministic is not None else (\n             func.is_deterministic() if isinstance(func, UserDefinedFunction) else True)\n \n+    def __call__(self, *args):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26abf1ecf936d0232c6d49c0bdd4fe3beae6252e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f65076badbf59b1ded4e7778a0349d489138e7f", "author": {"user": {"login": "dianfu", "name": "Dian Fu"}}, "url": "https://github.com/apache/flink/commit/6f65076badbf59b1ded4e7778a0349d489138e7f", "committedDate": "2020-09-04T06:47:48Z", "message": "address review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNTM0MzE4", "url": "https://github.com/apache/flink/pull/13325#pullrequestreview-482534318", "createdAt": "2020-09-04T10:17:02Z", "commit": {"oid": "6f65076badbf59b1ded4e7778a0349d489138e7f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4444, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}