{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NDY5MjYy", "number": 13723, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzowODozNFrOEwPPhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzoxNjoyOVrOEwPeLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MDE2ODM3OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzowODozNFrOHlq7Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzowODozNFrOHlq7Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2MjY5MQ==", "bodyText": "nit: let others know", "url": "https://github.com/apache/flink/pull/13723#discussion_r509262691", "createdAt": "2020-10-21T13:08:34Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactory.java", "diffHunk": "@@ -75,12 +73,24 @@ NettyPartitionRequestClient createPartitionRequestClient(ConnectionID connection\n \t\t\t\treturn new CompletableFuture<>();\n \t\t\t});\n \t\t\tif (isTheFirstOne.get()) {\n-\t\t\t\tcompleteFromCallable(clientFuture, () -> connectWithRetries(connectionId));\n+\t\t\t\ttry {\n+\t\t\t\t\tclientFuture.complete(connectWithRetries(connectionId));\n+\t\t\t\t} catch (InterruptedException e) {\n+\t\t\t\t\tclientFuture.complete(null); // let know others waiting that they should retry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18772dddf0714c8ee47354a40d70f70ab9ac6387"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MDE4MTk5OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzoxMTozM1rOHlrDqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwODoyMDowMlrOHmWDpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NDgwOQ==", "bodyText": "Sorry for the stupid question, but is this actually using the port for network traffic or is it just a dummy value?\nIf it's actually using, I'd propose to use port 0 (random free port).", "url": "https://github.com/apache/flink/pull/13723#discussion_r509264809", "createdAt": "2020-10-21T13:11:33Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "diffHunk": "@@ -58,6 +59,38 @@\n \n \tprivate static final int SERVER_PORT = NetUtils.getAvailablePort();\n \n+\t@Test\n+\tpublic void testInterruptsNotCached() throws Exception {\n+\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(InetAddress.getLocalHost(), 8080), 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18772dddf0714c8ee47354a40d70f70ab9ac6387"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMxNTAzNg==", "bodyText": "It's a port netty will to connect to. So it doesn't matter which port to use (as long we aren't interested in any results).\nThis port is also used throughout the class.", "url": "https://github.com/apache/flink/pull/13723#discussion_r509315036", "createdAt": "2020-10-21T14:03:26Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "diffHunk": "@@ -58,6 +59,38 @@\n \n \tprivate static final int SERVER_PORT = NetUtils.getAvailablePort();\n \n+\t@Test\n+\tpublic void testInterruptsNotCached() throws Exception {\n+\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(InetAddress.getLocalHost(), 8080), 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NDgwOQ=="}, "originalCommit": {"oid": "18772dddf0714c8ee47354a40d70f70ab9ac6387"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwOTk3Nw==", "bodyText": "I'm more worried that the test will fail if something else is running on that port.", "url": "https://github.com/apache/flink/pull/13723#discussion_r509609977", "createdAt": "2020-10-21T19:30:31Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "diffHunk": "@@ -58,6 +59,38 @@\n \n \tprivate static final int SERVER_PORT = NetUtils.getAvailablePort();\n \n+\t@Test\n+\tpublic void testInterruptsNotCached() throws Exception {\n+\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(InetAddress.getLocalHost(), 8080), 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NDgwOQ=="}, "originalCommit": {"oid": "18772dddf0714c8ee47354a40d70f70ab9ac6387"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYxNjU3MQ==", "bodyText": "The request will likely fail (usually nothing is running on 8080), but the result is ignored, so it won't affect the test.", "url": "https://github.com/apache/flink/pull/13723#discussion_r509616571", "createdAt": "2020-10-21T19:38:58Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "diffHunk": "@@ -58,6 +59,38 @@\n \n \tprivate static final int SERVER_PORT = NetUtils.getAvailablePort();\n \n+\t@Test\n+\tpublic void testInterruptsNotCached() throws Exception {\n+\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(InetAddress.getLocalHost(), 8080), 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NDgwOQ=="}, "originalCommit": {"oid": "18772dddf0714c8ee47354a40d70f70ab9ac6387"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTk2OTMxOA==", "bodyText": "Okay if the test is not affected by that I'll merge.", "url": "https://github.com/apache/flink/pull/13723#discussion_r509969318", "createdAt": "2020-10-22T08:20:02Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/PartitionRequestClientFactoryTest.java", "diffHunk": "@@ -58,6 +59,38 @@\n \n \tprivate static final int SERVER_PORT = NetUtils.getAvailablePort();\n \n+\t@Test\n+\tpublic void testInterruptsNotCached() throws Exception {\n+\t\tConnectionID connectionId = new ConnectionID(new InetSocketAddress(InetAddress.getLocalHost(), 8080), 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2NDgwOQ=="}, "originalCommit": {"oid": "18772dddf0714c8ee47354a40d70f70ab9ac6387"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MDIwNTg4OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/NeverCompletingChannelFuture.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMzoxNjoyOVrOHlrSrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDowNDo0MlrOHluL2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2ODY1Mw==", "bodyText": "Could we use CompleteChannelFuture as a base to avoid all the no-ops?", "url": "https://github.com/apache/flink/pull/13723#discussion_r509268653", "createdAt": "2020-10-21T13:16:29Z", "author": {"login": "AHeise"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/NeverCompletingChannelFuture.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.io.network.netty;\n+\n+import org.apache.flink.shaded.netty4.io.netty.channel.Channel;\n+import org.apache.flink.shaded.netty4.io.netty.channel.ChannelFuture;\n+import org.apache.flink.shaded.netty4.io.netty.util.concurrent.Future;\n+import org.apache.flink.shaded.netty4.io.netty.util.concurrent.GenericFutureListener;\n+\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+@SuppressWarnings({\"InfiniteLoopStatement\", \"BusyWait\"})\n+class NeverCompletingChannelFuture implements ChannelFuture {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18772dddf0714c8ee47354a40d70f70ab9ac6387"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMxNjA1OA==", "bodyText": "It requires a non-null channel and I wanted to avoid creating a channel unnecessarily. I also couldn't find any suitable channel implementation.", "url": "https://github.com/apache/flink/pull/13723#discussion_r509316058", "createdAt": "2020-10-21T14:04:42Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/netty/NeverCompletingChannelFuture.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.runtime.io.network.netty;\n+\n+import org.apache.flink.shaded.netty4.io.netty.channel.Channel;\n+import org.apache.flink.shaded.netty4.io.netty.channel.ChannelFuture;\n+import org.apache.flink.shaded.netty4.io.netty.util.concurrent.Future;\n+import org.apache.flink.shaded.netty4.io.netty.util.concurrent.GenericFutureListener;\n+\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+@SuppressWarnings({\"InfiniteLoopStatement\", \"BusyWait\"})\n+class NeverCompletingChannelFuture implements ChannelFuture {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI2ODY1Mw=="}, "originalCommit": {"oid": "18772dddf0714c8ee47354a40d70f70ab9ac6387"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 59, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}