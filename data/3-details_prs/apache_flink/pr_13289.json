{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NDAwNTg0", "number": 13289, "title": "[FLINK-18548][table-planner] support flexible syntax for Temporal table join", "bodyText": "What is the purpose of the change\n\nThis pull request support flexible syntax for Temporal table join.\nThis PR also can support computed column on temporal table which is a project on TableScan.\n\nBrief change log\n\nOverride convertFrom() in SqlToRelConverter to support flexible LogicalSnapshot\n\nVerifying this change\nAdd unit tests and ITCase to cover.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): ( no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-08-31T16:24:43Z", "url": "https://github.com/apache/flink/pull/13289", "merged": true, "mergeCommit": {"oid": "2975d6cf1fbb16656b1afd3e9f88e8529d621e3e"}, "closed": true, "closedAt": "2020-09-23T02:46:25Z", "author": {"login": "leonardBang"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdE6mcYgFqTQ4MDczMzQ1Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLXSVtgBqjM3OTMwNDM2MTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNzMzNDUy", "url": "https://github.com/apache/flink/pull/13289#pullrequestreview-480733452", "createdAt": "2020-09-02T11:38:19Z", "commit": {"oid": "78e195f2120b88bff90da918c1a5a0ae5327285f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMTozODoxOVrOHLrGRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMTo0OToyMVrOHLrcpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAwMjUwMA==", "bodyText": "val relBuilder: RelBuilder to eliminate the IDEA warnings.", "url": "https://github.com/apache/flink/pull/13289#discussion_r482002500", "createdAt": "2020-09-02T11:38:19Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/calcite/FlinkPlannerImpl.scala", "diffHunk": "@@ -163,7 +163,35 @@ class FlinkPlannerImpl(\n         sqlValidator.getCatalogReader.unwrap(classOf[CalciteCatalogReader]),\n         cluster,\n         convertletTable,\n-        sqlToRelConverterConfig)\n+        sqlToRelConverterConfig) {\n+        // override convertFrom() to support flexible Temporal Table Syntax,\n+        // this can be revert once FLINK-16579(Upgrade Calcite version to 1.23) resolved.\n+        val relBuilder = config.getRelBuilderFactory.create(cluster, null)\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e195f2120b88bff90da918c1a5a0ae5327285f"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAwNzYxMw==", "bodyText": "You can use junit Assume.assumeTrue() instead.\nPS, can we just create another table with computed column there and add test cases for this patch ? It is not necessary to add another test param which makes the test looks verbose and complex.", "url": "https://github.com/apache/flink/pull/13289#discussion_r482007613", "createdAt": "2020-09-02T11:48:08Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/runtime/batch/sql/join/LookupJoinITCase.scala", "diffHunk": "@@ -208,15 +247,19 @@ class LookupJoinITCase(legacyTableSource: Boolean, isAsyncMode: Boolean) extends\n \n   @Test\n   def testLeftJoinTemporalTable(): Unit = {\n-    val sql = s\"SELECT T.id, T.len, D.name, D.age FROM T LEFT JOIN userTable \" +\n+    if (legacyTableSource) {\n+      //Computed column do not support in legacyTableSource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e195f2120b88bff90da918c1a5a0ae5327285f"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAwODIzMQ==", "bodyText": "No need to add another param useComputedColumn i think. Just add new tables and new cases you want to test.", "url": "https://github.com/apache/flink/pull/13289#discussion_r482008231", "createdAt": "2020-09-02T11:49:21Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/stream/sql/join/LookupJoinTest.scala", "diffHunk": "@@ -489,9 +493,12 @@ class LookupJoinTest(legacyTableSource: Boolean) extends TableTestBase with Seri\n }\n \n object LookupJoinTest {\n-  @Parameterized.Parameters(name = \"LegacyTableSource={0}\")\n+  @Parameterized.Parameters(name = \"LegacyTableSource={0}, useComputedColumn={1}\")\n   def parameters(): JCollection[Array[Object]] = {\n-    Seq[Array[AnyRef]](Array(JBoolean.TRUE), Array(JBoolean.FALSE))\n+    Seq[Array[AnyRef]](", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e195f2120b88bff90da918c1a5a0ae5327285f"}, "originalPosition": 50}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78e195f2120b88bff90da918c1a5a0ae5327285f", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/78e195f2120b88bff90da918c1a5a0ae5327285f", "committedDate": "2020-09-01T01:17:04Z", "message": "scala checkstyle"}, "afterCommit": {"oid": "8788045dfd7023777299e2a4b514711bb4018c98", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/8788045dfd7023777299e2a4b514711bb4018c98", "committedDate": "2020-09-09T06:50:31Z", "message": "[FLINK-18548][table-planner] support flexible syntax for Temporal table join"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNTI1ODY5", "url": "https://github.com/apache/flink/pull/13289#pullrequestreview-492525869", "createdAt": "2020-09-21T12:01:11Z", "commit": {"oid": "8788045dfd7023777299e2a4b514711bb4018c98"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTc4MjM0", "url": "https://github.com/apache/flink/pull/13289#pullrequestreview-493178234", "createdAt": "2020-09-22T07:11:22Z", "commit": {"oid": "8788045dfd7023777299e2a4b514711bb4018c98"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzoxMToyMlrOHVs2_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzoxMToyMlrOHVs2_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUxNzExNw==", "bodyText": "Create a JIRA issue to remove this overriding once we bump up Calcite version. And add comment above this method with the JIRA id.", "url": "https://github.com/apache/flink/pull/13289#discussion_r492517117", "createdAt": "2020-09-22T07:11:22Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/main/scala/org/apache/flink/table/planner/calcite/FlinkPlannerImpl.scala", "diffHunk": "@@ -163,7 +163,35 @@ class FlinkPlannerImpl(\n         sqlValidator.getCatalogReader.unwrap(classOf[CalciteCatalogReader]),\n         cluster,\n         convertletTable,\n-        sqlToRelConverterConfig)\n+        sqlToRelConverterConfig) {\n+        // override convertFrom() to support flexible Temporal Table Syntax,\n+        // this can be revert once FLINK-16579(Upgrade Calcite version to 1.23) resolved.\n+        val relBuilder = config.getRelBuilderFactory.create(cluster, null)\n+\n+        override def convertFrom(bb: SqlToRelConverter#Blackboard, from: SqlNode): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8788045dfd7023777299e2a4b514711bb4018c98"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjYyOTA2", "url": "https://github.com/apache/flink/pull/13289#pullrequestreview-493262906", "createdAt": "2020-09-22T09:07:24Z", "commit": {"oid": "83419c50b7ec6d6a966cc7a325fb11f4263b57dc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef462e3d6a961f1d353a84e8ae55982c97c67a8e", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/ef462e3d6a961f1d353a84e8ae55982c97c67a8e", "committedDate": "2020-09-22T12:37:30Z", "message": "[FLINK-18548][table-planner] support flexible syntax for Temporal table join"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83419c50b7ec6d6a966cc7a325fb11f4263b57dc", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/83419c50b7ec6d6a966cc7a325fb11f4263b57dc", "committedDate": "2020-09-22T08:59:15Z", "message": "add TODO for workaround"}, "afterCommit": {"oid": "ef462e3d6a961f1d353a84e8ae55982c97c67a8e", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/ef462e3d6a961f1d353a84e8ae55982c97c67a8e", "committedDate": "2020-09-22T12:37:30Z", "message": "[FLINK-18548][table-planner] support flexible syntax for Temporal table join"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4300, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}