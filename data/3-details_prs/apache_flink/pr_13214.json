{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNDkwNjA2", "number": 13214, "title": "[FLINK-18938][tableSQL/API] Throw better exception message for quering sink-only connector", "bodyText": "What is the purpose of the change\n1.Throw better exception message for quering sink-only(source-only) connector.\n2.Add tips(support as source or sink) following the identifier when 1 heppens.\nBrief change log\n\nThrow better exception message for quering sink-only(source-only) connector.\nFor example, when we are quering a sink-only connector ,if we have a dependency jar in the classpath ,return the following excception message:\nbefore:\nCaused by: org.apache.flink.table.api.ValidationException: Could not find any factory for identifier 'elasticsearch-7' that implements 'org.apache.flink.table.factories.DynamicTableSourceFactory' in the classpath.\nnow:\nCaused by: org.apache.flink.table.api.ValidationException: The connector named 'elasticsearch-7' is only supported as sink,can n't be used as a source.\nAdd tips follow the identifier when 1 heppens.\nbefore:\nAvailable factory identifiers are:\ndatagen\nnow:\nAvailable factory identifiers are: \ndatagen (DynamicTableSourceFactory,DynamicTableSinkFactory)\nelasticsearch-7 (DynamicTableSinkFactory)\ntest-connector (DynamicTableSourceFactory)\n\nVerifying this change\nThis change added tests and can be verified by  running unit test :\ntestAvailableFactoryTipsNoDependencyJarForFormat()\ntestAvailableFactoryTipsDependencyJarForFormat()\ntestAvailableFactoryTipsNoDependencyJarForConnector()\ntestAvailableFactoryTipsDependencyJarForConnector()\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): ( no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): ( no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): (no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? ( no)", "createdAt": "2020-08-21T08:22:58Z", "url": "https://github.com/apache/flink/pull/13214", "merged": true, "mergeCommit": {"oid": "ea88795c96585e1ae5a195b9e633d8565c1a7f5d"}, "closed": true, "closedAt": "2020-11-10T02:57:26Z", "author": {"login": "pyscala"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdIqCawgBqjM3NjExNjA4MzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdazb2vgFqTUyNjE3OTM0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f52a874614a324f9aa5f830ddd1978700408d473", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/f52a874614a324f9aa5f830ddd1978700408d473", "committedDate": "2020-09-11T07:09:05Z", "message": "add a ITcase"}, "afterCommit": {"oid": "aa78f74d8efbf509e2d9247d43cd68ff8e9db0b0", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/aa78f74d8efbf509e2d9247d43cd68ff8e9db0b0", "committedDate": "2020-09-10T02:46:33Z", "message": "Fix checkstyle error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNTQ0MTYx", "url": "https://github.com/apache/flink/pull/13214#pullrequestreview-490544161", "createdAt": "2020-09-17T12:34:18Z", "commit": {"oid": "9058d2cfe2eaa7811c85232d50e610b5af38570b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjozNDoxOFrOHTf3Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjozNDoxOFrOHTf3Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIwNzA2Ng==", "bodyText": "Remove all the unnecessary comments.", "url": "https://github.com/apache/flink/pull/13214#discussion_r490207066", "createdAt": "2020-09-17T12:34:18Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-common/src/test/java/org/apache/flink/table/factories/TestFormatDeserializationOnlyFactory.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.table.factories;\n+\n+import org.apache.flink.api.common.serialization.DeserializationSchema;\n+import org.apache.flink.configuration.ConfigOption;\n+import org.apache.flink.configuration.ReadableConfig;\n+import org.apache.flink.table.connector.format.DecodingFormat;\n+import org.apache.flink.table.data.RowData;\n+\n+import java.util.Collections;\n+import java.util.Set;\n+\n+/**\n+ * Tests implementations for  {@link DeserializationFormatFactory}.\n+ */\n+public class TestFormatDeserializationOnlyFactory implements DeserializationFormatFactory {\n+\n+\tpublic static final String IDENTIFIER = \"test-format-deserialization-only\";\n+\n+\t/**\n+\t * Creates a format from the given context and format options.\n+\t *\n+\t * <p>The format options have been projected to top-level options (e.g. from {@code key.format.ignore-errors}\n+\t * to {@code format.ignore-errors}).\n+\t *\n+\t * @param context\n+\t * @param formatOptions\n+\t */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9058d2cfe2eaa7811c85232d50e610b5af38570b"}, "originalPosition": 45}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ecb8f70a2565a6100d8f1c564fa17fdc96bb0fe", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/3ecb8f70a2565a6100d8f1c564fa17fdc96bb0fe", "committedDate": "2020-09-29T09:33:28Z", "message": "adding a new method <T extends Factory> OptionalFailure<T> discoverOptionalFactory\nand using this method to check whether the connector/format is avaible and throw better exception in getDynamicTableFactory and discoverOptionalFormatFactory."}, "afterCommit": {"oid": "86fd7ea0db4fc5c6e62f2aa259592b510677c874", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/86fd7ea0db4fc5c6e62f2aa259592b510677c874", "committedDate": "2020-10-26T12:16:12Z", "message": "wrap the pretty exception message in getDynamicTableFactory"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86fd7ea0db4fc5c6e62f2aa259592b510677c874", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/86fd7ea0db4fc5c6e62f2aa259592b510677c874", "committedDate": "2020-10-26T12:16:12Z", "message": "wrap the pretty exception message in getDynamicTableFactory"}, "afterCommit": {"oid": "985c2d40aec3e20a402998b16d7eaf8d73ad9738", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/985c2d40aec3e20a402998b16d7eaf8d73ad9738", "committedDate": "2020-10-27T02:31:03Z", "message": "[FLINK-18938][tableSQL/API] Throw better exception message for quering sink-only connector"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e49c5246de95b3ecb6c7490440b06b6f6e602e8e", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/e49c5246de95b3ecb6c7490440b06b6f6e602e8e", "committedDate": "2020-11-09T11:52:14Z", "message": "[FLINK-18938][table-api] Throw better exception message for querying sink only or source only connector\n\nThis closes #13214"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "985c2d40aec3e20a402998b16d7eaf8d73ad9738", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/985c2d40aec3e20a402998b16d7eaf8d73ad9738", "committedDate": "2020-10-27T02:31:03Z", "message": "[FLINK-18938][tableSQL/API] Throw better exception message for quering sink-only connector"}, "afterCommit": {"oid": "e49c5246de95b3ecb6c7490440b06b6f6e602e8e", "author": {"user": {"login": "pyscala", "name": "fangliang"}}, "url": "https://github.com/apache/flink/commit/e49c5246de95b3ecb6c7490440b06b6f6e602e8e", "committedDate": "2020-11-09T11:52:14Z", "message": "[FLINK-18938][table-api] Throw better exception message for querying sink only or source only connector\n\nThis closes #13214"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MTc5MzQz", "url": "https://github.com/apache/flink/pull/13214#pullrequestreview-526179343", "createdAt": "2020-11-09T11:54:51Z", "commit": {"oid": "e49c5246de95b3ecb6c7490440b06b6f6e602e8e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4679, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}