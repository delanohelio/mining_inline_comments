{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMDU0NDAw", "number": 12609, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo0NDozMVrOEEsINA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo1MDoyMVrOEEsU4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzUyNzU2OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/hive/hive_streaming.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo0NDozMVrOGid5jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo0NDozMVrOGid5jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5NDYzOQ==", "bodyText": "I think we don't need say \"starting from\", users can look docs.", "url": "https://github.com/apache/flink/pull/12609#discussion_r438794639", "createdAt": "2020-06-11T13:44:31Z", "author": {"login": "JingsongLi"}, "path": "docs/dev/table/hive/hive_streaming.md", "diffHunk": "@@ -163,4 +163,33 @@ SELECT * FROM hive_table /*+ OPTIONS('streaming-source.enable'='true', 'streamin\n \n ## Hive Table As Temporal Tables\n \n-TODO\n+Starting from Flink 1.11.0, you can use a Hive table as temporal table and join streaming data with it. Please follow", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c109ae1c7de41fbee20707324bae19382261f4e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzU0MDA0OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/hive/hive_streaming.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo0NjozNVrOGieBHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo0NjozNVrOGieBHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5NjU3Mg==", "bodyText": "When performing the join can be another line", "url": "https://github.com/apache/flink/pull/12609#discussion_r438796572", "createdAt": "2020-06-11T13:46:35Z", "author": {"login": "JingsongLi"}, "path": "docs/dev/table/hive/hive_streaming.md", "diffHunk": "@@ -163,4 +163,33 @@ SELECT * FROM hive_table /*+ OPTIONS('streaming-source.enable'='true', 'streamin\n \n ## Hive Table As Temporal Tables\n \n-TODO\n+Starting from Flink 1.11.0, you can use a Hive table as temporal table and join streaming data with it. Please follow\n+the [example]({{ site.baseurl }}/dev/table/streaming/temporal_tables.html#temporal-table) to find out how to join a\n+temporal table. When performing the join, the Hive table will be cached in TM memory and each record from the stream", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c109ae1c7de41fbee20707324bae19382261f4e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzU1MjU0OnYy", "diffSide": "RIGHT", "path": "docs/dev/table/hive/hive_streaming.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo0OTowMFrOGieJBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo0OTowMFrOGieJBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5ODU5OA==", "bodyText": "TM memory / slot > Hive table memory, you can explain this.", "url": "https://github.com/apache/flink/pull/12609#discussion_r438798598", "createdAt": "2020-06-11T13:49:00Z", "author": {"login": "JingsongLi"}, "path": "docs/dev/table/hive/hive_streaming.md", "diffHunk": "@@ -163,4 +163,33 @@ SELECT * FROM hive_table /*+ OPTIONS('streaming-source.enable'='true', 'streamin\n \n ## Hive Table As Temporal Tables\n \n-TODO\n+Starting from Flink 1.11.0, you can use a Hive table as temporal table and join streaming data with it. Please follow\n+the [example]({{ site.baseurl }}/dev/table/streaming/temporal_tables.html#temporal-table) to find out how to join a\n+temporal table. When performing the join, the Hive table will be cached in TM memory and each record from the stream\n+is looked up in the Hive table to decide whether a match is found. You don't need any extra settings to use a Hive table\n+as temporal table. But optionally, you can configure the TTL of the Hive table cache with the following\n+property. After the cache expires, the Hive table will be scanned again to load the latest data.\n+\n+<table class=\"table table-bordered\">\n+  <thead>\n+    <tr>\n+        <th class=\"text-left\" style=\"width: 20%\">Key</th>\n+        <th class=\"text-left\" style=\"width: 15%\">Default</th>\n+        <th class=\"text-left\" style=\"width: 10%\">Type</th>\n+        <th class=\"text-left\" style=\"width: 55%\">Description</th>\n+    </tr>\n+  </thead>\n+  <tbody>\n+    <tr>\n+        <td><h5>lookup.join.cache.ttl</h5></td>\n+        <td style=\"word-wrap: break-word;\">60 min</td>\n+        <td>Duration</td>\n+        <td>The cache TTL (e.g. 10min) for the build table in lookup join. By default the TTL is 60 minutes.</td>\n+    </tr>\n+  </tbody>\n+</table>\n+\n+**Note**:\n+1. You need to make sure the Hive table can fit into TM memory since the whole table will be cached.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c109ae1c7de41fbee20707324bae19382261f4e"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzU2MDAzOnYy", "diffSide": "RIGHT", "path": "docs/dev/table/hive/hive_streaming.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo1MDoyMVrOGieN_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNzoxMDoyMFrOGi5eJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5OTg2OA==", "bodyText": "You can add a note to explain, we will read all data from all partitions, we can not read latest partition.", "url": "https://github.com/apache/flink/pull/12609#discussion_r438799868", "createdAt": "2020-06-11T13:50:21Z", "author": {"login": "JingsongLi"}, "path": "docs/dev/table/hive/hive_streaming.md", "diffHunk": "@@ -163,4 +163,33 @@ SELECT * FROM hive_table /*+ OPTIONS('streaming-source.enable'='true', 'streamin\n \n ## Hive Table As Temporal Tables\n \n-TODO\n+Starting from Flink 1.11.0, you can use a Hive table as temporal table and join streaming data with it. Please follow\n+the [example]({{ site.baseurl }}/dev/table/streaming/temporal_tables.html#temporal-table) to find out how to join a\n+temporal table. When performing the join, the Hive table will be cached in TM memory and each record from the stream\n+is looked up in the Hive table to decide whether a match is found. You don't need any extra settings to use a Hive table\n+as temporal table. But optionally, you can configure the TTL of the Hive table cache with the following\n+property. After the cache expires, the Hive table will be scanned again to load the latest data.\n+\n+<table class=\"table table-bordered\">\n+  <thead>\n+    <tr>\n+        <th class=\"text-left\" style=\"width: 20%\">Key</th>\n+        <th class=\"text-left\" style=\"width: 15%\">Default</th>\n+        <th class=\"text-left\" style=\"width: 10%\">Type</th>\n+        <th class=\"text-left\" style=\"width: 55%\">Description</th>\n+    </tr>\n+  </thead>\n+  <tbody>\n+    <tr>\n+        <td><h5>lookup.join.cache.ttl</h5></td>\n+        <td style=\"word-wrap: break-word;\">60 min</td>\n+        <td>Duration</td>\n+        <td>The cache TTL (e.g. 10min) for the build table in lookup join. By default the TTL is 60 minutes.</td>\n+    </tr>\n+  </tbody>\n+</table>\n+\n+**Note**:\n+1. You need to make sure the Hive table can fit into TM memory since the whole table will be cached.\n+2. You should set a relatively large value for `lookup.join.cache.ttl`. You'll probably have performance issue if\n+your Hive table needs to be updated and reloaded too frequently.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c109ae1c7de41fbee20707324bae19382261f4e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE4MzYwNg==", "bodyText": "I have mentioned that the whole table will be cached. And the temporal table can be either partitioned or non-partitioned. It seems to me that talking about new/old partitions here might bring more confusions.", "url": "https://github.com/apache/flink/pull/12609#discussion_r439183606", "createdAt": "2020-06-12T03:11:20Z", "author": {"login": "lirui-apache"}, "path": "docs/dev/table/hive/hive_streaming.md", "diffHunk": "@@ -163,4 +163,33 @@ SELECT * FROM hive_table /*+ OPTIONS('streaming-source.enable'='true', 'streamin\n \n ## Hive Table As Temporal Tables\n \n-TODO\n+Starting from Flink 1.11.0, you can use a Hive table as temporal table and join streaming data with it. Please follow\n+the [example]({{ site.baseurl }}/dev/table/streaming/temporal_tables.html#temporal-table) to find out how to join a\n+temporal table. When performing the join, the Hive table will be cached in TM memory and each record from the stream\n+is looked up in the Hive table to decide whether a match is found. You don't need any extra settings to use a Hive table\n+as temporal table. But optionally, you can configure the TTL of the Hive table cache with the following\n+property. After the cache expires, the Hive table will be scanned again to load the latest data.\n+\n+<table class=\"table table-bordered\">\n+  <thead>\n+    <tr>\n+        <th class=\"text-left\" style=\"width: 20%\">Key</th>\n+        <th class=\"text-left\" style=\"width: 15%\">Default</th>\n+        <th class=\"text-left\" style=\"width: 10%\">Type</th>\n+        <th class=\"text-left\" style=\"width: 55%\">Description</th>\n+    </tr>\n+  </thead>\n+  <tbody>\n+    <tr>\n+        <td><h5>lookup.join.cache.ttl</h5></td>\n+        <td style=\"word-wrap: break-word;\">60 min</td>\n+        <td>Duration</td>\n+        <td>The cache TTL (e.g. 10min) for the build table in lookup join. By default the TTL is 60 minutes.</td>\n+    </tr>\n+  </tbody>\n+</table>\n+\n+**Note**:\n+1. You need to make sure the Hive table can fit into TM memory since the whole table will be cached.\n+2. You should set a relatively large value for `lookup.join.cache.ttl`. You'll probably have performance issue if\n+your Hive table needs to be updated and reloaded too frequently.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5OTg2OA=="}, "originalCommit": {"oid": "9c109ae1c7de41fbee20707324bae19382261f4e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI0NjM3NA==", "bodyText": "I have added some comments about this anyway, but w/o too many details.", "url": "https://github.com/apache/flink/pull/12609#discussion_r439246374", "createdAt": "2020-06-12T07:10:20Z", "author": {"login": "lirui-apache"}, "path": "docs/dev/table/hive/hive_streaming.md", "diffHunk": "@@ -163,4 +163,33 @@ SELECT * FROM hive_table /*+ OPTIONS('streaming-source.enable'='true', 'streamin\n \n ## Hive Table As Temporal Tables\n \n-TODO\n+Starting from Flink 1.11.0, you can use a Hive table as temporal table and join streaming data with it. Please follow\n+the [example]({{ site.baseurl }}/dev/table/streaming/temporal_tables.html#temporal-table) to find out how to join a\n+temporal table. When performing the join, the Hive table will be cached in TM memory and each record from the stream\n+is looked up in the Hive table to decide whether a match is found. You don't need any extra settings to use a Hive table\n+as temporal table. But optionally, you can configure the TTL of the Hive table cache with the following\n+property. After the cache expires, the Hive table will be scanned again to load the latest data.\n+\n+<table class=\"table table-bordered\">\n+  <thead>\n+    <tr>\n+        <th class=\"text-left\" style=\"width: 20%\">Key</th>\n+        <th class=\"text-left\" style=\"width: 15%\">Default</th>\n+        <th class=\"text-left\" style=\"width: 10%\">Type</th>\n+        <th class=\"text-left\" style=\"width: 55%\">Description</th>\n+    </tr>\n+  </thead>\n+  <tbody>\n+    <tr>\n+        <td><h5>lookup.join.cache.ttl</h5></td>\n+        <td style=\"word-wrap: break-word;\">60 min</td>\n+        <td>Duration</td>\n+        <td>The cache TTL (e.g. 10min) for the build table in lookup join. By default the TTL is 60 minutes.</td>\n+    </tr>\n+  </tbody>\n+</table>\n+\n+**Note**:\n+1. You need to make sure the Hive table can fit into TM memory since the whole table will be cached.\n+2. You should set a relatively large value for `lookup.join.cache.ttl`. You'll probably have performance issue if\n+your Hive table needs to be updated and reloaded too frequently.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5OTg2OA=="}, "originalCommit": {"oid": "9c109ae1c7de41fbee20707324bae19382261f4e"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4388, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}