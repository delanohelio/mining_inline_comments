{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMzQ3NDMy", "number": 12284, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzowODo0MlrOD_YPsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoxMToxMlrOD_YSmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Nzg0MTEzOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/java/org/apache/flink/table/planner/factories/TestValuesTableFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzowODo0M1rOGaAmKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNTo0MzoyNlrOGaE4ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkyNTkzMQ==", "bodyText": "Should we move the check to the constructor ?", "url": "https://github.com/apache/flink/pull/12284#discussion_r429925931", "createdAt": "2020-05-25T13:08:43Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner-blink/src/test/java/org/apache/flink/table/planner/factories/TestValuesTableFactory.java", "diffHunk": "@@ -633,8 +648,11 @@ public SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n \t\t\t\t\tsinkFunction = new KeyedUpsertingSinkFunction(\n \t\t\t\t\t\ttableName,\n \t\t\t\t\t\tconverter,\n-\t\t\t\t\t\tkeyIndices);\n+\t\t\t\t\t\tkeyIndices,\n+\t\t\t\t\t\texpectedNum);\n \t\t\t\t} else {\n+\t\t\t\t\tcheckArgument(expectedNum == -1,\n+\t\t\t\t\t\t\"Retracting Sink doesn't support '\" + SINK_EXPECTED_MESSAGES_NUM.key() + \"' yet.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "760f994e14c290dd4c31b67e15751862d6ee520f"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk5NjE5NQ==", "bodyText": "I think there is not much difference. It's more easier to check the expectedNum in the getSinkRuntimeProvider, because we have to check runtimeSink and primaryKey.", "url": "https://github.com/apache/flink/pull/12284#discussion_r429996195", "createdAt": "2020-05-25T15:43:26Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/test/java/org/apache/flink/table/planner/factories/TestValuesTableFactory.java", "diffHunk": "@@ -633,8 +648,11 @@ public SinkRuntimeProvider getSinkRuntimeProvider(Context context) {\n \t\t\t\t\tsinkFunction = new KeyedUpsertingSinkFunction(\n \t\t\t\t\t\ttableName,\n \t\t\t\t\t\tconverter,\n-\t\t\t\t\t\tkeyIndices);\n+\t\t\t\t\t\tkeyIndices,\n+\t\t\t\t\t\texpectedNum);\n \t\t\t\t} else {\n+\t\t\t\t\tcheckArgument(expectedNum == -1,\n+\t\t\t\t\t\t\"Retracting Sink doesn't support '\" + SINK_EXPECTED_MESSAGES_NUM.key() + \"' yet.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkyNTkzMQ=="}, "originalCommit": {"oid": "760f994e14c290dd4c31b67e15751862d6ee520f"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Nzg0NDg0OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/java/org/apache/flink/table/planner/factories/TestValuesRuntimeFunctions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzowOTo1MlrOGaAoSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzowOTo1MlrOGaAoSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkyNjQ3Mg==", "bodyText": ">= or = ?", "url": "https://github.com/apache/flink/pull/12284#discussion_r429926472", "createdAt": "2020-05-25T13:09:52Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner-blink/src/test/java/org/apache/flink/table/planner/factories/TestValuesRuntimeFunctions.java", "diffHunk": "@@ -247,6 +265,12 @@ public void invoke(RowData value, Context context) throws Exception {\n \t\t\t\t\t\t\"This is probably an incorrectly implemented test.\");\n \t\t\t\t}\n \t\t\t}\n+\t\t\treceivedNum++;\n+\t\t\tif (expectedSize != -1 && receivedNum >= expectedSize) {\n+\t\t\t\t// some sources are infinite (e.g. kafka),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "760f994e14c290dd4c31b67e15751862d6ee520f"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Nzg0ODU4OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/stream/sql/TableScanTest.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoxMToxMlrOGaAqkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoxMToxMlrOGaAqkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkyNzA1Nw==", "bodyText": "Can we also add a ITCase for the stream join ?", "url": "https://github.com/apache/flink/pull/12284#discussion_r429927057", "createdAt": "2020-05-25T13:11:12Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-table-planner-blink/src/test/scala/org/apache/flink/table/planner/plan/stream/sql/TableScanTest.scala", "diffHunk": "@@ -186,6 +186,61 @@ class TableScanTest extends TableTestBase {\n     util.verifyPlan(\"SELECT COUNT(*) FROM src WHERE a > 1\", ExplainDetail.CHANGELOG_MODE)\n   }\n \n+  @Test\n+  def testJoinOnChangelogSource(): Unit = {\n+    util.addTable(\n+      \"\"\"\n+        |CREATE TABLE changelog_src (\n+        |  ts TIMESTAMP(3),\n+        |  a INT,\n+        |  b DOUBLE\n+        |) WITH (\n+        |  'connector' = 'values',\n+        |  'changelog-mode' = 'I,UA,UB'\n+        |)\n+      \"\"\".stripMargin)\n+    util.addTable(\n+      \"\"\"\n+        |CREATE TABLE append_src (\n+        |  ts TIMESTAMP(3),\n+        |  a INT,\n+        |  b DOUBLE\n+        |) WITH (\n+        |  'connector' = 'values',\n+        |  'changelog-mode' = 'I'\n+        |)\n+      \"\"\".stripMargin)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "760f994e14c290dd4c31b67e15751862d6ee520f"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4551, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}