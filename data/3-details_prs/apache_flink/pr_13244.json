{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNjI0NTA0", "number": 13244, "title": "[FLINK-18333][jdbc] UnsignedTypeConversionITCase failed caused by MariaDB4j \"Asked to waitFor Program\"", "bodyText": "What is the purpose of the change\n\nThis pull request fix up unstable test UnsignedTypeConversionITCase.\n\nBrief change log\n\nAvoid using MariaDB4jRule to create a DB instance, because the MariaDB4jRule will pull up a ManagedProcess to run the create db statement which may exit unexpected.\nAdd retry logic for initializing the DB instance.\n\nVerifying this change\nThis change is an unstable test fix.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (no)\nThe serializers: (no)\nThe runtime per-record code paths (performance sensitive): ( no)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Yarn/Mesos, ZooKeeper: (no)\nThe S3 file system connector: (no)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-08-26T03:45:20Z", "url": "https://github.com/apache/flink/pull/13244", "merged": true, "mergeCommit": {"oid": "ad4246b623243d710d5da7f153437426d8de0c4c"}, "closed": true, "closedAt": "2020-09-07T12:06:51Z", "author": {"login": "leonardBang"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCjUe4AH2gAyNDczNjI0NTA0OmY1ZmVlMTMzZDI4NDM2YWI3M2IwM2QwNWIxZjZmYWRjODY0OGY1ZDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGh0kYAFqTQ4MzUwMzIxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/f5fee133d28436ab73b03d05b1f6fadc8648f5d0", "committedDate": "2020-08-26T03:34:08Z", "message": "[FLINK-18333][jdbc] UnsignedTypeConversionITCase failed caused by MariaDB4j \"Asked to waitFor Program\""}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NzYwMDUw", "url": "https://github.com/apache/flink/pull/13244#pullrequestreview-476760050", "createdAt": "2020-08-27T14:10:25Z", "commit": {"oid": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDoxMDoyNVrOHISMng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDoxNjowNlrOHISc4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0ODc5OA==", "bodyText": "log.warn?", "url": "https://github.com/apache/flink/pull/13244#discussion_r478448798", "createdAt": "2020-08-27T14:10:25Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "diffHunk": "@@ -60,27 +60,54 @@\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n \n \tprivate StreamTableEnvironment tEnv;\n+\tprivate DB db;\n \tprivate String dbUrl;\n \tprivate Connection connection;\n \n-\t@ClassRule\n-\tpublic static MariaDB4jRule db4jRule = new MariaDB4jRule(\n-\t\tDBConfigurationBuilder.newBuilder().build(),\n-\t\tDEFAULT_DB_NAME,\n-\t\tnull);\n-\n \t@Before\n-\tpublic void setUp() throws SQLException, ClassNotFoundException {\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n+\tpublic void setUp() throws SQLException, IllegalStateException {\n \t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tdbUrl = db4jRule.getURL();\n-\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\tprepareMariaDB();\n \t\tcreateMysqlTable();\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\ttEnv = StreamTableEnvironment.create(env);\n \t\tcreateFlinkTable();\n \t\tprepareData();\n \t}\n \n+\tprivate void prepareMariaDB() throws IllegalStateException {\n+\t\tboolean initDbSuccess = false;\n+\t\tint i = 0;\n+\t\t//retry\n+\t\twhile (i < 3) {\n+\t\t\ttry {\n+\t\t\t\tdb = DB.newEmbeddedDB(DBConfigurationBuilder.newBuilder().build());\n+\t\t\t\tdb.start();\n+\t\t\t\tdbUrl = db.getConfiguration().getURL(DEFAULT_DB_NAME);\n+\t\t\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\t\t\ttry (Statement statement = connection.createStatement()) {\n+\t\t\t\t\tstatement.execute(\"CREATE DATABASE IF NOT EXISTS `\" + DEFAULT_DB_NAME + \"`;\");\n+\t\t\t\t\tResultSet resultSet = statement.executeQuery(\"SELECT SCHEMA_NAME FROM \" +\n+\t\t\t\t\t\t\"INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = '\" + DEFAULT_DB_NAME + \"';\");\n+\t\t\t\t\tif (resultSet.next()) {\n+\t\t\t\t\t\tString dbName = resultSet.getString(1);\n+\t\t\t\t\t\tinitDbSuccess = DEFAULT_DB_NAME.equalsIgnoreCase(dbName);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tlog.info(\"Initialize DB fail caused by {}\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1MDA5MA==", "bodyText": "stop the DB to release potential resources if errors happen?", "url": "https://github.com/apache/flink/pull/13244#discussion_r478450090", "createdAt": "2020-08-27T14:12:07Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "diffHunk": "@@ -60,27 +60,54 @@\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n \n \tprivate StreamTableEnvironment tEnv;\n+\tprivate DB db;\n \tprivate String dbUrl;\n \tprivate Connection connection;\n \n-\t@ClassRule\n-\tpublic static MariaDB4jRule db4jRule = new MariaDB4jRule(\n-\t\tDBConfigurationBuilder.newBuilder().build(),\n-\t\tDEFAULT_DB_NAME,\n-\t\tnull);\n-\n \t@Before\n-\tpublic void setUp() throws SQLException, ClassNotFoundException {\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n+\tpublic void setUp() throws SQLException, IllegalStateException {\n \t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tdbUrl = db4jRule.getURL();\n-\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\tprepareMariaDB();\n \t\tcreateMysqlTable();\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\ttEnv = StreamTableEnvironment.create(env);\n \t\tcreateFlinkTable();\n \t\tprepareData();\n \t}\n \n+\tprivate void prepareMariaDB() throws IllegalStateException {\n+\t\tboolean initDbSuccess = false;\n+\t\tint i = 0;\n+\t\t//retry\n+\t\twhile (i < 3) {\n+\t\t\ttry {\n+\t\t\t\tdb = DB.newEmbeddedDB(DBConfigurationBuilder.newBuilder().build());\n+\t\t\t\tdb.start();\n+\t\t\t\tdbUrl = db.getConfiguration().getURL(DEFAULT_DB_NAME);\n+\t\t\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\t\t\ttry (Statement statement = connection.createStatement()) {\n+\t\t\t\t\tstatement.execute(\"CREATE DATABASE IF NOT EXISTS `\" + DEFAULT_DB_NAME + \"`;\");\n+\t\t\t\t\tResultSet resultSet = statement.executeQuery(\"SELECT SCHEMA_NAME FROM \" +\n+\t\t\t\t\t\t\"INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = '\" + DEFAULT_DB_NAME + \"';\");\n+\t\t\t\t\tif (resultSet.next()) {\n+\t\t\t\t\t\tString dbName = resultSet.getString(1);\n+\t\t\t\t\t\tinitDbSuccess = DEFAULT_DB_NAME.equalsIgnoreCase(dbName);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tlog.info(\"Initialize DB fail caused by {}\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ0ODc5OA=="}, "originalCommit": {"oid": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1MjU5Nw==", "bodyText": "I would suggest to prepare DB in a @ClassBefore instead of @Before to avoid repeated initialization between tests.", "url": "https://github.com/apache/flink/pull/13244#discussion_r478452597", "createdAt": "2020-08-27T14:15:33Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "diffHunk": "@@ -60,27 +60,54 @@\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n \n \tprivate StreamTableEnvironment tEnv;\n+\tprivate DB db;\n \tprivate String dbUrl;\n \tprivate Connection connection;\n \n-\t@ClassRule\n-\tpublic static MariaDB4jRule db4jRule = new MariaDB4jRule(\n-\t\tDBConfigurationBuilder.newBuilder().build(),\n-\t\tDEFAULT_DB_NAME,\n-\t\tnull);\n-\n \t@Before\n-\tpublic void setUp() throws SQLException, ClassNotFoundException {\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n+\tpublic void setUp() throws SQLException, IllegalStateException {\n \t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tdbUrl = db4jRule.getURL();\n-\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\tprepareMariaDB();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ1Mjk2Mg==", "bodyText": "Please add more comments for why we add a retry here, we can also link the issue.", "url": "https://github.com/apache/flink/pull/13244#discussion_r478452962", "createdAt": "2020-08-27T14:16:06Z", "author": {"login": "wuchong"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/UnsignedTypeConversionITCase.java", "diffHunk": "@@ -60,27 +60,54 @@\n \tprivate static final String TABLE_NAME = \"unsigned_test\";\n \n \tprivate StreamTableEnvironment tEnv;\n+\tprivate DB db;\n \tprivate String dbUrl;\n \tprivate Connection connection;\n \n-\t@ClassRule\n-\tpublic static MariaDB4jRule db4jRule = new MariaDB4jRule(\n-\t\tDBConfigurationBuilder.newBuilder().build(),\n-\t\tDEFAULT_DB_NAME,\n-\t\tnull);\n-\n \t@Before\n-\tpublic void setUp() throws SQLException, ClassNotFoundException {\n-\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n-\t\ttEnv = StreamTableEnvironment.create(env);\n+\tpublic void setUp() throws SQLException, IllegalStateException {\n \t\t//dbUrl: jdbc:mysql://localhost:3306/test\n-\t\tdbUrl = db4jRule.getURL();\n-\t\tconnection = DriverManager.getConnection(dbUrl);\n+\t\tprepareMariaDB();\n \t\tcreateMysqlTable();\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\ttEnv = StreamTableEnvironment.create(env);\n \t\tcreateFlinkTable();\n \t\tprepareData();\n \t}\n \n+\tprivate void prepareMariaDB() throws IllegalStateException {\n+\t\tboolean initDbSuccess = false;\n+\t\tint i = 0;\n+\t\t//retry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5fee133d28436ab73b03d05b1f6fadc8648f5d0"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c6afc2e13a7c112c0b65d0fb64b13224ec55efd", "author": {"user": {"login": "leonardBang", "name": "Leonard Xu"}}, "url": "https://github.com/apache/flink/commit/9c6afc2e13a7c112c0b65d0fb64b13224ec55efd", "committedDate": "2020-08-28T07:29:41Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMzUyNjY1", "url": "https://github.com/apache/flink/pull/13244#pullrequestreview-483352665", "createdAt": "2020-09-07T08:24:30Z", "commit": {"oid": "9c6afc2e13a7c112c0b65d0fb64b13224ec55efd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNTAzMjE2", "url": "https://github.com/apache/flink/pull/13244#pullrequestreview-483503216", "createdAt": "2020-09-07T12:05:04Z", "commit": {"oid": "9c6afc2e13a7c112c0b65d0fb64b13224ec55efd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4743, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}