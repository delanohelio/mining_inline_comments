{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMDg2ODc2", "number": 13565, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDo1MzowMVrOEsqnrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNTo1MzoxOFrOFK8gqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjcxMDg3OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/PendingCheckpoint.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDo1MzowMVrOHgCFWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMToxMzoyMlrOHghizw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MDYxNg==", "bodyText": "Why do we need this check now? As far as I can tell, previously it was not needed?", "url": "https://github.com/apache/flink/pull/13565#discussion_r503350616", "createdAt": "2020-10-12T14:53:01Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/PendingCheckpoint.java", "diffHunk": "@@ -531,6 +527,30 @@ private void dispose(boolean releaseState, CheckpointsCleaner checkpointsCleaner\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic void discard() {\n+\t\tsynchronized (lock) {\n+\t\t\tif (stateDiscarded) {\n+\t\t\t\tPreconditions.checkState(discarded, \"Checkpoint should be disposed before being discarded\");\n+\t\t\t\treturn;\n+\t\t\t} else {\n+\t\t\t\tstateDiscarded = true;\n+\t\t\t}\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5feafbbf87c7cefaf7ebe3a36c1e3f346386d629"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzczMDUzMw==", "bodyText": "Yes, previously it wasn't needed. I added it to avoid future mistakes.", "url": "https://github.com/apache/flink/pull/13565#discussion_r503730533", "createdAt": "2020-10-13T07:36:41Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/PendingCheckpoint.java", "diffHunk": "@@ -531,6 +527,30 @@ private void dispose(boolean releaseState, CheckpointsCleaner checkpointsCleaner\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic void discard() {\n+\t\tsynchronized (lock) {\n+\t\t\tif (stateDiscarded) {\n+\t\t\t\tPreconditions.checkState(discarded, \"Checkpoint should be disposed before being discarded\");\n+\t\t\t\treturn;\n+\t\t\t} else {\n+\t\t\t\tstateDiscarded = true;\n+\t\t\t}\n+\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MDYxNg=="}, "originalCommit": {"oid": "5feafbbf87c7cefaf7ebe3a36c1e3f346386d629"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgwOTY1NQ==", "bodyText": "Ok, I think I get it now. Now it's a public method so you are protecting it more.\nI think I would prefer:\n\nrename discarded -> disposed or scheduledForDisacrding\nrename stateDiscarded -> discarded\n\n?", "url": "https://github.com/apache/flink/pull/13565#discussion_r503809655", "createdAt": "2020-10-13T09:36:41Z", "author": {"login": "pnowojski"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/PendingCheckpoint.java", "diffHunk": "@@ -531,6 +527,30 @@ private void dispose(boolean releaseState, CheckpointsCleaner checkpointsCleaner\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic void discard() {\n+\t\tsynchronized (lock) {\n+\t\t\tif (stateDiscarded) {\n+\t\t\t\tPreconditions.checkState(discarded, \"Checkpoint should be disposed before being discarded\");\n+\t\t\t\treturn;\n+\t\t\t} else {\n+\t\t\t\tstateDiscarded = true;\n+\t\t\t}\n+\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MDYxNg=="}, "originalCommit": {"oid": "5feafbbf87c7cefaf7ebe3a36c1e3f346386d629"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg2NjA2Mw==", "bodyText": "I agree (just wanted to avoid touching additional files calling getter).\nAdded a fixup commit on top.", "url": "https://github.com/apache/flink/pull/13565#discussion_r503866063", "createdAt": "2020-10-13T11:13:22Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/PendingCheckpoint.java", "diffHunk": "@@ -531,6 +527,30 @@ private void dispose(boolean releaseState, CheckpointsCleaner checkpointsCleaner\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic void discard() {\n+\t\tsynchronized (lock) {\n+\t\t\tif (stateDiscarded) {\n+\t\t\t\tPreconditions.checkState(discarded, \"Checkpoint should be disposed before being discarded\");\n+\t\t\t\treturn;\n+\t\t\t} else {\n+\t\t\t\tstateDiscarded = true;\n+\t\t\t}\n+\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MDYxNg=="}, "originalCommit": {"oid": "5feafbbf87c7cefaf7ebe3a36c1e3f346386d629"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MDIxNDgyOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CompletedCheckpointStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNTo1MzoxOFrOIN203g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNjozMzowMlrOIN4ZCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQwMDY3MA==", "bodyText": "Why do we need the postCleanup? In the current code base I couldn't find a single usage where we don't pass () -> {} @rkhachatryan and @pnowojski? If this is not needed, can we get rid of it? I think it does not make a very nice API with the no-ops.\nMoreover, it would be nice if we could update the JavaDocs if we change the signature of interfaces.", "url": "https://github.com/apache/flink/pull/13565#discussion_r551400670", "createdAt": "2021-01-04T15:53:18Z", "author": {"login": "tillrohrmann"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CompletedCheckpointStore.java", "diffHunk": "@@ -84,7 +85,7 @@ default CompletedCheckpoint getLatestCheckpoint(boolean isPreferCheckpointForRec\n \t *\n \t * @param jobStatus Job state on shut down\n \t */\n-\tvoid shutdown(JobStatus jobStatus) throws Exception;\n+\tvoid shutdown(JobStatus jobStatus, CheckpointsCleaner checkpointsCleaner, Runnable postCleanup) throws Exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82386f6b770e774839f3c3d4d28de2019e072775"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQyNjMxNQ==", "bodyText": "postCleanup is used by checkpointsCleaner but not in case of shutting down. I agree, it should be removed (by pushing down to DefaultCompletedCheckpointStore) and javadoc added. My bad.\nI've created FLINK-20847 to address this.", "url": "https://github.com/apache/flink/pull/13565#discussion_r551426315", "createdAt": "2021-01-04T16:33:02Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/checkpoint/CompletedCheckpointStore.java", "diffHunk": "@@ -84,7 +85,7 @@ default CompletedCheckpoint getLatestCheckpoint(boolean isPreferCheckpointForRec\n \t *\n \t * @param jobStatus Job state on shut down\n \t */\n-\tvoid shutdown(JobStatus jobStatus) throws Exception;\n+\tvoid shutdown(JobStatus jobStatus, CheckpointsCleaner checkpointsCleaner, Runnable postCleanup) throws Exception;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQwMDY3MA=="}, "originalCommit": {"oid": "82386f6b770e774839f3c3d4d28de2019e072775"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 264, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}