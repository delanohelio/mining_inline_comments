{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MTQ0NzE1", "number": 14188, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzoyOTo1NFrOE8gP6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzoyOTo1NFrOE8gP6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxODc4Mzc2OnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/collect/CollectSinkFunction.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzoyOTo1NFrOH4qgPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOTo0NjozNlrOH6Th4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3ODY4Nw==", "bodyText": "How many these logs will there be? Will it flow the log file?", "url": "https://github.com/apache/flink/pull/14188#discussion_r529178687", "createdAt": "2020-11-24T03:29:54Z", "author": {"login": "wuchong"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/collect/CollectSinkFunction.java", "diffHunk": "@@ -383,12 +383,10 @@ public void run() {\n \n \t\t\t\t\tif (!version.equals(requestVersion) || requestOffset < offset) {\n \t\t\t\t\t\t// invalid request\n-\t\t\t\t\t\tif (LOG.isDebugEnabled()) {\n-\t\t\t\t\t\t\t// this is normal for the 1st request after the sink (re)starts, so we print debug log\n-\t\t\t\t\t\t\tLOG.debug(\"Invalid request. Received version = \" + requestVersion +\n-\t\t\t\t\t\t\t\t\", offset = \" + requestOffset + \", while expected version = \"\n-\t\t\t\t\t\t\t\t+ version + \", offset = \" + offset);\n-\t\t\t\t\t\t}\n+\t\t\t\t\t\t// this is normal for the 1st request after the sink (re)starts\n+\t\t\t\t\t\tLOG.info(\"Invalid request. Received version = \" + requestVersion +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46c7fadd6824252ef63ed742c46e151ae60a4dc0"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3ODg3Mg==", "bodyText": "Use LOG.warn?", "url": "https://github.com/apache/flink/pull/14188#discussion_r529178872", "createdAt": "2020-11-24T03:30:24Z", "author": {"login": "wuchong"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/collect/CollectSinkFunction.java", "diffHunk": "@@ -383,12 +383,10 @@ public void run() {\n \n \t\t\t\t\tif (!version.equals(requestVersion) || requestOffset < offset) {\n \t\t\t\t\t\t// invalid request\n-\t\t\t\t\t\tif (LOG.isDebugEnabled()) {\n-\t\t\t\t\t\t\t// this is normal for the 1st request after the sink (re)starts, so we print debug log\n-\t\t\t\t\t\t\tLOG.debug(\"Invalid request. Received version = \" + requestVersion +\n-\t\t\t\t\t\t\t\t\", offset = \" + requestOffset + \", while expected version = \"\n-\t\t\t\t\t\t\t\t+ version + \", offset = \" + offset);\n-\t\t\t\t\t\t}\n+\t\t\t\t\t\t// this is normal for the 1st request after the sink (re)starts\n+\t\t\t\t\t\tLOG.info(\"Invalid request. Received version = \" + requestVersion +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3ODY4Nw=="}, "originalCommit": {"oid": "46c7fadd6824252ef63ed742c46e151ae60a4dc0"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3OTM5Mg==", "bodyText": "It won't flow the log file. This log only happens when the sink (that is to say, the task containing the sink) starts or restarts.\nThis is a mechanism to inform the collect iterator that the sink has restarted and is an expected behavior. So an info log is enough.", "url": "https://github.com/apache/flink/pull/14188#discussion_r529179392", "createdAt": "2020-11-24T03:32:12Z", "author": {"login": "tsreaper"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/collect/CollectSinkFunction.java", "diffHunk": "@@ -383,12 +383,10 @@ public void run() {\n \n \t\t\t\t\tif (!version.equals(requestVersion) || requestOffset < offset) {\n \t\t\t\t\t\t// invalid request\n-\t\t\t\t\t\tif (LOG.isDebugEnabled()) {\n-\t\t\t\t\t\t\t// this is normal for the 1st request after the sink (re)starts, so we print debug log\n-\t\t\t\t\t\t\tLOG.debug(\"Invalid request. Received version = \" + requestVersion +\n-\t\t\t\t\t\t\t\t\", offset = \" + requestOffset + \", while expected version = \"\n-\t\t\t\t\t\t\t\t+ version + \", offset = \" + offset);\n-\t\t\t\t\t\t}\n+\t\t\t\t\t\t// this is normal for the 1st request after the sink (re)starts\n+\t\t\t\t\t\tLOG.info(\"Invalid request. Received version = \" + requestVersion +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3ODY4Nw=="}, "originalCommit": {"oid": "46c7fadd6824252ef63ed742c46e151ae60a4dc0"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg5OTQyNA==", "bodyText": "Thanks for the explanation.", "url": "https://github.com/apache/flink/pull/14188#discussion_r530899424", "createdAt": "2020-11-26T09:46:36Z", "author": {"login": "wuchong"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/operators/collect/CollectSinkFunction.java", "diffHunk": "@@ -383,12 +383,10 @@ public void run() {\n \n \t\t\t\t\tif (!version.equals(requestVersion) || requestOffset < offset) {\n \t\t\t\t\t\t// invalid request\n-\t\t\t\t\t\tif (LOG.isDebugEnabled()) {\n-\t\t\t\t\t\t\t// this is normal for the 1st request after the sink (re)starts, so we print debug log\n-\t\t\t\t\t\t\tLOG.debug(\"Invalid request. Received version = \" + requestVersion +\n-\t\t\t\t\t\t\t\t\", offset = \" + requestOffset + \", while expected version = \"\n-\t\t\t\t\t\t\t\t+ version + \", offset = \" + offset);\n-\t\t\t\t\t\t}\n+\t\t\t\t\t\t// this is normal for the 1st request after the sink (re)starts\n+\t\t\t\t\t\tLOG.info(\"Invalid request. Received version = \" + requestVersion +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE3ODY4Nw=="}, "originalCommit": {"oid": "46c7fadd6824252ef63ed742c46e151ae60a4dc0"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4738, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}