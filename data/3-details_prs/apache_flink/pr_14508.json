{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2MTEzNDI1", "number": 14508, "title": "[FLINK-20773][json] Support to parse unescaped control chars in string node", "bodyText": "What is the purpose of the change\nSupport allow-unescaped-control-chars option for JSON format.\nBrief change log\n(for example:)\n\nThe TaskInfo is stored in the blob store on job creation time as a persistent artifact\nDeployments RPC transmits only the blob storage reference\nTaskManagers retrieve the TaskInfo from the blob cache\n\nVerifying this change\n(Please pick either of the following options)\nThis change is a trivial rework / code cleanup without any test coverage.\n(or)\nThis change is already covered by existing tests, such as (please describe tests).\n(or)\nThis change added tests and can be verified as follows:\n(example:)\n\nAdded integration tests for end-to-end deployment with large payloads (100MB)\nExtended integration test for recovery after master (JobManager) failure\nAdded test that validates that TaskInfo is transferred only once across recoveries\nManually verified the change by running a 4 node cluser with 2 JobManagers and 4 TaskManagers, a stateful streaming program, and killing one JobManager and two TaskManagers during the execution, verifying that recovery happens correctly.\n\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-12-28T14:24:48Z", "url": "https://github.com/apache/flink/pull/14508", "merged": true, "mergeCommit": {"oid": "51ec88bd01f5157c154fe49163ec0920f0e44663"}, "closed": true, "closedAt": "2021-01-08T04:13:19Z", "author": {"login": "V1ncentzzZ"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrNGx6gBqjQxNTY5MjU3NzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtxL-FgH2gAyNTQ2MTEzNDI1OjRlMzA5YmQzMzYzYzJiN2Y5YWQzNjdlNDE3ZGM1N2ZmN2MxZjk2ZmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5f905df114b972534bcd8f701da5f73d067c64d", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/f5f905df114b972534bcd8f701da5f73d067c64d", "committedDate": "2020-12-29T08:55:37Z", "message": "Merge remote-tracking branch 'flink/master' into FLINK-20773"}, "afterCommit": {"oid": "fd8cbf90a807292b0db7b85bda26f1e717b87767", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/fd8cbf90a807292b0db7b85bda26f1e717b87767", "committedDate": "2020-12-30T10:51:35Z", "message": "[FLINK-20773][format] Support allow-unescaped-control-chars option for JSON format.\n\n[FLINK-20773][format] Fix check style.\n\n[FLINK-20773][format] Fix check style.\n\n[FLINK-20773][format] Fix check style.\n\n[FLINK-20773][format] Documents optimization.\n\n[FLINK-20773][format] Code optimization.\n\n[FLINK-20773][format] Code optimization.\n\n[hotfix] Update .git-blame-ignore-revs\n\n[FLINK-20793][core] Fix the NamesTest and JarSubmissionITCase due to code style refactor\n\nThis closes #14514."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c62bf291e3cba1758777248b09f9ee40671a060", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/7c62bf291e3cba1758777248b09f9ee40671a060", "committedDate": "2020-12-30T10:56:18Z", "message": "[FLINK-20773][format] Revert `.git-blame-ignore-revs` file"}, "afterCommit": {"oid": "f0051f9ec32e471f0c60cae1a58dd8faa3d779dd", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/f0051f9ec32e471f0c60cae1a58dd8faa3d779dd", "committedDate": "2020-12-30T10:57:19Z", "message": "[FLINK-20773][format] Support allow-unescaped-control-chars option for JSON format.\n\n[FLINK-20773][format] Fix check style.\n\n[FLINK-20773][format] Fix check style.\n\n[FLINK-20773][format] Fix check style.\n\n[FLINK-20773][format] Documents optimization.\n\n[FLINK-20773][format] Code optimization.\n\n[FLINK-20773][format] Code optimization.\n\n[hotfix] Update .git-blame-ignore-revs\n\n[FLINK-20793][core] Fix the NamesTest and JarSubmissionITCase due to code style refactor\n\nThis closes #14514.\n\n[FLINK-20773][format] Revert `.git-blame-ignore-revs` file"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8de05b63cab9c4942f3e4bdbdfdee381a1bf4b27", "author": {"user": {"login": "xiaoHoly", "name": null}}, "url": "https://github.com/apache/flink/commit/8de05b63cab9c4942f3e4bdbdfdee381a1bf4b27", "committedDate": "2020-12-30T11:08:52Z", "message": "[FLINK-18654][docs][jdbc] Correct missleading documentation in \"Partitioned Scan\" section of JDBC connector\n\nThis closes #14523"}, "afterCommit": {"oid": "213512a340c8a0ca5914a6681cbad6e732163702", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/213512a340c8a0ca5914a6681cbad6e732163702", "committedDate": "2020-12-30T11:10:30Z", "message": "[FLINK-20773][format] Support allow-unescaped-control-chars option for JSON format.\n\n[FLINK-20773][format] Fix check style.\n\n[FLINK-20773][format] Fix check style.\n\n[FLINK-20773][format] Fix check style.\n\n[FLINK-20773][format] Documents optimization.\n\n[FLINK-20773][format] Code optimization.\n\n[FLINK-20773][format] Code optimization.\n\n[hotfix] Update .git-blame-ignore-revs\n\n[FLINK-20793][core] Fix the NamesTest and JarSubmissionITCase due to code style refactor\n\nThis closes #14514.\n\n[FLINK-20773][format] Revert `.git-blame-ignore-revs` file\n\n[hotfix] Update .git-blame-ignore-revs\n\n[FLINK-18998] No watermark is shown in Flink UI when ProcessingTime is used\n\nDisplay more informative message stating that Watermarks are only available when using\nevent time if there are no watermarks to display in the web UI.\n\nThis closes #14483.\n\n[FLINK-17331][runtime] Explicitly get the ByteBuf length of all classes which is written to NettyMessage\n\nCurrently, the length of some header fields in NettyMessage is hardcoded: InputChannelID, ExecutionAttemptID, e.t.c.\nSo if we make some changes for such field, then we are not ware that it also needs to change the respective length for related netty messages component.\nThis PR explicitly get the ByteBuf length of all classes which is written to NettyMessage to avoid such problems.\n\n[FLINK-20792][build] Allow shorthand calls to spotless\n\nIt was not possible to just run 'mvn spotless:check', but instead one needed to use the fully qualified name of the plugin, i.e., 'mvn com.diffplug.spotless:spotless-maven-plugin:check'.\n\nThis is due to 'force-shading'; this module is declared as a child of the flink-parent pom (i.e., the root pom of the project), but is not actually declaring that very module as it's parent.\nThis seems to throw of maven, which fails to retrieve the plugin information from the parent.\n\nNote that this is just a band-aid; a proper fix would declare flink-parent as the parent of force-shading, but this is the easier fix.\n\n[FLINK-20803][build][docs] Pin google-java-format version in install instructions\n\n[FLINK-20806] Correct error message in TaskExecutor.disconnectJobManagerConnection\n\nThis closes #14518.\n\n[FLINK-20749] Add DeclarativeSlotPool.registerNewSlotsListener\n\nThe DeclarativeSlotPool.registerNewSlotsListener can be used to register a\nDeclarativeSlotPool.NewSlotsListener which is notified whenever the\nDeclarativeSlotPool receives new slots or reserved slots are freed.\n\nThis closes #14482.\n\n[FLINK-20693][table-planner-blink][python] Port BatchExecPythonCorrelate and StreamExecPythonCorrelate to Java\n\nThis closes #14503.\n\n[FLINK-20458][docs-zh] Translate \"Getting Started\" page of Table SQL\n\nThis closes #14437\n\n[hotfix][tests] Disable alignment timeout by default in UnalignedCheckpointITCase\n\nMost of the bugs in UC are revealed with higher back-pressure which is not created with alignment timeout.\nThis change disables it by default and adds a new test (p=20) with the timeout enabled.\n\n[FLINK-20654][network] Fix channel indices in StreamTaskNetworkInput\n\nIn StreamTaskNetworkInput.prepareSnapshot, internal channelIndex\nis inconsistent with CheckpointedInputGate channelIndex.\n\nThis change fixes data loss in UnalignedCheckpointITCase.cogroup.\n\n[FLINK-20654][checkpointing] Decline checkpoints until restored channel state is consumed\n\nIn scenarios with multiple inputs (e.g. co-group; not union) one input may receive a\ncheckpoint barrier while the second input is still restoring state. This (previous)\nstate is currently not included into the snapshot, which therefore will be incomplete.\n\n[FLINK-20654][tests] Disable throttling on checkpoint completion, not snapshotState\n\nThis reduces the number of failures in UnalignedCheckpointITCase.union to ~2/100.\n\n[FLINK-20606][hive][table] Fix CREATE FUNCTION is failed under Hive catalog in SQL CLI using -j option\n\nThis closes #14392\n\n[FLINK-20807][build] Remove/narrow various checkstyle suppressions\n\n[FLINK-18654][docs][jdbc] Correct missleading documentation in \"Partitioned Scan\" section of JDBC connector\n\nThis closes #14523"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "213512a340c8a0ca5914a6681cbad6e732163702", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/213512a340c8a0ca5914a6681cbad6e732163702", "committedDate": "2020-12-30T11:10:30Z", "message": "[FLINK-20773][format] Support allow-unescaped-control-chars option for JSON format.\n\n[FLINK-20773][format] Fix check style.\n\n[FLINK-20773][format] Fix check style.\n\n[FLINK-20773][format] Fix check style.\n\n[FLINK-20773][format] Documents optimization.\n\n[FLINK-20773][format] Code optimization.\n\n[FLINK-20773][format] Code optimization.\n\n[hotfix] Update .git-blame-ignore-revs\n\n[FLINK-20793][core] Fix the NamesTest and JarSubmissionITCase due to code style refactor\n\nThis closes #14514.\n\n[FLINK-20773][format] Revert `.git-blame-ignore-revs` file\n\n[hotfix] Update .git-blame-ignore-revs\n\n[FLINK-18998] No watermark is shown in Flink UI when ProcessingTime is used\n\nDisplay more informative message stating that Watermarks are only available when using\nevent time if there are no watermarks to display in the web UI.\n\nThis closes #14483.\n\n[FLINK-17331][runtime] Explicitly get the ByteBuf length of all classes which is written to NettyMessage\n\nCurrently, the length of some header fields in NettyMessage is hardcoded: InputChannelID, ExecutionAttemptID, e.t.c.\nSo if we make some changes for such field, then we are not ware that it also needs to change the respective length for related netty messages component.\nThis PR explicitly get the ByteBuf length of all classes which is written to NettyMessage to avoid such problems.\n\n[FLINK-20792][build] Allow shorthand calls to spotless\n\nIt was not possible to just run 'mvn spotless:check', but instead one needed to use the fully qualified name of the plugin, i.e., 'mvn com.diffplug.spotless:spotless-maven-plugin:check'.\n\nThis is due to 'force-shading'; this module is declared as a child of the flink-parent pom (i.e., the root pom of the project), but is not actually declaring that very module as it's parent.\nThis seems to throw of maven, which fails to retrieve the plugin information from the parent.\n\nNote that this is just a band-aid; a proper fix would declare flink-parent as the parent of force-shading, but this is the easier fix.\n\n[FLINK-20803][build][docs] Pin google-java-format version in install instructions\n\n[FLINK-20806] Correct error message in TaskExecutor.disconnectJobManagerConnection\n\nThis closes #14518.\n\n[FLINK-20749] Add DeclarativeSlotPool.registerNewSlotsListener\n\nThe DeclarativeSlotPool.registerNewSlotsListener can be used to register a\nDeclarativeSlotPool.NewSlotsListener which is notified whenever the\nDeclarativeSlotPool receives new slots or reserved slots are freed.\n\nThis closes #14482.\n\n[FLINK-20693][table-planner-blink][python] Port BatchExecPythonCorrelate and StreamExecPythonCorrelate to Java\n\nThis closes #14503.\n\n[FLINK-20458][docs-zh] Translate \"Getting Started\" page of Table SQL\n\nThis closes #14437\n\n[hotfix][tests] Disable alignment timeout by default in UnalignedCheckpointITCase\n\nMost of the bugs in UC are revealed with higher back-pressure which is not created with alignment timeout.\nThis change disables it by default and adds a new test (p=20) with the timeout enabled.\n\n[FLINK-20654][network] Fix channel indices in StreamTaskNetworkInput\n\nIn StreamTaskNetworkInput.prepareSnapshot, internal channelIndex\nis inconsistent with CheckpointedInputGate channelIndex.\n\nThis change fixes data loss in UnalignedCheckpointITCase.cogroup.\n\n[FLINK-20654][checkpointing] Decline checkpoints until restored channel state is consumed\n\nIn scenarios with multiple inputs (e.g. co-group; not union) one input may receive a\ncheckpoint barrier while the second input is still restoring state. This (previous)\nstate is currently not included into the snapshot, which therefore will be incomplete.\n\n[FLINK-20654][tests] Disable throttling on checkpoint completion, not snapshotState\n\nThis reduces the number of failures in UnalignedCheckpointITCase.union to ~2/100.\n\n[FLINK-20606][hive][table] Fix CREATE FUNCTION is failed under Hive catalog in SQL CLI using -j option\n\nThis closes #14392\n\n[FLINK-20807][build] Remove/narrow various checkstyle suppressions\n\n[FLINK-18654][docs][jdbc] Correct missleading documentation in \"Partitioned Scan\" section of JDBC connector\n\nThis closes #14523"}, "afterCommit": {"oid": "033aaef0403b2c2c2d70932be0b668e6cd5b54fb", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/033aaef0403b2c2c2d70932be0b668e6cd5b54fb", "committedDate": "2020-12-30T11:37:37Z", "message": "[FLINK-20773][format] Support allow-unescaped-control-chars option for JSON format."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eedbd727e8d3f5cbd3f7ac0dc6cc1962b916a63a", "author": {"user": {"login": "xiaoHoly", "name": null}}, "url": "https://github.com/apache/flink/commit/eedbd727e8d3f5cbd3f7ac0dc6cc1962b916a63a", "committedDate": "2020-12-30T15:49:56Z", "message": "[FLINK-18654][docs][jdbc] Correct missleading documentation in \"Partitioned Scan\" section of JDBC connector\n\nThis closes #14523"}, "afterCommit": {"oid": "033aaef0403b2c2c2d70932be0b668e6cd5b54fb", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/033aaef0403b2c2c2d70932be0b668e6cd5b54fb", "committedDate": "2020-12-30T11:37:37Z", "message": "[FLINK-20773][format] Support allow-unescaped-control-chars option for JSON format."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d7c11e1d1a2cccc90f6c3745039cb6af6c2327b1", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/d7c11e1d1a2cccc90f6c3745039cb6af6c2327b1", "committedDate": "2020-12-30T15:53:16Z", "message": "Merge remote-tracking branch 'origin/FLINK-20773' into FLINK-20773"}, "afterCommit": {"oid": "28364b82097029626bf4ad3d18ca14eb759d64db", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/28364b82097029626bf4ad3d18ca14eb759d64db", "committedDate": "2020-12-30T15:56:25Z", "message": "[FLINK-20773][format] Support allow-unescaped-control-chars option for JSON format."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a2d0c87af6448ab36e312a79124f053f3880c12", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/5a2d0c87af6448ab36e312a79124f053f3880c12", "committedDate": "2020-12-31T03:30:59Z", "message": "Merge remote-tracking branch 'origin/FLINK-20773' into FLINK-20773\n\n# Conflicts:\n#\tflink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonDecodingFormat.java\n#\tflink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonDeserializationSchema.java\n#\tflink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonFormatFactory.java"}, "afterCommit": {"oid": "3c03189754755222ce29f4d17485c91532da4a8b", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/3c03189754755222ce29f4d17485c91532da4a8b", "committedDate": "2020-12-31T04:23:13Z", "message": "[FLINK-20773][format] Resolve conflicts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c03189754755222ce29f4d17485c91532da4a8b", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/3c03189754755222ce29f4d17485c91532da4a8b", "committedDate": "2020-12-31T04:23:13Z", "message": "[FLINK-20773][format] Resolve conflicts"}, "afterCommit": {"oid": "5663475ec56efe4b84e6ae2e6cabd6d58db34bf2", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/5663475ec56efe4b84e6ae2e6cabd6d58db34bf2", "committedDate": "2020-12-31T04:58:05Z", "message": "[FLINK-20773][format] Support allow-unescaped-control-chars option for JSON format."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5663475ec56efe4b84e6ae2e6cabd6d58db34bf2", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/5663475ec56efe4b84e6ae2e6cabd6d58db34bf2", "committedDate": "2020-12-31T04:58:05Z", "message": "[FLINK-20773][format] Support allow-unescaped-control-chars option for JSON format."}, "afterCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/f5f641fcde2b6d33b89c640994fcb69cafaa00a8", "committedDate": "2020-12-31T05:02:34Z", "message": "[FLINK-20773][format] Support allow-unescaped-control-chars option for JSON format."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjc5NDQw", "url": "https://github.com/apache/flink/pull/14508#pullrequestreview-560279440", "createdAt": "2020-12-31T07:12:39Z", "commit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "state": "COMMENTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNzoxMjozOVrOIM6p4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwODo0Nzo1NlrOIM7qvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQxNDgxOQ==", "bodyText": "Please use a field to store the value of allowUnescapedControlChars because it determines the behaviour of this class. If one instances set this field false and another instances set this field true, the equal method should return false.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550414819", "createdAt": "2020-12-31T07:12:39Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "diffHunk": "@@ -90,6 +92,10 @@ public JsonRowDataDeserializationSchema(\n         if (hasDecimalType) {\n             objectMapper.enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);\n         }\n+        if (allowUnescapedControlChars) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQxNzI1Nw==", "bodyText": "Please add this option into the method optionalOptions", "url": "https://github.com/apache/flink/pull/14508#discussion_r550417257", "createdAt": "2020-12-31T07:27:10Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonFormatFactory.java", "diffHunk": "@@ -65,6 +66,7 @@\n         final boolean failOnMissingField = formatOptions.get(FAIL_ON_MISSING_FIELD);\n         final boolean ignoreParseErrors = formatOptions.get(IGNORE_PARSE_ERRORS);\n         TimestampFormat timestampOption = JsonOptions.getTimestampFormat(formatOptions);\n+        final boolean allowUnescapedControlChars = formatOptions.get(ALLOW_UNESCAPED_CONTROL_CHARS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQxODg4MQ==", "bodyText": "Currently the community is moving to the new descriptor api. It not recommended to add new feature for the depricated api.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550418881", "createdAt": "2020-12-31T07:37:19Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDeserializationSchema.java", "diffHunk": "@@ -114,18 +118,22 @@ private JsonRowDeserializationSchema(\n         if (hasDecimalType) {\n             objectMapper.enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);\n         }\n+        if (allowUnescapedControlChars) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMDU4Nw==", "bodyText": "Please use true as input . Because the default value of the option is false.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550420587", "createdAt": "2020-12-31T07:47:07Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonFormatFactoryTest.java", "diffHunk": "@@ -154,7 +168,8 @@ private void testSchemaDeserializationSchema(Map<String, String> options) {\n                         InternalTypeInfo.of(ROW_TYPE),\n                         false,\n                         true,\n-                        TimestampFormat.ISO_8601);\n+                        TimestampFormat.ISO_8601,\n+                        false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMTA2OQ==", "bodyText": "Maybe we can simplify to\nobjectMapper.configure(\n                    JsonReadFeature.ALLOW_UNESCAPED_CONTROL_CHARS.mappedFeature(), allowUnescapedControlChars);", "url": "https://github.com/apache/flink/pull/14508#discussion_r550421069", "createdAt": "2020-12-31T07:49:53Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "diffHunk": "@@ -90,6 +92,10 @@ public JsonRowDataDeserializationSchema(\n         if (hasDecimalType) {\n             objectMapper.enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);\n         }\n+        if (allowUnescapedControlChars) {\n+            objectMapper.configure(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMjkxNw==", "bodyText": "Currently the community is moving to the new descriptor api. It not recommended to add new feature for the depricated api.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550422917", "createdAt": "2020-12-31T08:01:14Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowFormatFactory.java", "diffHunk": "@@ -79,6 +79,14 @@ public JsonRowFormatFactory() {\n                                 schema.ignoreParseErrors();\n                             }\n                         });\n+        descriptorProperties", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyNDAzOA==", "bodyText": "Please don't add new feature for the old descriptor api.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550424038", "createdAt": "2020-12-31T08:07:48Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/table/descriptors/JsonValidator.java", "diffHunk": "@@ -56,6 +58,7 @@ public void validate(DescriptorProperties properties) {\n \n         properties.validateBoolean(FORMAT_FAIL_ON_MISSING_FIELD, true);\n         properties.validateBoolean(FORMAT_IGNORE_PARSE_ERRORS, true);\n+        properties.validateBoolean(FORMAT_ALLOW_UNESCAPED_CONTROL_CHARS, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyNjk3MA==", "bodyText": "I think we can add .expectErrorMessage(..) to also check the failed situation.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550426970", "createdAt": "2020-12-31T08:24:42Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java", "diffHunk": "@@ -700,7 +727,10 @@ private void testParseErrors(TestSpec spec) throws Exception {\n                                     \"Failed to deserialize JSON '{\\\"id\\\":\\\"2019-11-12T18:00:12+0800\\\"}'.\"),\n                     TestSpec.json(\"{\\\"id\\\":1,\\\"factor\\\":799.929496989092949698}\")\n                             .rowType(ROW(FIELD(\"id\", INT()), FIELD(\"factor\", DECIMAL(38, 18))))\n-                            .expect(Row.of(1, new BigDecimal(\"799.929496989092949698\"))));\n+                            .expect(Row.of(1, new BigDecimal(\"799.929496989092949698\"))),\n+                    TestSpec.json(\"{\\\"id\\\":\\\"\\tstring field\\\"}\")\n+                            .rowType(ROW(FIELD(\"id\", STRING())))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyODI1NA==", "bodyText": "Please use fields to store the value of the allowUnescapedControlChars and timestampFormat .", "url": "https://github.com/apache/flink/pull/14508#discussion_r550428254", "createdAt": "2020-12-31T08:31:21Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/canal/CanalJsonDeserializationSchema.java", "diffHunk": "@@ -105,7 +106,8 @@ private CanalJsonDeserializationSchema(\n                         false, // ignoreParseErrors already contains the functionality of\n                         // failOnMissingField\n                         ignoreParseErrors,\n-                        timestampFormat);\n+                        timestampFormat,\n+                        allowUnescapedControlChars);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQzMDAyMg==", "bodyText": "ditto", "url": "https://github.com/apache/flink/pull/14508#discussion_r550430022", "createdAt": "2020-12-31T08:40:54Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/debezium/DebeziumJsonDeserializationSchema.java", "diffHunk": "@@ -94,7 +94,8 @@ public DebeziumJsonDeserializationSchema(\n             TypeInformation<RowData> producedTypeInfo,\n             boolean schemaInclude,\n             boolean ignoreParseErrors,\n-            TimestampFormat timestampFormat) {\n+            TimestampFormat timestampFormat,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQzMDE2MQ==", "bodyText": "ditto", "url": "https://github.com/apache/flink/pull/14508#discussion_r550430161", "createdAt": "2020-12-31T08:41:37Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/maxwell/MaxwellJsonDeserializationSchema.java", "diffHunk": "@@ -70,7 +70,8 @@ public MaxwellJsonDeserializationSchema(\n             RowType rowType,\n             TypeInformation<RowData> resultTypeInfo,\n             boolean ignoreParseErrors,\n-            TimestampFormat timestampFormatOption) {\n+            TimestampFormat timestampFormatOption,\n+            boolean allowUnescapedControlChars) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQzMDczNw==", "bodyText": "Please add this option into the optionalOptions.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550430737", "createdAt": "2020-12-31T08:44:45Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/maxwell/MaxwellJsonFormatFactory.java", "diffHunk": "@@ -43,6 +43,7 @@\n import java.util.HashSet;\n import java.util.Set;\n \n+import static org.apache.flink.formats.json.maxwell.MaxwellJsonOptions.ALLOW_UNESCAPED_CONTROL_CHARS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQzMTE5Nw==", "bodyText": "use true to test.", "url": "https://github.com/apache/flink/pull/14508#discussion_r550431197", "createdAt": "2020-12-31T08:46:51Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/debezium/DebeziumJsonFormatFactoryTest.java", "diffHunk": "@@ -134,7 +135,8 @@ public void testSchemaIncludeOption() {\n                         InternalTypeInfo.of(PHYSICAL_DATA_TYPE.getLogicalType()),\n                         true,\n                         true,\n-                        TimestampFormat.ISO_8601);\n+                        TimestampFormat.ISO_8601,\n+                        false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQzMTQyMQ==", "bodyText": "use true .", "url": "https://github.com/apache/flink/pull/14508#discussion_r550431421", "createdAt": "2020-12-31T08:47:56Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/maxwell/MaxwellJsonFormatFactoryTest.java", "diffHunk": "@@ -67,7 +67,11 @@\n     public void testSeDeSchema() {\n         final MaxwellJsonDeserializationSchema expectedDeser =\n                 new MaxwellJsonDeserializationSchema(\n-                        ROW_TYPE, InternalTypeInfo.of(ROW_TYPE), true, TimestampFormat.ISO_8601);\n+                        ROW_TYPE,\n+                        InternalTypeInfo.of(ROW_TYPE),\n+                        true,\n+                        TimestampFormat.ISO_8601,\n+                        false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f641fcde2b6d33b89c640994fcb69cafaa00a8"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNzI4NzMz", "url": "https://github.com/apache/flink/pull/14508#pullrequestreview-561728733", "createdAt": "2021-01-05T11:53:16Z", "commit": {"oid": "c368105103600ccab7f5bf473f3e879ed2168c2c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMTo1MzoxNlrOIOUcjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMTo1MzoxNlrOIOUcjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg4NTk2NQ==", "bodyText": "Please add comments to explain when  ignore-parse-error will fail.", "url": "https://github.com/apache/flink/pull/14508#discussion_r551885965", "createdAt": "2021-01-05T11:53:16Z", "author": {"login": "fsk119"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "diffHunk": "@@ -85,11 +90,15 @@ public JsonRowDataDeserializationSchema(\n                 new JsonToRowDataConverters(failOnMissingField, ignoreParseErrors, timestampFormat)\n                         .createConverter(checkNotNull(rowType));\n         this.timestampFormat = timestampFormat;\n+        this.allowUnescapedControlChars = allowUnescapedControlChars;\n         boolean hasDecimalType =\n                 LogicalTypeChecks.hasNested(rowType, t -> t instanceof DecimalType);\n         if (hasDecimalType) {\n             objectMapper.enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);\n         }\n+        objectMapper.configure(\n+                JsonReadFeature.ALLOW_UNESCAPED_CONTROL_CHARS.mappedFeature(),\n+                allowUnescapedControlChars);\n     }\n \n     @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c368105103600ccab7f5bf473f3e879ed2168c2c"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNzY5Mjcx", "url": "https://github.com/apache/flink/pull/14508#pullrequestreview-561769271", "createdAt": "2021-01-05T13:02:29Z", "commit": {"oid": "6054e046fda054e8459cd7ff4ca7d4df3fa7b74c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzY0NjEx", "url": "https://github.com/apache/flink/pull/14508#pullrequestreview-562364611", "createdAt": "2021-01-06T07:01:15Z", "commit": {"oid": "6054e046fda054e8459cd7ff4ca7d4df3fa7b74c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNzowMToxNVrOIO0AJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNzoxNDo0MVrOIO0Osw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQwMjk4MQ==", "bodyText": "This comment is hard to understand. Why exception will be thrown when ignoreParseErrors is enabled.", "url": "https://github.com/apache/flink/pull/14508#discussion_r552402981", "createdAt": "2021-01-06T07:01:15Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "diffHunk": "@@ -85,16 +90,22 @@ public JsonRowDataDeserializationSchema(\n                 new JsonToRowDataConverters(failOnMissingField, ignoreParseErrors, timestampFormat)\n                         .createConverter(checkNotNull(rowType));\n         this.timestampFormat = timestampFormat;\n+        this.allowUnescapedControlChars = allowUnescapedControlChars;\n         boolean hasDecimalType =\n                 LogicalTypeChecks.hasNested(rowType, t -> t instanceof DecimalType);\n         if (hasDecimalType) {\n             objectMapper.enable(DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS);\n         }\n+        objectMapper.configure(\n+                JsonReadFeature.ALLOW_UNESCAPED_CONTROL_CHARS.mappedFeature(),\n+                allowUnescapedControlChars);\n     }\n \n     @Override\n     public RowData deserialize(byte[] message) throws IOException {\n         try {\n+            // it will return null if `ignoreParseErrors` is true\n+            // and when executing `objectMapper.readTree(message)` throw an exception.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6054e046fda054e8459cd7ff4ca7d4df3fa7b74c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQwNDg4OQ==", "bodyText": "I think for the control chars configuration, we can add a separate test method. This can avoid to touch so many TestSpecs. The TestSpec is used to verify the general deserializing and serializing.", "url": "https://github.com/apache/flink/pull/14508#discussion_r552404889", "createdAt": "2021-01-06T07:08:11Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/test/java/org/apache/flink/formats/json/JsonRowDataSerDeSchemaTest.java", "diffHunk": "@@ -692,15 +727,27 @@ private void testParseErrors(TestSpec spec) throws Exception {\n                                     \"Failed to deserialize JSON '{\\\"map\\\":{\\\"key1\\\":\\\"123\\\", \\\"key2\\\":\\\"abc\\\"}}'.\"),\n                     TestSpec.json(\"{\\\"id\\\":\\\"2019-11-12T18:00:12\\\"}\")\n                             .rowType(ROW(FIELD(\"id\", TIMESTAMP_WITH_LOCAL_TIME_ZONE(0))))\n+                            .expect(new Row(1))\n                             .expectErrorMessage(\n                                     \"Failed to deserialize JSON '{\\\"id\\\":\\\"2019-11-12T18:00:12\\\"}'.\"),\n                     TestSpec.json(\"{\\\"id\\\":\\\"2019-11-12T18:00:12+0800\\\"}\")\n                             .rowType(ROW(FIELD(\"id\", TIMESTAMP_WITH_LOCAL_TIME_ZONE(0))))\n+                            .expect(new Row(1))\n                             .expectErrorMessage(\n                                     \"Failed to deserialize JSON '{\\\"id\\\":\\\"2019-11-12T18:00:12+0800\\\"}'.\"),\n                     TestSpec.json(\"{\\\"id\\\":1,\\\"factor\\\":799.929496989092949698}\")\n                             .rowType(ROW(FIELD(\"id\", INT()), FIELD(\"factor\", DECIMAL(38, 18))))\n-                            .expect(Row.of(1, new BigDecimal(\"799.929496989092949698\"))));\n+                            .expect(Row.of(1, new BigDecimal(\"799.929496989092949698\"))),\n+                    TestSpec.json(\"{\\\"id\\\":\\\"\\tstring field\\\"}\")\n+                            .rowType(ROW(FIELD(\"id\", STRING())))\n+                            .expect(Row.of(\"\tstring field\")),\n+                    TestSpec.json(\"{\\\"id\\\":\\\"\\tstring field\\\"}\")\n+                            .rowType(ROW(FIELD(\"id\", STRING())))\n+                            .expect(null) // it will return null when deserializing the byte[] to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6054e046fda054e8459cd7ff4ca7d4df3fa7b74c"}, "originalPosition": 237}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQwNTY2Nw==", "bodyText": "The parameters are super large. Could you refactor it into builder pattern? Just like CsvRowDataDeserializationSchema. This can reduce the effort to add a new parameter in the future.", "url": "https://github.com/apache/flink/pull/14508#discussion_r552405667", "createdAt": "2021-01-06T07:11:04Z", "author": {"login": "wuchong"}, "path": "flink-formats/flink-json/src/main/java/org/apache/flink/formats/json/JsonRowDataDeserializationSchema.java", "diffHunk": "@@ -68,12 +69,16 @@\n     /** Timestamp format specification which is used to parse timestamp. */\n     private final TimestampFormat timestampFormat;\n \n+    /** Flag indicating whether to allow unescaped control chars in the data. */\n+    private final boolean allowUnescapedControlChars;\n+\n     public JsonRowDataDeserializationSchema(\n             RowType rowType,\n             TypeInformation<RowData> resultTypeInfo,\n             boolean failOnMissingField,\n             boolean ignoreParseErrors,\n-            TimestampFormat timestampFormat) {\n+            TimestampFormat timestampFormat,\n+            boolean allowUnescapedControlChars) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6054e046fda054e8459cd7ff4ca7d4df3fa7b74c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQwNjA4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  <td>\u662f\u5426\u5141\u8bb8\u6570\u636e\u4e2d\u5b58\u5728\u672a\u8f6c\u4e49\u7684\u63a7\u5236\u5b57\u7b26\uff08\u503c\u5c0f\u4e8e32\u7684ASCII\u5b57\u7b26\uff0c\u5305\u62ec\u5236\u8868\u7b26\u548c\u6362\u884c\u7b26\uff09\uff0c\u82e5\u4e0d\u5141\u8bb8\uff0c\u89e3\u6790\u65f6\u4f1a\u629b\u51fa\u5f02\u5e38`Illegal unquoted character...`</td>\n          \n          \n            \n                  <td>\u662f\u5426\u5141\u8bb8\u6570\u636e\u4e2d\u5b58\u5728\u672a\u8f6c\u4e49\u7684\u63a7\u5236\u5b57\u7b26\uff08\u503c\u5c0f\u4e8e32\u7684ASCII\u5b57\u7b26\uff0c\u5305\u62ec\u5236\u8868\u7b26\u548c\u6362\u884c\u7b26\uff09\uff0c\u82e5\u4e0d\u5141\u8bb8\uff0c\u89e3\u6790\u65f6\u4f1a\u629b\u51fa\u5f02\u5e38<code>Illegal unquoted character...</code></td>\n          \n      \n    \n    \n  \n\nWe have to use <code> tags in table HTML, otherwise, it can be recognized. Please update others too.", "url": "https://github.com/apache/flink/pull/14508#discussion_r552406084", "createdAt": "2021-01-06T07:12:36Z", "author": {"login": "wuchong"}, "path": "docs/dev/table/connectors/formats/maxwell.zh.md", "diffHunk": "@@ -187,6 +188,13 @@ Format Options\n       <td>String</td>\n       <td>Specify string literal to replace null key when <code>'maxwell-json.map-null-key.mode'</code> is LITERAL.</td>\n     </tr>\n+    <tr>\n+      <td><h5>maxwell-json.allow-unescaped-control-chars</h5></td>\n+      <td>\u9009\u586b</td>\n+      <td style=\"word-wrap: break-word;\">false</td>\n+      <td>Boolean</td>\n+      <td>\u662f\u5426\u5141\u8bb8\u6570\u636e\u4e2d\u5b58\u5728\u672a\u8f6c\u4e49\u7684\u63a7\u5236\u5b57\u7b26\uff08\u503c\u5c0f\u4e8e32\u7684ASCII\u5b57\u7b26\uff0c\u5305\u62ec\u5236\u8868\u7b26\u548c\u6362\u884c\u7b26\uff09\uff0c\u82e5\u4e0d\u5141\u8bb8\uff0c\u89e3\u6790\u65f6\u4f1a\u629b\u51fa\u5f02\u5e38`Illegal unquoted character...`</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6054e046fda054e8459cd7ff4ca7d4df3fa7b74c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQwNjcwNw==", "bodyText": "This is very confusing. Does it skip the message or return null or set field to null???", "url": "https://github.com/apache/flink/pull/14508#discussion_r552406707", "createdAt": "2021-01-06T07:14:41Z", "author": {"login": "wuchong"}, "path": "docs/dev/table/connectors/formats/maxwell.md", "diffHunk": "@@ -152,8 +152,9 @@ Format Options\n       <td>optional</td>\n       <td style=\"word-wrap: break-word;\">false</td>\n       <td>Boolean</td>\n-      <td>Skip fields and rows with parse errors instead of failing.\n-      Fields are set to null in case of errors.</td>\n+      <td>Skip parse errors instead of failing. \n+      This message will be ignored and returned <code>null</code> when deserializing the <code>byte[]</code> to the <code>JsonNode</code> fails.(e.g the message with invalid json format, the message contains unescaped control characters) \n+      Otherwise fields are set to null in case of errors.</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6054e046fda054e8459cd7ff4ca7d4df3fa7b74c"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b96157c0fc638ecdaf4a5c04c51e52275e926f0", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/1b96157c0fc638ecdaf4a5c04c51e52275e926f0", "committedDate": "2021-01-07T06:50:58Z", "message": "[FLINK-20773][json] Support to parse unescaped control chars in string node\n\nThis closes #14508"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3ffad9d58e5b8149a2e4da9e0ead2044170efb3", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/b3ffad9d58e5b8149a2e4da9e0ead2044170efb3", "committedDate": "2021-01-06T13:32:06Z", "message": "[FLINK-20773][format] Documents optimization."}, "afterCommit": {"oid": "1b96157c0fc638ecdaf4a5c04c51e52275e926f0", "author": {"user": null}, "url": "https://github.com/apache/flink/commit/1b96157c0fc638ecdaf4a5c04c51e52275e926f0", "committedDate": "2021-01-07T06:50:58Z", "message": "[FLINK-20773][json] Support to parse unescaped control chars in string node\n\nThis closes #14508"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzMjQ5NDE3", "url": "https://github.com/apache/flink/pull/14508#pullrequestreview-563249417", "createdAt": "2021-01-07T06:58:33Z", "commit": {"oid": "1b96157c0fc638ecdaf4a5c04c51e52275e926f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e309bd3363c2b7f9ad367e417dc57ff7c1f96fb", "author": {"user": {"login": "wuchong", "name": "Jark Wu"}}, "url": "https://github.com/apache/flink/commit/4e309bd3363c2b7f9ad367e417dc57ff7c1f96fb", "committedDate": "2021-01-07T10:02:15Z", "message": "fix checkstyle"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3460, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}