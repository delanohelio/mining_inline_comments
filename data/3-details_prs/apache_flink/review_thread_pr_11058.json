{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjE2ODUz", "number": 11058, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMjowMjoxMFrODexxvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMjowMjoxMFrODexxvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTk5NDIyOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/functions/sql/FlinkSqlOperatorTable.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMjowMjoxMFrOFoGcSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMzozMTo1N1rOFoI_YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5MjkwNw==", "bodyText": "Thanks for your contribution~\nCould you add a test for this, like the one you described in jira?", "url": "https://github.com/apache/flink/pull/11058#discussion_r377592907", "createdAt": "2020-02-11T12:02:10Z", "author": {"login": "libenchao"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/functions/sql/FlinkSqlOperatorTable.java", "diffHunk": "@@ -574,9 +574,9 @@ public SqlMonotonicity getMonotonicity(SqlOperatorBinding call) {\n \tpublic static final SqlFunction TO_BASE64 = new SqlFunction(\n \t\t\"TO_BASE64\",\n \t\tSqlKind.OTHER_FUNCTION,\n-\t\tVARCHAR_2000_NULLABLE,\n+\t\tReturnTypes.cascade(ReturnTypes.explicit(SqlTypeName.VARCHAR), SqlTypeTransforms.TO_NULLABLE),\n \t\tnull,\n-\t\tOperandTypes.ANY,\n+\t\tOperandTypes.family(SqlTypeFamily.STRING),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66514df47c1dcf00cb12be4f26a7ed26ee97da1f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5NTIzOQ==", "bodyText": "You can add tests to org.apache.flink.table.expressions.ScalarFunctionsTest#testToBase64\u3002", "url": "https://github.com/apache/flink/pull/11058#discussion_r377595239", "createdAt": "2020-02-11T12:08:13Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/functions/sql/FlinkSqlOperatorTable.java", "diffHunk": "@@ -574,9 +574,9 @@ public SqlMonotonicity getMonotonicity(SqlOperatorBinding call) {\n \tpublic static final SqlFunction TO_BASE64 = new SqlFunction(\n \t\t\"TO_BASE64\",\n \t\tSqlKind.OTHER_FUNCTION,\n-\t\tVARCHAR_2000_NULLABLE,\n+\t\tReturnTypes.cascade(ReturnTypes.explicit(SqlTypeName.VARCHAR), SqlTypeTransforms.TO_NULLABLE),\n \t\tnull,\n-\t\tOperandTypes.ANY,\n+\t\tOperandTypes.family(SqlTypeFamily.STRING),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5MjkwNw=="}, "originalCommit": {"oid": "66514df47c1dcf00cb12be4f26a7ed26ee97da1f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYxMDA0Ng==", "bodyText": "Thank you @wuchong @libenchao.  We change  from OperandTypes.ANY to OperandTypes.family(SqlTypeFamily.STRING). If user apply int type to to_base function. For the before, it will throw runtimeException. And for now, it will fail in validation.\nSo, if we should add a test, I think we can add it to org.apache.flink.table.planner.expressions.validation.ScalarFunctionsValidationTest to verify fail in validation stage. For the  org.apache.flink.table.expressions#testToBase64, it already has test to verify the correct arguments.\nis It right?", "url": "https://github.com/apache/flink/pull/11058#discussion_r377610046", "createdAt": "2020-02-11T12:42:02Z", "author": {"login": "wangxlong"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/functions/sql/FlinkSqlOperatorTable.java", "diffHunk": "@@ -574,9 +574,9 @@ public SqlMonotonicity getMonotonicity(SqlOperatorBinding call) {\n \tpublic static final SqlFunction TO_BASE64 = new SqlFunction(\n \t\t\"TO_BASE64\",\n \t\tSqlKind.OTHER_FUNCTION,\n-\t\tVARCHAR_2000_NULLABLE,\n+\t\tReturnTypes.cascade(ReturnTypes.explicit(SqlTypeName.VARCHAR), SqlTypeTransforms.TO_NULLABLE),\n \t\tnull,\n-\t\tOperandTypes.ANY,\n+\t\tOperandTypes.family(SqlTypeFamily.STRING),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5MjkwNw=="}, "originalCommit": {"oid": "66514df47c1dcf00cb12be4f26a7ed26ee97da1f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYxODIyNQ==", "bodyText": "You are right. I messed it with another fromBase64 PR.", "url": "https://github.com/apache/flink/pull/11058#discussion_r377618225", "createdAt": "2020-02-11T12:59:26Z", "author": {"login": "wuchong"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/functions/sql/FlinkSqlOperatorTable.java", "diffHunk": "@@ -574,9 +574,9 @@ public SqlMonotonicity getMonotonicity(SqlOperatorBinding call) {\n \tpublic static final SqlFunction TO_BASE64 = new SqlFunction(\n \t\t\"TO_BASE64\",\n \t\tSqlKind.OTHER_FUNCTION,\n-\t\tVARCHAR_2000_NULLABLE,\n+\t\tReturnTypes.cascade(ReturnTypes.explicit(SqlTypeName.VARCHAR), SqlTypeTransforms.TO_NULLABLE),\n \t\tnull,\n-\t\tOperandTypes.ANY,\n+\t\tOperandTypes.family(SqlTypeFamily.STRING),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5MjkwNw=="}, "originalCommit": {"oid": "66514df47c1dcf00cb12be4f26a7ed26ee97da1f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYzNDY1Nw==", "bodyText": "\ud83d\udc4c, Updated.", "url": "https://github.com/apache/flink/pull/11058#discussion_r377634657", "createdAt": "2020-02-11T13:31:57Z", "author": {"login": "wangxlong"}, "path": "flink-table/flink-table-planner-blink/src/main/java/org/apache/flink/table/planner/functions/sql/FlinkSqlOperatorTable.java", "diffHunk": "@@ -574,9 +574,9 @@ public SqlMonotonicity getMonotonicity(SqlOperatorBinding call) {\n \tpublic static final SqlFunction TO_BASE64 = new SqlFunction(\n \t\t\"TO_BASE64\",\n \t\tSqlKind.OTHER_FUNCTION,\n-\t\tVARCHAR_2000_NULLABLE,\n+\t\tReturnTypes.cascade(ReturnTypes.explicit(SqlTypeName.VARCHAR), SqlTypeTransforms.TO_NULLABLE),\n \t\tnull,\n-\t\tOperandTypes.ANY,\n+\t\tOperandTypes.family(SqlTypeFamily.STRING),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU5MjkwNw=="}, "originalCommit": {"oid": "66514df47c1dcf00cb12be4f26a7ed26ee97da1f"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1049, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}