{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NTYxMTM0", "number": 10779, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNTowODoxOVrODV_zXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNTowODoxOVrODV_zXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzkyMDMxOnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/StreamTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNTowODoxOVrOFagEMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNTowODoxOVrOFagEMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMzMjY1OA==", "bodyText": "We could add a simple test coverage for this, for example by extending SourceStreamTaskTest#testInterruptedNotSwallowed with a boolean parameter, controlling whether the exception is thrown wrapped or not (similar pattern as  SourceStreamTaskTest#testCancellationWithSourceBlockedOnLock(boolean, boolean).", "url": "https://github.com/apache/flink/pull/10779#discussion_r363332658", "createdAt": "2020-01-06T15:08:19Z", "author": {"login": "pnowojski"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/tasks/StreamTask.java", "diffHunk": "@@ -484,27 +484,15 @@ public final void invoke() throws Exception {\n \n \tprivate void runMailboxLoop() throws Exception {\n \t\ttry {\n-\t\t\ttry {\n-\t\t\t\tmailboxProcessor.runMailboxLoop();\n-\t\t\t}\n-\t\t\tcatch (WrappingRuntimeException wrappingException) {\n-\t\t\t\tThrowable unwrapped = wrappingException.unwrap();\n-\t\t\t\tif (unwrapped instanceof Exception) {\n-\t\t\t\t\tthrow (Exception) unwrapped;\n-\t\t\t\t}\n-\t\t\t\telse {\n-\t\t\t\t\tthrow wrappingException;\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\tcatch (InterruptedException e) {\n-\t\t\tif (!canceled) {\n-\t\t\t\tThread.currentThread().interrupt();\n-\t\t\t\tthrow e;\n-\t\t\t}\n+\t\t\tmailboxProcessor.runMailboxLoop();\n \t\t}\n \t\tcatch (Exception e) {\n-\t\t\tif (canceled) {\n+\t\t\tif (ExceptionUtils.findThrowable(e, InterruptedException.class).isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87a6ea87ad6acf4f06363912ce28b6b87eb4f1f7"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1290, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}