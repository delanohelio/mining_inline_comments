{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0ODg3MDA3", "number": 13667, "title": "[FLINK-19679] Deduplicate code between CheckpointBarrierUnaligner and CheckpointBarrierAligner", "bodyText": "This PR deduplicates code between CheckpointBarrierUnaligner, CheckpointBarrierAligner and AlternatingCheckpointBarrierHandler\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): (yes / no)\nThe public API, i.e., is any changed class annotated with @Public(Evolving): (yes / no)\nThe serializers: (yes / no / don't know)\nThe runtime per-record code paths (performance sensitive): (yes / no / don't know)\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper: (yes / no / don't know)\nThe S3 file system connector: (yes / no / don't know)\n\nDocumentation\n\nDoes this pull request introduce a new feature? (yes / no)\nIf yes, how is the feature documented? (not applicable / docs / JavaDocs / not documented)", "createdAt": "2020-10-16T14:22:04Z", "url": "https://github.com/apache/flink/pull/13667", "merged": true, "mergeCommit": {"oid": "79316f87b69abd00d846fd1678f1be85875b6d70"}, "closed": true, "closedAt": "2020-10-20T16:56:16Z", "author": {"login": "pnowojski"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTHnqLgBqjM4ODY4MTA3MDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUYgkcgFqTUxMjY4NzkzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cbca395729de539e4ee0d4f76056b09b09f3c935", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/cbca395729de539e4ee0d4f76056b09b09f3c935", "committedDate": "2020-10-16T14:19:43Z", "message": "[FLINK-19679][task] Migrate AlternatingCheckpointBarrierHandler to the generic SingleCheckpointBarrierHandler"}, "afterCommit": {"oid": "0db61dd630af893d1cdcfef6b654ab09c478c53b", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/0db61dd630af893d1cdcfef6b654ab09c478c53b", "committedDate": "2020-10-16T14:53:33Z", "message": "[FLINK-19679][task] Migrate AlternatingCheckpointBarrierHandler to the generic SingleCheckpointBarrierHandler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0db61dd630af893d1cdcfef6b654ab09c478c53b", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/0db61dd630af893d1cdcfef6b654ab09c478c53b", "committedDate": "2020-10-16T14:53:33Z", "message": "[FLINK-19679][task] Migrate AlternatingCheckpointBarrierHandler to the generic SingleCheckpointBarrierHandler"}, "afterCommit": {"oid": "5ab532006ccbfb5632b4ad60053203a5e5dea3a5", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/5ab532006ccbfb5632b4ad60053203a5e5dea3a5", "committedDate": "2020-10-16T15:00:30Z", "message": "[FLINK-19679][task] Migrate AlternatingCheckpointBarrierHandler to the generic SingleCheckpointBarrierHandler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ab532006ccbfb5632b4ad60053203a5e5dea3a5", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/5ab532006ccbfb5632b4ad60053203a5e5dea3a5", "committedDate": "2020-10-16T15:00:30Z", "message": "[FLINK-19679][task] Migrate AlternatingCheckpointBarrierHandler to the generic SingleCheckpointBarrierHandler"}, "afterCommit": {"oid": "de848b220414a40d24a3b6ec2656dcbe1ad30f3a", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/de848b220414a40d24a3b6ec2656dcbe1ad30f3a", "committedDate": "2020-10-17T08:58:39Z", "message": "[FLINK-19679][task] Migrate AlternatingCheckpointBarrierHandler to the generic SingleCheckpointBarrierHandler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTA0Nzcy", "url": "https://github.com/apache/flink/pull/13667#pullrequestreview-512104772", "createdAt": "2020-10-19T19:46:51Z", "commit": {"oid": "de848b220414a40d24a3b6ec2656dcbe1ad30f3a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo0Njo1MVrOHkfDOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1Nzo0M1rOHkfaPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAxOTUxNA==", "bodyText": "Is protected visibility intentional?\nI don't see any descendants and would prefer to have them private therefore.\n(ditto: all fields)", "url": "https://github.com/apache/flink/pull/13667#discussion_r508019514", "createdAt": "2020-10-19T19:46:51Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/SingleCheckpointBarrierHandler.java", "diffHunk": "@@ -39,57 +39,83 @@\n import java.util.Arrays;\n import java.util.concurrent.CompletableFuture;\n \n+import static org.apache.flink.runtime.checkpoint.CheckpointFailureReason.CHECKPOINT_DECLINED_INPUT_END_OF_STREAM;\n import static org.apache.flink.runtime.checkpoint.CheckpointFailureReason.CHECKPOINT_DECLINED_SUBSUMED;\n \n /**\n- * {@link CheckpointBarrierUnaligner} is used for triggering checkpoint while reading the first barrier\n- * and keeping track of the number of received barriers and consumed barriers.\n+ * {@link SingleCheckpointBarrierHandler} is used for triggering checkpoint while reading the first barrier\n+ * and keeping track of the number of received barriers and consumed barriers. It can handle/track\n+ * just single checkpoint at a time. The behaviour when to actually trigger the checkpoint and\n+ * what the {@link CheckpointableInput} should do is controlled by {@link CheckpointBarrierBehaviourController}.\n  */\n @Internal\n @NotThreadSafe\n-public class CheckpointBarrierUnaligner extends CheckpointBarrierHandler {\n+public class SingleCheckpointBarrierHandler extends CheckpointBarrierHandler {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(CheckpointBarrierUnaligner.class);\n+\tprivate static final Logger LOG = LoggerFactory.getLogger(SingleCheckpointBarrierHandler.class);\n \n-\tprivate final String taskName;\n+\tprotected final String taskName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de848b220414a40d24a3b6ec2656dcbe1ad30f3a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyMDc2Mw==", "bodyText": "This method is not used anymore (now this class uses controller.abortPendingCheckpoint)\nso the method can be deleted.", "url": "https://github.com/apache/flink/pull/13667#discussion_r508020763", "createdAt": "2020-10-19T19:49:21Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/SingleCheckpointBarrierHandler.java", "diffHunk": "@@ -39,57 +39,83 @@\n import java.util.Arrays;\n import java.util.concurrent.CompletableFuture;\n \n+import static org.apache.flink.runtime.checkpoint.CheckpointFailureReason.CHECKPOINT_DECLINED_INPUT_END_OF_STREAM;\n import static org.apache.flink.runtime.checkpoint.CheckpointFailureReason.CHECKPOINT_DECLINED_SUBSUMED;\n \n /**\n- * {@link CheckpointBarrierUnaligner} is used for triggering checkpoint while reading the first barrier\n- * and keeping track of the number of received barriers and consumed barriers.\n+ * {@link SingleCheckpointBarrierHandler} is used for triggering checkpoint while reading the first barrier\n+ * and keeping track of the number of received barriers and consumed barriers. It can handle/track\n+ * just single checkpoint at a time. The behaviour when to actually trigger the checkpoint and\n+ * what the {@link CheckpointableInput} should do is controlled by {@link CheckpointBarrierBehaviourController}.\n  */\n @Internal\n @NotThreadSafe\n-public class CheckpointBarrierUnaligner extends CheckpointBarrierHandler {\n+public class SingleCheckpointBarrierHandler extends CheckpointBarrierHandler {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(CheckpointBarrierUnaligner.class);\n+\tprivate static final Logger LOG = LoggerFactory.getLogger(SingleCheckpointBarrierHandler.class);\n \n-\tprivate final String taskName;\n+\tprotected final String taskName;\n \n-\tprivate int numBarriersReceived;\n+\tprotected final CheckpointBarrierBehaviourController controller;\n \n-\t/** A future indicating that all barriers of the a given checkpoint have been read. */\n-\tprivate CompletableFuture<Void> allBarriersReceivedFuture = FutureUtils.completedVoidFuture();\n+\tprotected int numBarriersReceived;\n \n \t/**\n \t * The checkpoint id to guarantee that we would trigger only one checkpoint when reading the same barrier from\n \t * different channels.\n \t */\n-\tprivate long currentCheckpointId = -1L;\n+\tprotected long currentCheckpointId = -1L;\n \n-\tprivate int numOpenChannels;\n+\tprotected int numOpenChannels;\n \n-\tprivate final SubtaskCheckpointCoordinator checkpointCoordinator;\n+\tprotected CompletableFuture<Void> allBarriersReceivedFuture = FutureUtils.completedVoidFuture();\n \n-\tprivate final CheckpointableInput[] inputs;\n-\n-\tCheckpointBarrierUnaligner(\n+\t@VisibleForTesting\n+\tstatic SingleCheckpointBarrierHandler createUnalignedCheckpointBarrierHandler(\n \t\t\tSubtaskCheckpointCoordinator checkpointCoordinator,\n \t\t\tString taskName,\n \t\t\tAbstractInvokable toNotifyOnCheckpoint,\n \t\t\tCheckpointableInput... inputs) {\n+\t\treturn new SingleCheckpointBarrierHandler(\n+\t\t\ttaskName,\n+\t\t\ttoNotifyOnCheckpoint,\n+\t\t\t(int) Arrays.stream(inputs).flatMap(gate -> gate.getChannelInfos().stream()).count(),\n+\t\t\tnew UnalignedController(checkpointCoordinator, inputs));\n+\t}\n+\n+\tSingleCheckpointBarrierHandler(\n+\t\t\tString taskName,\n+\t\t\tAbstractInvokable toNotifyOnCheckpoint,\n+\t\t\tint numOpenChannels,\n+\t\t\tCheckpointBarrierBehaviourController controller) {\n \t\tsuper(toNotifyOnCheckpoint);\n \n \t\tthis.taskName = taskName;\n-\t\tthis.inputs = inputs;\n-\t\tnumOpenChannels = (int) Arrays.stream(inputs).flatMap(gate -> gate.getChannelInfos().stream()).count();\n-\t\tthis.checkpointCoordinator = checkpointCoordinator;\n+\t\tthis.numOpenChannels = numOpenChannels;\n+\t\tthis.controller = controller;\n+\t}\n+\n+\t@Override\n+\tprotected void abortPendingCheckpoint(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de848b220414a40d24a3b6ec2656dcbe1ad30f3a"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyMzMzMA==", "bodyText": "Returning boolean from these two (first/last) methods seem unclear and error-prone to me.\nHow about\n\nintroducing enum CheckpointTriggerStrategy { ON_FIRST_BARRIER, ON_LAST_BARRIER }\na method CheckpointBarrierBehaviourController.getTriggerStrategy\nreturning void from first/last\n?", "url": "https://github.com/apache/flink/pull/13667#discussion_r508023330", "createdAt": "2020-10-19T19:54:09Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointBarrierBehaviourController.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.runtime.io;\n+\n+import org.apache.flink.annotation.Internal;\n+import org.apache.flink.runtime.checkpoint.CheckpointException;\n+import org.apache.flink.runtime.checkpoint.channel.InputChannelInfo;\n+import org.apache.flink.runtime.io.network.api.CheckpointBarrier;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Controls when the checkpoint should be actually triggered.\n+ */\n+@Internal\n+public interface CheckpointBarrierBehaviourController {\n+\n+\tvoid barrierReceived(InputChannelInfo channelInfo, CheckpointBarrier barrier);\n+\n+\t/**\n+\t * @return {@code true} if checkpoint should be triggered.\n+\t */\n+\tboolean firstBarrierReceived(InputChannelInfo channelInfo, CheckpointBarrier barrier) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de848b220414a40d24a3b6ec2656dcbe1ad30f3a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyNTQwNQ==", "bodyText": "The relation between lastBarrierReceived and barrierReceived is not very clear: whether barrierReceived will be called for the last barrier and in which order. The same for firstBarrierReceived.\nHow about renaming to postProcessLastBarrier (and preProcessFirstBarrier)?", "url": "https://github.com/apache/flink/pull/13667#discussion_r508025405", "createdAt": "2020-10-19T19:57:43Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/runtime/io/CheckpointBarrierBehaviourController.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.flink.streaming.runtime.io;\n+\n+import org.apache.flink.annotation.Internal;\n+import org.apache.flink.runtime.checkpoint.CheckpointException;\n+import org.apache.flink.runtime.checkpoint.channel.InputChannelInfo;\n+import org.apache.flink.runtime.io.network.api.CheckpointBarrier;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Controls when the checkpoint should be actually triggered.\n+ */\n+@Internal\n+public interface CheckpointBarrierBehaviourController {\n+\n+\tvoid barrierReceived(InputChannelInfo channelInfo, CheckpointBarrier barrier);\n+\n+\t/**\n+\t * @return {@code true} if checkpoint should be triggered.\n+\t */\n+\tboolean firstBarrierReceived(InputChannelInfo channelInfo, CheckpointBarrier barrier) throws IOException;\n+\n+\t/**\n+\t * @return {@code true} if checkpoint should be triggered.\n+\t */\n+\tboolean lastBarrierReceived(InputChannelInfo channelInfo, CheckpointBarrier barrier) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de848b220414a40d24a3b6ec2656dcbe1ad30f3a"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9ca2197ffa4c454cc1acaedbcfca0ac996b3ea5", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/a9ca2197ffa4c454cc1acaedbcfca0ac996b3ea5", "committedDate": "2020-10-20T10:26:27Z", "message": "[hotfix][task] Drop CheckpointBarrierHandler#isBlocked method\n\nThis method is only used to provide a checkState, that's not necessary while it will complicate\nrefactoring in the next step."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42ecbc7f1cff9d498a7ff9f200f6d9976fb29ef1", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/42ecbc7f1cff9d498a7ff9f200f6d9976fb29ef1", "committedDate": "2020-10-20T10:26:28Z", "message": "[hotfix][test] Fix measuring alignmentDurationNanosMax\n\nPreviously the expected alignmentDurationNanosMax was calculated before checking\nthe actual alignmentDurationNanos. This meant that during a pending checkpoint\nthe time for alignmentDurationNanos was still ticking, and the actual value\ncould exceed the incorrectly calucated expected alignmentDurationNanosMax."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de848b220414a40d24a3b6ec2656dcbe1ad30f3a", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/de848b220414a40d24a3b6ec2656dcbe1ad30f3a", "committedDate": "2020-10-17T08:58:39Z", "message": "[FLINK-19679][task] Migrate AlternatingCheckpointBarrierHandler to the generic SingleCheckpointBarrierHandler"}, "afterCommit": {"oid": "5e18a9c52d248270d29ccd243b74f088a7669146", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/5e18a9c52d248270d29ccd243b74f088a7669146", "committedDate": "2020-10-20T10:43:15Z", "message": "[FLINK-19679][task] Migrate AlternatingCheckpointBarrierHandler to the generic SingleCheckpointBarrierHandler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5e18a9c52d248270d29ccd243b74f088a7669146", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/5e18a9c52d248270d29ccd243b74f088a7669146", "committedDate": "2020-10-20T10:43:15Z", "message": "[FLINK-19679][task] Migrate AlternatingCheckpointBarrierHandler to the generic SingleCheckpointBarrierHandler"}, "afterCommit": {"oid": "307a119262b4235ee3287091a8b0c28a0b933d93", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/307a119262b4235ee3287091a8b0c28a0b933d93", "committedDate": "2020-10-20T10:47:32Z", "message": "[FLINK-19679][task] Migrate AlternatingCheckpointBarrierHandler to the generic SingleCheckpointBarrierHandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "654a97708aeb6332f913c578ed8f5fd45f0dc86a", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/654a97708aeb6332f913c578ed8f5fd45f0dc86a", "committedDate": "2020-10-20T10:48:58Z", "message": "[FLINK-19679][task] Replace CheckpointBarrierUnaligner with more generic SingleCheckpointBarrierHandler\n\nUnalignedController provides unaligned checkpoints functionalities."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f077af6cf38ce5baebac21d40d07472e5c34e0d8", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/f077af6cf38ce5baebac21d40d07472e5c34e0d8", "committedDate": "2020-10-20T10:48:59Z", "message": "[FLINK-19679][task] Migrate CheckpointBarrierAligner to the generic SingleCheckpointBarrierHandler\n\nAlignedController replaces the custom logic of CheckpointBarrierAligner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4efb03da1c6505ce934103e293ac00b1ab919f2", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/b4efb03da1c6505ce934103e293ac00b1ab919f2", "committedDate": "2020-10-20T10:48:59Z", "message": "[hotfix][test] Remove unused code in AlternatingCheckpointBarrierHandlerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9be8ddb9eb5c86dc7a1d46132c43c2f62007178e", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/9be8ddb9eb5c86dc7a1d46132c43c2f62007178e", "committedDate": "2020-10-20T10:48:59Z", "message": "[FLINK-19679][task] Migrate AlternatingCheckpointBarrierHandler to the generic SingleCheckpointBarrierHandler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "307a119262b4235ee3287091a8b0c28a0b933d93", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/307a119262b4235ee3287091a8b0c28a0b933d93", "committedDate": "2020-10-20T10:47:32Z", "message": "[FLINK-19679][task] Migrate AlternatingCheckpointBarrierHandler to the generic SingleCheckpointBarrierHandler"}, "afterCommit": {"oid": "9be8ddb9eb5c86dc7a1d46132c43c2f62007178e", "author": {"user": {"login": "pnowojski", "name": "Piotr Nowojski"}}, "url": "https://github.com/apache/flink/commit/9be8ddb9eb5c86dc7a1d46132c43c2f62007178e", "committedDate": "2020-10-20T10:48:59Z", "message": "[FLINK-19679][task] Migrate AlternatingCheckpointBarrierHandler to the generic SingleCheckpointBarrierHandler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNjg3OTMx", "url": "https://github.com/apache/flink/pull/13667#pullrequestreview-512687931", "createdAt": "2020-10-20T13:09:01Z", "commit": {"oid": "9be8ddb9eb5c86dc7a1d46132c43c2f62007178e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3357, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}