{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNzEwOTgw", "number": 12355, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo1ODo1OVrOECEHhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo1OTo0M1rOECEIpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjAwMDcxOnYy", "diffSide": "RIGHT", "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/CliClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo1ODo1OVrOGeSmyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwODozNDo1MVrOGe7fww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxNTMwNA==", "bodyText": "We may never run into this code branch now ~", "url": "https://github.com/apache/flink/pull/12355#discussion_r434415304", "createdAt": "2020-06-03T08:58:59Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/CliClient.java", "diffHunk": "@@ -253,7 +253,13 @@ public boolean submitUpdate(String statement) {\n \t// --------------------------------------------------------------------------------------------\n \n \tprivate Optional<SqlCommandCall> parseCommand(String line) {\n-\t\tfinal Optional<SqlCommandCall> parsedLine = SqlCommandParser.parse(executor.getSqlParser(sessionId), line);\n+\t\tfinal Optional<SqlCommandCall> parsedLine;\n+\t\ttry {\n+\t\t\tparsedLine = SqlCommandParser.parse(executor.getSqlParser(sessionId), line);\n+\t\t} catch (SqlExecutionException e) {\n+\t\t\tprintExecutionException(e);\n+\t\t\treturn Optional.empty();\n+\t\t}\n \t\tif (!parsedLine.isPresent()) {\n \t\t\tprintError(CliStrings.MESSAGE_UNKNOWN_SQL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18758d007d909ad3427c384140bf36a71e06ea1b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyNDM0MQ==", "bodyText": "I think we should keep this. because when TableEnvironment supports new operation but forgets to update SqlCommandParser, we should print error here or throw exception in SqlCommandParser", "url": "https://github.com/apache/flink/pull/12355#discussion_r434424341", "createdAt": "2020-06-03T09:13:51Z", "author": {"login": "godfreyhe"}, "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/CliClient.java", "diffHunk": "@@ -253,7 +253,13 @@ public boolean submitUpdate(String statement) {\n \t// --------------------------------------------------------------------------------------------\n \n \tprivate Optional<SqlCommandCall> parseCommand(String line) {\n-\t\tfinal Optional<SqlCommandCall> parsedLine = SqlCommandParser.parse(executor.getSqlParser(sessionId), line);\n+\t\tfinal Optional<SqlCommandCall> parsedLine;\n+\t\ttry {\n+\t\t\tparsedLine = SqlCommandParser.parse(executor.getSqlParser(sessionId), line);\n+\t\t} catch (SqlExecutionException e) {\n+\t\t\tprintExecutionException(e);\n+\t\t\treturn Optional.empty();\n+\t\t}\n \t\tif (!parsedLine.isPresent()) {\n \t\t\tprintError(CliStrings.MESSAGE_UNKNOWN_SQL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxNTMwNA=="}, "originalCommit": {"oid": "18758d007d909ad3427c384140bf36a71e06ea1b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA4NTI1MQ==", "bodyText": "I think we should keep this. because when TableEnvironment supports new operation but forgets to update SqlCommandParser\n\nI think we should never do this, either to refactor the code to keep SQL_CLI synced with table environment or keep the logic clean.", "url": "https://github.com/apache/flink/pull/12355#discussion_r435085251", "createdAt": "2020-06-04T08:34:51Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/CliClient.java", "diffHunk": "@@ -253,7 +253,13 @@ public boolean submitUpdate(String statement) {\n \t// --------------------------------------------------------------------------------------------\n \n \tprivate Optional<SqlCommandCall> parseCommand(String line) {\n-\t\tfinal Optional<SqlCommandCall> parsedLine = SqlCommandParser.parse(executor.getSqlParser(sessionId), line);\n+\t\tfinal Optional<SqlCommandCall> parsedLine;\n+\t\ttry {\n+\t\t\tparsedLine = SqlCommandParser.parse(executor.getSqlParser(sessionId), line);\n+\t\t} catch (SqlExecutionException e) {\n+\t\t\tprintExecutionException(e);\n+\t\t\treturn Optional.empty();\n+\t\t}\n \t\tif (!parsedLine.isPresent()) {\n \t\t\tprintError(CliStrings.MESSAGE_UNKNOWN_SQL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxNTMwNA=="}, "originalCommit": {"oid": "18758d007d909ad3427c384140bf36a71e06ea1b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjAwMzU5OnYy", "diffSide": "RIGHT", "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/SqlCommandParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo1OTo0M1rOGeSonA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwODo1OTo0M1rOGeSonA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQxNTc3Mg==", "bodyText": "Add some comment to explain why to match the SELECT and INSERT keyword explicitly.", "url": "https://github.com/apache/flink/pull/12355#discussion_r434415772", "createdAt": "2020-06-03T08:59:43Z", "author": {"login": "danny0405"}, "path": "flink-table/flink-sql-client/src/main/java/org/apache/flink/table/client/cli/SqlCommandParser.java", "diffHunk": "@@ -253,8 +247,10 @@ private SqlCommandParser() {\n \t\t// supports both `explain xx` and `explain plan for xx` now\n \t\t// TODO should keep `explain xx` ?\n \t\tEXPLAIN(\n-\t\t\t\"EXPLAIN\\\\s+(.*)\",\n-\t\t\tSINGLE_OPERAND),\n+\t\t\t\"EXPLAIN\\\\s+(SELECT|INSERT)\\\\s+(.*)\",\n+\t\t\t(operands) -> {\n+\t\t\t\treturn Optional.of(new String[] { operands[0], operands[1] });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18758d007d909ad3427c384140bf36a71e06ea1b"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4474, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}