{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NzE2ODAw", "number": 13560, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoxMDoxNVrOEr8joA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODo0MDo1OFrOEr9QHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTE2Mzg0OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/messages/webmonitor/JobDetails.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoxMDoxNVrOHe_g7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoxMDoxNVrOHe_g7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI1OTk0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tAccessExecutionVertex[] vertices = ejv.getTaskVertices();\n          \n          \n            \n            \t\t\tAccessExecutionVertex[] taskVertices = ejv.getTaskVertices();\n          \n      \n    \n    \n  \n\nCould we do this renaming to improve the readability since we're dealing with different types of vertices in this code segment?", "url": "https://github.com/apache/flink/pull/13560#discussion_r502259949", "createdAt": "2020-10-09T08:10:15Z", "author": {"login": "XComp"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/messages/webmonitor/JobDetails.java", "diffHunk": "@@ -98,6 +101,42 @@ public JobDetails(\n \t\tthis.tasksPerState = checkNotNull(tasksPerState);\n \t\tthis.numTasks = numTasks;\n \t}\n+\n+\tpublic static JobDetails createDetailsForJob(AccessExecutionGraph job) {\n+\t\tJobStatus status = job.getState();\n+\n+\t\tlong started = job.getStatusTimestamp(JobStatus.INITIALIZING);\n+\t\tlong finished = status.isGloballyTerminalState() ? job.getStatusTimestamp(status) : -1L;\n+\t\tlong duration = (finished >= 0L ? finished : System.currentTimeMillis()) - started;\n+\n+\t\tint[] countsPerStatus = new int[ExecutionState.values().length];\n+\t\tlong lastChanged = 0;\n+\t\tint numTotalTasks = 0;\n+\n+\t\tfor (AccessExecutionJobVertex ejv : job.getVerticesTopologically()) {\n+\t\t\tAccessExecutionVertex[] vertices = ejv.getTaskVertices();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5dffb7725d818aba28ff3e1a7a6ab34f3e1099"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTE2NTY3OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/messages/webmonitor/JobDetails.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoxMDo0N1rOHe_iGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoxMDo0N1rOHe_iGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2MDI0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tfor (AccessExecutionVertex vertex : vertices) {\n          \n          \n            \n            \t\t\tfor (AccessExecutionVertex taskVertex : taskVertices) {\n          \n      \n    \n    \n  \n\nSame here with the vertex variable.", "url": "https://github.com/apache/flink/pull/13560#discussion_r502260249", "createdAt": "2020-10-09T08:10:47Z", "author": {"login": "XComp"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/messages/webmonitor/JobDetails.java", "diffHunk": "@@ -98,6 +101,42 @@ public JobDetails(\n \t\tthis.tasksPerState = checkNotNull(tasksPerState);\n \t\tthis.numTasks = numTasks;\n \t}\n+\n+\tpublic static JobDetails createDetailsForJob(AccessExecutionGraph job) {\n+\t\tJobStatus status = job.getState();\n+\n+\t\tlong started = job.getStatusTimestamp(JobStatus.INITIALIZING);\n+\t\tlong finished = status.isGloballyTerminalState() ? job.getStatusTimestamp(status) : -1L;\n+\t\tlong duration = (finished >= 0L ? finished : System.currentTimeMillis()) - started;\n+\n+\t\tint[] countsPerStatus = new int[ExecutionState.values().length];\n+\t\tlong lastChanged = 0;\n+\t\tint numTotalTasks = 0;\n+\n+\t\tfor (AccessExecutionJobVertex ejv : job.getVerticesTopologically()) {\n+\t\t\tAccessExecutionVertex[] vertices = ejv.getTaskVertices();\n+\t\t\tnumTotalTasks += vertices.length;\n+\n+\t\t\tfor (AccessExecutionVertex vertex : vertices) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5dffb7725d818aba28ff3e1a7a6ab34f3e1099"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTI3MTI2OnYy", "diffSide": "RIGHT", "path": "flink-runtime-web/src/test/java/org/apache/flink/runtime/webmonitor/WebFrontendITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODozOToyN1rOHfAh6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODozOToyN1rOHfAh6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI3NjU4NA==", "bodyText": "I know it's a minor thing, but the extra line is not necessary here.", "url": "https://github.com/apache/flink/pull/13560#discussion_r502276584", "createdAt": "2020-10-09T08:39:27Z", "author": {"login": "XComp"}, "path": "flink-runtime-web/src/test/java/org/apache/flink/runtime/webmonitor/WebFrontendITCase.java", "diffHunk": "@@ -303,6 +303,55 @@ public void testCancel() throws Exception {\n \t\tBlockingInvokable.reset();\n \t}\n \n+\t/**\n+\t * See FLINK-19518. This test ensures that the /jobs/overview handler shows a duration != 0.\n+\t *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5dffb7725d818aba28ff3e1a7a6ab34f3e1099"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTI3MzM2OnYy", "diffSide": "RIGHT", "path": "flink-runtime-web/src/test/java/org/apache/flink/runtime/webmonitor/WebFrontendITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODo0MDowMFrOHfAjQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODo0MDowMFrOHfAjQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI3NjkzMA==", "bodyText": "The deadline variable is never used. Are we missing an assert in this test or is this variable obsolete?", "url": "https://github.com/apache/flink/pull/13560#discussion_r502276930", "createdAt": "2020-10-09T08:40:00Z", "author": {"login": "XComp"}, "path": "flink-runtime-web/src/test/java/org/apache/flink/runtime/webmonitor/WebFrontendITCase.java", "diffHunk": "@@ -303,6 +303,55 @@ public void testCancel() throws Exception {\n \t\tBlockingInvokable.reset();\n \t}\n \n+\t/**\n+\t * See FLINK-19518. This test ensures that the /jobs/overview handler shows a duration != 0.\n+\t *\n+\t */\n+\t@Test\n+\tpublic void testJobOverviewHandler() throws Exception {\n+\t\t// this only works if there is no active job at this point\n+\t\tassertTrue(getRunningJobs(CLUSTER.getClusterClient()).isEmpty());\n+\n+\t\t// Create a task\n+\t\tfinal JobVertex sender = new JobVertex(\"Sender\");\n+\t\tsender.setParallelism(2);\n+\t\tsender.setInvokableClass(BlockingInvokable.class);\n+\n+\t\tfinal JobGraph jobGraph = new JobGraph(\"Stoppable streaming test job\", sender);\n+\t\tfinal JobID jid = jobGraph.getJobID();\n+\n+\t\tClusterClient<?> clusterClient = CLUSTER.getClusterClient();\n+\t\tclusterClient.submitJob(jobGraph).get();\n+\n+\t\t// wait for job to show up\n+\t\twhile (getRunningJobs(CLUSTER.getClusterClient()).isEmpty()) {\n+\t\t\tThread.sleep(10);\n+\t\t}\n+\n+\t\t// wait for tasks to be properly running\n+\t\tBlockingInvokable.latch.await();\n+\n+\t\tfinal Duration testTimeout = Duration.ofMinutes(2);\n+\t\tfinal LocalTime deadline = LocalTime.now().plus(testTimeout);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5dffb7725d818aba28ff3e1a7a6ab34f3e1099"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTI3NzczOnYy", "diffSide": "RIGHT", "path": "flink-runtime-web/src/test/java/org/apache/flink/runtime/webmonitor/WebFrontendITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODo0MDo1OFrOHfAlxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODo0MDo1OFrOHfAlxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI3NzU3Mg==", "bodyText": "jid is never used and can be removed.", "url": "https://github.com/apache/flink/pull/13560#discussion_r502277572", "createdAt": "2020-10-09T08:40:58Z", "author": {"login": "XComp"}, "path": "flink-runtime-web/src/test/java/org/apache/flink/runtime/webmonitor/WebFrontendITCase.java", "diffHunk": "@@ -303,6 +303,55 @@ public void testCancel() throws Exception {\n \t\tBlockingInvokable.reset();\n \t}\n \n+\t/**\n+\t * See FLINK-19518. This test ensures that the /jobs/overview handler shows a duration != 0.\n+\t *\n+\t */\n+\t@Test\n+\tpublic void testJobOverviewHandler() throws Exception {\n+\t\t// this only works if there is no active job at this point\n+\t\tassertTrue(getRunningJobs(CLUSTER.getClusterClient()).isEmpty());\n+\n+\t\t// Create a task\n+\t\tfinal JobVertex sender = new JobVertex(\"Sender\");\n+\t\tsender.setParallelism(2);\n+\t\tsender.setInvokableClass(BlockingInvokable.class);\n+\n+\t\tfinal JobGraph jobGraph = new JobGraph(\"Stoppable streaming test job\", sender);\n+\t\tfinal JobID jid = jobGraph.getJobID();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5dffb7725d818aba28ff3e1a7a6ab34f3e1099"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 251, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}