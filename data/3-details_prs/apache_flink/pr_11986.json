{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMDU5NTQ2", "number": 11986, "title": "[FLINK-17361] [jdbc] Added custom query on JDBC tables", "bodyText": "What is the purpose of the change\nEnable users to create a JDBC source table using a custom query / prepared statement.\nBrief change log\n\nManaged 'connector.read.query' to create a (read-only) source table using a custom query.\nCurrently a read-only Table cannot be created. When a final decision will be taken on that we should set such a flag for tables having such a property\nWhen a final decision will be made for renaming of connector properties this property could probably become simply 'scan.query', but I decided to left the renaming of those properties to another specific PR\n\nVerifying this change\nThis change is already covered by existing tests, such as JDBCTableSourceSinkFactoryTest and JDBCTableSourceITCase.\nDoes this pull request potentially affect one of the following parts:\n\nDependencies (does it add or upgrade a dependency): no\nThe public API, i.e., is any changed class annotated with @Public(Evolving): no\nThe serializers: no\nThe runtime per-record code paths (performance sensitive): no\nAnything that affects deployment or recovery: JobManager (and its components), Checkpointing, Kubernetes/Yarn/Mesos, ZooKeeper:no\nThe S3 file system connector: no\n\nDocumentation\n\nDoes this pull request introduce a new feature? no\nIf yes, how is the feature documented? docs", "createdAt": "2020-05-04T16:38:30Z", "url": "https://github.com/apache/flink/pull/11986", "merged": true, "mergeCommit": {"oid": "8c15ff1d0641386ad0151880c9e84a8853ba5cd9"}, "closed": true, "closedAt": "2020-05-19T17:47:12Z", "author": {"login": "fpompermaier"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABce50rKAFqTQwNzI5NjU4MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjDO2ZAFqTQxNTAzMTYzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3Mjk2NTgx", "url": "https://github.com/apache/flink/pull/11986#pullrequestreview-407296581", "createdAt": "2020-05-07T09:21:50Z", "commit": {"oid": "1597769183be673722456fb55e296d38d0fad837"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOToyMTo1MFrOGR1-XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOToyNToxN1rOGR2G6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2MzI5Mw==", "bodyText": "I think using the static StreamITCase functionality here is an anti-pattern that we should avoid. (I know that it's widely used in the code base, but we should rid of it at some point.)\nIdeally, with the FLIP-84 work it should be as easy as\nTableResult tableResult = tEnv.executeSql(\"SELECT timestamp6_col, decimal_col FROM \" + INPUT_TABLE);\ntableResult.collect();\n\nbut that is not yet in master. I'm inclined to wait for a but but basically have this PR ready in a mergable state.", "url": "https://github.com/apache/flink/pull/11986#discussion_r421363293", "createdAt": "2020-05-07T09:21:50Z", "author": {"login": "aljoscha"}, "path": "flink-connectors/flink-jdbc/src/test/java/org/apache/flink/api/java/io/jdbc/JDBCTableSourceITCase.java", "diffHunk": "@@ -153,4 +153,34 @@ public void testProjectableJDBCSource() throws Exception {\n \t\t\t\t\"2020-01-01T15:36:01.123456,101.1234\");\n \t\tStreamITCase.compareWithList(expected);\n \t}\n+\n+\t@Test\n+\tpublic void testScanQueryJDBCSource() throws Exception {\n+\t\tStreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();\n+\t\tEnvironmentSettings envSettings = EnvironmentSettings.newInstance()\n+\t\t\t.useBlinkPlanner()\n+\t\t\t.inStreamingMode()\n+\t\t\t.build();\n+\t\tStreamTableEnvironment tEnv = StreamTableEnvironment.create(env, envSettings);\n+\n+\t\tfinal String testQuery = \"SELECT id FROM \" + INPUT_TABLE;\n+\t\ttEnv.sqlUpdate(\n+\t\t\t\"CREATE TABLE test(\" +\n+\t\t\t\t\"id BIGINT\" +\n+\t\t\t\t\") WITH (\" +\n+\t\t\t\t\"  'connector.type'='jdbc',\" +\n+\t\t\t\t\"  'connector.url'='\" + DB_URL + \"',\" +\n+\t\t\t\t\"  'connector.table'='whatever',\" +\n+\t\t\t\t\"  'connector.read.query'='\" + testQuery + \"'\" +\n+\t\t\t\t\")\"\n+\t\t);\n+\n+\t\tStreamITCase.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1597769183be673722456fb55e296d38d0fad837"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2NTQ4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              -- optional: SQL query / prepared statement.\n          \n          \n            \n              -- If set, it will takes over the 'connector.table' setting\n          \n          \n            \n              'connector.read.query' = 'SELECT * FROM sometable',\n          \n          \n            \n              -- optional: SQL query / prepared statement.\n          \n          \n            \n              -- If set, this will take precedence over the 'connector.table' setting\n          \n          \n            \n              'connector.read.query' = 'SELECT * FROM sometable',", "url": "https://github.com/apache/flink/pull/11986#discussion_r421365481", "createdAt": "2020-05-07T09:25:17Z", "author": {"login": "aljoscha"}, "path": "docs/dev/table/connect.md", "diffHunk": "@@ -1284,7 +1284,11 @@ CREATE TABLE MyUserTable (\n   'connector.username' = 'name',\n   'connector.password' = 'password',\n   \n-  -- **followings are scan options, optional, used when reading from table**\n+  -- **followings are scan options, optional, used when reading from a table**\n+\n+  -- optional: SQL query / prepared statement.\n+  -- If set, it will takes over the 'connector.table' setting\n+  'connector.read.query' = 'SELECT * FROM sometable',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1597769183be673722456fb55e296d38d0fad837"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bed30ebb88fa4ae3dd277b00f6ea2826fa47d60", "author": {"user": {"login": "fpompermaier", "name": "Flavio Pompermaier"}}, "url": "https://github.com/apache/flink/commit/7bed30ebb88fa4ae3dd277b00f6ea2826fa47d60", "committedDate": "2020-05-19T15:40:37Z", "message": "[FLINK-17361] Add custom query on JDBC tables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c15ff1d0641386ad0151880c9e84a8853ba5cd9", "author": {"user": {"login": "aljoscha", "name": "Aljoscha Krettek"}}, "url": "https://github.com/apache/flink/commit/8c15ff1d0641386ad0151880c9e84a8853ba5cd9", "committedDate": "2020-05-19T15:40:55Z", "message": "[FLINK-17361] Refactor JdbcTableSourceITCase to use TableResult instead of StreamITCase\n\nUsing the static sink approach of StreamITCase is potentially\nproblematic with concurrency, plus the code is just plain nicer like\nthis."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef38bb803e299713253d441f42379776d21c3f87", "author": {"user": {"login": "fpompermaier", "name": "Flavio Pompermaier"}}, "url": "https://github.com/apache/flink/commit/ef38bb803e299713253d441f42379776d21c3f87", "committedDate": "2020-05-07T11:59:11Z", "message": "Update docs/dev/table/connect.md\r\n\r\nImproved documentation\n\nCo-authored-by: Aljoscha Krettek <aljoscha@apache.org>"}, "afterCommit": {"oid": "8c15ff1d0641386ad0151880c9e84a8853ba5cd9", "author": {"user": {"login": "aljoscha", "name": "Aljoscha Krettek"}}, "url": "https://github.com/apache/flink/commit/8c15ff1d0641386ad0151880c9e84a8853ba5cd9", "committedDate": "2020-05-19T15:40:55Z", "message": "[FLINK-17361] Refactor JdbcTableSourceITCase to use TableResult instead of StreamITCase\n\nUsing the static sink approach of StreamITCase is potentially\nproblematic with concurrency, plus the code is just plain nicer like\nthis."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MDMxNjM0", "url": "https://github.com/apache/flink/pull/11986#pullrequestreview-415031634", "createdAt": "2020-05-20T06:39:22Z", "commit": {"oid": "8c15ff1d0641386ad0151880c9e84a8853ba5cd9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjozOToyMlrOGX9OhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjozOToyMlrOGX9OhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3MzU3Mw==", "bodyText": "@aljoscha for the future: please use instances instead of strings", "url": "https://github.com/apache/flink/pull/11986#discussion_r427773573", "createdAt": "2020-05-20T06:39:22Z", "author": {"login": "twalthr"}, "path": "flink-connectors/flink-connector-jdbc/src/test/java/org/apache/flink/connector/jdbc/table/JdbcTableSourceITCase.java", "diffHunk": "@@ -143,20 +149,19 @@ public void testProjectableJdbcSource() throws Exception {\n \t\t\t\t\")\"\n \t\t);\n \n-\t\tStreamITCase.clear();\n-\t\ttEnv.toAppendStream(tEnv.sqlQuery(\"SELECT timestamp6_col, decimal_col FROM \" + INPUT_TABLE), Row.class)\n-\t\t\t\t.addSink(new StreamITCase.StringSink<>());\n-\t\tenv.execute();\n+\t\tTableResult tableResult = tEnv.executeSql(\"SELECT timestamp6_col, decimal_col FROM \" + INPUT_TABLE);\n+\n+\t\tList<String> results = manifestResults(tableResult);\n \n-\t\tList<String> expected =\n-\t\t\tArrays.asList(\n-\t\t\t\t\"2020-01-01T15:35:00.123456,100.1234\",\n-\t\t\t\t\"2020-01-01T15:36:01.123456,101.1234\");\n-\t\tStreamITCase.compareWithList(expected);\n+\t\tassertThat(\n+\t\t\t\tresults,\n+\t\t\t\tcontainsInAnyOrder(\n+\t\t\t\t\t\t\"2020-01-01T15:35:00.123456,100.1234\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c15ff1d0641386ad0151880c9e84a8853ba5cd9"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4527, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}