{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NjUwNTU0", "number": 11400, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOToyMzo1MFrODnw7Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTo1MTo0NlrODnxcsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDIyNjU5OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/SingleInputGateTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOToyMzo1MFrOF18riA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTozMzowMFrOF189LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExMzAzMg==", "bodyText": "Wildcard imports are discouraged by flink style guide.", "url": "https://github.com/apache/flink/pull/11400#discussion_r392113032", "createdAt": "2020-03-13T09:23:50Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/SingleInputGateTest.java", "diffHunk": "@@ -60,10 +61,7 @@\n import java.io.IOException;\n import java.nio.ByteBuffer;\n import java.nio.ByteOrder;\n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.Optional;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "835d5e2f86901bd8a85cf1d2aea9f91536bd132f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExNzU0OA==", "bodyText": "Sure, I was not aware that my local IDE did it automatically. :(", "url": "https://github.com/apache/flink/pull/11400#discussion_r392117548", "createdAt": "2020-03-13T09:33:00Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/consumer/SingleInputGateTest.java", "diffHunk": "@@ -60,10 +61,7 @@\n import java.io.IOException;\n import java.nio.ByteBuffer;\n import java.nio.ByteOrder;\n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.Optional;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExMzAzMg=="}, "originalCommit": {"oid": "835d5e2f86901bd8a85cf1d2aea9f91536bd132f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDIzNzAxOnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/ResultPartitionBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOToyNzoyMVrOF18yLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTo0MzowN1rOF19Qvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExNDczMw==", "bodyText": "I think it's better to initialize it with an invalid value to force clients to set it.", "url": "https://github.com/apache/flink/pull/11400#discussion_r392114733", "createdAt": "2020-03-13T09:27:21Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/ResultPartitionBuilder.java", "diffHunk": "@@ -40,6 +40,8 @@\n \n \tprivate BoundedBlockingSubpartitionType blockingSubpartitionType = BoundedBlockingSubpartitionType.AUTO;\n \n+\tprivate int partitionIndex = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "835d5e2f86901bd8a85cf1d2aea9f91536bd132f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyMjU1OQ==", "bodyText": "This builder is only for testing purpose, and I do not think this property is more important or very necessary than other existing fields like partitionId, numberOfSubpartitions etc. Even I guess this new field is rare used for most of the testing cases, so I prefer to not making it as mandatory.", "url": "https://github.com/apache/flink/pull/11400#discussion_r392122559", "createdAt": "2020-03-13T09:43:07Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/ResultPartitionBuilder.java", "diffHunk": "@@ -40,6 +40,8 @@\n \n \tprivate BoundedBlockingSubpartitionType blockingSubpartitionType = BoundedBlockingSubpartitionType.AUTO;\n \n+\tprivate int partitionIndex = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExNDczMw=="}, "originalCommit": {"oid": "835d5e2f86901bd8a85cf1d2aea9f91536bd132f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDMxMjE2OnYy", "diffSide": "RIGHT", "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/NettyShuffleEnvironment.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTo1MTo0NlrOF19hrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNDozMDoyOVrOF2lQDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNjg5NA==", "bodyText": "Here, we rely on iteration order (counter), but the type of inputGateDeploymentDescriptors is Collection.\nWhen it is created it is List though.\nSo I think we should change the type of TaskDeploymentDescriptor.inputGates and all parameters down to  inputGateDeploymentDescriptors  to List.", "url": "https://github.com/apache/flink/pull/11400#discussion_r392126894", "createdAt": "2020-03-13T09:51:46Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/NettyShuffleEnvironment.java", "diffHunk": "@@ -217,6 +218,7 @@ public ShuffleIOOwnerContext createShuffleIOOwnerContext(\n \t\t\tfor (InputGateDeploymentDescriptor igdd : inputGateDeploymentDescriptors) {\n \t\t\t\tSingleInputGate inputGate = singleInputGateFactory.create(\n \t\t\t\t\townerContext.getOwnerName(),\n+\t\t\t\t\tcounter,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c660599680944e8c6f2b3b0ceaf6975b03fc5c4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI0NzYxMQ==", "bodyText": "I guess your suggestion is for unifying all the related data structures (collection, array) from TaskDeploymentDescriptor.inputGates to List?\nActually I do not see any correctness or performance problems ATM. This unification really spans cross multiple components from scheduler to task stack, and I do think it is really necessary to refactor it now. Or if we want to do that, it should be a separate ticket out of this PR scope. We only make use of previous counter to give a correct gate index while creating in iteration for this PR motivation. WDYT?", "url": "https://github.com/apache/flink/pull/11400#discussion_r392247611", "createdAt": "2020-03-13T14:04:43Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/NettyShuffleEnvironment.java", "diffHunk": "@@ -217,6 +218,7 @@ public ShuffleIOOwnerContext createShuffleIOOwnerContext(\n \t\t\tfor (InputGateDeploymentDescriptor igdd : inputGateDeploymentDescriptors) {\n \t\t\t\tSingleInputGate inputGate = singleInputGateFactory.create(\n \t\t\t\t\townerContext.getOwnerName(),\n+\t\t\t\t\tcounter,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNjg5NA=="}, "originalCommit": {"oid": "3c660599680944e8c6f2b3b0ceaf6975b03fc5c4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI5MTMyNQ==", "bodyText": "Not sure if I got you right.\nI meant to change the type from Collection to List for:\n\ninputGateDeploymentDescriptors parameter in NettyShuffleEnvironment#createInputGates\nTaskDeploymentDescriptor#inputGates field\ninputGateDeploymentDescriptors parameter in Task constructor\ninputGateDeploymentDescriptors parameter in TaskDeploymentDescriptor constructor\n\nWithout it, it's easy to break the ordering, at least for me :)\nI think it should be the same PR because requirement for ordering was added here.", "url": "https://github.com/apache/flink/pull/11400#discussion_r392291325", "createdAt": "2020-03-13T15:15:28Z", "author": {"login": "rkhachatryan"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/NettyShuffleEnvironment.java", "diffHunk": "@@ -217,6 +218,7 @@ public ShuffleIOOwnerContext createShuffleIOOwnerContext(\n \t\t\tfor (InputGateDeploymentDescriptor igdd : inputGateDeploymentDescriptors) {\n \t\t\t\tSingleInputGate inputGate = singleInputGateFactory.create(\n \t\t\t\t\townerContext.getOwnerName(),\n+\t\t\t\t\tcounter,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNjg5NA=="}, "originalCommit": {"oid": "3c660599680944e8c6f2b3b0ceaf6975b03fc5c4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc3Nzc0MQ==", "bodyText": "I thought you were referring to the unnecessary transformation in the logics before, sorry for misunderstanding.\nYou are right that the current Collection actually does not provide any order guarantee which relies on the subclass interface (List or Set), and we indeed need the determined order after restarting.\nIt is reasonable to adjust the Collection to List as you suggested, but the only trouble is that it would change the public interface of ShuffleEnvironment proposed in FLIP-31. So it might break the compatibility if some outside users already relied on it. I guess it needs to discussion in ML for finalization.  Anyway, I already addressed this issue in a separate commit.", "url": "https://github.com/apache/flink/pull/11400#discussion_r392777741", "createdAt": "2020-03-16T04:30:29Z", "author": {"login": "zhijiangW"}, "path": "flink-runtime/src/main/java/org/apache/flink/runtime/io/network/NettyShuffleEnvironment.java", "diffHunk": "@@ -217,6 +218,7 @@ public ShuffleIOOwnerContext createShuffleIOOwnerContext(\n \t\t\tfor (InputGateDeploymentDescriptor igdd : inputGateDeploymentDescriptors) {\n \t\t\t\tSingleInputGate inputGate = singleInputGateFactory.create(\n \t\t\t\t\townerContext.getOwnerName(),\n+\t\t\t\t\tcounter,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNjg5NA=="}, "originalCommit": {"oid": "3c660599680944e8c6f2b3b0ceaf6975b03fc5c4"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 777, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}