{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzOTUzNzk5", "number": 13878, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyNjo1NlrOE0UWTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDoyNjowMlrOE0Zk8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjk0Nzk3OnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/ExecutionCheckpointingOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyNjo1NlrOHr-hnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMjoxNzoxM1rOHsCCFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg3NTIzMQ==", "bodyText": "You probably need to generate docs and add them to this commit.\n mvn install -Dgenerate-config-docs -pl flink-docs", "url": "https://github.com/apache/flink/pull/13878#discussion_r515875231", "createdAt": "2020-11-02T10:26:56Z", "author": {"login": "AHeise"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/ExecutionCheckpointingOptions.java", "diffHunk": "@@ -159,4 +159,12 @@\n \t\t\t\t\t\"If during checkpointing, checkpoint start delay exceeds this timeout, alignment \" +\n \t\t\t\t\t\"will timeout and checkpoint barrier will start working as unaligned checkpoint.\")\n \t\t\t\t.build());\n+\n+\tpublic static final ConfigOption<Boolean> FORCE_UNALIGNED =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d255dc9980995cb82f157e28876a41092b64fe9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzMjY5Mg==", "bodyText": "Done.", "url": "https://github.com/apache/flink/pull/13878#discussion_r515932692", "createdAt": "2020-11-02T12:17:13Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/ExecutionCheckpointingOptions.java", "diffHunk": "@@ -159,4 +159,12 @@\n \t\t\t\t\t\"If during checkpointing, checkpoint start delay exceeds this timeout, alignment \" +\n \t\t\t\t\t\"will timeout and checkpoint barrier will start working as unaligned checkpoint.\")\n \t\t\t\t.build());\n+\n+\tpublic static final ConfigOption<Boolean> FORCE_UNALIGNED =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg3NTIzMQ=="}, "originalCommit": {"oid": "3d255dc9980995cb82f157e28876a41092b64fe9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjk1MTA4OnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyNzo0N1rOHr-jjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyNzo0N1rOHr-jjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg3NTcyNQ==", "bodyText": "The first getter looks odd. At least the description and tags are wrong.", "url": "https://github.com/apache/flink/pull/13878#discussion_r515875725", "createdAt": "2020-11-02T10:27:47Z", "author": {"login": "AHeise"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java", "diffHunk": "@@ -524,6 +524,28 @@ public boolean isForceCheckpointing() {\n \t\treturn checkpointCfg.isForceCheckpointing();\n \t}\n \n+\t/**\n+\t * Returns whether Unaligned Checkpoints are force-enabled.\n+\t *\n+\t * @deprecated Forcing Unaligned Checkpoints will be removed in future version.\n+\t */\n+\t@Deprecated\n+\t@PublicEvolving\n+\tpublic boolean isUnalignedCheckpointsEnabled() {\n+\t\treturn checkpointCfg.isUnalignedCheckpointsEnabled();\n+\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d255dc9980995cb82f157e28876a41092b64fe9"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjk1NTMxOnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyODo0NVrOHr-mDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyODo0NVrOHr-mDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg3NjM2NA==", "bodyText": "I'd not deprecate it at this point. I see it decoupled from the deprecation of forcing checkpoints.", "url": "https://github.com/apache/flink/pull/13878#discussion_r515876364", "createdAt": "2020-11-02T10:28:45Z", "author": {"login": "AHeise"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/environment/StreamExecutionEnvironment.java", "diffHunk": "@@ -524,6 +524,28 @@ public boolean isForceCheckpointing() {\n \t\treturn checkpointCfg.isForceCheckpointing();\n \t}\n \n+\t/**\n+\t * Returns whether Unaligned Checkpoints are force-enabled.\n+\t *\n+\t * @deprecated Forcing Unaligned Checkpoints will be removed in future version.\n+\t */\n+\t@Deprecated\n+\t@PublicEvolving\n+\tpublic boolean isUnalignedCheckpointsEnabled() {\n+\t\treturn checkpointCfg.isUnalignedCheckpointsEnabled();\n+\t}\n+\n+\t/**\n+\t * Returns whether Unaligned Checkpoints are force-enabled.\n+\t *\n+\t * @deprecated Forcing checkpoints will be removed in future version.\n+\t */\n+\t@Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d255dc9980995cb82f157e28876a41092b64fe9"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjk2MDE4OnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoyOTo1OVrOHr-pDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMToyMToyMFrOHsAYGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg3NzEzMg==", "bodyText": "Just to clarify: this is intended for failing late after the user has forced UC and then rescales, right?", "url": "https://github.com/apache/flink/pull/13878#discussion_r515877132", "createdAt": "2020-11-02T10:29:59Z", "author": {"login": "AHeise"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamConfig.java", "diffHunk": "@@ -663,6 +664,14 @@ public boolean shouldSortInputs() {\n \t\treturn config.get(SORTED_INPUTS);\n \t}\n \n+\tpublic void setGraphContainingLoops(boolean graphContainingLoops) {\n+\t\tconfig.setBoolean(GRAPH_CONTAINING_LOOPS, graphContainingLoops);\n+\t}\n+\n+\tpublic boolean isGraphContainingLoops() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f394642651c37a82c95bd59c5552f6464e94d824"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkwNTU2Mw==", "bodyText": "No, this is needed to disable restoring channel state for iterative jobs (so they run normally without restoring or failing).", "url": "https://github.com/apache/flink/pull/13878#discussion_r515905563", "createdAt": "2020-11-02T11:21:20Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamConfig.java", "diffHunk": "@@ -663,6 +664,14 @@ public boolean shouldSortInputs() {\n \t\treturn config.get(SORTED_INPUTS);\n \t}\n \n+\tpublic void setGraphContainingLoops(boolean graphContainingLoops) {\n+\t\tconfig.setBoolean(GRAPH_CONTAINING_LOOPS, graphContainingLoops);\n+\t}\n+\n+\tpublic boolean isGraphContainingLoops() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg3NzEzMg=="}, "originalCommit": {"oid": "f394642651c37a82c95bd59c5552f6464e94d824"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjk3ODk0OnYy", "diffSide": "RIGHT", "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDozNToxMlrOHr-0mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMjoyNDo1N1rOHsCPXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg4MDA5MQ==", "bodyText": "I'd add more details similar to forcing checkpoints\n\n\"Unaligned Checkpoints are currently not supported for iterative jobs, as Flink cannot rescale from these checkpoints. \"\n+ \"\\nYou can force enable unaligned checkpoints if you don't intend to rescale: env.setForceUnalignedCheckpoints(true)\"", "url": "https://github.com/apache/flink/pull/13878#discussion_r515880091", "createdAt": "2020-11-02T10:35:12Z", "author": {"login": "AHeise"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java", "diffHunk": "@@ -216,6 +216,9 @@ private void preValidate() {\n \t\t\t\t\t\t+ \"State checkpoints happen normally, but records in-transit during the snapshot will be lost upon failure. \"\n \t\t\t\t\t\t+ \"\\nThe user can force enable state checkpoints with the reduced guarantees by calling: env.enableCheckpointing(interval,true)\");\n \t\t\t}\n+\t\t\tif (streamGraph.isIterative() && !checkpointConfig.isForceUnalignedCheckpoints()) {\n+\t\t\t\tthrow new UnsupportedOperationException(\"Unaligned Checkpoints are currently not supported for iterative jobs\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a3c8b71bb5bb06638b01cad68cbf5c9ba59ce8d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzNjA5NA==", "bodyText": "Done.", "url": "https://github.com/apache/flink/pull/13878#discussion_r515936094", "createdAt": "2020-11-02T12:24:57Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/graph/StreamingJobGraphGenerator.java", "diffHunk": "@@ -216,6 +216,9 @@ private void preValidate() {\n \t\t\t\t\t\t+ \"State checkpoints happen normally, but records in-transit during the snapshot will be lost upon failure. \"\n \t\t\t\t\t\t+ \"\\nThe user can force enable state checkpoints with the reduced guarantees by calling: env.enableCheckpointing(interval,true)\");\n \t\t\t}\n+\t\t\tif (streamGraph.isIterative() && !checkpointConfig.isForceUnalignedCheckpoints()) {\n+\t\t\t\tthrow new UnsupportedOperationException(\"Unaligned Checkpoints are currently not supported for iterative jobs\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg4MDA5MQ=="}, "originalCommit": {"oid": "1a3c8b71bb5bb06638b01cad68cbf5c9ba59ce8d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzgwNDY0OnYy", "diffSide": "RIGHT", "path": "flink-streaming-scala/src/main/scala/org/apache/flink/streaming/api/scala/StreamExecutionEnvironment.scala", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDoyNjowMlrOHsGjTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoxNToyOVrOHsQVug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAwNjczNQ==", "bodyText": "just noticed that you probably also need to adjust flink-python/pyflink/datastream/checkpoint_config.py", "url": "https://github.com/apache/flink/pull/13878#discussion_r516006735", "createdAt": "2020-11-02T14:26:02Z", "author": {"login": "AHeise"}, "path": "flink-streaming-scala/src/main/scala/org/apache/flink/streaming/api/scala/StreamExecutionEnvironment.scala", "diffHunk": "@@ -881,6 +881,16 @@ class StreamExecutionEnvironment(javaEnv: JavaEnv) {\n   def registerCachedFile(filePath: String, name: String, executable: Boolean): Unit = {\n     javaEnv.registerCachedFile(filePath, name, executable)\n   }\n+\n+  /**\n+   * Returns whether Unaligned Checkpoints are enabled.\n+   */\n+  def isUnalignedCheckpointsEnabled: Boolean = javaEnv.isUnalignedCheckpointsEnabled\n+\n+  /**\n+   * Returns whether Unaligned Checkpoints are force-enabled.\n+   */\n+  def isForceUnalignedCheckpoints: Boolean = javaEnv.isForceUnalignedCheckpoints", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aabf026fb07f0d439e8da17a8dec39f8d5f1a3ff"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE2NzA5OA==", "bodyText": "Thanks, updated checkpoint_config.py too.", "url": "https://github.com/apache/flink/pull/13878#discussion_r516167098", "createdAt": "2020-11-02T18:15:29Z", "author": {"login": "rkhachatryan"}, "path": "flink-streaming-scala/src/main/scala/org/apache/flink/streaming/api/scala/StreamExecutionEnvironment.scala", "diffHunk": "@@ -881,6 +881,16 @@ class StreamExecutionEnvironment(javaEnv: JavaEnv) {\n   def registerCachedFile(filePath: String, name: String, executable: Boolean): Unit = {\n     javaEnv.registerCachedFile(filePath, name, executable)\n   }\n+\n+  /**\n+   * Returns whether Unaligned Checkpoints are enabled.\n+   */\n+  def isUnalignedCheckpointsEnabled: Boolean = javaEnv.isUnalignedCheckpointsEnabled\n+\n+  /**\n+   * Returns whether Unaligned Checkpoints are force-enabled.\n+   */\n+  def isForceUnalignedCheckpoints: Boolean = javaEnv.isForceUnalignedCheckpoints", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAwNjczNQ=="}, "originalCommit": {"oid": "aabf026fb07f0d439e8da17a8dec39f8d5f1a3ff"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4894, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}