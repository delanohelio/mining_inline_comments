{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTMyMTA0", "number": 3651, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzo1ODoyNlrOEM6ElQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjoxMDowMFrOENVQEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTY5ODEzOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/DescriptorTypeConverter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzo1ODoyNlrOGvSbSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzo1ODoyNlrOGvSbSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjIzODE1NA==", "bodyText": "I think this means to say descriptor type.", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452238154", "createdAt": "2020-07-09T13:58:26Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/DescriptorTypeConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.dockstore.webservice.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.persistence.AttributeConverter;\n+import javax.persistence.Converter;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Converter(autoApply = true)\n+public class DescriptorTypeConverter implements AttributeConverter<List<String>, String> {\n+    /**\n+     * Checksums are stored in the database as a string with the format type:checksum and are comma separated.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTczNjY4OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Tool.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDowNzoyMlrOGvSz4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzowNTozNVrOGvko8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI0NDQ1MQ==", "bodyText": "If this cannot be null but an endpoint is required to migrate, will the site still run ok after migrating the DB to include the new column but before running the migration script you wrote?", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452244451", "createdAt": "2020-07-09T14:07:22Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Tool.java", "diffHunk": "@@ -139,6 +139,11 @@\n             + \"If tool was never built on quay.io, then last build will be null. N/A for hosted/manual path tools\", position = 25)\n     private Date lastBuild;\n \n+    @Column(nullable = false, columnDefinition = \"varchar default ''\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNjU2Mg==", "bodyText": "got rid of the endpoint and replaced with an sql migration. The UI doesn't like null values so the default is an empty string for when cwl or wdl sourcefiles can't be found for a tool.", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452536562", "createdAt": "2020-07-09T23:05:35Z", "author": {"login": "NatalieEO"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Tool.java", "diffHunk": "@@ -139,6 +139,11 @@\n             + \"If tool was never built on quay.io, then last build will be null. N/A for hosted/manual path tools\", position = 25)\n     private Date lastBuild;\n \n+    @Column(nullable = false, columnDefinition = \"varchar default ''\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI0NDQ1MQ=="}, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTc4MjUxOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/DockerRepoResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDoxNzozM1rOGvTQ0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODoxNzo0N1rOGvck0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI1MTg1Nw==", "bodyText": "See https://en.wikipedia.org/wiki/Representational_state_transfer#Relationship_between_URI_and_HTTP_methods", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452251857", "createdAt": "2020-07-09T14:17:33Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/DockerRepoResource.java", "diffHunk": "@@ -237,6 +240,29 @@ private static void checkTokens(final Token quayToken, final Token githubToken,\n         }\n     }\n \n+\n+    @PUT\n+    @Path(\"/{containerId}/insertDescriptorType\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Endpoint needed to migrate descriptortype from a just a json property to being stored in the db\",  hidden = true)\n+    @Operation(operationId = \"insertDescriptorTypes\", description = \"Endpoint needed to migrate descriptortype from a just a json property to being stored in the db\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    public Tool insertDescriptorType(@Parameter(hidden = true, name = \"user\") @Auth User user,\n+            @Parameter(name = \"containerId\", description = \"id of the tool\", required = true, in = ParameterIn.PATH) @PathParam(\"containerId\") Long containerId,\n+            @Parameter(name = \"body\", description = \"This is here to appease Swagger. It requires PUT methods to have a body, even if it is empty. Please leave it empty.\") String emptyBody) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMwNTU4OA==", "bodyText": "might want to elaborate", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452305588", "createdAt": "2020-07-09T15:31:17Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/DockerRepoResource.java", "diffHunk": "@@ -237,6 +240,29 @@ private static void checkTokens(final Token quayToken, final Token githubToken,\n         }\n     }\n \n+\n+    @PUT\n+    @Path(\"/{containerId}/insertDescriptorType\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Endpoint needed to migrate descriptortype from a just a json property to being stored in the db\",  hidden = true)\n+    @Operation(operationId = \"insertDescriptorTypes\", description = \"Endpoint needed to migrate descriptortype from a just a json property to being stored in the db\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    public Tool insertDescriptorType(@Parameter(hidden = true, name = \"user\") @Auth User user,\n+            @Parameter(name = \"containerId\", description = \"id of the tool\", required = true, in = ParameterIn.PATH) @PathParam(\"containerId\") Long containerId,\n+            @Parameter(name = \"body\", description = \"This is here to appease Swagger. It requires PUT methods to have a body, even if it is empty. Please leave it empty.\") String emptyBody) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI1MTg1Nw=="}, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNDQzMw==", "bodyText": "I think this body could be written as a SQL statement, in which case, you don't need to introduce the endpoint and migrations would happen automatically.\nDon't ask me to write it though. :)", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452404433", "createdAt": "2020-07-09T18:17:47Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/DockerRepoResource.java", "diffHunk": "@@ -237,6 +240,29 @@ private static void checkTokens(final Token quayToken, final Token githubToken,\n         }\n     }\n \n+\n+    @PUT\n+    @Path(\"/{containerId}/insertDescriptorType\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Endpoint needed to migrate descriptortype from a just a json property to being stored in the db\",  hidden = true)\n+    @Operation(operationId = \"insertDescriptorTypes\", description = \"Endpoint needed to migrate descriptortype from a just a json property to being stored in the db\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    public Tool insertDescriptorType(@Parameter(hidden = true, name = \"user\") @Auth User user,\n+            @Parameter(name = \"containerId\", description = \"id of the tool\", required = true, in = ParameterIn.PATH) @PathParam(\"containerId\") Long containerId,\n+            @Parameter(name = \"body\", description = \"This is here to appease Swagger. It requires PUT methods to have a body, even if it is empty. Please leave it empty.\") String emptyBody) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI1MTg1Nw=="}, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTg5NTMwOnYy", "diffSide": "LEFT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Tool.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDo0MjoyOVrOGvUXIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDo0MjoyOVrOGvUXIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI2OTg1OA==", "bodyText": "should've kept this function (but rename and remove annotations), it's repeated 3 times in this PR otherwise", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452269858", "createdAt": "2020-07-09T14:42:29Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Tool.java", "diffHunk": "@@ -265,20 +270,6 @@ public String getPath() {\n         return registry + '/' + namespace + '/' + name;\n     }\n \n-    /**\n-     * TODO: Make into actual column, run some migration/script to fill all the rows, and update on refresh.\n-     * Calculated property for demonstrating search by language, inefficient\n-     *\n-     * @return the languages that this tool supports\n-     */\n-    @JsonProperty\n-    @ApiModelProperty(position = 28)\n-    public List<String> getDescriptorType() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTkyNjIyOnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/LimitedCRUDClientIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDo0ODozNVrOGvUpyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDo0ODozNVrOGvUpyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI3NDYzMw==", "bodyText": "getLowerShortName() is getting removed because people keep abusing it", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452274633", "createdAt": "2020-07-09T14:48:35Z", "author": {"login": "garyluu"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/LimitedCRUDClientIT.java", "diffHunk": "@@ -206,6 +207,24 @@ public void testToolVersionCreation() throws IOException {\n         api.editHostedTool(hostedTool.getId(), sourceFiles);\n     }\n \n+    @Test\n+    public void testGettingDescriptorType() throws IOException {\n+        ApiClient webClient = BaseIT.getWebClient(BaseIT.ADMIN_USERNAME, testingPostgres);\n+        HostedApi api = new HostedApi(webClient);\n+        DockstoreTool hostedTool = api\n+                .createHostedTool(\"awesomeTool\", Registry.QUAY_IO.getDockerPath().toLowerCase(), CWL.getLowerShortName(), \"coolNamespace\", null);\n+\n+        List<SourceFile> sourceFiles = generateSourceFiles(CWL.getLowerShortName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTk0MTUxOnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/LimitedCRUDClientIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDo1MToyNlrOGvUywQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNDo1MToyNlrOGvUywQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI3NjkyOQ==", "bodyText": "Looks like:\n\nthe input was originally an enum, then you converted it to lower case\nthe if statement CWL is originally an enum, then you converted it to lower case\n\njust don't convert?", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452276929", "createdAt": "2020-07-09T14:51:26Z", "author": {"login": "garyluu"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/LimitedCRUDClientIT.java", "diffHunk": "@@ -254,13 +273,25 @@ public void testUploadZipHonorsVersionLimit() {\n \n     }\n \n-    private List<SourceFile> generateSourceFiles() throws IOException {\n+    private List<SourceFile> generateSourceFiles(String lang) throws IOException {\n+        String resourceFilePath;\n+        String dockstorePath;\n+        SourceFile.TypeEnum type;\n+        if (lang.equals(CWL.getLowerShortName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDEwMzQ4OnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/LimitedCRUDClientIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNToyODoyM1rOGvWapA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNToyODoyM1rOGvWapA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMwMzUyNA==", "bodyText": "should probably fast fail if it is an unexpected language (should not assume WDL)", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452303524", "createdAt": "2020-07-09T15:28:23Z", "author": {"login": "denis-yuen"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/LimitedCRUDClientIT.java", "diffHunk": "@@ -254,13 +273,25 @@ public void testUploadZipHonorsVersionLimit() {\n \n     }\n \n-    private List<SourceFile> generateSourceFiles() throws IOException {\n+    private List<SourceFile> generateSourceFiles(String lang) throws IOException {\n+        String resourceFilePath;\n+        String dockstorePath;\n+        SourceFile.TypeEnum type;\n+        if (lang.equals(CWL.getLowerShortName())) {\n+            resourceFilePath = \"tar-param.cwl\";\n+            dockstorePath = \"/Dockstore.cwl\";\n+            type = SourceFile.TypeEnum.DOCKSTORE_CWL;\n+        } else {\n+            resourceFilePath = \"hello.wdl\";\n+            dockstorePath = \"/Dockstore.wdl\";\n+            type = SourceFile.TypeEnum.DOCKSTORE_WDL;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDExMzYyOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/DescriptorTypeConverter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTozMDo0MVrOGvWhJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo1MToxOFrOGv8iBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMwNTE5MA==", "bodyText": "Is this converting between a text column in the DB to an array?\nThere is a native text array that might be more efficient\nexample here https://www.postgresqltutorial.com/postgresql-array/", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452305190", "createdAt": "2020-07-09T15:30:41Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/DescriptorTypeConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.dockstore.webservice.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.persistence.AttributeConverter;\n+import javax.persistence.Converter;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Converter(autoApply = true)\n+public class DescriptorTypeConverter implements AttributeConverter<List<String>, String> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzNjEwOA==", "bodyText": "yeah that's what it's doing. I was looking around, but I was reading hibernate doesn't natively support an array type column in the db. That it only accepts mapping lists and sets to tables, but maybe not the case anymore? The examples I've seen online add other maven dependencies to so.", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452536108", "createdAt": "2020-07-09T23:04:07Z", "author": {"login": "NatalieEO"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/DescriptorTypeConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.dockstore.webservice.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.persistence.AttributeConverter;\n+import javax.persistence.Converter;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Converter(autoApply = true)\n+public class DescriptorTypeConverter implements AttributeConverter<List<String>, String> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMwNTE5MA=="}, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyODAwNg==", "bodyText": "Yeah, it looks like hibernate doesn't support it natively.\nI think I can live with this then", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452928006", "createdAt": "2020-07-10T15:51:18Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/DescriptorTypeConverter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.dockstore.webservice.core;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.persistence.AttributeConverter;\n+import javax.persistence.Converter;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Converter(autoApply = true)\n+public class DescriptorTypeConverter implements AttributeConverter<List<String>, String> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMwNTE5MA=="}, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDEyNzMxOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/DockerRepoResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTozMzo1OFrOGvWp5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTozMzo1OFrOGvWp5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMwNzQzMA==", "bodyText": "Feels weird, but maybe it makes sense to immediately put a deprecated annotation on this and .\nIf I understand this correctly, this endpoint would only get used by us after the release?\nAnd put a @RolesAllowed({ \"curator\", \"admin\" }) on it", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452307430", "createdAt": "2020-07-09T15:33:58Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/DockerRepoResource.java", "diffHunk": "@@ -237,6 +240,29 @@ private static void checkTokens(final Token quayToken, final Token githubToken,\n         }\n     }\n \n+\n+    @PUT\n+    @Path(\"/{containerId}/insertDescriptorType\")\n+    @Timed\n+    @UnitOfWork", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDEyODQyOnYy", "diffSide": "LEFT", "path": "dockstore-webservice/src/main/resources/migrations.1.10.0.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTozNDoxOVrOGvWqwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTozNDoxOVrOGvWqwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMwNzY0OA==", "bodyText": "thanks!", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452307648", "createdAt": "2020-07-09T15:34:19Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/resources/migrations.1.10.0.xml", "diffHunk": "@@ -17,8 +17,15 @@\n \n <databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n                    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd\"\n-                   context=\"1.9.0\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMDcyODcwOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/resources/migrations.1.10.0.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODoyMDoxMlrOGvcp9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODoyMDoxMlrOGvcp9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwNTc1MA==", "bodyText": "Missing EOL", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452405750", "createdAt": "2020-07-09T18:20:12Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/resources/migrations.1.10.0.xml", "diffHunk": "@@ -17,8 +17,15 @@\n \n <databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n                    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd\"\n-                   context=\"1.9.0\">\n+                   context=\"1.10.0\">\n     <changeSet author=\"dyuen\" id=\"notification_seq\">\n         <addAutoIncrement tableName=\"notification\" columnName=\"id\" startWith=\"100\"/>\n     </changeSet>\n-</databaseChangeLog>\n+    <changeSet author=\"natalieperez (generated)\" id=\"adddescriptortypecolumn\">\n+        <addColumn tableName=\"tool\">\n+            <column defaultValue=\"\" name=\"descriptortype\" type=\"varchar\">\n+                <constraints nullable=\"false\"/>\n+            </column>\n+        </addColumn>\n+    </changeSet>\n+</databaseChangeLog>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f7f35773eb3cdae4cf4b975deeb0f28071b803f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTU5NDQyOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/resources/migrations.1.10.0.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyMjowNVrOGvk8YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMDo1NzozOFrOGwFbhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0MTUzNw==", "bodyText": "Just to confirm, you are testing only for CWL and WDL, because these are tools, and we don't have support for tools in Nextflow nor Galaxy?", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452541537", "createdAt": "2020-07-09T23:22:05Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/resources/migrations.1.10.0.xml", "diffHunk": "@@ -17,8 +17,32 @@\n \n <databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n                    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd\"\n-                   context=\"1.9.0\">\n+                   context=\"1.10.0\">\n     <changeSet author=\"dyuen\" id=\"notification_seq\">\n         <addAutoIncrement tableName=\"notification\" columnName=\"id\" startWith=\"100\"/>\n     </changeSet>\n+    <changeSet author=\"natalieperez (generated)\" id=\"adddescriptortypecolumn\">\n+        <addColumn tableName=\"tool\">\n+            <column defaultValue=\"\" name=\"descriptortype\" type=\"varchar\">\n+                <constraints nullable=\"false\"/>\n+            </column>\n+        </addColumn>\n+        <sql dbms=\"postgresql\">\n+            WITH upd as (SELECT tool.id as id, array_to_string(ARRAY_AGG(DISTINCT sourcefile.type), ',') as _descriptortypes\n+            FROM tool, sourcefile, tag, version_sourcefile\n+            WHERE tool.id = tag.parentid\n+            AND tag.id = version_sourcefile.versionid\n+            AND version_sourcefile.sourcefileid = sourcefile.id\n+            AND (sourcefile.type = 'DOCKSTORE_CWL' OR sourcefile.type = 'DOCKSTORE_WDL')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a372359a1344240ce4ba0d263cc8d20f8ad826"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA3Mzc5Nw==", "bodyText": "yes, that's the reason", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r453073797", "createdAt": "2020-07-10T20:57:38Z", "author": {"login": "NatalieEO"}, "path": "dockstore-webservice/src/main/resources/migrations.1.10.0.xml", "diffHunk": "@@ -17,8 +17,32 @@\n \n <databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n                    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd\"\n-                   context=\"1.9.0\">\n+                   context=\"1.10.0\">\n     <changeSet author=\"dyuen\" id=\"notification_seq\">\n         <addAutoIncrement tableName=\"notification\" columnName=\"id\" startWith=\"100\"/>\n     </changeSet>\n+    <changeSet author=\"natalieperez (generated)\" id=\"adddescriptortypecolumn\">\n+        <addColumn tableName=\"tool\">\n+            <column defaultValue=\"\" name=\"descriptortype\" type=\"varchar\">\n+                <constraints nullable=\"false\"/>\n+            </column>\n+        </addColumn>\n+        <sql dbms=\"postgresql\">\n+            WITH upd as (SELECT tool.id as id, array_to_string(ARRAY_AGG(DISTINCT sourcefile.type), ',') as _descriptortypes\n+            FROM tool, sourcefile, tag, version_sourcefile\n+            WHERE tool.id = tag.parentid\n+            AND tag.id = version_sourcefile.versionid\n+            AND version_sourcefile.sourcefileid = sourcefile.id\n+            AND (sourcefile.type = 'DOCKSTORE_CWL' OR sourcefile.type = 'DOCKSTORE_WDL')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0MTUzNw=="}, "originalCommit": {"oid": "90a372359a1344240ce4ba0d263cc8d20f8ad826"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTYyOTAxOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Tool.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzozODoxNVrOGvlQOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo1MTowMFrOGv8hVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0NjYxOQ==", "bodyText": "I'm worried this is fragile; now every time somebody adds/modifies/deletes a sourcefile, they have to know to call this method.\nBut \"every time\" is currently only 2 places (unless you missed any :) ), so maybe it's not worth overthinking this.", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452546619", "createdAt": "2020-07-09T23:38:15Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Tool.java", "diffHunk": "@@ -455,4 +456,11 @@ public String getDefaultTestCwlParameterFile() {\n     public void setDefaultTestCwlParameterFile(String defaultTestCwlParameterFile) {\n         getDefaultPaths().put(DescriptorLanguage.FileType.CWL_TEST_JSON, defaultTestCwlParameterFile);\n     }\n+\n+    public List<String> calculateDescriptorType() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a372359a1344240ce4ba0d263cc8d20f8ad826"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyNTUzNA==", "bodyText": "The constraint might help with this if we forget to call this", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452925534", "createdAt": "2020-07-10T15:46:51Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Tool.java", "diffHunk": "@@ -455,4 +456,11 @@ public String getDefaultTestCwlParameterFile() {\n     public void setDefaultTestCwlParameterFile(String defaultTestCwlParameterFile) {\n         getDefaultPaths().put(DescriptorLanguage.FileType.CWL_TEST_JSON, defaultTestCwlParameterFile);\n     }\n+\n+    public List<String> calculateDescriptorType() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0NjYxOQ=="}, "originalCommit": {"oid": "90a372359a1344240ce4ba0d263cc8d20f8ad826"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyNzgzMQ==", "bodyText": "Ya, we have this \"pattern\" in a few places, not too happy about it but oh well. i don't have a solution.", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452927831", "createdAt": "2020-07-10T15:51:00Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Tool.java", "diffHunk": "@@ -455,4 +456,11 @@ public String getDefaultTestCwlParameterFile() {\n     public void setDefaultTestCwlParameterFile(String defaultTestCwlParameterFile) {\n         getDefaultPaths().put(DescriptorLanguage.FileType.CWL_TEST_JSON, defaultTestCwlParameterFile);\n     }\n+\n+    public List<String> calculateDescriptorType() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0NjYxOQ=="}, "originalCommit": {"oid": "90a372359a1344240ce4ba0d263cc8d20f8ad826"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDA3NzgwOnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/LimitedCRUDClientIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo0ODoyNVrOGv8bqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo0ODoyNVrOGv8bqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyNjM3Nw==", "bodyText": "Only WDL and CWL...", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452926377", "createdAt": "2020-07-10T15:48:25Z", "author": {"login": "garyluu"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/LimitedCRUDClientIT.java", "diffHunk": "@@ -254,13 +276,27 @@ public void testUploadZipHonorsVersionLimit() {\n \n     }\n \n-    private List<SourceFile> generateSourceFiles() throws IOException {\n+    private List<SourceFile> generateSourceFiles(DescriptorLanguage descriptorLanguage) throws IOException {\n+        String resourceFilePath;\n+        String dockstorePath;\n+        SourceFile.TypeEnum type;\n+        if (descriptorLanguage == CWL) {\n+            resourceFilePath = \"tar-param.cwl\";\n+            dockstorePath = \"/Dockstore.cwl\";\n+            type = SourceFile.TypeEnum.DOCKSTORE_CWL;\n+        } else if (descriptorLanguage == WDL) {\n+            resourceFilePath = \"hello.wdl\";\n+            dockstorePath = \"/Dockstore.wdl\";\n+            type = SourceFile.TypeEnum.DOCKSTORE_WDL;\n+        } else {\n+            throw new CustomWebApplicationException(\"Only wdl and cwl are an option\", HttpStatus.SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a372359a1344240ce4ba0d263cc8d20f8ad826"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDExMTcwOnYy", "diffSide": "LEFT", "path": "dockstore-webservice/src/main/resources/swagger.yaml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo1Nzo1N1rOGv8wkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjo0NDoyMVrOGww35Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzMTczMQ==", "bodyText": "is it no longer read only?", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452931731", "createdAt": "2020-07-10T15:57:57Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/swagger.yaml", "diffHunk": "@@ -6737,7 +6737,6 @@ definitions:\n       descriptorType:\n         type: \"array\"\n         position: 28\n-        readOnly: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a372359a1344240ce4ba0d263cc8d20f8ad826"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzExNzk2Mw==", "bodyText": "yeah I guess no longer read only. Most of the other tool fields aren't read only.", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r453117963", "createdAt": "2020-07-10T23:19:26Z", "author": {"login": "NatalieEO"}, "path": "dockstore-webservice/src/main/resources/swagger.yaml", "diffHunk": "@@ -6737,7 +6737,6 @@ definitions:\n       descriptorType:\n         type: \"array\"\n         position: 28\n-        readOnly: true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzMTczMQ=="}, "originalCommit": {"oid": "90a372359a1344240ce4ba0d263cc8d20f8ad826"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY4ODY3MA==", "bodyText": "Might have misunderstood, but should it not be a fully calculated/read-only column?\nDoes it make sense for a user of the API to change it?", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r453688670", "createdAt": "2020-07-13T14:25:45Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/resources/swagger.yaml", "diffHunk": "@@ -6737,7 +6737,6 @@ definitions:\n       descriptorType:\n         type: \"array\"\n         position: 28\n-        readOnly: true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzMTczMQ=="}, "originalCommit": {"oid": "90a372359a1344240ce4ba0d263cc8d20f8ad826"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc4NTU3Mw==", "bodyText": "I was confused. I changed it back to being readonly", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r453785573", "createdAt": "2020-07-13T16:44:21Z", "author": {"login": "NatalieEO"}, "path": "dockstore-webservice/src/main/resources/swagger.yaml", "diffHunk": "@@ -6737,7 +6737,6 @@ definitions:\n       descriptorType:\n         type: \"array\"\n         position: 28\n-        readOnly: true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzMTczMQ=="}, "originalCommit": {"oid": "90a372359a1344240ce4ba0d263cc8d20f8ad826"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDEzMDI1OnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/LimitedCRUDClientIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjowMzoyNlrOGv88ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjowMzoyNlrOGv88ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzNDc1Ng==", "bodyText": "assertEquals(CWL.toString()", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452934756", "createdAt": "2020-07-10T16:03:26Z", "author": {"login": "garyluu"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/LimitedCRUDClientIT.java", "diffHunk": "@@ -206,6 +210,24 @@ public void testToolVersionCreation() throws IOException {\n         api.editHostedTool(hostedTool.getId(), sourceFiles);\n     }\n \n+    @Test\n+    public void testGettingDescriptorType() throws IOException {\n+        ApiClient webClient = BaseIT.getWebClient(BaseIT.ADMIN_USERNAME, testingPostgres);\n+        HostedApi api = new HostedApi(webClient);\n+        DockstoreTool hostedTool = api\n+                .createHostedTool(\"awesomeTool\", Registry.QUAY_IO.getDockerPath().toLowerCase(), CWL.getShortName().toLowerCase(), \"coolNamespace\", null);\n+\n+        List<SourceFile> sourceFiles = generateSourceFiles(CWL);\n+\n+        hostedTool = api.editHostedTool(hostedTool.getId(), sourceFiles);\n+        assertEquals(\"CWL\", hostedTool.getDescriptorType().get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a372359a1344240ce4ba0d263cc8d20f8ad826"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDEzMzc4OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Tool.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjowNDozMlrOGv8-og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjowNDozMlrOGv8-og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzNTMzMA==", "bodyText": "Didn't see this earlier.  lang.toString().toUpperCase() =>lang.toString(), it gets confusing for others to use it otherwise.\n\"I have known DescriptorLanguages, do I uppercase it? do I lowercase it?\"\nSo in general, the database column should either store DescriptorLanguage enum itself or the DescriptorLanguage enum toString(), not titlecase, lowercase, uppercase,", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452935330", "createdAt": "2020-07-10T16:04:32Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Tool.java", "diffHunk": "@@ -455,4 +456,11 @@ public String getDefaultTestCwlParameterFile() {\n     public void setDefaultTestCwlParameterFile(String defaultTestCwlParameterFile) {\n         getDefaultPaths().put(DescriptorLanguage.FileType.CWL_TEST_JSON, defaultTestCwlParameterFile);\n     }\n+\n+    public List<String> calculateDescriptorType() {\n+        Set<DescriptorLanguage.FileType> set = this.getWorkflowVersions().stream().flatMap(tag -> tag.getSourceFiles().stream()).map(SourceFile::getType).collect(\n+                Collectors.toSet());\n+        return Arrays.stream(DescriptorLanguage.values()).filter(lang -> set.contains(lang.getFileType()))\n+                .map(lang -> lang.toString().toUpperCase()).distinct().collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a372359a1344240ce4ba0d263cc8d20f8ad826"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDE1MTIyOnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/LimitedCRUDClientIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjoxMDowMFrOGv9J2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNjoxMDowMFrOGv9J2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzODIwMQ==", "bodyText": "CWL.toString()", "url": "https://github.com/dockstore/dockstore/pull/3651#discussion_r452938201", "createdAt": "2020-07-10T16:10:00Z", "author": {"login": "garyluu"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/LimitedCRUDClientIT.java", "diffHunk": "@@ -206,6 +210,24 @@ public void testToolVersionCreation() throws IOException {\n         api.editHostedTool(hostedTool.getId(), sourceFiles);\n     }\n \n+    @Test\n+    public void testGettingDescriptorType() throws IOException {\n+        ApiClient webClient = BaseIT.getWebClient(BaseIT.ADMIN_USERNAME, testingPostgres);\n+        HostedApi api = new HostedApi(webClient);\n+        DockstoreTool hostedTool = api\n+                .createHostedTool(\"awesomeTool\", Registry.QUAY_IO.getDockerPath().toLowerCase(), CWL.getShortName().toLowerCase(), \"coolNamespace\", null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a372359a1344240ce4ba0d263cc8d20f8ad826"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2782, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}