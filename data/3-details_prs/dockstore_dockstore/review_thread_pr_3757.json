{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNTY5MjYz", "number": 3757, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDoyNjoxOFrOEcmfHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDoyOToyMFrOEcmkxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDI2MTQwOnYy", "diffSide": "RIGHT", "path": "THIRD-PARTY-LICENSES.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDoyNjoxOVrOHHOv8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODozODoyMFrOHHYxHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM0MzczMA==", "bodyText": "This looks like it occurred in a different PR, please create a ticket to make a CI build fail if this file is changing but not checked in.", "url": "https://github.com/dockstore/dockstore/pull/3757#discussion_r477343730", "createdAt": "2020-08-26T14:26:19Z", "author": {"login": "denis-yuen"}, "path": "THIRD-PARTY-LICENSES.txt", "diffHunk": "@@ -148,7 +148,7 @@ Lists of 360 third-party dependencies.\n      (MIT) ficus (com.iheart:ficus_2.12:1.4.4 - http://iheartradio.github.io/ficus)\n      (The Apache Software License, Version 2.0) FindBugs-jsr305 (com.google.code.findbugs:jsr305:3.0.2 - http://findbugs.sourceforge.net/)\n      (The Apache Software License, Version 2.0) GeAnTyRef (io.leangen.geantyref:geantyref:1.3.7 - https://github.com/leangen/geantyref)\n-     (The MIT license) GitHub API for Java (org.kohsuke:github-api:1.101 - https://github-api.kohsuke.org/)\n+     (The MIT license) GitHub API for Java (org.kohsuke:github-api:1.116 - https://github-api.kohsuke.org/)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "910b8c4ac484eb4ec114550c89f4db1e8944b750"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUwNzg2OQ==", "bodyText": "Done. Created a ticket to make a CI build fail.", "url": "https://github.com/dockstore/dockstore/pull/3757#discussion_r477507869", "createdAt": "2020-08-26T18:38:20Z", "author": {"login": "ByteMap"}, "path": "THIRD-PARTY-LICENSES.txt", "diffHunk": "@@ -148,7 +148,7 @@ Lists of 360 third-party dependencies.\n      (MIT) ficus (com.iheart:ficus_2.12:1.4.4 - http://iheartradio.github.io/ficus)\n      (The Apache Software License, Version 2.0) FindBugs-jsr305 (com.google.code.findbugs:jsr305:3.0.2 - http://findbugs.sourceforge.net/)\n      (The Apache Software License, Version 2.0) GeAnTyRef (io.leangen.geantyref:geantyref:1.3.7 - https://github.com/leangen/geantyref)\n-     (The MIT license) GitHub API for Java (org.kohsuke:github-api:1.101 - https://github-api.kohsuke.org/)\n+     (The MIT license) GitHub API for Java (org.kohsuke:github-api:1.116 - https://github-api.kohsuke.org/)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM0MzczMA=="}, "originalCommit": {"oid": "910b8c4ac484eb4ec114550c89f4db1e8944b750"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDI2NjMxOnYy", "diffSide": "LEFT", "path": "THIRD-PARTY-LICENSES.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDoyNzoxNFrOHHOy7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODozODo0NVrOHHYx4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM0NDQ5Mg==", "bodyText": "Ideally, in that ticket we also ignore/skip our own project (not third party) in this file.", "url": "https://github.com/dockstore/dockstore/pull/3757#discussion_r477344492", "createdAt": "2020-08-26T14:27:14Z", "author": {"login": "denis-yuen"}, "path": "THIRD-PARTY-LICENSES.txt", "diffHunk": "@@ -339,12 +339,12 @@ Lists of 360 third-party dependencies.\n      (Apache License 2.0) swagger-annotations (io.swagger:swagger-annotations:1.6.0 - https://github.com/swagger-api/swagger-core/modules/swagger-annotations)\n      (Apache License 2.0) swagger-core (io.swagger:swagger-core:1.6.0 - https://github.com/swagger-api/swagger-core/modules/swagger-core)\n      (Apache License 2.0) swagger-integration (io.swagger.core.v3:swagger-integration:2.1.1 - https://github.com/swagger-api/swagger-core/modules/swagger-integration)\n-     (Apache Software License, Version 2.0) swagger-java-bitbucket-client (io.dockstore:swagger-java-bitbucket-client:1.10.0-alpha.0-SNAPSHOT - https://github.com/dockstore/dockstore/swagger-java-bitbucket-client)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "910b8c4ac484eb4ec114550c89f4db1e8944b750"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUwODA2Nw==", "bodyText": "Done. Included that in the ticket that was just created.", "url": "https://github.com/dockstore/dockstore/pull/3757#discussion_r477508067", "createdAt": "2020-08-26T18:38:45Z", "author": {"login": "ByteMap"}, "path": "THIRD-PARTY-LICENSES.txt", "diffHunk": "@@ -339,12 +339,12 @@ Lists of 360 third-party dependencies.\n      (Apache License 2.0) swagger-annotations (io.swagger:swagger-annotations:1.6.0 - https://github.com/swagger-api/swagger-core/modules/swagger-annotations)\n      (Apache License 2.0) swagger-core (io.swagger:swagger-core:1.6.0 - https://github.com/swagger-api/swagger-core/modules/swagger-core)\n      (Apache License 2.0) swagger-integration (io.swagger.core.v3:swagger-integration:2.1.1 - https://github.com/swagger-api/swagger-core/modules/swagger-integration)\n-     (Apache Software License, Version 2.0) swagger-java-bitbucket-client (io.dockstore:swagger-java-bitbucket-client:1.10.0-alpha.0-SNAPSHOT - https://github.com/dockstore/dockstore/swagger-java-bitbucket-client)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM0NDQ5Mg=="}, "originalCommit": {"oid": "910b8c4ac484eb4ec114550c89f4db1e8944b750"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDI3NTg4OnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralIT.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDoyOToyMFrOHHO5Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODoxNzoyMVrOHHYEFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM0NjA3NQ==", "bodyText": "Oh, I see the reason for Gary's comment. We should not be able to blank the version data by API this way.\nSet just the hidden attribute to avoid breakage when we fix this", "url": "https://github.com/dockstore/dockstore/pull/3757#discussion_r477346075", "createdAt": "2020-08-26T14:29:20Z", "author": {"login": "denis-yuen"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralIT.java", "diffHunk": "@@ -711,6 +711,17 @@ public void testVersionTagHide() {\n         final long count2 = testingPostgres\n             .runSelectStatement(\"select count(*) from tag t, version_metadata vm where vm.hidden = 't' and t.id = vm.id\", long.class);\n         assertEquals(\"there should be 0 hidden tag\", 0, count2);\n+\n+        tags = new ArrayList<>();\n+        updatedTag = tag.get();\n+        updatedTag.setHidden(true);\n+        updatedTag.setVersionMetadata(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "910b8c4ac484eb4ec114550c89f4db1e8944b750"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1MTU0MQ==", "bodyText": "@garyluu Yeah I misunderstood, I also agree we should not be able to blank the version metadata directly.", "url": "https://github.com/dockstore/dockstore/pull/3757#discussion_r477351541", "createdAt": "2020-08-26T14:36:35Z", "author": {"login": "agduncan94"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralIT.java", "diffHunk": "@@ -711,6 +711,17 @@ public void testVersionTagHide() {\n         final long count2 = testingPostgres\n             .runSelectStatement(\"select count(*) from tag t, version_metadata vm where vm.hidden = 't' and t.id = vm.id\", long.class);\n         assertEquals(\"there should be 0 hidden tag\", 0, count2);\n+\n+        tags = new ArrayList<>();\n+        updatedTag = tag.get();\n+        updatedTag.setHidden(true);\n+        updatedTag.setVersionMetadata(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM0NjA3NQ=="}, "originalCommit": {"oid": "910b8c4ac484eb4ec114550c89f4db1e8944b750"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ5NjM0Mg==", "bodyText": "Reverted the integration test to what it was on develop. No need to add new tests as current tests already set the hidden attribute.", "url": "https://github.com/dockstore/dockstore/pull/3757#discussion_r477496342", "createdAt": "2020-08-26T18:17:21Z", "author": {"login": "ByteMap"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralIT.java", "diffHunk": "@@ -711,6 +711,17 @@ public void testVersionTagHide() {\n         final long count2 = testingPostgres\n             .runSelectStatement(\"select count(*) from tag t, version_metadata vm where vm.hidden = 't' and t.id = vm.id\", long.class);\n         assertEquals(\"there should be 0 hidden tag\", 0, count2);\n+\n+        tags = new ArrayList<>();\n+        updatedTag = tag.get();\n+        updatedTag.setHidden(true);\n+        updatedTag.setVersionMetadata(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM0NjA3NQ=="}, "originalCommit": {"oid": "910b8c4ac484eb4ec114550c89f4db1e8944b750"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2826, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}