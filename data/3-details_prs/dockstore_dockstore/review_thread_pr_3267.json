{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5OTAwNTk3", "number": 3267, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDozNjowOFrODjGZBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozNjozOFrODjIA7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTMxNDYzOnYy", "diffSide": "RIGHT", "path": "dockstore-common/src/main/java/io/dockstore/common/yaml/Service12.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDozNjowOFrOFut6RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDoyOTowNFrOFu7DWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzMTAxMw==", "bodyText": "Should we just user uppercase then?", "url": "https://github.com/dockstore/dockstore/pull/3267#discussion_r384531013", "createdAt": "2020-02-26T14:36:08Z", "author": {"login": "agduncan94"}, "path": "dockstore-common/src/main/java/io/dockstore/common/yaml/Service12.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *    Copyright 2020 OICR\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *    you may not use this file except in compliance with the License.\n+ *    You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    Unless required by applicable law or agreed to in writing, software\n+ *    distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *    See the License for the specific language governing permissions and\n+ *    limitations under the License.\n+ */\n+package io.dockstore.common.yaml;\n+\n+import javax.validation.constraints.NotNull;\n+import javax.validation.constraints.Pattern;\n+\n+import io.dockstore.common.DescriptorLanguageSubclass;\n+\n+/**\n+ * A service defined in a 1.2 .dockstore.yml. It differs from 1.1 in that there is a subclass instead of a type property.\n+ * And the subclass property is an enum, not a string.\n+ *\n+ * Couldn't get SnakeYaml to directly load the YAML into the JavaBean with an enum, because our values are lower-case\n+ * and the enums are upper-case. See https://stackoverflow.com/questions/25079332/parse-enum-by-value-using-snakeyaml.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efb3d8553066a51cd2e2146a77a3607a5b1fb97e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc0NjMyOA==", "bodyText": "\ud83d\udc4d That would make it easier.", "url": "https://github.com/dockstore/dockstore/pull/3267#discussion_r384746328", "createdAt": "2020-02-26T20:29:04Z", "author": {"login": "coverbeck"}, "path": "dockstore-common/src/main/java/io/dockstore/common/yaml/Service12.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *    Copyright 2020 OICR\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *    you may not use this file except in compliance with the License.\n+ *    You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    Unless required by applicable law or agreed to in writing, software\n+ *    distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *    See the License for the specific language governing permissions and\n+ *    limitations under the License.\n+ */\n+package io.dockstore.common.yaml;\n+\n+import javax.validation.constraints.NotNull;\n+import javax.validation.constraints.Pattern;\n+\n+import io.dockstore.common.DescriptorLanguageSubclass;\n+\n+/**\n+ * A service defined in a 1.2 .dockstore.yml. It differs from 1.1 in that there is a subclass instead of a type property.\n+ * And the subclass property is an enum, not a string.\n+ *\n+ * Couldn't get SnakeYaml to directly load the YAML into the JavaBean with an enum, because our values are lower-case\n+ * and the enums are upper-case. See https://stackoverflow.com/questions/25079332/parse-enum-by-value-using-snakeyaml.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUzMTAxMw=="}, "originalCommit": {"oid": "efb3d8553066a51cd2e2146a77a3607a5b1fb97e"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTU1NzQwOnYy", "diffSide": "RIGHT", "path": "dockstore-common/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozMTowM1rOFuwP3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozMTowM1rOFuwP3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2OTMxMA==", "bodyText": "Version probably redundant (should be managed in the root pom.xml since we use snakeyaml in a few places)", "url": "https://github.com/dockstore/dockstore/pull/3267#discussion_r384569310", "createdAt": "2020-02-26T15:31:03Z", "author": {"login": "denis-yuen"}, "path": "dockstore-common/pom.xml", "diffHunk": "@@ -46,6 +46,11 @@\n             <version>${postgresql.version}</version>\n             <scope>runtime</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.yaml</groupId>\n+            <artifactId>snakeyaml</artifactId>\n+            <version>1.24</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efb3d8553066a51cd2e2146a77a3607a5b1fb97e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTU2NDA4OnYy", "diffSide": "RIGHT", "path": "dockstore-common/src/main/java/io/dockstore/common/yaml/AbstractYamlService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozMjo0MlrOFuwUOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozMjo0MlrOFuwUOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3MDQyNQ==", "bodyText": "This model is one of our creation, so could use javadoc particularly with the less intuitive fields like environment, data, port", "url": "https://github.com/dockstore/dockstore/pull/3267#discussion_r384570425", "createdAt": "2020-02-26T15:32:42Z", "author": {"login": "denis-yuen"}, "path": "dockstore-common/src/main/java/io/dockstore/common/yaml/AbstractYamlService.java", "diffHunk": "@@ -0,0 +1,225 @@\n+/*\n+ *    Copyright 2020 OICR\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *    you may not use this file except in compliance with the License.\n+ *    You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    Unless required by applicable law or agreed to in writing, software\n+ *    distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *    See the License for the specific language governing permissions and\n+ *    limitations under the License.\n+ */\n+package io.dockstore.common.yaml;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.validation.constraints.NotNull;\n+\n+/**\n+ * Abstract base class for services defined in .dockstore.yml\n+ */\n+public abstract class AbstractYamlService {\n+    private String name;\n+    private String author;\n+    private String description;\n+    private List<String> files;\n+    private Scripts scripts;\n+    private Map<String, EnvironmentVariable> environment;\n+    private Map<String, DataSet> data;\n+\n+    public String getAuthor() {\n+        return author;\n+    }\n+\n+    public void setAuthor(String author) {\n+        this.author = author;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+\n+    public List<String> getFiles() {\n+        return files;\n+    }\n+\n+    public void setFiles(List<String> files) {\n+        this.files = files;\n+    }\n+\n+    public Scripts getScripts() {\n+        return scripts;\n+    }\n+\n+    public void setScripts(Scripts scripts) {\n+        this.scripts = scripts;\n+    }\n+\n+    public Map<String, EnvironmentVariable> getEnvironment() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efb3d8553066a51cd2e2146a77a3607a5b1fb97e"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTU2ODQ0OnYy", "diffSide": "RIGHT", "path": "dockstore-common/src/main/java/io/dockstore/common/yaml/Dockstore12Validator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozMzozOVrOFuwW9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozMzozOVrOFuwW9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3MTEyNA==", "bodyText": "Can probably simplify with !isEmpty", "url": "https://github.com/dockstore/dockstore/pull/3267#discussion_r384571124", "createdAt": "2020-02-26T15:33:39Z", "author": {"login": "denis-yuen"}, "path": "dockstore-common/src/main/java/io/dockstore/common/yaml/Dockstore12Validator.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ *    Copyright 2020 OICR\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *    you may not use this file except in compliance with the License.\n+ *    You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    Unless required by applicable law or agreed to in writing, software\n+ *    distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *    See the License for the specific language governing permissions and\n+ *    limitations under the License.\n+ */\n+package io.dockstore.common.yaml;\n+\n+import javax.validation.ConstraintValidator;\n+import javax.validation.ConstraintValidatorContext;\n+\n+/**\n+ * Validates that a DockstoreYaml12 instance has at least one workflow or at least one service\n+ */\n+public class Dockstore12Validator implements ConstraintValidator<ValidDockstore12, DockstoreYaml12> {\n+    @Override\n+    public void initialize(ValidDockstore12 constraintAnnotation) {\n+    }\n+\n+    @Override\n+    public boolean isValid(DockstoreYaml12 value, ConstraintValidatorContext context) {\n+        return value.getServices().size() > 0 || value.getWorkflows().size() > 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efb3d8553066a51cd2e2146a77a3607a5b1fb97e"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTU4MDYwOnYy", "diffSide": "RIGHT", "path": "dockstore-common/src/main/java/io/dockstore/common/yaml/Service12.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozNjozOFrOFuwewQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjowMDo0MFrOFu97fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3MzEyMQ==", "bodyText": "This isn't being highlighted as an annotation in the GitHub web ui, watch out in case there is a formatting thing going on", "url": "https://github.com/dockstore/dockstore/pull/3267#discussion_r384573121", "createdAt": "2020-02-26T15:36:38Z", "author": {"login": "denis-yuen"}, "path": "dockstore-common/src/main/java/io/dockstore/common/yaml/Service12.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *    Copyright 2020 OICR\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *    you may not use this file except in compliance with the License.\n+ *    You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    Unless required by applicable law or agreed to in writing, software\n+ *    distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *    See the License for the specific language governing permissions and\n+ *    limitations under the License.\n+ */\n+package io.dockstore.common.yaml;\n+\n+import javax.validation.constraints.NotNull;\n+import javax.validation.constraints.Pattern;\n+\n+import io.dockstore.common.DescriptorLanguageSubclass;\n+\n+/**\n+ * A service defined in a 1.2 .dockstore.yml. It differs from 1.1 in that there is a subclass instead of a type property.\n+ * And the subclass property is an enum, not a string.\n+ *\n+ * Couldn't get SnakeYaml to directly load the YAML into the JavaBean with an enum, because our values are lower-case\n+ * and the enums are upper-case. See https://stackoverflow.com/questions/25079332/parse-enum-by-value-using-snakeyaml.\n+ */\n+public class Service12 extends AbstractYamlService {\n+\n+    public  static final String SUBCLASS_ERROR = \"subclass value must be \\\"docker-compose\\\", \\\"helm\\\", \\\"swarm\\\", \\\"kubernetes\\\", or \\\"n/a\\\"\";\n+    private String subclass;\n+    private DescriptorLanguageSubclass descriptorLanguageSubclass;\n+\n+\n+    @NotNull(message = \"Missing property \\\"subclass\\\"\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efb3d8553066a51cd2e2146a77a3607a5b1fb97e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5MzQ2OQ==", "bodyText": "Hmm, not sure why it's doing that. Added a test to explicitly catch that this message is returned.", "url": "https://github.com/dockstore/dockstore/pull/3267#discussion_r384793469", "createdAt": "2020-02-26T22:00:40Z", "author": {"login": "coverbeck"}, "path": "dockstore-common/src/main/java/io/dockstore/common/yaml/Service12.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ *    Copyright 2020 OICR\n+ *\n+ *    Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *    you may not use this file except in compliance with the License.\n+ *    You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    Unless required by applicable law or agreed to in writing, software\n+ *    distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *    See the License for the specific language governing permissions and\n+ *    limitations under the License.\n+ */\n+package io.dockstore.common.yaml;\n+\n+import javax.validation.constraints.NotNull;\n+import javax.validation.constraints.Pattern;\n+\n+import io.dockstore.common.DescriptorLanguageSubclass;\n+\n+/**\n+ * A service defined in a 1.2 .dockstore.yml. It differs from 1.1 in that there is a subclass instead of a type property.\n+ * And the subclass property is an enum, not a string.\n+ *\n+ * Couldn't get SnakeYaml to directly load the YAML into the JavaBean with an enum, because our values are lower-case\n+ * and the enums are upper-case. See https://stackoverflow.com/questions/25079332/parse-enum-by-value-using-snakeyaml.\n+ */\n+public class Service12 extends AbstractYamlService {\n+\n+    public  static final String SUBCLASS_ERROR = \"subclass value must be \\\"docker-compose\\\", \\\"helm\\\", \\\"swarm\\\", \\\"kubernetes\\\", or \\\"n/a\\\"\";\n+    private String subclass;\n+    private DescriptorLanguageSubclass descriptorLanguageSubclass;\n+\n+\n+    @NotNull(message = \"Missing property \\\"subclass\\\"\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3MzEyMQ=="}, "originalCommit": {"oid": "efb3d8553066a51cd2e2146a77a3607a5b1fb97e"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3007, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}