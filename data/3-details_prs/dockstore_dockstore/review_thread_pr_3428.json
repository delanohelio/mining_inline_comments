{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5Nzk3MDMx", "number": 3428, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMDozNDo1NlrOD29dGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDo0Nzo0OFrOD3X87g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTU2NTY5OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMDozNDo1NlrOGM9dbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMDozNDo1NlrOGM9dbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI0MzA1NA==", "bodyText": "Unnecessary I think -- you're not using its return value.", "url": "https://github.com/dockstore/dockstore/pull/3428#discussion_r416243054", "createdAt": "2020-04-28T00:34:56Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "diffHunk": "@@ -301,6 +309,20 @@ protected String createValidationMessages(U version) {\n         return result.toString();\n     }\n \n+    protected String invalidFileNames(U version) {\n+        Set<SourceFile> sourceFiles = version.getSourceFiles();\n+        StringBuilder invalidFileNames = new StringBuilder();\n+\n+        sourceFiles.stream().forEach(sourceFile -> {\n+            sourceFile.getPath().endsWith(\"/\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef2c110eede08bca6a8a7960845e7985d0511ab8"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTY3NjgxOnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/CRUDClientIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMToyMTowOVrOGM-Z5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMToyMTowOVrOGM-Z5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI1ODUzNA==", "bodyText": "shouldn't need to lowercase it", "url": "https://github.com/dockstore/dockstore/pull/3428#discussion_r416258534", "createdAt": "2020-04-28T01:21:09Z", "author": {"login": "garyluu"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/CRUDClientIT.java", "diffHunk": "@@ -329,6 +329,36 @@ public void testWorkflowEditingWithAuthorMetadataWDL() throws IOException {\n         assertTrue(!dockstoreWorkflow.getAuthor().isEmpty() && !dockstoreWorkflow.getEmail().isEmpty());\n     }\n \n+    @Test\n+    public void testValidHostedFileNames() throws IOException {\n+        HostedApi api = new HostedApi(getWebClient(ADMIN_USERNAME, testingPostgres));\n+        Workflow hostedWorkflow = api\n+                .createHostedWorkflow(\"awesomeTool\", null, DescriptorLanguage.WDL.toString().toLowerCase(), null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef2c110eede08bca6a8a7960845e7985d0511ab8"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MjU2ODc2OnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/CRUDClientIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNToxOTowNFrOGNZXpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNToxOTowNFrOGNZXpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcwMDMyNA==", "bodyText": "Use a constant across this and the next file, otherwise can easily modify one and forget to modify the other", "url": "https://github.com/dockstore/dockstore/pull/3428#discussion_r416700324", "createdAt": "2020-04-28T15:19:04Z", "author": {"login": "denis-yuen"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/CRUDClientIT.java", "diffHunk": "@@ -329,6 +329,36 @@ public void testWorkflowEditingWithAuthorMetadataWDL() throws IOException {\n         assertTrue(!dockstoreWorkflow.getAuthor().isEmpty() && !dockstoreWorkflow.getEmail().isEmpty());\n     }\n \n+    @Test\n+    public void testValidHostedFileNames() throws IOException {\n+        HostedApi api = new HostedApi(getWebClient(ADMIN_USERNAME, testingPostgres));\n+        Workflow hostedWorkflow = api\n+                .createHostedWorkflow(\"awesomeTool\", null, DescriptorLanguage.WDL.toString().toLowerCase(), null, null);\n+        SourceFile file = new SourceFile();\n+        file.setContent(FileUtils.readFileToString(new File(ResourceHelpers.resourceFilePath(\"metadata_example2.wdl\")), StandardCharsets.UTF_8));\n+        file.setType(SourceFile.TypeEnum.DOCKSTORE_WDL);\n+        file.setPath(\"/Dockstore.wdl\");\n+        SourceFile file2 = new SourceFile();\n+        file2.setContent(FileUtils.readFileToString(new File(ResourceHelpers.resourceFilePath(\"metadata_example2.wdl\")), StandardCharsets.UTF_8));\n+        file2.setPath(\"/\");\n+        List sourceFiles = new ArrayList();\n+        sourceFiles.add(file);\n+        sourceFiles.add(file2);\n+\n+        thrown.expectMessage(\"Files must have a name\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef2c110eede08bca6a8a7960845e7985d0511ab8"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5Mzg2MzQ2OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDozNTowNVrOGNl3DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDozNTowNVrOGNl3DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkwNDk3Mw==", "bodyText": "wait a min...isn't there an extra space at the end? I think it should be an array of strings and then join  with \" \"", "url": "https://github.com/dockstore/dockstore/pull/3428#discussion_r416904973", "createdAt": "2020-04-28T20:35:05Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "diffHunk": "@@ -301,6 +309,19 @@ protected String createValidationMessages(U version) {\n         return result.toString();\n     }\n \n+    protected String invalidFileNames(U version) {\n+        Set<SourceFile> sourceFiles = version.getSourceFiles();\n+        StringBuilder invalidFileNames = new StringBuilder();\n+\n+        sourceFiles.stream().forEach(sourceFile -> {\n+            if (sourceFile.getPath().endsWith(\"/\")) {\n+                invalidFileNames.append(sourceFile.getPath() + \" \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21cba0079fea39b5a4eacf37c9b6ac7730f92ab5"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzkwNzAyOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDo0Nzo0OFrOGNmSKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMDo0Nzo0OFrOGNmSKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkxMTkxNA==", "bodyText": "Minor, optional stuff:\n\nPlural method name implies it returns a list/collection, but you return a string. I would either rename to something like invalidFileNamesMessage or leave the name and return a List<String> and let the caller convert to a string.\nIn general, not sure if so for hosted entries, filenames can contain spaces, so I would separate them with a comma-space rather than a space.\n\nEven more optional, but I prefer a more functional way of writing this, untested:\nreturn sourceFiles.stream()\n  .map(sf -> sf.getPath())\n  .filter(path -> path.endsWith(\"/\"))\n  .collect(Collectors.joining(\", \"));\n  //.collect(Collectors.toList()); // If you wanted to return a list instead", "url": "https://github.com/dockstore/dockstore/pull/3428#discussion_r416911914", "createdAt": "2020-04-28T20:47:48Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "diffHunk": "@@ -301,6 +309,19 @@ protected String createValidationMessages(U version) {\n         return result.toString();\n     }\n \n+    protected String invalidFileNames(U version) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21cba0079fea39b5a4eacf37c9b6ac7730f92ab5"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2926, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}