{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNDEyODE3", "number": 3392, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjozODowMVrODyJ0zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjozODoxNFrODyJ1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTE2MzY2OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/proposedGA4GH/ToolsApiExtendedServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjozODowMVrOGGCNLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjozODowMVrOGGCNLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk4MDc4Mw==", "bodyText": "We should log the exception", "url": "https://github.com/dockstore/dockstore/pull/3392#discussion_r408980783", "createdAt": "2020-04-15T16:38:01Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/proposedGA4GH/ToolsApiExtendedServiceImpl.java", "diffHunk": "@@ -211,9 +213,17 @@ public Response toolsIndexSearch(String query, MultivaluedMap<String, String> qu\n                             HttpStatus.SC_INTERNAL_SERVER_ERROR);\n                 }\n                 return Response.ok().entity(get.getEntity().getContent()).build();\n-            } catch (IOException e) {\n-                LOG.error(\"Could not use elastic search index\", e);\n-                throw new CustomWebApplicationException(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);\n+            } catch (ResponseException e) {\n+                // Only surface these codes to the user, everything else is not entirely obvious so returning 500 instead.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b69b86fb624be896fac1fd7dce3b4b54f45c1bb6"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTE2NDcwOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/proposedGA4GH/ToolsApiExtendedServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjozODoxNFrOGGCNyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjozODoxNFrOGGCNyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk4MDkzNw==", "bodyText": "Log the exception", "url": "https://github.com/dockstore/dockstore/pull/3392#discussion_r408980937", "createdAt": "2020-04-15T16:38:14Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/proposedGA4GH/ToolsApiExtendedServiceImpl.java", "diffHunk": "@@ -211,9 +213,17 @@ public Response toolsIndexSearch(String query, MultivaluedMap<String, String> qu\n                             HttpStatus.SC_INTERNAL_SERVER_ERROR);\n                 }\n                 return Response.ok().entity(get.getEntity().getContent()).build();\n-            } catch (IOException e) {\n-                LOG.error(\"Could not use elastic search index\", e);\n-                throw new CustomWebApplicationException(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);\n+            } catch (ResponseException e) {\n+                // Only surface these codes to the user, everything else is not entirely obvious so returning 500 instead.\n+                int[] codesToResurface = {HttpStatus.SC_BAD_REQUEST};\n+                int statusCode = e.getResponse().getStatusLine().getStatusCode();\n+                if (ArrayUtils.contains(codesToResurface, statusCode)) {\n+                    throw new CustomWebApplicationException(e.getMessage(), statusCode);\n+                } else {\n+                    throw new CustomWebApplicationException(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);\n+                }\n+            } catch (IOException e2) {\n+                throw new CustomWebApplicationException(e2.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b69b86fb624be896fac1fd7dce3b4b54f45c1bb6"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2911, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}