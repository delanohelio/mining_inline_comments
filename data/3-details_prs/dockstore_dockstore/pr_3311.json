{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NzE3MzY1", "number": 3311, "title": "checksums for file descriptors", "bodyText": "https://ucsc-cgl.atlassian.net/browse/SEAB-840", "createdAt": "2020-03-09T17:23:53Z", "url": "https://github.com/dockstore/dockstore/pull/3311", "merged": true, "mergeCommit": {"oid": "c0c3588083546095f644bb027e12f5ac3228ed10"}, "closed": true, "closedAt": "2020-03-17T23:51:27Z", "author": {"login": "NatalieEO"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMBtcfgFqTM3MTM4NzAwMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOqYnHgFqTM3NjQ0NjcwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMzg3MDAz", "url": "https://github.com/dockstore/dockstore/pull/3311#pullrequestreview-371387003", "createdAt": "2020-03-09T17:32:20Z", "commit": {"oid": "1777bc4efe2c82b936ad1512bd7b4259b41f6fe4"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzozMjoyMVrOFzybXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzo1MjozM1rOFzzMMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0NzkwMw==", "bodyText": "Should be FileFormatHelper.class", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389847903", "createdAt": "2020-03-09T17:32:21Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/FileFormatHelper.java", "diffHunk": "@@ -1,24 +1,33 @@\n package io.dockstore.webservice.helpers;\n \n+import java.io.UnsupportedEncodingException;\n+import java.security.MessageDigest;\n+import java.security.NoSuchAlgorithmException;\n import java.util.List;\n import java.util.Set;\n import java.util.SortedSet;\n import java.util.TreeSet;\n import java.util.stream.Collectors;\n \n+import javax.xml.bind.DatatypeConverter;\n+\n import io.dockstore.common.DescriptorLanguage;\n import io.dockstore.webservice.core.FileFormat;\n import io.dockstore.webservice.core.SourceFile;\n import io.dockstore.webservice.core.Version;\n import io.dockstore.webservice.jdbi.FileFormatDAO;\n+import io.dockstore.webservice.jdbi.UserDAO;\n import io.dockstore.webservice.languages.CWLHandler;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n /**\n  * This class helps resolve file formats in versions\n  * @author gluu\n  * @since 1.5.0\n  */\n public final class FileFormatHelper {\n+    private static final Logger LOG = LoggerFactory.getLogger(UserDAO.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1777bc4efe2c82b936ad1512bd7b4259b41f6fe4"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg1MjE1MQ==", "bodyText": "Suggest you return an  Optional<String> since you can return a null. Your code where you use this function doesn't check for a null, which makes an argument for why you should be returning an Optional. :)\nOn the other hand, if you think this is such an unlikely/impossible occurrence, which is possible (if UTF-8 encoding is not present, nothing's going to work, probably the same for SHA-1 algorithm not being present, not sure about UnsupportedOperationException), then maybe you should return a String and throw an exception.", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389852151", "createdAt": "2020-03-09T17:39:29Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/FileFormatHelper.java", "diffHunk": "@@ -66,4 +75,18 @@ public static void updateFileFormats(Set<? extends Version> versions, final File\n         });\n         return fileFormatsFromDB;\n     }\n+\n+    public static String calcSHA1(String content) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1777bc4efe2c82b936ad1512bd7b4259b41f6fe4"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg1MzE3NQ==", "bodyText": "This isn't doing anything -- toLowerCase returns a new string which you aren't using. It doesn't modify the existing one.\nWhy are you doing this? Not saying you shouldn't, but can you add a comment explaining why?", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389853175", "createdAt": "2020-03-09T17:41:04Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/FileFormatHelper.java", "diffHunk": "@@ -66,4 +75,18 @@ public static void updateFileFormats(Set<? extends Version> versions, final File\n         });\n         return fileFormatsFromDB;\n     }\n+\n+    public static String calcSHA1(String content) {\n+        //return org.apache.commons.codec.digest.DigestUtils.sha1Hex(content);\n+        String sha1 = null;\n+        try {\n+            MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");\n+            messageDigest.update(content.getBytes(\"UTF-8\"), 0, content.length());\n+            sha1 = DatatypeConverter.printHexBinary(messageDigest.digest());\n+            sha1.toLowerCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1777bc4efe2c82b936ad1512bd7b4259b41f6fe4"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg1MzgyNA==", "bodyText": "Can content ever be null? I suspect not, but you might want to make sure in the database and/or add a guard.", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389853824", "createdAt": "2020-03-09T17:42:01Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/FileFormatHelper.java", "diffHunk": "@@ -66,4 +75,18 @@ public static void updateFileFormats(Set<? extends Version> versions, final File\n         });\n         return fileFormatsFromDB;\n     }\n+\n+    public static String calcSHA1(String content) {\n+        //return org.apache.commons.codec.digest.DigestUtils.sha1Hex(content);\n+        String sha1 = null;\n+        try {\n+            MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");\n+            messageDigest.update(content.getBytes(\"UTF-8\"), 0, content.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1777bc4efe2c82b936ad1512bd7b4259b41f6fe4"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2MDQwMA==", "bodyText": "This is probably OK, but just checking... Collections.singleton returns an immutable list. If at some point in the future we wanted to add a second checksum in the same session, this could cause problems. But I'm probably overthinking it. I guess if we added a second checksum, we would do it right here.", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389860400", "createdAt": "2020-03-09T17:52:33Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1308,6 +1311,14 @@ public Workflow manualRegister(@ApiParam(hidden = true) @Auth User user,\n                     String toolsJSONTable = lInterface.getContent(w.getWorkflowPath(), getMainDescriptorFile(existingTag).getContent(), extractDescriptorAndSecondaryFiles(existingTag), LanguageHandlerInterface.Type.TOOLS, toolDAO);\n                     Set<Image> images = lInterface.getImagesFromRegistry(toolsJSONTable);\n                     existingTag.getImages().addAll(images);\n+\n+                    // Grab checksum for file descriptors if not already available.\n+                    for (SourceFile sourceFile : existingTag.getSourceFiles()) {\n+                        if (sourceFile.getChecksums() == null || sourceFile.getChecksums().isEmpty()) {\n+                            String sha = FileFormatHelper.calcSHA1(sourceFile.getContent());\n+                            sourceFile.setChecksums(Collections.singletonList(new Checksum(SHA_TYPE_FOR_SOURCEFILES, sha)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "398785e8d581eb20b4e15489676030a35c01b22c"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDAyMDU5", "url": "https://github.com/dockstore/dockstore/pull/3311#pullrequestreview-371402059", "createdAt": "2020-03-09T17:52:44Z", "commit": {"oid": "398785e8d581eb20b4e15489676030a35c01b22c"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzo1Mjo0NFrOFzzMnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODoyMToxMVrOFz0LUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2MDUwOQ==", "bodyText": "testedWDL check is a bit strange, it will always be true here but isn't checked if, for example the workflow has no versions at all", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389860509", "createdAt": "2020-03-09T17:52:44Z", "author": {"login": "denis-yuen"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/WorkflowIT.java", "diffHunk": "@@ -922,6 +922,34 @@ private void verifyChecksumsAreSaved(WorkflowVersion version) {\n         }\n     }\n \n+    @Test\n+    public void testChecksumsForSourceFiles() {\n+        // Test grabbing checksum on refresh\n+        final ApiClient webClient = getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n+        Workflow workflow = workflowsApi.manualRegister(\"github\", \"DockstoreTestUser2/hello-dockstore-workflow\", \"/Dockstore.wdl\", \"\", \"wdl\", \"/test.json\");\n+\n+        workflow = workflowsApi.refresh(workflow.getId());\n+        List<WorkflowVersion> workflowVersions = workflow.getWorkflowVersions();\n+        assertFalse(workflowVersions.isEmpty());\n+        boolean testedWDL = false;\n+\n+        for (WorkflowVersion workflowVersion : workflowVersions) {\n+            if (workflowVersion.getName().equals(\"testBoth\") || workflowVersion.getName().equals(\"testWDL\")) {\n+                testedWDL = true;\n+                assertTrue(testedWDL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "398785e8d581eb20b4e15489676030a35c01b22c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2MDg5OA==", "bodyText": "Might be true if sourceFile.getChecksums() is empty but not null?\nDitto above", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389860898", "createdAt": "2020-03-09T17:53:28Z", "author": {"login": "denis-yuen"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/WorkflowIT.java", "diffHunk": "@@ -922,6 +922,34 @@ private void verifyChecksumsAreSaved(WorkflowVersion version) {\n         }\n     }\n \n+    @Test\n+    public void testChecksumsForSourceFiles() {\n+        // Test grabbing checksum on refresh\n+        final ApiClient webClient = getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n+        Workflow workflow = workflowsApi.manualRegister(\"github\", \"DockstoreTestUser2/hello-dockstore-workflow\", \"/Dockstore.wdl\", \"\", \"wdl\", \"/test.json\");\n+\n+        workflow = workflowsApi.refresh(workflow.getId());\n+        List<WorkflowVersion> workflowVersions = workflow.getWorkflowVersions();\n+        assertFalse(workflowVersions.isEmpty());\n+        boolean testedWDL = false;\n+\n+        for (WorkflowVersion workflowVersion : workflowVersions) {\n+            if (workflowVersion.getName().equals(\"testBoth\") || workflowVersion.getName().equals(\"testWDL\")) {\n+                testedWDL = true;\n+                assertTrue(testedWDL);\n+                assertNotNull(workflowVersion.getSourceFiles());\n+                workflowVersion.getSourceFiles().stream().forEach(sourceFile -> assertNotNull(\"Should have checksums\", sourceFile.getChecksums()));\n+            }\n+            workflowVersion.getSourceFiles();\n+        }\n+\n+        // Test grabbing checksum on snapshot\n+        WorkflowVersion version = snapshotWorkflowVersion(workflowsApi, \"dockstore-testing/hello_world\", \"/hello_world.cwl\", \"1.0.1\");\n+        assertNotNull(version.getSourceFiles());\n+        version.getSourceFiles().stream().forEach(sourceFile -> assertNotNull(\"Should have checksums\", sourceFile.getChecksums()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "398785e8d581eb20b4e15489676030a35c01b22c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NDkzNA==", "bodyText": "Might be able to use something like StandardCharsets.UTF8, not sure about SHA-1.", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389864934", "createdAt": "2020-03-09T17:59:58Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/FileFormatHelper.java", "diffHunk": "@@ -66,4 +75,16 @@ public static void updateFileFormats(Set<? extends Version> versions, final File\n         });\n         return fileFormatsFromDB;\n     }\n+\n+    public static String calcSHA1(String content) {\n+        String sha1 = null;\n+        try {\n+            MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");\n+            messageDigest.update(content.getBytes(\"UTF-8\"), 0, content.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "398785e8d581eb20b4e15489676030a35c01b22c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NTg2OQ==", "bodyText": "Should maybe match string used in calcSHA1 and be SHA-1", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389865869", "createdAt": "2020-03-09T18:01:34Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/GitHubSourceCodeRepo.java", "diffHunk": "@@ -88,6 +89,7 @@\n public class GitHubSourceCodeRepo extends SourceCodeRepoInterface {\n \n     private static final Logger LOG = LoggerFactory.getLogger(GitHubSourceCodeRepo.class);\n+    private static final String SHA_TYPE_FOR_SOURCEFILES = \"sha1\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "398785e8d581eb20b4e15489676030a35c01b22c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3NjE4Nw==", "bodyText": "Ditto, there should probably only be the one constant as well", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389876187", "createdAt": "2020-03-09T18:20:33Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -154,6 +156,7 @@\n     private static final String ALIASES = \"aliases\";\n     private static final String VALIDATIONS = \"validations\";\n     private static final String IMAGES = \"images\";\n+    private static final String SHA_TYPE_FOR_SOURCEFILES = \"sha1\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "398785e8d581eb20b4e15489676030a35c01b22c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg3NjU2Mw==", "bodyText": "id should be descriptive  (helps with debugging migrations)", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389876563", "createdAt": "2020-03-09T18:21:11Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/resources/migrations.1.9.0.xml", "diffHunk": "@@ -57,4 +57,10 @@\n             UPDATE workflowversion SET islegacyversion=false WHERE id IN (SELECT wv.id FROM workflowversion wv JOIN workflow_workflowversion wwv ON wv.id=wwv.workflowversionid WHERE wwv.workflowid IN (SELECT id FROM workflow WHERE mode='DOCKSTORE_YML'));\n         </sql>\n     </changeSet>\n+\n+    <changeSet author=\"natalieperez (generated)\" id=\"1583371295490-1\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "398785e8d581eb20b4e15489676030a35c01b22c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTU5MDA5", "url": "https://github.com/dockstore/dockstore/pull/3311#pullrequestreview-371559009", "createdAt": "2020-03-09T22:01:26Z", "commit": {"oid": "6e6a441b29aa47864b93e61a1a81ac50aec4e1f9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjowMToyN1rOFz64Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjoxOTowNlrOFz7SEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4NjM0Ng==", "bodyText": "This is fine, but FYI, you could write it to be something like this (didn't try to compile it, so syntax could be off), which is my own personal preference:\nFileFormatHelper.calcSHA1(file.getContent()).ifPresent(sha -> file.getChecksums().add(new Checksum(SHA_TYPE_FOR_SOURCEFILES, sha));", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389986346", "createdAt": "2020-03-09T22:01:27Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/GitHubSourceCodeRepo.java", "diffHunk": "@@ -617,6 +622,10 @@ private WorkflowVersion setupServiceFilesForGitHubVersion(Triple<String, Date, S\n                 file.setPath(filePath);\n                 file.setContent(fileContent);\n                 file.setType(DescriptorLanguage.FileType.DOCKSTORE_SERVICE_OTHER);\n+                Optional<String> sha = FileFormatHelper.calcSHA1(file.getContent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e6a441b29aa47864b93e61a1a81ac50aec4e1f9"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4Nzk5Nw==", "bodyText": "What is this for?", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389987997", "createdAt": "2020-03-09T22:05:37Z", "author": {"login": "coverbeck"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/WorkflowIT.java", "diffHunk": "@@ -922,6 +922,34 @@ private void verifyChecksumsAreSaved(WorkflowVersion version) {\n         }\n     }\n \n+    @Test\n+    public void testChecksumsForSourceFiles() {\n+        // Test grabbing checksum on refresh\n+        final ApiClient webClient = getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n+        Workflow workflow = workflowsApi.manualRegister(\"github\", \"DockstoreTestUser2/hello-dockstore-workflow\", \"/Dockstore.wdl\", \"\", \"wdl\", \"/test.json\");\n+\n+        workflow = workflowsApi.refresh(workflow.getId());\n+        List<WorkflowVersion> workflowVersions = workflow.getWorkflowVersions();\n+        assertFalse(workflowVersions.isEmpty());\n+        boolean testedWDL = false;\n+\n+        for (WorkflowVersion workflowVersion : workflowVersions) {\n+            if (workflowVersion.getName().equals(\"testBoth\") || workflowVersion.getName().equals(\"testWDL\")) {\n+                testedWDL = true;\n+                assertNotNull(workflowVersion.getSourceFiles());\n+                workflowVersion.getSourceFiles().stream().forEach(sourceFile -> assertFalse(\"Source file should have a checksum\", sourceFile.getChecksums().get(0).toString().isEmpty()));\n+            }\n+            workflowVersion.getSourceFiles();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e6a441b29aa47864b93e61a1a81ac50aec4e1f9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4ODcxMg==", "bodyText": "It's probably overkill, but it would nice to verify the checksums didn't exist before doing the snapshot.", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389988712", "createdAt": "2020-03-09T22:07:37Z", "author": {"login": "coverbeck"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/WorkflowIT.java", "diffHunk": "@@ -922,6 +922,34 @@ private void verifyChecksumsAreSaved(WorkflowVersion version) {\n         }\n     }\n \n+    @Test\n+    public void testChecksumsForSourceFiles() {\n+        // Test grabbing checksum on refresh\n+        final ApiClient webClient = getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowsApi = new WorkflowsApi(webClient);\n+        Workflow workflow = workflowsApi.manualRegister(\"github\", \"DockstoreTestUser2/hello-dockstore-workflow\", \"/Dockstore.wdl\", \"\", \"wdl\", \"/test.json\");\n+\n+        workflow = workflowsApi.refresh(workflow.getId());\n+        List<WorkflowVersion> workflowVersions = workflow.getWorkflowVersions();\n+        assertFalse(workflowVersions.isEmpty());\n+        boolean testedWDL = false;\n+\n+        for (WorkflowVersion workflowVersion : workflowVersions) {\n+            if (workflowVersion.getName().equals(\"testBoth\") || workflowVersion.getName().equals(\"testWDL\")) {\n+                testedWDL = true;\n+                assertNotNull(workflowVersion.getSourceFiles());\n+                workflowVersion.getSourceFiles().stream().forEach(sourceFile -> assertFalse(\"Source file should have a checksum\", sourceFile.getChecksums().get(0).toString().isEmpty()));\n+            }\n+            workflowVersion.getSourceFiles();\n+        }\n+        assertTrue(testedWDL);\n+\n+        // Test grabbing checksum on snapshot", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e6a441b29aa47864b93e61a1a81ac50aec4e1f9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk5Mjk3Ng==", "bodyText": "Missed this the first time; content.length is wrong; you need the length of the byte array, something like:\nfinal byte [] bytes = content.getBytes(StandardCharsets.UTF_8);\nmessageDigest.update(bytes, 0, bytes.length);\n\nExplanation: content.length() returns the number of characters; a character can be made of more than one byte, so the bytes array length might be longer the number of characters. Typically not an issue for \"standard\" English characters, but throw in some accented characters or non-Latin characters, and it will become one.", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r389992976", "createdAt": "2020-03-09T22:19:06Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/FileFormatHelper.java", "diffHunk": "@@ -66,4 +75,20 @@ public static void updateFileFormats(Set<? extends Version> versions, final File\n         });\n         return fileFormatsFromDB;\n     }\n+\n+    public static Optional<String> calcSHA1(String content) {\n+        if (content != null) {\n+            try {\n+                MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");\n+                messageDigest.update(content.getBytes(StandardCharsets.UTF_8), 0, content.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e6a441b29aa47864b93e61a1a81ac50aec4e1f9"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5be06b8343757cd43efd6660255dc7a027fcadfb", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/5be06b8343757cd43efd6660255dc7a027fcadfb", "committedDate": "2020-03-17T15:43:25Z", "message": "checksums for files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "756b134b2e99fbf119f9963b33e3eeb6542e0140", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/756b134b2e99fbf119f9963b33e3eeb6542e0140", "committedDate": "2020-03-17T15:43:25Z", "message": "remove comment and fix failing build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ac87417d444e1b005910230754a169e6b4a3e44", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/5ac87417d444e1b005910230754a169e6b4a3e44", "committedDate": "2020-03-17T15:44:08Z", "message": "PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d82f0c32f12509fe7b19d436d72da884f2a01464", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/d82f0c32f12509fe7b19d436d72da884f2a01464", "committedDate": "2020-03-17T15:44:08Z", "message": "checksums for sourcefiles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df25a03bceaef80c63a76276f872876031883ebf", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/df25a03bceaef80c63a76276f872876031883ebf", "committedDate": "2020-03-17T15:59:29Z", "message": "rebase and change import"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5acaa35a51515da2391760b84d77c8b59bc2d710", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/5acaa35a51515da2391760b84d77c8b59bc2d710", "committedDate": "2020-03-17T06:21:17Z", "message": "checksums for sourcefiles"}, "afterCommit": {"oid": "df25a03bceaef80c63a76276f872876031883ebf", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/df25a03bceaef80c63a76276f872876031883ebf", "committedDate": "2020-03-17T15:59:29Z", "message": "rebase and change import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "343577e38a1ff42af717176ab64b7aaeac4d748c", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/343577e38a1ff42af717176ab64b7aaeac4d748c", "committedDate": "2020-03-17T16:22:57Z", "message": "forgot to delete"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzQyNzY0", "url": "https://github.com/dockstore/dockstore/pull/3311#pullrequestreview-376342764", "createdAt": "2020-03-17T19:31:39Z", "commit": {"oid": "343577e38a1ff42af717176ab64b7aaeac4d748c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTozMTozOVrOF3q-6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTozMTozOVrOF3q-6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyMDIzNQ==", "bodyText": "Was a missing equals  the reason for the odd behaviour?", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r393920235", "createdAt": "2020-03-17T19:31:39Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Checksum.java", "diffHunk": "@@ -55,4 +57,21 @@ public void setChecksum(String checksum) {\n     public String toString() {\n         return this.getType() + \":\" + this.getChecksum();\n     }\n+\n+    @Override\n+    public boolean equals(final Object o) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "343577e38a1ff42af717176ab64b7aaeac4d748c"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzU2MTI2", "url": "https://github.com/dockstore/dockstore/pull/3311#pullrequestreview-376356126", "createdAt": "2020-03-17T19:51:57Z", "commit": {"oid": "343577e38a1ff42af717176ab64b7aaeac4d748c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzcxNTg0", "url": "https://github.com/dockstore/dockstore/pull/3311#pullrequestreview-376371584", "createdAt": "2020-03-17T20:14:39Z", "commit": {"oid": "343577e38a1ff42af717176ab64b7aaeac4d748c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzYwODM2", "url": "https://github.com/dockstore/dockstore/pull/3311#pullrequestreview-376360836", "createdAt": "2020-03-17T19:58:19Z", "commit": {"oid": "343577e38a1ff42af717176ab64b7aaeac4d748c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo1ODoyMFrOF3r1pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDowNzowMVrOF3sHZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzNDI0Ng==", "bodyText": "I think you should make this position 6 and add an explicit position to the previous one, which is presumably an implicit 5. I don't know the implications but seems safest.", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r393934246", "createdAt": "2020-03-17T19:58:20Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/SourceFile.java", "diffHunk": "@@ -91,6 +94,11 @@\n     @ApiModelProperty(\"When true, this version cannot be affected by refreshes to the content or updates to its metadata\")\n     private boolean frozen = false;\n \n+    @Column(columnDefinition = \"varchar\")\n+    @Convert(converter = ChecksumConverter.class)\n+    @ApiModelProperty(position = 5)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "343577e38a1ff42af717176ab64b7aaeac4d748c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzODc5MA==", "bodyText": "You don't have to change this, but you have existingFileMap.get(fileKey) four times and it's also done on line 207... I would create a variable on line 193.", "url": "https://github.com/dockstore/dockstore/pull/3311#discussion_r393938790", "createdAt": "2020-03-17T20:07:01Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractWorkflowResource.java", "diffHunk": "@@ -187,11 +190,29 @@ protected void updateDBWorkflowWithSourceControlWorkflow(Workflow workflow, Work\n             workflowVersionFromDB.getSourceFiles().forEach(file -> existingFileMap.put(file.getType().toString() + file.getAbsolutePath(), file));\n \n             for (SourceFile file : version.getSourceFiles()) {\n-                if (existingFileMap.containsKey(file.getType().toString() + file.getAbsolutePath())) {\n+                String fileKey = file.getType().toString() + file.getAbsolutePath();\n+                if (existingFileMap.containsKey(fileKey)) {\n+                    List<Checksum> checksums = new ArrayList<>();\n+                    Optional<String> sha = FileFormatHelper.calcSHA1(file.getContent());\n+                    if (sha.isPresent()) {\n+                        checksums.add(new Checksum(SHA_TYPE_FOR_SOURCEFILES, sha.get()));\n+                        if (existingFileMap.get(fileKey).getChecksums() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "343577e38a1ff42af717176ab64b7aaeac4d748c"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbb81fabe7176b99351694d6d7c705f9459f5465", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/cbb81fabe7176b99351694d6d7c705f9459f5465", "committedDate": "2020-03-17T21:34:06Z", "message": "pr feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NDQ2NzA2", "url": "https://github.com/dockstore/dockstore/pull/3311#pullrequestreview-376446706", "createdAt": "2020-03-17T22:23:55Z", "commit": {"oid": "cbb81fabe7176b99351694d6d7c705f9459f5465"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1822, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}