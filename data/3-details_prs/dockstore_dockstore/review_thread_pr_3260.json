{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MjAzNjA5", "number": 3260, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNToxMzoyMlrODikV1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMTozNzoyM1rODlNi0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NTczNTg4OnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/resources/dockstore.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwNToxMzoyMlrOFt43RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNzo1NjoyOFrOFwpTUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY2MTg5Mw==", "bodyText": "Didn't you say they have a sandbox API? If so, shouldn't this be defaulting to that? Although I guess we don't have tests anyway for this because of the need for credentials.", "url": "https://github.com/dockstore/dockstore/pull/3260#discussion_r383661893", "createdAt": "2020-02-25T05:13:22Z", "author": {"login": "coverbeck"}, "path": "dockstore-integration-testing/src/test/resources/dockstore.yml", "diffHunk": "@@ -123,6 +125,10 @@ uiConfig:\n   zenodoRedirectPath: /auth/zenodo.org\n   zenodoScope: deposit:write deposit:actions\n \n+  orcidAuthUrl: https://orcid.org/oauth/authorize", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5415772ab7a7f35aac86438021a2dfcafea75373"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU1MjY1OQ==", "bodyText": "Changed to the sandbox site. Although yeah it's not being used for anything", "url": "https://github.com/dockstore/dockstore/pull/3260#discussion_r386552659", "createdAt": "2020-03-02T17:56:28Z", "author": {"login": "emlys"}, "path": "dockstore-integration-testing/src/test/resources/dockstore.yml", "diffHunk": "@@ -123,6 +125,10 @@ uiConfig:\n   zenodoRedirectPath: /auth/zenodo.org\n   zenodoScope: deposit:write deposit:actions\n \n+  orcidAuthUrl: https://orcid.org/oauth/authorize", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzY2MTg5Mw=="}, "originalCommit": {"oid": "5415772ab7a7f35aac86438021a2dfcafea75373"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzY4NzAxOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/DockstoreWebserviceConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo0Nzo0NlrOFuLWQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo0Nzo0NlrOFuLWQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk2NDczOA==", "bodyText": "Think build might be dying because these are set as required.\nEither add dummy values to the dropwizard config files used or allow these to be empty.", "url": "https://github.com/dockstore/dockstore/pull/3260#discussion_r383964738", "createdAt": "2020-02-25T15:47:46Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/DockstoreWebserviceConfiguration.java", "diffHunk": "@@ -108,6 +108,15 @@\n     @NotEmpty\n     private String zenodoClientSecret;\n \n+    @NotEmpty", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5415772ab7a7f35aac86438021a2dfcafea75373"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjgyMTg2OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxNTowN1rOFu8eHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMToxNTowN1rOFu8eHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc2OTU2Nw==", "bodyText": "Log the exception itself as well.", "url": "https://github.com/dockstore/dockstore/pull/3260#discussion_r384769567", "createdAt": "2020-02-26T21:15:07Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "diffHunk": "@@ -618,6 +623,65 @@ public Token addBitbucketToken(@ApiParam(hidden = true) @Auth User user, @QueryP\n         }\n     }\n \n+    @POST\n+    @Timed\n+    @UnitOfWork\n+    @Path(\"/orcid.org\")\n+    @ApiOperation(value = \"Add a new orcid.org token\", authorizations = {\n+            @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, notes = \"This is used as part of the OAuth 2 web flow. \"\n+            + \"Once a user has approved permissions for Collaboratory\"\n+            + \"Their browser will load the redirect URI which should resolve here\", response = Token.class)\n+    public Token addOrcidToken(@ApiParam(hidden = true) @Auth User user, @QueryParam(\"code\") String code) throws IOException {\n+        String accessToken;\n+        String refreshToken;\n+        String username;\n+\n+        if (code.isEmpty()) {\n+            throw new CustomWebApplicationException(\"Please provide an access code\", HttpStatus.SC_BAD_REQUEST);\n+        }\n+\n+        final AuthorizationCodeFlow flow = new AuthorizationCodeFlow.Builder(BearerToken.authorizationHeaderAccessMethod(), HTTP_TRANSPORT,\n+                JSON_FACTORY, new GenericUrl(ORCID_URL + \"oauth/token\"),\n+                new ClientParametersAuthentication(orcidClientID, orcidClientSecret), orcidClientID,\n+                ORCID_URL + \"/authorize\").build();\n+\n+        try {\n+            TokenResponse tokenResponse = flow.newTokenRequest(code).setScopes(Collections.singletonList(\"/authenticate\"))\n+                    .setRequestInitializer(request -> request.getHeaders().setAccept(\"application/json\")).execute();\n+            accessToken = tokenResponse.getAccessToken();\n+            refreshToken = tokenResponse.getRefreshToken();\n+\n+            // ORCID API returns the user's ORCID username in the \"name\" property\n+            username = tokenResponse.get(\"name\").toString();\n+\n+        } catch (IOException e) {\n+            LOG.error(\"Retrieving accessToken was unsuccessful\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ed94ecdefe7f0c1bece78bf268bc7ff630048c8"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTMwNzkzOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoxODoyMlrOFvT8IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNzo1Njo0OFrOFwpUIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1NDA4MA==", "bodyText": "Missing openapi", "url": "https://github.com/dockstore/dockstore/pull/3260#discussion_r385154080", "createdAt": "2020-02-27T14:18:22Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "diffHunk": "@@ -618,6 +623,65 @@ public Token addBitbucketToken(@ApiParam(hidden = true) @Auth User user, @QueryP\n         }\n     }\n \n+    @POST\n+    @Timed\n+    @UnitOfWork\n+    @Path(\"/orcid.org\")\n+    @ApiOperation(value = \"Add a new orcid.org token\", authorizations = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ed94ecdefe7f0c1bece78bf268bc7ff630048c8"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU1Mjg2NA==", "bodyText": "added openapi annotation also", "url": "https://github.com/dockstore/dockstore/pull/3260#discussion_r386552864", "createdAt": "2020-03-02T17:56:48Z", "author": {"login": "emlys"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "diffHunk": "@@ -618,6 +623,65 @@ public Token addBitbucketToken(@ApiParam(hidden = true) @Auth User user, @QueryP\n         }\n     }\n \n+    @POST\n+    @Timed\n+    @UnitOfWork\n+    @Path(\"/orcid.org\")\n+    @ApiOperation(value = \"Add a new orcid.org token\", authorizations = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1NDA4MA=="}, "originalCommit": {"oid": "3ed94ecdefe7f0c1bece78bf268bc7ff630048c8"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTMxNjE4OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoyMDoxNlrOFvUBIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoyMDoxNlrOFvUBIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1NTM2Mg==", "bodyText": "This is currently fine since there are no join tables in Token otherwise select count would've been better.", "url": "https://github.com/dockstore/dockstore/pull/3260#discussion_r385155362", "createdAt": "2020-02-27T14:20:16Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "diffHunk": "@@ -618,6 +623,65 @@ public Token addBitbucketToken(@ApiParam(hidden = true) @Auth User user, @QueryP\n         }\n     }\n \n+    @POST\n+    @Timed\n+    @UnitOfWork\n+    @Path(\"/orcid.org\")\n+    @ApiOperation(value = \"Add a new orcid.org token\", authorizations = {\n+            @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, notes = \"This is used as part of the OAuth 2 web flow. \"\n+            + \"Once a user has approved permissions for Collaboratory\"\n+            + \"Their browser will load the redirect URI which should resolve here\", response = Token.class)\n+    public Token addOrcidToken(@ApiParam(hidden = true) @Auth User user, @QueryParam(\"code\") String code) throws IOException {\n+        String accessToken;\n+        String refreshToken;\n+        String username;\n+\n+        if (code.isEmpty()) {\n+            throw new CustomWebApplicationException(\"Please provide an access code\", HttpStatus.SC_BAD_REQUEST);\n+        }\n+\n+        final AuthorizationCodeFlow flow = new AuthorizationCodeFlow.Builder(BearerToken.authorizationHeaderAccessMethod(), HTTP_TRANSPORT,\n+                JSON_FACTORY, new GenericUrl(ORCID_URL + \"oauth/token\"),\n+                new ClientParametersAuthentication(orcidClientID, orcidClientSecret), orcidClientID,\n+                ORCID_URL + \"/authorize\").build();\n+\n+        try {\n+            TokenResponse tokenResponse = flow.newTokenRequest(code).setScopes(Collections.singletonList(\"/authenticate\"))\n+                    .setRequestInitializer(request -> request.getHeaders().setAccept(\"application/json\")).execute();\n+            accessToken = tokenResponse.getAccessToken();\n+            refreshToken = tokenResponse.getRefreshToken();\n+\n+            // ORCID API returns the user's ORCID username in the \"name\" property\n+            username = tokenResponse.get(\"name\").toString();\n+\n+        } catch (IOException e) {\n+            LOG.error(\"Retrieving accessToken was unsuccessful\");\n+            throw new CustomWebApplicationException(e.getMessage(), HttpStatus.SC_BAD_REQUEST);\n+        }\n+\n+        if (user != null) {\n+            List<Token> tokens = tokenDAO.findOrcidByUserId(user.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ed94ecdefe7f0c1bece78bf268bc7ff630048c8"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NDkzMTc4OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOTo0MjoxNVrOFwsvyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzoyNToyMVrOFx2iOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwOTA5Nw==", "bodyText": "Make sure that the openapi.yaml changes that are checked-in roughly matches the swagger.yaml changes", "url": "https://github.com/dockstore/dockstore/pull/3260#discussion_r386609097", "createdAt": "2020-03-02T19:42:15Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "diffHunk": "@@ -618,6 +625,66 @@ public Token addBitbucketToken(@ApiParam(hidden = true) @Auth User user, @QueryP\n         }\n     }\n \n+    @POST\n+    @Timed\n+    @UnitOfWork\n+    @Path(\"/orcid.org\")\n+    @ApiOperation(value = \"Add a new orcid.org token\", authorizations = {\n+            @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, notes = \"This is used as part of the OAuth 2 web flow. \"\n+            + \"Once a user has approved permissions for ORCID, \"\n+            + \"their browser will load the redirect URI which should resolve here\", response = Token.class)\n+    @Operation(operationId = \"addOrcidToken\", summary = \"Request and store tokens from ORCID API\", security = @SecurityRequirement(name = \"bearer\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "030257f6ced97def7000cb099dd3e467965017c7"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgxODA0Mw==", "bodyText": "Looks about the same to me", "url": "https://github.com/dockstore/dockstore/pull/3260#discussion_r387818043", "createdAt": "2020-03-04T17:25:21Z", "author": {"login": "emlys"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "diffHunk": "@@ -618,6 +625,66 @@ public Token addBitbucketToken(@ApiParam(hidden = true) @Auth User user, @QueryP\n         }\n     }\n \n+    @POST\n+    @Timed\n+    @UnitOfWork\n+    @Path(\"/orcid.org\")\n+    @ApiOperation(value = \"Add a new orcid.org token\", authorizations = {\n+            @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, notes = \"This is used as part of the OAuth 2 web flow. \"\n+            + \"Once a user has approved permissions for ORCID, \"\n+            + \"their browser will load the redirect URI which should resolve here\", response = Token.class)\n+    @Operation(operationId = \"addOrcidToken\", summary = \"Request and store tokens from ORCID API\", security = @SecurityRequirement(name = \"bearer\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYwOTA5Nw=="}, "originalCommit": {"oid": "030257f6ced97def7000cb099dd3e467965017c7"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzQ1ODA5OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMTozNzoyM1rOFx-h5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMTo1MDoxNlrOFx-5-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk0OTAyOQ==", "bodyText": "Hide User and update the openapi.yaml", "url": "https://github.com/dockstore/dockstore/pull/3260#discussion_r387949029", "createdAt": "2020-03-04T21:37:23Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -1342,6 +1381,33 @@ info:\n   version: 1.9.0-alpha.4-SNAPSHOT\n openapi: 3.0.1\n paths:\n+  /auth/tokens/orcid.org:\n+    post:\n+      description: Using OAuth code from ORCID, request and store tokens from ORCID\n+        API\n+      operationId: addOrcidToken\n+      parameters:\n+      - in: query\n+        name: code\n+        schema:\n+          type: string\n+      requestBody:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cea0acadffab9f4bbca7b25a352516f43c1398a"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk1NTE5NQ==", "bodyText": "added annotation @Parameter(hidden = true, name = \"user\")", "url": "https://github.com/dockstore/dockstore/pull/3260#discussion_r387955195", "createdAt": "2020-03-04T21:50:16Z", "author": {"login": "emlys"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -1342,6 +1381,33 @@ info:\n   version: 1.9.0-alpha.4-SNAPSHOT\n openapi: 3.0.1\n paths:\n+  /auth/tokens/orcid.org:\n+    post:\n+      description: Using OAuth code from ORCID, request and store tokens from ORCID\n+        API\n+      operationId: addOrcidToken\n+      parameters:\n+      - in: query\n+        name: code\n+        schema:\n+          type: string\n+      requestBody:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk0OTAyOQ=="}, "originalCommit": {"oid": "1cea0acadffab9f4bbca7b25a352516f43c1398a"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3002, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}