{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNDYxNDU2", "number": 3206, "title": "create better error message for workflow or tool registration", "bodyText": "For #1319\nCreated a better error message if a workflow is registered as a tool and vice versa.\nCases where an error message is shown:\n\nRegistering a CWL tool as a CWL workflow\nRegistering a CWL workflow as a CWL tool\nRegistering a WDL workflow that calls more than one task as a WDL tool\n\nNote that a WDL tool with one task called can be successfully registered as a workflow.\nRegistering CWL Tool as a CWL Workflow:\nCommandLineTool:\n\nExpressionTool:\n\nRegistering CWL Workflow as a CWL Tool:\n\nRegistering WDL Workflow that calls more than one task as a WDL Tool:", "createdAt": "2020-02-03T18:35:56Z", "url": "https://github.com/dockstore/dockstore/pull/3206", "merged": true, "mergeCommit": {"oid": "15f8d0c445f48987fee513473a8d2a0c9fcd5098"}, "closed": true, "closedAt": "2020-02-07T18:45:26Z", "author": {"login": "kathy-t"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAwxhagH2gAyMzcwNDYxNDU2OjYwMzM2OGMzZmNjNjRkNGM2YTFhYmVmODU1OGNlZDU5OTNjNDE1NzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcCDLihgFqTM1NTMzMTY5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "603368c3fcc64d4c6a1abef8558ced5993c41575", "author": {"user": null}, "url": "https://github.com/dockstore/dockstore/commit/603368c3fcc64d4c6a1abef8558ced5993c41575", "committedDate": "2020-02-03T17:55:37Z", "message": "created better error message if workflow is registered as tool or vice versa"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b862262651e29d2960d3bb2cdb9d394a011158bc", "author": {"user": null}, "url": "https://github.com/dockstore/dockstore/commit/b862262651e29d2960d3bb2cdb9d394a011158bc", "committedDate": "2020-02-03T18:24:40Z", "message": "added ExpressionTool check when registering CWL tool as workflow"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62eae48668c86059011b4d9ec5844274e9d74ad9", "author": {"user": null}, "url": "https://github.com/dockstore/dockstore/commit/62eae48668c86059011b4d9ec5844274e9d74ad9", "committedDate": "2020-02-03T18:31:41Z", "message": "removed checkstyle warning suppression"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDg0NzE2", "url": "https://github.com/dockstore/dockstore/pull/3206#pullrequestreview-352484716", "createdAt": "2020-02-03T18:57:51Z", "commit": {"oid": "62eae48668c86059011b4d9ec5844274e9d74ad9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo1Nzo1MlrOFk8Orw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOTowMzo1M1rOFk8Z4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3OTg1NQ==", "bodyText": "I would find it easier to read if (numberOfTaskCalls != 1) {", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r374279855", "createdAt": "2020-02-03T18:57:52Z", "author": {"login": "coverbeck"}, "path": "dockstore-common/src/main/scala/io/dockstore/common/WdlBridge.scala", "diffHunk": "@@ -71,11 +92,16 @@ class WdlBridge {\n     */\n   @throws(classOf[WdlParser.SyntaxError])\n   def validateTool(filePath: String, sourceFilePath: String) = {\n-    validateWorkflow(filePath, sourceFilePath)\n+    validateWorkflowDeclaration(filePath, sourceFilePath)\n     val executableCallable = convertFilePathToExecutableCallable(filePath, sourceFilePath)\n+    val numberOfTaskCalls = executableCallable.taskCallNodes.seq.size\n \n-    if (executableCallable.taskCallNodes.seq.size > 1) {\n-      throw new WdlParser.SyntaxError(\"A WDL tool can only have one task.\")\n+    if (numberOfTaskCalls > 1 || numberOfTaskCalls == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62eae48668c86059011b4d9ec5844274e9d74ad9"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI4MjcyMg==", "bodyText": "Suggest mentioning the exact class(es) rather than the the possible choices.", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r374282722", "createdAt": "2020-02-03T19:03:53Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/languages/CWLHandler.java", "diffHunk": "@@ -736,7 +736,10 @@ public VersionTypeValidation validateWorkflowSet(Set<SourceFile> sourcefiles, St\n                 validationMessage = \"Primary descriptor is empty.\";\n             } else if (!content.contains(\"class: Workflow\")) {\n                 isValid = false;\n-                validationMessage = \"Requires class: Workflow.\";\n+                validationMessage = \"A CWL workflow requires class: Workflow.\";\n+                if (content.contains(\"class: CommandLineTool\") || content.contains(\"class: ExpressionTool\")) {\n+                    validationMessage += \" This file contains class: CommandLineTool or ExpressionTool. Did you mean to register a tool?\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62eae48668c86059011b4d9ec5844274e9d74ad9"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNDgwMzQ5", "url": "https://github.com/dockstore/dockstore/pull/3206#pullrequestreview-352480349", "createdAt": "2020-02-03T18:50:59Z", "commit": {"oid": "62eae48668c86059011b4d9ec5844274e9d74ad9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo1MDo1OVrOFk8BZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo1MDo1OVrOFk8BZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NjQ1Mw==", "bodyText": "Should mention why it's invalid", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r374276453", "createdAt": "2020-02-03T18:50:59Z", "author": {"login": "garyluu"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/ValidationIT.java", "diffHunk": "@@ -168,12 +168,12 @@ public void testWdlWorkflow() {\n         workflow = workflowsApi.refresh(workflow.getId());\n         Assert.assertFalse(isWorkflowVersionValid(workflow, \"master\"));\n \n-        // change to valid tool - should be valid\n+        // change to valid tool - should be invalid\n         workflow.setWorkflowPath(\"/validTool.wdl\");\n         workflow = workflowsApi.updateWorkflow(workflow.getId(), workflow);\n         workflowsApi.updateWorkflowPath(workflow.getId(), workflow);\n         workflow = workflowsApi.refresh(workflow.getId());\n-        Assert.assertTrue(\"Should be valid\", isWorkflowVersionValid(workflow, \"master\"));\n+        Assert.assertFalse(\"Should be invalid\", isWorkflowVersionValid(workflow, \"master\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62eae48668c86059011b4d9ec5844274e9d74ad9"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMDY1MDcz", "url": "https://github.com/dockstore/dockstore/pull/3206#pullrequestreview-353065073", "createdAt": "2020-02-04T15:25:30Z", "commit": {"oid": "62eae48668c86059011b4d9ec5844274e9d74ad9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNToyNTozMFrOFlYO7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNToyNTozMFrOFlYO7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczODY2OA==", "bodyText": "This is probably the fault of our definition, but while a WDL tool should be enforced to only have one task.\nI don't know if we want to enforce that a WDL workflow should have more than one task.\nI realize that this means that one-task workflows will basically count as \"both\", but I think that will be better because it won't confuse users who want to register and launch-with one-step workflows.", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r374738668", "createdAt": "2020-02-04T15:25:30Z", "author": {"login": "denis-yuen"}, "path": "dockstore-common/src/main/scala/io/dockstore/common/WdlBridge.scala", "diffHunk": "@@ -52,16 +52,37 @@ class WdlBridge {\n     secondaryWdlFiles = secondaryFiles\n   }\n \n+  /**\n+   *\n+   * Validates that the workflow or tool given by filePath has a workflow declaration\n+   * @param filePath absolute path to file\n+   */\n+  @throws(classOf[WdlParser.SyntaxError])\n+  def validateWorkflowDeclaration(filePath: String, sourceFilePath: String) = {\n+    val bundle = getBundle(filePath, sourceFilePath)\n+\n+    if (!bundle.primaryCallable.isDefined) {\n+      throw new WdlParser.SyntaxError(\"Workflow is missing a workflow declaration.\")\n+    }\n+  }\n+\n   /**\n     * Validates the workflow given by filePath\n     * @param filePath absolute path to file\n     */\n   @throws(classOf[WdlParser.SyntaxError])\n   def validateWorkflow(filePath: String, sourceFilePath: String) = {\n-    val bundle = getBundle(filePath, sourceFilePath)\n+    val executableCallable = convertFilePathToExecutableCallable(filePath, sourceFilePath)\n+    val numberOfTaskCalls = executableCallable.taskCallNodes.seq.size\n \n-    if (!bundle.primaryCallable.isDefined) {\n-      throw new WdlParser.SyntaxError(\"Workflow is missing a workflow declaration.\")\n+    validateWorkflowDeclaration(filePath, sourceFilePath)\n+\n+    if (numberOfTaskCalls <= 1) {\n+      val validationMessage = new StringBuilder(\"A WDL workflow must call more than one task.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62eae48668c86059011b4d9ec5844274e9d74ad9"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61bead7e2bd73dd4788c8b8140934b8b84d7345f", "author": {"user": null}, "url": "https://github.com/dockstore/dockstore/commit/61bead7e2bd73dd4788c8b8140934b8b84d7345f", "committedDate": "2020-02-06T13:30:09Z", "message": "reverted WDL workflow validation back to original. made CWL workflow error message more specific."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NzY2OTY5", "url": "https://github.com/dockstore/dockstore/pull/3206#pullrequestreview-354766969", "createdAt": "2020-02-06T20:58:25Z", "commit": {"oid": "61bead7e2bd73dd4788c8b8140934b8b84d7345f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMDo1ODoyNVrOFmp_kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMDo1ODoyNVrOFmp_kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA3ODIyNA==", "bodyText": "I think you can remove the numberOfTaskCalls != 0.", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376078224", "createdAt": "2020-02-06T20:58:25Z", "author": {"login": "agduncan94"}, "path": "dockstore-common/src/main/scala/io/dockstore/common/WdlBridge.scala", "diffHunk": "@@ -73,9 +73,11 @@ class WdlBridge {\n   def validateTool(filePath: String, sourceFilePath: String) = {\n     validateWorkflow(filePath, sourceFilePath)\n     val executableCallable = convertFilePathToExecutableCallable(filePath, sourceFilePath)\n+    val numberOfTaskCalls = executableCallable.taskCallNodes.seq.size\n \n-    if (executableCallable.taskCallNodes.seq.size > 1) {\n-      throw new WdlParser.SyntaxError(\"A WDL tool can only have one task.\")\n+    // WDL tool with zero task calls are valid\n+    if (numberOfTaskCalls != 0 && numberOfTaskCalls > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61bead7e2bd73dd4788c8b8140934b8b84d7345f"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NzcxMTQw", "url": "https://github.com/dockstore/dockstore/pull/3206#pullrequestreview-354771140", "createdAt": "2020-02-06T21:05:32Z", "commit": {"oid": "61bead7e2bd73dd4788c8b8140934b8b84d7345f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTowNTozM1rOFmqMBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTowOToxMVrOFmqSbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA4MTQxNA==", "bodyText": "Might be just me, but I think it'd look cleaner with String.format", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376081414", "createdAt": "2020-02-06T21:05:33Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/languages/CWLHandler.java", "diffHunk": "@@ -736,7 +736,12 @@ public VersionTypeValidation validateWorkflowSet(Set<SourceFile> sourcefiles, St\n                 validationMessage = \"Primary descriptor is empty.\";\n             } else if (!content.contains(\"class: Workflow\")) {\n                 isValid = false;\n-                validationMessage = \"Requires class: Workflow.\";\n+                validationMessage = \"A CWL workflow requires class: Workflow.\";\n+                if (content.contains(\"class: CommandLineTool\") || content.contains(\"class: ExpressionTool\")) {\n+                    validationMessage += \" This file contains class: \";\n+                    validationMessage += (content.contains(\"class: CommandLineTool\")) ? \"CommandLineTool.\" : \"ExpressionTool.\";\n+                    validationMessage += \" Did you mean to register a tool?\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61bead7e2bd73dd4788c8b8140934b8b84d7345f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA4MzA1NQ==", "bodyText": "Perhaps single quotes around actual code", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376083055", "createdAt": "2020-02-06T21:09:11Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/languages/CWLHandler.java", "diffHunk": "@@ -768,7 +773,10 @@ public VersionTypeValidation validateToolSet(Set<SourceFile> sourcefiles, String\n                 validationMessage = \"Primary CWL descriptor is empty.\";\n             } else if (!content.contains(\"class: CommandLineTool\") && !content.contains(\"class: ExpressionTool\")) {\n                 isValid = false;\n-                validationMessage = \"Requires class: CommandLineTool or ExpressionTool.\";\n+                validationMessage = \"A CWL tool requires class: CommandLineTool or ExpressionTool.\";\n+                if (content.contains(\"class: Workflow\")) {\n+                    validationMessage += \" This file contains class: Workflow. Did you mean to register a workflow?\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61bead7e2bd73dd4788c8b8140934b8b84d7345f"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0Nzg0MTkz", "url": "https://github.com/dockstore/dockstore/pull/3206#pullrequestreview-354784193", "createdAt": "2020-02-06T21:28:05Z", "commit": {"oid": "61bead7e2bd73dd4788c8b8140934b8b84d7345f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0Nzg2ODc4", "url": "https://github.com/dockstore/dockstore/pull/3206#pullrequestreview-354786878", "createdAt": "2020-02-06T21:32:35Z", "commit": {"oid": "61bead7e2bd73dd4788c8b8140934b8b84d7345f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f75249ae3f185b2484eb7fbd7be8a80e2161a11", "author": {"user": null}, "url": "https://github.com/dockstore/dockstore/commit/9f75249ae3f185b2484eb7fbd7be8a80e2161a11", "committedDate": "2020-02-07T14:45:51Z", "message": "used StringBuilder for CWL workflow validation message. added single quotes for actual code in message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MjE4MjQy", "url": "https://github.com/dockstore/dockstore/pull/3206#pullrequestreview-355218242", "createdAt": "2020-02-07T15:04:59Z", "commit": {"oid": "9f75249ae3f185b2484eb7fbd7be8a80e2161a11"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTowNDo1OVrOFm_8Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNTowNDo1OVrOFm_8Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQzNzg1MA==", "bodyText": "I prefer: validationMessage.append(String.format(\" This file contains 'class: %s'. Did you mean to register a tool?\", cwlClass));", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376437850", "createdAt": "2020-02-07T15:04:59Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/languages/CWLHandler.java", "diffHunk": "@@ -725,28 +725,32 @@ public VersionTypeValidation validateWorkflowSet(Set<SourceFile> sourcefiles, St\n         Optional<SourceFile> mainDescriptor = filteredSourcefiles.stream().filter((sourceFile -> Objects.equals(sourceFile.getPath(), primaryDescriptorFilePath))).findFirst();\n \n         boolean isValid = true;\n-        String validationMessage = null;\n+        StringBuilder validationMessage = new StringBuilder();\n         Map<String, String> validationMessageObject = new HashMap<>();\n \n         if (mainDescriptor.isPresent()) {\n             Yaml yaml = new Yaml();\n             String content = mainDescriptor.get().getContent();\n             if (content == null || content.isEmpty()) {\n                 isValid = false;\n-                validationMessage = \"Primary descriptor is empty.\";\n+                validationMessage.append(\"Primary descriptor is empty.\");\n             } else if (!content.contains(\"class: Workflow\")) {\n                 isValid = false;\n-                validationMessage = \"Requires class: Workflow.\";\n+                validationMessage.append(\"A CWL workflow requires 'class: Workflow'.\");\n+                if (content.contains(\"class: CommandLineTool\") || content.contains(\"class: ExpressionTool\")) {\n+                    String cwlClass = content.contains(\"class: CommandLineTool\") ? \"CommandLineTool\" : \"ExpressionTool\";\n+                    validationMessage.append(\" This file contains 'class: \").append(cwlClass).append(\"'. Did you mean to register a tool?\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f75249ae3f185b2484eb7fbd7be8a80e2161a11"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MjMxMjQz", "url": "https://github.com/dockstore/dockstore/pull/3206#pullrequestreview-355231243", "createdAt": "2020-02-07T15:22:29Z", "commit": {"oid": "9f75249ae3f185b2484eb7fbd7be8a80e2161a11"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MjkyODM0", "url": "https://github.com/dockstore/dockstore/pull/3206#pullrequestreview-355292834", "createdAt": "2020-02-07T16:49:32Z", "commit": {"oid": "9f75249ae3f185b2484eb7fbd7be8a80e2161a11"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MzA2MzUy", "url": "https://github.com/dockstore/dockstore/pull/3206#pullrequestreview-355306352", "createdAt": "2020-02-07T17:11:12Z", "commit": {"oid": "9f75249ae3f185b2484eb7fbd7be8a80e2161a11"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzoxMToxMlrOFnEF7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNzoxODowN1rOFnER5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwNTgzOQ==", "bodyText": "This is nit-picky and you don't need to change the PR for it, but FYI string searches can be relatively expensive so you should generally try to avoid searching for the same substring more than once. Imagine if content was 100K or bigger -- worst case it will go through the whole string two times if there's not a match for CommandLineTool, plus twice more for however far into the string the match for ExpressionTool is. Unless the compiler/runtime does some fancy optimization, but I wouldn't rely on it.\nOTOH, descriptors aren't typically that big, it will still be fast, and this code is not frequently executed.", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376505839", "createdAt": "2020-02-07T17:11:12Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/languages/CWLHandler.java", "diffHunk": "@@ -725,28 +725,32 @@ public VersionTypeValidation validateWorkflowSet(Set<SourceFile> sourcefiles, St\n         Optional<SourceFile> mainDescriptor = filteredSourcefiles.stream().filter((sourceFile -> Objects.equals(sourceFile.getPath(), primaryDescriptorFilePath))).findFirst();\n \n         boolean isValid = true;\n-        String validationMessage = null;\n+        StringBuilder validationMessage = new StringBuilder();\n         Map<String, String> validationMessageObject = new HashMap<>();\n \n         if (mainDescriptor.isPresent()) {\n             Yaml yaml = new Yaml();\n             String content = mainDescriptor.get().getContent();\n             if (content == null || content.isEmpty()) {\n                 isValid = false;\n-                validationMessage = \"Primary descriptor is empty.\";\n+                validationMessage.append(\"Primary descriptor is empty.\");\n             } else if (!content.contains(\"class: Workflow\")) {\n                 isValid = false;\n-                validationMessage = \"Requires class: Workflow.\";\n+                validationMessage.append(\"A CWL workflow requires 'class: Workflow'.\");\n+                if (content.contains(\"class: CommandLineTool\") || content.contains(\"class: ExpressionTool\")) {\n+                    String cwlClass = content.contains(\"class: CommandLineTool\") ? \"CommandLineTool\" : \"ExpressionTool\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f75249ae3f185b2484eb7fbd7be8a80e2161a11"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwODkwMQ==", "bodyText": "I would personally use double quotes, but I can go either way: \"...\\\"class: Workflow\\\".\"", "url": "https://github.com/dockstore/dockstore/pull/3206#discussion_r376508901", "createdAt": "2020-02-07T17:18:07Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/languages/CWLHandler.java", "diffHunk": "@@ -725,28 +725,32 @@ public VersionTypeValidation validateWorkflowSet(Set<SourceFile> sourcefiles, St\n         Optional<SourceFile> mainDescriptor = filteredSourcefiles.stream().filter((sourceFile -> Objects.equals(sourceFile.getPath(), primaryDescriptorFilePath))).findFirst();\n \n         boolean isValid = true;\n-        String validationMessage = null;\n+        StringBuilder validationMessage = new StringBuilder();\n         Map<String, String> validationMessageObject = new HashMap<>();\n \n         if (mainDescriptor.isPresent()) {\n             Yaml yaml = new Yaml();\n             String content = mainDescriptor.get().getContent();\n             if (content == null || content.isEmpty()) {\n                 isValid = false;\n-                validationMessage = \"Primary descriptor is empty.\";\n+                validationMessage.append(\"Primary descriptor is empty.\");\n             } else if (!content.contains(\"class: Workflow\")) {\n                 isValid = false;\n-                validationMessage = \"Requires class: Workflow.\";\n+                validationMessage.append(\"A CWL workflow requires 'class: Workflow'.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f75249ae3f185b2484eb7fbd7be8a80e2161a11"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MzMxNjkz", "url": "https://github.com/dockstore/dockstore/pull/3206#pullrequestreview-355331693", "createdAt": "2020-02-07T17:56:15Z", "commit": {"oid": "9f75249ae3f185b2484eb7fbd7be8a80e2161a11"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1884, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}