{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MzU3MDA3", "number": 3414, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1MDoxNlrOD1gn0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1MDoxNlrOD1gn0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NDM1NjAwOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjo1MDoxNlrOGK_P8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOTo0NTowN1rOGLmqjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3NTIxNg==", "bodyText": "Why toLowerCase here and the rest of the method? This may never occur in practice, but Git is case-sensitive, and in theory somebody could have some the same filename with different casing and this might yield unexpected results.", "url": "https://github.com/dockstore/dockstore/pull/3414#discussion_r414175216", "createdAt": "2020-04-23T22:50:16Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -605,28 +606,28 @@ public String getReasonPhrase() {\n      * Return a matching source file\n      *\n      * @param sourceFiles      files to look through\n-     * @param searchPathParam       file to look for\n+     * @param searchPathParam       file to look for, could be relative or absolute\n      * @param workingDirectory working directory if relevant\n      * @return\n      */\n     public Optional<SourceFile> lookForFilePath(Set<SourceFile> sourceFiles, String searchPathParam, String workingDirectory) {\n-        // ignore leading slashes\n-        String searchPath = cleanRelativePath(searchPathParam);\n-\n-        for (SourceFile sourceFile : sourceFiles) {\n-            String calculatedPath = sourceFile.getAbsolutePath();\n-            // annoyingly, test json and Dockerfiles include a fullpath whereas descriptors are just relative to the main descriptor,\n-            // so we need to standardize relative to the main descriptor\n-            if (SourceFile.TEST_FILE_TYPES.contains(sourceFile.getType())) {\n-                calculatedPath = StringUtils.removeStart(cleanRelativePath(sourceFile.getPath()), cleanRelativePath(workingDirectory));\n-            }\n-            calculatedPath = cleanRelativePath(calculatedPath);\n-            if (searchPath.equalsIgnoreCase(calculatedPath) || searchPath\n-                .equalsIgnoreCase(StringUtils.removeStart(calculatedPath, workingDirectory + \"/\"))) {\n-                return Optional.of(sourceFile);\n-            }\n+        String targetPath;\n+        if (searchPathParam.startsWith(\"/\")) {\n+            // treat searchPath as an absolute path\n+            targetPath = cleanRelativePath(searchPathParam).toLowerCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9b9446806fdc255bed93fd604b17cd0f91a2d93"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY3Mzg2NQ==", "bodyText": "I had some tests fail when I turned that on. I'll take a closer look, but I was wary of adding an additional backwards incompatible change in case cromwell, cwl are not case sensitive.\nOr if they run on Windows for that matter", "url": "https://github.com/dockstore/dockstore/pull/3414#discussion_r414673865", "createdAt": "2020-04-24T15:41:05Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -605,28 +606,28 @@ public String getReasonPhrase() {\n      * Return a matching source file\n      *\n      * @param sourceFiles      files to look through\n-     * @param searchPathParam       file to look for\n+     * @param searchPathParam       file to look for, could be relative or absolute\n      * @param workingDirectory working directory if relevant\n      * @return\n      */\n     public Optional<SourceFile> lookForFilePath(Set<SourceFile> sourceFiles, String searchPathParam, String workingDirectory) {\n-        // ignore leading slashes\n-        String searchPath = cleanRelativePath(searchPathParam);\n-\n-        for (SourceFile sourceFile : sourceFiles) {\n-            String calculatedPath = sourceFile.getAbsolutePath();\n-            // annoyingly, test json and Dockerfiles include a fullpath whereas descriptors are just relative to the main descriptor,\n-            // so we need to standardize relative to the main descriptor\n-            if (SourceFile.TEST_FILE_TYPES.contains(sourceFile.getType())) {\n-                calculatedPath = StringUtils.removeStart(cleanRelativePath(sourceFile.getPath()), cleanRelativePath(workingDirectory));\n-            }\n-            calculatedPath = cleanRelativePath(calculatedPath);\n-            if (searchPath.equalsIgnoreCase(calculatedPath) || searchPath\n-                .equalsIgnoreCase(StringUtils.removeStart(calculatedPath, workingDirectory + \"/\"))) {\n-                return Optional.of(sourceFile);\n-            }\n+        String targetPath;\n+        if (searchPathParam.startsWith(\"/\")) {\n+            // treat searchPath as an absolute path\n+            targetPath = cleanRelativePath(searchPathParam).toLowerCase();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3NTIxNg=="}, "originalCommit": {"oid": "c9b9446806fdc255bed93fd604b17cd0f91a2d93"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY5NTQ0Ng==", "bodyText": "Yeah, probably not worth pursuing; it's a real edge case, and there are various factors at play; not just the OS, but how you configure git locally. Just mentioned it because I've been bitten by this a few times, but only over a very long period of time.", "url": "https://github.com/dockstore/dockstore/pull/3414#discussion_r414695446", "createdAt": "2020-04-24T16:12:23Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -605,28 +606,28 @@ public String getReasonPhrase() {\n      * Return a matching source file\n      *\n      * @param sourceFiles      files to look through\n-     * @param searchPathParam       file to look for\n+     * @param searchPathParam       file to look for, could be relative or absolute\n      * @param workingDirectory working directory if relevant\n      * @return\n      */\n     public Optional<SourceFile> lookForFilePath(Set<SourceFile> sourceFiles, String searchPathParam, String workingDirectory) {\n-        // ignore leading slashes\n-        String searchPath = cleanRelativePath(searchPathParam);\n-\n-        for (SourceFile sourceFile : sourceFiles) {\n-            String calculatedPath = sourceFile.getAbsolutePath();\n-            // annoyingly, test json and Dockerfiles include a fullpath whereas descriptors are just relative to the main descriptor,\n-            // so we need to standardize relative to the main descriptor\n-            if (SourceFile.TEST_FILE_TYPES.contains(sourceFile.getType())) {\n-                calculatedPath = StringUtils.removeStart(cleanRelativePath(sourceFile.getPath()), cleanRelativePath(workingDirectory));\n-            }\n-            calculatedPath = cleanRelativePath(calculatedPath);\n-            if (searchPath.equalsIgnoreCase(calculatedPath) || searchPath\n-                .equalsIgnoreCase(StringUtils.removeStart(calculatedPath, workingDirectory + \"/\"))) {\n-                return Optional.of(sourceFile);\n-            }\n+        String targetPath;\n+        if (searchPathParam.startsWith(\"/\")) {\n+            // treat searchPath as an absolute path\n+            targetPath = cleanRelativePath(searchPathParam).toLowerCase();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3NTIxNg=="}, "originalCommit": {"oid": "c9b9446806fdc255bed93fd604b17cd0f91a2d93"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgyMTAwNw==", "bodyText": "Took a brief look at this, I think the tests that are breaking are because the casing of the descriptor path specified in the default workflow parameters did not match the casing here.\nIn other words, if we make things case-sensitive here then we need to treat things as case sensitive in the UI when entering paths and in .dockstore.yml. I'm thinking that this can be broken out into a separate ticket if we do make this change in behaviour", "url": "https://github.com/dockstore/dockstore/pull/3414#discussion_r414821007", "createdAt": "2020-04-24T19:45:07Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -605,28 +606,28 @@ public String getReasonPhrase() {\n      * Return a matching source file\n      *\n      * @param sourceFiles      files to look through\n-     * @param searchPathParam       file to look for\n+     * @param searchPathParam       file to look for, could be relative or absolute\n      * @param workingDirectory working directory if relevant\n      * @return\n      */\n     public Optional<SourceFile> lookForFilePath(Set<SourceFile> sourceFiles, String searchPathParam, String workingDirectory) {\n-        // ignore leading slashes\n-        String searchPath = cleanRelativePath(searchPathParam);\n-\n-        for (SourceFile sourceFile : sourceFiles) {\n-            String calculatedPath = sourceFile.getAbsolutePath();\n-            // annoyingly, test json and Dockerfiles include a fullpath whereas descriptors are just relative to the main descriptor,\n-            // so we need to standardize relative to the main descriptor\n-            if (SourceFile.TEST_FILE_TYPES.contains(sourceFile.getType())) {\n-                calculatedPath = StringUtils.removeStart(cleanRelativePath(sourceFile.getPath()), cleanRelativePath(workingDirectory));\n-            }\n-            calculatedPath = cleanRelativePath(calculatedPath);\n-            if (searchPath.equalsIgnoreCase(calculatedPath) || searchPath\n-                .equalsIgnoreCase(StringUtils.removeStart(calculatedPath, workingDirectory + \"/\"))) {\n-                return Optional.of(sourceFile);\n-            }\n+        String targetPath;\n+        if (searchPathParam.startsWith(\"/\")) {\n+            // treat searchPath as an absolute path\n+            targetPath = cleanRelativePath(searchPathParam).toLowerCase();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3NTIxNg=="}, "originalCommit": {"oid": "c9b9446806fdc255bed93fd604b17cd0f91a2d93"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2916, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}