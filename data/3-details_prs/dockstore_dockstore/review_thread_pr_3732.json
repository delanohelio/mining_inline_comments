{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2Mzc2NDkw", "number": 3732, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDozMjo0MFrOEXySeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzo0MzoxNlrOEX1j0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzc2NjMyOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDozMjo0MFrOG_xcjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDozMjo0MFrOG_xcjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUyMzU5Ng==", "bodyText": "200 should be constant", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469523596", "createdAt": "2020-08-12T20:32:40Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -931,11 +931,29 @@ public Workflow getWorkflowByPath(@ApiParam(hidden = true) @Parameter(hidden = t\n         Workflow workflow = workflowDAO.findByPath(path, false, targetClass).orElse(null);\n         checkEntry(workflow);\n         checkCanRead(user, workflow);\n-\n-        initializeAdditionalFields(include, workflow);\n         Hibernate.initialize(workflow.getAliases());\n+        initializeAdditionalFields(include, workflow);\n         return workflow;\n     }\n+    @SuppressWarnings(\"checkstyle:MagicNumber\")\n+    private void setWorkflowVersionSubset(Workflow workflow, String include, String versionName) {\n+        sessionFactory.getCurrentSession().detach(workflow);\n+\n+        // Almost all observed workflows have under 200 version, this number should be lowered once the frontend actually supports pagination\n+        List<WorkflowVersion> ids = this.workflowVersionDAO.getWorkflowVersionsByWorkflowId(workflow.getId(), 200, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be439400706248d7fce19282761515c71a760840"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzc4NzI2OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowVersionDAO.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDozNTozMVrOG_xquQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMjozODoyMVrOG_1PPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUyNzIyNQ==", "bodyText": "Think you can assume this is one or none due to \"unique_workflowversion_names\" UNIQUE CONSTRAINT, btree (parentid, name)", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469527225", "createdAt": "2020-08-12T20:35:31Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowVersionDAO.java", "diffHunk": "@@ -31,4 +34,20 @@ public WorkflowVersionDAO(SessionFactory sessionFactory) {\n     public WorkflowVersion findByAlias(String alias) {\n         return uniqueResult(namedQuery(\"io.dockstore.webservice.core.WorkflowVersion.getByAlias\").setParameter(\"alias\", alias));\n     }\n+\n+    public List<WorkflowVersion> getWorkflowVersionsByWorkflowId(Long workflowId, int size, int firstResult) {\n+        Query query = namedQuery(\"io.dockstore.webservice.core.WorkflowVersion.getByWorkflowId\");\n+        query.setParameter(\"id\", workflowId);\n+        query.setFirstResult(firstResult);\n+        query.setMaxResults(size);\n+        List<WorkflowVersion> workflowVersionIds = query.getResultList();\n+        return workflowVersionIds;\n+    }\n+\n+    public List<WorkflowVersion> getWorkflowVersionByWorkflowIdAndVersionName(Long workflowId, String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be439400706248d7fce19282761515c71a760840"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUzNjc0OA==", "bodyText": "throws exception when it's none and using singleResult, avoiding exception by using list. it's what i had originally 7145601  i prefered this to catching the exception", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469536748", "createdAt": "2020-08-12T20:46:32Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowVersionDAO.java", "diffHunk": "@@ -31,4 +34,20 @@ public WorkflowVersionDAO(SessionFactory sessionFactory) {\n     public WorkflowVersion findByAlias(String alias) {\n         return uniqueResult(namedQuery(\"io.dockstore.webservice.core.WorkflowVersion.getByAlias\").setParameter(\"alias\", alias));\n     }\n+\n+    public List<WorkflowVersion> getWorkflowVersionsByWorkflowId(Long workflowId, int size, int firstResult) {\n+        Query query = namedQuery(\"io.dockstore.webservice.core.WorkflowVersion.getByWorkflowId\");\n+        query.setParameter(\"id\", workflowId);\n+        query.setFirstResult(firstResult);\n+        query.setMaxResults(size);\n+        List<WorkflowVersion> workflowVersionIds = query.getResultList();\n+        return workflowVersionIds;\n+    }\n+\n+    public List<WorkflowVersion> getWorkflowVersionByWorkflowIdAndVersionName(Long workflowId, String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUyNzIyNQ=="}, "originalCommit": {"oid": "be439400706248d7fce19282761515c71a760840"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU0NzE0NQ==", "bodyText": "Double-check classpath maybe, I have\n\tdefault R getSingleResult() {\n\t\treturn uniqueResult();\n\t}\n\nwhich goes to\n\t/**\n\t * Convenience method to return a single instance that matches\n\t * the query, or {@code null} if the query returns no results.\n\t *\n\t * @return the single result or <tt>null</tt>\n\t *\n\t * @throws NonUniqueResultException if there is more than one matching result\n\t */\n\nin hibernate-core:5.2.8-Final", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469547145", "createdAt": "2020-08-12T21:06:47Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowVersionDAO.java", "diffHunk": "@@ -31,4 +34,20 @@ public WorkflowVersionDAO(SessionFactory sessionFactory) {\n     public WorkflowVersion findByAlias(String alias) {\n         return uniqueResult(namedQuery(\"io.dockstore.webservice.core.WorkflowVersion.getByAlias\").setParameter(\"alias\", alias));\n     }\n+\n+    public List<WorkflowVersion> getWorkflowVersionsByWorkflowId(Long workflowId, int size, int firstResult) {\n+        Query query = namedQuery(\"io.dockstore.webservice.core.WorkflowVersion.getByWorkflowId\");\n+        query.setParameter(\"id\", workflowId);\n+        query.setFirstResult(firstResult);\n+        query.setMaxResults(size);\n+        List<WorkflowVersion> workflowVersionIds = query.getResultList();\n+        return workflowVersionIds;\n+    }\n+\n+    public List<WorkflowVersion> getWorkflowVersionByWorkflowIdAndVersionName(Long workflowId, String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUyNzIyNQ=="}, "originalCommit": {"oid": "be439400706248d7fce19282761515c71a760840"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU3ODIxOQ==", "bodyText": "will try again", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469578219", "createdAt": "2020-08-12T22:18:45Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowVersionDAO.java", "diffHunk": "@@ -31,4 +34,20 @@ public WorkflowVersionDAO(SessionFactory sessionFactory) {\n     public WorkflowVersion findByAlias(String alias) {\n         return uniqueResult(namedQuery(\"io.dockstore.webservice.core.WorkflowVersion.getByAlias\").setParameter(\"alias\", alias));\n     }\n+\n+    public List<WorkflowVersion> getWorkflowVersionsByWorkflowId(Long workflowId, int size, int firstResult) {\n+        Query query = namedQuery(\"io.dockstore.webservice.core.WorkflowVersion.getByWorkflowId\");\n+        query.setParameter(\"id\", workflowId);\n+        query.setFirstResult(firstResult);\n+        query.setMaxResults(size);\n+        List<WorkflowVersion> workflowVersionIds = query.getResultList();\n+        return workflowVersionIds;\n+    }\n+\n+    public List<WorkflowVersion> getWorkflowVersionByWorkflowIdAndVersionName(Long workflowId, String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUyNzIyNQ=="}, "originalCommit": {"oid": "be439400706248d7fce19282761515c71a760840"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU4NTcyNw==", "bodyText": "i still don't see that, the only place I see that comment is from the deprecated https://github.com/hibernate/hibernate-orm/blob/5.2.8/hibernate-core/src/main/java/org/hibernate/Query.java\nthough uniqueResult will work", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469585727", "createdAt": "2020-08-12T22:38:21Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowVersionDAO.java", "diffHunk": "@@ -31,4 +34,20 @@ public WorkflowVersionDAO(SessionFactory sessionFactory) {\n     public WorkflowVersion findByAlias(String alias) {\n         return uniqueResult(namedQuery(\"io.dockstore.webservice.core.WorkflowVersion.getByAlias\").setParameter(\"alias\", alias));\n     }\n+\n+    public List<WorkflowVersion> getWorkflowVersionsByWorkflowId(Long workflowId, int size, int firstResult) {\n+        Query query = namedQuery(\"io.dockstore.webservice.core.WorkflowVersion.getByWorkflowId\");\n+        query.setParameter(\"id\", workflowId);\n+        query.setFirstResult(firstResult);\n+        query.setMaxResults(size);\n+        List<WorkflowVersion> workflowVersionIds = query.getResultList();\n+        return workflowVersionIds;\n+    }\n+\n+    public List<WorkflowVersion> getWorkflowVersionByWorkflowIdAndVersionName(Long workflowId, String name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUyNzIyNQ=="}, "originalCommit": {"oid": "be439400706248d7fce19282761515c71a760840"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzc5Mjg3OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDozNjoyMVrOG_xuog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDozNjoyMVrOG_xuog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUyODIyNg==", "bodyText": "If I understand correctly, this is only used internally so should not be exposed to API users", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469528226", "createdAt": "2020-08-12T20:36:21Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -1517,6 +1517,12 @@ components:\n             $ref: '#/components/schemas/WorkflowVersion'\n           type: array\n           uniqueItems: true\n+        workflowVersionsOverride:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be439400706248d7fce19282761515c71a760840"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDIwMzU1OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Version.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMjo1NjoxN1rOG_1oGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDoyMDoyNFrOHANyQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MjA5MQ==", "bodyText": "Does it make a difference if you do select count(v.id)..., or is JPA already smart enough not to load all the  version objects?", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469592091", "createdAt": "2020-08-12T22:56:17Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Version.java", "diffHunk": "@@ -73,7 +73,8 @@\n \n // Ensure that the version requested belongs to a workflow a user has access to.\n @NamedQueries({\n-        @NamedQuery(name = \"io.dockstore.webservice.core.Version.findVersionInEntry\", query = \"SELECT v FROM Version v WHERE :entryId = v.parent.id AND :versionId = v.id\")\n+        @NamedQuery(name = \"io.dockstore.webservice.core.Version.findVersionInEntry\", query = \"SELECT v FROM Version v WHERE :entryId = v.parent.id AND :versionId = v.id\"),\n+        @NamedQuery(name = \"io.dockstore.webservice.core.Version.getCountByEntryId\", query = \"SELECT Count(v) FROM Version v WHERE v.parent.id = :id\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e91f531532e3fb03669d7b0f09a0277e8155bfb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5NTc5MA==", "bodyText": "i'll double check", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469595790", "createdAt": "2020-08-12T23:07:25Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Version.java", "diffHunk": "@@ -73,7 +73,8 @@\n \n // Ensure that the version requested belongs to a workflow a user has access to.\n @NamedQueries({\n-        @NamedQuery(name = \"io.dockstore.webservice.core.Version.findVersionInEntry\", query = \"SELECT v FROM Version v WHERE :entryId = v.parent.id AND :versionId = v.id\")\n+        @NamedQuery(name = \"io.dockstore.webservice.core.Version.findVersionInEntry\", query = \"SELECT v FROM Version v WHERE :entryId = v.parent.id AND :versionId = v.id\"),\n+        @NamedQuery(name = \"io.dockstore.webservice.core.Version.getCountByEntryId\", query = \"SELECT Count(v) FROM Version v WHERE v.parent.id = :id\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MjA5MQ=="}, "originalCommit": {"oid": "1e91f531532e3fb03669d7b0f09a0277e8155bfb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwMzIzMw==", "bodyText": "the resulting sql is identical:\norg.hibernate.SQL: /* io.dockstore.webservice.core.Version.getCountByEntryId */ select count(version0_.id) as col_0_0_ from ( select id, commitID, dbCreateDate, dbUpdateDate, dirtyBit, frozen, name, reference, referenceType, valid, parentid, versionEditor_id, automated, cwlPath, dockerfilePath, imageId, lastBuilt, size, wdlPath, null::varchar as dagJson, null::boolean as isLegacyVersion, null::timestamp as lastModified, null::int4 as subClass, null::varchar as toolTableJson, null::varchar as workflowPath, 1 as clazz_ from tag union all select id, commitID, dbCreateDate, dbUpdateDate, dirtyBit, frozen, name, reference, referenceType, valid, parentid, versionEditor_id, null::boolean as automated, null::varchar as cwlPath, null::varchar as dockerfilePath, null::varchar as imageId, null::timestamp as lastBuilt, null::int8 as size, null::varchar as wdlPath, dagJson, isLegacyVersion, lastModified, subClass, toolTableJson, workflowPath, 2 as clazz_ from workflowversion ) version0_ where version0_.parentid=?", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469603233", "createdAt": "2020-08-12T23:30:46Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Version.java", "diffHunk": "@@ -73,7 +73,8 @@\n \n // Ensure that the version requested belongs to a workflow a user has access to.\n @NamedQueries({\n-        @NamedQuery(name = \"io.dockstore.webservice.core.Version.findVersionInEntry\", query = \"SELECT v FROM Version v WHERE :entryId = v.parent.id AND :versionId = v.id\")\n+        @NamedQuery(name = \"io.dockstore.webservice.core.Version.findVersionInEntry\", query = \"SELECT v FROM Version v WHERE :entryId = v.parent.id AND :versionId = v.id\"),\n+        @NamedQuery(name = \"io.dockstore.webservice.core.Version.getCountByEntryId\", query = \"SELECT Count(v) FROM Version v WHERE v.parent.id = :id\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MjA5MQ=="}, "originalCommit": {"oid": "1e91f531532e3fb03669d7b0f09a0277e8155bfb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYyMDk1OQ==", "bodyText": "That's lame.  Is that all of the SQL for this, or are they also fetching all the sourcefiles subsequently, since those aren't lazy loaded in this branch?\nYou'd probably need something like select count(*) from (select v.id from Version v where... and I'm not even sure you can do a nested query like that in JPQL.\nJust commenting, I did approve.", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469620959", "createdAt": "2020-08-13T00:21:29Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Version.java", "diffHunk": "@@ -73,7 +73,8 @@\n \n // Ensure that the version requested belongs to a workflow a user has access to.\n @NamedQueries({\n-        @NamedQuery(name = \"io.dockstore.webservice.core.Version.findVersionInEntry\", query = \"SELECT v FROM Version v WHERE :entryId = v.parent.id AND :versionId = v.id\")\n+        @NamedQuery(name = \"io.dockstore.webservice.core.Version.findVersionInEntry\", query = \"SELECT v FROM Version v WHERE :entryId = v.parent.id AND :versionId = v.id\"),\n+        @NamedQuery(name = \"io.dockstore.webservice.core.Version.getCountByEntryId\", query = \"SELECT Count(v) FROM Version v WHERE v.parent.id = :id\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MjA5MQ=="}, "originalCommit": {"oid": "1e91f531532e3fb03669d7b0f09a0277e8155bfb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4NzkwNw==", "bodyText": "i have a feeling that would make it worse", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469987907", "createdAt": "2020-08-13T14:20:24Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Version.java", "diffHunk": "@@ -73,7 +73,8 @@\n \n // Ensure that the version requested belongs to a workflow a user has access to.\n @NamedQueries({\n-        @NamedQuery(name = \"io.dockstore.webservice.core.Version.findVersionInEntry\", query = \"SELECT v FROM Version v WHERE :entryId = v.parent.id AND :versionId = v.id\")\n+        @NamedQuery(name = \"io.dockstore.webservice.core.Version.findVersionInEntry\", query = \"SELECT v FROM Version v WHERE :entryId = v.parent.id AND :versionId = v.id\"),\n+        @NamedQuery(name = \"io.dockstore.webservice.core.Version.getCountByEntryId\", query = \"SELECT Count(v) FROM Version v WHERE v.parent.id = :id\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5MjA5MQ=="}, "originalCommit": {"oid": "1e91f531532e3fb03669d7b0f09a0277e8155bfb"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDIyNjQ5OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Entry.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzowNjozMlrOG_11aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzowODo1OFrOG_14fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5NTQ5OQ==", "bodyText": "So if you detach, it executes for the versions that are present and doesn't fetch any more? Sounds like it, just wanted to confirm.", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469595499", "createdAt": "2020-08-12T23:06:32Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Entry.java", "diffHunk": "@@ -455,12 +455,14 @@ public void setMetadataFromVersion(Version version) {\n         this.email = version.getEmail();\n     }\n \n+    // This will force EAGER workflowVersions UNLESS the entry entity was detached prior to endpoint return", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e91f531532e3fb03669d7b0f09a0277e8155bfb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5NjI4Nw==", "bodyText": "From what I can tell, it's lazy loaded all the way to the end of the resource endpoint function.  when it's about to serialize, it checks that it needs to get the versions (in order to figure out the output/input file formats), and then it loads it. so yes, in the case i detach, it doesn't try to load it during the usual time", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469596287", "createdAt": "2020-08-12T23:08:58Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Entry.java", "diffHunk": "@@ -455,12 +455,14 @@ public void setMetadataFromVersion(Version version) {\n         this.email = version.getEmail();\n     }\n \n+    // This will force EAGER workflowVersions UNLESS the entry entity was detached prior to endpoint return", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU5NTQ5OQ=="}, "originalCommit": {"oid": "1e91f531532e3fb03669d7b0f09a0277e8155bfb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDI5NTQyOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowVersionDAO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzozOTo1MVrOG_2e2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzozOTo1MVrOG_2e2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwNjEwNA==", "bodyText": "do these need to be Long? these cannot be null", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469606104", "createdAt": "2020-08-12T23:39:51Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowVersionDAO.java", "diffHunk": "@@ -31,4 +34,20 @@ public WorkflowVersionDAO(SessionFactory sessionFactory) {\n     public WorkflowVersion findByAlias(String alias) {\n         return uniqueResult(namedQuery(\"io.dockstore.webservice.core.WorkflowVersion.getByAlias\").setParameter(\"alias\", alias));\n     }\n+\n+    public List<WorkflowVersion> getWorkflowVersionsByWorkflowId(Long workflowId, int size, int firstResult) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e91f531532e3fb03669d7b0f09a0277e8155bfb"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDI5NTY1OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowVersionDAO.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzozOTo1NlrOG_2e-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzozOTo1NlrOG_2e-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwNjEzOA==", "bodyText": "ditto", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469606138", "createdAt": "2020-08-12T23:39:56Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowVersionDAO.java", "diffHunk": "@@ -31,4 +34,20 @@ public WorkflowVersionDAO(SessionFactory sessionFactory) {\n     public WorkflowVersion findByAlias(String alias) {\n         return uniqueResult(namedQuery(\"io.dockstore.webservice.core.WorkflowVersion.getByAlias\").setParameter(\"alias\", alias));\n     }\n+\n+    public List<WorkflowVersion> getWorkflowVersionsByWorkflowId(Long workflowId, int size, int firstResult) {\n+        Query query = namedQuery(\"io.dockstore.webservice.core.WorkflowVersion.getByWorkflowId\");\n+        query.setParameter(\"id\", workflowId);\n+        query.setFirstResult(firstResult);\n+        query.setMaxResults(size);\n+        List<WorkflowVersion> workflowVersionIds = query.getResultList();\n+        return workflowVersionIds;\n+    }\n+\n+    public WorkflowVersion getWorkflowVersionByWorkflowIdAndVersionName(Long workflowId, String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e91f531532e3fb03669d7b0f09a0277e8155bfb"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDMwMjI1OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/VersionDAO.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzo0MzoxNlrOG_2isQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMzo0MzoxNlrOG_2isQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwNzA4OQ==", "bodyText": "ditto for parameter\nfor the return type, might want to consider Optional<Long> to make the caller handle the case when the result is null (the entry doesn't exist) which is distinct from 0 (entry exists, but legitimately has no versions)", "url": "https://github.com/dockstore/dockstore/pull/3732#discussion_r469607089", "createdAt": "2020-08-12T23:43:16Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/VersionDAO.java", "diffHunk": "@@ -44,4 +45,11 @@ public void delete(T version) {\n     public Version<T> findVersionInEntry(Long entryId, Long versionId) {\n         return uniqueResult(namedQuery(\"io.dockstore.webservice.core.Version.findVersionInEntry\").setParameter(\"entryId\", entryId).setParameter(\"versionId\", versionId));\n     }\n+\n+    // Currently not used for anything, will be used for paginated versions\n+    public Long getVersionsCount(Long entryId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e91f531532e3fb03669d7b0f09a0277e8155bfb"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2817, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}