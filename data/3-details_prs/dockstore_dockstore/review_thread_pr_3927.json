{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMjA4ODky", "number": 3927, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMzoxNDowMlrOE4ZTuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNTozMTozOVrOE4tjEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NTcwMzYxOnYy", "diffSide": "RIGHT", "path": ".circleci/config.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMzoxNDowMlrOHySi8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDoxNTozMlrOHyUOCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ5NDcwNg==", "bodyText": "We're on 11.8 in prod, but not crucial", "url": "https://github.com/dockstore/dockstore/pull/3927#discussion_r522494706", "createdAt": "2020-11-12T23:14:02Z", "author": {"login": "coverbeck"}, "path": ".circleci/config.yml", "diffHunk": "@@ -1,30 +1,118 @@\n-version: 2\n+version: 2.1\n+executors:\n+  integration_test_exec:\n+    docker: # run the steps with Docker\n+      - image: cimg/openjdk:11.0.8\n+        environment:\n+          PGHOST: 127.0.0.1\n+      - image: circleci/postgres:11.6", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "223a4b65822fbf5035c51f2873d23c5ac7c1e61a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUyMjEyMQ==", "bodyText": "added to list of TODOs", "url": "https://github.com/dockstore/dockstore/pull/3927#discussion_r522522121", "createdAt": "2020-11-13T00:15:32Z", "author": {"login": "garyluu"}, "path": ".circleci/config.yml", "diffHunk": "@@ -1,30 +1,118 @@\n-version: 2\n+version: 2.1\n+executors:\n+  integration_test_exec:\n+    docker: # run the steps with Docker\n+      - image: cimg/openjdk:11.0.8\n+        environment:\n+          PGHOST: 127.0.0.1\n+      - image: circleci/postgres:11.6", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ5NDcwNg=="}, "originalCommit": {"oid": "223a4b65822fbf5035c51f2873d23c5ac7c1e61a"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NTg1ODIxOnYy", "diffSide": "RIGHT", "path": ".circleci/config.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDowNDo1N1rOHyUBKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDoxNDozMlrOHyUMgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxODgyNw==", "bodyText": "Does this always work? I guess so... I found out the hard way that I couldn't run on my Mac unless I added\n   ulimits:\n     memlock:\n      soft: -1\n      hard: -1\n\nBut maybe it's because I'm on a Mac.", "url": "https://github.com/dockstore/dockstore/pull/3927#discussion_r522518827", "createdAt": "2020-11-13T00:04:57Z", "author": {"login": "coverbeck"}, "path": ".circleci/config.yml", "diffHunk": "@@ -1,30 +1,118 @@\n-version: 2\n+version: 2.1\n+executors:\n+  integration_test_exec:\n+    docker: # run the steps with Docker\n+      - image: cimg/openjdk:11.0.8\n+        environment:\n+          PGHOST: 127.0.0.1\n+      - image: circleci/postgres:11.6\n+        environment:\n+          POSTGRES_USER: postgres\n+          POSTGRES_DB: postgres\n+          PG_HOST: localhost\n+          POSTGRES_HOST_AUTH_METHOD: trust\n+          POSTGRES_PASSWORD: postgres\n+      - image: docker.elastic.co/elasticsearch/elasticsearch:6.8.3\n+        environment:\n+          - xpack.security.enabled: false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "223a4b65822fbf5035c51f2873d23c5ac7c1e61a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUyMTczMA==", "bodyText": "seems to work. I think Travis just uses the default", "url": "https://github.com/dockstore/dockstore/pull/3927#discussion_r522521730", "createdAt": "2020-11-13T00:14:32Z", "author": {"login": "garyluu"}, "path": ".circleci/config.yml", "diffHunk": "@@ -1,30 +1,118 @@\n-version: 2\n+version: 2.1\n+executors:\n+  integration_test_exec:\n+    docker: # run the steps with Docker\n+      - image: cimg/openjdk:11.0.8\n+        environment:\n+          PGHOST: 127.0.0.1\n+      - image: circleci/postgres:11.6\n+        environment:\n+          POSTGRES_USER: postgres\n+          POSTGRES_DB: postgres\n+          PG_HOST: localhost\n+          POSTGRES_HOST_AUTH_METHOD: trust\n+          POSTGRES_PASSWORD: postgres\n+      - image: docker.elastic.co/elasticsearch/elasticsearch:6.8.3\n+        environment:\n+          - xpack.security.enabled: false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxODgyNw=="}, "originalCommit": {"oid": "223a4b65822fbf5035c51f2873d23c5ac7c1e61a"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NTg2MzI4OnYy", "diffSide": "RIGHT", "path": ".circleci/config.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDowNzozMVrOHyUENg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDoxNDo1MlrOHyUNDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxOTYwNg==", "bodyText": "Postgress 11? Or is there a reason you left it on 9?", "url": "https://github.com/dockstore/dockstore/pull/3927#discussion_r522519606", "createdAt": "2020-11-13T00:07:31Z", "author": {"login": "coverbeck"}, "path": ".circleci/config.yml", "diffHunk": "@@ -39,71 +127,61 @@ jobs:\n             cd git-secrets-1.3.0\n             sudo make install\n       - run:\n-          name: run the actual tests\n-          command: mvn -B clean install -DskipTests\n-      - run:\n-          name: validate openapi\n+          name: decrypt\n           command: |\n-            wget --no-verbose https://repo.maven.apache.org/maven2/org/openapitools/openapi-generator-cli/4.3.0/openapi-generator-cli-4.3.0.jar -O openapi-generator-cli.jar\n-            java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/swagger.yaml\n-            java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/openapi3/openapi.yaml\n+            sudo apt install openssl -y\n+            openssl aes-256-cbc -d -in circle_ci_test_data.zip.enc -k $CIRCLE_CI_KEY -iv $CIRCLE_CI_IV >> test_data.zip\n+            bash expand_confidential_bundle.sh test_data.zip abandonDatabaseConnectionsWithOrcid\n+      - run:\n+          name: build\n+          command: mvn -B clean install -DskipTests\n+      # - run:\n+      #     name: validate openapi\n+      #     command: |\n+      #       wget --no-verbose https://repo.maven.apache.org/maven2/org/openapitools/openapi-generator-cli/4.3.0/openapi-generator-cli-4.3.0.jar -O openapi-generator-cli.jar\n+      #       java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/swagger.yaml\n+      #       java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/openapi3/openapi.yaml\n   unit_test: # runs not using Workflows must have a `build` job as entry point\n     docker: # run the steps with Docker\n-      - image: circleci/openjdk:11.0.4-jdk-stretch\n+      - image: cimg/openjdk:11.0.8\n         environment:\n           JAVA_TOOL_OPTIONS: -Xmx512m # Java can read cgroup. Sadly the cgroup in CircleCI is wrong. Have to manually set. Nothing to do with surefire plugin, it has its own JVM. The two of these must add up to a bit less than 4GB.\n           PGHOST: 127.0.0.1\n-      - image: circleci/postgres:9.6.5-alpine-ram\n+      - image: circleci/postgres:9.6.19", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "223a4b65822fbf5035c51f2873d23c5ac7c1e61a"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUyMTg2OA==", "bodyText": "Unit tests still uses postgres 9.x.x, it requires migration changes (splitting to different ticket)", "url": "https://github.com/dockstore/dockstore/pull/3927#discussion_r522521868", "createdAt": "2020-11-13T00:14:52Z", "author": {"login": "garyluu"}, "path": ".circleci/config.yml", "diffHunk": "@@ -39,71 +127,61 @@ jobs:\n             cd git-secrets-1.3.0\n             sudo make install\n       - run:\n-          name: run the actual tests\n-          command: mvn -B clean install -DskipTests\n-      - run:\n-          name: validate openapi\n+          name: decrypt\n           command: |\n-            wget --no-verbose https://repo.maven.apache.org/maven2/org/openapitools/openapi-generator-cli/4.3.0/openapi-generator-cli-4.3.0.jar -O openapi-generator-cli.jar\n-            java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/swagger.yaml\n-            java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/openapi3/openapi.yaml\n+            sudo apt install openssl -y\n+            openssl aes-256-cbc -d -in circle_ci_test_data.zip.enc -k $CIRCLE_CI_KEY -iv $CIRCLE_CI_IV >> test_data.zip\n+            bash expand_confidential_bundle.sh test_data.zip abandonDatabaseConnectionsWithOrcid\n+      - run:\n+          name: build\n+          command: mvn -B clean install -DskipTests\n+      # - run:\n+      #     name: validate openapi\n+      #     command: |\n+      #       wget --no-verbose https://repo.maven.apache.org/maven2/org/openapitools/openapi-generator-cli/4.3.0/openapi-generator-cli-4.3.0.jar -O openapi-generator-cli.jar\n+      #       java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/swagger.yaml\n+      #       java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/openapi3/openapi.yaml\n   unit_test: # runs not using Workflows must have a `build` job as entry point\n     docker: # run the steps with Docker\n-      - image: circleci/openjdk:11.0.4-jdk-stretch\n+      - image: cimg/openjdk:11.0.8\n         environment:\n           JAVA_TOOL_OPTIONS: -Xmx512m # Java can read cgroup. Sadly the cgroup in CircleCI is wrong. Have to manually set. Nothing to do with surefire plugin, it has its own JVM. The two of these must add up to a bit less than 4GB.\n           PGHOST: 127.0.0.1\n-      - image: circleci/postgres:9.6.5-alpine-ram\n+      - image: circleci/postgres:9.6.19", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxOTYwNg=="}, "originalCommit": {"oid": "223a4b65822fbf5035c51f2873d23c5ac7c1e61a"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3OTAxOTY5OnYy", "diffSide": "RIGHT", "path": ".circleci/config.yml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNTozMTozOVrOHyy8kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjoxODo1MFrOHy0xdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAyNTU1Mw==", "bodyText": "non-confidential integration tests are running as part of the unit_test job", "url": "https://github.com/dockstore/dockstore/pull/3927#discussion_r523025553", "createdAt": "2020-11-13T15:31:39Z", "author": {"login": "denis-yuen"}, "path": ".circleci/config.yml", "diffHunk": "@@ -39,71 +127,61 @@ jobs:\n             cd git-secrets-1.3.0\n             sudo make install\n       - run:\n-          name: run the actual tests\n-          command: mvn -B clean install -DskipTests\n-      - run:\n-          name: validate openapi\n+          name: decrypt\n           command: |\n-            wget --no-verbose https://repo.maven.apache.org/maven2/org/openapitools/openapi-generator-cli/4.3.0/openapi-generator-cli-4.3.0.jar -O openapi-generator-cli.jar\n-            java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/swagger.yaml\n-            java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/openapi3/openapi.yaml\n+            sudo apt install openssl -y\n+            openssl aes-256-cbc -d -in circle_ci_test_data.zip.enc -k $CIRCLE_CI_KEY -iv $CIRCLE_CI_IV >> test_data.zip\n+            bash expand_confidential_bundle.sh test_data.zip abandonDatabaseConnectionsWithOrcid\n+      - run:\n+          name: build\n+          command: mvn -B clean install -DskipTests\n+      # - run:\n+      #     name: validate openapi\n+      #     command: |\n+      #       wget --no-verbose https://repo.maven.apache.org/maven2/org/openapitools/openapi-generator-cli/4.3.0/openapi-generator-cli-4.3.0.jar -O openapi-generator-cli.jar\n+      #       java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/swagger.yaml\n+      #       java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/openapi3/openapi.yaml\n   unit_test: # runs not using Workflows must have a `build` job as entry point\n     docker: # run the steps with Docker\n-      - image: circleci/openjdk:11.0.4-jdk-stretch\n+      - image: cimg/openjdk:11.0.8\n         environment:\n           JAVA_TOOL_OPTIONS: -Xmx512m # Java can read cgroup. Sadly the cgroup in CircleCI is wrong. Have to manually set. Nothing to do with surefire plugin, it has its own JVM. The two of these must add up to a bit less than 4GB.\n           PGHOST: 127.0.0.1\n-      - image: circleci/postgres:9.6.5-alpine-ram\n+      - image: circleci/postgres:9.6.19\n         environment:\n           POSTGRES_USER: postgres\n           POSTGRES_DB: postgres\n+          POSTGRES_HOST_AUTH_METHOD: trust\n+          POSTGRES_PASSWORD: postgres   \n     steps: # a collection of executable commands\n-      - checkout # check out source code to working directory\n-      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed\n-          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/\n-          key: dockstore-java-{{ checksum \"pom.xml\" }}\n-      - run:\n-          name: install dockerize\n-          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n-          environment:\n-            DOCKERIZE_VERSION: v0.3.0\n-      - run: \n-          name: Install yq\n-          command: |\n-            wget https://github.com/mikefarah/yq/releases/download/3.3.2/yq_linux_amd64\n-            chmod a+x yq_linux_amd64\n-            sudo mv yq_linux_amd64 /usr/bin/yq\n+      - checkout    \n+      - setup_test\n       - run:\n           name: Install git-secrets\n           command: |\n             wget --no-verbose -O git-secrets-1.3.0.tar.gz https://github.com/awslabs/git-secrets/archive/1.3.0.tar.gz\n             tar -zxf git-secrets-1.3.0.tar.gz\n             cd git-secrets-1.3.0\n             sudo make install\n-      - run:\n-          name: Wait for db\n-          command: dockerize -wait tcp://localhost:5432 -timeout 1m\n       - run:\n           name: Install postgresql client\n           command: |\n             sudo rm -rf /var/lib/apt/lists/*\n             sudo apt update\n             sudo apt install -y postgresql-client\n-      - run:\n-          name: setup postgres\n-          command: |\n-            psql -c \"create user dockstore with password 'dockstore' createdb;\" -U postgres\n-            psql -c \"ALTER USER dockstore WITH superuser;\" -U postgres\n-            psql -c 'create database webservice_test with owner = dockstore;' -U postgres\n+      - setup_postgres\n       - run:\n           name: run the actual tests\n-          command: mvn -B clean install -Punit-tests -ntp\n+          command: mvn -B org.jacoco:jacoco-maven-plugin:report org.jacoco:jacoco-maven-plugin:report-aggregate clean install -Punit-tests,coverage -ntp\n       - run:\n           name: run the non-confidential integration tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "223a4b65822fbf5035c51f2873d23c5ac7c1e61a"}, "originalPosition": 215}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA0NzE0OQ==", "bodyText": "was like that before, they're fast enough and unlikely to fail that it probably isn't worth spinning out into another job because of additional overhead", "url": "https://github.com/dockstore/dockstore/pull/3927#discussion_r523047149", "createdAt": "2020-11-13T16:05:15Z", "author": {"login": "garyluu"}, "path": ".circleci/config.yml", "diffHunk": "@@ -39,71 +127,61 @@ jobs:\n             cd git-secrets-1.3.0\n             sudo make install\n       - run:\n-          name: run the actual tests\n-          command: mvn -B clean install -DskipTests\n-      - run:\n-          name: validate openapi\n+          name: decrypt\n           command: |\n-            wget --no-verbose https://repo.maven.apache.org/maven2/org/openapitools/openapi-generator-cli/4.3.0/openapi-generator-cli-4.3.0.jar -O openapi-generator-cli.jar\n-            java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/swagger.yaml\n-            java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/openapi3/openapi.yaml\n+            sudo apt install openssl -y\n+            openssl aes-256-cbc -d -in circle_ci_test_data.zip.enc -k $CIRCLE_CI_KEY -iv $CIRCLE_CI_IV >> test_data.zip\n+            bash expand_confidential_bundle.sh test_data.zip abandonDatabaseConnectionsWithOrcid\n+      - run:\n+          name: build\n+          command: mvn -B clean install -DskipTests\n+      # - run:\n+      #     name: validate openapi\n+      #     command: |\n+      #       wget --no-verbose https://repo.maven.apache.org/maven2/org/openapitools/openapi-generator-cli/4.3.0/openapi-generator-cli-4.3.0.jar -O openapi-generator-cli.jar\n+      #       java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/swagger.yaml\n+      #       java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/openapi3/openapi.yaml\n   unit_test: # runs not using Workflows must have a `build` job as entry point\n     docker: # run the steps with Docker\n-      - image: circleci/openjdk:11.0.4-jdk-stretch\n+      - image: cimg/openjdk:11.0.8\n         environment:\n           JAVA_TOOL_OPTIONS: -Xmx512m # Java can read cgroup. Sadly the cgroup in CircleCI is wrong. Have to manually set. Nothing to do with surefire plugin, it has its own JVM. The two of these must add up to a bit less than 4GB.\n           PGHOST: 127.0.0.1\n-      - image: circleci/postgres:9.6.5-alpine-ram\n+      - image: circleci/postgres:9.6.19\n         environment:\n           POSTGRES_USER: postgres\n           POSTGRES_DB: postgres\n+          POSTGRES_HOST_AUTH_METHOD: trust\n+          POSTGRES_PASSWORD: postgres   \n     steps: # a collection of executable commands\n-      - checkout # check out source code to working directory\n-      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed\n-          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/\n-          key: dockstore-java-{{ checksum \"pom.xml\" }}\n-      - run:\n-          name: install dockerize\n-          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n-          environment:\n-            DOCKERIZE_VERSION: v0.3.0\n-      - run: \n-          name: Install yq\n-          command: |\n-            wget https://github.com/mikefarah/yq/releases/download/3.3.2/yq_linux_amd64\n-            chmod a+x yq_linux_amd64\n-            sudo mv yq_linux_amd64 /usr/bin/yq\n+      - checkout    \n+      - setup_test\n       - run:\n           name: Install git-secrets\n           command: |\n             wget --no-verbose -O git-secrets-1.3.0.tar.gz https://github.com/awslabs/git-secrets/archive/1.3.0.tar.gz\n             tar -zxf git-secrets-1.3.0.tar.gz\n             cd git-secrets-1.3.0\n             sudo make install\n-      - run:\n-          name: Wait for db\n-          command: dockerize -wait tcp://localhost:5432 -timeout 1m\n       - run:\n           name: Install postgresql client\n           command: |\n             sudo rm -rf /var/lib/apt/lists/*\n             sudo apt update\n             sudo apt install -y postgresql-client\n-      - run:\n-          name: setup postgres\n-          command: |\n-            psql -c \"create user dockstore with password 'dockstore' createdb;\" -U postgres\n-            psql -c \"ALTER USER dockstore WITH superuser;\" -U postgres\n-            psql -c 'create database webservice_test with owner = dockstore;' -U postgres\n+      - setup_postgres\n       - run:\n           name: run the actual tests\n-          command: mvn -B clean install -Punit-tests -ntp\n+          command: mvn -B org.jacoco:jacoco-maven-plugin:report org.jacoco:jacoco-maven-plugin:report-aggregate clean install -Punit-tests,coverage -ntp\n       - run:\n           name: run the non-confidential integration tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAyNTU1Mw=="}, "originalCommit": {"oid": "223a4b65822fbf5035c51f2873d23c5ac7c1e61a"}, "originalPosition": 215}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA1NTQ3Nw==", "bodyText": "I'm ok with where they are, just the name is kinda misleading then.", "url": "https://github.com/dockstore/dockstore/pull/3927#discussion_r523055477", "createdAt": "2020-11-13T16:18:50Z", "author": {"login": "denis-yuen"}, "path": ".circleci/config.yml", "diffHunk": "@@ -39,71 +127,61 @@ jobs:\n             cd git-secrets-1.3.0\n             sudo make install\n       - run:\n-          name: run the actual tests\n-          command: mvn -B clean install -DskipTests\n-      - run:\n-          name: validate openapi\n+          name: decrypt\n           command: |\n-            wget --no-verbose https://repo.maven.apache.org/maven2/org/openapitools/openapi-generator-cli/4.3.0/openapi-generator-cli-4.3.0.jar -O openapi-generator-cli.jar\n-            java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/swagger.yaml\n-            java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/openapi3/openapi.yaml\n+            sudo apt install openssl -y\n+            openssl aes-256-cbc -d -in circle_ci_test_data.zip.enc -k $CIRCLE_CI_KEY -iv $CIRCLE_CI_IV >> test_data.zip\n+            bash expand_confidential_bundle.sh test_data.zip abandonDatabaseConnectionsWithOrcid\n+      - run:\n+          name: build\n+          command: mvn -B clean install -DskipTests\n+      # - run:\n+      #     name: validate openapi\n+      #     command: |\n+      #       wget --no-verbose https://repo.maven.apache.org/maven2/org/openapitools/openapi-generator-cli/4.3.0/openapi-generator-cli-4.3.0.jar -O openapi-generator-cli.jar\n+      #       java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/swagger.yaml\n+      #       java -jar openapi-generator-cli.jar validate -i dockstore-webservice/src/main/resources/openapi3/openapi.yaml\n   unit_test: # runs not using Workflows must have a `build` job as entry point\n     docker: # run the steps with Docker\n-      - image: circleci/openjdk:11.0.4-jdk-stretch\n+      - image: cimg/openjdk:11.0.8\n         environment:\n           JAVA_TOOL_OPTIONS: -Xmx512m # Java can read cgroup. Sadly the cgroup in CircleCI is wrong. Have to manually set. Nothing to do with surefire plugin, it has its own JVM. The two of these must add up to a bit less than 4GB.\n           PGHOST: 127.0.0.1\n-      - image: circleci/postgres:9.6.5-alpine-ram\n+      - image: circleci/postgres:9.6.19\n         environment:\n           POSTGRES_USER: postgres\n           POSTGRES_DB: postgres\n+          POSTGRES_HOST_AUTH_METHOD: trust\n+          POSTGRES_PASSWORD: postgres   \n     steps: # a collection of executable commands\n-      - checkout # check out source code to working directory\n-      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed\n-          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/\n-          key: dockstore-java-{{ checksum \"pom.xml\" }}\n-      - run:\n-          name: install dockerize\n-          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n-          environment:\n-            DOCKERIZE_VERSION: v0.3.0\n-      - run: \n-          name: Install yq\n-          command: |\n-            wget https://github.com/mikefarah/yq/releases/download/3.3.2/yq_linux_amd64\n-            chmod a+x yq_linux_amd64\n-            sudo mv yq_linux_amd64 /usr/bin/yq\n+      - checkout    \n+      - setup_test\n       - run:\n           name: Install git-secrets\n           command: |\n             wget --no-verbose -O git-secrets-1.3.0.tar.gz https://github.com/awslabs/git-secrets/archive/1.3.0.tar.gz\n             tar -zxf git-secrets-1.3.0.tar.gz\n             cd git-secrets-1.3.0\n             sudo make install\n-      - run:\n-          name: Wait for db\n-          command: dockerize -wait tcp://localhost:5432 -timeout 1m\n       - run:\n           name: Install postgresql client\n           command: |\n             sudo rm -rf /var/lib/apt/lists/*\n             sudo apt update\n             sudo apt install -y postgresql-client\n-      - run:\n-          name: setup postgres\n-          command: |\n-            psql -c \"create user dockstore with password 'dockstore' createdb;\" -U postgres\n-            psql -c \"ALTER USER dockstore WITH superuser;\" -U postgres\n-            psql -c 'create database webservice_test with owner = dockstore;' -U postgres\n+      - setup_postgres\n       - run:\n           name: run the actual tests\n-          command: mvn -B clean install -Punit-tests -ntp\n+          command: mvn -B org.jacoco:jacoco-maven-plugin:report org.jacoco:jacoco-maven-plugin:report-aggregate clean install -Punit-tests,coverage -ntp\n       - run:\n           name: run the non-confidential integration tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAyNTU1Mw=="}, "originalCommit": {"oid": "223a4b65822fbf5035c51f2873d23c5ac7c1e61a"}, "originalPosition": 215}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2745, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}