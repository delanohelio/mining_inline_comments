{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMDQ5NDAz", "number": 3120, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMTo0NzowM1rODW_jpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNjowODoyNFrODXkl5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NDM2NTgwOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/EventResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMTo0NzowM1rOFcEWIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMjowMjo0M1rOFcEt-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3NTY1MA==", "bodyText": "Why did you change this from a List to a Set? Won't you lose the queries' sort orders?", "url": "https://github.com/dockstore/dockstore/pull/3120#discussion_r364975650", "createdAt": "2020-01-09T21:47:03Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/EventResource.java", "diffHunk": "@@ -68,20 +72,32 @@ public EventResource(EventDAO eventDAO, UserDAO userDAO) {\n         this.eventDAO = eventDAO;\n         this.userDAO = userDAO;\n     }\n-    @SuppressWarnings(\"checkstyle:MagicNumber\")\n+\n     @GET\n     @Timed\n     @UnitOfWork(readOnly = true)\n     @Operation(description = DESCRIPTION, summary = SUMMARY, security = @SecurityRequirement(name = \"bearer\"))\n     @ApiOperation(value = SUMMARY, authorizations = {\n             @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, notes = DESCRIPTION, responseContainer = \"List\", response = Event.class)\n-    public List<Event> getEvents(@ApiParam(hidden = true) @Auth User user, @QueryParam(\"event_search_type\") EventSearchType eventSearchType, @Min(1) @Max(MAX_LIMIT) @DefaultValue(PAGINATION_DEFAULT_STRING) @ApiParam(defaultValue = PAGINATION_DEFAULT_STRING, allowableValues = PAGINATION_RANGE) @Parameter(schema = @Schema(maximum = \"100\", minimum = \"1\")) @QueryParam(\"limit\") int limit, @QueryParam(\"offset\") @DefaultValue(\"0\") Integer offset) {\n-        if (eventSearchType.equals(EventSearchType.STARRED_ENTRIES)) {\n-            User userWithSession = this.userDAO.findById(user.getId());\n+    public Set<Event> getEvents(@Parameter(hidden = true) @ApiParam(hidden = true) @Auth User user, @QueryParam(\"event_search_type\") EventSearchType eventSearchType, @Min(1) @Max(MAX_LIMIT) @DefaultValue(PAGINATION_DEFAULT_STRING) @ApiParam(defaultValue = PAGINATION_DEFAULT_STRING, allowableValues = PAGINATION_RANGE) @Parameter(schema = @Schema(maximum = \"100\", minimum = \"1\")) @QueryParam(\"limit\") int limit, @QueryParam(\"offset\") @DefaultValue(\"0\") Integer offset) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f10c8bb97dd047c4ae1c30d52cc5b723de79a75"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk4MTc1Mg==", "bodyText": "Was originally attempting to remove duplicate events, I'll change it back to list.  I don't think sorted set works anyways.", "url": "https://github.com/dockstore/dockstore/pull/3120#discussion_r364981752", "createdAt": "2020-01-09T22:02:43Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/EventResource.java", "diffHunk": "@@ -68,20 +72,32 @@ public EventResource(EventDAO eventDAO, UserDAO userDAO) {\n         this.eventDAO = eventDAO;\n         this.userDAO = userDAO;\n     }\n-    @SuppressWarnings(\"checkstyle:MagicNumber\")\n+\n     @GET\n     @Timed\n     @UnitOfWork(readOnly = true)\n     @Operation(description = DESCRIPTION, summary = SUMMARY, security = @SecurityRequirement(name = \"bearer\"))\n     @ApiOperation(value = SUMMARY, authorizations = {\n             @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, notes = DESCRIPTION, responseContainer = \"List\", response = Event.class)\n-    public List<Event> getEvents(@ApiParam(hidden = true) @Auth User user, @QueryParam(\"event_search_type\") EventSearchType eventSearchType, @Min(1) @Max(MAX_LIMIT) @DefaultValue(PAGINATION_DEFAULT_STRING) @ApiParam(defaultValue = PAGINATION_DEFAULT_STRING, allowableValues = PAGINATION_RANGE) @Parameter(schema = @Schema(maximum = \"100\", minimum = \"1\")) @QueryParam(\"limit\") int limit, @QueryParam(\"offset\") @DefaultValue(\"0\") Integer offset) {\n-        if (eventSearchType.equals(EventSearchType.STARRED_ENTRIES)) {\n-            User userWithSession = this.userDAO.findById(user.getId());\n+    public Set<Event> getEvents(@Parameter(hidden = true) @ApiParam(hidden = true) @Auth User user, @QueryParam(\"event_search_type\") EventSearchType eventSearchType, @Min(1) @Max(MAX_LIMIT) @DefaultValue(PAGINATION_DEFAULT_STRING) @ApiParam(defaultValue = PAGINATION_DEFAULT_STRING, allowableValues = PAGINATION_RANGE) @Parameter(schema = @Schema(maximum = \"100\", minimum = \"1\")) @QueryParam(\"limit\") int limit, @QueryParam(\"offset\") @DefaultValue(\"0\") Integer offset) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk3NTY1MA=="}, "originalCommit": {"oid": "5f10c8bb97dd047c4ae1c30d52cc5b723de79a75"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MDQzMzY1OnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/OrganizationIT.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNjowODoyNFrOFc8Avg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNjo0NToyMlrOFc9Rqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg4NzY3OA==", "bodyText": "A bit misleading, the test only checks that there are 6 events in general.\nSame idea with two lines down", "url": "https://github.com/dockstore/dockstore/pull/3120#discussion_r365887678", "createdAt": "2020-01-13T16:08:24Z", "author": {"login": "denis-yuen"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/OrganizationIT.java", "diffHunk": "@@ -331,6 +334,31 @@ public void testCreateNewOrganization() {\n         assertEquals(\"potato\", organization.getDescription());\n         String description = organizationsApiUser2.getOrganizationDescription(organization.getId());\n         assertEquals(\"potato\", description);\n+\n+        testStarredOrganizationEvents(organizationsApiUser2, organization);\n+    }\n+\n+    private void testStarredOrganizationEvents(OrganizationsApi organizationsApiUser2, Organization organization) {\n+        organizationsApiUser2.starOrganization(organization.getId(), SwaggerUtility.createStarRequest(true));\n+        final io.dockstore.openapi.client.ApiClient openAPIWebClientUser2 = getOpenAPIWebClient(USER_2_USERNAME, testingPostgres);\n+        EventsApi eventsApi = new EventsApi(openAPIWebClientUser2);\n+        List<io.dockstore.openapi.client.model.Event> events = eventsApi\n+                .getEvents(EventSearchType.STARRED_ORGANIZATION.toString(), null, null);\n+        Assert.assertEquals(\"Should have 1 create, 1 approve, 4 modify events\", 6, events.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9b45aea3132055021b54288d72f5e8141af3828"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg4OTU3MA==", "bodyText": "It was only supposed to test for 6 events.  The comment was only to provide additional details for debugging purposes.", "url": "https://github.com/dockstore/dockstore/pull/3120#discussion_r365889570", "createdAt": "2020-01-13T16:11:44Z", "author": {"login": "garyluu"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/OrganizationIT.java", "diffHunk": "@@ -331,6 +334,31 @@ public void testCreateNewOrganization() {\n         assertEquals(\"potato\", organization.getDescription());\n         String description = organizationsApiUser2.getOrganizationDescription(organization.getId());\n         assertEquals(\"potato\", description);\n+\n+        testStarredOrganizationEvents(organizationsApiUser2, organization);\n+    }\n+\n+    private void testStarredOrganizationEvents(OrganizationsApi organizationsApiUser2, Organization organization) {\n+        organizationsApiUser2.starOrganization(organization.getId(), SwaggerUtility.createStarRequest(true));\n+        final io.dockstore.openapi.client.ApiClient openAPIWebClientUser2 = getOpenAPIWebClient(USER_2_USERNAME, testingPostgres);\n+        EventsApi eventsApi = new EventsApi(openAPIWebClientUser2);\n+        List<io.dockstore.openapi.client.model.Event> events = eventsApi\n+                .getEvents(EventSearchType.STARRED_ORGANIZATION.toString(), null, null);\n+        Assert.assertEquals(\"Should have 1 create, 1 approve, 4 modify events\", 6, events.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg4NzY3OA=="}, "originalCommit": {"oid": "d9b45aea3132055021b54288d72f5e8141af3828"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkwNTQ1Mw==", "bodyText": "Understood, what I meant was that the test would be better if it actually checked for 1 create, 1 approve, 4 modify events.\nRight now, it looks like the test could pass if it got 6 create events.", "url": "https://github.com/dockstore/dockstore/pull/3120#discussion_r365905453", "createdAt": "2020-01-13T16:39:51Z", "author": {"login": "denis-yuen"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/OrganizationIT.java", "diffHunk": "@@ -331,6 +334,31 @@ public void testCreateNewOrganization() {\n         assertEquals(\"potato\", organization.getDescription());\n         String description = organizationsApiUser2.getOrganizationDescription(organization.getId());\n         assertEquals(\"potato\", description);\n+\n+        testStarredOrganizationEvents(organizationsApiUser2, organization);\n+    }\n+\n+    private void testStarredOrganizationEvents(OrganizationsApi organizationsApiUser2, Organization organization) {\n+        organizationsApiUser2.starOrganization(organization.getId(), SwaggerUtility.createStarRequest(true));\n+        final io.dockstore.openapi.client.ApiClient openAPIWebClientUser2 = getOpenAPIWebClient(USER_2_USERNAME, testingPostgres);\n+        EventsApi eventsApi = new EventsApi(openAPIWebClientUser2);\n+        List<io.dockstore.openapi.client.model.Event> events = eventsApi\n+                .getEvents(EventSearchType.STARRED_ORGANIZATION.toString(), null, null);\n+        Assert.assertEquals(\"Should have 1 create, 1 approve, 4 modify events\", 6, events.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg4NzY3OA=="}, "originalCommit": {"oid": "d9b45aea3132055021b54288d72f5e8141af3828"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkwODM5NQ==", "bodyText": "Yes, that's what it's intended to do.  I'm testing whether the pagination works for this endpoint not whether the event type was correctly set.  We have other tests for that.", "url": "https://github.com/dockstore/dockstore/pull/3120#discussion_r365908395", "createdAt": "2020-01-13T16:45:22Z", "author": {"login": "garyluu"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/OrganizationIT.java", "diffHunk": "@@ -331,6 +334,31 @@ public void testCreateNewOrganization() {\n         assertEquals(\"potato\", organization.getDescription());\n         String description = organizationsApiUser2.getOrganizationDescription(organization.getId());\n         assertEquals(\"potato\", description);\n+\n+        testStarredOrganizationEvents(organizationsApiUser2, organization);\n+    }\n+\n+    private void testStarredOrganizationEvents(OrganizationsApi organizationsApiUser2, Organization organization) {\n+        organizationsApiUser2.starOrganization(organization.getId(), SwaggerUtility.createStarRequest(true));\n+        final io.dockstore.openapi.client.ApiClient openAPIWebClientUser2 = getOpenAPIWebClient(USER_2_USERNAME, testingPostgres);\n+        EventsApi eventsApi = new EventsApi(openAPIWebClientUser2);\n+        List<io.dockstore.openapi.client.model.Event> events = eventsApi\n+                .getEvents(EventSearchType.STARRED_ORGANIZATION.toString(), null, null);\n+        Assert.assertEquals(\"Should have 1 create, 1 approve, 4 modify events\", 6, events.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg4NzY3OA=="}, "originalCommit": {"oid": "d9b45aea3132055021b54288d72f5e8141af3828"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3085, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}