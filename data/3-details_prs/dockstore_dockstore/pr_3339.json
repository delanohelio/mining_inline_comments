{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNzQ5MzAz", "number": 3339, "title": "Remove some unnecessary properties from ES", "bodyText": "For #3337\nMain difference is removing non-default versions and the users\nWIP: Still need to detach entity", "createdAt": "2020-03-20T21:31:20Z", "url": "https://github.com/dockstore/dockstore/pull/3339", "merged": true, "mergeCommit": {"oid": "294963d8701b020e92c604e11b201737f09d55bd"}, "closed": true, "closedAt": "2020-03-24T23:26:18Z", "author": {"login": "garyluu"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPnaDXAH2gAyMzkxNzQ5MzAzOjY3ZmRlMzA5ODZjMzc3NmJkNjFhNWMyZWQ1ZThjOGQ1MDk4ZTc4NjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQ7WOsgBqjMxNjE5MDA5MTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "67fde30986c3776bd61a5c2ed5e8c8d5098e7864", "author": {"user": {"login": "garyluu", "name": "Gary Luu"}}, "url": "https://github.com/dockstore/dockstore/commit/67fde30986c3776bd61a5c2ed5e8c8d5098e7864", "committedDate": "2020-03-20T21:29:42Z", "message": "Remove some unnecessary properties from ES"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22289dd14e415ced77fe7d93e82fcc1fc90c25d5", "author": {"user": {"login": "garyluu", "name": "Gary Luu"}}, "url": "https://github.com/dockstore/dockstore/commit/22289dd14e415ced77fe7d93e82fcc1fc90c25d5", "committedDate": "2020-03-21T00:46:31Z", "message": "Generate another object instead of trying to detach Hibernate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92267398402fc0f0d6f737eb4761e6632316005a", "author": {"user": {"login": "garyluu", "name": "Gary Luu"}}, "url": "https://github.com/dockstore/dockstore/commit/92267398402fc0f0d6f737eb4761e6632316005a", "committedDate": "2020-03-23T15:04:23Z", "message": "Add aliases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89affa96b317949c1336b11b7167434916b42460", "author": {"user": {"login": "garyluu", "name": "Gary Luu"}}, "url": "https://github.com/dockstore/dockstore/commit/89affa96b317949c1336b11b7167434916b42460", "committedDate": "2020-03-23T18:16:25Z", "message": "Remove description too"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f9ea45962281940ef8475af0f31089f9008f409", "author": {"user": {"login": "garyluu", "name": "Gary Luu"}}, "url": "https://github.com/dockstore/dockstore/commit/4f9ea45962281940ef8475af0f31089f9008f409", "committedDate": "2020-03-23T18:22:31Z", "message": "Fix for missing workflow project links"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49c7bd03269b1610ac9fb3da002594bc1f012511", "author": {"user": {"login": "garyluu", "name": "Gary Luu"}}, "url": "https://github.com/dockstore/dockstore/commit/49c7bd03269b1610ac9fb3da002594bc1f012511", "committedDate": "2020-03-23T19:57:10Z", "message": "Cleanup + add simple test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fab3156dd5f320bc4dcc230d2f84e3732ba0e6b9", "author": {"user": {"login": "garyluu", "name": "Gary Luu"}}, "url": "https://github.com/dockstore/dockstore/commit/fab3156dd5f320bc4dcc230d2f84e3732ba0e6b9", "committedDate": "2020-03-23T20:03:56Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56ff6d682be0faf1e751078771c255521fd13316", "author": {"user": {"login": "denis-yuen", "name": "Denis Yuen"}}, "url": "https://github.com/dockstore/dockstore/commit/56ff6d682be0faf1e751078771c255521fd13316", "committedDate": "2020-03-23T20:19:40Z", "message": "Fix tag cloud"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb72a9385f14ef18e5979c7d6d21d7de104dbbeb", "author": {"user": {"login": "denis-yuen", "name": "Denis Yuen"}}, "url": "https://github.com/dockstore/dockstore/commit/eb72a9385f14ef18e5979c7d6d21d7de104dbbeb", "committedDate": "2020-03-23T20:19:52Z", "message": "Merge branch 'fix/3337/ESReduceIndexing' of github.com:dockstore/dockstore into fix/3337/ESReduceIndexing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e70ecb5ebfe7c8049b95f0b439c4017abb0b1f3d", "author": {"user": {"login": "denis-yuen", "name": "Denis Yuen"}}, "url": "https://github.com/dockstore/dockstore/commit/e70ecb5ebfe7c8049b95f0b439c4017abb0b1f3d", "committedDate": "2020-03-23T20:27:01Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3f8bae12e8413f4a38409f5fce004986c3da631", "author": {"user": {"login": "denis-yuen", "name": "Denis Yuen"}}, "url": "https://github.com/dockstore/dockstore/commit/d3f8bae12e8413f4a38409f5fce004986c3da631", "committedDate": "2020-03-23T22:45:11Z", "message": "Ignore Gitlab tests for now"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "986752a69c2c5fed864308507bfd63863ea69afd", "author": {"user": {"login": "garyluu", "name": "Gary Luu"}}, "url": "https://github.com/dockstore/dockstore/commit/986752a69c2c5fed864308507bfd63863ea69afd", "committedDate": "2020-03-24T15:24:57Z", "message": "Clone workflowversions too"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea154b9e5ef437c76162c53b624bf40b94d479b9", "author": {"user": {"login": "garyluu", "name": "Gary Luu"}}, "url": "https://github.com/dockstore/dockstore/commit/ea154b9e5ef437c76162c53b624bf40b94d479b9", "committedDate": "2020-03-24T15:34:54Z", "message": "Update verified"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69f8cd9e1c9996b72343e2dba561a01d364c1b9d", "author": {"user": {"login": "garyluu", "name": "Gary Luu"}}, "url": "https://github.com/dockstore/dockstore/commit/69f8cd9e1c9996b72343e2dba561a01d364c1b9d", "committedDate": "2020-03-24T16:05:14Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd69562caeae5a5fa05b22badbe3dec15438007b", "author": {"user": {"login": "denis-yuen", "name": "Denis Yuen"}}, "url": "https://github.com/dockstore/dockstore/commit/fd69562caeae5a5fa05b22badbe3dec15438007b", "committedDate": "2020-03-24T19:32:25Z", "message": "Fix file formats"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNzQyNzQ4", "url": "https://github.com/dockstore/dockstore/pull/3339#pullrequestreview-380742748", "createdAt": "2020-03-24T22:29:42Z", "commit": {"oid": "fd69562caeae5a5fa05b22badbe3dec15438007b"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjoyOTo0MlrOF7Fg2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjozNzozMlrOF7FszQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwMDYzMw==", "bodyText": "I guess there are few enough services at this point where this is not an issue? I feel like it should eventually be tackled, but I believe you're rewriting the whole thing for 1.9?", "url": "https://github.com/dockstore/dockstore/pull/3339#discussion_r397500633", "createdAt": "2020-03-24T22:29:42Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/statelisteners/ElasticListener.java", "diffHunk": "@@ -228,16 +232,110 @@ private String getNDJSON(List<Entry> publishedEntries) {\n      * @return The Elasticsearch object string to be placed into the index\n      * @throws IOException  Mapper problems\n      */\n-    public static JsonNode dockstoreEntryToElasticSearchObject(Entry entry) throws IOException {\n+    public static JsonNode dockstoreEntryToElasticSearchObject(final Entry entry) throws IOException {\n         Set<Version> workflowVersions = entry.getWorkflowVersions();\n         boolean verified = workflowVersions.stream().anyMatch(Version::isVerified);\n         Set<String> verifiedPlatforms = getVerifiedPlatforms(workflowVersions);\n-        JsonNode jsonNode = MAPPER.readTree(MAPPER.writeValueAsString(entry));\n+        Entry detachedEntry = removeIrrelevantProperties(entry);\n+        JsonNode jsonNode = MAPPER.readTree(MAPPER.writeValueAsString(detachedEntry));\n         ((ObjectNode)jsonNode).put(\"verified\", verified);\n         ((ObjectNode)jsonNode).put(\"verified_platforms\", MAPPER.valueToTree(verifiedPlatforms));\n         return jsonNode;\n     }\n \n+    /**\n+     * Remove some stuff that should not be indexed by ES.\n+     * This is not ideal, we should be including things we want indexed, not removing.\n+     * @param entry\n+     */\n+    private static Entry removeIrrelevantProperties(final Entry entry) {\n+        Entry detachedEntry;\n+        if (entry instanceof Tool) {\n+            Tool tool = (Tool) entry;\n+            Tool detachedTool = new Tool();\n+            tool.getWorkflowVersions().forEach(version -> {\n+                Hibernate.initialize(version.getSourceFiles());\n+            });\n+\n+            // These are for facets\n+            detachedTool.setDefaultWdlPath(tool.getDefaultWdlPath());\n+            detachedTool.setDefaultCwlPath(tool.getDefaultCwlPath());\n+            detachedTool.setNamespace(tool.getNamespace());\n+            detachedTool.setRegistry(tool.getRegistry());\n+            detachedTool.setPrivateAccess(tool.isPrivateAccess());\n+\n+            // These are for table\n+            detachedTool.setGitUrl(tool.getGitUrl());\n+            detachedTool.setName(tool.getName());\n+            detachedTool.setToolname(tool.getToolname());\n+            detachedEntry = detachedTool;\n+        } else if (entry instanceof BioWorkflow) {\n+            BioWorkflow bioWorkflow = (BioWorkflow) entry;\n+            BioWorkflow detachedBioWorkflow = new BioWorkflow();\n+            // These are for facets\n+            detachedBioWorkflow.setDescriptorType(bioWorkflow.getDescriptorType());\n+            detachedBioWorkflow.setSourceControl(bioWorkflow.getSourceControl());\n+            detachedBioWorkflow.setOrganization(bioWorkflow.getOrganization());\n+\n+            // These are for table\n+            detachedBioWorkflow.setWorkflowName(bioWorkflow.getWorkflowName());\n+            detachedBioWorkflow.setRepository(bioWorkflow.getRepository());\n+            detachedBioWorkflow.setGitUrl(bioWorkflow.getGitUrl());\n+            detachedEntry = detachedBioWorkflow;\n+        } else {\n+            return entry;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd69562caeae5a5fa05b22badbe3dec15438007b"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwMTEyMg==", "bodyText": "How many workflows/tools is this an issue for?", "url": "https://github.com/dockstore/dockstore/pull/3339#discussion_r397501122", "createdAt": "2020-03-24T22:30:58Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/statelisteners/ElasticListener.java", "diffHunk": "@@ -228,16 +232,110 @@ private String getNDJSON(List<Entry> publishedEntries) {\n      * @return The Elasticsearch object string to be placed into the index\n      * @throws IOException  Mapper problems\n      */\n-    public static JsonNode dockstoreEntryToElasticSearchObject(Entry entry) throws IOException {\n+    public static JsonNode dockstoreEntryToElasticSearchObject(final Entry entry) throws IOException {\n         Set<Version> workflowVersions = entry.getWorkflowVersions();\n         boolean verified = workflowVersions.stream().anyMatch(Version::isVerified);\n         Set<String> verifiedPlatforms = getVerifiedPlatforms(workflowVersions);\n-        JsonNode jsonNode = MAPPER.readTree(MAPPER.writeValueAsString(entry));\n+        Entry detachedEntry = removeIrrelevantProperties(entry);\n+        JsonNode jsonNode = MAPPER.readTree(MAPPER.writeValueAsString(detachedEntry));\n         ((ObjectNode)jsonNode).put(\"verified\", verified);\n         ((ObjectNode)jsonNode).put(\"verified_platforms\", MAPPER.valueToTree(verifiedPlatforms));\n         return jsonNode;\n     }\n \n+    /**\n+     * Remove some stuff that should not be indexed by ES.\n+     * This is not ideal, we should be including things we want indexed, not removing.\n+     * @param entry\n+     */\n+    private static Entry removeIrrelevantProperties(final Entry entry) {\n+        Entry detachedEntry;\n+        if (entry instanceof Tool) {\n+            Tool tool = (Tool) entry;\n+            Tool detachedTool = new Tool();\n+            tool.getWorkflowVersions().forEach(version -> {\n+                Hibernate.initialize(version.getSourceFiles());\n+            });\n+\n+            // These are for facets\n+            detachedTool.setDefaultWdlPath(tool.getDefaultWdlPath());\n+            detachedTool.setDefaultCwlPath(tool.getDefaultCwlPath());\n+            detachedTool.setNamespace(tool.getNamespace());\n+            detachedTool.setRegistry(tool.getRegistry());\n+            detachedTool.setPrivateAccess(tool.isPrivateAccess());\n+\n+            // These are for table\n+            detachedTool.setGitUrl(tool.getGitUrl());\n+            detachedTool.setName(tool.getName());\n+            detachedTool.setToolname(tool.getToolname());\n+            detachedEntry = detachedTool;\n+        } else if (entry instanceof BioWorkflow) {\n+            BioWorkflow bioWorkflow = (BioWorkflow) entry;\n+            BioWorkflow detachedBioWorkflow = new BioWorkflow();\n+            // These are for facets\n+            detachedBioWorkflow.setDescriptorType(bioWorkflow.getDescriptorType());\n+            detachedBioWorkflow.setSourceControl(bioWorkflow.getSourceControl());\n+            detachedBioWorkflow.setOrganization(bioWorkflow.getOrganization());\n+\n+            // These are for table\n+            detachedBioWorkflow.setWorkflowName(bioWorkflow.getWorkflowName());\n+            detachedBioWorkflow.setRepository(bioWorkflow.getRepository());\n+            detachedBioWorkflow.setGitUrl(bioWorkflow.getGitUrl());\n+            detachedEntry = detachedBioWorkflow;\n+        } else {\n+            return entry;\n+        }\n+        detachedEntry.setDescription(entry.getDescription());\n+        detachedEntry.setAuthor(entry.getAuthor());\n+        detachedEntry.setAliases(entry.getAliases());\n+        detachedEntry.setLabels((SortedSet<Label>)entry.getLabels());\n+        detachedEntry.setCheckerWorkflow(entry.getCheckerWorkflow());\n+        Set<Version> detachedVersions = cloneWorkflowVersion(entry.getWorkflowVersions());\n+        detachedEntry.setWorkflowVersions(detachedVersions);\n+        entry.getStarredUsers().forEach(user -> detachedEntry.addStarredUser((User)user));\n+        String defaultVersion = entry.getDefaultVersion();\n+        if (defaultVersion != null) {\n+            boolean saneDefaultVersion = detachedVersions.stream().anyMatch(version -> defaultVersion.equals(version.getName()) || defaultVersion.equals(version.getReference()));\n+            if (saneDefaultVersion) {\n+                // If the tool/workflow has a default version, only keep the default version (and its sourcefile contents and description)\n+                Set<Version> newWorkflowVersions = detachedEntry.getWorkflowVersions();\n+                newWorkflowVersions.forEach(version -> {\n+                    if (!defaultVersion.equals(version.getReference()) && !defaultVersion.equals(version.getName())) {\n+                        version.setDescriptionAndDescriptionSource(null, null);\n+                        SortedSet<SourceFile> sourceFiles = version.getSourceFiles();\n+                        sourceFiles.forEach(sourceFile -> sourceFile.setContent(\"\"));\n+                    }\n+                });\n+            } else {\n+                LOGGER.error(\"Entry has a default version that doesn't exist: \" + entry.getEntryPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd69562caeae5a5fa05b22badbe3dec15438007b"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwMzY5Mw==", "bodyText": "cloneWorkflowVersions (but don't change it)", "url": "https://github.com/dockstore/dockstore/pull/3339#discussion_r397503693", "createdAt": "2020-03-24T22:37:32Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/statelisteners/ElasticListener.java", "diffHunk": "@@ -228,16 +232,110 @@ private String getNDJSON(List<Entry> publishedEntries) {\n      * @return The Elasticsearch object string to be placed into the index\n      * @throws IOException  Mapper problems\n      */\n-    public static JsonNode dockstoreEntryToElasticSearchObject(Entry entry) throws IOException {\n+    public static JsonNode dockstoreEntryToElasticSearchObject(final Entry entry) throws IOException {\n         Set<Version> workflowVersions = entry.getWorkflowVersions();\n         boolean verified = workflowVersions.stream().anyMatch(Version::isVerified);\n         Set<String> verifiedPlatforms = getVerifiedPlatforms(workflowVersions);\n-        JsonNode jsonNode = MAPPER.readTree(MAPPER.writeValueAsString(entry));\n+        Entry detachedEntry = removeIrrelevantProperties(entry);\n+        JsonNode jsonNode = MAPPER.readTree(MAPPER.writeValueAsString(detachedEntry));\n         ((ObjectNode)jsonNode).put(\"verified\", verified);\n         ((ObjectNode)jsonNode).put(\"verified_platforms\", MAPPER.valueToTree(verifiedPlatforms));\n         return jsonNode;\n     }\n \n+    /**\n+     * Remove some stuff that should not be indexed by ES.\n+     * This is not ideal, we should be including things we want indexed, not removing.\n+     * @param entry\n+     */\n+    private static Entry removeIrrelevantProperties(final Entry entry) {\n+        Entry detachedEntry;\n+        if (entry instanceof Tool) {\n+            Tool tool = (Tool) entry;\n+            Tool detachedTool = new Tool();\n+            tool.getWorkflowVersions().forEach(version -> {\n+                Hibernate.initialize(version.getSourceFiles());\n+            });\n+\n+            // These are for facets\n+            detachedTool.setDefaultWdlPath(tool.getDefaultWdlPath());\n+            detachedTool.setDefaultCwlPath(tool.getDefaultCwlPath());\n+            detachedTool.setNamespace(tool.getNamespace());\n+            detachedTool.setRegistry(tool.getRegistry());\n+            detachedTool.setPrivateAccess(tool.isPrivateAccess());\n+\n+            // These are for table\n+            detachedTool.setGitUrl(tool.getGitUrl());\n+            detachedTool.setName(tool.getName());\n+            detachedTool.setToolname(tool.getToolname());\n+            detachedEntry = detachedTool;\n+        } else if (entry instanceof BioWorkflow) {\n+            BioWorkflow bioWorkflow = (BioWorkflow) entry;\n+            BioWorkflow detachedBioWorkflow = new BioWorkflow();\n+            // These are for facets\n+            detachedBioWorkflow.setDescriptorType(bioWorkflow.getDescriptorType());\n+            detachedBioWorkflow.setSourceControl(bioWorkflow.getSourceControl());\n+            detachedBioWorkflow.setOrganization(bioWorkflow.getOrganization());\n+\n+            // These are for table\n+            detachedBioWorkflow.setWorkflowName(bioWorkflow.getWorkflowName());\n+            detachedBioWorkflow.setRepository(bioWorkflow.getRepository());\n+            detachedBioWorkflow.setGitUrl(bioWorkflow.getGitUrl());\n+            detachedEntry = detachedBioWorkflow;\n+        } else {\n+            return entry;\n+        }\n+        detachedEntry.setDescription(entry.getDescription());\n+        detachedEntry.setAuthor(entry.getAuthor());\n+        detachedEntry.setAliases(entry.getAliases());\n+        detachedEntry.setLabels((SortedSet<Label>)entry.getLabels());\n+        detachedEntry.setCheckerWorkflow(entry.getCheckerWorkflow());\n+        Set<Version> detachedVersions = cloneWorkflowVersion(entry.getWorkflowVersions());\n+        detachedEntry.setWorkflowVersions(detachedVersions);\n+        entry.getStarredUsers().forEach(user -> detachedEntry.addStarredUser((User)user));\n+        String defaultVersion = entry.getDefaultVersion();\n+        if (defaultVersion != null) {\n+            boolean saneDefaultVersion = detachedVersions.stream().anyMatch(version -> defaultVersion.equals(version.getName()) || defaultVersion.equals(version.getReference()));\n+            if (saneDefaultVersion) {\n+                // If the tool/workflow has a default version, only keep the default version (and its sourcefile contents and description)\n+                Set<Version> newWorkflowVersions = detachedEntry.getWorkflowVersions();\n+                newWorkflowVersions.forEach(version -> {\n+                    if (!defaultVersion.equals(version.getReference()) && !defaultVersion.equals(version.getName())) {\n+                        version.setDescriptionAndDescriptionSource(null, null);\n+                        SortedSet<SourceFile> sourceFiles = version.getSourceFiles();\n+                        sourceFiles.forEach(sourceFile -> sourceFile.setContent(\"\"));\n+                    }\n+                });\n+            } else {\n+                LOGGER.error(\"Entry has a default version that doesn't exist: \" + entry.getEntryPath());\n+            }\n+        }\n+        return detachedEntry;\n+    }\n+\n+    private static Set<Version> cloneWorkflowVersion(final Set<Version> originalWorkflowVersions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd69562caeae5a5fa05b22badbe3dec15438007b"}, "originalPosition": 109}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNzQ5NTYz", "url": "https://github.com/dockstore/dockstore/pull/3339#pullrequestreview-380749563", "createdAt": "2020-03-24T22:45:23Z", "commit": {"oid": "fd69562caeae5a5fa05b22badbe3dec15438007b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5f523c5bcd99aec5a4d237b97d67b04befe31fc", "author": {"user": {"login": "denis-yuen", "name": "Denis Yuen"}}, "url": "https://github.com/dockstore/dockstore/commit/a5f523c5bcd99aec5a4d237b97d67b04befe31fc", "committedDate": "2020-03-24T22:49:25Z", "message": "Iterate to get ready for release"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b8c04391dad803f0912e6f22e7b9ddc6223db7cb", "author": {"user": {"login": "denis-yuen", "name": "Denis Yuen"}}, "url": "https://github.com/dockstore/dockstore/commit/b8c04391dad803f0912e6f22e7b9ddc6223db7cb", "committedDate": "2020-03-24T23:07:18Z", "message": "[maven-release-plugin] prepare for next development iteration"}, "afterCommit": {"oid": "a5f523c5bcd99aec5a4d237b97d67b04befe31fc", "author": {"user": {"login": "denis-yuen", "name": "Denis Yuen"}}, "url": "https://github.com/dockstore/dockstore/commit/a5f523c5bcd99aec5a4d237b97d67b04befe31fc", "committedDate": "2020-03-24T22:49:25Z", "message": "Iterate to get ready for release"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1842, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}