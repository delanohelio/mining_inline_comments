{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNzEwNTk2", "number": 3332, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMDoyMjo0MFrODpU1EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDoyNTo1NFrODqiuBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjU5NDcyOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMDoyMjo0MFrOF4bsYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzoyMToyNVrOF6P5yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcxODMwNg==", "bodyText": "Isn't the Dockerfile the... Dockerfile? Isn't this supposed to be for the descriptor files? I guess Descriptor is overloaded, but I was thinking of it in terms of source file descriptors.", "url": "https://github.com/dockstore/dockstore/pull/3332#discussion_r394718306", "createdAt": "2020-03-19T00:22:40Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -515,7 +517,7 @@ private Response getFileByToolVersionID(String registryId, String versionIdParam\n                 if (potentialDockerfile.isPresent()) {\n                     ExtendedFileWrapper dockerfile = new ExtendedFileWrapper();\n                     //TODO: hook up file checksum here\n-                    dockerfile.setChecksum(Lists.newArrayList());\n+                    dockerfile.setChecksum(getFileDescriptorChecksumsForTrs(potentialDockerfile.get()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cfb107d82e52dde0871830cd928e45555bf6b0a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU4NjE5OQ==", "bodyText": "I haven't implemented calculating the checksum for tool dockerfiles/descriptor files. I hooked this up in advance since I was already in the area, but it should continue returning an empty arraylist for now. As for whether we should or not, I'm not sure. I supposed @denis-yuen wanted it because he left the to-do, but maybe it was accidental.", "url": "https://github.com/dockstore/dockstore/pull/3332#discussion_r396586199", "createdAt": "2020-03-23T16:31:01Z", "author": {"login": "NatalieEO"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -515,7 +517,7 @@ private Response getFileByToolVersionID(String registryId, String versionIdParam\n                 if (potentialDockerfile.isPresent()) {\n                     ExtendedFileWrapper dockerfile = new ExtendedFileWrapper();\n                     //TODO: hook up file checksum here\n-                    dockerfile.setChecksum(Lists.newArrayList());\n+                    dockerfile.setChecksum(getFileDescriptorChecksumsForTrs(potentialDockerfile.get()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcxODMwNg=="}, "originalCommit": {"oid": "1cfb107d82e52dde0871830cd928e45555bf6b0a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyMjI4MQ==", "bodyText": "I don't see much harm in getting checksums for everything and sorting it out later.", "url": "https://github.com/dockstore/dockstore/pull/3332#discussion_r396622281", "createdAt": "2020-03-23T17:21:25Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -515,7 +517,7 @@ private Response getFileByToolVersionID(String registryId, String versionIdParam\n                 if (potentialDockerfile.isPresent()) {\n                     ExtendedFileWrapper dockerfile = new ExtendedFileWrapper();\n                     //TODO: hook up file checksum here\n-                    dockerfile.setChecksum(Lists.newArrayList());\n+                    dockerfile.setChecksum(getFileDescriptorChecksumsForTrs(potentialDockerfile.get()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcxODMwNg=="}, "originalCommit": {"oid": "1cfb107d82e52dde0871830cd928e45555bf6b0a"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODk3NDUxOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozNTowNFrOF6S8rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDoxOTowNVrOF6WlCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MjE3NQ==", "bodyText": "I think you should rename this method to getSourceFileChecksums or getSourceFileChecksumsForTrs (I prefer the former). I think this caused the confusion on my other comment -- you're calling a method that says get file descriptor checksums, but then pass it a Dockerfile.", "url": "https://github.com/dockstore/dockstore/pull/3332#discussion_r396672175", "createdAt": "2020-03-23T18:35:04Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -567,6 +569,19 @@ private Response getFileByToolVersionID(String registryId, String versionIdParam\n         return Response.status(status).build();\n     }\n \n+    public static List<Checksum> getFileDescriptorChecksumsForTrs(final SourceFile sourceFile) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cfb107d82e52dde0871830cd928e45555bf6b0a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczMTY1Ng==", "bodyText": "On further reflection, ...forTrs is OK; I skimmed it the first time, not realizing the checksum is represented in two ways.", "url": "https://github.com/dockstore/dockstore/pull/3332#discussion_r396731656", "createdAt": "2020-03-23T20:19:05Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -567,6 +569,19 @@ private Response getFileByToolVersionID(String registryId, String versionIdParam\n         return Response.status(status).build();\n     }\n \n+    public static List<Checksum> getFileDescriptorChecksumsForTrs(final SourceFile sourceFile) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MjE3NQ=="}, "originalCommit": {"oid": "1cfb107d82e52dde0871830cd928e45555bf6b0a"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODk4MzU5OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozNzoyNVrOF6TCeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDoyMTozMVrOF6Wp0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MzY1Ng==", "bodyText": "If sourceFile.getChecksums() returns a non-empty value, this method will return an empty ArrayList, which on line 520 you will use to overwrite the existing checksums.", "url": "https://github.com/dockstore/dockstore/pull/3332#discussion_r396673656", "createdAt": "2020-03-23T18:37:25Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -567,6 +569,19 @@ private Response getFileByToolVersionID(String registryId, String versionIdParam\n         return Response.status(status).build();\n     }\n \n+    public static List<Checksum> getFileDescriptorChecksumsForTrs(final SourceFile sourceFile) {\n+        List<Checksum> trsChecksums = new ArrayList<>();\n+        if (sourceFile.getChecksums() != null && !sourceFile.getChecksums().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cfb107d82e52dde0871830cd928e45555bf6b0a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczMjg4MQ==", "bodyText": "My comment was wrong about line 520; you are using it with a new Dockerfile, so there won't be an existing checksum that gets overridden.", "url": "https://github.com/dockstore/dockstore/pull/3332#discussion_r396732881", "createdAt": "2020-03-23T20:21:31Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -567,6 +569,19 @@ private Response getFileByToolVersionID(String registryId, String versionIdParam\n         return Response.status(status).build();\n     }\n \n+    public static List<Checksum> getFileDescriptorChecksumsForTrs(final SourceFile sourceFile) {\n+        List<Checksum> trsChecksums = new ArrayList<>();\n+        if (sourceFile.getChecksums() != null && !sourceFile.getChecksums().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MzY1Ng=="}, "originalCommit": {"oid": "1cfb107d82e52dde0871830cd928e45555bf6b0a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTM1NjIyOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDoyNTo1NFrOF6WyAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDozMzo1OFrOF6XDqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczNDk3Ng==", "bodyText": "At this point it's not an issue, but what if we end up storing an MD5 checksum?", "url": "https://github.com/dockstore/dockstore/pull/3332#discussion_r396734976", "createdAt": "2020-03-23T20:25:54Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -567,6 +569,19 @@ private Response getFileByToolVersionID(String registryId, String versionIdParam\n         return Response.status(status).build();\n     }\n \n+    public static List<Checksum> getFileDescriptorChecksumsForTrs(final SourceFile sourceFile) {\n+        List<Checksum> trsChecksums = new ArrayList<>();\n+        if (sourceFile.getChecksums() != null && !sourceFile.getChecksums().isEmpty()) {\n+            sourceFile.getChecksums().stream().forEach(checksum -> {\n+                Checksum trsChecksum = new Checksum();\n+                trsChecksum.setType(DESCRIPTOR_FILE_SHA_TYPE_FOR_TRS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cfb107d82e52dde0871830cd928e45555bf6b0a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczOTQ5Ng==", "bodyText": "yeah, I'd have to write a smarter converter. TRS wants the type to match a certain format, but when doing the checksum calculation in java the type doesn't match. Denis prefers we keep the java version as what we store in our db, and just do the conversion for what trs wants here.", "url": "https://github.com/dockstore/dockstore/pull/3332#discussion_r396739496", "createdAt": "2020-03-23T20:33:58Z", "author": {"login": "NatalieEO"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -567,6 +569,19 @@ private Response getFileByToolVersionID(String registryId, String versionIdParam\n         return Response.status(status).build();\n     }\n \n+    public static List<Checksum> getFileDescriptorChecksumsForTrs(final SourceFile sourceFile) {\n+        List<Checksum> trsChecksums = new ArrayList<>();\n+        if (sourceFile.getChecksums() != null && !sourceFile.getChecksums().isEmpty()) {\n+            sourceFile.getChecksums().stream().forEach(checksum -> {\n+                Checksum trsChecksum = new Checksum();\n+                trsChecksum.setType(DESCRIPTOR_FILE_SHA_TYPE_FOR_TRS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjczNDk3Ng=="}, "originalCommit": {"oid": "1cfb107d82e52dde0871830cd928e45555bf6b0a"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3061, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}