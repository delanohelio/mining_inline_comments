{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNTAxNDM3", "number": 3491, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo0Mjo1NVrOD-wwIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNTowMzoxOVrOEA7Yjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTM3MDU4OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo0Mjo1NVrOGZD-Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo0Mjo1NVrOGZD-Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzMjY0Ng==", "bodyText": "This looks like this was it copied from AbstractWorkflowResource. We should avoid the duplication, and rename it in the process -- when I saw its invocation above, I started to enter a comment, based on the name, that it was only going return BitBucket tokens.\nNot for this PR, but for down the road, if we get more BitBucket users, we  should consider updating this method, which is why it would be good if it only existed once -- we shouldn't be generating a new access token every time, but only when the curent one has  expired or is close to expired.", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r428932646", "createdAt": "2020-05-21T21:42:55Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -840,6 +891,19 @@ private boolean canDeleteWorkflow(String path) {\n         }\n     }\n \n+    protected List<Token> checkOnBitbucketToken(User user) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc25070b2bd37303e27e09c4de22be3353a6616"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzQ3NzU4OnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDowNjo1N1rOGZYawA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDowNjo1N1rOGZYawA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI2NzY0OA==", "bodyText": "Readd", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r429267648", "createdAt": "2020-05-22T14:06:57Z", "author": {"login": "denis-yuen"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "diffHunk": "@@ -85,6 +85,24 @@ public void resetDBBetweenTests() throws Exception {\n         CommonTestUtilities.cleanStatePrivate2(SUPPORT, false);\n     }\n \n+    @Test\n+    public void testAddUserToOrgs() {\n+        ApiClient client = getWebClient(USER_2_USERNAME, testingPostgres);\n+        UsersApi userApi = new UsersApi(client);\n+        List<Workflow> workflows = userApi.refreshWorkflowsByOrganization((long)1, \"DockstoreTestUser\");\n+\n+        // Remove an association with an entry\n+        long numberOfWorkflows = workflows.size();\n+        testingPostgres.runUpdateStatement(\"delete from user_entry where entryid = 951\");\n+        long newNumberOfWorkflows = userApi.userWorkflows((long)1).size();\n+        assertEquals(\"Should have one less workflow\", numberOfWorkflows - 1, newNumberOfWorkflows);\n+\n+        // Readd user", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95e9a08eeb0dd8e12637a5895e7ca2bfdaab836c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzUwMDk1OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNDoxMzo0MlrOGZYpng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNDo0MjoxMVrOGaDUDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI3MTQ1NA==", "bodyText": "Does this work, it looks like you're asking the serviceDAO for workflows when it seems like workflowDAO is what I would have expected. Tests are passing though ... which might mean that this needs tests?", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r429271454", "createdAt": "2020-05-22T14:13:42Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -554,6 +562,16 @@ private void checkToolTokens(User authUser, Long userId, String organization) {\n         return services;\n     }\n \n+    private List<Workflow> getBioworkflows(User user) {\n+        return serviceDAO.findMyEntries(user.getId()).stream().map(BioWorkflow.class::cast).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95e9a08eeb0dd8e12637a5895e7ca2bfdaab836c"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk3MDQ0Ng==", "bodyText": "Good catch, I meant to do workflowDAO, was a copy paste error. The return value of the API wasn't directly tested, as I had another API call to grab it. Not sure why as this function would return the same thing anyways. I'll fix this so that it is properly tested.", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r429970446", "createdAt": "2020-05-25T14:42:11Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -554,6 +562,16 @@ private void checkToolTokens(User authUser, Long userId, String organization) {\n         return services;\n     }\n \n+    private List<Workflow> getBioworkflows(User user) {\n+        return serviceDAO.findMyEntries(user.getId()).stream().map(BioWorkflow.class::cast).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI3MTQ1NA=="}, "originalCommit": {"oid": "95e9a08eeb0dd8e12637a5895e7ca2bfdaab836c"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODE5NzUyOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNTowODo0NFrOGaEC1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDoxMToxM1rOGaumfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4MjQyMQ==", "bodyText": "Channeling Charles, is this a PUT because it is idempotent?", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r429982421", "createdAt": "2020-05-25T15:08:44Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAyNTYwOA==", "bodyText": "I'm not sure, it is idempotent, but it is just adding an entry to a join table.", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430025608", "createdAt": "2020-05-25T17:22:00Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4MjQyMQ=="}, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzNDA3MQ==", "bodyText": "You are right, changing to PUT.", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430034071", "createdAt": "2020-05-25T17:57:19Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4MjQyMQ=="}, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0Njg2Mg==", "bodyText": "hmm...might want to hold off on that", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430046862", "createdAt": "2020-05-25T18:51:38Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4MjQyMQ=="}, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQyNzg4Nw==", "bodyText": "@garyluu should it be a PUSH?", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430427887", "createdAt": "2020-05-26T13:51:16Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4MjQyMQ=="}, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0MjY3MA==", "bodyText": "With the current endpoint URL, it's unclear to me.  The way I see it,  REST practices interacts with \"resources\".  Take the \"Users\" resource for example.  If I were to completely replace a single user \"/users/{userId}\",  it'd be PUT.  If it's to create a new user, it'd be a POST \"/users\".  In this case, I personally think it might be a POST or a PATCH.  @coverbeck for input", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430442670", "createdAt": "2020-05-26T14:10:56Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4MjQyMQ=="}, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY3OTY3Nw==", "bodyText": "This is to update some data associated with an existing user. From Wikipedia \"The PATCH method is a request method supported by the HTTP protocol for making partial changes to an existing resource.\" What about a using PATCH \"/users/workflows\" or \"/users\"? @coverbeck  @garyluu", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430679677", "createdAt": "2020-05-26T20:11:13Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4MjQyMQ=="}, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODIwNDEwOnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNToxMToxNVrOGaEG0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNToxMToxNVrOGaEG0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk4MzQ0Mg==", "bodyText": "Should test something about the workflows (follow up on serviceDAO discussion)\ne.g. if by some bizarro coincidence this returned an equal number of services vs workflows", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r429983442", "createdAt": "2020-05-25T15:11:15Z", "author": {"login": "denis-yuen"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "diffHunk": "@@ -85,6 +85,23 @@ public void resetDBBetweenTests() throws Exception {\n         CommonTestUtilities.cleanStatePrivate2(SUPPORT, false);\n     }\n \n+    @Test\n+    public void testAddUserToOrgs() {\n+        ApiClient client = getWebClient(USER_2_USERNAME, testingPostgres);\n+        UsersApi userApi = new UsersApi(client);\n+        List<Workflow> workflows = userApi.refreshWorkflowsByOrganization((long)1, \"DockstoreTestUser\");\n+\n+        // Remove an association with an entry\n+        long numberOfWorkflows = workflows.size();\n+        testingPostgres.runUpdateStatement(\"delete from user_entry where entryid = 951\");\n+        long newNumberOfWorkflows = userApi.userWorkflows((long)1).size();\n+        assertEquals(\"Should have one less workflow\", numberOfWorkflows - 1, newNumberOfWorkflows);\n+\n+        // Add user again\n+        newNumberOfWorkflows= userApi.addUserToDockstoreWorkflows().size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODUyNTE3OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNzo1NDowM1rOGaHJqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNzo1NDowM1rOGaHJqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMzMyMA==", "bodyText": "For new endpoints just use OpenAPI only, remove the Swagger", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430033320", "createdAt": "2020-05-25T17:54:03Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST\n+    @Path(\"/workflow\")\n+    @Timed\n+    @UnitOfWork\n+    @Operation(operationId = \"addUserToDockstoreWorkflows\", description = \"Adds a user to any Dockstore workflows that they should have access to.\", security = @SecurityRequirement(name = ResourceConstants.OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    @ApiOperation(value = \"Adds a user to any Dockstore workflows that they should have access to.\", authorizations = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODUyNTY0OnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNzo1NDoyMlrOGaHJ7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxOTowMTo0OFrOGaIHOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMzM4OA==", "bodyText": "Should be using OpenAPI client", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430033388", "createdAt": "2020-05-25T17:54:22Z", "author": {"login": "garyluu"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "diffHunk": "@@ -85,6 +85,23 @@ public void resetDBBetweenTests() throws Exception {\n         CommonTestUtilities.cleanStatePrivate2(SUPPORT, false);\n     }\n \n+    @Test\n+    public void testAddUserToOrgs() {\n+        ApiClient client = getWebClient(USER_2_USERNAME, testingPostgres);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0OTA4Mw==", "bodyText": "Good catch.", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430049083", "createdAt": "2020-05-25T19:01:48Z", "author": {"login": "agduncan94"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "diffHunk": "@@ -85,6 +85,23 @@ public void resetDBBetweenTests() throws Exception {\n         CommonTestUtilities.cleanStatePrivate2(SUPPORT, false);\n     }\n \n+    @Test\n+    public void testAddUserToOrgs() {\n+        ApiClient client = getWebClient(USER_2_USERNAME, testingPostgres);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMzM4OA=="}, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODUyNzQ4OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNzo1NToyNFrOGaHK_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjowMzowNlrOGalZDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMzY2MA==", "bodyText": "anything not /{userId} should be avoided to be RESTful.", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430033660", "createdAt": "2020-05-25T17:55:24Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST\n+    @Path(\"/workflow\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0ODc5OQ==", "bodyText": "What would a better path be?", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430048799", "createdAt": "2020-05-25T19:00:21Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST\n+    @Path(\"/workflow\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMzY2MA=="}, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1MDIwNA==", "bodyText": "Do you mean I should change it to take in the user ID as a parameter?", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430050204", "createdAt": "2020-05-25T19:07:08Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST\n+    @Path(\"/workflow\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMzY2MA=="}, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUyODc4Mw==", "bodyText": "To be consistent with other similar endpoints, I think it should be /{userId}/workflows.\nI lean towards POST because it isn't idempotent.\n\nThis is tricky; I'm not sure, and I could probably be swayed,", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430528783", "createdAt": "2020-05-26T16:03:06Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST\n+    @Path(\"/workflow\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMzY2MA=="}, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODU1ODA4OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODoxMzozN1rOGaHc-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODoxMzozN1rOGaHc-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzODI2NQ==", "bodyText": "Fine for now, someone should probably just call similar code to the userWorkflows endpoint after it's been optimized", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430038265", "createdAt": "2020-05-25T18:13:37Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST\n+    @Path(\"/workflow\")\n+    @Timed\n+    @UnitOfWork\n+    @Operation(operationId = \"addUserToDockstoreWorkflows\", description = \"Adds a user to any Dockstore workflows that they should have access to.\", security = @SecurityRequirement(name = ResourceConstants.OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    @ApiOperation(value = \"Adds a user to any Dockstore workflows that they should have access to.\", authorizations = {\n+            @Authorization(value = JWT_SECURITY_DEFINITION_NAME) },\n+            response = Workflow.class, responseContainer = \"List\")\n+    public List<Workflow> addUserToDockstoreWorkflows(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\", in = ParameterIn.HEADER) @Auth User authUser) {\n+        final User user = userDAO.findById(authUser.getId());\n+        // Ignore hosted workflows\n+        List<SourceControl> sourceControls = Arrays.stream(SourceControl.values()).filter(sourceControl -> !Objects.equals(sourceControl, SourceControl.DOCKSTORE)).collect(\n+                Collectors.toList());\n+\n+        List<Token> scTokens = getAndRefreshTokens(user, tokenDAO, client, bitbucketClientID, bitbucketClientSecret)\n+                .stream()\n+                .filter(token -> sourceControls.contains(token.getTokenSource().getSourceControl()))\n+                .collect(Collectors.toList());\n+\n+        scTokens.stream().forEach(token -> {\n+            SourceCodeRepoInterface sourceCodeRepo =  SourceCodeRepoFactory.createSourceCodeRepo(token, client);\n+            Map<String, String> gitUrlToRepositoryId = sourceCodeRepo.getWorkflowGitUrl2RepositoryId();\n+            Set<String> organizations = gitUrlToRepositoryId.values().stream().map(repository -> repository.split(\"/\")[0]).collect(Collectors.toSet());\n+\n+            organizations.forEach(organization -> {\n+                List<Workflow> workflows = workflowDAO.findByOrganization(token.getTokenSource().getSourceControl(), organization);\n+                workflows.stream().forEach(workflow -> workflow.getUsers().add(user));\n+            });\n+        });\n+\n+        return getStrippedBioworkflows(userDAO.findById(user.getId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODU2NDcyOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODoxNzozN1rOGaHgrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODoxNzozN1rOGaHgrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzOTIxMg==", "bodyText": "Might actually be worth putting an actual description for what it's returning.  I was slightly confused for a second.", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430039212", "createdAt": "2020-05-25T18:17:37Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4125,6 +4125,24 @@ paths:\n       - bearer: []\n       tags:\n       - users\n+  /users/workflow:\n+    post:\n+      description: Adds a user to any Dockstore workflows that they should have access\n+        to.\n+      operationId: addUserToDockstoreWorkflows\n+      responses:\n+        default:\n+          content:\n+            application/json:\n+              schema:\n+                items:\n+                  $ref: '#/components/schemas/Workflow'\n+                type: array\n+          description: default response", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODYwNjEwOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODo0NTo0NlrOGaH5GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODo0NTo0NlrOGaH5GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0NTQ2NA==", "bodyText": "Should mention \"logged-in user\" like the endpoints below", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r430045464", "createdAt": "2020-05-25T18:45:46Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +780,39 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @POST\n+    @Path(\"/workflow\")\n+    @Timed\n+    @UnitOfWork\n+    @Operation(operationId = \"addUserToDockstoreWorkflows\", description = \"Adds a user to any Dockstore workflows that they should have access to.\", security = @SecurityRequirement(name = ResourceConstants.OPENAPI_JWT_SECURITY_DEFINITION_NAME))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f27bc218d7422e294af902094c257a5a866c5749"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTc2MTA3OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzoxNTo1OFrOGcJ2Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzoxNTo1OFrOGcJ2Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3NDU5NQ==", "bodyText": "You will get an NPE if user is null. It shouldn't ever happen, unless the user gets deleted after it has been cached in SimpleAuthenticator, and given that we make it hard to delete users... Still, the Objects.equals isn't adding anything.", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r432174595", "createdAt": "2020-05-28T23:15:58Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +786,42 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @PATCH\n+    @Timed\n+    @UnitOfWork\n+    @Path(\"/{userId}/workflows\")\n+    @ApiOperation(value = \"Adds a user to any Dockstore workflows that they should have access to.\", authorizations = {@Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = Workflow.class, responseContainer = \"List\")\n+    @Operation(operationId = \"addUserToDockstoreWorkflows\", description = \"Adds the logged-in user to any Dockstore workflows that they should have access to.\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    public List<Workflow> addUserToDockstoreWorkflows(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\", in = ParameterIn.HEADER) @Auth User authUser,\n+            @ApiParam(name = \"userId\", required = true, value = \"User to update\") @PathParam(\"userId\") @Parameter(name = \"userId\", in = ParameterIn.PATH, description = \"User to update\", required = true) long userId,\n+            @ApiParam(name = \"emptyBody\", value = APPEASE_SWAGGER_PATCH) @Parameter(description = APPEASE_SWAGGER_PATCH, name = \"emptyBody\") String emptyBody) {\n+        final User user = userDAO.findById(authUser.getId());\n+        if (!Objects.equals(userId, user.getId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e5fdfbe8208f3c0800faa9a7c8350d017648351"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTc2MTU4OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzoxNjoxNFrOGcJ2UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzoxNjoxNFrOGcJ2UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3NDY3Mg==", "bodyText": "Id and 'id` -- should be consistent.", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r432174672", "createdAt": "2020-05-28T23:16:14Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -762,6 +786,42 @@ public Limits setUserLimits(@ApiParam(hidden = true) @Auth User authUser,\n         return getStrippedWorkflowsAndServices(userDAO.findById(user.getId()));\n     }\n \n+    @PATCH\n+    @Timed\n+    @UnitOfWork\n+    @Path(\"/{userId}/workflows\")\n+    @ApiOperation(value = \"Adds a user to any Dockstore workflows that they should have access to.\", authorizations = {@Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = Workflow.class, responseContainer = \"List\")\n+    @Operation(operationId = \"addUserToDockstoreWorkflows\", description = \"Adds the logged-in user to any Dockstore workflows that they should have access to.\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    public List<Workflow> addUserToDockstoreWorkflows(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\", in = ParameterIn.HEADER) @Auth User authUser,\n+            @ApiParam(name = \"userId\", required = true, value = \"User to update\") @PathParam(\"userId\") @Parameter(name = \"userId\", in = ParameterIn.PATH, description = \"User to update\", required = true) long userId,\n+            @ApiParam(name = \"emptyBody\", value = APPEASE_SWAGGER_PATCH) @Parameter(description = APPEASE_SWAGGER_PATCH, name = \"emptyBody\") String emptyBody) {\n+        final User user = userDAO.findById(authUser.getId());\n+        if (!Objects.equals(userId, user.getId())) {\n+            throw new CustomWebApplicationException(\"The user Id provided does not match the logged-in user id.\", HttpStatus.SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e5fdfbe8208f3c0800faa9a7c8350d017648351"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDA4Mzk5OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNTowMzoxOVrOGcgnbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoxMDowNFrOGcqofg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NzY5NQ==", "bodyText": "Ugh, this is a sign it should be POST (and not PUT or PATCH).  Do we have a PATCH without a body before?", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r432547695", "createdAt": "2020-05-29T15:03:19Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4201,6 +4201,95 @@ paths:\n           description: default response\n       tags:\n       - users\n+  /users/{userId}/workflows:\n+    get:\n+      description: List all workflows owned by the authenticated user.\n+      operationId: userWorkflows\n+      parameters:\n+      - description: User ID\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      responses:\n+        default:\n+          content:\n+            application/json:\n+              schema:\n+                items:\n+                  $ref: '#/components/schemas/Workflow'\n+                type: array\n+          description: default response\n+      security:\n+      - bearer: []\n+      tags:\n+      - users\n+    patch:\n+      description: Adds the logged-in user to any Dockstore workflows that they should\n+        have access to.\n+      operationId: addUserToDockstoreWorkflows\n+      parameters:\n+      - description: User to update\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      requestBody:\n+        content:\n+          '*/*':\n+            schema:\n+              type: string\n+        description: This is here to appease Swagger. It requires PATCH methods to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d9b34781785801456721b389ac5acfbb9016f7b"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1MTA1NA==", "bodyText": "Not that I know of. @denis-yuen @coverbeck  What do you think? Would like to get this merged so that I can get the UI passing.", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r432551054", "createdAt": "2020-05-29T15:08:57Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4201,6 +4201,95 @@ paths:\n           description: default response\n       tags:\n       - users\n+  /users/{userId}/workflows:\n+    get:\n+      description: List all workflows owned by the authenticated user.\n+      operationId: userWorkflows\n+      parameters:\n+      - description: User ID\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      responses:\n+        default:\n+          content:\n+            application/json:\n+              schema:\n+                items:\n+                  $ref: '#/components/schemas/Workflow'\n+                type: array\n+          description: default response\n+      security:\n+      - bearer: []\n+      tags:\n+      - users\n+    patch:\n+      description: Adds the logged-in user to any Dockstore workflows that they should\n+        have access to.\n+      operationId: addUserToDockstoreWorkflows\n+      parameters:\n+      - description: User to update\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      requestBody:\n+        content:\n+          '*/*':\n+            schema:\n+              type: string\n+        description: This is here to appease Swagger. It requires PATCH methods to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NzY5NQ=="}, "originalCommit": {"oid": "1d9b34781785801456721b389ac5acfbb9016f7b"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU4MTUxNw==", "bodyText": "I think it's still idempotent, so not a POST, even PATCH is borderline.   i.e. \"Note that while idempotent operations produce the same result on the server (no side effects), the response itself may not be the same (e.g. a resource's state may change between requests).\" (I think GitHub changes are more akin to changes in a resource's state than in the entity that we are sending ... or not sending in our case).\nhttps://www.restapitutorial.com/lessons/idempotency.html\nThat said, I'm well beyond caring at this point. I'd say merge it.", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r432581517", "createdAt": "2020-05-29T15:56:53Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4201,6 +4201,95 @@ paths:\n           description: default response\n       tags:\n       - users\n+  /users/{userId}/workflows:\n+    get:\n+      description: List all workflows owned by the authenticated user.\n+      operationId: userWorkflows\n+      parameters:\n+      - description: User ID\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      responses:\n+        default:\n+          content:\n+            application/json:\n+              schema:\n+                items:\n+                  $ref: '#/components/schemas/Workflow'\n+                type: array\n+          description: default response\n+      security:\n+      - bearer: []\n+      tags:\n+      - users\n+    patch:\n+      description: Adds the logged-in user to any Dockstore workflows that they should\n+        have access to.\n+      operationId: addUserToDockstoreWorkflows\n+      parameters:\n+      - description: User to update\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      requestBody:\n+        content:\n+          '*/*':\n+            schema:\n+              type: string\n+        description: This is here to appease Swagger. It requires PATCH methods to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NzY5NQ=="}, "originalCommit": {"oid": "1d9b34781785801456721b389ac5acfbb9016f7b"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU4NjIyNQ==", "bodyText": "I would argue that it is changing server state, and should be a POST.\nBut also agree it's not worth hair-splitting.", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r432586225", "createdAt": "2020-05-29T16:04:49Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4201,6 +4201,95 @@ paths:\n           description: default response\n       tags:\n       - users\n+  /users/{userId}/workflows:\n+    get:\n+      description: List all workflows owned by the authenticated user.\n+      operationId: userWorkflows\n+      parameters:\n+      - description: User ID\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      responses:\n+        default:\n+          content:\n+            application/json:\n+              schema:\n+                items:\n+                  $ref: '#/components/schemas/Workflow'\n+                type: array\n+          description: default response\n+      security:\n+      - bearer: []\n+      tags:\n+      - users\n+    patch:\n+      description: Adds the logged-in user to any Dockstore workflows that they should\n+        have access to.\n+      operationId: addUserToDockstoreWorkflows\n+      parameters:\n+      - description: User to update\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      requestBody:\n+        content:\n+          '*/*':\n+            schema:\n+              type: string\n+        description: This is here to appease Swagger. It requires PATCH methods to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NzY5NQ=="}, "originalCommit": {"oid": "1d9b34781785801456721b389ac5acfbb9016f7b"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU5NDM5NQ==", "bodyText": "Idempotence is not what's defining between POST and PUT, but PUT definitely needs to be idempotent (https://symfonycasts.com/screencast/rest/put-versus-post#post-and-non-idempotency).  Most of our GET requests are also idemptotent, but we wouldn't use PUT for example.  The fact that swagger complains about no body is a definite issue.\nhttps://tools.ietf.org/html/rfc7231#section-4.3.4\nPUT is meant to replace the existing resource with a message payload (the body), having no body means it's definitely incorrect.   That said, we don't really follow REST closely, so this is fine.\nEdit:  Is this even idempotent in the first place? Can't I hit this endpoint multiple times and the resource would change if I was added to an organization between calls?", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r432594395", "createdAt": "2020-05-29T16:19:26Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4201,6 +4201,95 @@ paths:\n           description: default response\n       tags:\n       - users\n+  /users/{userId}/workflows:\n+    get:\n+      description: List all workflows owned by the authenticated user.\n+      operationId: userWorkflows\n+      parameters:\n+      - description: User ID\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      responses:\n+        default:\n+          content:\n+            application/json:\n+              schema:\n+                items:\n+                  $ref: '#/components/schemas/Workflow'\n+                type: array\n+          description: default response\n+      security:\n+      - bearer: []\n+      tags:\n+      - users\n+    patch:\n+      description: Adds the logged-in user to any Dockstore workflows that they should\n+        have access to.\n+      operationId: addUserToDockstoreWorkflows\n+      parameters:\n+      - description: User to update\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      requestBody:\n+        content:\n+          '*/*':\n+            schema:\n+              type: string\n+        description: This is here to appease Swagger. It requires PATCH methods to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NzY5NQ=="}, "originalCommit": {"oid": "1d9b34781785801456721b389ac5acfbb9016f7b"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY5Mjg5Nw==", "bodyText": "It seems to me that you could hit the endpoint multiple times, but it is just going to end up in the same state, our DB being up-to-date with the current information from GitHub.\nThat GitHub can change doesn't seem enough to me to make it non-idempotent.\nhttps://dev.dockstore.net/api/metadata/okHttpCachePerformance is going to change all the time depending on how our cache is performing, so would a GET request that gathers, say, statistics on the current number of database connections open even though that can change.", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r432692897", "createdAt": "2020-05-29T19:34:06Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4201,6 +4201,95 @@ paths:\n           description: default response\n       tags:\n       - users\n+  /users/{userId}/workflows:\n+    get:\n+      description: List all workflows owned by the authenticated user.\n+      operationId: userWorkflows\n+      parameters:\n+      - description: User ID\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      responses:\n+        default:\n+          content:\n+            application/json:\n+              schema:\n+                items:\n+                  $ref: '#/components/schemas/Workflow'\n+                type: array\n+          description: default response\n+      security:\n+      - bearer: []\n+      tags:\n+      - users\n+    patch:\n+      description: Adds the logged-in user to any Dockstore workflows that they should\n+        have access to.\n+      operationId: addUserToDockstoreWorkflows\n+      parameters:\n+      - description: User to update\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      requestBody:\n+        content:\n+          '*/*':\n+            schema:\n+              type: string\n+        description: This is here to appease Swagger. It requires PATCH methods to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NzY5NQ=="}, "originalCommit": {"oid": "1d9b34781785801456721b389ac5acfbb9016f7b"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxMTgwNg==", "bodyText": "My feeling is because it can trigger a state change on the server, even if said state ultimately comes from GitHub, that it's not idempotent.  I guess that's where we differ.\nIn the cache example, the GET itself is not changing the state, so I think that's fine.\nIt's merged anyway, so it's all moot. :)", "url": "https://github.com/dockstore/dockstore/pull/3491#discussion_r432711806", "createdAt": "2020-05-29T20:10:04Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4201,6 +4201,95 @@ paths:\n           description: default response\n       tags:\n       - users\n+  /users/{userId}/workflows:\n+    get:\n+      description: List all workflows owned by the authenticated user.\n+      operationId: userWorkflows\n+      parameters:\n+      - description: User ID\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      responses:\n+        default:\n+          content:\n+            application/json:\n+              schema:\n+                items:\n+                  $ref: '#/components/schemas/Workflow'\n+                type: array\n+          description: default response\n+      security:\n+      - bearer: []\n+      tags:\n+      - users\n+    patch:\n+      description: Adds the logged-in user to any Dockstore workflows that they should\n+        have access to.\n+      operationId: addUserToDockstoreWorkflows\n+      parameters:\n+      - description: User to update\n+        in: path\n+        name: userId\n+        required: true\n+        schema:\n+          format: int64\n+          type: integer\n+      requestBody:\n+        content:\n+          '*/*':\n+            schema:\n+              type: string\n+        description: This is here to appease Swagger. It requires PATCH methods to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NzY5NQ=="}, "originalCommit": {"oid": "1d9b34781785801456721b389ac5acfbb9016f7b"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2956, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}