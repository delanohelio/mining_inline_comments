{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMDYxODc5", "number": 3930, "title": "filter workflows using criteria builder on TRS endpoint", "bodyText": "#3838\nThis only filters workflows for now. I'll work on the tools part while waiting for feedback, but since I'm off tomorrow I just wanted to make sure at least this got in before the release.\nBehavior is slightly different from before. The source control filter used to check if the column contained the term, but now it needs to be equal.", "createdAt": "2020-11-17T00:38:07Z", "url": "https://github.com/dockstore/dockstore/pull/3930", "merged": true, "mergeCommit": {"oid": "51a40aa09a3027f03766ea3a2040c25bbc3d7b11"}, "closed": true, "closedAt": "2020-11-20T17:04:11Z", "author": {"login": "NatalieEO"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddOfaKgH2gAyNTIyMDYxODc5OmVmZmY0MzU5MDViZGU1NWUzOWI1MTUyMWM5NjY4YTQzZDA0YWNiZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeZXggAFqTUzNTU0NDgxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "efff435905bde55e39b51521c9668a43d04acbe1", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/efff435905bde55e39b51521c9668a43d04acbe1", "committedDate": "2020-11-17T00:34:01Z", "message": "filter workflows using criteria builder on TRS endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3871255aab4b29e34e0ce51c456fad3f03e10f9b", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/3871255aab4b29e34e0ce51c456fad3f03e10f9b", "committedDate": "2020-11-17T00:38:42Z", "message": "log level: error to info"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxOTkyNzMw", "url": "https://github.com/dockstore/dockstore/pull/3930#pullrequestreview-531992730", "createdAt": "2020-11-17T03:17:25Z", "commit": {"oid": "3871255aab4b29e34e0ce51c456fad3f03e10f9b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMzoxNzoyNlrOH0i0iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMzozMDozM1rOH0jCTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg1ODUwNQ==", "bodyText": "Pretty sure you can just invoke DescriptorLanguage.convertShortStringToEnum (although you'll need to catch the exception).", "url": "https://github.com/dockstore/dockstore/pull/3930#discussion_r524858505", "createdAt": "2020-11-17T03:17:26Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowDAO.java", "diffHunk": "@@ -175,6 +178,73 @@ public WorkflowDAO(SessionFactory factory) {\n         return filteredWorkflows.size() == 1 ? Optional.of(filteredWorkflows.get(0)) : Optional.empty();\n     }\n \n+    @SuppressWarnings({\"checkstyle:ParameterNumber\"})\n+    public List<Workflow> filterTrsToolsGet(String descriptorType, String registry, String organization, String name, String toolname,\n+            String description, String author, Boolean checker) {\n+\n+        SourceControlConverter converter = new SourceControlConverter();\n+        CriteriaBuilder cb = currentSession().getCriteriaBuilder();\n+        CriteriaQuery<Workflow> q = cb.createQuery(Workflow.class);\n+        Root<Workflow> entryRoot = q.from(Workflow.class);\n+\n+        List<Predicate> predicates = new ArrayList<>();\n+        predicates.add(cb.isTrue(entryRoot.get(\"isPublished\")));\n+        Predicate predicate = cb.isTrue(entryRoot.get(\"isPublished\"));\n+\n+        predicate = andLike(cb, predicate, entryRoot.get(\"organization\"), Optional.ofNullable(organization));\n+        predicate = andLike(cb, predicate, entryRoot.get(\"repository\"), Optional.ofNullable(name));\n+        predicate = andLike(cb, predicate, entryRoot.get(\"workflowName\"), Optional.ofNullable(toolname));\n+        predicate = andLike(cb, predicate, entryRoot.get(\"description\"), Optional.ofNullable(description));\n+        predicate = andLike(cb, predicate, entryRoot.get(\"author\"), Optional.ofNullable(author));\n+        predicate = andEqualDescriptorType(cb, predicate, entryRoot.get(\"descriptorType\"), Optional.ofNullable(descriptorType));\n+\n+        if (registry != null) {\n+            predicate = cb.and(predicate, cb.equal(entryRoot.get(\"sourceControl\"), converter.convertToEntityAttribute(registry)));\n+        }\n+\n+        if (checker != null) {\n+            predicate = cb.and(predicate, cb.isTrue(entryRoot.get(\"isChecker\")));\n+        }\n+\n+        q.where(predicate);\n+        TypedQuery<Workflow> query = currentSession().createQuery(q);\n+\n+        List<Workflow> workflows = query.getResultList();\n+        return workflows;\n+    }\n+\n+    private Predicate andLike(CriteriaBuilder cb, Predicate existingPredicate, Path<String> column, Optional<String> value) {\n+        return value.map(val -> cb.and(existingPredicate, cb.like(column, wildcardLike(val))))\n+                .orElse(existingPredicate);\n+    }\n+\n+    private String wildcardLike(String value) {\n+        return '%' + value + '%';\n+    }\n+\n+    private Predicate andEqualDescriptorType(CriteriaBuilder cb, Predicate existingPredicate, Path<String> column, Optional<String> value) {\n+        DescriptorLanguage descriptorLanguage;\n+        if (value.isPresent()) {\n+            String descriptorValue = value.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3871255aab4b29e34e0ce51c456fad3f03e10f9b"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg1OTMzNw==", "bodyText": "This would be a little bit hackish, but if the descriptorType is NextFlow or Galaxy, we could skip this step. You could hard-code, with a TODO, although ideally DescriptorLanguage would have something that indicates whether the language supports tools (not sure if that has API implications though).", "url": "https://github.com/dockstore/dockstore/pull/3930#discussion_r524859337", "createdAt": "2020-11-17T03:20:22Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -292,20 +292,16 @@ public Response toolsGet(String id, String alias, String toolClass, String descr\n                 all.addAll(toolDAO.findAllPublished());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3871255aab4b29e34e0ce51c456fad3f03e10f9b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2MTA5MQ==", "bodyText": "I don't think you need this nor the previous line.", "url": "https://github.com/dockstore/dockstore/pull/3930#discussion_r524861091", "createdAt": "2020-11-17T03:26:55Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowDAO.java", "diffHunk": "@@ -175,6 +178,73 @@ public WorkflowDAO(SessionFactory factory) {\n         return filteredWorkflows.size() == 1 ? Optional.of(filteredWorkflows.get(0)) : Optional.empty();\n     }\n \n+    @SuppressWarnings({\"checkstyle:ParameterNumber\"})\n+    public List<Workflow> filterTrsToolsGet(String descriptorType, String registry, String organization, String name, String toolname,\n+            String description, String author, Boolean checker) {\n+\n+        SourceControlConverter converter = new SourceControlConverter();\n+        CriteriaBuilder cb = currentSession().getCriteriaBuilder();\n+        CriteriaQuery<Workflow> q = cb.createQuery(Workflow.class);\n+        Root<Workflow> entryRoot = q.from(Workflow.class);\n+\n+        List<Predicate> predicates = new ArrayList<>();\n+        predicates.add(cb.isTrue(entryRoot.get(\"isPublished\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3871255aab4b29e34e0ce51c456fad3f03e10f9b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2MTcyOA==", "bodyText": "For line 47/51, was like this, but message is wrong; not a token type but a SourceControl", "url": "https://github.com/dockstore/dockstore/pull/3930#discussion_r524861728", "createdAt": "2020-11-17T03:29:30Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/SourceControlConverter.java", "diffHunk": "@@ -39,6 +39,10 @@ public String convertToDatabaseColumn(SourceControl attribute) {\n \n     @Override\n     public SourceControl convertToEntityAttribute(String dbData) {\n+        if (dbData == null || dbData.isEmpty()) {\n+            LOG.info(\"Cannot convert null or empty source control\");\n+            return null;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3871255aab4b29e34e0ce51c456fad3f03e10f9b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2MjAyOA==", "bodyText": "Suggest finals, except for line 192, which you can't.", "url": "https://github.com/dockstore/dockstore/pull/3930#discussion_r524862028", "createdAt": "2020-11-17T03:30:33Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowDAO.java", "diffHunk": "@@ -175,6 +178,73 @@ public WorkflowDAO(SessionFactory factory) {\n         return filteredWorkflows.size() == 1 ? Optional.of(filteredWorkflows.get(0)) : Optional.empty();\n     }\n \n+    @SuppressWarnings({\"checkstyle:ParameterNumber\"})\n+    public List<Workflow> filterTrsToolsGet(String descriptorType, String registry, String organization, String name, String toolname,\n+            String description, String author, Boolean checker) {\n+\n+        SourceControlConverter converter = new SourceControlConverter();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3871255aab4b29e34e0ce51c456fad3f03e10f9b"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNTAyMDQ2", "url": "https://github.com/dockstore/dockstore/pull/3930#pullrequestreview-532502046", "createdAt": "2020-11-17T15:40:14Z", "commit": {"oid": "3871255aab4b29e34e0ce51c456fad3f03e10f9b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNTo0MDoxNFrOH07bgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNTo0MDoxNFrOH07bgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI2MTY5Ng==", "bodyText": "To potentially clarify, I think you need this in general (the query should only return published workflows) but I think this is currently unused which means that this might be returning unpublished content which is not good.", "url": "https://github.com/dockstore/dockstore/pull/3930#discussion_r525261696", "createdAt": "2020-11-17T15:40:14Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowDAO.java", "diffHunk": "@@ -175,6 +178,73 @@ public WorkflowDAO(SessionFactory factory) {\n         return filteredWorkflows.size() == 1 ? Optional.of(filteredWorkflows.get(0)) : Optional.empty();\n     }\n \n+    @SuppressWarnings({\"checkstyle:ParameterNumber\"})\n+    public List<Workflow> filterTrsToolsGet(String descriptorType, String registry, String organization, String name, String toolname,\n+            String description, String author, Boolean checker) {\n+\n+        SourceControlConverter converter = new SourceControlConverter();\n+        CriteriaBuilder cb = currentSession().getCriteriaBuilder();\n+        CriteriaQuery<Workflow> q = cb.createQuery(Workflow.class);\n+        Root<Workflow> entryRoot = q.from(Workflow.class);\n+\n+        List<Predicate> predicates = new ArrayList<>();\n+        predicates.add(cb.isTrue(entryRoot.get(\"isPublished\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2MTA5MQ=="}, "originalCommit": {"oid": "3871255aab4b29e34e0ce51c456fad3f03e10f9b"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNTkzOTQz", "url": "https://github.com/dockstore/dockstore/pull/3930#pullrequestreview-532593943", "createdAt": "2020-11-17T17:04:58Z", "commit": {"oid": "3871255aab4b29e34e0ce51c456fad3f03e10f9b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzowNDo1OFrOH0_n3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzowNDo1OFrOH0_n3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzMDM5OA==", "bodyText": "On further reflection, I don't think this is right. If the user specifies a descriptorType, you should return all the the workflows that match the descriptorType. If none match, e.g., because the descriptorType doesn't exist, then the query should return no results. Instead you're ignoring the query element.\nI think you should short-circuit things and move this (or the shortened version) to the beginning of ToolsApiServiceImpl.toolsGet -- if there is a descriptorType query param and it doesn't resolve to a valid descriptor, just return an empty list.\nIn addition, you could use that DescriptorType to skip tools per my other suggestion.", "url": "https://github.com/dockstore/dockstore/pull/3930#discussion_r525330398", "createdAt": "2020-11-17T17:04:58Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/WorkflowDAO.java", "diffHunk": "@@ -175,6 +178,73 @@ public WorkflowDAO(SessionFactory factory) {\n         return filteredWorkflows.size() == 1 ? Optional.of(filteredWorkflows.get(0)) : Optional.empty();\n     }\n \n+    @SuppressWarnings({\"checkstyle:ParameterNumber\"})\n+    public List<Workflow> filterTrsToolsGet(String descriptorType, String registry, String organization, String name, String toolname,\n+            String description, String author, Boolean checker) {\n+\n+        SourceControlConverter converter = new SourceControlConverter();\n+        CriteriaBuilder cb = currentSession().getCriteriaBuilder();\n+        CriteriaQuery<Workflow> q = cb.createQuery(Workflow.class);\n+        Root<Workflow> entryRoot = q.from(Workflow.class);\n+\n+        List<Predicate> predicates = new ArrayList<>();\n+        predicates.add(cb.isTrue(entryRoot.get(\"isPublished\")));\n+        Predicate predicate = cb.isTrue(entryRoot.get(\"isPublished\"));\n+\n+        predicate = andLike(cb, predicate, entryRoot.get(\"organization\"), Optional.ofNullable(organization));\n+        predicate = andLike(cb, predicate, entryRoot.get(\"repository\"), Optional.ofNullable(name));\n+        predicate = andLike(cb, predicate, entryRoot.get(\"workflowName\"), Optional.ofNullable(toolname));\n+        predicate = andLike(cb, predicate, entryRoot.get(\"description\"), Optional.ofNullable(description));\n+        predicate = andLike(cb, predicate, entryRoot.get(\"author\"), Optional.ofNullable(author));\n+        predicate = andEqualDescriptorType(cb, predicate, entryRoot.get(\"descriptorType\"), Optional.ofNullable(descriptorType));\n+\n+        if (registry != null) {\n+            predicate = cb.and(predicate, cb.equal(entryRoot.get(\"sourceControl\"), converter.convertToEntityAttribute(registry)));\n+        }\n+\n+        if (checker != null) {\n+            predicate = cb.and(predicate, cb.isTrue(entryRoot.get(\"isChecker\")));\n+        }\n+\n+        q.where(predicate);\n+        TypedQuery<Workflow> query = currentSession().createQuery(q);\n+\n+        List<Workflow> workflows = query.getResultList();\n+        return workflows;\n+    }\n+\n+    private Predicate andLike(CriteriaBuilder cb, Predicate existingPredicate, Path<String> column, Optional<String> value) {\n+        return value.map(val -> cb.and(existingPredicate, cb.like(column, wildcardLike(val))))\n+                .orElse(existingPredicate);\n+    }\n+\n+    private String wildcardLike(String value) {\n+        return '%' + value + '%';\n+    }\n+\n+    private Predicate andEqualDescriptorType(CriteriaBuilder cb, Predicate existingPredicate, Path<String> column, Optional<String> value) {\n+        DescriptorLanguage descriptorLanguage;\n+        if (value.isPresent()) {\n+            String descriptorValue = value.get();\n+            if (\"galaxy\".equalsIgnoreCase(descriptorValue)) {\n+                descriptorLanguage = DescriptorLanguage.GXFORMAT2;\n+            } else if (descriptorValue.equals(DescriptorLanguage.CWL.getShortName())) {\n+                descriptorLanguage = DescriptorLanguage.CWL;\n+            } else if (descriptorValue.equals(DescriptorLanguage.WDL.getShortName())) {\n+                descriptorLanguage = DescriptorLanguage.WDL;\n+            } else if (descriptorValue.equals(DescriptorLanguage.NEXTFLOW.getShortName())) {\n+                descriptorLanguage = DescriptorLanguage.NEXTFLOW;\n+            } else if (descriptorValue.equals(DescriptorLanguage.SERVICE.getShortName())) {\n+                descriptorLanguage = DescriptorLanguage.SERVICE;\n+            } else {\n+                LOG.info(\"Cannot match descriptor type\");\n+                return existingPredicate;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3871255aab4b29e34e0ce51c456fad3f03e10f9b"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "979b31a706839a956e36f79d32ef487ce01cd81f", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/979b31a706839a956e36f79d32ef487ce01cd81f", "committedDate": "2020-11-19T00:09:39Z", "message": "Don't return entries is descriptor language isn't found, use final, only add tools if wdl/cwl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4b892caa6c9ac7f8793aebd4b7f75de6ce3d536", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/b4b892caa6c9ac7f8793aebd4b7f75de6ce3d536", "committedDate": "2020-11-19T00:24:09Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzOTkzMDk1", "url": "https://github.com/dockstore/dockstore/pull/3930#pullrequestreview-533993095", "createdAt": "2020-11-19T00:38:01Z", "commit": {"oid": "b4b892caa6c9ac7f8793aebd4b7f75de6ce3d536"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MDU3NjYx", "url": "https://github.com/dockstore/dockstore/pull/3930#pullrequestreview-534057661", "createdAt": "2020-11-19T03:34:12Z", "commit": {"oid": "b4b892caa6c9ac7f8793aebd4b7f75de6ce3d536"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMzozNDoxMlrOH2Lbog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMzo0Mzo1NFrOH2Ll-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3MjQ1MA==", "bodyText": "This is nit-picking, but this is a very long condition and hard to understand\n\nYou already know if the descriptorLanguage has been found by virtue of it being null or not. I don't think you need the descriptorLanguageFound variable, although you can argue it enhances readability.\nWith enums, you can use ==\n\nI would suggest two nested if statements for readability. But that's my bias.", "url": "https://github.com/dockstore/dockstore/pull/3930#discussion_r526572450", "createdAt": "2020-11-19T03:34:12Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -288,24 +289,41 @@ public Response toolsGet(String id, String alias, String toolClass, String descr\n         } else if (alias != null) {\n             all.add(toolDAO.getGenericEntryByAlias(alias));\n         } else {\n-            if (toolClass == null || COMMAND_LINE_TOOL.equalsIgnoreCase(toolClass)) {\n+            // If there is no matching descriptor language, then do not add any tools or workflows.\n+            DescriptorLanguage descriptorLanguage = null;\n+            boolean descriptorLanguageFound = true;\n+\n+            // Tricky case for GALAXY because it doesn't match the rules of the other languages\n+            if (\"galaxy\".equalsIgnoreCase(descriptorType)) {\n+                descriptorType = DescriptorLanguage.GXFORMAT2.getShortName();\n+            }\n+\n+            if (descriptorType != null) {\n+                try {\n+                    descriptorLanguage = DescriptorLanguage.convertShortStringToEnum(descriptorType);\n+                } catch (UnsupportedOperationException ex) {\n+                    LOG.info(ex.getMessage());\n+                    descriptorLanguageFound = false;\n+                }\n+            }\n+\n+            // TODO: Have DescriptorLanguage indicate whether the language supports tools. Make this less hack-ish\n+            // Only WDL and CWL tools are supported on Dockstore.\n+            if (descriptorLanguageFound && (toolClass == null || COMMAND_LINE_TOOL.equalsIgnoreCase(toolClass))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4b892caa6c9ac7f8793aebd4b7f75de6ce3d536"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3MzI3OA==", "bodyText": "This could go inside the if on line 301, where you know descriptorType is not null. More from a readability perspective", "url": "https://github.com/dockstore/dockstore/pull/3930#discussion_r526573278", "createdAt": "2020-11-19T03:36:56Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -288,24 +289,41 @@ public Response toolsGet(String id, String alias, String toolClass, String descr\n         } else if (alias != null) {\n             all.add(toolDAO.getGenericEntryByAlias(alias));\n         } else {\n-            if (toolClass == null || COMMAND_LINE_TOOL.equalsIgnoreCase(toolClass)) {\n+            // If there is no matching descriptor language, then do not add any tools or workflows.\n+            DescriptorLanguage descriptorLanguage = null;\n+            boolean descriptorLanguageFound = true;\n+\n+            // Tricky case for GALAXY because it doesn't match the rules of the other languages\n+            if (\"galaxy\".equalsIgnoreCase(descriptorType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4b892caa6c9ac7f8793aebd4b7f75de6ce3d536"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3NTA5Nw==", "bodyText": "You always want to do this even if descriptorLanguage is not found.", "url": "https://github.com/dockstore/dockstore/pull/3930#discussion_r526575097", "createdAt": "2020-11-19T03:43:54Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/openapi/api/impl/ToolsApiServiceImpl.java", "diffHunk": "@@ -288,24 +289,41 @@ public Response toolsGet(String id, String alias, String toolClass, String descr\n         } else if (alias != null) {\n             all.add(toolDAO.getGenericEntryByAlias(alias));\n         } else {\n-            if (toolClass == null || COMMAND_LINE_TOOL.equalsIgnoreCase(toolClass)) {\n+            // If there is no matching descriptor language, then do not add any tools or workflows.\n+            DescriptorLanguage descriptorLanguage = null;\n+            boolean descriptorLanguageFound = true;\n+\n+            // Tricky case for GALAXY because it doesn't match the rules of the other languages\n+            if (\"galaxy\".equalsIgnoreCase(descriptorType)) {\n+                descriptorType = DescriptorLanguage.GXFORMAT2.getShortName();\n+            }\n+\n+            if (descriptorType != null) {\n+                try {\n+                    descriptorLanguage = DescriptorLanguage.convertShortStringToEnum(descriptorType);\n+                } catch (UnsupportedOperationException ex) {\n+                    LOG.info(ex.getMessage());\n+                    descriptorLanguageFound = false;\n+                }\n+            }\n+\n+            // TODO: Have DescriptorLanguage indicate whether the language supports tools. Make this less hack-ish\n+            // Only WDL and CWL tools are supported on Dockstore.\n+            if (descriptorLanguageFound && (toolClass == null || COMMAND_LINE_TOOL.equalsIgnoreCase(toolClass))\n+                    && (DescriptorLanguage.WDL.equals(descriptorLanguage) || DescriptorLanguage.CWL.equals(descriptorLanguage) || descriptorType == null)) {\n                 all.addAll(toolDAO.findAllPublished());\n             }\n-            if (toolClass == null || WORKFLOW.equalsIgnoreCase(toolClass)) {\n-                all.addAll(workflowDAO.findAllPublished());\n+            if (descriptorLanguageFound && (toolClass == null || WORKFLOW.equalsIgnoreCase(toolClass))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4b892caa6c9ac7f8793aebd4b7f75de6ce3d536"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04807641af8d9c86aa665d0d9b404b57c66f0653", "author": {"user": {"login": "NatalieEO", "name": null}}, "url": "https://github.com/dockstore/dockstore/commit/04807641af8d9c86aa665d0d9b404b57c66f0653", "committedDate": "2020-11-20T00:04:39Z", "message": "make less confusing, add test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0OTg5NDE4", "url": "https://github.com/dockstore/dockstore/pull/3930#pullrequestreview-534989418", "createdAt": "2020-11-20T00:34:50Z", "commit": {"oid": "04807641af8d9c86aa665d0d9b404b57c66f0653"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MTM5MDEw", "url": "https://github.com/dockstore/dockstore/pull/3930#pullrequestreview-535139010", "createdAt": "2020-11-20T06:12:39Z", "commit": {"oid": "04807641af8d9c86aa665d0d9b404b57c66f0653"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NDk3MDM1", "url": "https://github.com/dockstore/dockstore/pull/3930#pullrequestreview-535497035", "createdAt": "2020-11-20T14:54:44Z", "commit": {"oid": "04807641af8d9c86aa665d0d9b404b57c66f0653"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NTQ0ODEw", "url": "https://github.com/dockstore/dockstore/pull/3930#pullrequestreview-535544810", "createdAt": "2020-11-20T15:48:17Z", "commit": {"oid": "04807641af8d9c86aa665d0d9b404b57c66f0653"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1624, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}