{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNTk2MTY1", "number": 3892, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjo0NDoxN1rOEy546g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjo0MzoyMlrOE0dXyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxODEyNzE0OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/GitHubSourceCodeRepo.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjo0NDoxN1rOHpznNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxODo1ODoyMFrOHrcTrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU5OTI4Nw==", "bodyText": "It was like this, but I think you could move this to before line 739, saving the unnecessary reading of the GitHub file and creation of a SourceFile if there actually is a duplicate.\nPerformance-wise, I'm sure it's negligible, and I doubt there are rarely, if ever, any cases of duplicate files like this, but it might make the code slightly easier to read.\nJust nit-picking, and I don't feel super-strongly about this, but just noticed it as I was trying to understand the code.", "url": "https://github.com/dockstore/dockstore/pull/3892#discussion_r513599287", "createdAt": "2020-10-28T16:44:17Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/GitHubSourceCodeRepo.java", "diffHunk": "@@ -736,19 +736,19 @@ private WorkflowVersion setupWorkflowFilesForGitHubVersion(Triple<String, Date,\n             if (testParameterPaths != null) {\n                 List<String> missingParamFiles = new ArrayList<>();\n                 for (String testParameterPath : testParameterPaths) {\n-                    String testJsonContent = this.readFileFromRepo(testParameterPath, ref.getLeft(), repository);\n-                    if (testJsonContent != null) {\n-                        SourceFile testJson = new SourceFile();\n-                        // find type from file type, then find matching test param type\n-                        testJson.setType(workflow.getDescriptorType().getTestParamType());\n-                        testJson.setPath(workflow.getDefaultTestParameterFilePath());\n-                        testJson.setAbsolutePath(workflow.getDefaultTestParameterFilePath());\n-                        testJson.setContent(testJsonContent);\n+                    String testFileContent = this.readFileFromRepo(testParameterPath, ref.getLeft(), repository);\n+                    if (testFileContent != null) {\n+                        SourceFile testFile = new SourceFile();\n+                        // find type from file type\n+                        testFile.setType(workflow.getDescriptorType().getTestParamType());\n+                        testFile.setPath(testParameterPath);\n+                        testFile.setAbsolutePath(testParameterPath);\n+                        testFile.setContent(testFileContent);\n \n                         // Only add test parameter file if it hasn't already been added\n-                        boolean hasDuplicate = version.getSourceFiles().stream().anyMatch((SourceFile sf) -> sf.getPath().equals(workflow.getDefaultTestParameterFilePath()) && sf.getType() == testJson.getType());\n+                        boolean hasDuplicate = version.getSourceFiles().stream().anyMatch((SourceFile sf) -> sf.getPath().equals(testFile.getPath()) && sf.getType() == testFile.getType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0a4fba56486ae1772b00b59215f531383a6162c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxNDYwNQ==", "bodyText": "Addressed in c68e5ae", "url": "https://github.com/dockstore/dockstore/pull/3892#discussion_r515314605", "createdAt": "2020-10-30T18:58:20Z", "author": {"login": "GFJHogue"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/GitHubSourceCodeRepo.java", "diffHunk": "@@ -736,19 +736,19 @@ private WorkflowVersion setupWorkflowFilesForGitHubVersion(Triple<String, Date,\n             if (testParameterPaths != null) {\n                 List<String> missingParamFiles = new ArrayList<>();\n                 for (String testParameterPath : testParameterPaths) {\n-                    String testJsonContent = this.readFileFromRepo(testParameterPath, ref.getLeft(), repository);\n-                    if (testJsonContent != null) {\n-                        SourceFile testJson = new SourceFile();\n-                        // find type from file type, then find matching test param type\n-                        testJson.setType(workflow.getDescriptorType().getTestParamType());\n-                        testJson.setPath(workflow.getDefaultTestParameterFilePath());\n-                        testJson.setAbsolutePath(workflow.getDefaultTestParameterFilePath());\n-                        testJson.setContent(testJsonContent);\n+                    String testFileContent = this.readFileFromRepo(testParameterPath, ref.getLeft(), repository);\n+                    if (testFileContent != null) {\n+                        SourceFile testFile = new SourceFile();\n+                        // find type from file type\n+                        testFile.setType(workflow.getDescriptorType().getTestParamType());\n+                        testFile.setPath(testParameterPath);\n+                        testFile.setAbsolutePath(testParameterPath);\n+                        testFile.setContent(testFileContent);\n \n                         // Only add test parameter file if it hasn't already been added\n-                        boolean hasDuplicate = version.getSourceFiles().stream().anyMatch((SourceFile sf) -> sf.getPath().equals(workflow.getDefaultTestParameterFilePath()) && sf.getType() == testJson.getType());\n+                        boolean hasDuplicate = version.getSourceFiles().stream().anyMatch((SourceFile sf) -> sf.getPath().equals(testFile.getPath()) && sf.getType() == testFile.getType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU5OTI4Nw=="}, "originalCommit": {"oid": "b0a4fba56486ae1772b00b59215f531383a6162c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDQyNjMyOnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/WebhookIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjo0MzoyMlrOHsMkLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjo0MzoyMlrOHsMkLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwNTI2MQ==", "bodyText": "Would also like a test for a Galaxy workflow with a yaml test parameter file to cover our bases\nEdit: can see from above, this is unlikely to catch anything, but just in case", "url": "https://github.com/dockstore/dockstore/pull/3892#discussion_r516105261", "createdAt": "2020-11-02T16:43:22Z", "author": {"login": "denis-yuen"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/WebhookIT.java", "diffHunk": "@@ -535,6 +535,22 @@ public void testInvalidDockstoreYmlFiles() throws Exception {\n         }\n     }\n \n+    /**\n+     * Test that a .dockstore.yml workflow has the expected path for its test parameter file.\n+     */\n+    @Test\n+    public void testTestParameterPaths() throws Exception {\n+        CommonTestUtilities.cleanStatePrivate2(SUPPORT, false);\n+        final ApiClient webClient = getWebClient(BasicIT.USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi client = new WorkflowsApi(webClient);\n+\n+        client.handleGitHubRelease(workflowRepo, BasicIT.USER_2_USERNAME, \"refs/heads/master\", installationId);\n+        Workflow workflow = client.getWorkflowByPath(\"github.com/\" + workflowRepo + \"/foobar\", \"\", false);\n+        WorkflowVersion version = workflow.getWorkflowVersions().get(0);\n+        List<SourceFile> sourceFiles = fileDAO.findSourceFilesByVersion(version.getId());\n+        assertTrue(\"Test file should have the expected path\", sourceFiles.stream().filter(sourceFile -> sourceFile.getPath().equals(\"/dockstore.wdl.json\")).findFirst().isPresent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb40f8279da2007dbc93b68a307a4c74868439de"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2880, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}