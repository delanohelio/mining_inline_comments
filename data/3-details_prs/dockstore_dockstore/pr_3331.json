{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjExNTUx", "number": 3331, "title": "Feature/3328/delete gh app workflow branch", "bodyText": "#3328\nAdd endpoint which will delete all matching branches on Dockstore given a repository. Used when a delete push event is done on GH.", "createdAt": "2020-03-18T18:59:34Z", "url": "https://github.com/dockstore/dockstore/pull/3331", "merged": true, "mergeCommit": {"oid": "3a8008279a4bd3a909d5d9417cfc6e1c07918fab"}, "closed": true, "closedAt": "2020-03-24T12:26:23Z", "author": {"login": "agduncan94"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO41kYgH2gAyMzkwNjExNTUxOmFkOTU2MWE5Zjk3Y2I4MzY5M2IzNTUwZjBjMWM5NzRlMzk3M2I4N2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQhPwigFqTM3OTYyMzA1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ad9561a9f97cb83693b3550f0c1c974e3973b87c", "author": {"user": {"login": "agduncan94", "name": "Andrew Duncan"}}, "url": "https://github.com/dockstore/dockstore/commit/ad9561a9f97cb83693b3550f0c1c974e3973b87c", "committedDate": "2020-03-18T15:14:13Z", "message": "added endpoint for deleting branches when they are deleted on github"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e", "author": {"user": {"login": "agduncan94", "name": "Andrew Duncan"}}, "url": "https://github.com/dockstore/dockstore/commit/047a69bd6a0455375f3f039673c1316f19225b5e", "committedDate": "2020-03-18T16:27:20Z", "message": "test for deleting branches"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTU0OTA3", "url": "https://github.com/dockstore/dockstore/pull/3331#pullrequestreview-377154907", "createdAt": "2020-03-18T19:03:18Z", "commit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTowMzoxOFrOF4S_7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTowOToxMFrOF4TL9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NTg1Mg==", "bodyText": "We have a constant for \"bearer\" now.\nI think HttpStatus + \"\" is preferred over \"418\"", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r394575852", "createdAt": "2020-03-18T19:03:18Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1838,4 +1838,19 @@ public void deleteWorkflow(@ApiParam(hidden = true) @Parameter(hidden = true, na\n         @ApiParam(value = \"GitHub installation ID\", required = true) @FormParam(\"installationId\") String installationId) {\n         return githubWebhookRelease(repository, username, gitReference, installationId);\n     }\n+\n+    @POST\n+    @Path(\"/github/delete\")\n+    @Timed\n+    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n+    @UnitOfWork\n+    @RolesAllowed({ \"curator\", \"admin\" })\n+    @Operation(description = \"Handles the deletion of a branch on GitHub. Will delete all workflow versions that match.\", security = @SecurityRequirement(name = \"bearer\"), responses = @ApiResponse(responseCode = \"418\", description = \"This code tells AWS Lambda not to retry.\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NzQ1NQ==", "bodyText": "likely old version of yq", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r394577455", "createdAt": "2020-03-18T19:06:17Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4069,11 +3972,7 @@ paths:\n           type: string\n       responses:\n         default:\n-          content:\n-            application/json: {}\n           description: default response\n-      security:\n-      - bearer: []", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "originalPosition": 546}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3ODM3NA==", "bodyText": "OpenAPI missing description", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r394578374", "createdAt": "2020-03-18T19:08:02Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/swagger.yaml", "diffHunk": "@@ -4689,6 +4689,39 @@ paths:\n               $ref: \"#/definitions/Workflow\"\n       security:\n       - BEARER: []\n+  /workflows/github/delete:\n+    post:\n+      tags:\n+      - \"workflows\"\n+      summary: \"Handles the deletion of a branch on GitHub. Will delete all workflow\\\n+        \\ versions that match.\"\n+      description: \"\"\n+      operationId: \"handleGitHubBranchDeletion\"\n+      consumes:\n+      - \"application/x-www-form-urlencoded\"\n+      produces:\n+      - \"application/json\"\n+      parameters:\n+      - name: \"repository\"\n+        in: \"formData\"\n+        description: \"Repository path (ex. dockstore/dockstore-ui2)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3ODkzMw==", "bodyText": "could pass in mode too when finding by path", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r394578933", "createdAt": "2020-03-18T19:09:10Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractWorkflowResource.java", "diffHunk": "@@ -238,6 +242,24 @@ protected void updateDBWorkflowWithSourceControlWorkflow(Workflow workflow, Work\n         }\n     }\n \n+    /**\n+     * Handle webhooks from GitHub apps after branch deletion (redirected from AWS Lambda)\n+     * - Delete version for corresponding service and workflow\n+     * @param repository Repository path (ex. dockstore/dockstore-ui2)\n+     * @param gitReference Git reference from GitHub (ex. refs/tags/1.0)\n+     * @return List of updated workflows\n+     */\n+    protected List<Workflow> githubWebhookDelete(String repository, String gitReference) {\n+        // Retrieve name from gitReference\n+        Pair<String, String> referencePair = parseGitHubReference(gitReference);\n+\n+        // Find all workflows and services that are github apps and use the given repo\n+        List<Workflow> workflows = workflowDAO.findAllByPath(\"github.com/\" + repository, false).stream().filter(workflow -> Objects.equals(workflow.getMode(), DOCKSTORE_YML)).collect(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTgxODc2", "url": "https://github.com/dockstore/dockstore/pull/3331#pullrequestreview-377181876", "createdAt": "2020-03-18T19:44:31Z", "commit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTo0NDozMVrOF4UTSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDoxNzozNlrOF4VWDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU5NzE5Mg==", "bodyText": "If we're going more RESTful, the method should be a @DELETE, and the path should be a resource/noun (don't have the verb \"delete\"). But if you do that, I think you need to make the parameters be query parameters rather than form parameters; something like:\nDELETE /workflows/github?repository=<repo>&reference=<ref>\n\nIf you do that, then technically you're supposed to return the deleted entity(ies), not a list of the remaining entities. Or you can optionally return a 204 with no content.", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r394597192", "createdAt": "2020-03-18T19:44:31Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1838,4 +1838,19 @@ public void deleteWorkflow(@ApiParam(hidden = true) @Parameter(hidden = true, na\n         @ApiParam(value = \"GitHub installation ID\", required = true) @FormParam(\"installationId\") String installationId) {\n         return githubWebhookRelease(repository, username, gitReference, installationId);\n     }\n+\n+    @POST\n+    @Path(\"/github/delete\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU5OTkwNA==", "bodyText": "I'm sort of torn on this because Pairs do you make your life easier and I've used them. On the other hand, it makes the code hard to read up above on line 259 -- I have to look at this code to see what getRight() returns. If the types were different, e.g., String and Integer, then maybe... But I lean towards creating an inner class that makes it clear what is what.\nAlso, you never use the left part of the pair. Is that intentional or are you not checking for something? If you are never going to use it, then another option is just have this method return a String with the name.", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r394599904", "createdAt": "2020-03-18T19:49:33Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractWorkflowResource.java", "diffHunk": "@@ -536,4 +558,24 @@ private String gitHubAppSetup(String installationId) {\n         }\n         return installationAccessToken;\n     }\n+\n+    /**\n+     * Parse git references (ex. refs/heads/feature/foobar) and returns a pair of the branch type and name\n+     * @param gitReference Git Reference of the form refs/tags/name or refs/heads/name\n+     * @return Pair of reference information\n+     */\n+    private Pair<String, String> parseGitHubReference(String gitReference) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYwMDc1Mg==", "bodyText": "Even though the DB policies will catch it, I don't know if the whole transaction gets rolled back or it fails silently, so you should not try to delete frozen versions.", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r394600752", "createdAt": "2020-03-18T19:51:08Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractWorkflowResource.java", "diffHunk": "@@ -238,6 +242,24 @@ protected void updateDBWorkflowWithSourceControlWorkflow(Workflow workflow, Work\n         }\n     }\n \n+    /**\n+     * Handle webhooks from GitHub apps after branch deletion (redirected from AWS Lambda)\n+     * - Delete version for corresponding service and workflow\n+     * @param repository Repository path (ex. dockstore/dockstore-ui2)\n+     * @param gitReference Git reference from GitHub (ex. refs/tags/1.0)\n+     * @return List of updated workflows\n+     */\n+    protected List<Workflow> githubWebhookDelete(String repository, String gitReference) {\n+        // Retrieve name from gitReference\n+        Pair<String, String> referencePair = parseGitHubReference(gitReference);\n+\n+        // Find all workflows and services that are github apps and use the given repo\n+        List<Workflow> workflows = workflowDAO.findAllByPath(\"github.com/\" + repository, false).stream().filter(workflow -> Objects.equals(workflow.getMode(), DOCKSTORE_YML)).collect(\n+                Collectors.toList());\n+        workflows.forEach(workflow -> workflow.getWorkflowVersions().removeIf(workflowVersion -> Objects.equals(workflowVersion.getName(), referencePair.getRight())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYwMzg4Mw==", "bodyText": "It would be nice to have a unit test for this method -- regexes are hard to review.", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r394603883", "createdAt": "2020-03-18T19:57:13Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractWorkflowResource.java", "diffHunk": "@@ -536,4 +558,24 @@ private String gitHubAppSetup(String installationId) {\n         }\n         return installationAccessToken;\n     }\n+\n+    /**\n+     * Parse git references (ex. refs/heads/feature/foobar) and returns a pair of the branch type and name\n+     * @param gitReference Git Reference of the form refs/tags/name or refs/heads/name\n+     * @return Pair of reference information\n+     */\n+    private Pair<String, String> parseGitHubReference(String gitReference) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYwNTk3Nw==", "bodyText": "This is going to be  the stringtags or heads isn't it? Shouldn't you convert this to a Version.ReferenceType?\nBut see my above comments -- you aren't actually using this. And if you do need to use it, then maybe a Pair<ReferenceType, String> is OK instead of creating a new class.", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r394605977", "createdAt": "2020-03-18T20:01:16Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractWorkflowResource.java", "diffHunk": "@@ -536,4 +558,24 @@ private String gitHubAppSetup(String installationId) {\n         }\n         return installationAccessToken;\n     }\n+\n+    /**\n+     * Parse git references (ex. refs/heads/feature/foobar) and returns a pair of the branch type and name\n+     * @param gitReference Git Reference of the form refs/tags/name or refs/heads/name\n+     * @return Pair of reference information\n+     */\n+    private Pair<String, String> parseGitHubReference(String gitReference) {\n+        // Match the github reference (ex. refs/heads/feature/foobar or refs/tags/1.0)\n+        Pattern pattern = Pattern.compile(\"^refs/(tags|heads)/([a-zA-Z0-9]+([./_-]?[a-zA-Z0-9]+)*)$\");\n+        Matcher matcher = pattern.matcher(gitReference);\n+\n+        if (!matcher.find()) {\n+            String msg = \"Reference \" + gitReference + \" is not of the valid form\";\n+            LOG.error(msg);\n+            throw new CustomWebApplicationException(msg, LAMBDA_FAILURE);\n+        }\n+        String gitBranchType = matcher.group(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYxNDI4Ng==", "bodyText": "It will only delete at most one workflow version per workflow, but it could do it for multiple workflows. Don't know if that's worth capturing, but I was initially confused as to how it could delete multiple versions when we just added a constraint that ensures only one version can exist.  I can't think of better way to phrase it off-hand. :(", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r394614286", "createdAt": "2020-03-18T20:17:36Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1838,4 +1838,19 @@ public void deleteWorkflow(@ApiParam(hidden = true) @Parameter(hidden = true, na\n         @ApiParam(value = \"GitHub installation ID\", required = true) @FormParam(\"installationId\") String installationId) {\n         return githubWebhookRelease(repository, username, gitReference, installationId);\n     }\n+\n+    @POST\n+    @Path(\"/github/delete\")\n+    @Timed\n+    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n+    @UnitOfWork\n+    @RolesAllowed({ \"curator\", \"admin\" })\n+    @Operation(description = \"Handles the deletion of a branch on GitHub. Will delete all workflow versions that match.\", security = @SecurityRequirement(name = \"bearer\"), responses = @ApiResponse(responseCode = \"418\", description = \"This code tells AWS Lambda not to retry.\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NTg1Mg=="}, "originalCommit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MjQ2OTcw", "url": "https://github.com/dockstore/dockstore/pull/3331#pullrequestreview-377246970", "createdAt": "2020-03-18T21:26:05Z", "commit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMToyNjowNVrOF4Xdkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMToyNjowNVrOF4Xdkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY0ODk3OQ==", "bodyText": "Also, could you log the repository and gitReference? Tracking down what happened in prod with another issue is making me realize that logging this sort of data could end up being very useful.", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r394648979", "createdAt": "2020-03-18T21:26:05Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1838,4 +1838,19 @@ public void deleteWorkflow(@ApiParam(hidden = true) @Parameter(hidden = true, na\n         @ApiParam(value = \"GitHub installation ID\", required = true) @FormParam(\"installationId\") String installationId) {\n         return githubWebhookRelease(repository, username, gitReference, installationId);\n     }\n+\n+    @POST\n+    @Path(\"/github/delete\")\n+    @Timed\n+    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n+    @UnitOfWork\n+    @RolesAllowed({ \"curator\", \"admin\" })\n+    @Operation(description = \"Handles the deletion of a branch on GitHub. Will delete all workflow versions that match.\", security = @SecurityRequirement(name = \"bearer\"), responses = @ApiResponse(responseCode = \"418\", description = \"This code tells AWS Lambda not to retry.\"))\n+    @ApiOperation(value = \"Handles the deletion of a branch on GitHub. Will delete all workflow versions that match.\", authorizations = {\n+            @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = Workflow.class, responseContainer = \"List\")\n+    public List<Workflow> handleGitHubBranchDeletion(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\", in = ParameterIn.HEADER) @Auth User user,\n+            @ApiParam(value = \"Repository path (ex. dockstore/dockstore-ui2)\", required = true) @FormParam(\"repository\") String repository,\n+            @ApiParam(value = \"Full git reference for a GitHub branch/tag. Ex. refs/heads/master or refs/tags/v1.0\", required = true) @FormParam(\"gitReference\") String gitReference) {\n+        return githubWebhookDelete(repository, gitReference);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NzYyMDcx", "url": "https://github.com/dockstore/dockstore/pull/3331#pullrequestreview-377762071", "createdAt": "2020-03-19T14:17:53Z", "commit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDoxNzo1M1rOF4wfmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDoyMjowOFrOF4wsNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1OTA5Nw==", "bodyText": "A lot of endpoints are losing their security and bearer token information. Seems odd", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r395059097", "createdAt": "2020-03-19T14:17:53Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -1800,8 +1800,6 @@ paths:\n               schema:\n                 type: string\n           description: An elastic search result.\n-      security:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA2MjMyNg==", "bodyText": "Was confused too, maybe the description should be longer.\nLike \"Handles the deletion of a branch on GitHub. Will delete all workflow versions that match in all workflows that share the same repository path prefix\" ? Or all workflows that are the same when ignoring workflow name?", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r395062326", "createdAt": "2020-03-19T14:22:08Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1838,4 +1838,19 @@ public void deleteWorkflow(@ApiParam(hidden = true) @Parameter(hidden = true, na\n         @ApiParam(value = \"GitHub installation ID\", required = true) @FormParam(\"installationId\") String installationId) {\n         return githubWebhookRelease(repository, username, gitReference, installationId);\n     }\n+\n+    @POST\n+    @Path(\"/github/delete\")\n+    @Timed\n+    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n+    @UnitOfWork\n+    @RolesAllowed({ \"curator\", \"admin\" })\n+    @Operation(description = \"Handles the deletion of a branch on GitHub. Will delete all workflow versions that match.\", security = @SecurityRequirement(name = \"bearer\"), responses = @ApiResponse(responseCode = \"418\", description = \"This code tells AWS Lambda not to retry.\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NTg1Mg=="}, "originalCommit": {"oid": "047a69bd6a0455375f3f039673c1316f19225b5e"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70ee93ddbdddccf48bc5d23823606aa861541608", "author": {"user": {"login": "agduncan94", "name": "Andrew Duncan"}}, "url": "https://github.com/dockstore/dockstore/commit/70ee93ddbdddccf48bc5d23823606aa861541608", "committedDate": "2020-03-19T14:43:05Z", "message": "fixes from pr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d264a95bdd77c604b08f80903224faa0fdbb799a", "author": {"user": {"login": "agduncan94", "name": "Andrew Duncan"}}, "url": "https://github.com/dockstore/dockstore/commit/d264a95bdd77c604b08f80903224faa0fdbb799a", "committedDate": "2020-03-19T15:53:36Z", "message": "fix security issue in swagger"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3ODgyOTYw", "url": "https://github.com/dockstore/dockstore/pull/3331#pullrequestreview-377882960", "createdAt": "2020-03-19T16:22:19Z", "commit": {"oid": "d264a95bdd77c604b08f80903224faa0fdbb799a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3ODg0ODkw", "url": "https://github.com/dockstore/dockstore/pull/3331#pullrequestreview-377884890", "createdAt": "2020-03-19T16:24:28Z", "commit": {"oid": "70ee93ddbdddccf48bc5d23823606aa861541608"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoyNDoyOFrOF42Ujg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoyNDoyOFrOF42Ujg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE1NDU3NA==", "bodyText": "Oh crud, I missed this.  It's not JWT_SECURITY_DEFINITION_NAME , it's some other constant that has OPENAPI in its name.  For some reason our swagger is \"BEARER\" but our openapi is \"bearer\". So there's two constants", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r395154574", "createdAt": "2020-03-19T16:24:28Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1828,29 +1828,32 @@ public void deleteWorkflow(@ApiParam(hidden = true) @Parameter(hidden = true, na\n     @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n     @UnitOfWork\n     @RolesAllowed({ \"curator\", \"admin\" })\n-    @Operation(description = \"Handle a release of a repository on GitHub. Will create a workflow/service and version when necessary.\", security = @SecurityRequirement(name = \"bearer\"), responses = @ApiResponse(responseCode = \"418\", description = \"This code tells AWS Lambda not to retry.\"))\n+    @Operation(description = \"Handle a release of a repository on GitHub. Will create a workflow/service and version when necessary.\", security = @SecurityRequirement(name = JWT_SECURITY_DEFINITION_NAME), responses = @ApiResponse(responseCode = \"418\", description = \"This code tells AWS Lambda not to retry.\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70ee93ddbdddccf48bc5d23823606aa861541608"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "319178e35f741aa4d9ec25214b01d7c27ad08b72", "author": {"user": {"login": "agduncan94", "name": "Andrew Duncan"}}, "url": "https://github.com/dockstore/dockstore/commit/319178e35f741aa4d9ec25214b01d7c27ad08b72", "committedDate": "2020-03-19T16:44:46Z", "message": "small pr changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NjI0MDA1", "url": "https://github.com/dockstore/dockstore/pull/3331#pullrequestreview-378624005", "createdAt": "2020-03-20T16:15:50Z", "commit": {"oid": "319178e35f741aa4d9ec25214b01d7c27ad08b72"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4Nzc3NjIw", "url": "https://github.com/dockstore/dockstore/pull/3331#pullrequestreview-378777620", "createdAt": "2020-03-20T20:02:00Z", "commit": {"oid": "319178e35f741aa4d9ec25214b01d7c27ad08b72"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODExNTAy", "url": "https://github.com/dockstore/dockstore/pull/3331#pullrequestreview-378811502", "createdAt": "2020-03-20T21:05:39Z", "commit": {"oid": "319178e35f741aa4d9ec25214b01d7c27ad08b72"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTowNTozOVrOF5jLJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMToxMTo1NVrOF5jUGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg4OTQ0NQ==", "bodyText": "I would have put this in a unit test in dockstore-webservice, e.g., in GitHelperTest.java, that way you can run test tests locally and more quickly.", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r395889445", "createdAt": "2020-03-20T21:05:39Z", "author": {"login": "coverbeck"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/WorkflowIT.java", "diffHunk": "@@ -1761,6 +1763,53 @@ public void testWorkflowVersionAliasesAreReturned() throws ApiException {\n \n     }\n \n+    @Test\n+    public void testGitReferenceParsing() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "319178e35f741aa4d9ec25214b01d7c27ad08b72"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5MDYxNw==", "bodyText": "I would have this return an Optional, and make the caller responsible for throwing an exception. Seems odd to have lambda exception being thrown from a method that parses a string.", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r395890617", "createdAt": "2020-03-20T21:08:46Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/GitHelper.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package io.dockstore.webservice.helpers;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import io.dockstore.webservice.CustomWebApplicationException;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static io.dockstore.webservice.Constants.LAMBDA_FAILURE;\n+\n+/**\n+ * A helper class for handling git related problems\n+ * @author aduncan\n+ */\n+public final class GitHelper {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(GitHelper.class);\n+\n+    private GitHelper() {\n+\n+    }\n+\n+    /**\n+     * Parse git references (ex. refs/heads/feature/foobar) and returns a reference name\n+     * @param gitReference Git Reference of the form refs/tags/name or refs/heads/name\n+     * @return Git reference name\n+     */\n+    public static String parseGitHubReference(String gitReference) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "319178e35f741aa4d9ec25214b01d7c27ad08b72"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5MTczNw==", "bodyText": "I don't think you want this any more", "url": "https://github.com/dockstore/dockstore/pull/3331#discussion_r395891737", "createdAt": "2020-03-20T21:11:55Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/WorkflowResource.java", "diffHunk": "@@ -1828,14 +1829,32 @@ public void deleteWorkflow(@ApiParam(hidden = true) @Parameter(hidden = true, na\n     @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n     @UnitOfWork\n     @RolesAllowed({ \"curator\", \"admin\" })\n-    @Operation(description = \"Handle a release of a repository on GitHub. Will create a workflow/service and version when necessary.\", security = @SecurityRequirement(name = \"bearer\"), responses = @ApiResponse(responseCode = \"418\", description = \"This code tells AWS Lambda not to retry.\"))\n+    @Operation(description = \"Handle a release of a repository on GitHub. Will create a workflow/service and version when necessary.\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME), responses = @ApiResponse(responseCode = \"418\", description = \"This code tells AWS Lambda not to retry.\"))\n     @ApiOperation(value = \"Handle a release of a repository on GitHub. Will create a workflow/service and version when necessary.\", authorizations = {\n         @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = Workflow.class, responseContainer = \"List\")\n     public List<Workflow> handleGitHubRelease(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\", in = ParameterIn.HEADER) @Auth User user,\n         @ApiParam(value = \"Repository path (ex. dockstore/dockstore-ui2)\", required = true) @FormParam(\"repository\") String repository,\n         @ApiParam(value = \"Username of user on GitHub who triggered action\", required = true) @FormParam(\"username\") String username,\n         @ApiParam(value = \"Full git reference for a GitHub branch/tag. Ex. refs/heads/master or refs/tags/v1.0\", required = true) @FormParam(\"gitReference\") String gitReference,\n         @ApiParam(value = \"GitHub installation ID\", required = true) @FormParam(\"installationId\") String installationId) {\n+        LOG.info(\"Branch/tag \" + gitReference + \" pushed to \" + repository + \"(\" + username + \")\");\n         return githubWebhookRelease(repository, username, gitReference, installationId);\n     }\n+\n+    @DELETE\n+    @Path(\"/github\")\n+    @Timed\n+    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "319178e35f741aa4d9ec25214b01d7c27ad08b72"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c0546273b187058f821a898eedd46d82ae7764d", "author": {"user": {"login": "agduncan94", "name": "Andrew Duncan"}}, "url": "https://github.com/dockstore/dockstore/commit/6c0546273b187058f821a898eedd46d82ae7764d", "committedDate": "2020-03-23T13:39:22Z", "message": "more fixes from PR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NjAzMzA1", "url": "https://github.com/dockstore/dockstore/pull/3331#pullrequestreview-379603305", "createdAt": "2020-03-23T16:31:22Z", "commit": {"oid": "6c0546273b187058f821a898eedd46d82ae7764d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NjIzMDUx", "url": "https://github.com/dockstore/dockstore/pull/3331#pullrequestreview-379623051", "createdAt": "2020-03-23T16:52:57Z", "commit": {"oid": "6c0546273b187058f821a898eedd46d82ae7764d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1834, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}