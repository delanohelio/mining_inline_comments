{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0ODg2NDAy", "number": 3725, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMDoyMTozM1rOEWZSXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo0ODozM1rOEXtkEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTE4NDMwOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQwMDoyMTozM1rOG9r7AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNzowMzo0NFrOG_BGpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzNTkzNw==", "bodyText": "Path should simply be /{organizationId}. The @DELETE already says what it is doing to the org. In REST, think of paths as resources, not actions. The resource is the organization, specified by the id.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r467335937", "createdAt": "2020-08-08T00:21:33Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,31 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}/deleteNonApprovedOrg\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODczMTU1OQ==", "bodyText": "Done. Changed the path to be simply /{organizationId}", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468731559", "createdAt": "2020-08-11T17:03:44Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,31 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}/deleteNonApprovedOrg\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzNTkzNw=="}, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDIzMjYwOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjo0ODo1OFrOG-W_RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMTozMDowN1rOG_J7Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0MTU0MA==", "bodyText": "Doesn't seem quite correct. I'd expect something like https://swagger.io/docs/specification/describing-responses/  Empty Response Body", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468041540", "createdAt": "2020-08-10T16:48:58Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4930,6 +4927,26 @@ paths:\n       summary: Add an entry to a collection.\n       tags:\n         - organizations\n+  /organizations/{organizationId}/deleteNonApprovedOrg:\n+    delete:\n+      description: Delete rejected organization\n+      operationId: deleteRejectedOrPendingOrganization\n+      parameters:\n+        - description: Organization ID.\n+          in: path\n+          name: organizationId\n+          required: true\n+          schema:\n+            format: int64\n+            type: integer\n+      responses:\n+        default:\n+          content:\n+            application/json: {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2ODM0NA==", "bodyText": "Still trying to figure it out... I suspected that the issue was the endpoint having a response of void.class, but that doesn't seem to be the case as the response body is still returning an empty object instead if it being just empty.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468768344", "createdAt": "2020-08-11T18:07:02Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4930,6 +4927,26 @@ paths:\n       summary: Add an entry to a collection.\n       tags:\n         - organizations\n+  /organizations/{organizationId}/deleteNonApprovedOrg:\n+    delete:\n+      description: Delete rejected organization\n+      operationId: deleteRejectedOrPendingOrganization\n+      parameters:\n+        - description: Organization ID.\n+          in: path\n+          name: organizationId\n+          required: true\n+          schema:\n+            format: int64\n+            type: integer\n+      responses:\n+        default:\n+          content:\n+            application/json: {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0MTU0MA=="}, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc5MjQ2Nw==", "bodyText": "You're looking for the openapi equivalent of:\nswagger-api/swagger-core#2446", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468792467", "createdAt": "2020-08-11T18:46:46Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4930,6 +4927,26 @@ paths:\n       summary: Add an entry to a collection.\n       tags:\n         - organizations\n+  /organizations/{organizationId}/deleteNonApprovedOrg:\n+    delete:\n+      description: Delete rejected organization\n+      operationId: deleteRejectedOrPendingOrganization\n+      parameters:\n+        - description: Organization ID.\n+          in: path\n+          name: organizationId\n+          required: true\n+          schema:\n+            format: int64\n+            type: integer\n+      responses:\n+        default:\n+          content:\n+            application/json: {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0MTU0MA=="}, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NjA0Nw==", "bodyText": "Issue has been addressed.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468876047", "createdAt": "2020-08-11T21:30:07Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4930,6 +4927,26 @@ paths:\n       summary: Add an entry to a collection.\n       tags:\n         - organizations\n+  /organizations/{organizationId}/deleteNonApprovedOrg:\n+    delete:\n+      description: Delete rejected organization\n+      operationId: deleteRejectedOrPendingOrganization\n+      parameters:\n+        - description: Organization ID.\n+          in: path\n+          name: organizationId\n+          required: true\n+          schema:\n+            format: int64\n+            type: integer\n+      responses:\n+        default:\n+          content:\n+            application/json: {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0MTU0MA=="}, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDI0NzQ1OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EventDAO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjo1Mjo1OVrOG-XIXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNjo1ODoyNlrOG_A6Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0Mzg2OA==", "bodyText": "Why do you have two flushes here?\nWhy do have them at all? Is it because you need it to execute before the deleting of the org?\nIf you need either or both, can you please add a code comment explaining why.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468043868", "createdAt": "2020-08-10T16:52:59Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EventDAO.java", "diffHunk": "@@ -91,6 +91,14 @@ public void deleteEventByEntryID(long entryId) {\n         currentSession().flush();\n     }\n \n+    public void deleteEventByOrganizationID(long organizationId) {\n+        currentSession().flush();\n+        Query<Event> query = this.currentSession().getNamedQuery(\"io.dockstore.webservice.core.Event.deleteByOrganizationId\");\n+        query.setParameter(\"organizationId\", organizationId);\n+        query.executeUpdate();\n+        currentSession().flush();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcyODM0Nw==", "bodyText": "Removed the first flush() as it was not necessary and added a comment for the second flush()", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468728347", "createdAt": "2020-08-11T16:58:26Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EventDAO.java", "diffHunk": "@@ -91,6 +91,14 @@ public void deleteEventByEntryID(long entryId) {\n         currentSession().flush();\n     }\n \n+    public void deleteEventByOrganizationID(long organizationId) {\n+        currentSession().flush();\n+        Query<Event> query = this.currentSession().getNamedQuery(\"io.dockstore.webservice.core.Event.deleteByOrganizationId\");\n+        query.setParameter(\"organizationId\", organizationId);\n+        query.executeUpdate();\n+        currentSession().flush();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0Mzg2OA=="}, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDI0ODc4OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EventDAO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjo1MzoyNlrOG-XJRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNzowMToxOVrOG_BBCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0NDEwMg==", "bodyText": "There is a namedQuery method you should be able to use.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468044102", "createdAt": "2020-08-10T16:53:26Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EventDAO.java", "diffHunk": "@@ -91,6 +91,14 @@ public void deleteEventByEntryID(long entryId) {\n         currentSession().flush();\n     }\n \n+    public void deleteEventByOrganizationID(long organizationId) {\n+        currentSession().flush();\n+        Query<Event> query = this.currentSession().getNamedQuery(\"io.dockstore.webservice.core.Event.deleteByOrganizationId\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODczMDEyMg==", "bodyText": "Changed the this.currentSession().getNamedQuery() to nameQuery()", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468730122", "createdAt": "2020-08-11T17:01:19Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EventDAO.java", "diffHunk": "@@ -91,6 +91,14 @@ public void deleteEventByEntryID(long entryId) {\n         currentSession().flush();\n     }\n \n+    public void deleteEventByOrganizationID(long organizationId) {\n+        currentSession().flush();\n+        Query<Event> query = this.currentSession().getNamedQuery(\"io.dockstore.webservice.core.Event.deleteByOrganizationId\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0NDEwMg=="}, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDI4NzQyOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzowMzo0NFrOG-Xg5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNzowMDowN1rOG_A-ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDE1MA==", "bodyText": "You are checking that it is not approved, not that it is rejected. We had some discussion about whether to also support allowing the deletion of pending organizations; if your intent is to support, which I guess it, based on the method name, then:\n\nYour error message and the annotations on line 417 and 418 should reflect both deleted and rejected.\nIt would be better to explicitly check for the states we allow deletion for rather than the states we don't allow deletion for. IOW, check for the org being rejected or pending, instead of checking that is approved. This may sound silly, since they are today logically equivalent, but maybe someday we'll add a new state, I don't know, like SUSPENDED, which we wouldn't want to be deletable. This code as is would by default allow deletion of any new states.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468050150", "createdAt": "2020-08-10T17:03:44Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,31 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}/deleteNonApprovedOrg\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Deletes an organization that has been rejected\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = void.class, hidden = true)\n+    @Operation(operationId = \"deleteRejectedOrPendingOrganization\", summary = \"Delete rejected organization\", description = \"Delete rejected organization\")\n+    public void deleteRejectedOrPendingOrganization(\n+            @ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\") @Auth Optional<User> user,\n+            @Parameter(description = \"Organization ID.\", name = \"organizationId\", in = ParameterIn.PATH, required = true) @PathParam(\"organizationId\") Long organizationId) {\n+        Organization organization = organizationDAO.findById(organizationId);\n+\n+        if (organization.getStatus() == Organization.ApplicationState.APPROVED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcyOTQ0NQ==", "bodyText": "Reworked the messages and descriptions to better reflect on the intentions of the endpoint. Also changed the logic to only delete if the state is at PENDING or REJECTED instead of not ACCEPTED.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468729445", "createdAt": "2020-08-11T17:00:07Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,31 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}/deleteNonApprovedOrg\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Deletes an organization that has been rejected\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = void.class, hidden = true)\n+    @Operation(operationId = \"deleteRejectedOrPendingOrganization\", summary = \"Delete rejected organization\", description = \"Delete rejected organization\")\n+    public void deleteRejectedOrPendingOrganization(\n+            @ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\") @Auth Optional<User> user,\n+            @Parameter(description = \"Organization ID.\", name = \"organizationId\", in = ParameterIn.PATH, required = true) @PathParam(\"organizationId\") Long organizationId) {\n+        Organization organization = organizationDAO.findById(organizationId);\n+\n+        if (organization.getStatus() == Organization.ApplicationState.APPROVED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDE1MA=="}, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDI4OTEzOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzowNDoxN1rOG-Xh9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNzowMTozN1rOG_BCDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDQyMw==", "bodyText": "User must be required", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468050423", "createdAt": "2020-08-10T17:04:17Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,31 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}/deleteNonApprovedOrg\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Deletes an organization that has been rejected\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = void.class, hidden = true)\n+    @Operation(operationId = \"deleteRejectedOrPendingOrganization\", summary = \"Delete rejected organization\", description = \"Delete rejected organization\")\n+    public void deleteRejectedOrPendingOrganization(\n+            @ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\") @Auth Optional<User> user,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODczMDM4MQ==", "bodyText": "Done. User is now required.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468730381", "createdAt": "2020-08-11T17:01:37Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,31 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}/deleteNonApprovedOrg\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Deletes an organization that has been rejected\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = void.class, hidden = true)\n+    @Operation(operationId = \"deleteRejectedOrPendingOrganization\", summary = \"Delete rejected organization\", description = \"Delete rejected organization\")\n+    public void deleteRejectedOrPendingOrganization(\n+            @ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\") @Auth Optional<User> user,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDQyMw=="}, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDI5Mjg5OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzowNToyMVrOG-XkQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNzowMzoyM1rOG_BF0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MTAwOA==", "bodyText": "You need to check if user owns the org and/or is an admin or curator. Otherwise any user could delete any org. In fixing this, please add a test that ensures a user cannot delete an org they don't have permissions to.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468051008", "createdAt": "2020-08-10T17:05:21Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,31 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}/deleteNonApprovedOrg\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Deletes an organization that has been rejected\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = void.class, hidden = true)\n+    @Operation(operationId = \"deleteRejectedOrPendingOrganization\", summary = \"Delete rejected organization\", description = \"Delete rejected organization\")\n+    public void deleteRejectedOrPendingOrganization(\n+            @ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\") @Auth Optional<User> user,\n+            @Parameter(description = \"Organization ID.\", name = \"organizationId\", in = ParameterIn.PATH, required = true) @PathParam(\"organizationId\") Long organizationId) {\n+        Organization organization = organizationDAO.findById(organizationId);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODczMTM0Nw==", "bodyText": "Reworked on the endpoint so that it now features additional privileges for admin/curator; they can now delete any organizations that is rejected/pending. Normal users can only delete their organizations if and only if they are MAINTAINERS of that organization. Other normal users cannot delete other organizations that they are not a part of.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468731347", "createdAt": "2020-08-11T17:03:23Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,31 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}/deleteNonApprovedOrg\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Deletes an organization that has been rejected\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = void.class, hidden = true)\n+    @Operation(operationId = \"deleteRejectedOrPendingOrganization\", summary = \"Delete rejected organization\", description = \"Delete rejected organization\")\n+    public void deleteRejectedOrPendingOrganization(\n+            @ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\") @Auth Optional<User> user,\n+            @Parameter(description = \"Organization ID.\", name = \"organizationId\", in = ParameterIn.PATH, required = true) @PathParam(\"organizationId\") Long organizationId) {\n+        Organization organization = organizationDAO.findById(organizationId);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MTAwOA=="}, "originalCommit": {"oid": "5904406f6c2e5af519ff1314145deb6aabcdc6bc"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyODkyNDMyOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EventDAO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODowODoxNlrOG_DY3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo0NDozM1rOG_GrcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2ODk4OA==", "bodyText": "I think these two lines are redundant.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468768988", "createdAt": "2020-08-11T18:08:16Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EventDAO.java", "diffHunk": "@@ -91,6 +91,17 @@ public void deleteEventByEntryID(long entryId) {\n         currentSession().flush();\n     }\n \n+    public void deleteEventByOrganizationID(long organizationId) {\n+        Query query = namedQuery(\"io.dockstore.webservice.core.Event.deleteByOrganizationId\");\n+        query.setParameter(\"organizationId\", organizationId);\n+        query.executeUpdate();\n+        // Flush after executing the DELETE query. This would force Hibernate to synchronize the state of the\n+        // current session with the database so the session can see that an organization has been deleted\n+        // NOTE: Flushing does not commit the changes; manually accessing the DB will result with no changes to the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc56e081f6d3fcc14b928bd0113a16abb29c13a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyMjg5Nw==", "bodyText": "Removed the second 'Note' line", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468822897", "createdAt": "2020-08-11T19:44:33Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EventDAO.java", "diffHunk": "@@ -91,6 +91,17 @@ public void deleteEventByEntryID(long entryId) {\n         currentSession().flush();\n     }\n \n+    public void deleteEventByOrganizationID(long organizationId) {\n+        Query query = namedQuery(\"io.dockstore.webservice.core.Event.deleteByOrganizationId\");\n+        query.setParameter(\"organizationId\", organizationId);\n+        query.executeUpdate();\n+        // Flush after executing the DELETE query. This would force Hibernate to synchronize the state of the\n+        // current session with the database so the session can see that an organization has been deleted\n+        // NOTE: Flushing does not commit the changes; manually accessing the DB will result with no changes to the", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2ODk4OA=="}, "originalCommit": {"oid": "2fc56e081f6d3fcc14b928bd0113a16abb29c13a"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyODkyNjI4OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EventDAO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODowODo1M1rOG_DaIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo0NTozNVrOG_Gteg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2OTMxMw==", "bodyText": "You're deleting events here, not an organization.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468769313", "createdAt": "2020-08-11T18:08:53Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EventDAO.java", "diffHunk": "@@ -91,6 +91,17 @@ public void deleteEventByEntryID(long entryId) {\n         currentSession().flush();\n     }\n \n+    public void deleteEventByOrganizationID(long organizationId) {\n+        Query query = namedQuery(\"io.dockstore.webservice.core.Event.deleteByOrganizationId\");\n+        query.setParameter(\"organizationId\", organizationId);\n+        query.executeUpdate();\n+        // Flush after executing the DELETE query. This would force Hibernate to synchronize the state of the\n+        // current session with the database so the session can see that an organization has been deleted", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc56e081f6d3fcc14b928bd0113a16abb29c13a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyMzQxOA==", "bodyText": "Whoops, was thinking about organizations while writing that comment down. Corrected the keyword to events.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468823418", "createdAt": "2020-08-11T19:45:35Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EventDAO.java", "diffHunk": "@@ -91,6 +91,17 @@ public void deleteEventByEntryID(long entryId) {\n         currentSession().flush();\n     }\n \n+    public void deleteEventByOrganizationID(long organizationId) {\n+        Query query = namedQuery(\"io.dockstore.webservice.core.Event.deleteByOrganizationId\");\n+        query.setParameter(\"organizationId\", organizationId);\n+        query.executeUpdate();\n+        // Flush after executing the DELETE query. This would force Hibernate to synchronize the state of the\n+        // current session with the database so the session can see that an organization has been deleted", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc2OTMxMw=="}, "originalCommit": {"oid": "2fc56e081f6d3fcc14b928bd0113a16abb29c13a"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyODkzODc0OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODoxMjoyN1rOG_Dh4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo0MTo1NVrOG_Gmew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc3MTI5Ng==", "bodyText": "Do you need this line? May be necessary because of the interaction with related entities, but it seems weird that you have to update it in order to delete it.\nNot 100% sure of this, but I like it better how for users you don't have to explicitly delete (clear) them here any more. For lines 433 and 434, could you accomplish via annotations instead, and just have lines 436 and 438 in this block?", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468771296", "createdAt": "2020-08-11T18:12:27Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,37 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Deletes an organization that is pending or rejected\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, hidden = true)\n+    @Operation(operationId = \"deleteRejectedOrPendingOrganization\", summary = \"Delete pending or rejected organization\", description = \"Delete pending or rejected organization\", security = @SecurityRequirement(name = \"bearer\"))\n+    public void deleteRejectedOrPendingOrganization(\n+            @Parameter(hidden = true, name = \"user\") @Auth User user,\n+            @Parameter(description = \"Organization ID.\", name = \"organizationId\", in = ParameterIn.PATH, required = true) @PathParam(\"organizationId\") Long organizationId) {\n+        Organization organization = organizationDAO.findById(organizationId);\n+        OrganizationUser orgUser = getUserOrgRole(organization, user.getId());\n+\n+        // If the user does not belong to the organization or if the user is not a maintainer of the organization\n+        // and if the user is neither an admin nor curator, then throw an error\n+        if ((orgUser == null || orgUser.getRole() != OrganizationUser.Role.MAINTAINER) && (!user.isCurator() && !user.getIsAdmin())) {\n+            throw new CustomWebApplicationException(\"You do not have access to delete this organization\", HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        // If the organization to be deleted is pending or has been rejected, then delete the organization\n+        if (organization.getStatus() == Organization.ApplicationState.PENDING || organization.getStatus() == Organization.ApplicationState.REJECTED) {\n+            organization.getStarredUsers().clear();\n+            organization.getAliases().clear();\n+\n+            eventDAO.deleteEventByOrganizationID(organizationId);\n+            organizationDAO.update(organization);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc56e081f6d3fcc14b928bd0113a16abb29c13a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyMTYyNw==", "bodyText": "Turns out that update() is not necessary as the session has the \"up-to-date\" database changes due to flush() from eventDAO.deleteEventByOrganization. As for lines 433 and 434, I have just removed them as it is not possible to create an alias or star an organization that has not been approved.\nI had added some new tests to ensure that the rows using the FKEYS would be deleted in organization_alias, and it turns out that the API call to get the organizationByAlias checks if the organization has been approved first. Assuming the same for starred_organizations since the feature to star will not appear until the organization has been approved. However, admins/curators can bypass the restrictions and star or add an alias to an unapproved organization through swagger (not sure if this is intended)", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468821627", "createdAt": "2020-08-11T19:41:55Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,37 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Deletes an organization that is pending or rejected\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, hidden = true)\n+    @Operation(operationId = \"deleteRejectedOrPendingOrganization\", summary = \"Delete pending or rejected organization\", description = \"Delete pending or rejected organization\", security = @SecurityRequirement(name = \"bearer\"))\n+    public void deleteRejectedOrPendingOrganization(\n+            @Parameter(hidden = true, name = \"user\") @Auth User user,\n+            @Parameter(description = \"Organization ID.\", name = \"organizationId\", in = ParameterIn.PATH, required = true) @PathParam(\"organizationId\") Long organizationId) {\n+        Organization organization = organizationDAO.findById(organizationId);\n+        OrganizationUser orgUser = getUserOrgRole(organization, user.getId());\n+\n+        // If the user does not belong to the organization or if the user is not a maintainer of the organization\n+        // and if the user is neither an admin nor curator, then throw an error\n+        if ((orgUser == null || orgUser.getRole() != OrganizationUser.Role.MAINTAINER) && (!user.isCurator() && !user.getIsAdmin())) {\n+            throw new CustomWebApplicationException(\"You do not have access to delete this organization\", HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        // If the organization to be deleted is pending or has been rejected, then delete the organization\n+        if (organization.getStatus() == Organization.ApplicationState.PENDING || organization.getStatus() == Organization.ApplicationState.REJECTED) {\n+            organization.getStarredUsers().clear();\n+            organization.getAliases().clear();\n+\n+            eventDAO.deleteEventByOrganizationID(organizationId);\n+            organizationDAO.update(organization);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc3MTI5Ng=="}, "originalCommit": {"oid": "2fc56e081f6d3fcc14b928bd0113a16abb29c13a"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyODk1MTUwOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODoxNTo0OFrOG_Dpsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo0MjozMlrOG_Gndw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc3MzI5OA==", "bodyText": "You have a double negative, and it's generally easier to understand positive statements, so I suggest \"You can only delete pending or rejected organizations\".", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468773298", "createdAt": "2020-08-11T18:15:48Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,37 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Deletes an organization that is pending or rejected\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, hidden = true)\n+    @Operation(operationId = \"deleteRejectedOrPendingOrganization\", summary = \"Delete pending or rejected organization\", description = \"Delete pending or rejected organization\", security = @SecurityRequirement(name = \"bearer\"))\n+    public void deleteRejectedOrPendingOrganization(\n+            @Parameter(hidden = true, name = \"user\") @Auth User user,\n+            @Parameter(description = \"Organization ID.\", name = \"organizationId\", in = ParameterIn.PATH, required = true) @PathParam(\"organizationId\") Long organizationId) {\n+        Organization organization = organizationDAO.findById(organizationId);\n+        OrganizationUser orgUser = getUserOrgRole(organization, user.getId());\n+\n+        // If the user does not belong to the organization or if the user is not a maintainer of the organization\n+        // and if the user is neither an admin nor curator, then throw an error\n+        if ((orgUser == null || orgUser.getRole() != OrganizationUser.Role.MAINTAINER) && (!user.isCurator() && !user.getIsAdmin())) {\n+            throw new CustomWebApplicationException(\"You do not have access to delete this organization\", HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        // If the organization to be deleted is pending or has been rejected, then delete the organization\n+        if (organization.getStatus() == Organization.ApplicationState.PENDING || organization.getStatus() == Organization.ApplicationState.REJECTED) {\n+            organization.getStarredUsers().clear();\n+            organization.getAliases().clear();\n+\n+            eventDAO.deleteEventByOrganizationID(organizationId);\n+            organizationDAO.update(organization);\n+            organizationDAO.delete(organization);\n+        } else { // else if the organization is not pending nor rejected, then throw an error\n+            throw new CustomWebApplicationException(\"You cannot delete an organization that is not currently pending or rejected\", HttpStatus.SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc56e081f6d3fcc14b928bd0113a16abb29c13a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyMTg3OQ==", "bodyText": "Reworded the exception message to be more straightforward.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468821879", "createdAt": "2020-08-11T19:42:32Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,37 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Deletes an organization that is pending or rejected\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, hidden = true)\n+    @Operation(operationId = \"deleteRejectedOrPendingOrganization\", summary = \"Delete pending or rejected organization\", description = \"Delete pending or rejected organization\", security = @SecurityRequirement(name = \"bearer\"))\n+    public void deleteRejectedOrPendingOrganization(\n+            @Parameter(hidden = true, name = \"user\") @Auth User user,\n+            @Parameter(description = \"Organization ID.\", name = \"organizationId\", in = ParameterIn.PATH, required = true) @PathParam(\"organizationId\") Long organizationId) {\n+        Organization organization = organizationDAO.findById(organizationId);\n+        OrganizationUser orgUser = getUserOrgRole(organization, user.getId());\n+\n+        // If the user does not belong to the organization or if the user is not a maintainer of the organization\n+        // and if the user is neither an admin nor curator, then throw an error\n+        if ((orgUser == null || orgUser.getRole() != OrganizationUser.Role.MAINTAINER) && (!user.isCurator() && !user.getIsAdmin())) {\n+            throw new CustomWebApplicationException(\"You do not have access to delete this organization\", HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        // If the organization to be deleted is pending or has been rejected, then delete the organization\n+        if (organization.getStatus() == Organization.ApplicationState.PENDING || organization.getStatus() == Organization.ApplicationState.REJECTED) {\n+            organization.getStarredUsers().clear();\n+            organization.getAliases().clear();\n+\n+            eventDAO.deleteEventByOrganizationID(organizationId);\n+            organizationDAO.update(organization);\n+            organizationDAO.delete(organization);\n+        } else { // else if the organization is not pending nor rejected, then throw an error\n+            throw new CustomWebApplicationException(\"You cannot delete an organization that is not currently pending or rejected\", HttpStatus.SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc3MzI5OA=="}, "originalCommit": {"oid": "2fc56e081f6d3fcc14b928bd0113a16abb29c13a"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTA4ODIzOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODo1MTowNVrOG_E-Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTo0NDoxN1rOG_Gq9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc5NDk4Mg==", "bodyText": "I think this annotation may be confusing (people may be under the impression that adding/removing anything here will have some effect.  Just make it @ApiOperation(value = \"hidden\", hidden = true)", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468794982", "createdAt": "2020-08-11T18:51:05Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,37 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Deletes an organization that is pending or rejected\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, hidden = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc56e081f6d3fcc14b928bd0113a16abb29c13a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgyMjc3NQ==", "bodyText": "Removed the authorization of @ApiOperation and simplified it to just display hidden for its value", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468822775", "createdAt": "2020-08-11T19:44:17Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +410,37 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"Deletes an organization that is pending or rejected\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, hidden = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc5NDk4Mg=="}, "originalCommit": {"oid": "2fc56e081f6d3fcc14b928bd0113a16abb29c13a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTYwMzk3OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMTozMDo1OFrOG_J8nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMTozNToxM1rOG_KEKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NjQ0NQ==", "bodyText": "200 is OK,\n204 is No Content", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468876445", "createdAt": "2020-08-11T21:30:58Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4550,6 +4547,29 @@ paths:\n       tags:\n         - organizations\n   /organizations/{organizationId}:\n+    delete:\n+      description: Delete pending or rejected organization\n+      operationId: deleteRejectedOrPendingOrganization\n+      parameters:\n+        - description: Organization ID.\n+          in: path\n+          name: organizationId\n+          required: true\n+          schema:\n+            format: int64\n+            type: integer\n+      responses:\n+        \"204\":\n+          description: OK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3a721de4cf671041916cbb896721c4bb3c6230a"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3ODM3OA==", "bodyText": "Fixed. Thought 204 also outputted OK but with no content.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r468878378", "createdAt": "2020-08-11T21:35:13Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -4550,6 +4547,29 @@ paths:\n       tags:\n         - organizations\n   /organizations/{organizationId}:\n+    delete:\n+      description: Delete pending or rejected organization\n+      operationId: deleteRejectedOrPendingOrganization\n+      parameters:\n+        - description: Organization ID.\n+          in: path\n+          name: organizationId\n+          required: true\n+          schema:\n+            format: int64\n+            type: integer\n+      responses:\n+        \"204\":\n+          description: OK", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3NjQ0NQ=="}, "originalCommit": {"oid": "f3a721de4cf671041916cbb896721c4bb3c6230a"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjk5MjE5OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjo0ODozM1rOG_p4NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMjoxMzo1MlrOG_0qZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM5OTYwNA==", "bodyText": "Should be \"have been rejected\" -- the subject is plural -- \"organizations\".", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r469399604", "createdAt": "2020-08-12T16:48:33Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +412,38 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"hidden\", hidden = true)\n+    @Operation(operationId = \"deleteRejectedOrPendingOrganization\", summary = \"Delete pending or rejected organization\", description = \"Delete pending or rejected organization\", security = @SecurityRequirement(name = \"bearer\"))\n+    @ApiResponses(value = {\n+            @ApiResponse(responseCode = \"204\", description = \"NO CONTENT\"),\n+            @ApiResponse(responseCode = \"400\", description = \"BAD REQUEST\"),\n+            @ApiResponse(responseCode = \"403\", description = \"FORBIDDEN\")\n+    })\n+    public void deleteRejectedOrPendingOrganization(\n+            @Parameter(hidden = true, name = \"user\") @Auth User user,\n+            @Parameter(description = \"Organization ID.\", name = \"organizationId\", in = ParameterIn.PATH, required = true) @PathParam(\"organizationId\") Long organizationId) {\n+        Organization organization = organizationDAO.findById(organizationId);\n+        OrganizationUser orgUser = getUserOrgRole(organization, user.getId());\n+\n+        // If the user does not belong to the organization or if the user is not a maintainer of the organization\n+        // and if the user is neither an admin nor curator, then throw an error\n+        if ((orgUser == null || orgUser.getRole() != OrganizationUser.Role.MAINTAINER) && (!user.isCurator() && !user.getIsAdmin())) {\n+            throw new CustomWebApplicationException(\"You do not have access to delete this organization\", HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        // If the organization to be deleted is pending or has been rejected, then delete the organization\n+        if (organization.getStatus() == Organization.ApplicationState.PENDING || organization.getStatus() == Organization.ApplicationState.REJECTED) {\n+            eventDAO.deleteEventByOrganizationID(organizationId);\n+            organizationDAO.delete(organization);\n+        } else { // else if the organization is not pending nor rejected, then throw an error\n+            throw new CustomWebApplicationException(\"You can only delete organizations that are pending or has been rejected\", HttpStatus.SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3bbd7083e84bad20d4ae3cab0c21a10c920b13"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU3NjI5NQ==", "bodyText": "Done.", "url": "https://github.com/dockstore/dockstore/pull/3725#discussion_r469576295", "createdAt": "2020-08-12T22:13:52Z", "author": {"login": "ByteMap"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/OrganizationResource.java", "diffHunk": "@@ -409,6 +412,38 @@ private Organization getOrganizationByIdOptionalAuth(Optional<User> user, Long o\n         }\n     }\n \n+    @DELETE\n+    @Path(\"/{organizationId}\")\n+    @Timed\n+    @UnitOfWork\n+    @ApiOperation(value = \"hidden\", hidden = true)\n+    @Operation(operationId = \"deleteRejectedOrPendingOrganization\", summary = \"Delete pending or rejected organization\", description = \"Delete pending or rejected organization\", security = @SecurityRequirement(name = \"bearer\"))\n+    @ApiResponses(value = {\n+            @ApiResponse(responseCode = \"204\", description = \"NO CONTENT\"),\n+            @ApiResponse(responseCode = \"400\", description = \"BAD REQUEST\"),\n+            @ApiResponse(responseCode = \"403\", description = \"FORBIDDEN\")\n+    })\n+    public void deleteRejectedOrPendingOrganization(\n+            @Parameter(hidden = true, name = \"user\") @Auth User user,\n+            @Parameter(description = \"Organization ID.\", name = \"organizationId\", in = ParameterIn.PATH, required = true) @PathParam(\"organizationId\") Long organizationId) {\n+        Organization organization = organizationDAO.findById(organizationId);\n+        OrganizationUser orgUser = getUserOrgRole(organization, user.getId());\n+\n+        // If the user does not belong to the organization or if the user is not a maintainer of the organization\n+        // and if the user is neither an admin nor curator, then throw an error\n+        if ((orgUser == null || orgUser.getRole() != OrganizationUser.Role.MAINTAINER) && (!user.isCurator() && !user.getIsAdmin())) {\n+            throw new CustomWebApplicationException(\"You do not have access to delete this organization\", HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        // If the organization to be deleted is pending or has been rejected, then delete the organization\n+        if (organization.getStatus() == Organization.ApplicationState.PENDING || organization.getStatus() == Organization.ApplicationState.REJECTED) {\n+            eventDAO.deleteEventByOrganizationID(organizationId);\n+            organizationDAO.delete(organization);\n+        } else { // else if the organization is not pending nor rejected, then throw an error\n+            throw new CustomWebApplicationException(\"You can only delete organizations that are pending or has been rejected\", HttpStatus.SC_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM5OTYwNA=="}, "originalCommit": {"oid": "cf3bbd7083e84bad20d4ae3cab0c21a10c920b13"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2813, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}