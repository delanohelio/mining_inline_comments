{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4Mzk3NjI5", "number": 3376, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMTozODo0M1rODumg_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNDo1NDoxOFrODvZU5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMTkyMTI3OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMTozODo0M1rOGAqerg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNToxODoyNlrOGBc14g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0OTE2Ng==", "bodyText": "Included two possible solutions here. First is adding an ORCID column to the enduser table and storing it there. Second is storing it in a user profile.", "url": "https://github.com/dockstore/dockstore/pull/3376#discussion_r403349166", "createdAt": "2020-04-03T21:38:43Z", "author": {"login": "emlys"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "diffHunk": "@@ -658,15 +659,29 @@ public Token addOrcidToken(@ApiParam(hidden = true) @Parameter(hidden = true, na\n             accessToken = tokenResponse.getAccessToken();\n             refreshToken = tokenResponse.getRefreshToken();\n \n-            // ORCID API returns the user's ORCID username in the \"name\" property\n+            // ORCID API returns the username and orcid id along with the tokens\n+            // get them to store in the token and user tables\n             username = tokenResponse.get(\"name\").toString();\n+            orcid = tokenResponse.get(\"orcid\").toString();\n \n         } catch (IOException e) {\n             LOG.error(\"Retrieving accessToken was unsuccessful\" + e.getMessage());\n             throw new CustomWebApplicationException(e.getMessage(), HttpStatus.SC_BAD_REQUEST);\n         }\n \n         if (user != null) {\n+            // save the ORCID to the enduser table", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3f9296ca6e84cf4bda3d743fd5c282666bbd64d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE3NDMwNg==", "bodyText": "I like adding it to the user profile. Though currently your username is hardcoded.", "url": "https://github.com/dockstore/dockstore/pull/3376#discussion_r404174306", "createdAt": "2020-04-06T15:18:26Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "diffHunk": "@@ -658,15 +659,29 @@ public Token addOrcidToken(@ApiParam(hidden = true) @Parameter(hidden = true, na\n             accessToken = tokenResponse.getAccessToken();\n             refreshToken = tokenResponse.getRefreshToken();\n \n-            // ORCID API returns the user's ORCID username in the \"name\" property\n+            // ORCID API returns the username and orcid id along with the tokens\n+            // get them to store in the token and user tables\n             username = tokenResponse.get(\"name\").toString();\n+            orcid = tokenResponse.get(\"orcid\").toString();\n \n         } catch (IOException e) {\n             LOG.error(\"Retrieving accessToken was unsuccessful\" + e.getMessage());\n             throw new CustomWebApplicationException(e.getMessage(), HttpStatus.SC_BAD_REQUEST);\n         }\n \n         if (user != null) {\n+            // save the ORCID to the enduser table", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0OTE2Ng=="}, "originalCommit": {"oid": "c3f9296ca6e84cf4bda3d743fd5c282666bbd64d"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjI0NjE1OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMDozMzoxMVrOGAtWGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwMDozMzoxMVrOGAtWGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM5NjEyMg==", "bodyText": "Was like this, but log the exception", "url": "https://github.com/dockstore/dockstore/pull/3376#discussion_r403396122", "createdAt": "2020-04-04T00:33:11Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "diffHunk": "@@ -658,15 +659,29 @@ public Token addOrcidToken(@ApiParam(hidden = true) @Parameter(hidden = true, na\n             accessToken = tokenResponse.getAccessToken();\n             refreshToken = tokenResponse.getRefreshToken();\n \n-            // ORCID API returns the user's ORCID username in the \"name\" property\n+            // ORCID API returns the username and orcid id along with the tokens\n+            // get them to store in the token and user tables\n             username = tokenResponse.get(\"name\").toString();\n+            orcid = tokenResponse.get(\"orcid\").toString();\n \n         } catch (IOException e) {\n             LOG.error(\"Retrieving accessToken was unsuccessful\" + e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e5a079067e5e4cc4680945b9cdec25e2cdb2e16"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTI5MTQwOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/resources/migrations.1.9.0.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTowNDozM1rOGBp1zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTowNDozM1rOGBp1zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM4NzI3OQ==", "bodyText": "was better with a descriptive id (used when debugging migrations in a live instance)", "url": "https://github.com/dockstore/dockstore/pull/3376#discussion_r404387279", "createdAt": "2020-04-06T21:04:33Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/resources/migrations.1.9.0.xml", "diffHunk": "@@ -97,4 +97,10 @@\n             <column name=\"os\" type=\"varchar(255 BYTE)\"/>\n         </addColumn>\n     </changeSet>\n+\n+    <changeSet author=\"esoth (generated)\" id=\"1586206601202-8\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f2e975f50fab8e2001c0854986ad31e31a1bcb8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTMwMDY3OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/resources/migrations.1.9.0.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTowNzo0MFrOGBp70g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMTowNzo0MFrOGBp70g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM4ODgxOA==", "bodyText": "No real performance difference gain when using length-constrained column.\nUnlikely to be attack vector either\nSee tip https://www.postgresql.org/docs/9.3/datatype-character.html", "url": "https://github.com/dockstore/dockstore/pull/3376#discussion_r404388818", "createdAt": "2020-04-06T21:07:40Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/resources/migrations.1.9.0.xml", "diffHunk": "@@ -97,4 +97,10 @@\n             <column name=\"os\" type=\"varchar(255 BYTE)\"/>\n         </addColumn>\n     </changeSet>\n+\n+    <changeSet author=\"esoth (generated)\" id=\"1586206601202-8\">\n+        <addColumn tableName=\"enduser\">\n+            <column name=\"orcid\" type=\"varchar(255 BYTE)\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f2e975f50fab8e2001c0854986ad31e31a1bcb8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDI0NjE0OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNDo1NDoxOFrOGBy0Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNDo1NDoxOFrOGBy0Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUzNDMxMA==", "bodyText": "I think this should be null, not an empty string.", "url": "https://github.com/dockstore/dockstore/pull/3376#discussion_r404534310", "createdAt": "2020-04-07T04:54:18Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/TokenResource.java", "diffHunk": "@@ -237,6 +237,12 @@ public Response deleteToken(@ApiParam(hidden = true) @Auth User user,\n \n         tokenDAO.delete(token);\n \n+        // also erase the user's ORCID id if deleting an ORCID token\n+        if (token.getTokenSource() == TokenType.ORCID_ORG) {\n+            User byId = userDAO.findById(user.getId());\n+            byId.setOrcid(\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b071a2c1c53e5b383e797ea63210c53f521efb7"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2900, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}