{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMjIyMTYx", "number": 3631, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToyNzoxMVrOEKPvfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoyNzoyOVrOEK67UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTc5MTM1OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Tool.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToyNzoxMVrOGrLUAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToyNzoxMVrOGrLUAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNzI5OA==", "bodyText": "Should add TODO and super nitpick, why isn't this inside the javadoc section?", "url": "https://github.com/dockstore/dockstore/pull/3631#discussion_r447927298", "createdAt": "2020-06-30T19:27:11Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Tool.java", "diffHunk": "@@ -265,6 +265,7 @@ public String getPath() {\n         return registry + '/' + namespace + '/' + name;\n     }\n \n+    // Make into actual column, run some migration/script to fill all the rows, and update on refresh.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91f297c709e54b24e5cc1d12da4d3556607440f1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTc5Mzg2OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Version.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToyNzo0NVrOGrLVcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToyNzo0NVrOGrLVcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNzY2NQ==", "bodyText": "comment seems out of date on arrival?", "url": "https://github.com/dockstore/dockstore/pull/3631#discussion_r447927665", "createdAt": "2020-06-30T19:27:45Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Version.java", "diffHunk": "@@ -117,7 +122,9 @@\n     private ReferenceType referenceType = ReferenceType.UNSET;\n \n     // watch out for https://hibernate.atlassian.net/browse/HHH-3799 if this is set to EAGER\n-    @OneToMany(fetch = FetchType.EAGER, orphanRemoval = true, cascade = CascadeType.ALL)\n+    // Maybe can change to lazy once db column for descriptorType has been made", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91f297c709e54b24e5cc1d12da4d3556607440f1"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTgwMjQ4OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/database/VersionVerifiedPlatform.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTozMDoxM1rOGrLarg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTozMDoxM1rOGrLarg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyOTAwNg==", "bodyText": "Should document this at least on a class level", "url": "https://github.com/dockstore/dockstore/pull/3631#discussion_r447929006", "createdAt": "2020-06-30T19:30:13Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/database/VersionVerifiedPlatform.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package io.dockstore.webservice.core.database;\n+\n+public class VersionVerifiedPlatform {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91f297c709e54b24e5cc1d12da4d3556607440f1"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTgwNjg2OnYy", "diffSide": "LEFT", "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTozMTo0MVrOGrLdfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTozMTo0MVrOGrLdfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyOTcyNw==", "bodyText": "Curious if a yq update can prevent all the whitespace changes", "url": "https://github.com/dockstore/dockstore/pull/3631#discussion_r447929727", "createdAt": "2020-06-30T19:31:41Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -14,28 +14,34 @@ components:\n       type: object\n     BioWorkflow:\n       allOf:\n-        - $ref: '#/components/schemas/Workflow'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91f297c709e54b24e5cc1d12da4d3556607440f1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTgxMDQ1OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/resources/swagger.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTozMjo0OVrOGrLfuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTozMjo0OVrOGrLfuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkzMDI5Ng==", "bodyText": "Odd that this is showing up now", "url": "https://github.com/dockstore/dockstore/pull/3631#discussion_r447930296", "createdAt": "2020-06-30T19:32:49Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/resources/swagger.yaml", "diffHunk": "@@ -7203,6 +7229,20 @@ definitions:\n         format: \"date-time\"\n         position: 6\n         description: \"Timestamp at which the notification was last updated\"\n+  Optional:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91f297c709e54b24e5cc1d12da4d3556607440f1"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTgxMTkxOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/EntryResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTozMzoxNlrOGrLgoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOTozMzoxNlrOGrLgoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkzMDUyOA==", "bodyText": "TODO as well", "url": "https://github.com/dockstore/dockstore/pull/3631#discussion_r447930528", "createdAt": "2020-06-30T19:33:16Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/EntryResource.java", "diffHunk": "@@ -133,6 +137,19 @@ public Entry addAliases(@ApiParam(hidden = true) @Parameter(hidden = true, name\n         return this.toolDAO.findCollectionsByEntryId(entry.getId());\n     }\n \n+    // Write tests for this.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91f297c709e54b24e5cc1d12da4d3556607440f1"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTk2MTIwOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/database/VersionVerifiedPlatform.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxOToyNVrOGrM-gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoxOToyNVrOGrM-gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1NDU2MA==", "bodyText": "I don't think you need setters. These objects are created via the named query and are not modified after.\nIf I'm right, I would get rid of the setters and make the fields final. Also, the parameters in the constructor should probably be final too -- doesn't Codacy flag that one?\nIn general, immutability is good.", "url": "https://github.com/dockstore/dockstore/pull/3631#discussion_r447954560", "createdAt": "2020-06-30T20:19:25Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/database/VersionVerifiedPlatform.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.dockstore.webservice.core.database;\n+\n+/**\n+ * This class is a subset of fields from sourcefile and verificationinformation. States what platform (source) a version has been verified on\n+ * and who performed the verification (metadata).\n+ * @author natalieperez\n+ * @since 1.10.0\n+ */\n+public class VersionVerifiedPlatform {\n+\n+    private long versionId;\n+    private String metadata;\n+    private String source;\n+\n+    public VersionVerifiedPlatform(long versionId, String source, String metadata) {\n+        this.versionId = versionId;\n+        this.source = source;\n+        this.metadata = metadata;\n+    }\n+\n+    public long getVersionId() {\n+        return versionId;\n+    }\n+\n+    public void setVersionId(final long versionId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2513126bf720dbde1fc7ac073368f9a00e5cf4d0"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTk4ODA2OnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/EntryResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoyNzozN1rOGrNPSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMDoyNzozN1rOGrNPSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk1ODg1OQ==", "bodyText": "entryId should be a Long.\n\nAt a quick glance, it seems to be a Long in the other resource file I looked it.\nThere used to be a thing in older JDKs, that may not apply any more, but I still do it, where you shouldn't let Java do autoboxing (automatically convert primitive to object and vice-versa), and should instead do it explicitly -- your long gets \"autoboxed\" into a Long on the next line. So just make it a Long to start with.", "url": "https://github.com/dockstore/dockstore/pull/3631#discussion_r447958859", "createdAt": "2020-06-30T20:27:37Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/EntryResource.java", "diffHunk": "@@ -133,6 +137,19 @@ public Entry addAliases(@ApiParam(hidden = true) @Parameter(hidden = true, name\n         return this.toolDAO.findCollectionsByEntryId(entry.getId());\n     }\n \n+    // TODO: Write tests for this endpoint.\n+    @GET\n+    @Path(\"/{entryId}/verifiedPlatforms\")\n+    @UnitOfWork\n+    @Operation(operationId = \"getVerifiedPlatforms\", description = \"Get the verified platforms for each version\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    public List<VersionVerifiedPlatform> getVerifiedPlatforms(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\")@Auth Optional<User> user,\n+            @Parameter(name = \"entryId\", description = \"id of the entry\", required = true, in = ParameterIn.PATH) @PathParam(\"entryId\") long entryId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2513126bf720dbde1fc7ac073368f9a00e5cf4d0"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODcwODk0OnYy", "diffSide": "RIGHT", "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMzo1MDo1OFrOGsNz2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMzo1MDo1OFrOGsNz2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAxNjc5NQ==", "bodyText": "wdl => DescriptorLanguage.WDL.shortname()", "url": "https://github.com/dockstore/dockstore/pull/3631#discussion_r449016795", "createdAt": "2020-07-02T13:50:58Z", "author": {"login": "garyluu"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/GeneralIT.java", "diffHunk": "@@ -413,6 +416,41 @@ public void verifySourcefileChecksumsSaved(final List<Tag> tags) {\n         });\n     }\n \n+    @Test\n+    public void testGettingVerifiedVersions() {\n+        io.dockstore.openapi.client.ApiClient client = getOpenAPIWebClient(USER_2_USERNAME, testingPostgres);\n+        io.dockstore.openapi.client.api.WorkflowsApi workflowsOpenApi = new io.dockstore.openapi.client.api.WorkflowsApi(client);\n+        final ApiClient webClient = getWebClient(USER_2_USERNAME, testingPostgres);\n+        WorkflowsApi workflowApi = new WorkflowsApi(webClient);\n+        io.dockstore.openapi.client.api.EntriesApi entriesApi = new io.dockstore.openapi.client.api.EntriesApi(client);\n+\n+        Workflow workflow = workflowApi\n+                .manualRegister(\"github\", \"DockstoreTestUser2/hello-dockstore-workflow\", \"/Dockstore.wdl\", \"altname\", \"wdl\", \"/test.json\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "deba06de92b7cbcf0fb96672f54bc711dcf2b597"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODg2NjcyOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/resources/swagger.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoyNzoyOVrOGsPXbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoyNzoyOVrOGsPXbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA0MjI4NA==", "bodyText": "Just hide the swagger entirely (especially since it's missing stuff)", "url": "https://github.com/dockstore/dockstore/pull/3631#discussion_r449042284", "createdAt": "2020-07-02T14:27:29Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/swagger.yaml", "diffHunk": "@@ -2582,6 +2582,27 @@ paths:\n           description: \"successful operation\"\n       security:\n       - BEARER: []\n+  /entries/{entryId}/verifiedPlatforms:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "deba06de92b7cbcf0fb96672f54bc711dcf2b597"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2993, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}