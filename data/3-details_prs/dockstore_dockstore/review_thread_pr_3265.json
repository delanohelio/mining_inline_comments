{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5Nzk0ODg3", "number": 3265, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNzoyODo1OVrODjK4pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNzoyODo1OVrODjK4pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjA1MDkyOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNzoyODo1OVrOFu1EVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDowNjoxNVrOFu6Y2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY0ODI3OQ==", "bodyText": "Either way, but as a recent convert to the style, I would return an Optional.", "url": "https://github.com/dockstore/dockstore/pull/3265#discussion_r384648279", "createdAt": "2020-02-26T17:28:59Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java", "diffHunk": "@@ -355,27 +349,14 @@ private void updateTagsWithBuildInformation(String repository, List<Tag> tags, T\n     }\n \n     /**\n-     * Get the map of the given Quay tool\n-     * Todo: this should be implemented with the Quay API, but they currently don't have a return model for this call\n+     * Get the given Quay tool\n      *\n      * @param tool\n      * @return\n      */\n-    public Map<String, Object> getQuayInfo(final Tool tool) {\n-        final String repo = tool.getNamespace() + '/' + tool.getName();\n-        final String repoUrl = QUAY_URL + \"repository/\" + repo;\n-        final Optional<String> asStringBuilds = ResourceUtilities.asString(repoUrl, quayToken.getContent(), client);\n-\n-        if (asStringBuilds.isPresent()) {\n-            final String json = asStringBuilds.get();\n-\n-            Gson gson = new Gson();\n-            Map<String, Object> map = new HashMap<>();\n-            map = (Map<String, Object>)gson.fromJson(json, map.getClass());\n-            return map;\n-\n-        }\n-        return null;\n+    public QuayRepo getQuayInfo(final Tool tool) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6916a9d8ef4c67e2c953e7d7d7d8a8f55d22e09"}, "originalPosition": 231}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDczNTQ1MA==", "bodyText": "Yeah, was being lazy but you're probably right", "url": "https://github.com/dockstore/dockstore/pull/3265#discussion_r384735450", "createdAt": "2020-02-26T20:06:15Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/QuayImageRegistry.java", "diffHunk": "@@ -355,27 +349,14 @@ private void updateTagsWithBuildInformation(String repository, List<Tag> tags, T\n     }\n \n     /**\n-     * Get the map of the given Quay tool\n-     * Todo: this should be implemented with the Quay API, but they currently don't have a return model for this call\n+     * Get the given Quay tool\n      *\n      * @param tool\n      * @return\n      */\n-    public Map<String, Object> getQuayInfo(final Tool tool) {\n-        final String repo = tool.getNamespace() + '/' + tool.getName();\n-        final String repoUrl = QUAY_URL + \"repository/\" + repo;\n-        final Optional<String> asStringBuilds = ResourceUtilities.asString(repoUrl, quayToken.getContent(), client);\n-\n-        if (asStringBuilds.isPresent()) {\n-            final String json = asStringBuilds.get();\n-\n-            Gson gson = new Gson();\n-            Map<String, Object> map = new HashMap<>();\n-            map = (Map<String, Object>)gson.fromJson(json, map.getClass());\n-            return map;\n-\n-        }\n-        return null;\n+    public QuayRepo getQuayInfo(final Tool tool) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY0ODI3OQ=="}, "originalCommit": {"oid": "c6916a9d8ef4c67e2c953e7d7d7d8a8f55d22e09"}, "originalPosition": 231}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3005, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}