{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4Njc4NDkw", "number": 3533, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTozNjowMFrOEDEwuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTozNjowMFrOEDEwuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjU5MTkzOnYy", "diffSide": "RIGHT", "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTozNjowMFrOGf67rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMDoxNDoxNFrOGf8Eaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyNDU5MA==", "bodyText": "devil's advocate?\nWhat's the difference? Why not just always use dbcreatedate?", "url": "https://github.com/dockstore/dockstore/pull/3533#discussion_r436124590", "createdAt": "2020-06-05T19:36:00Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "diffHunk": "@@ -390,7 +390,7 @@ public T deleteHostedVersion(@ApiParam(hidden = true) @Auth User user,\n         // If the version that's about to be deleted is the default version, unset it\n         if (entry.getActualDefaultVersion().getName().equals(version)) {\n             Optional<U> max = entry.getWorkflowVersions().stream().filter(v -> !Objects.equals(v.getName(), version))\n-                    .max(Comparator.comparingLong(ver -> ver.getDate().getTime()));\n+                    .max(Comparator.comparingLong(ver -> ver.getDate() != null ? ver.getDate().getTime() : ver.getDbCreateDate().getTime()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3304f4b021ddb5ed6ddc53ef014477088670fb77"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyNjQ4OQ==", "bodyText": "last built comes from Quay.io, and is when the container was last built.", "url": "https://github.com/dockstore/dockstore/pull/3533#discussion_r436126489", "createdAt": "2020-06-05T19:40:33Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "diffHunk": "@@ -390,7 +390,7 @@ public T deleteHostedVersion(@ApiParam(hidden = true) @Auth User user,\n         // If the version that's about to be deleted is the default version, unset it\n         if (entry.getActualDefaultVersion().getName().equals(version)) {\n             Optional<U> max = entry.getWorkflowVersions().stream().filter(v -> !Objects.equals(v.getName(), version))\n-                    .max(Comparator.comparingLong(ver -> ver.getDate().getTime()));\n+                    .max(Comparator.comparingLong(ver -> ver.getDate() != null ? ver.getDate().getTime() : ver.getDbCreateDate().getTime()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyNDU5MA=="}, "originalCommit": {"oid": "3304f4b021ddb5ed6ddc53ef014477088670fb77"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEzMzcyNg==", "bodyText": "That might open more questions.\ni.e. a workflow author might intentionally author new versions of the workflow that point to older Docker images to avoid a regression bug.  There might also be multiple versions that point to the same image (same built) but have \"properly\" sorted db create dates. Is there any case in which sorting by the Docker image is superior?", "url": "https://github.com/dockstore/dockstore/pull/3533#discussion_r436133726", "createdAt": "2020-06-05T19:53:59Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "diffHunk": "@@ -390,7 +390,7 @@ public T deleteHostedVersion(@ApiParam(hidden = true) @Auth User user,\n         // If the version that's about to be deleted is the default version, unset it\n         if (entry.getActualDefaultVersion().getName().equals(version)) {\n             Optional<U> max = entry.getWorkflowVersions().stream().filter(v -> !Objects.equals(v.getName(), version))\n-                    .max(Comparator.comparingLong(ver -> ver.getDate().getTime()));\n+                    .max(Comparator.comparingLong(ver -> ver.getDate() != null ? ver.getDate().getTime() : ver.getDbCreateDate().getTime()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyNDU5MA=="}, "originalCommit": {"oid": "3304f4b021ddb5ed6ddc53ef014477088670fb77"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE0MDQ0Ng==", "bodyText": "Darn just realized this is abstract hosted, so for workflows too.", "url": "https://github.com/dockstore/dockstore/pull/3533#discussion_r436140446", "createdAt": "2020-06-05T20:07:10Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "diffHunk": "@@ -390,7 +390,7 @@ public T deleteHostedVersion(@ApiParam(hidden = true) @Auth User user,\n         // If the version that's about to be deleted is the default version, unset it\n         if (entry.getActualDefaultVersion().getName().equals(version)) {\n             Optional<U> max = entry.getWorkflowVersions().stream().filter(v -> !Objects.equals(v.getName(), version))\n-                    .max(Comparator.comparingLong(ver -> ver.getDate().getTime()));\n+                    .max(Comparator.comparingLong(ver -> ver.getDate() != null ? ver.getDate().getTime() : ver.getDbCreateDate().getTime()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyNDU5MA=="}, "originalCommit": {"oid": "3304f4b021ddb5ed6ddc53ef014477088670fb77"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE0MTEwNA==", "bodyText": "Both actually set lastModified, would that be a better fallback? @denis-yuen\nEdit: Nevermind, this is a entry level value.", "url": "https://github.com/dockstore/dockstore/pull/3533#discussion_r436141104", "createdAt": "2020-06-05T20:08:50Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "diffHunk": "@@ -390,7 +390,7 @@ public T deleteHostedVersion(@ApiParam(hidden = true) @Auth User user,\n         // If the version that's about to be deleted is the default version, unset it\n         if (entry.getActualDefaultVersion().getName().equals(version)) {\n             Optional<U> max = entry.getWorkflowVersions().stream().filter(v -> !Objects.equals(v.getName(), version))\n-                    .max(Comparator.comparingLong(ver -> ver.getDate().getTime()));\n+                    .max(Comparator.comparingLong(ver -> ver.getDate() != null ? ver.getDate().getTime() : ver.getDbCreateDate().getTime()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyNDU5MA=="}, "originalCommit": {"oid": "3304f4b021ddb5ed6ddc53ef014477088670fb77"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE0MzIxMQ==", "bodyText": "This code is just saying, if they delete a default version for a hosted entry, set the new default date to be the most recently created. So I actually think we can just always use dbCreateDate. Does that make sense?", "url": "https://github.com/dockstore/dockstore/pull/3533#discussion_r436143211", "createdAt": "2020-06-05T20:14:14Z", "author": {"login": "agduncan94"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/AbstractHostedEntryResource.java", "diffHunk": "@@ -390,7 +390,7 @@ public T deleteHostedVersion(@ApiParam(hidden = true) @Auth User user,\n         // If the version that's about to be deleted is the default version, unset it\n         if (entry.getActualDefaultVersion().getName().equals(version)) {\n             Optional<U> max = entry.getWorkflowVersions().stream().filter(v -> !Objects.equals(v.getName(), version))\n-                    .max(Comparator.comparingLong(ver -> ver.getDate().getTime()));\n+                    .max(Comparator.comparingLong(ver -> ver.getDate() != null ? ver.getDate().getTime() : ver.getDbCreateDate().getTime()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEyNDU5MA=="}, "originalCommit": {"oid": "3304f4b021ddb5ed6ddc53ef014477088670fb77"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2967, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}