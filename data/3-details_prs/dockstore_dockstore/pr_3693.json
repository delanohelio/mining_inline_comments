{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDk1MDQ3", "number": 3693, "title": "Feature/3574/update admin curator status", "bodyText": "Enable easy access to updating admin/curator status\n#3574\nCreated a new API call at a new endpoint for users with admin/curator\nstatus to update the privileges of other users\nIncluded PrivilegeRequest.java to the webservice api objects which\nencapsulates the request to set admin/curator privileges to a provided\nuser\nCreated a new method setIsCurator() in User.java to set the curator\nstatus of a user\nImplemented integration tests for setUserPrivilege()", "createdAt": "2020-07-24T21:18:49Z", "url": "https://github.com/dockstore/dockstore/pull/3693", "merged": true, "mergeCommit": {"oid": "bde477ee18e37efa474ff38c6c7e77fb0100b502"}, "closed": true, "closedAt": "2020-07-30T23:45:41Z", "author": {"login": "ByteMap"}, "timelineItems": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4K5B5gFqTQ1NTE5MzUyNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6GFJ4gH2gAyNDU2NDk1MDQ3OmY2NTczOWZkNjM5MmRlZjBlYjcwYWE0OTcwMGRmZjAxY2FjMDY2YmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTkzNTI3", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-455193527", "createdAt": "2020-07-24T21:24:20Z", "commit": {"oid": "06100d7decc5bba2dd8fe74bf7923e6cb3c064ae"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMToyNDoyMVrOG2-JvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMToyNDozMFrOG2-J7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI5NDU4OA==", "bodyText": "Think this will pass if no exception is thrown", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r460294588", "createdAt": "2020-07-24T21:24:21Z", "author": {"login": "denis-yuen"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "diffHunk": "@@ -513,4 +513,41 @@ public void testUpdateUserMetadataFromGithub() {\n         assertEquals(\"DockstoreTestUser2\", userProfile.getUsername());\n     }\n \n+    @Test\n+    public void testSetUserPrivilege() {\n+        ApiClient adminWebClient = getWebClient(ADMIN_USERNAME, testingPostgres);\n+        ApiClient userWebClient = getWebClient(USER_2_USERNAME, testingPostgres);\n+\n+        PrivilegeRequest privilegeRequest = new PrivilegeRequest();\n+        UsersApi adminApi = new UsersApi(adminWebClient);\n+        UsersApi userApi = new UsersApi(userWebClient);\n+        User admin = adminApi.getUser();\n+        User user = userApi.getUser();\n+\n+        privilegeRequest.setAdmin(false);\n+        adminApi.setUserPrivilege(user.getId(), privilegeRequest);\n+        assertFalse(userApi.getUser().isIsAdmin());\n+        assertFalse(userApi.getUser().isCurator());\n+\n+        privilegeRequest.setCurator(true);\n+        adminApi.setUserPrivilege(user.getId(), privilegeRequest);\n+        assertTrue(userApi.getUser().isCurator());\n+\n+        try {\n+            userApi.setUserPrivilege(admin.getId(), privilegeRequest);\n+        } catch (ApiException ex) {\n+            assertEquals(ex.getCode(), HttpStatus.SC_FORBIDDEN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06100d7decc5bba2dd8fe74bf7923e6cb3c064ae"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI5NDYzNw==", "bodyText": "Ditto", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r460294637", "createdAt": "2020-07-24T21:24:30Z", "author": {"login": "denis-yuen"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "diffHunk": "@@ -513,4 +513,41 @@ public void testUpdateUserMetadataFromGithub() {\n         assertEquals(\"DockstoreTestUser2\", userProfile.getUsername());\n     }\n \n+    @Test\n+    public void testSetUserPrivilege() {\n+        ApiClient adminWebClient = getWebClient(ADMIN_USERNAME, testingPostgres);\n+        ApiClient userWebClient = getWebClient(USER_2_USERNAME, testingPostgres);\n+\n+        PrivilegeRequest privilegeRequest = new PrivilegeRequest();\n+        UsersApi adminApi = new UsersApi(adminWebClient);\n+        UsersApi userApi = new UsersApi(userWebClient);\n+        User admin = adminApi.getUser();\n+        User user = userApi.getUser();\n+\n+        privilegeRequest.setAdmin(false);\n+        adminApi.setUserPrivilege(user.getId(), privilegeRequest);\n+        assertFalse(userApi.getUser().isIsAdmin());\n+        assertFalse(userApi.getUser().isCurator());\n+\n+        privilegeRequest.setCurator(true);\n+        adminApi.setUserPrivilege(user.getId(), privilegeRequest);\n+        assertTrue(userApi.getUser().isCurator());\n+\n+        try {\n+            userApi.setUserPrivilege(admin.getId(), privilegeRequest);\n+        } catch (ApiException ex) {\n+            assertEquals(ex.getCode(), HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        privilegeRequest.setAdmin(true);\n+        adminApi.setUserPrivilege(user.getId(), privilegeRequest);\n+        assertTrue(userApi.getUser().isIsAdmin());\n+\n+        privilegeRequest.setAdmin(false);\n+        try {\n+            adminApi.setUserPrivilege(admin.getId(), privilegeRequest);\n+        } catch (ApiException ex) {\n+            assertEquals(ex.getCode(), HttpStatus.SC_FORBIDDEN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06100d7decc5bba2dd8fe74bf7923e6cb3c064ae"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTk2MjQ4", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-455196248", "createdAt": "2020-07-24T21:30:57Z", "commit": {"oid": "06100d7decc5bba2dd8fe74bf7923e6cb3c064ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTozMDo1N1rOG2-SmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTozMDo1N1rOG2-SmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI5Njg1Nw==", "bodyText": "Not sure I'm reading correctly\nIt seems possible to simplify, is this something akin to :\nonly admins can create admins, curators and admins can create curators?", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r460296857", "createdAt": "2020-07-24T21:30:57Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -747,6 +748,33 @@ public User updateLoggedInUserMetadata(@ApiParam(hidden = true)@Parameter(hidden\n         return dbuser;\n     }\n \n+    @PUT\n+    @Timed\n+    @UnitOfWork\n+    @RolesAllowed({\"admin\", \"curator\"})\n+    @Path(\"/user/{userId}/privileges\")\n+    @Operation(operationId = \"addUserPrivileges\", description = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    @ApiOperation(value = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = User.class)\n+    public User setUserPrivilege(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\")@Auth User authUser,\n+                                 @ApiParam(value = \"User ID\", required = true) @PathParam(\"userId\") Long userID,\n+                                 @ApiParam(value = \"Set privilege for a user\", required = true) PrivilegeRequest privilegeRequest) {\n+        User user = userDAO.findById(userID);\n+        if (user == null) {\n+            throw new CustomWebApplicationException(\"User not found\", HttpStatus.SC_NOT_FOUND);\n+        }\n+\n+        if (privilegeRequest.isAdmin() != user.getIsAdmin() && !authUser.getIsAdmin()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06100d7decc5bba2dd8fe74bf7923e6cb3c064ae"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjExMDU1", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-455211055", "createdAt": "2020-07-24T22:10:57Z", "commit": {"oid": "06100d7decc5bba2dd8fe74bf7923e6cb3c064ae"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjoxMDo1N1rOG2_DKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjoyMDo1OFrOG2_OfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwOTI5MA==", "bodyText": "authUser == user is not correct; that verifies if they are the same objects, not if they are equal. You need to compare ids.", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r460309290", "createdAt": "2020-07-24T22:10:57Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -747,6 +748,33 @@ public User updateLoggedInUserMetadata(@ApiParam(hidden = true)@Parameter(hidden\n         return dbuser;\n     }\n \n+    @PUT\n+    @Timed\n+    @UnitOfWork\n+    @RolesAllowed({\"admin\", \"curator\"})\n+    @Path(\"/user/{userId}/privileges\")\n+    @Operation(operationId = \"addUserPrivileges\", description = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    @ApiOperation(value = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = User.class)\n+    public User setUserPrivilege(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\")@Auth User authUser,\n+                                 @ApiParam(value = \"User ID\", required = true) @PathParam(\"userId\") Long userID,\n+                                 @ApiParam(value = \"Set privilege for a user\", required = true) PrivilegeRequest privilegeRequest) {\n+        User user = userDAO.findById(userID);\n+        if (user == null) {\n+            throw new CustomWebApplicationException(\"User not found\", HttpStatus.SC_NOT_FOUND);\n+        }\n+\n+        if (privilegeRequest.isAdmin() != user.getIsAdmin() && !authUser.getIsAdmin()) {\n+            throw new CustomWebApplicationException(\"You do not have privileges to set/remove administrative rights\", HttpStatus.SC_FORBIDDEN);\n+        } else if (privilegeRequest.isAdmin() != user.getIsAdmin() && authUser == user) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06100d7decc5bba2dd8fe74bf7923e6cb3c064ae"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwOTk3Ng==", "bodyText": "Agreed, it is a little complex and a little hard to read.\nI suggest just not allowing a user to modify their own privileges, period. Add that as a test after line 764. Then  the logic is not buried in another else if.", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r460309976", "createdAt": "2020-07-24T22:13:15Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -747,6 +748,33 @@ public User updateLoggedInUserMetadata(@ApiParam(hidden = true)@Parameter(hidden\n         return dbuser;\n     }\n \n+    @PUT\n+    @Timed\n+    @UnitOfWork\n+    @RolesAllowed({\"admin\", \"curator\"})\n+    @Path(\"/user/{userId}/privileges\")\n+    @Operation(operationId = \"addUserPrivileges\", description = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    @ApiOperation(value = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = User.class)\n+    public User setUserPrivilege(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\")@Auth User authUser,\n+                                 @ApiParam(value = \"User ID\", required = true) @PathParam(\"userId\") Long userID,\n+                                 @ApiParam(value = \"Set privilege for a user\", required = true) PrivilegeRequest privilegeRequest) {\n+        User user = userDAO.findById(userID);\n+        if (user == null) {\n+            throw new CustomWebApplicationException(\"User not found\", HttpStatus.SC_NOT_FOUND);\n+        }\n+\n+        if (privilegeRequest.isAdmin() != user.getIsAdmin() && !authUser.getIsAdmin()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI5Njg1Nw=="}, "originalCommit": {"oid": "06100d7decc5bba2dd8fe74bf7923e6cb3c064ae"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMDc3OA==", "bodyText": "Instead of set/remove, I suggest modify", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r460310778", "createdAt": "2020-07-24T22:15:44Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -747,6 +748,33 @@ public User updateLoggedInUserMetadata(@ApiParam(hidden = true)@Parameter(hidden\n         return dbuser;\n     }\n \n+    @PUT\n+    @Timed\n+    @UnitOfWork\n+    @RolesAllowed({\"admin\", \"curator\"})\n+    @Path(\"/user/{userId}/privileges\")\n+    @Operation(operationId = \"addUserPrivileges\", description = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    @ApiOperation(value = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = User.class)\n+    public User setUserPrivilege(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\")@Auth User authUser,\n+                                 @ApiParam(value = \"User ID\", required = true) @PathParam(\"userId\") Long userID,\n+                                 @ApiParam(value = \"Set privilege for a user\", required = true) PrivilegeRequest privilegeRequest) {\n+        User user = userDAO.findById(userID);\n+        if (user == null) {\n+            throw new CustomWebApplicationException(\"User not found\", HttpStatus.SC_NOT_FOUND);\n+        }\n+\n+        if (privilegeRequest.isAdmin() != user.getIsAdmin() && !authUser.getIsAdmin()) {\n+            throw new CustomWebApplicationException(\"You do not have privileges to set/remove administrative rights\", HttpStatus.SC_FORBIDDEN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06100d7decc5bba2dd8fe74bf7923e6cb3c064ae"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxMjE4OQ==", "bodyText": "There already is a setCurator; you shouldn't add another setter.", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r460312189", "createdAt": "2020-07-24T22:20:58Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/User.java", "diffHunk": "@@ -327,6 +327,10 @@ public void setIsAdmin(boolean isAdmin) {\n         this.isAdmin = isAdmin;\n     }\n \n+    public void setIsCurator(boolean isCurator) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06100d7decc5bba2dd8fe74bf7923e6cb3c064ae"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e336480333ded0c737ccb1cf878ba0f39e9ed0bb", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/e336480333ded0c737ccb1cf878ba0f39e9ed0bb", "committedDate": "2020-07-27T18:07:05Z", "message": "Addressed Merge Conflicts"}, "afterCommit": {"oid": "37ea2eaa68c21a5c0a513fb28a708b7428af29ca", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/37ea2eaa68c21a5c0a513fb28a708b7428af29ca", "committedDate": "2020-07-27T19:04:18Z", "message": "Enable easy access to updating admin/curator status\n\ndockstore/dockstore#3574\n\nCreated a new API call at a new endpoint for users with admin/curator\nstatus to update the privileges of other users\n\nCreated a new method setIsCurator() in User.java to set the curator\nstatus of a user."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTM4NTI5", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-456138529", "createdAt": "2020-07-27T21:11:46Z", "commit": {"oid": "37ea2eaa68c21a5c0a513fb28a708b7428af29ca"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMToxMTo0NlrOG3zvwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMToxNToxMlrOG3z2hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3MjY3Mg==", "bodyText": "Should add a comment on both clauses, conditions are better but still not arguably simply readable", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r461172672", "createdAt": "2020-07-27T21:11:46Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -747,6 +748,35 @@ public User updateLoggedInUserMetadata(@ApiParam(hidden = true)@Parameter(hidden\n         return dbuser;\n     }\n \n+    @PUT\n+    @Timed\n+    @UnitOfWork\n+    @RolesAllowed({\"admin\", \"curator\"})\n+    @Path(\"/user/{userId}/privileges\")\n+    @Operation(operationId = \"addUserPrivileges\", description = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    @ApiOperation(value = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = User.class)\n+    public User setUserPrivilege(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\")@Auth User authUser,\n+                                 @ApiParam(value = \"User ID\", required = true) @PathParam(\"userId\") Long userID,\n+                                 @ApiParam(value = \"Set privilege for a user\", required = true) PrivilegeRequest privilegeRequest) {\n+        User user = userDAO.findById(userID);\n+        if (user == null) {\n+            throw new CustomWebApplicationException(\"User not found\", HttpStatus.SC_NOT_FOUND);\n+        }\n+\n+        if (authUser.getId() == user.getId()) {\n+            throw new CustomWebApplicationException(\"You cannot modify your own privileges\", HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        if (privilegeRequest.isAdmin() != user.getIsAdmin() && !authUser.getIsAdmin()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37ea2eaa68c21a5c0a513fb28a708b7428af29ca"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3NDQwNQ==", "bodyText": "I might be overlooking something, but is (privilegeRequest.isAdmin() != user.getIsAdmin() && !authUser.getIsAdmin())  simpler as (privilegeRequest.isAdmin()  && !authUser.getIsAdmin())", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r461174405", "createdAt": "2020-07-27T21:15:12Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -747,6 +748,35 @@ public User updateLoggedInUserMetadata(@ApiParam(hidden = true)@Parameter(hidden\n         return dbuser;\n     }\n \n+    @PUT\n+    @Timed\n+    @UnitOfWork\n+    @RolesAllowed({\"admin\", \"curator\"})\n+    @Path(\"/user/{userId}/privileges\")\n+    @Operation(operationId = \"addUserPrivileges\", description = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    @ApiOperation(value = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = User.class)\n+    public User setUserPrivilege(@ApiParam(hidden = true) @Parameter(hidden = true, name = \"user\")@Auth User authUser,\n+                                 @ApiParam(value = \"User ID\", required = true) @PathParam(\"userId\") Long userID,\n+                                 @ApiParam(value = \"Set privilege for a user\", required = true) PrivilegeRequest privilegeRequest) {\n+        User user = userDAO.findById(userID);\n+        if (user == null) {\n+            throw new CustomWebApplicationException(\"User not found\", HttpStatus.SC_NOT_FOUND);\n+        }\n+\n+        if (authUser.getId() == user.getId()) {\n+            throw new CustomWebApplicationException(\"You cannot modify your own privileges\", HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        if (privilegeRequest.isAdmin() != user.getIsAdmin() && !authUser.getIsAdmin()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3MjY3Mg=="}, "originalCommit": {"oid": "37ea2eaa68c21a5c0a513fb28a708b7428af29ca"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MDk0MDEw", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-456094010", "createdAt": "2020-07-27T20:02:48Z", "commit": {"oid": "37ea2eaa68c21a5c0a513fb28a708b7428af29ca"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDowMjo0OFrOG3xjHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMToxNDowMlrOG3z0Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEzNjY2OA==", "bodyText": "FYI, you could just save the result instead of making 2 api calls, but this is fine.", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r461136668", "createdAt": "2020-07-27T20:02:48Z", "author": {"login": "coverbeck"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "diffHunk": "@@ -513,4 +513,43 @@ public void testUpdateUserMetadataFromGithub() {\n         assertEquals(\"DockstoreTestUser2\", userProfile.getUsername());\n     }\n \n+    @Test\n+    public void testSetUserPrivilege() {\n+        ApiClient adminWebClient = getWebClient(ADMIN_USERNAME, testingPostgres);\n+        ApiClient userWebClient = getWebClient(USER_2_USERNAME, testingPostgres);\n+\n+        PrivilegeRequest privilegeRequest = new PrivilegeRequest();\n+        UsersApi adminApi = new UsersApi(adminWebClient);\n+        UsersApi userApi = new UsersApi(userWebClient);\n+        User admin = adminApi.getUser();\n+        User user = userApi.getUser();\n+\n+        privilegeRequest.setAdmin(false);\n+        adminApi.setUserPrivilege(user.getId(), privilegeRequest);\n+        assertFalse(userApi.getUser().isIsAdmin());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37ea2eaa68c21a5c0a513fb28a708b7428af29ca"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3MTM3Ng==", "bodyText": "Use fail instead of assertFalse.\nYour error message should better indicate the problem to somebody looking at the code for the first time, e.g, fail(\"Curator should not be able to create an admin\")", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r461171376", "createdAt": "2020-07-27T21:09:07Z", "author": {"login": "coverbeck"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "diffHunk": "@@ -513,4 +513,43 @@ public void testUpdateUserMetadataFromGithub() {\n         assertEquals(\"DockstoreTestUser2\", userProfile.getUsername());\n     }\n \n+    @Test\n+    public void testSetUserPrivilege() {\n+        ApiClient adminWebClient = getWebClient(ADMIN_USERNAME, testingPostgres);\n+        ApiClient userWebClient = getWebClient(USER_2_USERNAME, testingPostgres);\n+\n+        PrivilegeRequest privilegeRequest = new PrivilegeRequest();\n+        UsersApi adminApi = new UsersApi(adminWebClient);\n+        UsersApi userApi = new UsersApi(userWebClient);\n+        User admin = adminApi.getUser();\n+        User user = userApi.getUser();\n+\n+        privilegeRequest.setAdmin(false);\n+        adminApi.setUserPrivilege(user.getId(), privilegeRequest);\n+        assertFalse(userApi.getUser().isIsAdmin());\n+        assertFalse(userApi.getUser().isCurator());\n+\n+        privilegeRequest.setCurator(true);\n+        adminApi.setUserPrivilege(user.getId(), privilegeRequest);\n+        assertTrue(userApi.getUser().isCurator());\n+\n+        try {\n+            userApi.setUserPrivilege(admin.getId(), privilegeRequest);\n+            assertFalse(\"Should have triggered an exception\", false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37ea2eaa68c21a5c0a513fb28a708b7428af29ca"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3MTU5Mg==", "bodyText": "Same as other comment", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r461171592", "createdAt": "2020-07-27T21:09:31Z", "author": {"login": "coverbeck"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "diffHunk": "@@ -513,4 +513,43 @@ public void testUpdateUserMetadataFromGithub() {\n         assertEquals(\"DockstoreTestUser2\", userProfile.getUsername());\n     }\n \n+    @Test\n+    public void testSetUserPrivilege() {\n+        ApiClient adminWebClient = getWebClient(ADMIN_USERNAME, testingPostgres);\n+        ApiClient userWebClient = getWebClient(USER_2_USERNAME, testingPostgres);\n+\n+        PrivilegeRequest privilegeRequest = new PrivilegeRequest();\n+        UsersApi adminApi = new UsersApi(adminWebClient);\n+        UsersApi userApi = new UsersApi(userWebClient);\n+        User admin = adminApi.getUser();\n+        User user = userApi.getUser();\n+\n+        privilegeRequest.setAdmin(false);\n+        adminApi.setUserPrivilege(user.getId(), privilegeRequest);\n+        assertFalse(userApi.getUser().isIsAdmin());\n+        assertFalse(userApi.getUser().isCurator());\n+\n+        privilegeRequest.setCurator(true);\n+        adminApi.setUserPrivilege(user.getId(), privilegeRequest);\n+        assertTrue(userApi.getUser().isCurator());\n+\n+        try {\n+            userApi.setUserPrivilege(admin.getId(), privilegeRequest);\n+            assertFalse(\"Should have triggered an exception\", false);\n+        } catch (ApiException ex) {\n+            assertEquals(ex.getCode(), HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        privilegeRequest.setAdmin(true);\n+        adminApi.setUserPrivilege(user.getId(), privilegeRequest);\n+        assertTrue(userApi.getUser().isIsAdmin());\n+\n+        privilegeRequest.setAdmin(false);\n+        try {\n+            adminApi.setUserPrivilege(admin.getId(), privilegeRequest);\n+            assertFalse(\"Should have triggered an exception\", false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37ea2eaa68c21a5c0a513fb28a708b7428af29ca"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3MjY2Mg==", "bodyText": "You should also assert the user is not an admin.", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r461172662", "createdAt": "2020-07-27T21:11:45Z", "author": {"login": "coverbeck"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "diffHunk": "@@ -513,4 +513,43 @@ public void testUpdateUserMetadataFromGithub() {\n         assertEquals(\"DockstoreTestUser2\", userProfile.getUsername());\n     }\n \n+    @Test\n+    public void testSetUserPrivilege() {\n+        ApiClient adminWebClient = getWebClient(ADMIN_USERNAME, testingPostgres);\n+        ApiClient userWebClient = getWebClient(USER_2_USERNAME, testingPostgres);\n+\n+        PrivilegeRequest privilegeRequest = new PrivilegeRequest();\n+        UsersApi adminApi = new UsersApi(adminWebClient);\n+        UsersApi userApi = new UsersApi(userWebClient);\n+        User admin = adminApi.getUser();\n+        User user = userApi.getUser();\n+\n+        privilegeRequest.setAdmin(false);\n+        adminApi.setUserPrivilege(user.getId(), privilegeRequest);\n+        assertFalse(userApi.getUser().isIsAdmin());\n+        assertFalse(userApi.getUser().isCurator());\n+\n+        privilegeRequest.setCurator(true);\n+        adminApi.setUserPrivilege(user.getId(), privilegeRequest);\n+        assertTrue(userApi.getUser().isCurator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37ea2eaa68c21a5c0a513fb28a708b7428af29ca"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE3Mzc5NQ==", "bodyText": "The API also supports removing user privileges. I would call this setUserPrivileges", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r461173795", "createdAt": "2020-07-27T21:14:02Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -747,6 +748,35 @@ public User updateLoggedInUserMetadata(@ApiParam(hidden = true)@Parameter(hidden\n         return dbuser;\n     }\n \n+    @PUT\n+    @Timed\n+    @UnitOfWork\n+    @RolesAllowed({\"admin\", \"curator\"})\n+    @Path(\"/user/{userId}/privileges\")\n+    @Operation(operationId = \"addUserPrivileges\", description = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37ea2eaa68c21a5c0a513fb28a708b7428af29ca"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MjM2NTE4", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-456236518", "createdAt": "2020-07-28T01:12:48Z", "commit": {"oid": "ab4c8f2d0e3fa3a461e59d773f432fb3820a6526"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NjQ4MzI3", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-456648327", "createdAt": "2020-07-28T13:48:00Z", "commit": {"oid": "ab4c8f2d0e3fa3a461e59d773f432fb3820a6526"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MDg2ODEw", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-457086810", "createdAt": "2020-07-28T23:01:29Z", "commit": {"oid": "a344f9baa26762f3574fc165db8206a54690e52d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMzowMTozMFrOG4irWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMzowNTo1M1rOG4iw7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk0MTU5Mw==", "bodyText": "You should remove this; see Gary's comment about both adding OpenAPI and removing Swagger", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r461941593", "createdAt": "2020-07-28T23:01:30Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -747,6 +749,42 @@ public User updateLoggedInUserMetadata(@ApiParam(hidden = true)@Parameter(hidden\n         return dbuser;\n     }\n \n+    @PUT\n+    @Timed\n+    @UnitOfWork\n+    @RolesAllowed({\"admin\", \"curator\"})\n+    @Path(\"/user/{userId}/privileges\")\n+    @Consumes(\"application/json\")\n+    @Operation(operationId = \"setUserPrivileges\", description = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    @ApiOperation(value = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = User.class, hidden = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a344f9baa26762f3574fc165db8206a54690e52d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk0MjEzNQ==", "bodyText": "Can you assert that the user is both not an admin nor a curator? I have to follow your code from above to figure that out; and what if that code changes? -- it could have a side effect on this test. Just to make sure you are testing with the right thing.", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r461942135", "createdAt": "2020-07-28T23:03:11Z", "author": {"login": "coverbeck"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "diffHunk": "@@ -513,4 +513,54 @@ public void testUpdateUserMetadataFromGithub() {\n         assertEquals(\"DockstoreTestUser2\", userProfile.getUsername());\n     }\n \n+    @Test\n+    public void testSetUserPrivilege() {\n+        io.dockstore.openapi.client.ApiClient adminWebClient = getOpenAPIWebClient(ADMIN_USERNAME, testingPostgres);\n+        io.dockstore.openapi.client.ApiClient userWebClient = getOpenAPIWebClient(USER_2_USERNAME, testingPostgres);\n+\n+        io.dockstore.openapi.client.model.PrivilegeRequest privilegeRequest = new PrivilegeRequest();\n+        io.dockstore.openapi.client.api.UsersApi adminApi = new io.dockstore.openapi.client.api.UsersApi(adminWebClient);\n+        io.dockstore.openapi.client.api.UsersApi userApi = new io.dockstore.openapi.client.api.UsersApi(userWebClient);\n+        io.dockstore.openapi.client.model.User admin = adminApi.getUser();\n+        io.dockstore.openapi.client.model.User user = userApi.getUser();\n+\n+        privilegeRequest.setAdmin(false);\n+        adminApi.setUserPrivileges(privilegeRequest, user.getId());\n+        adminApi.setUserPrivileges(privilegeRequest, user.getId());\n+        assertFalse(userApi.getUser().isIsAdmin());\n+        assertFalse(userApi.getUser().isCurator());\n+\n+        privilegeRequest.setCurator(true);\n+        adminApi.setUserPrivileges(privilegeRequest, user.getId());\n+        assertFalse(userApi.getUser().isIsAdmin());\n+        assertTrue(userApi.getUser().isCurator());\n+\n+        try {\n+            userApi.setUserPrivileges(privilegeRequest, admin.getId());\n+            fail(\"Curator should not be able to set admin permissions\");\n+        } catch (ApiException ex) {\n+            assertEquals(ex.getCode(), HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        privilegeRequest.setAdmin(true);\n+        adminApi.setUserPrivileges(privilegeRequest, user.getId());\n+        assertTrue(userApi.getUser().isIsAdmin());\n+\n+        privilegeRequest.setAdmin(false);\n+        try {\n+            adminApi.setUserPrivileges(privilegeRequest, admin.getId());\n+            fail(\"User should not be able to set their own permissions\");\n+        } catch (ApiException ex) {\n+            assertEquals(ex.getCode(), HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        privilegeRequest.setCurator(false);\n+        adminApi.setUserPrivileges(privilegeRequest, user.getId());\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a344f9baa26762f3574fc165db8206a54690e52d"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk0MzAyMA==", "bodyText": "This real nit-picky, and I'm surprised the checkstyle isn't flagging it already (maybe it only catches it in TypeScript, because I'm pretty sure I've seen it in my code), but you can put a space before \"Else\" --> // Else...", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r461943020", "createdAt": "2020-07-28T23:05:53Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -747,6 +749,42 @@ public User updateLoggedInUserMetadata(@ApiParam(hidden = true)@Parameter(hidden\n         return dbuser;\n     }\n \n+    @PUT\n+    @Timed\n+    @UnitOfWork\n+    @RolesAllowed({\"admin\", \"curator\"})\n+    @Path(\"/user/{userId}/privileges\")\n+    @Consumes(\"application/json\")\n+    @Operation(operationId = \"setUserPrivileges\", description = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    @ApiOperation(value = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = User.class, hidden = true)\n+    public User setUserPrivilege(@Parameter(hidden = true, name = \"user\")@Auth User authUser,\n+                                 @Parameter(name = \"User ID\", required = true) @PathParam(\"userId\") Long userID,\n+                                 @Parameter(name = \"Set privilege for a user\", required = true) PrivilegeRequest privilegeRequest) {\n+        User user = userDAO.findById(userID);\n+        if (user == null) {\n+            throw new CustomWebApplicationException(\"User not found\", HttpStatus.SC_NOT_FOUND);\n+        }\n+\n+        //This ensures that the user cannot modify their own privileges.\n+        if (authUser.getId() == user.getId()) {\n+            throw new CustomWebApplicationException(\"You cannot modify your own privileges\", HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        //If the request's admin setting is different than the admin status of the user that is being modified, and the auth user is not an admin: Throw an error.\n+        //This ensures that a curator cannot modify the admin status of any user.\n+        if (privilegeRequest.isAdmin() != user.getIsAdmin() && !authUser.getIsAdmin()) {\n+            throw new CustomWebApplicationException(\"You do not have privileges to modify administrative rights\", HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        //Else if the request's settings is different from the privileges of the user that is being modified: update the privileges with the request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a344f9baa26762f3574fc165db8206a54690e52d"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NTU3MzE2", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-457557316", "createdAt": "2020-07-29T14:07:17Z", "commit": {"oid": "136a16e063c0dcfc296731103cab3f85e697789a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3ODY0MjM3", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-457864237", "createdAt": "2020-07-29T20:17:09Z", "commit": {"oid": "078a90da9e14bfa05d646c5cd4db718be26fca62"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDoxNzowOVrOG5Ikhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDoxNzowOVrOG5Ikhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU2MjQzOA==", "bodyText": "This seems wrong. You need the indentation. Are you not using the latest yq?", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r462562438", "createdAt": "2020-07-29T20:17:09Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -14,28 +14,34 @@ components:\n       type: object\n     BioWorkflow:\n       allOf:\n-        - $ref: '#/components/schemas/Workflow'\n-        - properties:\n-            is_checker:\n-              type: boolean\n-            parent_id:\n-              format: int64\n-              type: integer\n-          type: object\n+      - $ref: '#/components/schemas/Workflow'\n+      - properties:\n+          is_checker:\n+            type: boolean\n+          parent_id:\n+            format: int64\n+            type: integer\n+        type: object\n       type: object\n     Checksum:\n-      description: A production (immutable) tool version is required to have a hashcode. Not required otherwise, but might be useful to detect changes.  This exposes the hashcode for specific image versions to verify that the container version pulled is actually the version that was indexed by the registry.\n-      example: '[{checksum=77af4d6b9913e693e8d0b4b294fa62ade6054e6b2f1ffb617ac955dd63fb0182, type=sha256}]'\n+      description: 'A production (immutable) tool version is required to have a hashcode.\n+        Not required otherwise, but might be useful to detect changes. '\n+      example: '[{checksum=ea2a5db69bd20a42976838790bc29294df3af02b, type=sha1}]'\n       properties:\n         checksum:\n           description: 'The hex-string encoded checksum for the data. '\n           type: string\n         type:\n-          description: The digest method used to create the checksum. The value (e.g. `sha-256`) SHOULD be listed as `Hash Name String` in the https://github.com/ga4gh-discovery/ga4gh-checksum/blob/master/hash-alg.csv[GA4GH Checksum Hash Algorithm Registry]. Other values MAY be used, as long as implementors are aware of the issues discussed in https://tools.ietf.org/html/rfc6920#section-9.4[RFC6920]. GA4GH may provide more explicit guidance for use of non-IANA-registered algorithms in the future.\n+          description: The digest method used to create the checksum. The value (e.g.\n+            `sha-256`) SHOULD be listed as `Hash Name String` in the https://github.com/ga4gh-discovery/ga4gh-checksum/blob/master/hash-alg.csv[GA4GH\n+            Checksum Hash Algorithm Registry]. Other values MAY be used, as long as\n+            implementors are aware of the issues discussed in https://tools.ietf.org/html/rfc6920#section-9.4[RFC6920].\n+            GA4GH may provide more explicit guidance for use of non-IANA-registered\n+            algorithms in the future.\n           type: string\n       required:\n-        - checksum\n-        - type\n+      - checksum", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078a90da9e14bfa05d646c5cd4db718be26fca62"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3ODY1NDMw", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-457865430", "createdAt": "2020-07-29T20:18:55Z", "commit": {"oid": "078a90da9e14bfa05d646c5cd4db718be26fca62"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDoxODo1NVrOG5IoKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDozNDoyNVrOG5JI7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU2MzM3MA==", "bodyText": "You can remove the bulk of the annotation (@Authorization, response) to avoid confusion. Example: @ApiOperation(value = \"hidden\", hidden = true)", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r462563370", "createdAt": "2020-07-29T20:18:55Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/UserResource.java", "diffHunk": "@@ -747,6 +749,42 @@ public User updateLoggedInUserMetadata(@ApiParam(hidden = true)@Parameter(hidden\n         return dbuser;\n     }\n \n+    @PUT\n+    @Timed\n+    @UnitOfWork\n+    @RolesAllowed({\"admin\", \"curator\"})\n+    @Path(\"/user/{userId}/privileges\")\n+    @Consumes(\"application/json\")\n+    @Operation(operationId = \"setUserPrivileges\", description = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", security = @SecurityRequirement(name = OPENAPI_JWT_SECURITY_DEFINITION_NAME))\n+    @ApiOperation(value = \"Updates the provided userID to admin or curator status, ADMIN or CURATOR only\", authorizations = { @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = User.class, hidden = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk0MTU5Mw=="}, "originalCommit": {"oid": "a344f9baa26762f3574fc165db8206a54690e52d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3MDYzMQ==", "bodyText": "assertEquals(expected, actual).  here and everywhere", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r462570631", "createdAt": "2020-07-29T20:32:19Z", "author": {"login": "garyluu"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/webservice/UserResourceIT.java", "diffHunk": "@@ -513,4 +513,56 @@ public void testUpdateUserMetadataFromGithub() {\n         assertEquals(\"DockstoreTestUser2\", userProfile.getUsername());\n     }\n \n+    @Test\n+    public void testSetUserPrivilege() {\n+        io.dockstore.openapi.client.ApiClient adminWebClient = getOpenAPIWebClient(ADMIN_USERNAME, testingPostgres);\n+        io.dockstore.openapi.client.ApiClient userWebClient = getOpenAPIWebClient(USER_2_USERNAME, testingPostgres);\n+\n+        io.dockstore.openapi.client.model.PrivilegeRequest privilegeRequest = new PrivilegeRequest();\n+        io.dockstore.openapi.client.api.UsersApi adminApi = new io.dockstore.openapi.client.api.UsersApi(adminWebClient);\n+        io.dockstore.openapi.client.api.UsersApi userApi = new io.dockstore.openapi.client.api.UsersApi(userWebClient);\n+        io.dockstore.openapi.client.model.User admin = adminApi.getUser();\n+        io.dockstore.openapi.client.model.User user = userApi.getUser();\n+\n+        privilegeRequest.setAdmin(false);\n+        adminApi.setUserPrivileges(privilegeRequest, user.getId());\n+        adminApi.setUserPrivileges(privilegeRequest, user.getId());\n+        assertFalse(userApi.getUser().isIsAdmin());\n+        assertFalse(userApi.getUser().isCurator());\n+\n+        privilegeRequest.setCurator(true);\n+        adminApi.setUserPrivileges(privilegeRequest, user.getId());\n+        assertFalse(userApi.getUser().isIsAdmin());\n+        assertTrue(userApi.getUser().isCurator());\n+\n+        try {\n+            userApi.setUserPrivileges(privilegeRequest, admin.getId());\n+            fail(\"Curator should not be able to set admin permissions\");\n+        } catch (io.dockstore.openapi.client.ApiException ex) {\n+            assertEquals(ex.getCode(), HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        privilegeRequest.setAdmin(true);\n+        adminApi.setUserPrivileges(privilegeRequest, user.getId());\n+        assertTrue(userApi.getUser().isIsAdmin());\n+\n+        privilegeRequest.setAdmin(false);\n+        try {\n+            adminApi.setUserPrivileges(privilegeRequest, admin.getId());\n+            fail(\"User should not be able to set their own permissions\");\n+        } catch (io.dockstore.openapi.client.ApiException ex) {\n+            assertEquals(ex.getCode(), HttpStatus.SC_FORBIDDEN);\n+        }\n+\n+        privilegeRequest.setCurator(false);\n+        adminApi.setUserPrivileges(privilegeRequest, user.getId());\n+        assertFalse(userApi.getUser().isIsAdmin());\n+        assertFalse(userApi.getUser().isCurator());\n+        try {\n+            userApi.setUserPrivileges(privilegeRequest, admin.getId());\n+            fail(\"User with no curator or admin rights should not be able to access the API call\");\n+        } catch (io.dockstore.openapi.client.ApiException ex) {\n+            assertEquals(ex.getCode(), HttpStatus.SC_FORBIDDEN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078a90da9e14bfa05d646c5cd4db718be26fca62"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU3MTc1OA==", "bodyText": "make this endpoint /users/{userId}/privledges to be more restful", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r462571758", "createdAt": "2020-07-29T20:34:25Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/api/PrivilegeRequest.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package io.dockstore.webservice.api;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import io.swagger.annotations.ApiModel;\n+\n+/**\n+ * This is an object to encapsulate the privilege request. Used for requests in\n+ * /users/user/{userid}/privileges", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "078a90da9e14bfa05d646c5cd4db718be26fca62"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3OTY5OTE3", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-457969917", "createdAt": "2020-07-29T23:40:43Z", "commit": {"oid": "449ab4488170a57a707cfb2f75c5e8442774ad2f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MDcwMDc5", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-458070079", "createdAt": "2020-07-30T04:54:25Z", "commit": {"oid": "449ab4488170a57a707cfb2f75c5e8442774ad2f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNDo1NDoyNVrOG5TGYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNDo1NDoyNVrOG5TGYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjczNDk0Nw==", "bodyText": "Looks out of date", "url": "https://github.com/dockstore/dockstore/pull/3693#discussion_r462734947", "createdAt": "2020-07-30T04:54:25Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -5881,6 +5888,34 @@ paths:\n         - bearer: []\n       tags:\n         - users\n+  /users/user/{userId}/privileges:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "449ab4488170a57a707cfb2f75c5e8442774ad2f"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NjMzOTg2", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-458633986", "createdAt": "2020-07-30T18:00:33Z", "commit": {"oid": "7aad2af46909f6aaa8292fc47ee99455bb25fee0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NjM5MDgy", "url": "https://github.com/dockstore/dockstore/pull/3693#pullrequestreview-458639082", "createdAt": "2020-07-30T18:07:53Z", "commit": {"oid": "7aad2af46909f6aaa8292fc47ee99455bb25fee0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a349b71fd9006959296a25221384a72aba8cb538", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/a349b71fd9006959296a25221384a72aba8cb538", "committedDate": "2020-07-30T18:37:40Z", "message": "Enable easy access to updating admin/curator status\n\ndockstore/dockstore#3574\n\nCreated a new API call at a new endpoint for users with admin/curator\nstatus to update the privileges of other users\n\nCreated a new method setIsCurator() in User.java to set the curator\nstatus of a user."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "637c31b6ac784b7aa3a4acae4482c073d31cdd44", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/637c31b6ac784b7aa3a4acae4482c073d31cdd44", "committedDate": "2020-07-30T18:37:40Z", "message": "Fixed indentations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d599a1dd1f6f3937ef93a0317f9d18bc88674474", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/d599a1dd1f6f3937ef93a0317f9d18bc88674474", "committedDate": "2020-07-30T18:37:40Z", "message": "Fixed compilation errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6299e5b0beb33985243b96f3f6f08793c47cc36f", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/6299e5b0beb33985243b96f3f6f08793c47cc36f", "committedDate": "2020-07-30T18:37:40Z", "message": "Added a new API object and refactored code\n\nIncluded PrivilegeRequest.java to the webservice api objects which\nencapsulates the request to set admin/curator privileges to a user\n\nRefactored setUserPrivilege() to utilize the new PrivilegeRequest\nobject instead of using string inputs\n\nImplemented and refactored integration tests for setUserPrivilege()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22f65594a8b11abcda3fcbe144a9c979b78543c3", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/22f65594a8b11abcda3fcbe144a9c979b78543c3", "committedDate": "2020-07-30T18:37:40Z", "message": "Ensure try catch works in integration test\n\nIncluded false assertions to try catch blocks to ensure that the\ntry will fail if the catch isn't reached"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea5f014489ccdbc0345033292119e639ad235f0f", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/ea5f014489ccdbc0345033292119e639ad235f0f", "committedDate": "2020-07-30T18:37:40Z", "message": "Addressed PR comments\n\nRemoved 'setIsCurator()' and instead use 'setCurator()'\n\nRepositioned logic to check if authuser is the user, and deny\naccess to modifying own privileges"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23fd58d79bc61626a6c6ff3d9f9133b380e78b81", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/23fd58d79bc61626a6c6ff3d9f9133b380e78b81", "committedDate": "2020-07-30T18:37:40Z", "message": "Enable easy access to updating admin/curator status\n\ndockstore/dockstore#3574\n\nCreated a new API call at a new endpoint for users with admin/curator\nstatus to update the privileges of other users\n\nCreated a new method setIsCurator() in User.java to set the curator\nstatus of a user."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a370c4486b1453878e46e67a3e31997fe728bb7", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/7a370c4486b1453878e46e67a3e31997fe728bb7", "committedDate": "2020-07-30T18:37:40Z", "message": "Addressed PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69b3748e48bb116215149ac526233a13d78c6e6e", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/69b3748e48bb116215149ac526233a13d78c6e6e", "committedDate": "2020-07-30T18:37:40Z", "message": "Added comments and clarified logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8328d11d51804aa77c3cc4435b271e2ba80cf33", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/f8328d11d51804aa77c3cc4435b271e2ba80cf33", "committedDate": "2020-07-30T18:37:40Z", "message": "Included a fix and additional test\n\nIncluded @Consumes to API call since request content type is\nset to '*/*' by default, causing a 415 error.\n\nIncluded an additional test to ensure that a non privileged user cannot\naccess the API call"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "711a6b116867253f17a6b707b4bd064d1f1d7564", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/711a6b116867253f17a6b707b4bd064d1f1d7564", "committedDate": "2020-07-30T18:37:40Z", "message": "Fix CypressCI unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80591178b5a19f7ed103ce6ff2324e692e29a46e", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/80591178b5a19f7ed103ce6ff2324e692e29a46e", "committedDate": "2020-07-30T18:37:40Z", "message": "Deleting .DS_Store"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67018cba043c1f36aa4aa0be389ce95698ada116", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/67018cba043c1f36aa4aa0be389ce95698ada116", "committedDate": "2020-07-30T18:37:40Z", "message": "Remove Swagger\n\nRemoved Swagger annotations from setUserPrivilege() and replaced them\nwith OAS annotations, with the exception of @ApiOperation\n\nModified tests to rely on OAS rather than to rely on Swagger\ndependencies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "276052aa3caa390e8923495ae1923290d6812c6c", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/276052aa3caa390e8923495ae1923290d6812c6c", "committedDate": "2020-07-30T18:37:40Z", "message": "Fixed failing integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3f4241d58980dda77c5a394b62ab5457444121a", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/b3f4241d58980dda77c5a394b62ab5457444121a", "committedDate": "2020-07-30T18:37:40Z", "message": "Addressed comments\n\nAddressed checkstyle regarding to comments\n\nAsserted that the test user has no privileges before testing that\nthe API call would fail in the integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "731dda2f73d0276e1e552d9d9a4145c5038e8757", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/731dda2f73d0276e1e552d9d9a4145c5038e8757", "committedDate": "2020-07-30T18:37:40Z", "message": "Including openapi.yaml to the PR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afc1fb53cdb4c170d45b53b0fe2cee92797a382c", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/afc1fb53cdb4c170d45b53b0fe2cee92797a382c", "committedDate": "2020-07-30T18:37:41Z", "message": "Addressed PR comments\n\nUpdated yq to fix indentation\n\nRefactored the endpoint of setUserPrivilege to\n'/user/{userid}/privileges'\n\nRepositioned parameters of AssertEquals() to reflect correctly on\nAssertEquals(Expected, Actual)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "841ae4a1e396fb162b8d1712c8e00f1e2fca22b5", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/841ae4a1e396fb162b8d1712c8e00f1e2fca22b5", "committedDate": "2020-07-30T18:37:41Z", "message": "Update openapi.yaml"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7aad2af46909f6aaa8292fc47ee99455bb25fee0", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/7aad2af46909f6aaa8292fc47ee99455bb25fee0", "committedDate": "2020-07-30T17:24:13Z", "message": "Update openapi.yaml"}, "afterCommit": {"oid": "841ae4a1e396fb162b8d1712c8e00f1e2fca22b5", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/841ae4a1e396fb162b8d1712c8e00f1e2fca22b5", "committedDate": "2020-07-30T18:37:41Z", "message": "Update openapi.yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f65739fd6392def0eb70aa49700dff01cac066bc", "author": {"user": {"login": "ByteMap", "name": "Andy Chen"}}, "url": "https://github.com/dockstore/dockstore/commit/f65739fd6392def0eb70aa49700dff01cac066bc", "committedDate": "2020-07-30T20:58:45Z", "message": "Git rebased and mvn build. Updated openapi.yaml"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1686, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}