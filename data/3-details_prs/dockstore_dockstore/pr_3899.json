{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMTIwMzMy", "number": 3899, "title": "Changes for elasticsearch6 update", "bodyText": "changes to support an update to elasticsearch 6.8+ (i used 6.8.3)\nsplit index into two entries (tools and workflows) because indices built in Elasticsearch 6+ cannot be mapped to more than one type\ncertain mapping types are deprecated (such as index: not_analyzed and type: string, changed to current terms)\nupdated the API endpoints to correctly build the indices in ToolsApiExtendedServiceImpl\nupdated the endpoints for updating indices in ElasticListener", "createdAt": "2020-10-30T16:23:13Z", "url": "https://github.com/dockstore/dockstore/pull/3899", "merged": true, "mergeCommit": {"oid": "7c3aa71092d1d66f931a1482fe97123134baa177"}, "closed": true, "closedAt": "2020-11-04T20:48:00Z", "author": {"login": "nrzhao4"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWYslFgH2gAyNTEzMTIwMzMyOjg1N2IyZGI4ZDAzNzgzNWMyN2ZhNGRhMTk3ZWJjNGE4MzBiMDI0NWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZTzLHAH2gAyNTEzMTIwMzMyOmVjYjdiODIzZWM1YzUxNzU2OTg3YWNjZjhiZjZkYTNlNTJhNGEwYTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "857b2db8d037835c27fa4da197ebc4a830b0245b", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/857b2db8d037835c27fa4da197ebc4a830b0245b", "committedDate": "2020-10-26T18:29:59Z", "message": "Changed string to text, changed not_analyzed to false"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2990bfe8b4428e053293eb6bba5effbc835dc0db", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/2990bfe8b4428e053293eb6bba5effbc835dc0db", "committedDate": "2020-10-29T19:18:45Z", "message": "Creates and updates two indices, search endpoint updated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be3ce2689fdb0857d69d2525a8fb08065b2274d1", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/be3ce2689fdb0857d69d2525a8fb08065b2274d1", "committedDate": "2020-10-29T20:04:28Z", "message": "change author mapping to keyword"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9843cf2dcb900cab803aaaca66735844dbe51c34", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/9843cf2dcb900cab803aaaca66735844dbe51c34", "committedDate": "2020-10-30T16:14:33Z", "message": "map author as fielddata for filtering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3714751cbe40b02e9abace6a6321d6540c16efb3", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/3714751cbe40b02e9abace6a6321d6540c16efb3", "committedDate": "2020-10-30T16:24:42Z", "message": "Merge branch 'develop' into feature/1780/supportElasticsearch6"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODQxMDg3", "url": "https://github.com/dockstore/dockstore/pull/3899#pullrequestreview-520841087", "createdAt": "2020-10-30T16:36:00Z", "commit": {"oid": "3714751cbe40b02e9abace6a6321d6540c16efb3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODUxMDQ5", "url": "https://github.com/dockstore/dockstore/pull/3899#pullrequestreview-520851049", "createdAt": "2020-10-30T16:48:08Z", "commit": {"oid": "3714751cbe40b02e9abace6a6321d6540c16efb3"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjo0ODowOVrOHrXcjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzowMjo1M1rOHrYBpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzNDk1OA==", "bodyText": "It was like this, but this looks like the same path as line 111. Would be good to have a variable to avoid duplication.", "url": "https://github.com/dockstore/dockstore/pull/3899#discussion_r515234958", "createdAt": "2020-10-30T16:48:09Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/statelisteners/ElasticListener.java", "diffHunk": "@@ -101,17 +101,17 @@ public void handleIndexUpdate(Entry entry, StateManagerMode command) {\n         String json;\n         json = getDocumentValueFromEntry(entry);\n         try (RestClient restClient = RestClient.builder(new HttpHost(hostname, port, \"http\")).build()) {\n-            String entryType = entry instanceof Tool ? \"tool\" : \"workflow\";\n+            String entryType = entry instanceof Tool ? \"tools\" : \"workflows\";\n             HttpEntity entity = new NStringEntity(json, ContentType.APPLICATION_JSON);\n             Response post;\n             switch (command) {\n             case PUBLISH:\n             case UPDATE:\n                 post = restClient\n-                    .performRequest(\"POST\", \"/entry/\" + entryType + \"/\" + entry.getId() + \"/_update\", Collections.emptyMap(), entity);\n+                    .performRequest(\"POST\", \"/\" + entryType + \"/_doc/\" + entry.getId() + \"/_update\", Collections.emptyMap(), entity);\n                 break;\n             case DELETE:\n-                post = restClient.performRequest(\"DELETE\", \"/entry/\" + entryType + \"/\" + entry.getId(), Collections.emptyMap(), entity);\n+                post = restClient.performRequest(\"DELETE\", \"/\" + entryType + \"/_doc/\" + entry.getId(), Collections.emptyMap(), entity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3714751cbe40b02e9abace6a6321d6540c16efb3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzNzU1Mw==", "bodyText": "General comment that also applies to line 162 -- If somebody tries to index a service (I don't think we do), then here it will get treated as a workflow, but on lines 162 and 163, you will ignore services. Maybe that's OK. Just making sure.", "url": "https://github.com/dockstore/dockstore/pull/3899#discussion_r515237553", "createdAt": "2020-10-30T16:52:11Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/statelisteners/ElasticListener.java", "diffHunk": "@@ -101,17 +101,17 @@ public void handleIndexUpdate(Entry entry, StateManagerMode command) {\n         String json;\n         json = getDocumentValueFromEntry(entry);\n         try (RestClient restClient = RestClient.builder(new HttpHost(hostname, port, \"http\")).build()) {\n-            String entryType = entry instanceof Tool ? \"tool\" : \"workflow\";\n+            String entryType = entry instanceof Tool ? \"tools\" : \"workflows\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3714751cbe40b02e9abace6a6321d6540c16efb3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzODk2MA==", "bodyText": "This check could be done before you sort the entries.\nIn theory, you may need to test in each of the blocks below, e.g., if tools is empty but workflows is not, then I think you'll want to skip the first block.", "url": "https://github.com/dockstore/dockstore/pull/3899#discussion_r515238960", "createdAt": "2020-10-30T16:54:28Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/statelisteners/ElasticListener.java", "diffHunk": "@@ -158,19 +158,34 @@ public void bulkUpsert(List<Entry> entries) {\n         entries.forEach(this::eagerLoadEntry);\n         entries = filterCheckerWorkflows(entries);\n         // #2771 will need to disable this and properly create objects to get services into the index\n-        entries = entries.stream().filter(entry -> !(entry instanceof Service)).collect(Collectors.toList());\n+        // sort entries into workflows and tools\n+        List<Entry> workflows = entries.stream().filter(entry -> (entry instanceof BioWorkflow)).collect(Collectors.toList());\n+        List<Entry> tools = entries.stream().filter(entry -> (entry instanceof Tool)).collect(Collectors.toList());\n         if (entries.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3714751cbe40b02e9abace6a6321d6540c16efb3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0MDk5MQ==", "bodyText": "This block and the previous block are identical except for the path, entity and error message. Good candidate for a reusable method.", "url": "https://github.com/dockstore/dockstore/pull/3899#discussion_r515240991", "createdAt": "2020-10-30T16:57:37Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/statelisteners/ElasticListener.java", "diffHunk": "@@ -158,19 +158,34 @@ public void bulkUpsert(List<Entry> entries) {\n         entries.forEach(this::eagerLoadEntry);\n         entries = filterCheckerWorkflows(entries);\n         // #2771 will need to disable this and properly create objects to get services into the index\n-        entries = entries.stream().filter(entry -> !(entry instanceof Service)).collect(Collectors.toList());\n+        // sort entries into workflows and tools\n+        List<Entry> workflows = entries.stream().filter(entry -> (entry instanceof BioWorkflow)).collect(Collectors.toList());\n+        List<Entry> tools = entries.stream().filter(entry -> (entry instanceof Tool)).collect(Collectors.toList());\n         if (entries.isEmpty()) {\n             return;\n         }\n+        // upsert tools to tools index\n         try (RestClient restClient = RestClient.builder(new HttpHost(hostname, port, \"http\")).build()) {\n-            String newlineDJSON = getNDJSON(entries);\n-            HttpEntity bulkEntity = new NStringEntity(newlineDJSON, ContentType.APPLICATION_JSON);\n-            Response post = restClient.performRequest(\"POST\", \"/entry/_bulk\", Collections.emptyMap(), bulkEntity);\n+            String toolsNewlineDJSON = getNDJSON(tools);\n+            HttpEntity toolsBulkEntity = new NStringEntity(toolsNewlineDJSON, ContentType.APPLICATION_JSON);\n+            Response post = restClient.performRequest(\"POST\", \"/tools/_doc/_bulk\", Collections.emptyMap(), toolsBulkEntity);\n             if (post.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {\n-                throw new CustomWebApplicationException(\"Could not submit index to elastic search\", HttpStatus.SC_INTERNAL_SERVER_ERROR);\n+                throw new CustomWebApplicationException(\"Could not submit tools index to elastic search\", HttpStatus.SC_INTERNAL_SERVER_ERROR);\n             }\n         } catch (IOException e) {\n-            LOGGER.error(\"Could not submit index to elastic search. \" + e.getMessage());\n+            LOGGER.error(\"Could not submit tools index to elastic search. \" + e.getMessage());\n+        }\n+\n+        // upsert workflows to workflows index\n+        try (RestClient restClient = RestClient.builder(new HttpHost(hostname, port, \"http\")).build()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3714751cbe40b02e9abace6a6321d6540c16efb3"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0MTY3NA==", "bodyText": "Is this intentional? If we don't need it and there are no plans to uncomment it, I would just delete it.", "url": "https://github.com/dockstore/dockstore/pull/3899#discussion_r515241674", "createdAt": "2020-10-30T16:58:45Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/statelisteners/ElasticListener.java", "diffHunk": "@@ -212,7 +227,7 @@ private String getNDJSON(List<Entry> publishedEntries) {\n             Map<String, Map<String, String>> index = new HashMap<>();\n             Map<String, String> internal = new HashMap<>();\n             internal.put(\"_id\", String.valueOf(entry.getId()));\n-            internal.put(\"_type\", entry instanceof Tool ? \"tool\" : \"workflow\");\n+            //internal.put(\"_type\", entry instanceof Tool ? \"tool\" : \"workflow\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3714751cbe40b02e9abace6a6321d6540c16efb3"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0MjMxNQ==", "bodyText": "GitHub warning about missing newline", "url": "https://github.com/dockstore/dockstore/pull/3899#discussion_r515242315", "createdAt": "2020-10-30T16:59:42Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/resources/queries/mapping_workflow.json", "diffHunk": "@@ -0,0 +1,105 @@\n+{\n+  \"settings\": {\n+    \"index\": {\n+      \"analysis\": {\n+        \"filter\": {\n+          \"english_stop\": {\n+            \"type\": \"stop\",\n+            \"stopwords\": \"_english_\"\n+          },\n+          \"unique_stem\": {\n+            \"type\": \"unique\",\n+            \"only_on_same_position\": true\n+          },\n+          \"dockstore_stop\": {\n+            \"type\": \"stop\",\n+            \"stopwords\": [ \"https\", \"http\", \"see\", \"from\", \"use\", \"usage\", \"more\", \"can\", \"reads\", \"website\", \"count\" ]\n+          }\n+        },\n+        \"analyzer\": {\n+          \"didYouMean\": {\n+            \"filter\": [\n+              \"lowercase\"\n+            ],\n+            \"char_filter\": [\n+              \"html_strip\"\n+            ],\n+            \"type\": \"custom\",\n+            \"tokenizer\": \"standard\"\n+          },\n+          \"text_analyzer\":{\n+            \"type\":\"custom\",\n+            \"tokenizer\":\"standard\",\n+            \"filter\": [\n+              \"lowercase\",\n+              \"english_stop\",\n+              \"dockstore_stop\",\n+              \"keyword_repeat\",\n+              \"unique_stem\"\n+            ],\n+            \"char_filter\": [\n+              \"html_strip\"\n+            ]\n+          }\n+        }\n+      }\n+    }\n+  },\n+  \"mappings\": {\n+    \"_doc\": {\n+      \"properties\": {\n+        \"author\": {\n+          \"type\": \"text\",\n+          \"fielddata\": true,\n+          \"analyzer\": \"text_analyzer\"\n+        },\n+        \"defaultVersion\": {\n+          \"type\": \"keyword\"\n+        },\n+        \"description\": {\n+          \"type\": \"text\",\n+          \"fielddata\": true,\n+          \"index\": true,\n+          \"analyzer\": \"text_analyzer\"\n+        },\n+        \"descriptorType\": {\n+          \"type\": \"keyword\"\n+        },\n+        \"email\": {\n+          \"type\": \"text\"\n+        },\n+        \"gitUrl\": {\n+          \"type\": \"text\"\n+        },\n+        \"id\": {\n+          \"type\": \"long\"\n+        },\n+        \"is_published\": {\n+          \"type\": \"boolean\"\n+        },\n+        \"lastUpdated\": {\n+          \"format\": \"epoch_millis\",\n+          \"type\": \"date\"\n+        },\n+        \"mode\": {\n+          \"type\": \"text\"\n+        },\n+        \"organization\": {\n+          \"type\": \"keyword\"\n+        },\n+        \"path\": {\n+          \"type\": \"text\"\n+        },\n+        \"repository\": {\n+          \"type\": \"keyword\"\n+        },\n+        \"workflowName\": {\n+          \"type\": \"keyword\"\n+        },\n+        \"workflow_path\": {\n+          \"type\": \"keyword\"\n+        }\n+      }\n+    }\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3714751cbe40b02e9abace6a6321d6540c16efb3"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NDQ1NQ==", "bodyText": "It was like this, but can you please also log the exception. The stack trace is often useful when looking through the logs.\nLOGGER.error(\"Could not submit tools index to elastic search. \" + e.getMessage(), e);", "url": "https://github.com/dockstore/dockstore/pull/3899#discussion_r515244455", "createdAt": "2020-10-30T17:02:53Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/statelisteners/ElasticListener.java", "diffHunk": "@@ -158,19 +158,34 @@ public void bulkUpsert(List<Entry> entries) {\n         entries.forEach(this::eagerLoadEntry);\n         entries = filterCheckerWorkflows(entries);\n         // #2771 will need to disable this and properly create objects to get services into the index\n-        entries = entries.stream().filter(entry -> !(entry instanceof Service)).collect(Collectors.toList());\n+        // sort entries into workflows and tools\n+        List<Entry> workflows = entries.stream().filter(entry -> (entry instanceof BioWorkflow)).collect(Collectors.toList());\n+        List<Entry> tools = entries.stream().filter(entry -> (entry instanceof Tool)).collect(Collectors.toList());\n         if (entries.isEmpty()) {\n             return;\n         }\n+        // upsert tools to tools index\n         try (RestClient restClient = RestClient.builder(new HttpHost(hostname, port, \"http\")).build()) {\n-            String newlineDJSON = getNDJSON(entries);\n-            HttpEntity bulkEntity = new NStringEntity(newlineDJSON, ContentType.APPLICATION_JSON);\n-            Response post = restClient.performRequest(\"POST\", \"/entry/_bulk\", Collections.emptyMap(), bulkEntity);\n+            String toolsNewlineDJSON = getNDJSON(tools);\n+            HttpEntity toolsBulkEntity = new NStringEntity(toolsNewlineDJSON, ContentType.APPLICATION_JSON);\n+            Response post = restClient.performRequest(\"POST\", \"/tools/_doc/_bulk\", Collections.emptyMap(), toolsBulkEntity);\n             if (post.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {\n-                throw new CustomWebApplicationException(\"Could not submit index to elastic search\", HttpStatus.SC_INTERNAL_SERVER_ERROR);\n+                throw new CustomWebApplicationException(\"Could not submit tools index to elastic search\", HttpStatus.SC_INTERNAL_SERVER_ERROR);\n             }\n         } catch (IOException e) {\n-            LOGGER.error(\"Could not submit index to elastic search. \" + e.getMessage());\n+            LOGGER.error(\"Could not submit tools index to elastic search. \" + e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3714751cbe40b02e9abace6a6321d6540c16efb3"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzY2NDM1", "url": "https://github.com/dockstore/dockstore/pull/3899#pullrequestreview-521766435", "createdAt": "2020-11-02T16:02:24Z", "commit": {"oid": "3714751cbe40b02e9abace6a6321d6540c16efb3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjowMjoyNFrOHsKyOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjowMjoyNFrOHsKyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA3NjA4OQ==", "bodyText": "Same with above, should make deleting tools and deleting workflows a re-usable method in case we want to add new indices some day (perhaps notebooks or services)", "url": "https://github.com/dockstore/dockstore/pull/3899#discussion_r516076089", "createdAt": "2020-11-02T16:02:24Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/proposedGA4GH/ToolsApiExtendedServiceImpl.java", "diffHunk": "@@ -166,20 +166,31 @@ public Response toolsIndexGet(SecurityContext securityContext) {\n                     .builder(new HttpHost(config.getEsConfiguration().getHostname(), config.getEsConfiguration().getPort(), \"http\"))\n                     .build()) {\n \n-                // Delete index\n+                // Delete indices\n                 try {\n-                    restClient.performRequest(\"DELETE\", \"/entry\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3714751cbe40b02e9abace6a6321d6540c16efb3"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcbe781648f000029a4a527e3814d9ac82ded953", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/bcbe781648f000029a4a527e3814d9ac82ded953", "committedDate": "2020-11-02T17:17:04Z", "message": "refactoring methods, changed author mapping type to keyword"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3adcf5e71226953d92a0985c64bccb98812e1c47", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/3adcf5e71226953d92a0985c64bccb98812e1c47", "committedDate": "2020-11-02T17:18:06Z", "message": "Merge branch 'feature/1780/supportElasticsearch6' of https://github.com/dockstore/dockstore into feature/1780/supportElasticsearch6"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxOTA5MTg0", "url": "https://github.com/dockstore/dockstore/pull/3899#pullrequestreview-521909184", "createdAt": "2020-11-02T18:54:04Z", "commit": {"oid": "3adcf5e71226953d92a0985c64bccb98812e1c47"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "415957e58a35c6e2307d978d4d909201da5f06ee", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/415957e58a35c6e2307d978d4d909201da5f06ee", "committedDate": "2020-11-03T18:49:27Z", "message": "Merge branch 'develop' into feature/1780/supportElasticsearch6"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyODM0NTc4", "url": "https://github.com/dockstore/dockstore/pull/3899#pullrequestreview-522834578", "createdAt": "2020-11-03T20:02:16Z", "commit": {"oid": "415957e58a35c6e2307d978d4d909201da5f06ee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyOTU0NzMw", "url": "https://github.com/dockstore/dockstore/pull/3899#pullrequestreview-522954730", "createdAt": "2020-11-03T23:49:02Z", "commit": {"oid": "415957e58a35c6e2307d978d4d909201da5f06ee"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzo1MzoxOVrOHtEjZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzo1MzoxOVrOHtEjZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAyMjU2Nw==", "bodyText": "You should use the index variable for the message, like you do on line 186.", "url": "https://github.com/dockstore/dockstore/pull/3899#discussion_r517022567", "createdAt": "2020-11-03T23:53:19Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/statelisteners/ElasticListener.java", "diffHunk": "@@ -158,19 +159,31 @@ public void bulkUpsert(List<Entry> entries) {\n         entries.forEach(this::eagerLoadEntry);\n         entries = filterCheckerWorkflows(entries);\n         // #2771 will need to disable this and properly create objects to get services into the index\n-        entries = entries.stream().filter(entry -> !(entry instanceof Service)).collect(Collectors.toList());\n         if (entries.isEmpty()) {\n             return;\n         }\n+        // sort entries into workflows and tools\n+        List<Entry> workflowsEntryList = entries.stream().filter(entry -> (entry instanceof BioWorkflow)).collect(Collectors.toList());\n+        List<Entry> toolsEntryList = entries.stream().filter(entry -> (entry instanceof Tool)).collect(Collectors.toList());\n+        if (!workflowsEntryList.isEmpty()) {\n+            postBulkUpdate(\"workflows\", workflowsEntryList);\n+        }\n+        if (!toolsEntryList.isEmpty()) {\n+            postBulkUpdate(\"tools\", toolsEntryList);\n+        }\n+    }\n+\n+    private void postBulkUpdate(String index, List<Entry> entries) {\n         try (RestClient restClient = RestClient.builder(new HttpHost(hostname, port, \"http\")).build()) {\n             String newlineDJSON = getNDJSON(entries);\n+            String endpoint = \"/\" + index + \"/_doc/_bulk\";\n             HttpEntity bulkEntity = new NStringEntity(newlineDJSON, ContentType.APPLICATION_JSON);\n-            Response post = restClient.performRequest(\"POST\", \"/entry/_bulk\", Collections.emptyMap(), bulkEntity);\n+            Response post = restClient.performRequest(\"POST\", endpoint, Collections.emptyMap(), bulkEntity);\n             if (post.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {\n-                throw new CustomWebApplicationException(\"Could not submit index to elastic search\", HttpStatus.SC_INTERNAL_SERVER_ERROR);\n+                throw new CustomWebApplicationException(\"Could not submit tools index to elastic search\", HttpStatus.SC_INTERNAL_SERVER_ERROR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "415957e58a35c6e2307d978d4d909201da5f06ee"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNTk0MjY5", "url": "https://github.com/dockstore/dockstore/pull/3899#pullrequestreview-523594269", "createdAt": "2020-11-04T17:43:12Z", "commit": {"oid": "415957e58a35c6e2307d978d4d909201da5f06ee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "572006b38c15cb0e1c528575dee44ea08f09aa25", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/572006b38c15cb0e1c528575dee44ea08f09aa25", "committedDate": "2020-11-04T17:47:42Z", "message": "put variable index in error message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c12909e97f9fefc31aab99fa392ccc63ef5e461", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/9c12909e97f9fefc31aab99fa392ccc63ef5e461", "committedDate": "2020-11-04T17:48:03Z", "message": "Merge branch 'feature/1780/supportElasticsearch6' of https://github.com/dockstore/dockstore into feature/1780/supportElasticsearch6"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "543729eb50ccd501cda09c3b7a4981098a49dc2a", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/543729eb50ccd501cda09c3b7a4981098a49dc2a", "committedDate": "2020-11-04T17:48:39Z", "message": "Merge branch 'develop' into feature/1780/supportElasticsearch6"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNjcxMTEw", "url": "https://github.com/dockstore/dockstore/pull/3899#pullrequestreview-523671110", "createdAt": "2020-11-04T19:28:55Z", "commit": {"oid": "543729eb50ccd501cda09c3b7a4981098a49dc2a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecb7b823ec5c51756987accf8bf6da3e52a4a0a3", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/ecb7b823ec5c51756987accf8bf6da3e52a4a0a3", "committedDate": "2020-11-04T20:29:26Z", "message": "Merge branch 'develop' into feature/1780/supportElasticsearch6"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1609, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}