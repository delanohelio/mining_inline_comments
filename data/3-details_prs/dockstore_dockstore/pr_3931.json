{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNTcxNjU5", "number": 3931, "title": "feature/1781/upgrade to elasticsearch 7", "bodyText": "changes to support elasticsearch 7\nchange tools and workflows index mappings. no longer define properties under _doc, it is already default type\nchanged naming of endpoints, replacing usage of tools to entries to avoid confusion between entries and the tools index\nnew endpoints for searching workflows and tools separately. needed to do this because when querying for results table, if we look for 200 results, ES will return all 200 of them as tools. so to ensure we get even distribution of results between workflows and tools, need to query the indices separately", "createdAt": "2020-11-17T17:15:09Z", "url": "https://github.com/dockstore/dockstore/pull/3931", "merged": true, "mergeCommit": {"oid": "6f1c3a702d162399e8851480a136ebe32fc84fe5"}, "closed": true, "closedAt": "2020-12-01T18:11:59Z", "author": {"login": "nrzhao4"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdcO6-SAH2gAyNTIyNTcxNjU5OjBlNTQ1MzcxNDdlOTVhMjBkNzNkZDVjMjMyYzEyOWU2ODQ4YjBhNTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh7389gH2gAyNTIyNTcxNjU5OjBhOTJmYzc2OTViZmU5MWNjNDQ1YzVmMmNhYjExY2RlYmZiNjA1ODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0e54537147e95a20d73dd5c232c129e6848b0a50", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/0e54537147e95a20d73dd5c232c129e6848b0a50", "committedDate": "2020-11-13T22:30:12Z", "message": "separate endpoints for searching individual index"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b62d8d7ae568e0d529770e86e06384736ccc3b88", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/b62d8d7ae568e0d529770e86e06384736ccc3b88", "committedDate": "2020-11-17T18:51:58Z", "message": "Merge branch 'develop' into feature/1781/elasticsearch7"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNzU4Njcw", "url": "https://github.com/dockstore/dockstore/pull/3931#pullrequestreview-532758670", "createdAt": "2020-11-17T19:53:56Z", "commit": {"oid": "b62d8d7ae568e0d529770e86e06384736ccc3b88"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f258b07a2211074690b7eded772bd08249687b0a", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/f258b07a2211074690b7eded772bd08249687b0a", "committedDate": "2020-11-17T20:43:14Z", "message": "update circleci ES version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyODc4ODc4", "url": "https://github.com/dockstore/dockstore/pull/3931#pullrequestreview-532878878", "createdAt": "2020-11-17T22:51:01Z", "commit": {"oid": "f258b07a2211074690b7eded772bd08249687b0a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjo1MTowMVrOH1OvEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMzowMTowMVrOH1PBkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU3ODAwMw==", "bodyText": "Can't comment on it directly, but above there's  .DS_Store which is I think Mac specific?", "url": "https://github.com/dockstore/dockstore/pull/3931#discussion_r525578003", "createdAt": "2020-11-17T22:51:01Z", "author": {"login": "denis-yuen"}, "path": ".circleci/config.yml", "diffHunk": "@@ -12,7 +12,7 @@ executors:\n           PG_HOST: localhost\n           POSTGRES_HOST_AUTH_METHOD: trust\n           POSTGRES_PASSWORD: postgres\n-      - image: docker.elastic.co/elasticsearch/elasticsearch:6.8.3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f258b07a2211074690b7eded772bd08249687b0a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU3ODU0OQ==", "bodyText": "Response is kinda redundant in these two methods (can return directly)", "url": "https://github.com/dockstore/dockstore/pull/3931#discussion_r525578549", "createdAt": "2020-11-17T22:52:00Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/proposedGA4GH/ToolsApiExtendedServiceImpl.java", "diffHunk": "@@ -197,41 +197,25 @@ public Response toolsIndexGet(SecurityContext securityContext) {\n         return Response.ok().entity(0).build();\n     }\n \n+    @Override\n+    public Response entriesIndexSearch(String query, MultivaluedMap<String, String> queryParameters, SecurityContext securityContext) {\n+        final String index = \"tools,workflows\";\n+        Response response = searchIndex(query, queryParameters, index);\n+        return response;\n+    }\n+\n     @Override\n     public Response toolsIndexSearch(String query, MultivaluedMap<String, String> queryParameters, SecurityContext securityContext) {\n-        if (!config.getEsConfiguration().getHostname().isEmpty()) {\n-            try (RestClient restClient = RestClient\n-                    .builder(new HttpHost(config.getEsConfiguration().getHostname(), config.getEsConfiguration().getPort(), \"http\"))\n-                    .build()) {\n-                HttpEntity entity = query == null ? null : new NStringEntity(query, ContentType.APPLICATION_JSON);\n-                Map<String, String> parameters = new HashMap<>();\n-                // TODO: note that this is lossy if there are repeated parameters\n-                // but it looks like the elastic search http client classes don't handle it\n-                if (queryParameters != null) {\n-                    queryParameters.forEach((key, value) -> parameters.put(key, value.get(0)));\n-                }\n-                org.elasticsearch.client.Response get = restClient.performRequest(\"GET\", \"/tools,workflows/_search\", parameters, entity);\n-                if (get.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {\n-                    throw new CustomWebApplicationException(\"Could not submit index to elastic search\",\n-                            HttpStatus.SC_INTERNAL_SERVER_ERROR);\n-                }\n-                return Response.ok().entity(get.getEntity().getContent()).build();\n-            } catch (ResponseException e) {\n-                // Only surface these codes to the user, everything else is not entirely obvious so returning 500 instead.\n-                int[] codesToResurface = {HttpStatus.SC_BAD_REQUEST};\n-                int statusCode = e.getResponse().getStatusLine().getStatusCode();\n-                LOG.error(\"Could not use Elasticsearch search\", e);\n-                if (ArrayUtils.contains(codesToResurface, statusCode)) {\n-                    throw new CustomWebApplicationException(e.getMessage(), statusCode);\n-                } else {\n-                    throw new CustomWebApplicationException(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);\n-                }\n-            } catch (IOException e2) {\n-                LOG.error(\"Could not use Elasticsearch search\", e2);\n-                throw new CustomWebApplicationException(e2.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);\n-            }\n-        }\n-        return Response.ok().entity(0).build();\n+        final String index = \"tools\";\n+        Response response = searchIndex(query, queryParameters, index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f258b07a2211074690b7eded772bd08249687b0a"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MjczNw==", "bodyText": "The main TRS repo has the concept of a toolClass https://github.com/ga4gh/tool-registry-service-schemas/blob/develop/openapi/ga4gh-tool-discovery.yaml#L147\nThis is a parameter which filters down tools by subclass (DockstoreTool, Workflow).\nWould it be possible to have the same parameter here for consistency (leaving it blank or null to get entries/all)\nThe Strings for the ToolClasses are available here \n  \n    \n      dockstore/dockstore-webservice/src/main/java/io/openapi/api/impl/ToolClassesApiServiceImpl.java\n    \n    \n         Line 34\n      in\n      b64cb4e\n    \n    \n    \n    \n\n        \n          \n           public static final String COMMAND_LINE_TOOL = \"CommandLineTool\";", "url": "https://github.com/dockstore/dockstore/pull/3931#discussion_r525582737", "createdAt": "2020-11-17T23:01:01Z", "author": {"login": "denis-yuen"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/proposedGA4GH/ToolsExtendedApi.java", "diffHunk": "@@ -83,32 +83,58 @@ public Response toolsOrgGet(\n     }\n \n     @POST\n-    @Path(\"/tools/entry/_search\")\n+    @Path(\"/entries/all/_search\")\n+    @Produces({ MediaType.APPLICATION_JSON })\n+    @ApiOperation(nickname = EntriesIndexSearch.OPERATION_ID, value = EntriesIndexSearch.SUMMARY, notes = EntriesIndexSearch.DESCRIPTION, response = String.class)\n+    @ApiResponses(value = { @ApiResponse(code = HttpStatus.SC_OK, message = EntriesIndexSearch.OK_RESPONSE, response = String.class) })\n+    @Operation(operationId = EntriesIndexSearch.OPERATION_ID, summary = EntriesIndexSearch.SUMMARY, description = EntriesIndexSearch.DESCRIPTION, responses = {\n+            @io.swagger.v3.oas.annotations.responses.ApiResponse(responseCode = HttpStatus.SC_OK + \"\", description = EntriesIndexSearch.OK_RESPONSE, content = @Content(mediaType = MediaType.APPLICATION_JSON, schema = @Schema(implementation = String.class)))\n+    })\n+    public Response entriesIndexSearch(@ApiParam(value = \"elastic search query\", required = true) String query,\n+        @Context UriInfo uriInfo, @Context SecurityContext securityContext) {\n+        return delegate.entriesIndexSearch(query, uriInfo != null ? uriInfo.getQueryParameters() : null, securityContext);\n+    }\n+\n+    @POST\n+    @Path(\"/entries/tools/_search\")\n     @Produces({ MediaType.APPLICATION_JSON })\n     @ApiOperation(nickname = ToolsIndexSearch.OPERATION_ID, value = ToolsIndexSearch.SUMMARY, notes = ToolsIndexSearch.DESCRIPTION, response = String.class)\n     @ApiResponses(value = { @ApiResponse(code = HttpStatus.SC_OK, message = ToolsIndexSearch.OK_RESPONSE, response = String.class) })\n     @Operation(operationId = ToolsIndexSearch.OPERATION_ID, summary = ToolsIndexSearch.SUMMARY, description = ToolsIndexSearch.DESCRIPTION, responses = {\n             @io.swagger.v3.oas.annotations.responses.ApiResponse(responseCode = HttpStatus.SC_OK + \"\", description = ToolsIndexSearch.OK_RESPONSE, content = @Content(mediaType = MediaType.APPLICATION_JSON, schema = @Schema(implementation = String.class)))\n     })\n-    public Response toolsIndexSearch(@ApiParam(value = \"elastic search query\", required = true) String query, @Context UriInfo uriInfo,\n-        @Context SecurityContext securityContext) {\n+    public Response toolsIndexSearch(@ApiParam(value = \"elastic search query\", required = true) String query,\n+                                       @Context UriInfo uriInfo, @Context SecurityContext securityContext) {\n         return delegate.toolsIndexSearch(query, uriInfo != null ? uriInfo.getQueryParameters() : null, securityContext);\n     }\n \n     @POST\n-    @Path(\"/tools/index\")\n+    @Path(\"/entries/workflows/_search\")\n+    @Produces({ MediaType.APPLICATION_JSON })\n+    @ApiOperation(nickname = WorkflowsIndexSearch.OPERATION_ID, value = WorkflowsIndexSearch.SUMMARY, notes = WorkflowsIndexSearch.DESCRIPTION, response = String.class)\n+    @ApiResponses(value = { @ApiResponse(code = HttpStatus.SC_OK, message = WorkflowsIndexSearch.OK_RESPONSE, response = String.class) })\n+    @Operation(operationId = WorkflowsIndexSearch.OPERATION_ID, summary = WorkflowsIndexSearch.SUMMARY, description = WorkflowsIndexSearch.DESCRIPTION, responses = {\n+            @io.swagger.v3.oas.annotations.responses.ApiResponse(responseCode = HttpStatus.SC_OK + \"\", description = WorkflowsIndexSearch.OK_RESPONSE, content = @Content(mediaType = MediaType.APPLICATION_JSON, schema = @Schema(implementation = String.class)))\n+    })\n+    public Response workflowsIndexSearch(@ApiParam(value = \"elastic search query\", required = true) String query,\n+                                     @Context UriInfo uriInfo, @Context SecurityContext securityContext) {\n+        return delegate.workflowsIndexSearch(query, uriInfo != null ? uriInfo.getQueryParameters() : null, securityContext);\n+    }\n+\n+    @POST\n+    @Path(\"/entries/index\")\n     @UnitOfWork\n     @RolesAllowed({\"curator\", \"admin\"})\n     @Produces({ MediaType.TEXT_PLAIN })\n-    @ApiOperation(value = ToolsIndexGet.SUMMARY, notes = ToolsIndexGet.DESCRIPTION, authorizations = {\n+    @ApiOperation(value = EntriesIndexGet.SUMMARY, notes = EntriesIndexGet.DESCRIPTION, authorizations = {\n         @Authorization(value = JWT_SECURITY_DEFINITION_NAME) }, response = Integer.class)\n-    @ApiResponses(value = { @ApiResponse(code = HttpStatus.SC_OK, message = ToolsIndexGet.OK_RESPONSE) })\n-    @Operation(operationId = ToolsIndexGet.SUMMARY, summary = ToolsIndexGet.SUMMARY, description = ToolsIndexGet.DESCRIPTION, security = @SecurityRequirement(name = ResourceConstants.OPENAPI_JWT_SECURITY_DEFINITION_NAME), responses = {\n-        @io.swagger.v3.oas.annotations.responses.ApiResponse(responseCode = HttpStatus.SC_OK + \"\", description = ToolsIndexGet.OK_RESPONSE, content = @Content(mediaType = MediaType.TEXT_PLAIN, schema = @Schema(implementation = Integer.class)))\n+    @ApiResponses(value = { @ApiResponse(code = HttpStatus.SC_OK, message = EntriesIndexGet.OK_RESPONSE) })\n+    @Operation(operationId = EntriesIndexGet.SUMMARY, summary = EntriesIndexGet.SUMMARY, description = EntriesIndexGet.DESCRIPTION, security = @SecurityRequirement(name = ResourceConstants.OPENAPI_JWT_SECURITY_DEFINITION_NAME), responses = {\n+        @io.swagger.v3.oas.annotations.responses.ApiResponse(responseCode = HttpStatus.SC_OK + \"\", description = EntriesIndexGet.OK_RESPONSE, content = @Content(mediaType = MediaType.TEXT_PLAIN, schema = @Schema(implementation = Integer.class)))\n     })\n-    public Response toolsIndexGet(@ApiParam(hidden = true) @Parameter(hidden = true) @Auth User user, @Context SecurityContext securityContext)\n+    public Response entriesIndexGet(@ApiParam(hidden = true) @Parameter(hidden = true) @Auth User user, @Context SecurityContext securityContext)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f258b07a2211074690b7eded772bd08249687b0a"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyOTEwODMy", "url": "https://github.com/dockstore/dockstore/pull/3931#pullrequestreview-532910832", "createdAt": "2020-11-17T23:59:44Z", "commit": {"oid": "f258b07a2211074690b7eded772bd08249687b0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMzo1OTo0NFrOH1QYpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMzo1OTo0NFrOH1QYpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwNTAzMQ==", "bodyText": "Ugh...I missed an endpoint in my fix", "url": "https://github.com/dockstore/dockstore/pull/3931#discussion_r525605031", "createdAt": "2020-11-17T23:59:44Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml", "diffHunk": "@@ -1841,7 +1841,7 @@ paths:\n           content:\n             application/json:\n               schema:\n-                $ref: '#/components/schemas/WorkflowVersion'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f258b07a2211074690b7eded772bd08249687b0a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyOTE4NTQ4", "url": "https://github.com/dockstore/dockstore/pull/3931#pullrequestreview-532918548", "createdAt": "2020-11-18T00:18:53Z", "commit": {"oid": "f258b07a2211074690b7eded772bd08249687b0a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDoxODo1M1rOH1QyYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDozNDozNVrOH1RIew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYxMTYxNw==", "bodyText": "I don't know ES terminology very well, but it seems like you're querying an index, not submitting one.", "url": "https://github.com/dockstore/dockstore/pull/3931#discussion_r525611617", "createdAt": "2020-11-18T00:18:53Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/proposedGA4GH/ToolsApiExtendedServiceImpl.java", "diffHunk": "@@ -290,4 +274,41 @@ private void deleteIndex(RestClient restClient, String index) {\n             LOG.warn(\"Could not delete previous elastic search \" + index + \" index, not an issue if this is cold start\", e);\n         }\n     }\n+\n+    private Response searchIndex(String query, MultivaluedMap<String, String> queryParameters, String index) {\n+        if (!config.getEsConfiguration().getHostname().isEmpty()) {\n+            try (RestClient restClient = RestClient\n+                    .builder(new HttpHost(config.getEsConfiguration().getHostname(), config.getEsConfiguration().getPort(), \"http\"))\n+                    .build()) {\n+                HttpEntity entity = query == null ? null : new NStringEntity(query, ContentType.APPLICATION_JSON);\n+                Map<String, String> parameters = new HashMap<>();\n+                // TODO: note that this is lossy if there are repeated parameters\n+                // but it looks like the elastic search http client classes don't handle it\n+                if (queryParameters != null) {\n+                    queryParameters.forEach((key, value) -> parameters.put(key, value.get(0)));\n+                }\n+                org.elasticsearch.client.Response get = restClient.performRequest(\"GET\", \"/\" + index + \"/_search\", parameters, entity);\n+                if (get.getStatusLine().getStatusCode() != HttpStatus.SC_OK) {\n+                    throw new CustomWebApplicationException(\"Could not submit \" + index + \"index to elastic search\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f258b07a2211074690b7eded772bd08249687b0a"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYxNzI3NQ==", "bodyText": "This is minor, but since we someday might have dedicated indexes for services and/or notebooks, I would move this up to the top along with constants for tools and workflows. Actually it looks like you also have the index names in ElasticListener -- the index names should be defined once, ideally.", "url": "https://github.com/dockstore/dockstore/pull/3931#discussion_r525617275", "createdAt": "2020-11-18T00:34:35Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/proposedGA4GH/ToolsApiExtendedServiceImpl.java", "diffHunk": "@@ -197,41 +197,25 @@ public Response toolsIndexGet(SecurityContext securityContext) {\n         return Response.ok().entity(0).build();\n     }\n \n+    @Override\n+    public Response entriesIndexSearch(String query, MultivaluedMap<String, String> queryParameters, SecurityContext securityContext) {\n+        final String index = \"tools,workflows\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f258b07a2211074690b7eded772bd08249687b0a"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5e0ff15a32a0b7006321ad0da994f37128702c4", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/d5e0ff15a32a0b7006321ad0da994f37128702c4", "committedDate": "2020-11-18T21:59:06Z", "message": "back to one search endpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61a5cd2162834752bd3912997fec6520496129b1", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/61a5cd2162834752bd3912997fec6520496129b1", "committedDate": "2020-11-19T20:08:41Z", "message": "change ES index settings, update test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae39f265f7e98ac9ad6092330d1c8ea490a86783", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/ae39f265f7e98ac9ad6092330d1c8ea490a86783", "committedDate": "2020-11-19T20:12:40Z", "message": "Merge branch 'develop' into feature/1781/elasticsearch7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0757aa669cdce28e3a49d90636766d1e8818b637", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/0757aa669cdce28e3a49d90636766d1e8818b637", "committedDate": "2020-11-19T21:25:58Z", "message": "update endpoints for update and bulk update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95da927ad090b4d15d61a6f3c198373a319b0f90", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/95da927ad090b4d15d61a6f3c198373a319b0f90", "committedDate": "2020-11-19T21:26:09Z", "message": "Merge branch 'feature/1781/elasticsearch7' of github.com:dockstore/dockstore into feature/1781/elasticsearch7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be429c79ad43457a71a2a7d2e833ddf355a5cac5", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/be429c79ad43457a71a2a7d2e833ddf355a5cac5", "committedDate": "2020-11-20T15:31:33Z", "message": "Merge branch 'develop' into feature/1781/elasticsearch7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a9e2702500e0392fcbbabde0b93a7952fead650", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/3a9e2702500e0392fcbbabde0b93a7952fead650", "committedDate": "2020-11-24T20:52:19Z", "message": "Merge branch 'develop' into feature/1781/elasticsearch7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3115b79534433ca99ddd7a8e19472155f214ef31", "author": {"user": {"login": "denis-yuen", "name": "Denis Yuen"}}, "url": "https://github.com/dockstore/dockstore/commit/3115b79534433ca99ddd7a8e19472155f214ef31", "committedDate": "2020-11-25T15:17:42Z", "message": "Merge branch 'develop' into feature/1781/elasticsearch7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c90f3b2c75819ef384b5e161dd00f6501fec593", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/1c90f3b2c75819ef384b5e161dd00f6501fec593", "committedDate": "2020-11-25T16:24:12Z", "message": "random commit for circleci"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2588b24e608833fc43d739c222cbac8c520e05b6", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/2588b24e608833fc43d739c222cbac8c520e05b6", "committedDate": "2020-11-25T17:52:43Z", "message": "Merge branch 'develop' into feature/1781/elasticsearch7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da525848f349c086c53f85992ca93d3f1cce21fd", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/da525848f349c086c53f85992ca93d3f1cce21fd", "committedDate": "2020-11-25T17:53:31Z", "message": "commit for circleci"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4Nzg5ODcz", "url": "https://github.com/dockstore/dockstore/pull/3931#pullrequestreview-538789873", "createdAt": "2020-11-25T19:22:45Z", "commit": {"oid": "da525848f349c086c53f85992ca93d3f1cce21fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOToyMjo0NVrOH6BC6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOToyMjo0NVrOH6BC6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5NjU4Nw==", "bodyText": "Hmm...\n\nIs it returning two arrays?\nIs it returning one with multiple types?\nPerhaps it should return just the number of tools/workflows\nMaybe it should just not return any body, just a 200", "url": "https://github.com/dockstore/dockstore/pull/3931#discussion_r530596587", "createdAt": "2020-11-25T19:22:45Z", "author": {"login": "garyluu"}, "path": "dockstore-webservice/src/main/resources/swagger.yaml", "diffHunk": "@@ -541,15 +541,16 @@ paths:\n     post:\n       tags:\n       - \"extendedGA4GH\"\n-      summary: \"Update the index of tools\"\n-      description: \"This endpoint updates the index for all published tools and workflows.\"\n+      summary: \"Update the workflows and tools indices\"\n+      description: \"This endpoint updates the indices for all published tools and\\\n+        \\ workflows.\"\n       operationId: \"toolsIndexGet\"\n       produces:\n       - \"text/plain\"\n       parameters: []\n       responses:\n         200:\n-          description: \"An array of Tools of the input organization.\"\n+          description: \"An array of Tools and an array of Workflows.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da525848f349c086c53f85992ca93d3f1cce21fd"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4Nzg5MTAz", "url": "https://github.com/dockstore/dockstore/pull/3931#pullrequestreview-538789103", "createdAt": "2020-11-25T19:21:23Z", "commit": {"oid": "da525848f349c086c53f85992ca93d3f1cce21fd"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOToyMToyNFrOH6BAaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOToyNjozMFrOH6BJxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5NTk0Nw==", "bodyText": "Does the new ES take longer to start up?\nA more reliable way would be to run a command against the container, but probably not worth the effort. I think this is only called for a few tests. But if it's called by every test, it's going to significantly increase our build time (100 tests * 10 seconds) = 16 minutes (although we run in parallel).", "url": "https://github.com/dockstore/dockstore/pull/3931#discussion_r530595947", "createdAt": "2020-11-25T19:21:24Z", "author": {"login": "coverbeck"}, "path": "dockstore-integration-testing/src/test/java/io/dockstore/common/CommonTestUtilities.java", "diffHunk": "@@ -357,9 +357,9 @@ public static void restartElasticsearch() throws Exception {\n             Container container = elasticsearch.get();\n             try {\n                 docker.restartContainer(container.id());\n-                // Wait 15 seconds for elasticsearch to become ready\n+                // Wait 25 seconds for elasticsearch to become ready\n                 // TODO: Replace with better wait\n-                Thread.sleep(15000);\n+                Thread.sleep(25000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da525848f349c086c53f85992ca93d3f1cce21fd"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU5ODM0Mg==", "bodyText": "I'd probably make these public and reference them from dockstore-webservice/src/main/java/io/dockstore/webservice/resources/proposedGA4GH/ToolsApiExtendedServiceImpl.java.", "url": "https://github.com/dockstore/dockstore/pull/3931#discussion_r530598342", "createdAt": "2020-11-25T19:26:30Z", "author": {"login": "coverbeck"}, "path": "dockstore-webservice/src/main/java/io/dockstore/webservice/helpers/statelisteners/ElasticListener.java", "diffHunk": "@@ -63,6 +63,8 @@\n     private static final Logger LOGGER = LoggerFactory.getLogger(ElasticListener.class);\n     private static final ObjectMapper MAPPER = Jackson.newObjectMapper();\n     private static final String MAPPER_ERROR = \"Could not convert Dockstore entry to Elasticsearch object\";\n+    private static final String TOOLS_INDEX = \"tools\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da525848f349c086c53f85992ca93d3f1cce21fd"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9066e17f047176c4c045b0d7f1e2d5352f4773e3", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/9066e17f047176c4c045b0d7f1e2d5352f4773e3", "committedDate": "2020-11-25T20:00:24Z", "message": "changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5NTQ4NTQ1", "url": "https://github.com/dockstore/dockstore/pull/3931#pullrequestreview-539548545", "createdAt": "2020-11-26T21:03:32Z", "commit": {"oid": "9066e17f047176c4c045b0d7f1e2d5352f4773e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5NTUwNzcy", "url": "https://github.com/dockstore/dockstore/pull/3931#pullrequestreview-539550772", "createdAt": "2020-11-26T21:13:13Z", "commit": {"oid": "9066e17f047176c4c045b0d7f1e2d5352f4773e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae5281f8a47c9508318a3d3e86f41891c5da9dbc", "author": {"user": {"login": "denis-yuen", "name": "Denis Yuen"}}, "url": "https://github.com/dockstore/dockstore/commit/ae5281f8a47c9508318a3d3e86f41891c5da9dbc", "committedDate": "2020-11-26T21:13:19Z", "message": "Merge branch 'develop' into feature/1781/elasticsearch7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a92fc7695bfe91cc445c5f2cab11cdebfb60581", "author": {"user": {"login": "nrzhao4", "name": "Nina Zhao"}}, "url": "https://github.com/dockstore/dockstore/commit/0a92fc7695bfe91cc445c5f2cab11cdebfb60581", "committedDate": "2020-12-01T15:42:15Z", "message": "Merge branch 'develop' into feature/1781/elasticsearch7"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1627, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}