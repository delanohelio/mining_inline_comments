{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MzgyMzI2", "number": 3940, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNTozMTo0NFrOEu4aJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjozNTo0MVrOFFa8Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTk0MTQ4OnYy", "diffSide": "LEFT", "path": "dolphinscheduler-ui/src/js/conf/home/pages/security/pages/tenement/_source/createTenement.vue", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNTozMTo0NFrOHjiA_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxMzoyNTo0NFrOHjp6ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAxOTUxNw==", "bodyText": "why remove\uff1f", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r507019517", "createdAt": "2020-10-18T05:31:44Z", "author": {"login": "zhuangchong"}, "path": "dolphinscheduler-ui/src/js/conf/home/pages/security/pages/tenement/_source/createTenement.vue", "diffHunk": "@@ -146,13 +146,6 @@\n           this.$message.warning(`${i18n.$t('Please enter name')}`)\n           return false\n         }\n-        // Verify tenant name cannot contain special characters\n-        let isSpecial = /[~#^$@%&!*()<>\u300a\u300b:;'\"{}\u3010\u3011\t]/gi\n-        if (isSpecial.test(this.tenantName)) {\n-          this.$message.warning(`${i18n.$t('Please enter tenant name without special characters')}`)\n-          return false\n-        }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fd1039260abba1ec40a5483459b31ceed4ce053"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE0ODk4Ng==", "bodyText": "Corrected back\uff01", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r507148986", "createdAt": "2020-10-18T13:25:44Z", "author": {"login": "hermeshephaestus"}, "path": "dolphinscheduler-ui/src/js/conf/home/pages/security/pages/tenement/_source/createTenement.vue", "diffHunk": "@@ -146,13 +146,6 @@\n           this.$message.warning(`${i18n.$t('Please enter name')}`)\n           return false\n         }\n-        // Verify tenant name cannot contain special characters\n-        let isSpecial = /[~#^$@%&!*()<>\u300a\u300b:;'\"{}\u3010\u3011\t]/gi\n-        if (isSpecial.test(this.tenantName)) {\n-          this.$message.warning(`${i18n.$t('Please enter tenant name without special characters')}`)\n-          return false\n-        }\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAxOTUxNw=="}, "originalCommit": {"oid": "2fd1039260abba1ec40a5483459b31ceed4ce053"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTk0MjEyOnYy", "diffSide": "LEFT", "path": "dolphinscheduler-ui/src/js/module/i18n/locale/zh_CN.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNTozMjozMlrOHjiBQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxMzoyNTo0OVrOHjp63g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAxOTU4NQ==", "bodyText": "why remove?", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r507019585", "createdAt": "2020-10-18T05:32:32Z", "author": {"login": "zhuangchong"}, "path": "dolphinscheduler-ui/src/js/module/i18n/locale/zh_CN.js", "diffHunk": "@@ -189,7 +189,6 @@ export default {\n   Queue: 'Yarn \u961f\u5217',\n   'Please enter the tenant code in English': '\u8bf7\u8f93\u5165\u79df\u6237\u7f16\u7801\u53ea\u5141\u8bb8\u82f1\u6587',\n   'Please enter tenant code in English': '\u8bf7\u8f93\u5165\u82f1\u6587\u79df\u6237\u7f16\u7801',\n-  'Please enter tenant name without special characters': '\u8bf7\u8f93\u5165\u4e0d\u5305\u542b\u7279\u6b8a\u5b57\u7b26\u7684\u79df\u6237\u540d\u79f0',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fd1039260abba1ec40a5483459b31ceed4ce053"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE0OTAyMg==", "bodyText": "Corrected back", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r507149022", "createdAt": "2020-10-18T13:25:49Z", "author": {"login": "hermeshephaestus"}, "path": "dolphinscheduler-ui/src/js/module/i18n/locale/zh_CN.js", "diffHunk": "@@ -189,7 +189,6 @@ export default {\n   Queue: 'Yarn \u961f\u5217',\n   'Please enter the tenant code in English': '\u8bf7\u8f93\u5165\u79df\u6237\u7f16\u7801\u53ea\u5141\u8bb8\u82f1\u6587',\n   'Please enter tenant code in English': '\u8bf7\u8f93\u5165\u82f1\u6587\u79df\u6237\u7f16\u7801',\n-  'Please enter tenant name without special characters': '\u8bf7\u8f93\u5165\u4e0d\u5305\u542b\u7279\u6b8a\u5b57\u7b26\u7684\u79df\u6237\u540d\u79f0',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAxOTU4NQ=="}, "originalCommit": {"oid": "2fd1039260abba1ec40a5483459b31ceed4ce053"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3Nzk3MzA4OnYy", "diffSide": "LEFT", "path": "dolphinscheduler-ui/src/js/module/i18n/locale/en_US.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwMTo1NzoxNVrOHj10nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwODoxNjozN1rOHnpewQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzM0NDAyOA==", "bodyText": "This file modification should have nothing to do with this PR.", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r507344028", "createdAt": "2020-10-19T01:57:15Z", "author": {"login": "zhuangchong"}, "path": "dolphinscheduler-ui/src/js/module/i18n/locale/en_US.js", "diffHunk": "@@ -187,7 +187,6 @@ export default {\n   'Please select a queue': 'default is tenant association queue',\n   'Please enter the tenant code in English': 'Please enter the tenant code in English',\n   'Please enter tenant code in English': 'Please enter tenant code in English',\n-  'Please enter tenant name without special characters': 'Please enter tenant name without special characters',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2f7a4e62173b6a965defc19d86a73af18d43fe5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMzNjEyOQ==", "bodyText": "Corrected back\uff01", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r511336129", "createdAt": "2020-10-24T08:16:37Z", "author": {"login": "hermeshephaestus"}, "path": "dolphinscheduler-ui/src/js/module/i18n/locale/en_US.js", "diffHunk": "@@ -187,7 +187,6 @@ export default {\n   'Please select a queue': 'default is tenant association queue',\n   'Please enter the tenant code in English': 'Please enter the tenant code in English',\n   'Please enter tenant code in English': 'Please enter tenant code in English',\n-  'Please enter tenant name without special characters': 'Please enter tenant name without special characters',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzM0NDAyOA=="}, "originalCommit": {"oid": "c2f7a4e62173b6a965defc19d86a73af18d43fe5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzg0MDQ0OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/WorkFlowLineageMapper.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDoyNDoyN1rOH643kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDoyNDoyN1rOH643kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUxMTE4Nw==", "bodyText": "Should keep the original format.", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r531511187", "createdAt": "2020-11-27T10:24:27Z", "author": {"login": "wen-hemin"}, "path": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/WorkFlowLineageMapper.xml", "diffHunk": "@@ -24,23 +24,24 @@\n         left join t_ds_schedules tes on tepd.id = tes.process_definition_id\n         where tepd.project_id = #{projectId}\n         <if test=\"searchVal != null and searchVal != ''\">\n-            and  tepd.name like concat('%', #{searchVal}, '%')\n+            and tepd.name like concat('%', #{searchVal}, '%')\n         </if>\n     </select>\n     <select id=\"queryByIds\" resultType=\"org.apache.dolphinscheduler.dao.entity.WorkFlowLineage\" databaseId=\"mysql\">\n         select tepd.id as work_flow_id,tepd.name as work_flow_name,\n-               (case when json_extract(tepd.process_definition_json, '$**.dependItemList') is not null then 1 else 0 end) as is_depend_work_flow,\n-                          json_extract(tepd.process_definition_json, '$**.definitionId') as source_work_flow_id,\n-                          tepd.release_state as work_flow_publish_status,\n-                          tes.start_time as schedule_start_time,\n-                          tes.end_time as schedule_end_time,\n-                          tes.crontab as crontab,\n-                          tes.release_state as schedule_publish_status\n+        (case when json_extract(tepd.process_definition_json, '$**.dependItemList') is not null then 1 else 0 end) as", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6e999879647899eb3a982a25785054312d79bd"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzg0MjA3OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/WorkFlowLineageMapper.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDoyNDo1NlrOH644kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMTowMzoyOVrOH66OsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUxMTQ0MQ==", "bodyText": "Should keep the original format.", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r531511441", "createdAt": "2020-11-27T10:24:56Z", "author": {"login": "wen-hemin"}, "path": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/WorkFlowLineageMapper.xml", "diffHunk": "@@ -24,23 +24,24 @@\n         left join t_ds_schedules tes on tepd.id = tes.process_definition_id\n         where tepd.project_id = #{projectId}\n         <if test=\"searchVal != null and searchVal != ''\">\n-            and  tepd.name like concat('%', #{searchVal}, '%')\n+            and tepd.name like concat('%', #{searchVal}, '%')\n         </if>\n     </select>\n     <select id=\"queryByIds\" resultType=\"org.apache.dolphinscheduler.dao.entity.WorkFlowLineage\" databaseId=\"mysql\">\n         select tepd.id as work_flow_id,tepd.name as work_flow_name,\n-               (case when json_extract(tepd.process_definition_json, '$**.dependItemList') is not null then 1 else 0 end) as is_depend_work_flow,\n-                          json_extract(tepd.process_definition_json, '$**.definitionId') as source_work_flow_id,\n-                          tepd.release_state as work_flow_publish_status,\n-                          tes.start_time as schedule_start_time,\n-                          tes.end_time as schedule_end_time,\n-                          tes.crontab as crontab,\n-                          tes.release_state as schedule_publish_status\n+        (case when json_extract(tepd.process_definition_json, '$**.dependItemList') is not null then 1 else 0 end) as\n+        is_depend_work_flow,\n+        json_extract(tepd.process_definition_json, '$**.definitionId') as source_work_flow_id,\n+        tepd.release_state as work_flow_publish_status,\n+        tes.start_time as schedule_start_time,\n+        tes.end_time as schedule_end_time,\n+        tes.crontab as crontab,\n+        tes.release_state as schedule_publish_status", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6e999879647899eb3a982a25785054312d79bd"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUzMzQ4OA==", "bodyText": "just remain this!", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r531533488", "createdAt": "2020-11-27T11:03:29Z", "author": {"login": "hermeshephaestus"}, "path": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/WorkFlowLineageMapper.xml", "diffHunk": "@@ -24,23 +24,24 @@\n         left join t_ds_schedules tes on tepd.id = tes.process_definition_id\n         where tepd.project_id = #{projectId}\n         <if test=\"searchVal != null and searchVal != ''\">\n-            and  tepd.name like concat('%', #{searchVal}, '%')\n+            and tepd.name like concat('%', #{searchVal}, '%')\n         </if>\n     </select>\n     <select id=\"queryByIds\" resultType=\"org.apache.dolphinscheduler.dao.entity.WorkFlowLineage\" databaseId=\"mysql\">\n         select tepd.id as work_flow_id,tepd.name as work_flow_name,\n-               (case when json_extract(tepd.process_definition_json, '$**.dependItemList') is not null then 1 else 0 end) as is_depend_work_flow,\n-                          json_extract(tepd.process_definition_json, '$**.definitionId') as source_work_flow_id,\n-                          tepd.release_state as work_flow_publish_status,\n-                          tes.start_time as schedule_start_time,\n-                          tes.end_time as schedule_end_time,\n-                          tes.crontab as crontab,\n-                          tes.release_state as schedule_publish_status\n+        (case when json_extract(tepd.process_definition_json, '$**.dependItemList') is not null then 1 else 0 end) as\n+        is_depend_work_flow,\n+        json_extract(tepd.process_definition_json, '$**.definitionId') as source_work_flow_id,\n+        tepd.release_state as work_flow_publish_status,\n+        tes.start_time as schedule_start_time,\n+        tes.end_time as schedule_end_time,\n+        tes.crontab as crontab,\n+        tes.release_state as schedule_publish_status", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUxMTQ0MQ=="}, "originalCommit": {"oid": "3c6e999879647899eb3a982a25785054312d79bd"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzg0MjY0OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/WorkFlowLineageMapper.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDoyNTowNVrOH6444g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMTowMzozNVrOH66O7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUxMTUyMg==", "bodyText": "Should keep the original format.", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r531511522", "createdAt": "2020-11-27T10:25:05Z", "author": {"login": "wen-hemin"}, "path": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/WorkFlowLineageMapper.xml", "diffHunk": "@@ -49,39 +50,42 @@\n \n     <select id=\"queryByIds\" resultType=\"org.apache.dolphinscheduler.dao.entity.WorkFlowLineage\" databaseId=\"pg\">\n         select a.work_flow_id,\n-               a.work_flow_name,\n-               a.is_depend_work_flow,\n-               array_agg(a.source_id) as source_id,\n-               a.work_flow_publish_status,\n-               a.schedule_start_time,\n-               a.schedule_end_time,\n-               a.crontab,\n-               a.schedule_publish_status\n-         from (\n-               select tepd.id as work_flow_id,tepd.name as work_flow_name,\n-                      case when tepd.process_definition_json::json#>'{tasks,1,dependence}' is not null then 1 else 0 end as is_depend_work_flow,\n-                      (json_array_elements(tepd.process_definition_json::json#>'{tasks}')#>>'{dependence,dependTaskList,0,dependItemList,0,definitionId}') as source_id,\n-                      tepd.release_state as work_flow_publish_status,\n-                      tes.start_time as schedule_start_time,\n-                      tes.end_time as schedule_end_time,\n-                      tes.crontab as crontab,\n-                      tes.release_state as schedule_publish_status\n-                 from t_ds_process_definition tepd\n-                 left join t_ds_schedules tes on tepd.id = tes.process_definition_id\n-                 where tepd.project_id = #{projectId}\n-                 <if test=\"ids != null and ids.size()>0\">\n-                     and  tepd.id in\n-                     <foreach collection=\"ids\" index=\"index\" item=\"i\" open=\"(\" separator=\",\" close=\")\">\n-                     #{i}\n-                     </foreach>\n-                </if>\n-             ) a\n+        a.work_flow_name,\n+        a.is_depend_work_flow,\n+        array_agg(a.source_id) as source_id,\n+        a.work_flow_publish_status,\n+        a.schedule_start_time,\n+        a.schedule_end_time,\n+        a.crontab,\n+        a.schedule_publish_status\n+        from (\n+        select tepd.id as work_flow_id,tepd.name as work_flow_name,\n+        case when tepd.process_definition_json::json#>'{tasks,1,dependence}' is not null then 1 else 0 end as\n+        is_depend_work_flow,\n+        (json_array_elements(tepd.process_definition_json::json#>'{tasks}')#>>'{dependence,dependTaskList,0,dependItemList,0,definitionId}')\n+        as source_id,\n+        tepd.release_state as work_flow_publish_status,\n+        tes.start_time as schedule_start_time,\n+        tes.end_time as schedule_end_time,\n+        tes.crontab as crontab,\n+        tes.release_state as schedule_publish_status\n+        from t_ds_process_definition tepd\n+        left join t_ds_schedules tes on tepd.id = tes.process_definition_id\n+        where tepd.project_id = #{projectId}\n+        <if test=\"ids != null and ids.size()>0\">\n+            and tepd.id in\n+            <foreach collection=\"ids\" index=\"index\" item=\"i\" open=\"(\" separator=\",\" close=\")\">\n+                #{i}\n+            </foreach>\n+        </if>\n+        ) a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6e999879647899eb3a982a25785054312d79bd"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUzMzU1MQ==", "bodyText": "just remain this!", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r531533551", "createdAt": "2020-11-27T11:03:35Z", "author": {"login": "hermeshephaestus"}, "path": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/WorkFlowLineageMapper.xml", "diffHunk": "@@ -49,39 +50,42 @@\n \n     <select id=\"queryByIds\" resultType=\"org.apache.dolphinscheduler.dao.entity.WorkFlowLineage\" databaseId=\"pg\">\n         select a.work_flow_id,\n-               a.work_flow_name,\n-               a.is_depend_work_flow,\n-               array_agg(a.source_id) as source_id,\n-               a.work_flow_publish_status,\n-               a.schedule_start_time,\n-               a.schedule_end_time,\n-               a.crontab,\n-               a.schedule_publish_status\n-         from (\n-               select tepd.id as work_flow_id,tepd.name as work_flow_name,\n-                      case when tepd.process_definition_json::json#>'{tasks,1,dependence}' is not null then 1 else 0 end as is_depend_work_flow,\n-                      (json_array_elements(tepd.process_definition_json::json#>'{tasks}')#>>'{dependence,dependTaskList,0,dependItemList,0,definitionId}') as source_id,\n-                      tepd.release_state as work_flow_publish_status,\n-                      tes.start_time as schedule_start_time,\n-                      tes.end_time as schedule_end_time,\n-                      tes.crontab as crontab,\n-                      tes.release_state as schedule_publish_status\n-                 from t_ds_process_definition tepd\n-                 left join t_ds_schedules tes on tepd.id = tes.process_definition_id\n-                 where tepd.project_id = #{projectId}\n-                 <if test=\"ids != null and ids.size()>0\">\n-                     and  tepd.id in\n-                     <foreach collection=\"ids\" index=\"index\" item=\"i\" open=\"(\" separator=\",\" close=\")\">\n-                     #{i}\n-                     </foreach>\n-                </if>\n-             ) a\n+        a.work_flow_name,\n+        a.is_depend_work_flow,\n+        array_agg(a.source_id) as source_id,\n+        a.work_flow_publish_status,\n+        a.schedule_start_time,\n+        a.schedule_end_time,\n+        a.crontab,\n+        a.schedule_publish_status\n+        from (\n+        select tepd.id as work_flow_id,tepd.name as work_flow_name,\n+        case when tepd.process_definition_json::json#>'{tasks,1,dependence}' is not null then 1 else 0 end as\n+        is_depend_work_flow,\n+        (json_array_elements(tepd.process_definition_json::json#>'{tasks}')#>>'{dependence,dependTaskList,0,dependItemList,0,definitionId}')\n+        as source_id,\n+        tepd.release_state as work_flow_publish_status,\n+        tes.start_time as schedule_start_time,\n+        tes.end_time as schedule_end_time,\n+        tes.crontab as crontab,\n+        tes.release_state as schedule_publish_status\n+        from t_ds_process_definition tepd\n+        left join t_ds_schedules tes on tepd.id = tes.process_definition_id\n+        where tepd.project_id = #{projectId}\n+        <if test=\"ids != null and ids.size()>0\">\n+            and tepd.id in\n+            <foreach collection=\"ids\" index=\"index\" item=\"i\" open=\"(\" separator=\",\" close=\")\">\n+                #{i}\n+            </foreach>\n+        </if>\n+        ) a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUxMTUyMg=="}, "originalCommit": {"oid": "3c6e999879647899eb3a982a25785054312d79bd"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzg0NDMyOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/WorkFlowLineageMapper.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDoyNToyOFrOH645ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMTowMzo0MVrOH66PKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUxMTc0Nw==", "bodyText": "Should keep the original format.", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r531511747", "createdAt": "2020-11-27T10:25:28Z", "author": {"login": "wen-hemin"}, "path": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/WorkFlowLineageMapper.xml", "diffHunk": "@@ -49,39 +50,42 @@\n \n     <select id=\"queryByIds\" resultType=\"org.apache.dolphinscheduler.dao.entity.WorkFlowLineage\" databaseId=\"pg\">\n         select a.work_flow_id,\n-               a.work_flow_name,\n-               a.is_depend_work_flow,\n-               array_agg(a.source_id) as source_id,\n-               a.work_flow_publish_status,\n-               a.schedule_start_time,\n-               a.schedule_end_time,\n-               a.crontab,\n-               a.schedule_publish_status\n-         from (\n-               select tepd.id as work_flow_id,tepd.name as work_flow_name,\n-                      case when tepd.process_definition_json::json#>'{tasks,1,dependence}' is not null then 1 else 0 end as is_depend_work_flow,\n-                      (json_array_elements(tepd.process_definition_json::json#>'{tasks}')#>>'{dependence,dependTaskList,0,dependItemList,0,definitionId}') as source_id,\n-                      tepd.release_state as work_flow_publish_status,\n-                      tes.start_time as schedule_start_time,\n-                      tes.end_time as schedule_end_time,\n-                      tes.crontab as crontab,\n-                      tes.release_state as schedule_publish_status\n-                 from t_ds_process_definition tepd\n-                 left join t_ds_schedules tes on tepd.id = tes.process_definition_id\n-                 where tepd.project_id = #{projectId}\n-                 <if test=\"ids != null and ids.size()>0\">\n-                     and  tepd.id in\n-                     <foreach collection=\"ids\" index=\"index\" item=\"i\" open=\"(\" separator=\",\" close=\")\">\n-                     #{i}\n-                     </foreach>\n-                </if>\n-             ) a\n+        a.work_flow_name,\n+        a.is_depend_work_flow,\n+        array_agg(a.source_id) as source_id,\n+        a.work_flow_publish_status,\n+        a.schedule_start_time,\n+        a.schedule_end_time,\n+        a.crontab,\n+        a.schedule_publish_status\n+        from (\n+        select tepd.id as work_flow_id,tepd.name as work_flow_name,\n+        case when tepd.process_definition_json::json#>'{tasks,1,dependence}' is not null then 1 else 0 end as\n+        is_depend_work_flow,\n+        (json_array_elements(tepd.process_definition_json::json#>'{tasks}')#>>'{dependence,dependTaskList,0,dependItemList,0,definitionId}')\n+        as source_id,\n+        tepd.release_state as work_flow_publish_status,\n+        tes.start_time as schedule_start_time,\n+        tes.end_time as schedule_end_time,\n+        tes.crontab as crontab,\n+        tes.release_state as schedule_publish_status\n+        from t_ds_process_definition tepd\n+        left join t_ds_schedules tes on tepd.id = tes.process_definition_id\n+        where tepd.project_id = #{projectId}\n+        <if test=\"ids != null and ids.size()>0\">\n+            and tepd.id in\n+            <foreach collection=\"ids\" index=\"index\" item=\"i\" open=\"(\" separator=\",\" close=\")\">\n+                #{i}\n+            </foreach>\n+        </if>\n+        ) a\n         where (a.is_depend_work_flow = 1 and source_id is not null) or (a.is_depend_work_flow = 0)\n         group by a.work_flow_id,a.work_flow_name,a.is_depend_work_flow,a.work_flow_publish_status,a.schedule_start_time,\n-                 a.schedule_end_time,a.crontab,a.schedule_publish_status\n+        a.schedule_end_time,a.crontab,a.schedule_publish_status", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6e999879647899eb3a982a25785054312d79bd"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUzMzYwOA==", "bodyText": "just remain this!", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r531533608", "createdAt": "2020-11-27T11:03:41Z", "author": {"login": "hermeshephaestus"}, "path": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/WorkFlowLineageMapper.xml", "diffHunk": "@@ -49,39 +50,42 @@\n \n     <select id=\"queryByIds\" resultType=\"org.apache.dolphinscheduler.dao.entity.WorkFlowLineage\" databaseId=\"pg\">\n         select a.work_flow_id,\n-               a.work_flow_name,\n-               a.is_depend_work_flow,\n-               array_agg(a.source_id) as source_id,\n-               a.work_flow_publish_status,\n-               a.schedule_start_time,\n-               a.schedule_end_time,\n-               a.crontab,\n-               a.schedule_publish_status\n-         from (\n-               select tepd.id as work_flow_id,tepd.name as work_flow_name,\n-                      case when tepd.process_definition_json::json#>'{tasks,1,dependence}' is not null then 1 else 0 end as is_depend_work_flow,\n-                      (json_array_elements(tepd.process_definition_json::json#>'{tasks}')#>>'{dependence,dependTaskList,0,dependItemList,0,definitionId}') as source_id,\n-                      tepd.release_state as work_flow_publish_status,\n-                      tes.start_time as schedule_start_time,\n-                      tes.end_time as schedule_end_time,\n-                      tes.crontab as crontab,\n-                      tes.release_state as schedule_publish_status\n-                 from t_ds_process_definition tepd\n-                 left join t_ds_schedules tes on tepd.id = tes.process_definition_id\n-                 where tepd.project_id = #{projectId}\n-                 <if test=\"ids != null and ids.size()>0\">\n-                     and  tepd.id in\n-                     <foreach collection=\"ids\" index=\"index\" item=\"i\" open=\"(\" separator=\",\" close=\")\">\n-                     #{i}\n-                     </foreach>\n-                </if>\n-             ) a\n+        a.work_flow_name,\n+        a.is_depend_work_flow,\n+        array_agg(a.source_id) as source_id,\n+        a.work_flow_publish_status,\n+        a.schedule_start_time,\n+        a.schedule_end_time,\n+        a.crontab,\n+        a.schedule_publish_status\n+        from (\n+        select tepd.id as work_flow_id,tepd.name as work_flow_name,\n+        case when tepd.process_definition_json::json#>'{tasks,1,dependence}' is not null then 1 else 0 end as\n+        is_depend_work_flow,\n+        (json_array_elements(tepd.process_definition_json::json#>'{tasks}')#>>'{dependence,dependTaskList,0,dependItemList,0,definitionId}')\n+        as source_id,\n+        tepd.release_state as work_flow_publish_status,\n+        tes.start_time as schedule_start_time,\n+        tes.end_time as schedule_end_time,\n+        tes.crontab as crontab,\n+        tes.release_state as schedule_publish_status\n+        from t_ds_process_definition tepd\n+        left join t_ds_schedules tes on tepd.id = tes.process_definition_id\n+        where tepd.project_id = #{projectId}\n+        <if test=\"ids != null and ids.size()>0\">\n+            and tepd.id in\n+            <foreach collection=\"ids\" index=\"index\" item=\"i\" open=\"(\" separator=\",\" close=\")\">\n+                #{i}\n+            </foreach>\n+        </if>\n+        ) a\n         where (a.is_depend_work_flow = 1 and source_id is not null) or (a.is_depend_work_flow = 0)\n         group by a.work_flow_id,a.work_flow_name,a.is_depend_work_flow,a.work_flow_publish_status,a.schedule_start_time,\n-                 a.schedule_end_time,a.crontab,a.schedule_publish_status\n+        a.schedule_end_time,a.crontab,a.schedule_publish_status", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUxMTc0Nw=="}, "originalCommit": {"oid": "3c6e999879647899eb3a982a25785054312d79bd"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzg0NTMzOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-ui/src/js/conf/home/pages/security/pages/tenement/_source/createTenement.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDoyNTo0M1rOH646Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMTowMjozNlrOH66NFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUxMTkxMQ==", "bodyText": "Should keep the original format.", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r531511911", "createdAt": "2020-11-27T10:25:43Z", "author": {"login": "wen-hemin"}, "path": "dolphinscheduler-ui/src/js/conf/home/pages/security/pages/tenement/_source/createTenement.vue", "diffHunk": "@@ -1,36 +1,36 @@\n /*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c6e999879647899eb3a982a25785054312d79bd"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUzMzA3Nw==", "bodyText": "Just remain this!", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r531533077", "createdAt": "2020-11-27T11:02:36Z", "author": {"login": "hermeshephaestus"}, "path": "dolphinscheduler-ui/src/js/conf/home/pages/security/pages/tenement/_source/createTenement.vue", "diffHunk": "@@ -1,36 +1,36 @@\n /*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUxMTkxMQ=="}, "originalCommit": {"oid": "3c6e999879647899eb3a982a25785054312d79bd"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjI4NjA2OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/ProjectMapper.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjozNTo0MVrOIF7JDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjozNTo0MVrOIF7JDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA4Mjc2NQ==", "bodyText": "sql Grammar mistakes", "url": "https://github.com/apache/dolphinscheduler/pull/3940#discussion_r543082765", "createdAt": "2020-12-15T06:35:41Z", "author": {"login": "felix-thinkingdata"}, "path": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/ProjectMapper.xml", "diffHunk": "@@ -50,23 +72,29 @@\n         order by p.create_time desc\n     </select>\n     <select id=\"queryAuthedProjectListByUserId\" resultType=\"org.apache.dolphinscheduler.dao.entity.Project\">\n-        select p.*\n+        select\n+        <include refid=\"baseSqlV2\">\n+            <property name=\"alias\" value=\"p\"/>\n+        </include>\n+        ,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab81e656987ef982d6a943a54ba0c27156f9bec6"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3270, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}