{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNjY5ODAx", "number": 3403, "title": "[Feature-3392][api-server]", "bodyText": "What is the purpose of the pull request\nadd admin activate user api\n#3392\nBrief change log\n\nAdd function to userController and userService\nAdd unit test about new feature\nchange some detail abount user-self register on userService\nchange some return filed about user-self register api and activate user api\n\nVerify this pull request\nThis pull request is already covered by existing tests, such as (please describe tests).\n\nAdded CronUtilsTest to verify the change.\nManually verified the change by testing locally.", "createdAt": "2020-08-04T10:14:56Z", "url": "https://github.com/apache/dolphinscheduler/pull/3403", "merged": true, "mergeCommit": {"oid": "6dc500915c0a45d087c4adc2466d6d2cd1f96e7c"}, "closed": true, "closedAt": "2020-08-05T09:27:56Z", "author": {"login": "cpsky"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyOoPNgH2gAyNDYyNjY5ODAxOjdlMjY4YmZkMzJiNzZiNjFkMmQ3ZTFhZDY0ZmNjNGE0OTE2ZDExYjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc73yWHgFqTQ2MTQ5MzA3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7e268bfd32b76b61d2d7e1ad64fcc4a4916d11b6", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/7e268bfd32b76b61d2d7e1ad64fcc4a4916d11b6", "committedDate": "2020-07-06T10:24:55Z", "message": "Merge remote-tracking branch 'upstream/dev' into dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea9b5e722a26463c10042a1e0c41b49e5a776f0b", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/ea9b5e722a26463c10042a1e0c41b49e5a776f0b", "committedDate": "2020-07-06T10:26:27Z", "message": "Merge remote-tracking branch 'upstream/dev' into dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9abfe0283fa9e49dd823f15331dc347cd2f08f51", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/9abfe0283fa9e49dd823f15331dc347cd2f08f51", "committedDate": "2020-07-07T02:47:57Z", "message": "feature user register\n\nfix bug\n\nfix security problem\n\nfix security problem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d04db11fa6ee8df9d1f00e9e02bb2f3e549c715", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/3d04db11fa6ee8df9d1f00e9e02bb2f3e549c715", "committedDate": "2020-07-08T03:07:50Z", "message": "activate user"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdfd55c3bbad1511c2f693d6d80a2eb47974e7d4", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/bdfd55c3bbad1511c2f693d6d80a2eb47974e7d4", "committedDate": "2020-08-04T08:01:15Z", "message": "fix confilct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c40ddd230a76283c3b52814866ee73ffa5164b5a", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/c40ddd230a76283c3b52814866ee73ffa5164b5a", "committedDate": "2020-08-04T08:02:18Z", "message": "fix confilct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/fd289b3e10438b5c600ae22f391da078ccaf3fec", "committedDate": "2020-08-04T10:02:05Z", "message": "fix confilct and fix some bug"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNjk0ODk5", "url": "https://github.com/apache/dolphinscheduler/pull/3403#pullrequestreview-460694899", "createdAt": "2020-08-04T10:36:59Z", "commit": {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozNzowMFrOG7azQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozNzowMFrOG7azQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1ODI3Mg==", "bodyText": "Suggested change", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464958272", "createdAt": "2020-08-04T10:37:00Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/UsersController.java", "diffHunk": "@@ -50,6 +50,7 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(UsersController.class);\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNjk1MzE4", "url": "https://github.com/apache/dolphinscheduler/pull/3403#pullrequestreview-460695318", "createdAt": "2020-08-04T10:37:43Z", "commit": {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozNzo0NFrOG7a0jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozNzo0NFrOG7a0jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1ODYwNQ==", "bodyText": "Add parameterFormat  to Constants for better performance.", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464958605", "createdAt": "2020-08-04T10:37:44Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/UsersController.java", "diffHunk": "@@ -432,14 +433,36 @@ public Result authorizedUser(@ApiIgnore @RequestAttribute(value = Constants.SESS\n                                @RequestParam(value = \"userPassword\") String userPassword,\n                                @RequestParam(value = \"repeatPassword\") String repeatPassword,\n                                @RequestParam(value = \"email\") String email) throws Exception {\n-        userName = userName.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n-        userPassword = userPassword.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n-        repeatPassword = repeatPassword.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n-        email = email.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n+        String parameterFormat = \"[\\n|\\r|\\t]\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNjk1NjQx", "url": "https://github.com/apache/dolphinscheduler/pull/3403#pullrequestreview-460695641", "createdAt": "2020-08-04T10:38:11Z", "commit": {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozODoxMVrOG7a1fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozODoxMVrOG7a1fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1ODg0Ng==", "bodyText": "Add parameterFormat to Constants for better performance.", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464958846", "createdAt": "2020-08-04T10:38:11Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/UsersController.java", "diffHunk": "@@ -432,14 +433,36 @@ public Result authorizedUser(@ApiIgnore @RequestAttribute(value = Constants.SESS\n                                @RequestParam(value = \"userPassword\") String userPassword,\n                                @RequestParam(value = \"repeatPassword\") String repeatPassword,\n                                @RequestParam(value = \"email\") String email) throws Exception {\n-        userName = userName.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n-        userPassword = userPassword.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n-        repeatPassword = repeatPassword.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n-        email = email.replaceAll(\"[\\n|\\r|\\t]\", \"\");\n+        String parameterFormat = \"[\\n|\\r|\\t]\";\n+        userName = userName.replaceAll(parameterFormat, \"\");\n+        userPassword = userPassword.replaceAll(parameterFormat, \"\");\n+        repeatPassword = repeatPassword.replaceAll(parameterFormat, \"\");\n+        email = email.replaceAll(parameterFormat, \"\");\n         logger.info(\"user self-register, userName: {}, userPassword {}, repeatPassword {}, eamil {}\",\n-                userName, userPassword, repeatPassword, email);\n+                userName, Constants.PASSWORD_DEFAULT, Constants.PASSWORD_DEFAULT, email);\n         Map<String, Object> result = usersService.registerUser(userName, userPassword, repeatPassword, email);\n         return returnDataList(result);\n     }\n \n+    /**\n+     * user activate\n+     *\n+     * @param userName       user name\n+     */\n+    @ApiOperation(value=\"activateUser\",notes = \"ACTIVATE_USER_NOTES\")\n+    @ApiImplicitParams({\n+            @ApiImplicitParam(name = \"userName\", value = \"USER_NAME\", type = \"String\"),\n+    })\n+    @PostMapping(\"/activate\")\n+    @ResponseStatus(HttpStatus.OK)\n+    @ApiException(UPDATE_USER_ERROR)\n+    public Result<Object> activateUser(@ApiIgnore @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n+                                       @RequestParam(value = \"userName\") String userName) {\n+        String parameterFormat = \"[\\n|\\r|\\t]\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNjk2MTc1", "url": "https://github.com/apache/dolphinscheduler/pull/3403#pullrequestreview-460696175", "createdAt": "2020-08-04T10:39:05Z", "commit": {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozOTowNVrOG7a29w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozOTowNVrOG7a29w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1OTIyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, Object> result = new HashMap<>(5);\n          \n          \n            \n                    Map<String, Object> result = new HashMap<>();", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464959223", "createdAt": "2020-08-04T10:39:05Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/UsersService.java", "diffHunk": "@@ -934,10 +936,51 @@ private void copyResourceFiles(ResourceComponent resourceComponent, String srcBa\n             putMsg(result, Status.REQUEST_PARAMS_NOT_VALID_ERROR, \"two passwords are not same\");\n             return result;\n         }\n-\n-        createUser(userName, userPassword, email, 1, \"\", \"\", 0);\n+        User user = createUser(userName, userPassword, email, 1, \"\", \"\", Flag.NO.ordinal());\n         putMsg(result, Status.SUCCESS);\n+        result.put(Constants.DATA_LIST, user);\n         return result;\n     }\n \n+    /**\n+     * activate user, only system admin have permission, change user state code 0 to 1\n+     *\n+     * @param loginUser login user\n+     * @return create result code\n+     */\n+    public Map<String, Object> activateUser(User loginUser, String userName) {\n+        Map<String, Object> result = new HashMap<>(5);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNjk2NDk4", "url": "https://github.com/apache/dolphinscheduler/pull/3403#pullrequestreview-460696498", "createdAt": "2020-08-04T10:39:35Z", "commit": {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozOTozNVrOG7a32g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDozOTozNVrOG7a32g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1OTQ1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    logger.info(mvcResult.getResponse().getContentAsString());\n          \n      \n    \n    \n  \n\nAssert judge is enough.", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464959450", "createdAt": "2020-08-04T10:39:35Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/controller/UsersControllerTest.java", "diffHunk": "@@ -287,4 +287,21 @@ public void testRegisterUser() throws Exception {\n         Assert.assertEquals(Status.SUCCESS.getCode(),result.getCode().intValue());\n         logger.info(mvcResult.getResponse().getContentAsString());\n     }\n+\n+    @Test\n+    public void testActivateUser() throws Exception {\n+        MultiValueMap<String, String> paramsMap = new LinkedMultiValueMap<>();\n+        paramsMap.add(\"userName\",\"user_test\");\n+\n+        MvcResult mvcResult = mockMvc.perform(post(\"/users/activate\")\n+                .header(SESSION_ID, sessionId)\n+                .params(paramsMap))\n+                .andExpect(status().isOk())\n+                .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8))\n+                .andReturn();\n+\n+        Result result = JSONUtils.parseObject(mvcResult.getResponse().getContentAsString(), Result.class);\n+        Assert.assertEquals(Status.SUCCESS.getCode(),result.getCode().intValue());\n+        logger.info(mvcResult.getResponse().getContentAsString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNjk3MTE5", "url": "https://github.com/apache/dolphinscheduler/pull/3403#pullrequestreview-460697119", "createdAt": "2020-08-04T10:40:37Z", "commit": {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDo0MDozN1rOG7a56Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDo0MDozN1rOG7a56Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk1OTk3Nw==", "bodyText": "Please remove all the log in test to avoid some unnecessary logs.", "url": "https://github.com/apache/dolphinscheduler/pull/3403#discussion_r464959977", "createdAt": "2020-08-04T10:40:37Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-api/src/test/java/org/apache/dolphinscheduler/api/service/UsersServiceTest.java", "diffHunk": "@@ -498,6 +498,61 @@ public void testRegisterUser() {\n         }\n     }\n \n+\n+    @Test\n+    public void testActivateUser() {\n+        User user = new User();\n+        user.setUserType(UserType.GENERAL_USER);\n+        String userName = \"userTest0002~\";\n+        try {\n+            //not admin\n+            Map<String, Object> result = usersService.activateUser(user, userName);\n+            Assert.assertEquals(Status.USER_NO_OPERATION_PERM, result.get(Constants.STATUS));\n+\n+            //userName error\n+            user.setUserType(UserType.ADMIN_USER);\n+            result = usersService.activateUser(user, userName);\n+            Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR, result.get(Constants.STATUS));\n+\n+            //user not exist\n+            userName = \"userTest10013\";\n+            result = usersService.activateUser(user, userName);\n+            Assert.assertEquals(Status.USER_NOT_EXIST, result.get(Constants.STATUS));\n+            logger.info(result.toString());\n+\n+            //user state error\n+            userName = \"userTest0001\";\n+            when(userMapper.queryByUserNameAccurately(userName)).thenReturn(getUser());\n+            result = usersService.activateUser(user, userName);\n+            Assert.assertEquals(Status.REQUEST_PARAMS_NOT_VALID_ERROR, result.get(Constants.STATUS));\n+            logger.info(result.toString());\n+\n+            //success\n+            when(userMapper.queryByUserNameAccurately(userName)).thenReturn(getDisabledUser());\n+            result = usersService.activateUser(user, userName);\n+            logger.info(result.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd289b3e10438b5c600ae22f391da078ccaf3fec"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29ab54b75abd7f46a5db4e12ff62441db9aee07c", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/29ab54b75abd7f46a5db4e12ff62441db9aee07c", "committedDate": "2020-08-04T11:34:41Z", "message": "fix cr problem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNzY4ODE5", "url": "https://github.com/apache/dolphinscheduler/pull/3403#pullrequestreview-460768819", "createdAt": "2020-08-04T12:34:30Z", "commit": {"oid": "29ab54b75abd7f46a5db4e12ff62441db9aee07c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNDkzMDcw", "url": "https://github.com/apache/dolphinscheduler/pull/3403#pullrequestreview-461493070", "createdAt": "2020-08-05T09:27:23Z", "commit": {"oid": "29ab54b75abd7f46a5db4e12ff62441db9aee07c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1830, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}