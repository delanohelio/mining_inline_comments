{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMjkyNTE1", "number": 4063, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwNDowNzoyNVrOE46_aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwNDowODo1NlrOE46_tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTIyMjE5OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-alert-plugin/dolphinscheduler-alert-script/src/main/java/org/apache/dolphinscheduler/plugin/alert/script/ScriptAlertChannelFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwNDowNzoyNVrOHzIHdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwNDowNzoyNVrOHzIHdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM3MjQwNw==", "bodyText": "the 'alarm server' should be changed to 'alert server'", "url": "https://github.com/apache/dolphinscheduler/pull/4063#discussion_r523372407", "createdAt": "2020-11-14T04:07:25Z", "author": {"login": "gaojun2048"}, "path": "dolphinscheduler-alert-plugin/dolphinscheduler-alert-script/src/main/java/org/apache/dolphinscheduler/plugin/alert/script/ScriptAlertChannelFactory.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.plugin.alert.script;\n+\n+import org.apache.dolphinscheduler.spi.alert.AlertChannel;\n+import org.apache.dolphinscheduler.spi.alert.AlertChannelFactory;\n+import org.apache.dolphinscheduler.spi.params.InputParam;\n+import org.apache.dolphinscheduler.spi.params.RadioParam;\n+import org.apache.dolphinscheduler.spi.params.base.ParamsOptions;\n+import org.apache.dolphinscheduler.spi.params.base.PluginParams;\n+import org.apache.dolphinscheduler.spi.params.base.Validate;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/**\n+ * ScriptAlertChannelFactory\n+ */\n+public class ScriptAlertChannelFactory implements AlertChannelFactory {\n+\n+    @Override\n+    public String getName() {\n+        return \"script alert\";\n+    }\n+\n+    @Override\n+    public List<PluginParams> getParams() {\n+\n+        InputParam scriptUserParam = InputParam.newBuilder(ScriptParamsConstants.NAME_SCRIPT_USER_PARAMS, ScriptParamsConstants.SCRIPT_USER_PARAMS)\n+                .addValidate(Validate.newBuilder()\n+                        .setRequired(false)\n+                        .build())\n+                .setPlaceholder(\"please enter your custom parameters, which will be passed to you when calling your script\")\n+                .build();\n+        // need check file type and file exist\n+        InputParam scriptPathParam = InputParam.newBuilder(ScriptParamsConstants.NAME_SCRIPT_PATH, ScriptParamsConstants.SCRIPT_PATH)\n+                .addValidate(Validate.newBuilder()\n+                        .setRequired(true)\n+                        .build())\n+                .setPlaceholder(\"please upload the file to the disk directory of the alarm server, and ensure that the path is absolute and has the corresponding access rights\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66afe5afcc2f79acdae553f80f9fc2f29d927f24"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MTIyMjkzOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-alert-plugin/dolphinscheduler-alert-script/src/main/java/org/apache/dolphinscheduler/plugin/alert/script/ScriptAlertChannelFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwNDowODo1NlrOHzIH3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQwNDowODo1NlrOHzIH3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM3MjUwOA==", "bodyText": "If only shell type is supported, why use RadioParam", "url": "https://github.com/apache/dolphinscheduler/pull/4063#discussion_r523372508", "createdAt": "2020-11-14T04:08:56Z", "author": {"login": "gaojun2048"}, "path": "dolphinscheduler-alert-plugin/dolphinscheduler-alert-script/src/main/java/org/apache/dolphinscheduler/plugin/alert/script/ScriptAlertChannelFactory.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.plugin.alert.script;\n+\n+import org.apache.dolphinscheduler.spi.alert.AlertChannel;\n+import org.apache.dolphinscheduler.spi.alert.AlertChannelFactory;\n+import org.apache.dolphinscheduler.spi.params.InputParam;\n+import org.apache.dolphinscheduler.spi.params.RadioParam;\n+import org.apache.dolphinscheduler.spi.params.base.ParamsOptions;\n+import org.apache.dolphinscheduler.spi.params.base.PluginParams;\n+import org.apache.dolphinscheduler.spi.params.base.Validate;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/**\n+ * ScriptAlertChannelFactory\n+ */\n+public class ScriptAlertChannelFactory implements AlertChannelFactory {\n+\n+    @Override\n+    public String getName() {\n+        return \"script alert\";\n+    }\n+\n+    @Override\n+    public List<PluginParams> getParams() {\n+\n+        InputParam scriptUserParam = InputParam.newBuilder(ScriptParamsConstants.NAME_SCRIPT_USER_PARAMS, ScriptParamsConstants.SCRIPT_USER_PARAMS)\n+                .addValidate(Validate.newBuilder()\n+                        .setRequired(false)\n+                        .build())\n+                .setPlaceholder(\"please enter your custom parameters, which will be passed to you when calling your script\")\n+                .build();\n+        // need check file type and file exist\n+        InputParam scriptPathParam = InputParam.newBuilder(ScriptParamsConstants.NAME_SCRIPT_PATH, ScriptParamsConstants.SCRIPT_PATH)\n+                .addValidate(Validate.newBuilder()\n+                        .setRequired(true)\n+                        .build())\n+                .setPlaceholder(\"please upload the file to the disk directory of the alarm server, and ensure that the path is absolute and has the corresponding access rights\")\n+                .build();\n+\n+        RadioParam scriptTypeParams = RadioParam.newBuilder(ScriptParamsConstants.NAME_SCRIPT_TYPE, ScriptParamsConstants.SCRIPT_TYPE)\n+                .addParamsOptions(new ParamsOptions(ScriptType.SHELL.getDescp(), ScriptType.SHELL.getDescp(), false))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66afe5afcc2f79acdae553f80f9fc2f29d927f24"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3291, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}