{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4OTk0MjE4", "number": 1702, "title": " Fix bug: Use try-with-resources or close this \"Statement\" in a \"finally\" clause.", "bodyText": "What is the purpose of the pull request\n#1701 Resources should be closed\nBrief change log\n\nUse try-with-resources with Statement and ResultSetk.\nFix some code smell.", "createdAt": "2020-01-03T13:48:15Z", "url": "https://github.com/apache/dolphinscheduler/pull/1702", "merged": true, "mergeCommit": {"oid": "b3b075d9157fc865cc8a090a8f31142bdfa8223f"}, "closed": true, "closedAt": "2020-02-06T11:32:32Z", "author": {"login": "Jave-Chen"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2uXargH2gAyMzU4OTk0MjE4OjBlYzUxODEyM2RhNTA3NzJkNWU2ZmQ0Yzk2MWRkM2VkNDZjYzZjZmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBo8lZgFqTM1NDM3Njc0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0ec518123da50772d5e6fd4c961dd3ed46cc6cfd", "author": {"user": {"login": "Jave-Chen", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/0ec518123da50772d5e6fd4c961dd3ed46cc6cfd", "committedDate": "2020-01-03T13:28:03Z", "message": "#1701  Fix bug: Use try-with-resources or close this \"Statement\" in a \"finally\" clause."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f26bd5c345b6c850b09fd37520d84083bc750a11", "author": {"user": {"login": "Jave-Chen", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/f26bd5c345b6c850b09fd37520d84083bc750a11", "committedDate": "2020-01-03T13:42:10Z", "message": "fix some indent"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTE0NDkx", "url": "https://github.com/apache/dolphinscheduler/pull/1702#pullrequestreview-344514491", "createdAt": "2020-01-17T11:18:39Z", "commit": {"oid": "f26bd5c345b6c850b09fd37520d84083bc750a11"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToxODo0MFrOFe2FnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToxODo0MFrOFe2FnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4Nzc3Mg==", "bodyText": "remove this line", "url": "https://github.com/apache/dolphinscheduler/pull/1702#discussion_r367887772", "createdAt": "2020-01-17T11:18:40Z", "author": {"login": "Technoboy-"}, "path": "dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ScriptRunner.java", "diffHunk": "@@ -243,46 +233,35 @@ private void runScript(Connection conn, Reader reader , String dbName) throws IO\n \t\t\t\t\t\t|| fullLineDelimiter && trimmedLine.equals(getDelimiter())) {\n \t\t\t\t\tcommand.append(line.substring(0, line.lastIndexOf(getDelimiter())));\n \t\t\t\t\tcommand.append(\" \");\n-\t\t\t\t\tStatement statement = conn.createStatement();\n-\n \t\t\t\t\tsql = command.toString().replaceAll(\"\\\\{\\\\{APPDB\\\\}\\\\}\", dbName);\n-\t\t\t\t\tboolean hasResults = false;\n-\t\t\t\t\tlogger.info(\"sql : \" + sql);\n-\t\t\t\t\tif (stopOnError) {\n-\t\t\t\t\t\thasResults = statement.execute(sql);\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tstatement.execute(sql);\n-\t\t\t\t\t\t} catch (SQLException e) {\n-\t\t\t\t\t\t\tlogger.error(e.getMessage(),e);\n-\t\t\t\t\t\t\tthrow e;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tResultSet rs = statement.getResultSet();\n-\t\t\t\t\tif (hasResults && rs != null) {\n-\t\t\t\t\t\tResultSetMetaData md = rs.getMetaData();\n-\t\t\t\t\t\tint cols = md.getColumnCount();\n-\t\t\t\t\t\tfor (int i = 0; i < cols; i++) {\n-\t\t\t\t\t\t\tString name = md.getColumnLabel(i);\n-\t\t\t\t\t\t\tlogger.info(name + \"\\t\");\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tlogger.info(\"\");\n-\t\t\t\t\t\twhile (rs.next()) {\n-\t\t\t\t\t\t\tfor (int i = 0; i < cols; i++) {\n-\t\t\t\t\t\t\t\tString value = rs.getString(i);\n-\t\t\t\t\t\t\t\tlogger.info(value + \"\\t\");\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tlogger.info(\"\");\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n+                    logger.info(\"sql : {}\", sql);\n+                    \n+                    try (Statement statement = conn.createStatement()) {\n+                        statement.execute(sql);\n+                        try (ResultSet rs = statement.getResultSet()) {\n+                            if (stopOnError && rs != null) {\n+                                ResultSetMetaData md = rs.getMetaData();\n+                                int cols = md.getColumnCount();\n+                                for (int i = 0; i < cols; i++) {\n+                                    String name = md.getColumnLabel(i);\n+                                    logger.info(\"{} \\t\", name);\n+                                }\n+                                logger.info(\"\");\n+                                while (rs.next()) {\n+                                    for (int i = 0; i < cols; i++) {\n+                                        String value = rs.getString(i);\n+                                        logger.info(\"{} \\t\", value);\n+                                    }\n+                                    logger.info(\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd5c345b6c850b09fd37520d84083bc750a11"}, "originalPosition": 184}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTE0NzQy", "url": "https://github.com/apache/dolphinscheduler/pull/1702#pullrequestreview-344514742", "createdAt": "2020-01-17T11:19:10Z", "commit": {"oid": "f26bd5c345b6c850b09fd37520d84083bc750a11"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToxOToxMVrOFe2GYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToxOToxMVrOFe2GYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4Nzk3MQ==", "bodyText": "logger.error(\"SQLException\", e);", "url": "https://github.com/apache/dolphinscheduler/pull/1702#discussion_r367887971", "createdAt": "2020-01-17T11:19:11Z", "author": {"login": "Technoboy-"}, "path": "dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ScriptRunner.java", "diffHunk": "@@ -243,46 +233,35 @@ private void runScript(Connection conn, Reader reader , String dbName) throws IO\n \t\t\t\t\t\t|| fullLineDelimiter && trimmedLine.equals(getDelimiter())) {\n \t\t\t\t\tcommand.append(line.substring(0, line.lastIndexOf(getDelimiter())));\n \t\t\t\t\tcommand.append(\" \");\n-\t\t\t\t\tStatement statement = conn.createStatement();\n-\n \t\t\t\t\tsql = command.toString().replaceAll(\"\\\\{\\\\{APPDB\\\\}\\\\}\", dbName);\n-\t\t\t\t\tboolean hasResults = false;\n-\t\t\t\t\tlogger.info(\"sql : \" + sql);\n-\t\t\t\t\tif (stopOnError) {\n-\t\t\t\t\t\thasResults = statement.execute(sql);\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tstatement.execute(sql);\n-\t\t\t\t\t\t} catch (SQLException e) {\n-\t\t\t\t\t\t\tlogger.error(e.getMessage(),e);\n-\t\t\t\t\t\t\tthrow e;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tResultSet rs = statement.getResultSet();\n-\t\t\t\t\tif (hasResults && rs != null) {\n-\t\t\t\t\t\tResultSetMetaData md = rs.getMetaData();\n-\t\t\t\t\t\tint cols = md.getColumnCount();\n-\t\t\t\t\t\tfor (int i = 0; i < cols; i++) {\n-\t\t\t\t\t\t\tString name = md.getColumnLabel(i);\n-\t\t\t\t\t\t\tlogger.info(name + \"\\t\");\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tlogger.info(\"\");\n-\t\t\t\t\t\twhile (rs.next()) {\n-\t\t\t\t\t\t\tfor (int i = 0; i < cols; i++) {\n-\t\t\t\t\t\t\t\tString value = rs.getString(i);\n-\t\t\t\t\t\t\t\tlogger.info(value + \"\\t\");\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tlogger.info(\"\");\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n+                    logger.info(\"sql : {}\", sql);\n+                    \n+                    try (Statement statement = conn.createStatement()) {\n+                        statement.execute(sql);\n+                        try (ResultSet rs = statement.getResultSet()) {\n+                            if (stopOnError && rs != null) {\n+                                ResultSetMetaData md = rs.getMetaData();\n+                                int cols = md.getColumnCount();\n+                                for (int i = 0; i < cols; i++) {\n+                                    String name = md.getColumnLabel(i);\n+                                    logger.info(\"{} \\t\", name);\n+                                }\n+                                logger.info(\"\");\n+                                while (rs.next()) {\n+                                    for (int i = 0; i < cols; i++) {\n+                                        String value = rs.getString(i);\n+                                        logger.info(\"{} \\t\", value);\n+                                    }\n+                                    logger.info(\"\");\n+                                }\n+                            }\n+                        }   \n+                    } catch (SQLException e) {\n+                        logger.error(e.getMessage(),e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd5c345b6c850b09fd37520d84083bc750a11"}, "originalPosition": 189}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTE0ODk3", "url": "https://github.com/apache/dolphinscheduler/pull/1702#pullrequestreview-344514897", "createdAt": "2020-01-17T11:19:27Z", "commit": {"oid": "f26bd5c345b6c850b09fd37520d84083bc750a11"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToxOToyN1rOFe2G3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToxOToyN1rOFe2G3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4ODA5Mg==", "bodyText": "remove", "url": "https://github.com/apache/dolphinscheduler/pull/1702#discussion_r367888092", "createdAt": "2020-01-17T11:19:27Z", "author": {"login": "Technoboy-"}, "path": "dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ScriptRunner.java", "diffHunk": "@@ -291,11 +270,11 @@ private void runScript(Connection conn, Reader reader , String dbName) throws IO\n \t\t\t}\n \n \t\t} catch (SQLException e) {\n-\t\t\tlogger.error(\"Error executing: \" + sql);\n+\t\t\tlogger.error(\"Error executing: {}\", sql);\n \t\t\tthrow e;\n \t\t} catch (IOException e) {\n \t\t\te.fillInStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd5c345b6c850b09fd37520d84083bc750a11"}, "originalPosition": 210}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTE0OTY5", "url": "https://github.com/apache/dolphinscheduler/pull/1702#pullrequestreview-344514969", "createdAt": "2020-01-17T11:19:35Z", "commit": {"oid": "f26bd5c345b6c850b09fd37520d84083bc750a11"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToxOTozNlrOFe2HFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToxOTozNlrOFe2HFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4ODE1MA==", "bodyText": "remove", "url": "https://github.com/apache/dolphinscheduler/pull/1702#discussion_r367888150", "createdAt": "2020-01-17T11:19:36Z", "author": {"login": "Technoboy-"}, "path": "dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ScriptRunner.java", "diffHunk": "@@ -207,11 +197,11 @@ private void runScript(Connection conn, Reader reader) throws IOException, SQLEx\n \t\t\t}\n \n \t\t} catch (SQLException e) {\n-\t\t\tlogger.error(\"Error executing: \" + command.toString());\n+\t\t\tlogger.error(\"Error executing: {}\", command);\n \t\t\tthrow e;\n \t\t} catch (IOException e) {\n \t\t\te.fillInStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd5c345b6c850b09fd37520d84083bc750a11"}, "originalPosition": 123}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTE1MDcy", "url": "https://github.com/apache/dolphinscheduler/pull/1702#pullrequestreview-344515072", "createdAt": "2020-01-17T11:19:49Z", "commit": {"oid": "f26bd5c345b6c850b09fd37520d84083bc750a11"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToxOTo1MFrOFe2HbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToxOTo1MFrOFe2HbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4ODIzNg==", "bodyText": "add more info", "url": "https://github.com/apache/dolphinscheduler/pull/1702#discussion_r367888236", "createdAt": "2020-01-17T11:19:50Z", "author": {"login": "Technoboy-"}, "path": "dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ScriptRunner.java", "diffHunk": "@@ -161,44 +161,34 @@ private void runScript(Connection conn, Reader reader) throws IOException, SQLEx\n \t\t\t\t\t\t|| fullLineDelimiter && trimmedLine.equals(getDelimiter())) {\n \t\t\t\t\tcommand.append(line.substring(0, line.lastIndexOf(getDelimiter())));\n \t\t\t\t\tcommand.append(\" \");\n-\t\t\t\t\tStatement statement = conn.createStatement();\n-\t\t\t\t\tboolean hasResults = false;\n-\t\t\t\t\tlogger.info(\"sql:\"+command.toString());\n-\t\t\t\t\tif (stopOnError) {\n-\t\t\t\t\t\thasResults = statement.execute(command.toString());\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tstatement.execute(command.toString());\n-\t\t\t\t\t\t} catch (SQLException e) {\n-\t\t\t\t\t\t\tlogger.error(e.getMessage(),e);\n-\t\t\t\t\t\t\tthrow e;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tResultSet rs = statement.getResultSet();\n-\t\t\t\t\tif (hasResults && rs != null) {\n-\t\t\t\t\t\tResultSetMetaData md = rs.getMetaData();\n-\t\t\t\t\t\tint cols = md.getColumnCount();\n-\t\t\t\t\t\tfor (int i = 0; i < cols; i++) {\n-\t\t\t\t\t\t\tString name = md.getColumnLabel(i);\n-\t\t\t\t\t\t\tlogger.info(name + \"\\t\");\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tlogger.info(\"\");\n-\t\t\t\t\t\twhile (rs.next()) {\n-\t\t\t\t\t\t\tfor (int i = 0; i < cols; i++) {\n-\t\t\t\t\t\t\t\tString value = rs.getString(i);\n-\t\t\t\t\t\t\t\tlogger.info(value + \"\\t\");\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tlogger.info(\"\");\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n+                    logger.info(\"sql: {}\", command);\n \n+                    try (Statement statement = conn.createStatement()) {\n+                        statement.execute(command.toString());\n+                        try (ResultSet rs = statement.getResultSet()) {\n+                            if (stopOnError && rs != null) {\n+                                ResultSetMetaData md = rs.getMetaData();\n+                                int cols = md.getColumnCount();\n+                                for (int i = 0; i < cols; i++) {\n+                                    String name = md.getColumnLabel(i);\n+                                    logger.info(\"{} \\t\", name);\n+                                }\n+                                logger.info(\"\");\n+                                while (rs.next()) {\n+                                    for (int i = 0; i < cols; i++) {\n+                                        String value = rs.getString(i);\n+                                        logger.info(\"{} \\t\", value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd5c345b6c850b09fd37520d84083bc750a11"}, "originalPosition": 95}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTE1MjIy", "url": "https://github.com/apache/dolphinscheduler/pull/1702#pullrequestreview-344515222", "createdAt": "2020-01-17T11:20:08Z", "commit": {"oid": "f26bd5c345b6c850b09fd37520d84083bc750a11"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToyMDowOVrOFe2H2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMToyMDowOVrOFe2H2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg4ODM0NA==", "bodyText": "logger.error(\"SQLException\", e);", "url": "https://github.com/apache/dolphinscheduler/pull/1702#discussion_r367888344", "createdAt": "2020-01-17T11:20:09Z", "author": {"login": "Technoboy-"}, "path": "dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/utils/ScriptRunner.java", "diffHunk": "@@ -161,44 +161,34 @@ private void runScript(Connection conn, Reader reader) throws IOException, SQLEx\n \t\t\t\t\t\t|| fullLineDelimiter && trimmedLine.equals(getDelimiter())) {\n \t\t\t\t\tcommand.append(line.substring(0, line.lastIndexOf(getDelimiter())));\n \t\t\t\t\tcommand.append(\" \");\n-\t\t\t\t\tStatement statement = conn.createStatement();\n-\t\t\t\t\tboolean hasResults = false;\n-\t\t\t\t\tlogger.info(\"sql:\"+command.toString());\n-\t\t\t\t\tif (stopOnError) {\n-\t\t\t\t\t\thasResults = statement.execute(command.toString());\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tstatement.execute(command.toString());\n-\t\t\t\t\t\t} catch (SQLException e) {\n-\t\t\t\t\t\t\tlogger.error(e.getMessage(),e);\n-\t\t\t\t\t\t\tthrow e;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tResultSet rs = statement.getResultSet();\n-\t\t\t\t\tif (hasResults && rs != null) {\n-\t\t\t\t\t\tResultSetMetaData md = rs.getMetaData();\n-\t\t\t\t\t\tint cols = md.getColumnCount();\n-\t\t\t\t\t\tfor (int i = 0; i < cols; i++) {\n-\t\t\t\t\t\t\tString name = md.getColumnLabel(i);\n-\t\t\t\t\t\t\tlogger.info(name + \"\\t\");\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tlogger.info(\"\");\n-\t\t\t\t\t\twhile (rs.next()) {\n-\t\t\t\t\t\t\tfor (int i = 0; i < cols; i++) {\n-\t\t\t\t\t\t\t\tString value = rs.getString(i);\n-\t\t\t\t\t\t\t\tlogger.info(value + \"\\t\");\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tlogger.info(\"\");\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n+                    logger.info(\"sql: {}\", command);\n \n+                    try (Statement statement = conn.createStatement()) {\n+                        statement.execute(command.toString());\n+                        try (ResultSet rs = statement.getResultSet()) {\n+                            if (stopOnError && rs != null) {\n+                                ResultSetMetaData md = rs.getMetaData();\n+                                int cols = md.getColumnCount();\n+                                for (int i = 0; i < cols; i++) {\n+                                    String name = md.getColumnLabel(i);\n+                                    logger.info(\"{} \\t\", name);\n+                                }\n+                                logger.info(\"\");\n+                                while (rs.next()) {\n+                                    for (int i = 0; i < cols; i++) {\n+                                        String value = rs.getString(i);\n+                                        logger.info(\"{} \\t\", value);\n+                                    }\n+                                    logger.info(\"\");\n+                                }\n+                            }\n+                        }   \n+                    } catch (SQLException e) {\n+                        logger.error(e.getMessage(),e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f26bd5c345b6c850b09fd37520d84083bc750a11"}, "originalPosition": 102}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2a8371b9fddb0541f674b972483a485fb861d30", "author": {"user": {"login": "Jave-Chen", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/c2a8371b9fddb0541f674b972483a485fb861d30", "committedDate": "2020-02-06T10:15:04Z", "message": "refix code smell"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0Mzc2NzQ4", "url": "https://github.com/apache/dolphinscheduler/pull/1702#pullrequestreview-354376748", "createdAt": "2020-02-06T11:22:23Z", "commit": {"oid": "c2a8371b9fddb0541f674b972483a485fb861d30"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1944, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}