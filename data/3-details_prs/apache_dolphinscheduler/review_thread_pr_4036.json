{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MDg1OTQx", "number": 4036, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzowNjoxMFrOE8NUvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzowNjoxMFrOE8NUvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTY4MzE2OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/task/sqoop/generator/CommonGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzowNjoxMVrOH4MoFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzowNjoxMVrOH4MoFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY4OTE3Mg==", "bodyText": "logger uses static final uniformly", "url": "https://github.com/apache/dolphinscheduler/pull/4036#discussion_r528689172", "createdAt": "2020-11-23T13:06:11Z", "author": {"login": "CalvinKirs"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/task/sqoop/generator/CommonGenerator.java", "diffHunk": "@@ -14,71 +14,72 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.dolphinscheduler.server.worker.task.sqoop.generator;\n \n import org.apache.dolphinscheduler.common.Constants;\n import org.apache.dolphinscheduler.common.process.Property;\n import org.apache.dolphinscheduler.common.task.sqoop.SqoopParameters;\n import org.apache.dolphinscheduler.common.utils.CollectionUtils;\n-import org.apache.dolphinscheduler.common.utils.StringUtils;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import org.apache.dolphinscheduler.server.worker.task.sqoop.SqoopConstants;\n \n import java.util.List;\n \n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n /**\n  * common script generator\n  */\n public class CommonGenerator {\n \n-    private Logger logger = LoggerFactory.getLogger(getClass());\n+    private final Logger logger = LoggerFactory.getLogger(getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcdde58d2a718a2c73e57d5609e4aa6d5accae5f"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3284, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}