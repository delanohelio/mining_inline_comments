{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMzE0NTYy", "number": 2224, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMTowNzoyNVrODpVW3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMTowODozOFrODpVYww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjY4MTI1OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/task/datax/DataxTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMTowNzoyNVrOF4cjmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMTowNzoyNVrOF4cjmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczMjQ0MA==", "bodyText": "I think logger.info would be easy to debug the whole task.", "url": "https://github.com/apache/dolphinscheduler/pull/2224#discussion_r394732440", "createdAt": "2020-03-19T01:07:25Z", "author": {"login": "Jave-Chen"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/task/datax/DataxTask.java", "diffHunk": "@@ -192,24 +192,47 @@ private String buildDataxJsonFile()\n         throws Exception {\n         // generate json\n         String fileName = String.format(\"%s/%s_job.json\", taskDir, taskProps.getTaskAppId());\n+        String json;\n \n         Path path = new File(fileName).toPath();\n         if (Files.exists(path)) {\n             return fileName;\n         }\n \n-        JSONObject job = new JSONObject();\n-        job.put(\"content\", buildDataxJobContentJson());\n-        job.put(\"setting\", buildDataxJobSettingJson());\n \n-        JSONObject root = new JSONObject();\n-        root.put(\"job\", job);\n-        root.put(\"core\", buildDataxCoreJson());\n \n-        logger.debug(\"datax job json : {}\", root.toString());\n+        if (dataXParameters.getCustomConfig() == 1){\n+\n+            json = dataXParameters.getJson().replaceAll(\"\\\\r\\\\n\", \"\\n\");\n+\n+            /**\n+             *  combining local and global parameters\n+             */\n+            Map<String, Property> paramsMap = ParamUtils.convert(taskProps.getUserDefParamsMap(),\n+                    taskProps.getDefinedParams(),\n+                    dataXParameters.getLocalParametersMap(),\n+                    taskProps.getCmdTypeIfComplement(),\n+                    taskProps.getScheduleTime());\n+            if (paramsMap != null){\n+                json = ParameterUtils.convertParameterPlaceholders(json, ParamUtils.convert(paramsMap));\n+            }\n+\n+        }else {\n+\n+            JSONObject job = new JSONObject();\n+            job.put(\"content\", buildDataxJobContentJson());\n+            job.put(\"setting\", buildDataxJobSettingJson());\n+\n+            JSONObject root = new JSONObject();\n+            root.put(\"job\", job);\n+            root.put(\"core\", buildDataxCoreJson());\n+            json = root.toString();\n+        }\n+\n+        logger.debug(\"datax job json : {}\", json);\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b92a777e3c8974dd2b4884c7cbdf37950072586"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NjY4NjExOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/task/datax/DataxTask.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMTowODozOFrOF4cmsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMTo0MToyNlrOF4dNCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczMzIzMg==", "bodyText": "Variables can also be used in datax job json, which will cause json to be invalid, such as\n{\n  ...\n  \"reader\": {\n    \"name\": \"mysqlreader\",\n    \"parameter\": {\n      \"username\": \"${db_user}\",\n      \"password\": \"${db_pwd}\",\n      \"encoding\": \"UTF-8\",\n      \"column\": [${tbl_clms}],\n      \"connection\": [\n        {\n          \"jdbcUrl\": [\n            \"jdbc:mysql://${host}/${db}?useUnicode=true&characterEncoding=utf8\"\n          ],\n          \"table\": [\n            ${table_list}\n          ]\n        }\n      ]\n    }\n  }\n  ...\n}", "url": "https://github.com/apache/dolphinscheduler/pull/2224#discussion_r394733232", "createdAt": "2020-03-19T01:08:38Z", "author": {"login": "Jave-Chen"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/task/datax/DataxTask.java", "diffHunk": "@@ -192,24 +192,47 @@ private String buildDataxJsonFile()\n         throws Exception {\n         // generate json\n         String fileName = String.format(\"%s/%s_job.json\", taskDir, taskProps.getTaskAppId());\n+        String json;\n \n         Path path = new File(fileName).toPath();\n         if (Files.exists(path)) {\n             return fileName;\n         }\n \n-        JSONObject job = new JSONObject();\n-        job.put(\"content\", buildDataxJobContentJson());\n-        job.put(\"setting\", buildDataxJobSettingJson());\n \n-        JSONObject root = new JSONObject();\n-        root.put(\"job\", job);\n-        root.put(\"core\", buildDataxCoreJson());\n \n-        logger.debug(\"datax job json : {}\", root.toString());\n+        if (dataXParameters.getCustomConfig() == 1){\n+\n+            json = dataXParameters.getJson().replaceAll(\"\\\\r\\\\n\", \"\\n\");\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b92a777e3c8974dd2b4884c7cbdf37950072586"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczNjU4NA==", "bodyText": "here is about custom variables", "url": "https://github.com/apache/dolphinscheduler/pull/2224#discussion_r394736584", "createdAt": "2020-03-19T01:21:22Z", "author": {"login": "simon824"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/task/datax/DataxTask.java", "diffHunk": "@@ -192,24 +192,47 @@ private String buildDataxJsonFile()\n         throws Exception {\n         // generate json\n         String fileName = String.format(\"%s/%s_job.json\", taskDir, taskProps.getTaskAppId());\n+        String json;\n \n         Path path = new File(fileName).toPath();\n         if (Files.exists(path)) {\n             return fileName;\n         }\n \n-        JSONObject job = new JSONObject();\n-        job.put(\"content\", buildDataxJobContentJson());\n-        job.put(\"setting\", buildDataxJobSettingJson());\n \n-        JSONObject root = new JSONObject();\n-        root.put(\"job\", job);\n-        root.put(\"core\", buildDataxCoreJson());\n \n-        logger.debug(\"datax job json : {}\", root.toString());\n+        if (dataXParameters.getCustomConfig() == 1){\n+\n+            json = dataXParameters.getJson().replaceAll(\"\\\\r\\\\n\", \"\\n\");\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczMzIzMg=="}, "originalCommit": {"oid": "7b92a777e3c8974dd2b4884c7cbdf37950072586"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc0MzA0OQ==", "bodyText": "here is about custom variables\n\nSorry, I didn't see it. it's my fault.", "url": "https://github.com/apache/dolphinscheduler/pull/2224#discussion_r394743049", "createdAt": "2020-03-19T01:41:26Z", "author": {"login": "Jave-Chen"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/task/datax/DataxTask.java", "diffHunk": "@@ -192,24 +192,47 @@ private String buildDataxJsonFile()\n         throws Exception {\n         // generate json\n         String fileName = String.format(\"%s/%s_job.json\", taskDir, taskProps.getTaskAppId());\n+        String json;\n \n         Path path = new File(fileName).toPath();\n         if (Files.exists(path)) {\n             return fileName;\n         }\n \n-        JSONObject job = new JSONObject();\n-        job.put(\"content\", buildDataxJobContentJson());\n-        job.put(\"setting\", buildDataxJobSettingJson());\n \n-        JSONObject root = new JSONObject();\n-        root.put(\"job\", job);\n-        root.put(\"core\", buildDataxCoreJson());\n \n-        logger.debug(\"datax job json : {}\", root.toString());\n+        if (dataXParameters.getCustomConfig() == 1){\n+\n+            json = dataXParameters.getJson().replaceAll(\"\\\\r\\\\n\", \"\\n\");\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDczMzIzMg=="}, "originalCommit": {"oid": "7b92a777e3c8974dd2b4884c7cbdf37950072586"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3548, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}