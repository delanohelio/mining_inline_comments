{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MDYwMzgz", "number": 1970, "title": "Add ambari plugin #1469", "bodyText": "Add ambari plugin #1469", "createdAt": "2020-02-17T10:31:55Z", "url": "https://github.com/apache/dolphinscheduler/pull/1970", "merged": true, "mergeCommit": {"oid": "b4f2e5f4210ce70d6ec50e68fd177ee26841fc03"}, "closed": true, "closedAt": "2020-02-22T10:28:03Z", "author": {"login": "zhangchunyang1024"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFKWXZgH2gAyMzc2MDYwMzgzOjYxZjYzODdiMDExZDdiNzU0YWYxY2U2ODI2NjhiZDM2MWY3NmQ5Zjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGxuJjgFqTM2MzAyMjAzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "61f6387b011d7b754af1ce682668bd361f76d9f8", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/61f6387b011d7b754af1ce682668bd361f76d9f8", "committedDate": "2020-02-17T09:59:11Z", "message": "ambari plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "338a7ee9cbb9722bd79286db90b56ef5cd449eb7", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/338a7ee9cbb9722bd79286db90b56ef5cd449eb7", "committedDate": "2020-02-17T10:04:12Z", "message": "add readme.pdf"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bd1f3c7cdec325c30ad76e6755002d4894fb71a", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/6bd1f3c7cdec325c30ad76e6755002d4894fb71a", "committedDate": "2020-02-17T10:10:38Z", "message": "ambari plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "169ac64aaa54088a748c84b00a748ed9f06b6257", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/169ac64aaa54088a748c84b00a748ed9f06b6257", "committedDate": "2020-02-17T10:23:26Z", "message": "add readme.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73411e31afdc9cd8018667995ee8696b535d4c14", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/73411e31afdc9cd8018667995ee8696b535d4c14", "committedDate": "2020-02-17T10:29:17Z", "message": "add readme.pdf"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMDA5MDAw", "url": "https://github.com/apache/dolphinscheduler/pull/1970#pullrequestreview-360009000", "createdAt": "2020-02-18T00:03:37Z", "commit": {"oid": "73411e31afdc9cd8018667995ee8696b535d4c14"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDowMzozOFrOFqx6eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDowMzozOFrOFqx6eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwMjI5OA==", "bodyText": "license description needed", "url": "https://github.com/apache/dolphinscheduler/pull/1970#discussion_r380402298", "createdAt": "2020-02-18T00:03:38Z", "author": {"login": "Jave-Chen"}, "path": "ambari_plugin/common-services/DOLPHIN/1.2.1/package/scripts/status_params.py", "diffHunk": "@@ -0,0 +1,13 @@\n+#!/usr/bin/env python\n+# -*- coding: utf-8 -*-\n+\n+\"\"\"\n+Redis service params\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73411e31afdc9cd8018667995ee8696b535d4c14"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMDI3MzE5", "url": "https://github.com/apache/dolphinscheduler/pull/1970#pullrequestreview-360027319", "createdAt": "2020-02-18T01:38:25Z", "commit": {"oid": "73411e31afdc9cd8018667995ee8696b535d4c14"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMTozODoyNVrOFqy4Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMjoxNTowN1rOFqzSlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQxODEzMQ==", "bodyText": "if dolphin.database.host is must be config , it is recommended to set this parameter as required instead of giving an unavailable default value.The same goes for other parameters.", "url": "https://github.com/apache/dolphinscheduler/pull/1970#discussion_r380418131", "createdAt": "2020-02-18T01:38:25Z", "author": {"login": "gaojun2048"}, "path": "ambari_plugin/common-services/DOLPHIN/1.2.1/configuration/dolphin-env.xml", "diffHunk": "@@ -0,0 +1,114 @@\n+<configuration>\n+\t<property>\n+\t\t<name>dolphin.database.type</name>\n+\t\t<value>mysql</value>\n+\t\t<description>Dolphin Scheduler DataBase Type Which Is Select</description>\n+\t\t<display-name>Dolphin Database Type</display-name>\n+\t\t<value-attributes>\n+\t\t\t<type>value-list</type>\n+\t\t\t<entries>\n+\t\t\t\t<entry>\n+\t\t\t\t\t<value>mysql</value>\n+\t\t\t\t\t<label>Mysql</label>\n+\t\t\t\t</entry>\n+\t\t\t\t<entry>\n+\t\t\t\t\t<value>postgresql</value>\n+\t\t\t\t\t<label>Postgresql</label>\n+\t\t\t\t</entry>\n+\t\t\t</entries>\n+\t\t\t<selection-cardinality>1</selection-cardinality>\n+\t\t</value-attributes>\n+\t\t<on-ambari-upgrade add=\"true\"/>\n+\t</property>\n+\n+\t<property>\n+\t\t<name>dolphin.database.host</name>\n+\t\t<value>ark1</value>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73411e31afdc9cd8018667995ee8696b535d4c14"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQxODgwNg==", "bodyText": "DOLPHIN_MASTER`s cardinality is 1-2 ?", "url": "https://github.com/apache/dolphinscheduler/pull/1970#discussion_r380418806", "createdAt": "2020-02-18T01:42:12Z", "author": {"login": "gaojun2048"}, "path": "ambari_plugin/common-services/DOLPHIN/1.2.1/metainfo.xml", "diffHunk": "@@ -0,0 +1,121 @@\n+<?xml version=\"1.0\"?>\n+<metainfo>\n+    <schemaVersion>2.0</schemaVersion>\n+    <services>\n+        <service>\n+            <name>DOLPHIN</name>\n+            <displayName>Dolphin Scheduler</displayName>\n+            <comment>\u5206\u5e03\u5f0f\u6613\u6269\u5c55\u7684\u53ef\u89c6\u5316DAG\u5de5\u4f5c\u6d41\u4efb\u52a1\u8c03\u5ea6\u7cfb\u7edf</comment>\n+            <version>1.2.1</version>\n+            <components>\n+                <component>\n+                    <name>DOLPHIN_MASTER</name>\n+                    <displayName>DS Master</displayName>\n+                    <category>MASTER</category>\n+                    <cardinality>1-2</cardinality>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73411e31afdc9cd8018667995ee8696b535d4c14"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQyMTE3MA==", "bodyText": "Native ambari can't recognize such alarm json, so you need to modify the alarm information a bit easier", "url": "https://github.com/apache/dolphinscheduler/pull/1970#discussion_r380421170", "createdAt": "2020-02-18T01:54:30Z", "author": {"login": "gaojun2048"}, "path": "ambari_plugin/common-services/DOLPHIN/1.2.1/package/alerts/alert_dolphin_scheduler_status.py", "diffHunk": "@@ -0,0 +1,138 @@\n+# coding=utf8\n+#!/usr/bin/env python\n+\n+\"\"\"\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+\"\"\"\n+import urllib2\n+import urllib\n+import os\n+import logging\n+import ambari_simplejson as json\n+import time\n+from resource_management.libraries.script.script import Script\n+import telnetlib \n+import sys\n+reload(sys)\n+sys.setdefaultencoding('utf-8')\n+\n+logger = logging.getLogger('ambari_alerts')\n+\n+config = Script.get_config()\n+\n+\n+def get_tokens():\n+    \"\"\"\n+    Returns a tuple of tokens in the format {{site/property}} that will be used\n+    to build the dictionary passed into execute\n+    \n+    :rtype tuple\n+    \"\"\"\n+\n+def get_info(url, connection_timeout):\n+    response = None\n+    \n+    try:\n+        response = urllib2.urlopen(url, timeout=connection_timeout)\n+        json_data = response.read()\n+        return json_data\n+    finally:\n+        if response is not None:\n+            try:\n+                response.close()\n+            except:\n+                pass\n+\n+\n+def execute(configurations={}, parameters={}, host_name=None):\n+    \"\"\"\n+    Returns a tuple containing the result code and a pre-formatted result label\n+    \n+    Keyword arguments:\n+    configurations : a mapping of configuration key to value\n+    parameters : a mapping of script parameter key to value\n+    host_name : the name of this host where the alert is running\n+    \n+    :type configurations dict\n+    :type parameters dict\n+    :type host_name str\n+    \"\"\"\n+    \n+    alert_name = parameters['alertName']\n+\n+    dolphin_pidfile_dir = \"/opt/soft/run/dolphinscheduler\"\n+\n+    pid = \"0\"\n+    \n+    \n+    from resource_management.core import sudo\n+\n+    is_running = True\n+    pid_file_path = \"\"\n+    if alert_name == 'DOLPHIN_MASTER':\n+        pid_file_path = dolphin_pidfile_dir + \"/master-server.pid\"\n+    elif alert_name == 'DOLPHIN_WORKER':\n+        pid_file_path = dolphin_pidfile_dir + \"/worker-server.pid\"\n+    elif alert_name == 'DOLPHIN_ALERT':\n+        pid_file_path = dolphin_pidfile_dir + \"/alert-server.pid\"\n+        \n+    if not pid_file_path or not os.path.isfile(pid_file_path):\n+        is_running = False\n+        \n+    try:\n+        pid = int(sudo.read_file(pid_file_path))\n+    except:\n+        is_running = False\n+\n+    try:\n+        # Kill will not actually kill the process\n+        # From the doc:\n+        # If sig is 0, then no signal is sent, but error checking is still\n+        # performed; this can be used to check for the existence of a\n+        # process ID or process group ID.\n+        sudo.kill(pid, 0)\n+    except OSError:\n+        is_running = False\n+    \n+    if not is_running:\n+        result_code = \"CRITICAL\"\n+        label_content = {\n+            \"serviceName\": \"DOLPHIN_SCHEDULER\",\n+            \"show_type\": \"text\",\n+            \"alert_message\": [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73411e31afdc9cd8018667995ee8696b535d4c14"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQyNDE3Nw==", "bodyText": "Have you tested what happens if the service is already started at this time and then click Start? Do you need to add the not_if parameter.", "url": "https://github.com/apache/dolphinscheduler/pull/1970#discussion_r380424177", "createdAt": "2020-02-18T02:11:35Z", "author": {"login": "gaojun2048"}, "path": "ambari_plugin/common-services/DOLPHIN/1.2.1/package/scripts/dolphin_alert_service.py", "diffHunk": "@@ -0,0 +1,44 @@\n+# -*- coding: utf-8 -*-\n+\n+import time\n+from resource_management import *\n+\n+from dolphin_env import dolphin_env\n+\n+\n+class DolphinAlertService(Script):\n+    def install(self, env):\n+        import params\n+        env.set_params(params)\n+        self.install_packages(env)\n+        Execute(('chmod', '-R', '777', params.dolphin_home), user=params.dolphin_user, sudo=True)\n+\n+    def configure(self, env):\n+        import params\n+        params.pika_slave = True\n+        env.set_params(params)\n+\n+        dolphin_env()\n+\n+    def start(self, env):\n+        import params\n+        env.set_params(params)\n+        self.configure(env)\n+        start_cmd = format(\"sh \" + params.dolphin_bin_dir + \"/dolphinscheduler-daemon.sh start alert-server\")\n+        Execute(start_cmd, user=params.dolphin_user)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73411e31afdc9cd8018667995ee8696b535d4c14"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQyNDg1Mw==", "bodyText": "License is need", "url": "https://github.com/apache/dolphinscheduler/pull/1970#discussion_r380424853", "createdAt": "2020-02-18T02:15:07Z", "author": {"login": "gaojun2048"}, "path": "ambari_plugin/common-services/DOLPHIN/1.2.1/package/scripts/dolphin_worker_service.py", "diffHunk": "@@ -0,0 +1,44 @@\n+# -*- coding: utf-8 -*-\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73411e31afdc9cd8018667995ee8696b535d4c14"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3165cb0328bc528bad2ec6b5f00d6692f4561460", "author": {"user": null}, "url": "https://github.com/apache/dolphinscheduler/commit/3165cb0328bc528bad2ec6b5f00d6692f4561460", "committedDate": "2020-02-18T05:21:57Z", "message": "1.add license 2. update master cardinality 3. nesessary paramaters default empty 4. update alert message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNzk3MjA5", "url": "https://github.com/apache/dolphinscheduler/pull/1970#pullrequestreview-360797209", "createdAt": "2020-02-19T01:57:56Z", "commit": {"oid": "3165cb0328bc528bad2ec6b5f00d6692f4561460"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNjAxNTAx", "url": "https://github.com/apache/dolphinscheduler/pull/1970#pullrequestreview-362601501", "createdAt": "2020-02-21T12:39:51Z", "commit": {"oid": "3165cb0328bc528bad2ec6b5f00d6692f4561460"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDE3Mjcz", "url": "https://github.com/apache/dolphinscheduler/pull/1970#pullrequestreview-363017273", "createdAt": "2020-02-22T08:12:22Z", "commit": {"oid": "3165cb0328bc528bad2ec6b5f00d6692f4561460"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDIyMDM4", "url": "https://github.com/apache/dolphinscheduler/pull/1970#pullrequestreview-363022038", "createdAt": "2020-02-22T10:25:23Z", "commit": {"oid": "3165cb0328bc528bad2ec6b5f00d6692f4561460"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1926, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}