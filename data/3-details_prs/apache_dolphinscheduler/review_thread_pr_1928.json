{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMjI1NjY4", "number": 1928, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDowMzoyMVrODepnsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDowMzoyMVrODepnsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDY1Nzc3OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-common/src/test/java/org/apache/dolphinscheduler/common/utils/ResInfoTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDowMzoyMVrOFn6AQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMToyMjozOVrOFn7SCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM4OTEyMw==", "bodyText": "There is  a code smell in Sonar analysis: Swap these 2 arguments so they are in the correct order: expected value, actual value.\nhttps://sonarcloud.io/project/issues?id=apache-dolphinscheduler&issues=AXAv9q6wCNVECePiTlLM&open=AXAv9q6wCNVECePiTlLM&pullRequest=1928", "url": "https://github.com/apache/dolphinscheduler/pull/1928#discussion_r377389123", "createdAt": "2020-02-11T00:03:21Z", "author": {"login": "Jave-Chen"}, "path": "dolphinscheduler-common/src/test/java/org/apache/dolphinscheduler/common/utils/ResInfoTest.java", "diffHunk": "@@ -14,13 +14,30 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n package org.apache.dolphinscheduler.common.utils;\n \n+import org.junit.Assert;\n+import org.junit.Test;\n+import java.util.Date;\n+import org.apache.dolphinscheduler.common.model.Server;\n+\n+public class ResInfoTest {\n+    @Test\n+    public void testGetHeartBeatInfo() {\n+        String info = ResInfo.getHeartBeatInfo(new Date());\n+        Assert.assertEquals(info.split(\",\").length, 7);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17162341c3af7277dbac584beff6abf733a796d9"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMDA1Nw==", "bodyText": "fixed", "url": "https://github.com/apache/dolphinscheduler/pull/1928#discussion_r377410057", "createdAt": "2020-02-11T01:22:39Z", "author": {"login": "khadgarmage"}, "path": "dolphinscheduler-common/src/test/java/org/apache/dolphinscheduler/common/utils/ResInfoTest.java", "diffHunk": "@@ -14,13 +14,30 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n package org.apache.dolphinscheduler.common.utils;\n \n+import org.junit.Assert;\n+import org.junit.Test;\n+import java.util.Date;\n+import org.apache.dolphinscheduler.common.model.Server;\n+\n+public class ResInfoTest {\n+    @Test\n+    public void testGetHeartBeatInfo() {\n+        String info = ResInfo.getHeartBeatInfo(new Date());\n+        Assert.assertEquals(info.split(\",\").length, 7);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM4OTEyMw=="}, "originalCommit": {"oid": "17162341c3af7277dbac584beff6abf733a796d9"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3440, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}