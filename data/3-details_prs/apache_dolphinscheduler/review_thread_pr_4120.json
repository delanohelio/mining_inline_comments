{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4OTE1NjYy", "number": 4120, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQwOTozOTowMVrOE-Pt1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxNToyODozNFrOE-RqLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNzA0NjYwOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/WorkerGroupService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQwOTozOTowMVrOH7XZDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxMDowODo0MlrOH7Xszg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAxMTI3Ng==", "bodyText": "It's best to pull it out here, and the code will be more readable.\n\u62bd\u79bb\u8fd9\u91cc\u7684\u5224\u65ad", "url": "https://github.com/apache/dolphinscheduler/pull/4120#discussion_r532011276", "createdAt": "2020-11-28T09:39:01Z", "author": {"login": "CalvinKirs"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/WorkerGroupService.java", "diffHunk": "@@ -120,30 +121,46 @@\n         return result;\n     }\n \n-\n     /**\n-     *  get worker groups\n+     * get worker groups\n      *\n      * @param isPaging whether paging\n      * @return WorkerGroup list\n      */\n     private List<WorkerGroup> getWorkerGroups(boolean isPaging) {\n-        String workerPath = zookeeperCachedOperator.getZookeeperConfig().getDsRoot()+\"/nodes\" +\"/worker\";\n-        List<String> workerGroupList = zookeeperCachedOperator.getChildrenKeys(workerPath);\n+\n+        String workerPath = zookeeperCachedOperator.getZookeeperConfig().getDsRoot() + \"/nodes\" + \"/worker\";\n+        List<WorkerGroup> workerGroups = new ArrayList<>();\n+        List<String> workerGroupList;\n+        try {\n+            workerGroupList = zookeeperCachedOperator.getChildrenKeys(workerPath);\n+        } catch (Exception e) {\n+            if (e.getMessage().contains(noNodeExceptionRegex)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4f552918542689c09017acf853a54ff58d318b1"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAxNjMzNA==", "bodyText": "I need to deal with two results, which is not easy to deal with\u3002\n\u8fd9\u5757\u8981\u5904\u7406\u4e24\u4e2a\u7ed3\u679c\uff0c\u62bd\u53d6\u65b9\u6cd5\uff0c\u4e0d\u592a\u597d\u5904\u7406\u3002", "url": "https://github.com/apache/dolphinscheduler/pull/4120#discussion_r532016334", "createdAt": "2020-11-28T10:08:42Z", "author": {"login": "felix-thinkingdata"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/WorkerGroupService.java", "diffHunk": "@@ -120,30 +121,46 @@\n         return result;\n     }\n \n-\n     /**\n-     *  get worker groups\n+     * get worker groups\n      *\n      * @param isPaging whether paging\n      * @return WorkerGroup list\n      */\n     private List<WorkerGroup> getWorkerGroups(boolean isPaging) {\n-        String workerPath = zookeeperCachedOperator.getZookeeperConfig().getDsRoot()+\"/nodes\" +\"/worker\";\n-        List<String> workerGroupList = zookeeperCachedOperator.getChildrenKeys(workerPath);\n+\n+        String workerPath = zookeeperCachedOperator.getZookeeperConfig().getDsRoot() + \"/nodes\" + \"/worker\";\n+        List<WorkerGroup> workerGroups = new ArrayList<>();\n+        List<String> workerGroupList;\n+        try {\n+            workerGroupList = zookeeperCachedOperator.getChildrenKeys(workerPath);\n+        } catch (Exception e) {\n+            if (e.getMessage().contains(noNodeExceptionRegex)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAxMTI3Ng=="}, "originalCommit": {"oid": "e4f552918542689c09017acf853a54ff58d318b1"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNzE1NTE5OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/WorkerGroupService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxMTowNDowOFrOH7YWgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxMjowMDo0NVrOH7YqcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAyNzAxMQ==", "bodyText": "i think it should be a constant variable  for worker path.", "url": "https://github.com/apache/dolphinscheduler/pull/4120#discussion_r532027011", "createdAt": "2020-11-28T11:04:08Z", "author": {"login": "lenboo"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/WorkerGroupService.java", "diffHunk": "@@ -120,30 +121,46 @@\n         return result;\n     }\n \n-\n     /**\n-     *  get worker groups\n+     * get worker groups\n      *\n      * @param isPaging whether paging\n      * @return WorkerGroup list\n      */\n     private List<WorkerGroup> getWorkerGroups(boolean isPaging) {\n-        String workerPath = zookeeperCachedOperator.getZookeeperConfig().getDsRoot()+\"/nodes\" +\"/worker\";\n-        List<String> workerGroupList = zookeeperCachedOperator.getChildrenKeys(workerPath);\n+\n+        String workerPath = zookeeperCachedOperator.getZookeeperConfig().getDsRoot() + \"/nodes\" + \"/worker\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4f552918542689c09017acf853a54ff58d318b1"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAzMjExMw==", "bodyText": "complete", "url": "https://github.com/apache/dolphinscheduler/pull/4120#discussion_r532032113", "createdAt": "2020-11-28T12:00:45Z", "author": {"login": "felix-thinkingdata"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/WorkerGroupService.java", "diffHunk": "@@ -120,30 +121,46 @@\n         return result;\n     }\n \n-\n     /**\n-     *  get worker groups\n+     * get worker groups\n      *\n      * @param isPaging whether paging\n      * @return WorkerGroup list\n      */\n     private List<WorkerGroup> getWorkerGroups(boolean isPaging) {\n-        String workerPath = zookeeperCachedOperator.getZookeeperConfig().getDsRoot()+\"/nodes\" +\"/worker\";\n-        List<String> workerGroupList = zookeeperCachedOperator.getChildrenKeys(workerPath);\n+\n+        String workerPath = zookeeperCachedOperator.getZookeeperConfig().getDsRoot() + \"/nodes\" + \"/worker\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAyNzAxMQ=="}, "originalCommit": {"oid": "e4f552918542689c09017acf853a54ff58d318b1"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNzM2NDkyOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/WorkerGroupService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxNToyODozNFrOH7Z3LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxMzozMDoyOFrOH7jiNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA1MTc1Ng==", "bodyText": "so do the \"default\" = DEFAULT_WORKER_GROUP", "url": "https://github.com/apache/dolphinscheduler/pull/4120#discussion_r532051756", "createdAt": "2020-11-28T15:28:34Z", "author": {"login": "lenboo"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/WorkerGroupService.java", "diffHunk": "@@ -120,30 +122,46 @@\n         return result;\n     }\n \n-\n     /**\n-     *  get worker groups\n+     * get worker groups\n      *\n      * @param isPaging whether paging\n      * @return WorkerGroup list\n      */\n     private List<WorkerGroup> getWorkerGroups(boolean isPaging) {\n-        String workerPath = zookeeperCachedOperator.getZookeeperConfig().getDsRoot()+\"/nodes\" +\"/worker\";\n-        List<String> workerGroupList = zookeeperCachedOperator.getChildrenKeys(workerPath);\n+\n+        String workerPath = zookeeperCachedOperator.getZookeeperConfig().getDsRoot() + Constants.ZOOKEEPER_DOLPHINSCHEDULER_WORKERS;\n+        List<WorkerGroup> workerGroups = new ArrayList<>();\n+        List<String> workerGroupList;\n+        try {\n+            workerGroupList = zookeeperCachedOperator.getChildrenKeys(workerPath);\n+        } catch (Exception e) {\n+            if (e.getMessage().contains(NO_NODE_EXCEPTION_REGEX)) {\n+                if (isPaging) {\n+                    return workerGroups;\n+                } else {\n+                    //ignore noNodeException return Default\n+                    WorkerGroup wg = new WorkerGroup();\n+                    wg.setName(\"default\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2323c45afa8483579b3d7683780b89124b84e30a"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjIxMDIzMA==", "bodyText": "ok", "url": "https://github.com/apache/dolphinscheduler/pull/4120#discussion_r532210230", "createdAt": "2020-11-29T13:30:28Z", "author": {"login": "felix-thinkingdata"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/WorkerGroupService.java", "diffHunk": "@@ -120,30 +122,46 @@\n         return result;\n     }\n \n-\n     /**\n-     *  get worker groups\n+     * get worker groups\n      *\n      * @param isPaging whether paging\n      * @return WorkerGroup list\n      */\n     private List<WorkerGroup> getWorkerGroups(boolean isPaging) {\n-        String workerPath = zookeeperCachedOperator.getZookeeperConfig().getDsRoot()+\"/nodes\" +\"/worker\";\n-        List<String> workerGroupList = zookeeperCachedOperator.getChildrenKeys(workerPath);\n+\n+        String workerPath = zookeeperCachedOperator.getZookeeperConfig().getDsRoot() + Constants.ZOOKEEPER_DOLPHINSCHEDULER_WORKERS;\n+        List<WorkerGroup> workerGroups = new ArrayList<>();\n+        List<String> workerGroupList;\n+        try {\n+            workerGroupList = zookeeperCachedOperator.getChildrenKeys(workerPath);\n+        } catch (Exception e) {\n+            if (e.getMessage().contains(NO_NODE_EXCEPTION_REGEX)) {\n+                if (isPaging) {\n+                    return workerGroups;\n+                } else {\n+                    //ignore noNodeException return Default\n+                    WorkerGroup wg = new WorkerGroup();\n+                    wg.setName(\"default\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA1MTc1Ng=="}, "originalCommit": {"oid": "2323c45afa8483579b3d7683780b89124b84e30a"}, "originalPosition": 126}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3227, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}