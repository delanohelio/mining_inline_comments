{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MzQ0ODg5", "number": 3427, "title": "[Feature][server,api,common,dao,remote] delay execution of tasks and improve some designs", "bodyText": "What is the purpose of the pull request\n\nAdded a function to delay the execution of tasks;\nAdd corresponding unit test;\nAdded statistics on delayed execution of tasks;\nChange the time point when the start time of various tasks is set;\nFix the bug that switch...case statement in NettyDecoder.java lacks break;\nFix the error that @ContextConfiguration lacks CuratorZookeeperClient.class in multiple test files;\nModify the newline format of the DateUtils.java file\nThe getRemainTime method is added to DateUtils, and the code for calculating the remaining time is changed to use the new tool method.\n\nRelated issues\n\n[Feature][Server] Allow tasks to be delayed#3426\n[Improvement][Server] Time setting #3352\n\nBrief change log\n\ndolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/dto/TaskCountDto.java added statistics of delayed execution tasks and fix a spelling error;\ndolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/enums/ExecutionStatus.java added delayed execution status;\ndolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/model/TaskNode.java added a delay attribute delayTime;\ndolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java added delay property delayTime and first submission time firstSubmitTime;\nFix the bug that the decode method lacks break in dolphinscheduler-remote/src/main/java/org/apache/dolphinscheduler/remote/codec/NettyDecoder.java;\ndolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/builder/TaskExecutionContextBuilder.java added delay property delayTime and current task status property currentExecutionStatus;\nAdd unit test dolphinscheduler-server/src/test/java/org/apache/dolphinscheduler/server/worker/runner/TaskExecuteThreadTest.java ;\nThe createTaskInstance method in dolphinscheduler-serve/src/main/java/org/apache/dolphinscheduler/server/master/runner/MasterExecThread.java removes the setting of the start time;\nCondition node execution thread and dependent node execution thread independently set the start time;\nAdded judgments on the delayed execution status of tasks DELAY_EXECUTION in multiple files;\ndolphinscheduler-serve/src/main/java/org/apache/dolphinscheduler/server/worker/runner/TaskExecuteThread.java added delayed execution code;\nAdd CuratorZookeeperClient.class to @ContextConfiguration in multiple test files;\nAdd fields delay_time and first_submit_time in the database t_ds_task_instance table, and modify the corresponding sql file;\nIDE tool automatically optimizes import (now, I had use the DS own code style configuration file to format the package import)\n\nVerify this pull request\n\nAll specified unit tests pass;\nPassed the black box test;\n\nHere are the details of the black box test:\ntest environment\n\nOperating system: macOS\nNumber of Master Nodes: 2\nNumber of Worker Nodes: 2\nWorker execution task type: Python\n\nTest details\nThe following test temporarily modified the judgment of no failover under the same HOST. The node crashes all use the -9 semaphore.\nNote: If a task needs to be executed later, the WORKER will change the status of the task to DELAY_EXECUTION when sending ACK for the first time; after the delay ends, before starting execution, it will send a second ACK to change the status of the task to RUNNING_EXECUTION and set the start time. There is only one ACK for tasks that do not need to be delayed.\nSimple single task\n\n\n\nTest case\nMaster status\nWorker status\nExpected result\nTest result\nDescription\n\n\n\n\nDependent node\nNormal\nNormal\nThe dependency is handled correctly, the start and end time are correct\nAs expected\n\n\n\nCondition node\nNormal\nNormal\nThe condition relationship is processed correctly, the start and end time are correct\nAs expected\n\n\n\nSubprocess node\nNormal\nNormal\nSubprocess execution is Normal, start and end time are correct\nAs expected\n\n\n\nPython node\nNormal\nNormal\nexecute the task correctly, start and end time is correct\nAs expected\n\n\n\n\nTask delay execution\n\n\n\nTest case\nMaster status\nWorker status\nExpected result\nTest result\nDescription\n\n\n\n\nPython node, delay execution for one minute, and the task content is sleep for one minute\nNormal\nNormal\nexecute the task correctly, query the task status at each time point in accordance with the real situation\nAs expected\nSUMITED_SUCCESS -> DELAY_EXECUTION -> RUNNING_EXECUTION -> SUCCESS status changed correctly\n\n\n\nWORKER node crash test\n\n\n\nTest case\nMaster status\nWorker status\nExpected result\nTest result\nDescription\n\n\n\n\nPython node, delay execution for one minute, and the task content is sleep for one minute\nNormal\nThe node receiving the task crashes before the first ACK\nThe host is empty, it will not trigger the failover\nAs expected\nAt this point Restart the Master, the task is resubmitted\n\n\nSame as above\nNormal\nThe node that receives the task crashes before the second ACK\nTriggers failover\nAs expected\nThe master submits a new same task\n\n\nSame as above\nNormal\nThe node that receives the task crashes while executing the task\nTriggers failover\nAs expected\nThe master submits a new same task\n\n\n\nMASTER node crash test\n\n\n\nTest case\nMaster status\nWorker status\nExpected result\nTest result\nDescription\n\n\n\n\nPython node, delay execution for one minute, and the task content is sleep for one minute\nThe node dispatching the task crashes before the first ACK\nNormal\nAnother node takes over the task until the task is completed\nAs expected\n\n\n\nSame as above\nThe node that dispatches the task crashes before the second ACK\nNormal\nAnother node takes over the task\nAs expected\n\n\n\nSame as above\nThe node that dispatches the task crashes during the execution of the task\nNormal\nAnother node takes over the task\nAs expected\n\n\n\n\nIn the above test, the various times of the workflow and task instances are set at the correct time.", "createdAt": "2020-08-07T01:51:47Z", "url": "https://github.com/apache/dolphinscheduler/pull/3427", "merged": true, "mergeCommit": {"oid": "a4ee351a3af1b05bafab48699f846e2b3ac226eb"}, "closed": true, "closedAt": "2020-08-19T03:36:32Z", "author": {"login": "vanilla111"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9fNLlgBqjM2MzgwNDQwMTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_orUpAFqTQ2ODEyNzU3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1df5c6b7eebb917c1269265cf236cf7ccde9978", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/c1df5c6b7eebb917c1269265cf236cf7ccde9978", "committedDate": "2020-08-06T14:42:23Z", "message": "delay execution of tasks and improve some designs"}, "afterCommit": {"oid": "823f8754fdfb8bf79d7fcbe7fc0179c338beb040", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/823f8754fdfb8bf79d7fcbe7fc0179c338beb040", "committedDate": "2020-08-10T09:55:57Z", "message": "delay execution of tasks and improve some designs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MTExMzU1", "url": "https://github.com/apache/dolphinscheduler/pull/3427#pullrequestreview-464111355", "createdAt": "2020-08-10T10:21:40Z", "commit": {"oid": "823f8754fdfb8bf79d7fcbe7fc0179c338beb040"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMDoyMTo0MFrOG-I9QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMDoyMTo0MFrOG-I9QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgxMTY0OA==", "bodyText": "You cannot directly break here, please refer to #3035", "url": "https://github.com/apache/dolphinscheduler/pull/3427#discussion_r467811648", "createdAt": "2020-08-10T10:21:40Z", "author": {"login": "CalvinKirs"}, "path": "dolphinscheduler-remote/src/main/java/org/apache/dolphinscheduler/remote/codec/NettyDecoder.java", "diffHunk": "@@ -55,15 +55,18 @@ protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) t\n             case MAGIC:\n                 checkMagic(in.readByte());\n                 checkpoint(State.COMMAND);\n+                break;\n             case COMMAND:\n                 commandHeader.setType(in.readByte());\n                 checkpoint(State.OPAQUE);\n+                break;\n             case OPAQUE:\n                 commandHeader.setOpaque(in.readLong());\n                 checkpoint(State.BODY_LENGTH);\n             case BODY_LENGTH:\n                 commandHeader.setBodyLength(in.readInt());\n                 checkpoint(State.BODY);\n+                break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "823f8754fdfb8bf79d7fcbe7fc0179c338beb040"}, "originalPosition": 33}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "823f8754fdfb8bf79d7fcbe7fc0179c338beb040", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/823f8754fdfb8bf79d7fcbe7fc0179c338beb040", "committedDate": "2020-08-10T09:55:57Z", "message": "delay execution of tasks and improve some designs"}, "afterCommit": {"oid": "5b5e86f47c0714331714ec0d82a6e3d25b9322dd", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/5b5e86f47c0714331714ec0d82a6e3d25b9322dd", "committedDate": "2020-08-10T13:16:58Z", "message": "delay execution of tasks and improve some designs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MjM5ODQw", "url": "https://github.com/apache/dolphinscheduler/pull/3427#pullrequestreview-464239840", "createdAt": "2020-08-10T13:43:38Z", "commit": {"oid": "5b5e86f47c0714331714ec0d82a6e3d25b9322dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0MzozOVrOG-PIxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0MzozOVrOG-PIxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxMjkwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\",timezone=\"GMT+8\")\n          \n          \n            \n                @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\", timezone=\"GMT+8\")\n          \n      \n    \n    \n  \n\nHi,\nPlease configure checkstyle.xml and code style xml in style directory. After configure that, you can use option+command+L to automatic format the code.\nCheckstyle.xml configuration lesson: https://www.cnblogs.com/wanshi1989/p/5478050.html\ncode style xml configuration lesson: https://blog.csdn.net/qq_34579060/article/details/80100040", "url": "https://github.com/apache/dolphinscheduler/pull/3427#discussion_r467912903", "createdAt": "2020-08-10T13:43:39Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java", "diffHunk": "@@ -84,6 +82,12 @@\n      */\n     private ExecutionStatus state;\n \n+    /**\n+     * task first submit time\n+     */\n+    @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\",timezone=\"GMT+8\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b5e86f47c0714331714ec0d82a6e3d25b9322dd"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MjQzNTM5", "url": "https://github.com/apache/dolphinscheduler/pull/3427#pullrequestreview-464243539", "createdAt": "2020-08-10T13:47:59Z", "commit": {"oid": "5b5e86f47c0714331714ec0d82a6e3d25b9322dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0Nzo1OVrOG-PTtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0Nzo1OVrOG-PTtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNTcwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            logger.error(\"exception\", e);\n          \n          \n            \n                            logger.error(\"delay task execution failure, the task will be executed directly.\" +\n          \n          \n            \n                            logger.error(\"exception\", e);\n          \n          \n            \n                            logger.error(\"delay task execution failure, the task will be executed directly.\" +\n          \n      \n    \n    \n  \n\nHi,\nIt will be better to combine these error log to one error log.", "url": "https://github.com/apache/dolphinscheduler/pull/3427#discussion_r467915703", "createdAt": "2020-08-10T13:47:59Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/runner/TaskExecuteThread.java", "diffHunk": "@@ -256,4 +272,60 @@ private void downloadResource(String execLocalPath,\n             }\n         }\n     }\n+\n+    /**\n+     * delay execution if needed\n+     */\n+    private void delayExecutionIfNeeded() {\n+        long remainTime = DateUtils.getRemainTime(taskExecutionContext.getFirstSubmitTime(),\n+                taskExecutionContext.getDelayTime() * 60L);\n+        logger.info(\"delay execution time: {} s\", remainTime < 0 ? 0 : remainTime);\n+        if (remainTime > 0) {\n+            try {\n+                Thread.sleep(remainTime * Constants.SLEEP_TIME_MILLIS);\n+            } catch (Exception e) {\n+                logger.error(\"exception\", e);\n+                logger.error(\"delay task execution failure, the task will be executed directly.\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b5e86f47c0714331714ec0d82a6e3d25b9322dd"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MjQ4ODkz", "url": "https://github.com/apache/dolphinscheduler/pull/3427#pullrequestreview-464248893", "createdAt": "2020-08-10T13:54:13Z", "commit": {"oid": "5b5e86f47c0714331714ec0d82a6e3d25b9322dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo1NDoxM1rOG-Pj1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo1NDoxM1rOG-Pj1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxOTgyOA==", "bodyText": "Hi~\nLooks like these files not need to be changed, you should revert these changes.\nThe same with TaskResponseService.java, TaskResponseEvent.java, TaskExecuteResponseCommand.java, BaseDataSource.java , common.properties, ZookeeperNodeManagerTest.java.", "url": "https://github.com/apache/dolphinscheduler/pull/3427#discussion_r467919828", "createdAt": "2020-08-10T13:54:13Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/zk/ZKMasterClient.java", "diffHunk": "@@ -16,6 +16,9 @@\n  */\n package org.apache.dolphinscheduler.server.zk;\n \n+import java.util.Date;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b5e86f47c0714331714ec0d82a6e3d25b9322dd"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MjU3Mzg1", "url": "https://github.com/apache/dolphinscheduler/pull/3427#pullrequestreview-464257385", "createdAt": "2020-08-10T14:03:38Z", "commit": {"oid": "5b5e86f47c0714331714ec0d82a6e3d25b9322dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDowMzozOFrOG-P8kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDowMzozOFrOG-P8kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyNjE2Mg==", "bodyText": "You can add the sql updater in this directory.", "url": "https://github.com/apache/dolphinscheduler/pull/3427#discussion_r467926162", "createdAt": "2020-08-10T14:03:38Z", "author": {"login": "yangyichao-mango"}, "path": "sql/dolphinscheduler-postgre.sql", "diffHunk": "@@ -566,8 +566,10 @@ CREATE TABLE t_ds_task_instance (\n   retry_interval int DEFAULT NULL ,\n   max_retry_times int DEFAULT NULL ,\n   task_instance_priority int DEFAULT NULL ,\n-   worker_group varchar(64),\n+  worker_group varchar(64),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b5e86f47c0714331714ec0d82a6e3d25b9322dd"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b5e86f47c0714331714ec0d82a6e3d25b9322dd", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/5b5e86f47c0714331714ec0d82a6e3d25b9322dd", "committedDate": "2020-08-10T13:16:58Z", "message": "delay execution of tasks and improve some designs"}, "afterCommit": {"oid": "32b16891160fddbacbf8bc59be380c80c0042f69", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/32b16891160fddbacbf8bc59be380c80c0042f69", "committedDate": "2020-08-11T07:48:50Z", "message": "delay execution of tasks and improve some designs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32b16891160fddbacbf8bc59be380c80c0042f69", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/32b16891160fddbacbf8bc59be380c80c0042f69", "committedDate": "2020-08-11T07:48:50Z", "message": "delay execution of tasks and improve some designs"}, "afterCommit": {"oid": "aa6d9a000fac2cb10b565a99ee532555a77e709a", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/aa6d9a000fac2cb10b565a99ee532555a77e709a", "committedDate": "2020-08-11T08:42:18Z", "message": "delay execution of tasks and improve some designs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2NTQyNTQz", "url": "https://github.com/apache/dolphinscheduler/pull/3427#pullrequestreview-466542543", "createdAt": "2020-08-13T08:18:47Z", "commit": {"oid": "70c77ef192005f92d0cb96643b253be5a9f20af8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODoxODo0N1rOHAA_3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwODoxODo0N1rOHAA_3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc3ODM5OQ==", "bodyText": "what's the difference between 'submitTime' and 'firstSubmitTime'\uff1f", "url": "https://github.com/apache/dolphinscheduler/pull/3427#discussion_r469778399", "createdAt": "2020-08-13T08:18:47Z", "author": {"login": "lenboo"}, "path": "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/entity/TaskInstance.java", "diffHunk": "@@ -298,6 +305,14 @@ public void setState(ExecutionStatus state) {\n         this.state = state;\n     }\n \n+    public Date getFirstSubmitTime() {\n+        return firstSubmitTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70c77ef192005f92d0cb96643b253be5a9f20af8"}, "originalPosition": 103}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTQzMTI2", "url": "https://github.com/apache/dolphinscheduler/pull/3427#pullrequestreview-467943126", "createdAt": "2020-08-15T03:12:26Z", "commit": {"oid": "70c77ef192005f92d0cb96643b253be5a9f20af8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMzoxMjoyNlrOHBHTeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMzoxMjoyNlrOHBHTeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkzMDI5OA==", "bodyText": "Hi,\nAfter this PR is merged, we can further talk about the optimize of the delayed task execution. The current implementation method is Thread.sleep()\u3002\nI personally understand that many scenarios that need to use delay should be tens of minutes or several hours. In this scenario, task threads will be occupied all the time and will not be released, which will consume a lot of resources. After this PR is merged, we can talk about the optimization. For example, we can put the delayed tasks into a deferred execution pool and have a separate thread to scan whether they can be executed, and take out the tasks to be executed.\n\n\u7b49\u8fd9\u4e2apr\u5408\u4e86\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u8ba8\u8bba\u4e0b\u628a\u5ef6\u8fdf\u7684\u4efb\u52a1\u6267\u884c\u4f18\u5316\u4e0b\uff0c\u73b0\u5728\u7684\u5b9e\u73b0\u65b9\u5f0f\u662fThread.sleep()\u3002\n\u6211\u4e2a\u4eba\u7406\u89e3\uff0c\u5f88\u591a\u9700\u8981\u7528\u5230\u5ef6\u8fdf\u7684\u573a\u666f\u5e94\u8be5\u90fd\u662f\u51e0\u5341\u5206\u949f\u6216\u8005\u51e0\u4e2a\u5c0f\u65f6\u7684\u5ef6\u8fdf\uff0c\u8fd9\u79cd\u573a\u666f\u4e0b\u4efb\u52a1\u7ebf\u7a0b\u4f1a\u4e00\u76f4\u88ab\u5360\u7528\uff0c\u5f97\u4e0d\u5230\u91ca\u653e\uff0c\u4f1a\u5bf9\u8d44\u6e90\u6d88\u8017\u5f88\u5927\u3002\u4e4b\u540e\u53ef\u4ee5\u8ba8\u8bba\u4e0b\u662f\u4e0d\u662f\u53ef\u4ee5\u628a\u5ef6\u8fdf\u6267\u884c\u7684\u4efb\u52a1\u653e\u5728\u4e00\u4e2a\u5ef6\u8fdf\u6267\u884c\u6c60\u91cc\uff0c\u5355\u72ec\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53bb\u626b\u63cf\u662f\u5426\u53ef\u4ee5\u6267\u884c\uff0c\u5c06\u9700\u8981\u6267\u884c\u7684\u4efb\u52a1\u62ff\u51fa\u6765\u8fdb\u884c\u6267\u884c\u3002\nIf you have any suggestions or questions, welcome to put forward~", "url": "https://github.com/apache/dolphinscheduler/pull/3427#discussion_r470930298", "createdAt": "2020-08-15T03:12:26Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/runner/TaskExecuteThread.java", "diffHunk": "@@ -256,4 +275,59 @@ private void downloadResource(String execLocalPath,\n             }\n         }\n     }\n+\n+    /**\n+     * delay execution if needed\n+     */\n+    private void delayExecutionIfNeeded() {\n+        long remainTime = DateUtils.getRemainTime(taskExecutionContext.getFirstSubmitTime(),\n+                taskExecutionContext.getDelayTime() * 60L);\n+        logger.info(\"delay execution time: {} s\", remainTime < 0 ? 0 : remainTime);\n+        if (remainTime > 0) {\n+            try {\n+                Thread.sleep(remainTime * Constants.SLEEP_TIME_MILLIS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70c77ef192005f92d0cb96643b253be5a9f20af8"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTQzNDM3", "url": "https://github.com/apache/dolphinscheduler/pull/3427#pullrequestreview-467943437", "createdAt": "2020-08-15T03:18:49Z", "commit": {"oid": "70c77ef192005f92d0cb96643b253be5a9f20af8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMzoxODo0OVrOHBHVbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMzoyNjozNVrOHBHX7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkzMDc5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\",timezone=\"GMT+8\")\n          \n          \n            \n                @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\", timezone=\"GMT+8\")", "url": "https://github.com/apache/dolphinscheduler/pull/3427#discussion_r470930797", "createdAt": "2020-08-15T03:18:49Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/entity/TaskExecutionContext.java", "diffHunk": "@@ -42,6 +43,12 @@\n      */\n     private String taskName;\n \n+    /**\n+     *  task first submit time\n+     */\n+    @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\",timezone=\"GMT+8\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70c77ef192005f92d0cb96643b253be5a9f20af8"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkzMTQzNg==", "bodyText": "Delete unused function, or you can check whether there is the unreleased resources(eg. Unreleased thread poll) in tests that can be released in this fucntion.\n\n\u5220\u9664\u6ca1\u6709\u7528\u5230\u7684function\uff0c\u6216\u8005\u53ef\u4ee5\u68c0\u67e5\u4e0b\u4e4b\u524d\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u662f\u5426\u6709\u6ca1\u6709\u91ca\u653e\u7684\u8d44\u6e90\uff08\u6bd4\u5982\u6ca1\u6709\u5173\u95ed\u7684\u7ebf\u7a0b\u6c60\uff09\uff0c\u53ef\u4ee5\u5728\u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u91ca\u653e\u8d44\u6e90\u3002", "url": "https://github.com/apache/dolphinscheduler/pull/3427#discussion_r470931436", "createdAt": "2020-08-15T03:26:35Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-server/src/test/java/org/apache/dolphinscheduler/server/worker/runner/TaskExecuteThreadTest.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.server.worker.runner;\n+\n+import java.util.Date;\n+\n+import org.apache.dolphinscheduler.common.enums.ExecutionStatus;\n+import org.apache.dolphinscheduler.common.model.TaskNode;\n+import org.apache.dolphinscheduler.common.task.AbstractParameters;\n+import org.apache.dolphinscheduler.common.utils.CommonUtils;\n+import org.apache.dolphinscheduler.common.utils.JSONUtils;\n+import org.apache.dolphinscheduler.common.utils.LoggerUtils;\n+import org.apache.dolphinscheduler.remote.command.Command;\n+import org.apache.dolphinscheduler.remote.command.TaskExecuteAckCommand;\n+import org.apache.dolphinscheduler.remote.command.TaskExecuteResponseCommand;\n+import org.apache.dolphinscheduler.server.entity.TaskExecutionContext;\n+import org.apache.dolphinscheduler.server.worker.cache.impl.TaskExecutionContextCacheManagerImpl;\n+import org.apache.dolphinscheduler.server.worker.processor.TaskCallbackService;\n+import org.apache.dolphinscheduler.server.worker.task.AbstractTask;\n+import org.apache.dolphinscheduler.server.worker.task.TaskManager;\n+import org.apache.dolphinscheduler.service.bean.SpringApplicationContext;\n+import org.junit.After;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.powermock.api.mockito.PowerMockito;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * test task execute thread\n+ */\n+@RunWith(PowerMockRunner.class)\n+@PrepareForTest({TaskManager.class, JSONUtils.class, CommonUtils.class, SpringApplicationContext.class})\n+public class TaskExecuteThreadTest {\n+\n+    private TaskExecutionContext taskExecutionContext;\n+\n+    private TaskCallbackService taskCallbackService;\n+\n+    private Command ackCommand;\n+\n+    private Command responseCommand;\n+\n+    private Logger taskLogger;\n+\n+    private TaskExecutionContextCacheManagerImpl taskExecutionContextCacheManager;\n+\n+    @Before\n+    public void before() {\n+        // init task execution context, logger\n+        taskExecutionContext = new TaskExecutionContext();\n+        taskExecutionContext.setProcessId(12345);\n+        taskExecutionContext.setProcessDefineId(1);\n+        taskExecutionContext.setProcessInstanceId(1);\n+        taskExecutionContext.setTaskInstanceId(1);\n+        taskExecutionContext.setTaskType(\"\");\n+        taskExecutionContext.setFirstSubmitTime(new Date());\n+        taskExecutionContext.setDelayTime(0);\n+        taskExecutionContext.setLogPath(\"/tmp/test.log\");\n+        taskExecutionContext.setHost(\"localhost\");\n+        taskExecutionContext.setExecutePath(\"/tmp/dolphinscheduler/exec/process/1/2/3/4\");\n+\n+        ackCommand = new TaskExecuteAckCommand().convert2Command();\n+        responseCommand = new TaskExecuteResponseCommand(taskExecutionContext.getTaskInstanceId()).convert2Command();\n+\n+        taskLogger = LoggerFactory.getLogger(LoggerUtils.buildTaskId(\n+                LoggerUtils.TASK_LOGGER_INFO_PREFIX,\n+                taskExecutionContext.getProcessDefineId(),\n+                taskExecutionContext.getProcessInstanceId(),\n+                taskExecutionContext.getTaskInstanceId()\n+        ));\n+\n+        taskExecutionContextCacheManager = new TaskExecutionContextCacheManagerImpl();\n+        taskExecutionContextCacheManager.cacheTaskExecutionContext(taskExecutionContext);\n+\n+        taskCallbackService = PowerMockito.mock(TaskCallbackService.class);\n+        PowerMockito.doNothing().when(taskCallbackService).sendAck(taskExecutionContext.getTaskInstanceId(), ackCommand);\n+        PowerMockito.doNothing().when(taskCallbackService).sendResult(taskExecutionContext.getTaskInstanceId(), responseCommand);\n+\n+        PowerMockito.mockStatic(SpringApplicationContext.class);\n+        PowerMockito.when(SpringApplicationContext.getBean(TaskExecutionContextCacheManagerImpl.class))\n+                .thenReturn(taskExecutionContextCacheManager);\n+\n+        PowerMockito.mockStatic(TaskManager.class);\n+        PowerMockito.when(TaskManager.newTask(taskExecutionContext, taskLogger))\n+                .thenReturn(new SimpleTask(taskExecutionContext, taskLogger));\n+\n+        PowerMockito.mockStatic(JSONUtils.class);\n+        PowerMockito.when(JSONUtils.parseObject(taskExecutionContext.getTaskJson(), TaskNode.class))\n+                .thenReturn(new TaskNode());\n+\n+        PowerMockito.mockStatic(CommonUtils.class);\n+        PowerMockito.when(CommonUtils.getSystemEnvPath()).thenReturn(\"/user_home/.bash_profile\");\n+    }\n+\n+    @Test\n+    public void testNormalExecution() {\n+        taskExecutionContext.setTaskType(\"SQL\");\n+        taskExecutionContext.setStartTime(new Date());\n+        taskExecutionContext.setCurrentExecutionStatus(ExecutionStatus.RUNNING_EXECUTION);\n+        TaskExecuteThread taskExecuteThread = new TaskExecuteThread(taskExecutionContext, taskCallbackService, taskLogger);\n+        taskExecuteThread.run();\n+\n+        Assert.assertEquals(ExecutionStatus.SUCCESS, taskExecutionContext.getCurrentExecutionStatus());\n+    }\n+\n+    @Test\n+    public void testDelayExecution() {\n+        taskExecutionContext.setTaskType(\"PYTHON\");\n+        taskExecutionContext.setStartTime(null);\n+        taskExecutionContext.setDelayTime(1);\n+        taskExecutionContext.setCurrentExecutionStatus(ExecutionStatus.DELAY_EXECUTION);\n+        TaskExecuteThread taskExecuteThread = new TaskExecuteThread(taskExecutionContext, taskCallbackService, taskLogger);\n+        taskExecuteThread.run();\n+\n+        Assert.assertEquals(ExecutionStatus.SUCCESS, taskExecutionContext.getCurrentExecutionStatus());\n+    }\n+\n+    @After\n+    public void after() throws Exception {\n+        //\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70c77ef192005f92d0cb96643b253be5a9f20af8"}, "originalPosition": 141}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70c77ef192005f92d0cb96643b253be5a9f20af8", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/70c77ef192005f92d0cb96643b253be5a9f20af8", "committedDate": "2020-08-12T02:49:26Z", "message": "Use DS own code format configuration file format import"}, "afterCommit": {"oid": "472250085a052dcb4ee32b4e27a1ec8d5e42bc2b", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/472250085a052dcb4ee32b4e27a1ec8d5e42bc2b", "committedDate": "2020-08-15T04:48:13Z", "message": "delay execution of tasks and improve some designs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e56fb191ba64214c514966a4c4398af753de4f1", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/9e56fb191ba64214c514966a4c4398af753de4f1", "committedDate": "2020-08-15T05:56:50Z", "message": "add empty line"}, "afterCommit": {"oid": "ba4dfe2e282d4e9264bb3a7e5fee222f8c1cd459", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/ba4dfe2e282d4e9264bb3a7e5fee222f8c1cd459", "committedDate": "2020-08-16T04:51:42Z", "message": "delay execution of tasks and improve some designs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba4dfe2e282d4e9264bb3a7e5fee222f8c1cd459", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/ba4dfe2e282d4e9264bb3a7e5fee222f8c1cd459", "committedDate": "2020-08-16T04:51:42Z", "message": "delay execution of tasks and improve some designs"}, "afterCommit": {"oid": "c74fd8d6dbda57f010c7c615a31869c93c58d210", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/c74fd8d6dbda57f010c7c615a31869c93c58d210", "committedDate": "2020-08-16T09:53:18Z", "message": "format code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c74fd8d6dbda57f010c7c615a31869c93c58d210", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/c74fd8d6dbda57f010c7c615a31869c93c58d210", "committedDate": "2020-08-16T09:53:18Z", "message": "format code"}, "afterCommit": {"oid": "baf32af6ef62928b5c4d1a88f1215e50ef205e4b", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/baf32af6ef62928b5c4d1a88f1215e50ef205e4b", "committedDate": "2020-08-16T11:15:32Z", "message": "delay execution of tasks and improve some designs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "baf32af6ef62928b5c4d1a88f1215e50ef205e4b", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/baf32af6ef62928b5c4d1a88f1215e50ef205e4b", "committedDate": "2020-08-16T11:15:32Z", "message": "delay execution of tasks and improve some designs"}, "afterCommit": {"oid": "bf495b6236928654349b7f0500c92d595a158311", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/bf495b6236928654349b7f0500c92d595a158311", "committedDate": "2020-08-16T11:47:30Z", "message": "delay execution of tasks and improve some designs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf495b6236928654349b7f0500c92d595a158311", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/bf495b6236928654349b7f0500c92d595a158311", "committedDate": "2020-08-16T11:47:30Z", "message": "delay execution of tasks and improve some designs"}, "afterCommit": {"oid": "831aaa2f5cdfcd37f2a3c4630d4821cb9e9737bd", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/831aaa2f5cdfcd37f2a3c4630d4821cb9e9737bd", "committedDate": "2020-08-16T12:31:17Z", "message": "delay execution of tasks and improve some designs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27e933216b3203be0a2220234941b3cb7a08c2a5", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/27e933216b3203be0a2220234941b3cb7a08c2a5", "committedDate": "2020-08-16T12:38:35Z", "message": "delay execution of tasks and improve some designs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "831aaa2f5cdfcd37f2a3c4630d4821cb9e9737bd", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/831aaa2f5cdfcd37f2a3c4630d4821cb9e9737bd", "committedDate": "2020-08-16T12:31:17Z", "message": "delay execution of tasks and improve some designs"}, "afterCommit": {"oid": "27e933216b3203be0a2220234941b3cb7a08c2a5", "author": {"user": {"login": "vanilla111", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/27e933216b3203be0a2220234941b3cb7a08c2a5", "committedDate": "2020-08-16T12:38:35Z", "message": "delay execution of tasks and improve some designs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDYzNjYz", "url": "https://github.com/apache/dolphinscheduler/pull/3427#pullrequestreview-468063663", "createdAt": "2020-08-16T13:17:32Z", "commit": {"oid": "27e933216b3203be0a2220234941b3cb7a08c2a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTI3NTcw", "url": "https://github.com/apache/dolphinscheduler/pull/3427#pullrequestreview-468127570", "createdAt": "2020-08-17T02:06:50Z", "commit": {"oid": "27e933216b3203be0a2220234941b3cb7a08c2a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1725, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}