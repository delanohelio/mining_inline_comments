{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyNTA4ODY0", "number": 3244, "title": "[Feature-3134]Refactor to use a shared singleton Curator Zookeeper Client", "bodyText": "Tips\n\nThanks very much for contributing to Apache DolphinScheduler.\nPlease review https://dolphinscheduler.apache.org/en-us/community/index.html before opening a pull request.\n\nWhat is the purpose of the pull request\nfix #3134\nBrief change log\n(for example:)\n\nAdd a CuratorZookeeperClient class to hold a shared CuratorFramework instance.\n\nVerify this pull request\n(Please pick either of the following options)\nThis pull request is code cleanup without any test coverage.\n(or)\nThis pull request is already covered by existing tests, such as (please describe tests).\n(or)\nThis change added tests and can be verified as follows:\n(example:)\n\nAdded dolphinscheduler-dao tests for end-to-end.\nAdded CronUtilsTest to verify the change.\nManually verified the change by testing locally.", "createdAt": "2020-07-19T11:25:18Z", "url": "https://github.com/apache/dolphinscheduler/pull/3244", "merged": true, "mergeCommit": {"oid": "5b7efd2d33bb9d045a4b8b361f29703ce1afc640"}, "closed": true, "closedAt": "2020-07-23T03:02:32Z", "author": {"login": "tswstarplanet"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLRycaAH2gAyNDUyNTA4ODY0OjZlNDBlOWIxOTZhMDU3MjIyZjBjZmI2Zjc2YmMxMTczYmI5YzkwN2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3mfJmAFqTQ1MzgxMDU0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6e40e9b196a057222f0cfb6f76bc1173bb9c907f", "author": {"user": {"login": "tswstarplanet", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/6e40e9b196a057222f0cfb6f76bc1173bb9c907f", "committedDate": "2020-03-07T10:02:44Z", "message": "Merge pull request #1 from apache/dev\n\nsync official"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a416b254830a13ad2147d24f5930af03746cf77c", "author": {"user": {"login": "tswstarplanet", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/a416b254830a13ad2147d24f5930af03746cf77c", "committedDate": "2020-03-09T04:28:58Z", "message": "Merge pull request #2 from apache/dev\n\nsync official"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ed94ccbf1b0e3edcad2fe37b31ff14c51a0e5c8", "author": {"user": {"login": "tswstarplanet", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/4ed94ccbf1b0e3edcad2fe37b31ff14c51a0e5c8", "committedDate": "2020-07-13T15:11:41Z", "message": "Merge pull request #3 from apache/dev\n\nsync official"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52669d42fcc3358df0be64a85a959d8bf9b05684", "author": {"user": {"login": "tswstarplanet", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/52669d42fcc3358df0be64a85a959d8bf9b05684", "committedDate": "2020-07-15T16:12:13Z", "message": "Merge pull request #4 from apache/dev\n\nsync official"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c435f78f880eac014fbfa211cc04e9827e691f3", "author": {"user": {"login": "tswstarplanet", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/2c435f78f880eac014fbfa211cc04e9827e691f3", "committedDate": "2020-07-16T13:17:52Z", "message": "Merge pull request #5 from apache/dev\n\nsync official"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bab9a100caedc73a0145bf3498158929d6519904", "author": {"user": {"login": "tswstarplanet", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/bab9a100caedc73a0145bf3498158929d6519904", "committedDate": "2020-07-19T05:49:13Z", "message": "Merge pull request #6 from apache/dev\n\nsync official"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d42fa8962c7b85b45510ee0a81b82371e3b0406e", "author": {"user": {"login": "tswstarplanet", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/d42fa8962c7b85b45510ee0a81b82371e3b0406e", "committedDate": "2020-07-19T11:23:30Z", "message": "[Feature-3134]Refactor to use a shared singleton Curator Zookeeper Client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bab90cc204d39cabcacf56ebd39948fb8431940", "author": {"user": {"login": "tswstarplanet", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/3bab90cc204d39cabcacf56ebd39948fb8431940", "committedDate": "2020-07-19T14:07:36Z", "message": "autowire CuratorZookeeperClient to ZookeeperOperator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMjI0Mzc3", "url": "https://github.com/apache/dolphinscheduler/pull/3244#pullrequestreview-451224377", "createdAt": "2020-07-20T01:49:34Z", "commit": {"oid": "3bab90cc204d39cabcacf56ebd39948fb8431940"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMTo0OTozNFrOGz0Wlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMTo0OTozNFrOGz0Wlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk4ODMxMQ==", "bodyText": "Hi,\nGood job,\nBut why we need to delete the state changed and log for record the master address from MasterRegistry?", "url": "https://github.com/apache/dolphinscheduler/pull/3244#discussion_r456988311", "createdAt": "2020-07-20T01:49:34Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/registry/MasterRegistry.java", "diffHunk": "@@ -83,19 +83,6 @@ public void registry() {\n         String address = NetUtils.getHost();\n         String localNodePath = getMasterPath();\n         zookeeperRegistryCenter.getZookeeperCachedOperator().persistEphemeral(localNodePath, \"\");\n-        zookeeperRegistryCenter.getZookeeperCachedOperator().getZkClient().getConnectionStateListenable().addListener(new ConnectionStateListener() {\n-            @Override\n-            public void stateChanged(CuratorFramework client, ConnectionState newState) {\n-                if(newState == ConnectionState.LOST){\n-                    logger.error(\"master : {} connection lost from zookeeper\", address);\n-                } else if(newState == ConnectionState.RECONNECTED){\n-                    logger.info(\"master : {} reconnected to zookeeper\", address);\n-                    zookeeperRegistryCenter.getZookeeperCachedOperator().persistEphemeral(localNodePath, \"\");\n-                } else if(newState == ConnectionState.SUSPENDED){\n-                    logger.warn(\"master : {} connection SUSPENDED \", address);\n-                }\n-            }\n-        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bab90cc204d39cabcacf56ebd39948fb8431940"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "775afe094f02dfd773ebc2f06475a722b24288ac", "author": {"user": {"login": "yangyichao-mango", "name": "Yichao Yang"}}, "url": "https://github.com/apache/dolphinscheduler/commit/775afe094f02dfd773ebc2f06475a722b24288ac", "committedDate": "2020-07-20T04:29:38Z", "message": "[Improvement] Add the issue specifications reference (#3221)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e67e2e09e616e89f8371794d739a0bdcf2785c82", "author": {"user": {"login": "tswstarplanet", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/e67e2e09e616e89f8371794d739a0bdcf2785c82", "committedDate": "2020-07-20T04:29:38Z", "message": "log zookeeper address when the connect state change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMTI0MTIy", "url": "https://github.com/apache/dolphinscheduler/pull/3244#pullrequestreview-452124122", "createdAt": "2020-07-21T04:50:50Z", "commit": {"oid": "e67e2e09e616e89f8371794d739a0bdcf2785c82"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNDo1MDo1MVrOG0n_0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNDo1MDo1MVrOG0n_0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzgzNDQ1MA==", "bodyText": "Hi,\nBecause remove the master zk address log from MasterRegistry, please add the master zk address to log, not the zk server info.\n\n\u56e0\u4e3a\u6211\u4eec\u662f\u4ecemasterregistry\u4e2d\u5220\u9664\u4e86master zk\u8282\u70b9\u7684\u65e5\u5fd7\uff0c\u60f3\u8981\u6dfb\u52a0\u5230CuratorZkCLient\u4e2d\u3002\u6240\u4ee5CuratorZkCLient\u65e5\u5fd7\u4fe1\u606f\u5e94\u8be5\u662fmaster zk\u8282\u70b9\u7684\u65e5\u5fd7\u4fe1\u606f\uff0c\u800c\u4e0d\u662fzk\u5730\u5740\u4fe1\u606f\u3002\nIf you have any question or suggestion, please put forward.", "url": "https://github.com/apache/dolphinscheduler/pull/3244#discussion_r457834450", "createdAt": "2020-07-21T04:50:51Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/CuratorZookeeperClient.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.dolphinscheduler.service.zk;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.curator.framework.CuratorFramework;\n+import org.apache.curator.framework.CuratorFrameworkFactory;\n+import org.apache.curator.framework.api.ACLProvider;\n+import org.apache.curator.framework.state.ConnectionState;\n+import org.apache.curator.retry.ExponentialBackoffRetry;\n+import org.apache.zookeeper.ZooDefs;\n+import org.apache.zookeeper.data.ACL;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.List;\n+\n+import static org.apache.dolphinscheduler.common.utils.Preconditions.checkNotNull;\n+\n+/**\n+ * Shared Curator zookeeper client\n+ */\n+@Component\n+public class CuratorZookeeperClient implements InitializingBean {\n+    private final Logger logger = LoggerFactory.getLogger(CuratorZookeeperClient.class);\n+\n+    @Autowired\n+    private ZookeeperConfig zookeeperConfig;\n+\n+    private CuratorFramework zkClient;\n+\n+\n+    @Override\n+    public void afterPropertiesSet() throws Exception {\n+        this.zkClient = buildClient();\n+        initStateLister();\n+    }\n+\n+    private CuratorFramework buildClient() {\n+        logger.info(\"zookeeper registry center init, server lists is: {}.\", zookeeperConfig.getServerList());\n+\n+        CuratorFrameworkFactory.Builder builder = CuratorFrameworkFactory.builder().ensembleProvider(new DefaultEnsembleProvider(checkNotNull(zookeeperConfig.getServerList(),\"zookeeper quorum can't be null\")))\n+                .retryPolicy(new ExponentialBackoffRetry(zookeeperConfig.getBaseSleepTimeMs(), zookeeperConfig.getMaxRetries(), zookeeperConfig.getMaxSleepMs()));\n+\n+        //these has default value\n+        if (0 != zookeeperConfig.getSessionTimeoutMs()) {\n+            builder.sessionTimeoutMs(zookeeperConfig.getSessionTimeoutMs());\n+        }\n+        if (0 != zookeeperConfig.getConnectionTimeoutMs()) {\n+            builder.connectionTimeoutMs(zookeeperConfig.getConnectionTimeoutMs());\n+        }\n+        if (StringUtils.isNotBlank(zookeeperConfig.getDigest())) {\n+            builder.authorization(\"digest\", zookeeperConfig.getDigest().getBytes(StandardCharsets.UTF_8)).aclProvider(new ACLProvider() {\n+\n+                @Override\n+                public List<ACL> getDefaultAcl() {\n+                    return ZooDefs.Ids.CREATOR_ALL_ACL;\n+                }\n+\n+                @Override\n+                public List<ACL> getAclForPath(final String path) {\n+                    return ZooDefs.Ids.CREATOR_ALL_ACL;\n+                }\n+            });\n+        }\n+        zkClient = builder.build();\n+        zkClient.start();\n+        try {\n+            zkClient.blockUntilConnected();\n+        } catch (final Exception ex) {\n+            throw new RuntimeException(ex);\n+        }\n+        return zkClient;\n+    }\n+\n+    public void initStateLister() {\n+        checkNotNull(zkClient);\n+\n+        zkClient.getConnectionStateListenable().addListener((client, newState) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e67e2e09e616e89f8371794d739a0bdcf2785c82"}, "originalPosition": 97}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa0ad0fd92df8f9aa832ffea4f2ded01509aaa5d", "author": {"user": {"login": "tswstarplanet", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/fa0ad0fd92df8f9aa832ffea4f2ded01509aaa5d", "committedDate": "2020-07-21T12:32:01Z", "message": "resume the operation of add connect state listener in MasterRegistry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNDI5MzI5", "url": "https://github.com/apache/dolphinscheduler/pull/3244#pullrequestreview-452429329", "createdAt": "2020-07-21T13:01:08Z", "commit": {"oid": "fa0ad0fd92df8f9aa832ffea4f2ded01509aaa5d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODEwNTQx", "url": "https://github.com/apache/dolphinscheduler/pull/3244#pullrequestreview-453810541", "createdAt": "2020-07-23T03:02:20Z", "commit": {"oid": "fa0ad0fd92df8f9aa832ffea4f2ded01509aaa5d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1777, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}