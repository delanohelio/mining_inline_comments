{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NDIzNDQ5", "number": 3141, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzo1ODoyOVrOELsnrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjo1NTowM1rOENkStA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzAwODQ3OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzo1ODoyOVrOGtYb9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODoxMTo1NlrOGtzrfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzOTQ3OA==", "bodyText": "please use logger.error, not use e.printStackTrace", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r450239478", "createdAt": "2020-07-06T13:58:29Z", "author": {"login": "dailidong"}, "path": "dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java", "diffHunk": "@@ -19,17 +19,40 @@\n import org.junit.Assert;\n import org.junit.Test;\n \n-// ZKServer is a process, can't unit test\n-public class ZKServerTest {\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicReference;\n \n+public class ZKServerTest {\n \n     @Test\n-    public void isStarted() {\n-        Assert.assertEquals(false, ZKServer.isStarted());\n+    public void testRunWithDefaultPort() {\n+        AtomicReference<ZKServer> zkServer = new AtomicReference<>();\n+        new Thread(() -> {\n+            zkServer.set(new ZKServer());\n+            zkServer.get().start();\n+        }).start();\n+        try {\n+            TimeUnit.SECONDS.sleep(5);\n+            Assert.assertEquals(true, zkServer.get().isStarted());\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6351373ceff1564df6fad93feb800b5179345e47"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY4NTgyMQ==", "bodyText": "solved", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r450685821", "createdAt": "2020-07-07T08:11:56Z", "author": {"login": "tswstarplanet"}, "path": "dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java", "diffHunk": "@@ -19,17 +19,40 @@\n import org.junit.Assert;\n import org.junit.Test;\n \n-// ZKServer is a process, can't unit test\n-public class ZKServerTest {\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicReference;\n \n+public class ZKServerTest {\n \n     @Test\n-    public void isStarted() {\n-        Assert.assertEquals(false, ZKServer.isStarted());\n+    public void testRunWithDefaultPort() {\n+        AtomicReference<ZKServer> zkServer = new AtomicReference<>();\n+        new Thread(() -> {\n+            zkServer.set(new ZKServer());\n+            zkServer.get().start();\n+        }).start();\n+        try {\n+            TimeUnit.SECONDS.sleep(5);\n+            Assert.assertEquals(true, zkServer.get().isStarted());\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzOTQ3OA=="}, "originalCommit": {"oid": "6351373ceff1564df6fad93feb800b5179345e47"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzAxMTUyOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxMzo1OTowNlrOGtYdxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDoxMjozNlrOGtZBbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzOTk0Mg==", "bodyText": "the same with the last one", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r450239942", "createdAt": "2020-07-06T13:59:06Z", "author": {"login": "dailidong"}, "path": "dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java", "diffHunk": "@@ -19,17 +19,40 @@\n import org.junit.Assert;\n import org.junit.Test;\n \n-// ZKServer is a process, can't unit test\n-public class ZKServerTest {\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicReference;\n \n+public class ZKServerTest {\n \n     @Test\n-    public void isStarted() {\n-        Assert.assertEquals(false, ZKServer.isStarted());\n+    public void testRunWithDefaultPort() {\n+        AtomicReference<ZKServer> zkServer = new AtomicReference<>();\n+        new Thread(() -> {\n+            zkServer.set(new ZKServer());\n+            zkServer.get().start();\n+        }).start();\n+        try {\n+            TimeUnit.SECONDS.sleep(5);\n+            Assert.assertEquals(true, zkServer.get().isStarted());\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+        zkServer.get().stop();\n     }\n \n     @Test\n-    public void stop() {\n-        ZKServer.stop();\n+    public void testRunWithCustomPort() {\n+        AtomicReference<ZKServer> zkServer = new AtomicReference<>();\n+        new Thread(() -> {\n+            zkServer.set(new ZKServer(2182));\n+            zkServer.get().start();\n+        }).start();\n+        try {\n+            TimeUnit.SECONDS.sleep(5);\n+            Assert.assertEquals(true, zkServer.get().isStarted());\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6351373ceff1564df6fad93feb800b5179345e47"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI0OTA3MQ==", "bodyText": "They're not exactly identical. The last one uses the default port, but this one use a custom port", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r450249071", "createdAt": "2020-07-06T14:12:36Z", "author": {"login": "tswstarplanet"}, "path": "dolphinscheduler-service/src/test/java/org/apache/dolphinscheduler/service/zk/ZKServerTest.java", "diffHunk": "@@ -19,17 +19,40 @@\n import org.junit.Assert;\n import org.junit.Test;\n \n-// ZKServer is a process, can't unit test\n-public class ZKServerTest {\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicReference;\n \n+public class ZKServerTest {\n \n     @Test\n-    public void isStarted() {\n-        Assert.assertEquals(false, ZKServer.isStarted());\n+    public void testRunWithDefaultPort() {\n+        AtomicReference<ZKServer> zkServer = new AtomicReference<>();\n+        new Thread(() -> {\n+            zkServer.set(new ZKServer());\n+            zkServer.get().start();\n+        }).start();\n+        try {\n+            TimeUnit.SECONDS.sleep(5);\n+            Assert.assertEquals(true, zkServer.get().isStarted());\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+        zkServer.get().stop();\n     }\n \n     @Test\n-    public void stop() {\n-        ZKServer.stop();\n+    public void testRunWithCustomPort() {\n+        AtomicReference<ZKServer> zkServer = new AtomicReference<>();\n+        new Thread(() -> {\n+            zkServer.set(new ZKServer(2182));\n+            zkServer.get().start();\n+        }).start();\n+        try {\n+            TimeUnit.SECONDS.sleep(5);\n+            Assert.assertEquals(true, zkServer.get().isStarted());\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDIzOTk0Mg=="}, "originalCommit": {"oid": "6351373ceff1564df6fad93feb800b5179345e47"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTkyMTkyOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMzozMDo0NlrOGwM2LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMzozMDo0NlrOGwM2LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NTMwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.error(\"Failed to start ZK: \" + e);\n          \n          \n            \n                        logger.error(\"Failed to start ZK \", e);", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453195308", "createdAt": "2020-07-11T13:30:46Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -34,44 +34,62 @@\n public class ZKServer {\n     private static final Logger logger = LoggerFactory.getLogger(ZKServer.class);\n \n-    private static volatile PublicZooKeeperServerMain zkServer = null;\n-\n     public static final int DEFAULT_ZK_TEST_PORT = 2181;\n \n-    private static String dataDir = null;\n+    private final AtomicBoolean isStarted = new AtomicBoolean(false);\n+\n+    private PublicZooKeeperServerMain zooKeeperServerMain = null;\n+\n+    private int port;\n+\n+    private String dataDir = null;\n \n-    private static final AtomicBoolean isStarted = new AtomicBoolean(false);\n+    private String prefix;\n \n     public static void main(String[] args) {\n-        if(!isStarted()){\n-            ZKServer.start();\n-\n-            /**\n-             *  register hooks, which are called before the process exits\n-             */\n-            Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {\n-                @Override\n-                public void run() {\n-                    stop();\n-                }\n-            }));\n-        }else{\n-            logger.info(\"zk server aleady started\");\n+        ZKServer zkServer;\n+        if (args.length == 0) {\n+            zkServer = new ZKServer();\n+        } else if (args.length == 1){\n+            zkServer = new ZKServer(Integer.valueOf(args[0]), \"\");\n+        } else {\n+            zkServer = new ZKServer(Integer.valueOf(args[0]), args[1]);\n         }\n+        zkServer.registerHook();\n+        zkServer.start();\n+    }\n+\n+    public ZKServer() {\n+        this(DEFAULT_ZK_TEST_PORT, \"\");\n+    }\n+\n+    public ZKServer(int port, String prefix) {\n+        this.port = port;\n+        if (prefix.contains(\"/\")) {\n+            throw new IllegalArgumentException(\"The prefix of path may not have '/'\");\n+        }\n+        this.prefix = prefix;\n+    }\n+\n+    private void registerHook() {\n+        /**\n+         *  register hooks, which are called before the process exits\n+         */\n+        Runtime.getRuntime().addShutdownHook(new Thread(this::stop));\n     }\n \n     /**\n      * start service\n      */\n-    public static void start() {\n+    public void start() {\n         try {\n-            startLocalZkServer(DEFAULT_ZK_TEST_PORT);\n+            startLocalZkServer(port);\n         } catch (Exception e) {\n             logger.error(\"Failed to start ZK: \" + e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9872db09e36b8efbd0441df56175139ea13745f1"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTkyMzQwOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMzozMzowM1rOGwM22g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNjo0Mjo1N1rOGwN4XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NTQ4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String zkDataDir = System.getProperty(\"user.dir\") + (\"\".equals(prefix) ? prefix : (\"/\" + prefix)) + \"/zookeeper_data\";\n          \n          \n            \n                    String zkDataDir = System.getProperty(\"user.dir\") + (StringUtils.isBlank(prefix) ? StringUtils.EMPTY : (\"/\" + prefix)) + \"/zookeeper_data\";\n          \n      \n    \n    \n  \n\nHi,\nGood job.\nIs it better to use this utils of org.apache.dolphinscheduler.common.utils.StringUtils?", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453195482", "createdAt": "2020-07-11T13:33:03Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -94,8 +112,9 @@ public void shutdown() {\n      *\n      * @param port The port to listen on\n      */\n-    public static void startLocalZkServer(final int port) {\n-        String zkDataDir = System.getProperty(\"user.dir\") +\"/zookeeper_data\";\n+    public void startLocalZkServer(final int port) {\n+        String zkDataDir = System.getProperty(\"user.dir\") + (\"\".equals(prefix) ? prefix : (\"/\" + prefix)) + \"/zookeeper_data\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9872db09e36b8efbd0441df56175139ea13745f1"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjI1Mw==", "bodyText": "solved", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453212253", "createdAt": "2020-07-11T16:42:57Z", "author": {"login": "tswstarplanet"}, "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -94,8 +112,9 @@ public void shutdown() {\n      *\n      * @param port The port to listen on\n      */\n-    public static void startLocalZkServer(final int port) {\n-        String zkDataDir = System.getProperty(\"user.dir\") +\"/zookeeper_data\";\n+    public void startLocalZkServer(final int port) {\n+        String zkDataDir = System.getProperty(\"user.dir\") + (\"\".equals(prefix) ? prefix : (\"/\" + prefix)) + \"/zookeeper_data\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NTQ4Mg=="}, "originalCommit": {"oid": "9872db09e36b8efbd0441df56175139ea13745f1"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTkyNjcwOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMzozNzowN1rOGwM4ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNjowMDozMFrOGwNpww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NTg3Nw==", "bodyText": "Hi,\nWhy introduce logger.warn(\"The path of zk server exists\");?", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453195877", "createdAt": "2020-07-11T13:37:07Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -94,8 +112,9 @@ public void shutdown() {\n      *\n      * @param port The port to listen on\n      */\n-    public static void startLocalZkServer(final int port) {\n-        String zkDataDir = System.getProperty(\"user.dir\") +\"/zookeeper_data\";\n+    public void startLocalZkServer(final int port) {\n+        String zkDataDir = System.getProperty(\"user.dir\") + (\"\".equals(prefix) ? prefix : (\"/\" + prefix)) + \"/zookeeper_data\";\n+        logger.warn(\"The path of zk server exists\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9872db09e36b8efbd0441df56175139ea13745f1"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwODUxNQ==", "bodyText": "The check of whether the directory exists omit. It just warn the previous data may be overwritten. I will add it.", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453208515", "createdAt": "2020-07-11T16:00:30Z", "author": {"login": "tswstarplanet"}, "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -94,8 +112,9 @@ public void shutdown() {\n      *\n      * @param port The port to listen on\n      */\n-    public static void startLocalZkServer(final int port) {\n-        String zkDataDir = System.getProperty(\"user.dir\") +\"/zookeeper_data\";\n+    public void startLocalZkServer(final int port) {\n+        String zkDataDir = System.getProperty(\"user.dir\") + (\"\".equals(prefix) ? prefix : (\"/\" + prefix)) + \"/zookeeper_data\";\n+        logger.warn(\"The path of zk server exists\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NTg3Nw=="}, "originalCommit": {"oid": "9872db09e36b8efbd0441df56175139ea13745f1"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTkzODgyOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMzo1Mzo1MVrOGwM9_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNjo0MjozOFrOGwN4PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NzMwOQ==", "bodyText": "Hi,\nIs it better to add isStarted.get() compare in if statement because of the public of startLocalZkServer function?\nThe same of stop function.\nThx a lot for your contribution.", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453197309", "createdAt": "2020-07-11T13:53:51Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -108,11 +127,11 @@ public static void startLocalZkServer(final int port) {\n      * @param tickTime    zk tick time\n      * @param maxClientCnxns    zk max client connections\n      */\n-    private static synchronized void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {\n-        if (zkServer != null) {\n+    private void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {\n+        if (zooKeeperServerMain != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9872db09e36b8efbd0441df56175139ea13745f1"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjIyMQ==", "bodyText": "solved", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453212221", "createdAt": "2020-07-11T16:42:38Z", "author": {"login": "tswstarplanet"}, "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -108,11 +127,11 @@ public static void startLocalZkServer(final int port) {\n      * @param tickTime    zk tick time\n      * @param maxClientCnxns    zk max client connections\n      */\n-    private static synchronized void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {\n-        if (zkServer != null) {\n+    private void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {\n+        if (zooKeeperServerMain != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NzMwOQ=="}, "originalCommit": {"oid": "9872db09e36b8efbd0441df56175139ea13745f1"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTk0Mzc5OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNDowMToxNFrOGwNAZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNjo0MjoxMFrOGwN4Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NzkyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        zooKeeperServerMain.initializeAndRun(args);\n          \n          \n            \n                    } catch (QuorumPeerConfig.ConfigException e) {\n          \n          \n            \n                        logger.warn(\"Caught exception while starting ZK\", e);\n          \n          \n            \n                    } catch (IOException e) {\n          \n          \n            \n                        zooKeeperServerMain.initializeAndRun(args);\n          \n          \n            \n                    } catch (QuorumPeerConfig.ConfigException | IOException e) {\n          \n          \n            \n                        logger.warn(\"Caught exception while starting ZK\", e);\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nHi,\nIs it better to merge tow exceptions into one catch block if the two exceptions are handled in the same way?\nIf it is convenient for you, I think you can modify this part.\nThx a lot for your contribution.", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453197926", "createdAt": "2020-07-11T14:01:14Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -121,7 +140,7 @@ private static synchronized void startLocalZkServer(final int port, final String\n             logger.info(\"Zookeeper server started \");\n             isStarted.compareAndSet(false, true);\n \n-            zkServer.initializeAndRun(args);\n+            zooKeeperServerMain.initializeAndRun(args);\n         } catch (QuorumPeerConfig.ConfigException e) {\n             logger.warn(\"Caught exception while starting ZK\", e);\n         } catch (IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9872db09e36b8efbd0441df56175139ea13745f1"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjE3OQ==", "bodyText": "solved", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453212179", "createdAt": "2020-07-11T16:42:10Z", "author": {"login": "tswstarplanet"}, "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -121,7 +140,7 @@ private static synchronized void startLocalZkServer(final int port, final String\n             logger.info(\"Zookeeper server started \");\n             isStarted.compareAndSet(false, true);\n \n-            zkServer.initializeAndRun(args);\n+            zooKeeperServerMain.initializeAndRun(args);\n         } catch (QuorumPeerConfig.ConfigException e) {\n             logger.warn(\"Caught exception while starting ZK\", e);\n         } catch (IOException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5NzkyNg=="}, "originalCommit": {"oid": "9872db09e36b8efbd0441df56175139ea13745f1"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjYxNTU2OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjo1NTowM1rOGwR1PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjo1NTowM1rOGwR1PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3Njk4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {\n          \n          \n            \n                private void startLocalZkServer(final int port, final String dataDirPath, final int tickTime, String maxClientCnxns) {\n          \n      \n    \n    \n  \n\nHi,\nThx a lot for your good job and contribution.\nPlease configure the checkstyle.xml plugin[1] to your IDE to help format code.\n[1] https://github.com/apache/incubator-dolphinscheduler/tree/dev/style", "url": "https://github.com/apache/dolphinscheduler/pull/3141#discussion_r453276988", "createdAt": "2020-07-12T06:55:03Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-service/src/main/java/org/apache/dolphinscheduler/service/zk/ZKServer.java", "diffHunk": "@@ -108,31 +131,29 @@ public static void startLocalZkServer(final int port) {\n      * @param tickTime    zk tick time\n      * @param maxClientCnxns    zk max client connections\n      */\n-    private static synchronized void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {\n-        if (zkServer != null) {\n-            throw new RuntimeException(\"Zookeeper server is already started!\");\n-        }\n-        zkServer = new PublicZooKeeperServerMain();\n-        logger.info(\"Zookeeper data path : {} \", dataDirPath);\n-        dataDir = dataDirPath;\n-        final String[] args = new String[]{Integer.toString(port), dataDirPath, Integer.toString(tickTime), maxClientCnxns};\n+    private void startLocalZkServer(final int port, final String dataDirPath,final int tickTime,String maxClientCnxns) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e121a697d051e6a1c34d26de3b9e3a6d0b18441b"}, "originalPosition": 120}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3402, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}