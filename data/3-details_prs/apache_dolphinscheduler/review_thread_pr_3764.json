{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MDE3MTE2", "number": 3764, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMTozNzo1NFrOEk7uoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMTozNzo1NFrOEk7uoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MTYyNzg0OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/ProcessDefinitionServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMTozNzo1NFrOHUJgRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMTozNzo1NFrOHUJgRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg4OTI4Nw==", "bodyText": "Filter here is for - AbstractParameters.  not for params.getResourceFilesList(). please check.", "url": "https://github.com/apache/dolphinscheduler/pull/3764#discussion_r490889287", "createdAt": "2020-09-18T11:37:54Z", "author": {"login": "Technoboy-"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/ProcessDefinitionServiceImpl.java", "diffHunk": "@@ -232,25 +232,14 @@\n      * @return resource ids\n      */\n     private String getResourceIds(ProcessData processData) {\n-        List<TaskNode> tasks = processData.getTasks();\n-        Set<Integer> resourceIds = new HashSet<>();\n-        for (TaskNode taskNode : tasks) {\n-            String taskParameter = taskNode.getParams();\n-            AbstractParameters params = TaskParametersUtils.getParameters(taskNode.getType(), taskParameter);\n-            if (CollectionUtils.isNotEmpty(params.getResourceFilesList())) {\n-                Set<Integer> tempSet = params.getResourceFilesList().stream().map(t -> t.getId()).collect(Collectors.toSet());\n-                resourceIds.addAll(tempSet);\n-            }\n-        }\n-\n-        StringBuilder sb = new StringBuilder();\n-        for (int i : resourceIds) {\n-            if (sb.length() > 0) {\n-                sb.append(\",\");\n-            }\n-            sb.append(i);\n-        }\n-        return sb.toString();\n+        return processData.getTasks()\n+                .stream()\n+                .map(taskNode -> TaskParametersUtils.getParameters(taskNode.getType(), taskNode.getParams()))\n+                .filter(Objects::nonNull)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0fa5fc0b9d4dc3ed4416c13f6a8557505c1d555"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3316, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}