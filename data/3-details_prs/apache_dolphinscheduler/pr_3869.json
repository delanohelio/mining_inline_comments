{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NTcwOTgz", "number": 3869, "title": "[feature#3356] alert-spi support DingTalk&WeChat", "bodyText": "this closes #3356\nTBD:need test,delete old class", "createdAt": "2020-10-06T14:02:45Z", "url": "https://github.com/apache/dolphinscheduler/pull/3869", "merged": true, "mergeCommit": {"oid": "449cbbe21eaca0d2a886d90ce2731702347bf45a"}, "closed": true, "closedAt": "2020-11-02T02:08:29Z", "author": {"login": "CalvinKirs"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNLkxJAH2gAyNDk4NTcwOTgzOmE5ZTM3OTI3ZWIyZDMyNmNiN2U5MzhmNWZlMGZiNmZjNjEwYmI2YWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYa2NxAFqTUyMTI5NTEwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a9e37927eb2d326cb7e938f5fe0fb6fc610bb6ad", "author": {"user": {"login": "break60", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/a9e37927eb2d326cb7e938f5fe0fb6fc610bb6ad", "committedDate": "2020-09-28T04:07:22Z", "message": "[feature-3665][ui]Add element-ui (#3666)\n\n* [feature-3665][ui]Add element-ui\r\n\r\n* add license"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e117bb8265ac0778a022a40f5c8adbefb0b77aa", "author": {"user": {"login": "break60", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/2e117bb8265ac0778a022a40f5c8adbefb0b77aa", "committedDate": "2020-09-28T04:07:22Z", "message": "Add form-create plug-in and alarm group management add sample demo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50bfb30994e6472949b3081a798a9e4b0eb59297", "author": {"user": {"login": "break60", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/50bfb30994e6472949b3081a798a9e4b0eb59297", "committedDate": "2020-09-28T04:07:22Z", "message": "Modify node version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9221b24d5703062269f6ad0553f4b562b07299c6", "author": {"user": {"login": "break60", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/9221b24d5703062269f6ad0553f4b562b07299c6", "committedDate": "2020-09-28T04:07:22Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ac14629b51b6ba4ddb1365b277416bdea0fc2df", "author": {"user": {"login": "break60", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/8ac14629b51b6ba4ddb1365b277416bdea0fc2df", "committedDate": "2020-09-28T04:07:22Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d5c34a6aba73c50e91fddccb758a22d3f940713", "author": {"user": {"login": "break60", "name": null}}, "url": "https://github.com/apache/dolphinscheduler/commit/3d5c34a6aba73c50e91fddccb758a22d3f940713", "committedDate": "2020-09-28T04:07:23Z", "message": "[feature][ui]Alert plugin design (#3734)\n\n* [feature-3665][ui]Add element-ui (#3666)\r\n\r\n* [feature-3665][ui]Add element-ui\r\n\r\n* add license\r\n\r\n* Add form-create plug-in and alarm group management add sample demo\r\n\r\n* Modify node version\r\n\r\n* fix\r\n\r\n* fix\r\n\r\n* [Feature-3682][ui]Add form-create plug-in and alarm group management add sample demo (#3683)\r\n\r\n* Add form-create plug-in and alarm group management add sample demo\r\n\r\n* Modify node version\r\n\r\n* fix\r\n\r\n* fix\r\n\r\n* [feature][ui] Add alarm instance page\r\n\r\n* [feature-3665][ui]Add element-ui (#3666)\r\n\r\n* [feature-3665][ui]Add element-ui\r\n\r\n* add license\r\n\r\n* Add form-create plug-in and alarm group management add sample demo\r\n\r\n* Modify node version\r\n\r\n* fix\r\n\r\n* fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "392e9f5fb26912bacdb7d8831ea77deee7b9953a", "author": {"user": {"login": "gaojun2048", "name": "gaojun2048"}}, "url": "https://github.com/apache/dolphinscheduler/commit/392e9f5fb26912bacdb7d8831ea77deee7b9953a", "committedDate": "2020-09-28T04:07:23Z", "message": "[Feature-3189][alert,spi,dao,plugin-api] base code of dolphinscheduler spi and alert plugin implement (#3601)\n\n* DS SPI\r\n\r\n* Add DolphinScheduler SPI , and rebuilt the code of the Alert plug-in based on SPI\r\n\r\n* Add DolphinScheduler SPI , and rebuilt the code of the Alert plug-in based on SPI\r\n\r\n* add TODO\r\n\r\n* delete\r\n\r\n* compile\r\n\r\n* spi commit\r\n\r\n* Plugin Alert\r\n\r\n* fix some bug\r\n\r\n* add todo\r\n\r\n* change web ui from alpacajs to form-create\r\n\r\n* remove module\r\n\r\n* add plugin schema\r\n\r\n* add license header\r\n\r\n* update alert and spi module version\r\n\r\n* update the alert plugin sub module version\r\n\r\n* comment the maven.local.repository param\r\n\r\n* move utils from spi to common module\r\n\r\n* add license header\r\n\r\n* add license header and delete some chinese comment\r\n\r\n* update spi packages\r\n\r\n* delete no use alert_xx.properties\r\n\r\n* update mysql.connector.version back to 5.1.34\r\n\r\n* delete no use comment in pom.xml\r\n\r\n* update email stmp password\r\n\r\n* add license\r\n\r\n* add semicolon to sql/upgrade/1.4.0_schema/mysql/dolphinscheduler_ddl.sql file\r\n\r\n* format the code style\r\n\r\n* format new clase file with checkstyle\r\n\r\n* update plugin params to Builder model\r\n\r\n* move JSONUtils to SPI because plugin can not dependency common module\r\n\r\n* move JSONUtils to SPI because plugin can not dependency common module\r\n\r\n* delete collection dependency\r\n\r\n* replace PluginParamsTransfer to spi PluginParamsTransfer\r\n\r\n* update dolphinscheduler-maven-plugin to 1.0.0\r\n\r\n* update license\r\n\r\n* update apache-rat-plugin add exclude '.iml' file\r\n\r\n* check license\r\n\r\n* ArtifactResolver only use in development and configPlugins is not empty\r\n\r\n* ArtifactResolver only use in development and configPlugins is not empty\r\n\r\n* ArtifactResolver only use in development and configPlugins is not empty\r\n\r\n* default datasource should be postgresql\r\n\r\n* add license files\r\n\r\n* add license files\r\n\r\n* postgresql port should be 5432\r\n\r\n* postgresql test\r\n\r\n* mv show_type to spi\r\n\r\nadd license header to AlertConstants\r\n\r\n* check style fix\r\n\r\n* copy check style file from branch dev\r\n\r\n* alert show_type set by plugin\r\n\r\n* alert show_type set by plugin\r\n\r\n* add PluginDefineMapper to dolphinscheduler-server/src/test/java/org/apache/dolphinscheduler/server/registry/DependencyConfig.java\r\n\r\n* add Bean to TaskCallbackServiceTestConfig\r\n\r\n* add Bean to TaskCallbackServiceTestConfig\r\n\r\n* fix check style\r\n\r\n* check style fix\r\n\r\n* [feature-3665][ui]Add element-ui (#3666)\r\n\r\n* [feature-3665][ui]Add element-ui\r\n\r\n* add license\r\n\r\n* fix check style\r\n\r\n* [Feature-3682][ui]Add form-create plug-in and alarm group management add sample demo (#3683)\r\n\r\n* Add form-create plug-in and alarm group management add sample demo\r\n\r\n* Modify node version\r\n\r\n* fix\r\n\r\n* fix\r\n\r\n* check style fix\r\n\r\n* rollback test change\r\n\r\n* rollback test change\r\n\r\n* rollback dao pom change\r\n\r\n* [feature-3665][ui]Add element-ui (#3666)\r\n\r\n* [feature-3665][ui]Add element-ui\r\n\r\n* add license\r\n\r\n* Add form-create plug-in and alarm group management add sample demo\r\n\r\n* Modify node version\r\n\r\n* fix\r\n\r\n* fix\r\n\r\n* add ut to pom.xml\r\n\r\n* add upgrade schema to global schema\r\n\r\n* fix ut failed\r\n\r\n* fix ut failed\r\n\r\n* fix ut failed\r\n\r\n* fix ut failed\r\n\r\n* add test EmailAlertPluginTest to pom.xml\r\n\r\n* fix ut failed\r\n\r\n* fix ut failed\r\n\r\n* fix check style\r\n\r\n* update license header to presto license header\r\n\r\n* presto license header not check\r\n\r\n* fix ut coverage\r\n\r\n* fix ut coverage\r\n\r\n* fix ut\r\n\r\n* fix ut\r\n\r\n* fix ut\r\n\r\n* fix ut coverage\r\n\r\n* fix ut coverage\r\n\r\n* fix ut coverage\r\n\r\n* fix ut coverage\r\n\r\n* fix ut coverage\r\n\r\n* fix ut coverage\r\n\r\nCo-authored-by: break60 <790061044@qq.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21dc62aa74f0a6a649a78e49c343b7d7419eefa1", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/21dc62aa74f0a6a649a78e49c343b7d7419eefa1", "committedDate": "2020-10-06T14:01:17Z", "message": "[feature#3356] alert-spi support DingTalk\n\nthis closes # 3356"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDU1MTcy", "url": "https://github.com/apache/dolphinscheduler/pull/3869#pullrequestreview-506055172", "createdAt": "2020-10-10T01:57:47Z", "commit": {"oid": "21dc62aa74f0a6a649a78e49c343b7d7419eefa1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5391e3d2daa7a44b60792f93184d488468d2c64", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/b5391e3d2daa7a44b60792f93184d488468d2c64", "committedDate": "2020-10-12T09:52:19Z", "message": "add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "607de347d236186eefc9c950e80ba840d4f0a75a", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/607de347d236186eefc9c950e80ba840d4f0a75a", "committedDate": "2020-10-12T10:05:19Z", "message": "Merge branch 'alert_plugin_design' into ding_talk_alert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7b1e3d6c6fb50cdee4425003dfad4eb280c3315", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/d7b1e3d6c6fb50cdee4425003dfad4eb280c3315", "committedDate": "2020-10-12T10:30:04Z", "message": "code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23c00cac0aea8222844f0b139e2fb39d7f0efab5", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/23c00cac0aea8222844f0b139e2fb39d7f0efab5", "committedDate": "2020-10-12T10:30:21Z", "message": "Merge remote-tracking branch 'origin/ding_talk_alert' into ding_talk_alert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2397f93f3b6b204cc262510eda766d0e01d576a4", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/2397f93f3b6b204cc262510eda766d0e01d576a4", "committedDate": "2020-10-16T16:29:24Z", "message": "we chat alert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21fec404f407ff98c1bbed11135b0efee6146a5c", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/21fec404f407ff98c1bbed11135b0efee6146a5c", "committedDate": "2020-10-17T02:12:06Z", "message": "support we chat alert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43c812410ebb4cd0336034e24b26b581cbc5916a", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/43c812410ebb4cd0336034e24b26b581cbc5916a", "committedDate": "2020-10-17T02:15:35Z", "message": "support we chat alert"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MDMxOTU1", "url": "https://github.com/apache/dolphinscheduler/pull/3869#pullrequestreview-507031955", "createdAt": "2020-10-13T02:45:55Z", "commit": {"oid": "23c00cac0aea8222844f0b139e2fb39d7f0efab5"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMjo0NTo1NVrOHgTdkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMjo1MzoxMVrOHgTlFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYzNTM0NA==", "bodyText": "This lines can be replace by :\nMap<String, String> paramsMap = PluginParamsTransfer.getPluginParamsMap(alertParams);", "url": "https://github.com/apache/dolphinscheduler/pull/3869#discussion_r503635344", "createdAt": "2020-10-13T02:45:55Z", "author": {"login": "gaojun2048"}, "path": "dolphinscheduler-alert-plugin/dolphinscheduler-alert-dingtalk/src/main/java/org/apache/dolphinscheduler/plugin/alert/dingtalk/DingTalkAlertChannel.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.plugin.alert.dingtalk;\n+\n+import org.apache.dolphinscheduler.spi.alert.AlertChannel;\n+import org.apache.dolphinscheduler.spi.alert.AlertData;\n+import org.apache.dolphinscheduler.spi.alert.AlertInfo;\n+import org.apache.dolphinscheduler.spi.alert.AlertResult;\n+import org.apache.dolphinscheduler.spi.params.base.PluginParams;\n+import org.apache.dolphinscheduler.spi.utils.JSONUtils;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * DingTalkAlertChannel\n+ */\n+public class DingTalkAlertChannel implements AlertChannel {\n+    private static final Logger logger = LoggerFactory.getLogger(DingTalkAlertChannel.class);\n+\n+    @Override\n+    public AlertResult process(AlertInfo alertInfo) {\n+\n+        AlertData alertData = alertInfo.getAlertData();\n+        String alertParams = alertInfo.getAlertParams();\n+        List<PluginParams> pluginParams = JSONUtils.toList(alertParams, PluginParams.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23c00cac0aea8222844f0b139e2fb39d7f0efab5"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYzNjM5OQ==", "bodyText": "I think we need add the message to AlertResult when send message failed.\nYou can add it by alertResult.setMessage()", "url": "https://github.com/apache/dolphinscheduler/pull/3869#discussion_r503636399", "createdAt": "2020-10-13T02:49:51Z", "author": {"login": "gaojun2048"}, "path": "dolphinscheduler-alert-plugin/dolphinscheduler-alert-dingtalk/src/main/java/org/apache/dolphinscheduler/plugin/alert/dingtalk/DingTalkAlertChannel.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.plugin.alert.dingtalk;\n+\n+import org.apache.dolphinscheduler.spi.alert.AlertChannel;\n+import org.apache.dolphinscheduler.spi.alert.AlertData;\n+import org.apache.dolphinscheduler.spi.alert.AlertInfo;\n+import org.apache.dolphinscheduler.spi.alert.AlertResult;\n+import org.apache.dolphinscheduler.spi.params.base.PluginParams;\n+import org.apache.dolphinscheduler.spi.utils.JSONUtils;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * DingTalkAlertChannel\n+ */\n+public class DingTalkAlertChannel implements AlertChannel {\n+    private static final Logger logger = LoggerFactory.getLogger(DingTalkAlertChannel.class);\n+\n+    @Override\n+    public AlertResult process(AlertInfo alertInfo) {\n+\n+        AlertData alertData = alertInfo.getAlertData();\n+        String alertParams = alertInfo.getAlertParams();\n+        List<PluginParams> pluginParams = JSONUtils.toList(alertParams, PluginParams.class);\n+        Map<String, String> paramsMap = new HashMap<>();\n+        for (PluginParams param : pluginParams) {\n+            paramsMap.put(param.getName(), param.getValue().toString());\n+        }\n+        AlertResult alertResult = new AlertResult();\n+        alertResult.setStatus(Boolean.toString(Boolean.TRUE));\n+        DingTalkSender dingTalkSender = new DingTalkSender(paramsMap);\n+        try {\n+            dingTalkSender.sendDingTalkMsg(alertData.getTitle(), alertData.getContent());\n+        } catch (IOException e) {\n+            alertResult.setStatus(Boolean.toString(Boolean.FALSE));\n+            logger.error(e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23c00cac0aea8222844f0b139e2fb39d7f0efab5"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzYzNzI2OA==", "bodyText": "RadioParam need two options, you only gave a \"NO\" option.", "url": "https://github.com/apache/dolphinscheduler/pull/3869#discussion_r503637268", "createdAt": "2020-10-13T02:53:11Z", "author": {"login": "gaojun2048"}, "path": "dolphinscheduler-alert-plugin/dolphinscheduler-alert-dingtalk/src/main/java/org/apache/dolphinscheduler/plugin/alert/dingtalk/DingTalkAlertChannelFactory.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.plugin.alert.dingtalk;\n+\n+import org.apache.dolphinscheduler.spi.alert.AlertChannel;\n+import org.apache.dolphinscheduler.spi.alert.AlertChannelFactory;\n+import org.apache.dolphinscheduler.spi.params.InputParam;\n+import org.apache.dolphinscheduler.spi.params.PasswordParam;\n+import org.apache.dolphinscheduler.spi.params.RadioParam;\n+import org.apache.dolphinscheduler.spi.params.base.ParamsOptions;\n+import org.apache.dolphinscheduler.spi.params.base.PluginParams;\n+import org.apache.dolphinscheduler.spi.params.base.Validate;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/**\n+ * DingTalkAlertChannelFactory\n+ */\n+public class DingTalkAlertChannelFactory implements AlertChannelFactory {\n+    @Override\n+    public String getName() {\n+        return \"ding talk alert\";\n+    }\n+\n+    @Override\n+    public List<PluginParams> getParams() {\n+        InputParam webHookParam = InputParam.newBuilder(DingTalkParamsConstants.NAME_DING_TALK_WEB_HOOK, DingTalkParamsConstants.DING_TALK_WEB_HOOK)\n+            .addValidate(Validate.newBuilder()\n+                .setRequired(true)\n+                .build())\n+            .build();\n+        InputParam keywordParam = InputParam.newBuilder(DingTalkParamsConstants.NAME_DING_TALK_KEYWORD, DingTalkParamsConstants.DING_TALK_KEYWORD)\n+            .addValidate(Validate.newBuilder()\n+                .setRequired(true)\n+                .build())\n+            .build();\n+        RadioParam isEnableProxy =\n+            RadioParam.newBuilder(DingTalkParamsConstants.NAME_DING_TALK_PROXY_ENABLE, DingTalkParamsConstants.NAME_DING_TALK_PROXY_ENABLE)\n+                .addParamsOptions(new ParamsOptions(\"NO\", false, false))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23c00cac0aea8222844f0b139e2fb39d7f0efab5"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8e9239ca970439fa54dcc02728fb5c1532bb693", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/c8e9239ca970439fa54dcc02728fb5c1532bb693", "committedDate": "2020-10-18T05:44:02Z", "message": "support we chat alert,update ding talk alert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc7ad2403e1ad136037a28498bda1c0fb22ea567", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/bc7ad2403e1ad136037a28498bda1c0fb22ea567", "committedDate": "2020-10-18T05:56:59Z", "message": "code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9190f3dfc4c1988a63d976e0170afe35bbabb7c3", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/9190f3dfc4c1988a63d976e0170afe35bbabb7c3", "committedDate": "2020-10-18T06:55:30Z", "message": "add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf4d8880528b2b47c317b27647bf775cf35d4d4d", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/bf4d8880528b2b47c317b27647bf775cf35d4d4d", "committedDate": "2020-10-18T06:58:03Z", "message": "code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad60be0f29762b49f7a5b6911e96b7079d4566b7", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/ad60be0f29762b49f7a5b6911e96b7079d4566b7", "committedDate": "2020-10-18T07:26:44Z", "message": "clean old code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0037851d562ea64dba75beff83afa1ca623adf7c", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/0037851d562ea64dba75beff83afa1ca623adf7c", "committedDate": "2020-10-18T07:34:53Z", "message": "clean old code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f50c7dcafd0fb94fe3ebc4f1efad31fb07ccca0", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/5f50c7dcafd0fb94fe3ebc4f1efad31fb07ccca0", "committedDate": "2020-10-18T08:44:11Z", "message": "code smell"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7ef283887f9444b5696e30f1c70eac5fa3e90d3", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/a7ef283887f9444b5696e30f1c70eac5fa3e90d3", "committedDate": "2020-10-18T08:47:17Z", "message": "code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d76a523544c214cba0d815706c5a6499b190138d", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/d76a523544c214cba0d815706c5a6499b190138d", "committedDate": "2020-10-18T12:09:45Z", "message": "add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a54bb2f4b285c722b5a6bad08c569f0baf1756b", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/1a54bb2f4b285c722b5a6bad08c569f0baf1756b", "committedDate": "2020-10-19T04:00:56Z", "message": "simple config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2697d3df1906ee7dd2366ee72196c3db280804d", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/c2697d3df1906ee7dd2366ee72196c3db280804d", "committedDate": "2020-10-19T04:38:28Z", "message": "code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33dcf4da9b258f4a5a9ba52aca8c108957f19007", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/33dcf4da9b258f4a5a9ba52aca8c108957f19007", "committedDate": "2020-10-19T09:15:40Z", "message": "code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5977d9f09bf993e92e121709d1d70c9b14c9eeca", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/5977d9f09bf993e92e121709d1d70c9b14c9eeca", "committedDate": "2020-10-19T10:00:42Z", "message": "code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9d12d76b92d67793e8fd7d01b22e3643db02999", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/f9d12d76b92d67793e8fd7d01b22e3643db02999", "committedDate": "2020-10-19T10:04:00Z", "message": "delete old file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMzIzMTkw", "url": "https://github.com/apache/dolphinscheduler/pull/3869#pullrequestreview-513323190", "createdAt": "2020-10-21T05:45:51Z", "commit": {"oid": "f9d12d76b92d67793e8fd7d01b22e3643db02999"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNTo0NTo1MVrOHlbIdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNTo1NTowOVrOHlbUPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwMzg5NQ==", "bodyText": "wechat alert ?", "url": "https://github.com/apache/dolphinscheduler/pull/3869#discussion_r509003895", "createdAt": "2020-10-21T05:45:51Z", "author": {"login": "gaojun2048"}, "path": "dolphinscheduler-alert-plugin/dolphinscheduler-alert-dingtalk/src/main/java/org/apache/dolphinscheduler/plugin/alert/dingtalk/DingTalkSender.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.plugin.alert.dingtalk;\n+\n+import org.apache.dolphinscheduler.spi.alert.AlertResult;\n+import org.apache.dolphinscheduler.spi.utils.JSONUtils;\n+\n+import org.apache.commons.codec.binary.StringUtils;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpHost;\n+import org.apache.http.auth.AuthScope;\n+import org.apache.http.auth.UsernamePasswordCredentials;\n+import org.apache.http.client.CredentialsProvider;\n+import org.apache.http.client.config.RequestConfig;\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.BasicCredentialsProvider;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClients;\n+import org.apache.http.util.EntityUtils;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Ding Talk Sender\n+ */\n+public class DingTalkSender {\n+    private static final Logger logger = LoggerFactory.getLogger(DingTalkSender.class);\n+\n+    private String url;\n+\n+    private String keyword;\n+\n+    private Boolean enableProxy;\n+\n+    private String proxy;\n+\n+    private Integer port;\n+\n+    private String user;\n+\n+    private String password;\n+\n+    DingTalkSender(Map<String, String> config) {\n+        url = config.get(DingTalkParamsConstants.NAME_DING_TALK_WEB_HOOK);\n+        keyword = config.get(DingTalkParamsConstants.NAME_DING_TALK_KEYWORD);\n+        enableProxy = Boolean.valueOf(config.get(DingTalkParamsConstants.NAME_DING_TALK_PROXY_ENABLE));\n+        if (Boolean.TRUE.equals(enableProxy)) {\n+            port = Integer.parseInt(config.get(DingTalkParamsConstants.NAME_DING_TALK_PORT));\n+            proxy = config.get(DingTalkParamsConstants.NAME_DING_TALK_PROXY);\n+            user = config.get(DingTalkParamsConstants.DING_TALK_USER);\n+            password = config.get(DingTalkParamsConstants.NAME_DING_TALK_PASSWORD);\n+        }\n+\n+    }\n+\n+    public AlertResult sendDingTalkMsg(String msg, String charset) {\n+        AlertResult alertResult;\n+        try {\n+            String resp = sendMsg(msg, charset);\n+            return checkSendDingTalkSendMsgResult(resp);\n+        } catch (Exception e) {\n+            logger.info(\"send ding talk alert msg  exception : {}\", e.getMessage());\n+            alertResult = new AlertResult();\n+            alertResult.setStatus(\"false\");\n+            alertResult.setMessage(\"send ding talk alert fail.\");\n+        }\n+        return alertResult;\n+    }\n+\n+    private String sendMsg(String msg, String charset) throws IOException {\n+\n+        String msgToJson = textToJsonString(msg + \"#\" + keyword);\n+        HttpPost httpPost = constructHttpPost(url, msgToJson, charset);\n+\n+        CloseableHttpClient httpClient;\n+        if (Boolean.TRUE.equals(enableProxy)) {\n+            httpClient = getProxyClient(proxy, port, user, password);\n+            RequestConfig rcf = getProxyConfig(proxy, port);\n+            httpPost.setConfig(rcf);\n+        } else {\n+            httpClient = getDefaultClient();\n+        }\n+\n+        try {\n+            CloseableHttpResponse response = httpClient.execute(httpPost);\n+            String resp;\n+            try {\n+                HttpEntity entity = response.getEntity();\n+                resp = EntityUtils.toString(entity, charset);\n+                EntityUtils.consume(entity);\n+            } finally {\n+                response.close();\n+            }\n+            logger.info(\"Ding Talk send [%s], resp:{%s}\", msg, resp);\n+            return resp;\n+        } finally {\n+            httpClient.close();\n+        }\n+    }\n+\n+    private static HttpPost constructHttpPost(String url, String msg, String charset) {\n+        HttpPost post = new HttpPost(url);\n+        StringEntity entity = new StringEntity(msg, charset);\n+        post.setEntity(entity);\n+        post.addHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n+        return post;\n+    }\n+\n+    private static CloseableHttpClient getProxyClient(String proxy, int port, String user, String password) {\n+        HttpHost httpProxy = new HttpHost(proxy, port);\n+        CredentialsProvider provider = new BasicCredentialsProvider();\n+        provider.setCredentials(new AuthScope(httpProxy), new UsernamePasswordCredentials(user, password));\n+        return HttpClients.custom().setDefaultCredentialsProvider(provider).build();\n+    }\n+\n+    private static CloseableHttpClient getDefaultClient() {\n+        return HttpClients.createDefault();\n+    }\n+\n+    private static RequestConfig getProxyConfig(String proxy, int port) {\n+        HttpHost httpProxy = new HttpHost(proxy, port);\n+        return RequestConfig.custom().setProxy(httpProxy).build();\n+    }\n+\n+    private static String textToJsonString(String text) {\n+        Map<String, Object> items = new HashMap<>();\n+        items.put(\"msgtype\", \"text\");\n+        Map<String, String> textContent = new HashMap<>();\n+        byte[] byt = StringUtils.getBytesUtf8(text);\n+        String txt = StringUtils.newStringUtf8(byt);\n+        textContent.put(\"content\", txt);\n+        items.put(\"text\", textContent);\n+        return JSONUtils.toJsonString(items);\n+    }\n+\n+    public static class DingTalkSendMsgResponse {\n+        private Integer errcode;\n+        private String errmsg;\n+\n+        public Integer getErrcode() {\n+            return errcode;\n+        }\n+\n+        public void setErrcode(Integer errcode) {\n+            this.errcode = errcode;\n+        }\n+\n+        public String getErrmsg() {\n+            return errmsg;\n+        }\n+\n+        public void setErrmsg(String errmsg) {\n+            this.errmsg = errmsg;\n+        }\n+    }\n+\n+    private static AlertResult checkSendDingTalkSendMsgResult(String result) {\n+        AlertResult alertResult = new AlertResult();\n+        alertResult.setStatus(\"false\");\n+\n+        if (null == result) {\n+            alertResult.setMessage(\"we chat alert send error\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9d12d76b92d67793e8fd7d01b22e3643db02999"}, "originalPosition": 184}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwNDA0OA==", "bodyText": "we chat ?", "url": "https://github.com/apache/dolphinscheduler/pull/3869#discussion_r509004048", "createdAt": "2020-10-21T05:46:19Z", "author": {"login": "gaojun2048"}, "path": "dolphinscheduler-alert-plugin/dolphinscheduler-alert-dingtalk/src/main/java/org/apache/dolphinscheduler/plugin/alert/dingtalk/DingTalkSender.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.plugin.alert.dingtalk;\n+\n+import org.apache.dolphinscheduler.spi.alert.AlertResult;\n+import org.apache.dolphinscheduler.spi.utils.JSONUtils;\n+\n+import org.apache.commons.codec.binary.StringUtils;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpHost;\n+import org.apache.http.auth.AuthScope;\n+import org.apache.http.auth.UsernamePasswordCredentials;\n+import org.apache.http.client.CredentialsProvider;\n+import org.apache.http.client.config.RequestConfig;\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpPost;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.BasicCredentialsProvider;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClients;\n+import org.apache.http.util.EntityUtils;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Ding Talk Sender\n+ */\n+public class DingTalkSender {\n+    private static final Logger logger = LoggerFactory.getLogger(DingTalkSender.class);\n+\n+    private String url;\n+\n+    private String keyword;\n+\n+    private Boolean enableProxy;\n+\n+    private String proxy;\n+\n+    private Integer port;\n+\n+    private String user;\n+\n+    private String password;\n+\n+    DingTalkSender(Map<String, String> config) {\n+        url = config.get(DingTalkParamsConstants.NAME_DING_TALK_WEB_HOOK);\n+        keyword = config.get(DingTalkParamsConstants.NAME_DING_TALK_KEYWORD);\n+        enableProxy = Boolean.valueOf(config.get(DingTalkParamsConstants.NAME_DING_TALK_PROXY_ENABLE));\n+        if (Boolean.TRUE.equals(enableProxy)) {\n+            port = Integer.parseInt(config.get(DingTalkParamsConstants.NAME_DING_TALK_PORT));\n+            proxy = config.get(DingTalkParamsConstants.NAME_DING_TALK_PROXY);\n+            user = config.get(DingTalkParamsConstants.DING_TALK_USER);\n+            password = config.get(DingTalkParamsConstants.NAME_DING_TALK_PASSWORD);\n+        }\n+\n+    }\n+\n+    public AlertResult sendDingTalkMsg(String msg, String charset) {\n+        AlertResult alertResult;\n+        try {\n+            String resp = sendMsg(msg, charset);\n+            return checkSendDingTalkSendMsgResult(resp);\n+        } catch (Exception e) {\n+            logger.info(\"send ding talk alert msg  exception : {}\", e.getMessage());\n+            alertResult = new AlertResult();\n+            alertResult.setStatus(\"false\");\n+            alertResult.setMessage(\"send ding talk alert fail.\");\n+        }\n+        return alertResult;\n+    }\n+\n+    private String sendMsg(String msg, String charset) throws IOException {\n+\n+        String msgToJson = textToJsonString(msg + \"#\" + keyword);\n+        HttpPost httpPost = constructHttpPost(url, msgToJson, charset);\n+\n+        CloseableHttpClient httpClient;\n+        if (Boolean.TRUE.equals(enableProxy)) {\n+            httpClient = getProxyClient(proxy, port, user, password);\n+            RequestConfig rcf = getProxyConfig(proxy, port);\n+            httpPost.setConfig(rcf);\n+        } else {\n+            httpClient = getDefaultClient();\n+        }\n+\n+        try {\n+            CloseableHttpResponse response = httpClient.execute(httpPost);\n+            String resp;\n+            try {\n+                HttpEntity entity = response.getEntity();\n+                resp = EntityUtils.toString(entity, charset);\n+                EntityUtils.consume(entity);\n+            } finally {\n+                response.close();\n+            }\n+            logger.info(\"Ding Talk send [%s], resp:{%s}\", msg, resp);\n+            return resp;\n+        } finally {\n+            httpClient.close();\n+        }\n+    }\n+\n+    private static HttpPost constructHttpPost(String url, String msg, String charset) {\n+        HttpPost post = new HttpPost(url);\n+        StringEntity entity = new StringEntity(msg, charset);\n+        post.setEntity(entity);\n+        post.addHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n+        return post;\n+    }\n+\n+    private static CloseableHttpClient getProxyClient(String proxy, int port, String user, String password) {\n+        HttpHost httpProxy = new HttpHost(proxy, port);\n+        CredentialsProvider provider = new BasicCredentialsProvider();\n+        provider.setCredentials(new AuthScope(httpProxy), new UsernamePasswordCredentials(user, password));\n+        return HttpClients.custom().setDefaultCredentialsProvider(provider).build();\n+    }\n+\n+    private static CloseableHttpClient getDefaultClient() {\n+        return HttpClients.createDefault();\n+    }\n+\n+    private static RequestConfig getProxyConfig(String proxy, int port) {\n+        HttpHost httpProxy = new HttpHost(proxy, port);\n+        return RequestConfig.custom().setProxy(httpProxy).build();\n+    }\n+\n+    private static String textToJsonString(String text) {\n+        Map<String, Object> items = new HashMap<>();\n+        items.put(\"msgtype\", \"text\");\n+        Map<String, String> textContent = new HashMap<>();\n+        byte[] byt = StringUtils.getBytesUtf8(text);\n+        String txt = StringUtils.newStringUtf8(byt);\n+        textContent.put(\"content\", txt);\n+        items.put(\"text\", textContent);\n+        return JSONUtils.toJsonString(items);\n+    }\n+\n+    public static class DingTalkSendMsgResponse {\n+        private Integer errcode;\n+        private String errmsg;\n+\n+        public Integer getErrcode() {\n+            return errcode;\n+        }\n+\n+        public void setErrcode(Integer errcode) {\n+            this.errcode = errcode;\n+        }\n+\n+        public String getErrmsg() {\n+            return errmsg;\n+        }\n+\n+        public void setErrmsg(String errmsg) {\n+            this.errmsg = errmsg;\n+        }\n+    }\n+\n+    private static AlertResult checkSendDingTalkSendMsgResult(String result) {\n+        AlertResult alertResult = new AlertResult();\n+        alertResult.setStatus(\"false\");\n+\n+        if (null == result) {\n+            alertResult.setMessage(\"we chat alert send error\");\n+            logger.info(\"send ding talk msg error,ding talk server resp is null\");\n+            return alertResult;\n+        }\n+        DingTalkSendMsgResponse sendMsgResponse = JSONUtils.parseObject(result, DingTalkSendMsgResponse.class);\n+        if (null == sendMsgResponse) {\n+            alertResult.setMessage(\"we chat send fail\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9d12d76b92d67793e8fd7d01b22e3643db02999"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwNTAxOA==", "bodyText": "can we add qyapi.weixin.qq.com in apache project?", "url": "https://github.com/apache/dolphinscheduler/pull/3869#discussion_r509005018", "createdAt": "2020-10-21T05:49:25Z", "author": {"login": "gaojun2048"}, "path": "dolphinscheduler-alert-plugin/dolphinscheduler-alert-wechat/src/main/java/org/apache/dolphinscheduler/plugin/alert/wechat/WeChatAlertConstants.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.plugin.alert.wechat;\n+\n+/**\n+ * WeChatAlertConstants\n+ */\n+public class WeChatAlertConstants {\n+\n+    static final String MARKDOWN_QUOTE = \">\";\n+\n+    static final String MARKDOWN_ENTER = \"\\n\";\n+\n+    static final String CHARSET = \"UTF-8\";\n+\n+    static final String WE_CHAT_PUSH_URL = \"https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token={token}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9d12d76b92d67793e8fd7d01b22e3643db02999"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAwNjkxMA==", "bodyText": "DingTalkAlertChannelFactoryTest.java is repeated.", "url": "https://github.com/apache/dolphinscheduler/pull/3869#discussion_r509006910", "createdAt": "2020-10-21T05:55:09Z", "author": {"login": "gaojun2048"}, "path": "pom.xml", "diffHunk": "@@ -950,6 +950,11 @@\n                         <include>**/plugin/alert/email/ExcelUtilsTest.java</include>\n                         <include>**/plugin/alert/email/MailUtilsTest.java</include>\n                         <include>**/plugin/alert/email/template/DefaultHTMLTemplateTest.java</include>\n+                        <include>**/plugin/alert/dingtalk/DingTalkSenderTest.java</include>\n+                        <include>**/plugin/alert/dingtalk/DingTalkAlertChannelFactoryTest.java</include>\n+                        <include>**/plugin/alert/dingtalk/DingTalkAlertChannelFactoryTest.java</include>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9d12d76b92d67793e8fd7d01b22e3643db02999"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "180e755dc59d261a78750ad75a1235aa0b91befc", "author": {"user": {"login": "CalvinKirs", "name": "Kirs"}}, "url": "https://github.com/apache/dolphinscheduler/commit/180e755dc59d261a78750ad75a1235aa0b91befc", "committedDate": "2020-10-22T15:13:38Z", "message": "fix log content error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMjk1MTAx", "url": "https://github.com/apache/dolphinscheduler/pull/3869#pullrequestreview-521295101", "createdAt": "2020-11-02T02:08:10Z", "commit": {"oid": "180e755dc59d261a78750ad75a1235aa0b91befc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2323, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}