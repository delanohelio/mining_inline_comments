{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMzE1Mjg2", "number": 3563, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMTo1MDozMFrOEaw3Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMTo1MDozMFrOEaw3Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDk5MDMxOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/TaskInstanceService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMTo1MDozMFrOHEY15A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMzoxNTozMVrOHEaLVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2MzM2NA==", "bodyText": "Hi~\nPlease add null judge for startDate and endDate, because in this case, we can not judge the null result of start or end is because of the null value of startDate and endDate or having exception when processing getScheduleDate. If the cause is the exception of processing getScheduleDate [1], we need to return the result Status.REQUEST_PARAMS_NOT_VALID_ERROR to user.\nI think you can define the Status.START_OR_END_DATE_VALID_ERROR.\n\n\u8bf7\u6dfb\u52a0 startDate and endDate \u4e3a null \u65f6\u7684\u5224\u65ad\uff0c\u56e0\u4e3a\u5f53 start \u6216 end \u7684\u503c\u4e3a null \u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u5224\u65ad\u662f\u7531\u4e8e startDate \u6216\u8005 endDate \u4e3anull \u5bfc\u81f4\u7684\uff0c\u8fd8\u662f\u7531\u4e8e\u810f\u6570\u636e\u5bfc\u81f4\u5728\u6267\u884c getScheduleDate \u53d1\u751f\u5f02\u5e38\u5bfc\u81f4\u7684\u3002\u5982\u679c\u53d1\u751f\u5f02\u5e38\u5bfc\u81f4\u7684[1]\uff0c\u6211\u4eec\u5e94\u8be5\u8fd4\u56de Status.REQUEST_PARAMS_NOT_VALID_ERROR.\n\u4f60\u53ef\u4ee5\u770b\u4e0b\u6709\u6ca1\u6709\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u5982\u679c\u6ca1\u6709\u7684\u8bdd\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e2a\u9519\u8bef\uff0c\u8be6\u7ec6\u63cf\u8ff0\u9519\u8bef\u5185\u5bb9\uff0c\u6bd4\u5982 Status.START_OR_END_DATE_VALID_ERROR.\n[1]", "url": "https://github.com/apache/dolphinscheduler/pull/3563#discussion_r474363364", "createdAt": "2020-08-21T01:50:30Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/TaskInstanceService.java", "diffHunk": "@@ -93,23 +99,17 @@\n         }\n \n         int[] statusArray = null;\n-        if(stateType != null){\n+        if (stateType != null) {\n             statusArray = new int[]{stateType.ordinal()};\n         }\n \n         Date start = null;\n         Date end = null;\n-        try {\n-            if(StringUtils.isNotEmpty(startDate)){\n-                start = DateUtils.getScheduleDate(startDate);\n-            }\n-            if(StringUtils.isNotEmpty( endDate)){\n-                end = DateUtils.getScheduleDate(endDate);\n-            }\n-        } catch (Exception e) {\n-            result.put(Constants.STATUS, Status.REQUEST_PARAMS_NOT_VALID_ERROR);\n-            result.put(Constants.MSG, MessageFormat.format(Status.REQUEST_PARAMS_NOT_VALID_ERROR.getMsg(), \"startDate,endDate\"));\n-            return result;\n+        if (StringUtils.isNotEmpty(startDate)) {\n+            start = DateUtils.getScheduleDate(startDate);\n+        }\n+        if (StringUtils.isNotEmpty(endDate)) {\n+            end = DateUtils.getScheduleDate(endDate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6af5a3021c2ae44ea8aaa8a4e469f6e24a221c79"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4NTIzOQ==", "bodyText": "thanks for review.\ni just use Status.REQUEST_PARAMS_NOT_VALID_ERROR to return the error when date param is not right", "url": "https://github.com/apache/dolphinscheduler/pull/3563#discussion_r474385239", "createdAt": "2020-08-21T03:15:31Z", "author": {"login": "geosmart"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/TaskInstanceService.java", "diffHunk": "@@ -93,23 +99,17 @@\n         }\n \n         int[] statusArray = null;\n-        if(stateType != null){\n+        if (stateType != null) {\n             statusArray = new int[]{stateType.ordinal()};\n         }\n \n         Date start = null;\n         Date end = null;\n-        try {\n-            if(StringUtils.isNotEmpty(startDate)){\n-                start = DateUtils.getScheduleDate(startDate);\n-            }\n-            if(StringUtils.isNotEmpty( endDate)){\n-                end = DateUtils.getScheduleDate(endDate);\n-            }\n-        } catch (Exception e) {\n-            result.put(Constants.STATUS, Status.REQUEST_PARAMS_NOT_VALID_ERROR);\n-            result.put(Constants.MSG, MessageFormat.format(Status.REQUEST_PARAMS_NOT_VALID_ERROR.getMsg(), \"startDate,endDate\"));\n-            return result;\n+        if (StringUtils.isNotEmpty(startDate)) {\n+            start = DateUtils.getScheduleDate(startDate);\n+        }\n+        if (StringUtils.isNotEmpty(endDate)) {\n+            end = DateUtils.getScheduleDate(endDate);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2MzM2NA=="}, "originalCommit": {"oid": "6af5a3021c2ae44ea8aaa8a4e469f6e24a221c79"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3333, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}