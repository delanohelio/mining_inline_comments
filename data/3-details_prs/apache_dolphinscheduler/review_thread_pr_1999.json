{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NjU4MTk1", "number": 1999, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNDo0OTo1M1rODiH5cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNDo0OTo1M1rODiH5cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTA3NTY5OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ExecutorService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNDo0OTo1M1rOFtOQ4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QwNjo0NDo1NFrOFtOmyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MzkzNw==", "bodyText": "Using CollectionUtils.isNotEmpty()", "url": "https://github.com/apache/dolphinscheduler/pull/1999#discussion_r382963937", "createdAt": "2020-02-23T04:49:53Z", "author": {"login": "Technoboy-"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ExecutorService.java", "diffHunk": "@@ -378,10 +376,10 @@ private boolean checkTenantSuitable(ProcessDefinition processDefinition) {\n         List<Integer> ids = new ArrayList<>();\n         processService.recurseFindSubProcessId(processDefineId, ids);\n         Integer[] idArray = ids.toArray(new Integer[ids.size()]);\n-        if (ids.size() > 0){\n+        if (!ids.isEmpty()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e942aa5a799e4dc952c1929e6bf48d12b8fd7f8b"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2OTU0NA==", "bodyText": "Why? check if null additional? unnecessary", "url": "https://github.com/apache/dolphinscheduler/pull/1999#discussion_r382969544", "createdAt": "2020-02-23T06:44:54Z", "author": {"login": "gabrywu"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ExecutorService.java", "diffHunk": "@@ -378,10 +376,10 @@ private boolean checkTenantSuitable(ProcessDefinition processDefinition) {\n         List<Integer> ids = new ArrayList<>();\n         processService.recurseFindSubProcessId(processDefineId, ids);\n         Integer[] idArray = ids.toArray(new Integer[ids.size()]);\n-        if (ids.size() > 0){\n+        if (!ids.isEmpty()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk2MzkzNw=="}, "originalCommit": {"oid": "e942aa5a799e4dc952c1929e6bf48d12b8fd7f8b"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3553, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}