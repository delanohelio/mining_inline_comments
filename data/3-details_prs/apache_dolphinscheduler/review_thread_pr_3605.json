{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczOTE1MTQ5", "number": 3605, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxMTowOTo0MFrOEgmACg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxMTowOTo0MFrOEgmACg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNjEyNDkwOnYy", "diffSide": "LEFT", "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/DataAnalysisServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxMTowOTo0MFrOHNhXdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMzoyNDo1N1rOHoPTQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0MDIxNA==", "bodyText": "Will it produce error when we just use\ndataMap.put(\"taskQueue\", 0);\ndataMap.put(\"taskKill\", 0);\n?", "url": "https://github.com/apache/dolphinscheduler/pull/3605#discussion_r483940214", "createdAt": "2020-09-05T11:09:40Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/DataAnalysisServiceImpl.java", "diffHunk": "@@ -311,59 +265,9 @@\n             return result;\n         }\n \n-        // TODO tasksQueueList and tasksKillList is never updated.\n-        List<String> tasksQueueList = new ArrayList<>();\n-        List<String> tasksKillList = new ArrayList<>();\n-\n         Map<String, Integer> dataMap = new HashMap<>();\n-        if (loginUser.getUserType() == UserType.ADMIN_USER) {\n-            dataMap.put(\"taskQueue\", tasksQueueList.size());\n-            dataMap.put(\"taskKill\", tasksKillList.size());\n-\n-            result.put(Constants.DATA_LIST, dataMap);\n-            putMsg(result, Status.SUCCESS);\n-            return result;\n-        }\n-\n-        int[] tasksQueueIds = new int[tasksQueueList.size()];\n-        int[] tasksKillIds = new int[tasksKillList.size()];\n-\n-        int i = 0;\n-        for (String taskQueueStr : tasksQueueList) {\n-            if (StringUtils.isNotEmpty(taskQueueStr)) {\n-                String[] splits = taskQueueStr.split(\"_\");\n-                if (splits.length >= 4) {\n-                    tasksQueueIds[i++] = Integer.parseInt(splits[3]);\n-                }\n-            }\n-        }\n-\n-        i = 0;\n-        for (String taskKillStr : tasksKillList) {\n-            if (StringUtils.isNotEmpty(taskKillStr)) {\n-                String[] splits = taskKillStr.split(\"-\");\n-                if (splits.length == 2) {\n-                    tasksKillIds[i++] = Integer.parseInt(splits[1]);\n-                }\n-            }\n-        }\n-        Integer taskQueueCount = 0;\n-        Integer taskKillCount = 0;\n-\n-        Integer[] projectIds = getProjectIdsArrays(loginUser, projectId);\n-        if (tasksQueueIds.length != 0) {\n-            taskQueueCount = taskInstanceMapper.countTask(\n-                    projectIds,\n-                    tasksQueueIds);\n-        }\n-\n-        if (tasksKillIds.length != 0) {\n-            taskKillCount = taskInstanceMapper.countTask(projectIds, tasksKillIds);\n-        }\n-\n-        dataMap.put(\"taskQueue\", taskQueueCount);\n-        dataMap.put(\"taskKill\", taskKillCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "110221da348d65aa813006be8488a0921064e4ae"}, "originalPosition": 229}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk1NTc3Nw==", "bodyText": "yes, it need to add detail data info , TODO", "url": "https://github.com/apache/dolphinscheduler/pull/3605#discussion_r511955777", "createdAt": "2020-10-26T13:24:57Z", "author": {"login": "dailidong"}, "path": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/impl/DataAnalysisServiceImpl.java", "diffHunk": "@@ -311,59 +265,9 @@\n             return result;\n         }\n \n-        // TODO tasksQueueList and tasksKillList is never updated.\n-        List<String> tasksQueueList = new ArrayList<>();\n-        List<String> tasksKillList = new ArrayList<>();\n-\n         Map<String, Integer> dataMap = new HashMap<>();\n-        if (loginUser.getUserType() == UserType.ADMIN_USER) {\n-            dataMap.put(\"taskQueue\", tasksQueueList.size());\n-            dataMap.put(\"taskKill\", tasksKillList.size());\n-\n-            result.put(Constants.DATA_LIST, dataMap);\n-            putMsg(result, Status.SUCCESS);\n-            return result;\n-        }\n-\n-        int[] tasksQueueIds = new int[tasksQueueList.size()];\n-        int[] tasksKillIds = new int[tasksKillList.size()];\n-\n-        int i = 0;\n-        for (String taskQueueStr : tasksQueueList) {\n-            if (StringUtils.isNotEmpty(taskQueueStr)) {\n-                String[] splits = taskQueueStr.split(\"_\");\n-                if (splits.length >= 4) {\n-                    tasksQueueIds[i++] = Integer.parseInt(splits[3]);\n-                }\n-            }\n-        }\n-\n-        i = 0;\n-        for (String taskKillStr : tasksKillList) {\n-            if (StringUtils.isNotEmpty(taskKillStr)) {\n-                String[] splits = taskKillStr.split(\"-\");\n-                if (splits.length == 2) {\n-                    tasksKillIds[i++] = Integer.parseInt(splits[1]);\n-                }\n-            }\n-        }\n-        Integer taskQueueCount = 0;\n-        Integer taskKillCount = 0;\n-\n-        Integer[] projectIds = getProjectIdsArrays(loginUser, projectId);\n-        if (tasksQueueIds.length != 0) {\n-            taskQueueCount = taskInstanceMapper.countTask(\n-                    projectIds,\n-                    tasksQueueIds);\n-        }\n-\n-        if (tasksKillIds.length != 0) {\n-            taskKillCount = taskInstanceMapper.countTask(projectIds, tasksKillIds);\n-        }\n-\n-        dataMap.put(\"taskQueue\", taskQueueCount);\n-        dataMap.put(\"taskKill\", taskKillCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0MDIxNA=="}, "originalCommit": {"oid": "110221da348d65aa813006be8488a0921064e4ae"}, "originalPosition": 229}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3298, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}