{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NTYxMTM2", "number": 3188, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxODowNDo0MVrOENXXtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMzozOToyNFrOENdtmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDQ5ODQ1OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/registry/MasterRegistry.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxODowNDo0MVrOGwAlDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMzozOTo1OFrOGwKE1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk5NDMxNw==", "bodyText": "It\u2019s a bit redundant here. If it\u2019s just for testing, I don\u2019t think it\u2019s necessary.", "url": "https://github.com/apache/dolphinscheduler/pull/3188#discussion_r452994317", "createdAt": "2020-07-10T18:04:41Z", "author": {"login": "CalvinKirs"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/registry/MasterRegistry.java", "diffHunk": "@@ -137,4 +142,7 @@ private String getLocalAddress(){\n \n     }\n \n+    public ScheduledExecutorService getHeartBeatExecutor() {\n+        return heartBeatExecutor;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4320a936143acbe0a211ed09434e40cda32da92"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0OTkwOQ==", "bodyText": "It\u2019s a bit redundant here. If it\u2019s just for testing, I don\u2019t think it\u2019s necessary.\n\nI agree with @CalvinKirs .", "url": "https://github.com/apache/dolphinscheduler/pull/3188#discussion_r453149909", "createdAt": "2020-07-11T03:39:58Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/registry/MasterRegistry.java", "diffHunk": "@@ -137,4 +142,7 @@ private String getLocalAddress(){\n \n     }\n \n+    public ScheduledExecutorService getHeartBeatExecutor() {\n+        return heartBeatExecutor;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk5NDMxNw=="}, "originalCommit": {"oid": "a4320a936143acbe0a211ed09434e40cda32da92"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTUzNzUyOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/registry/MasterRegistry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMzozOToyNFrOGwKEoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNjo0NDoxOFrOGwN43g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0OTg1Nw==", "bodyText": "Hi,\nGood job, is it better to refer to WorkerRegistry[1] to use heartBeatExecutor.shutdownNow()?\n[1] https://github.com/apache/incubator-dolphinscheduler/blob/dev/dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/worker/registry/WorkerRegistry.java", "url": "https://github.com/apache/dolphinscheduler/pull/3188#discussion_r453149857", "createdAt": "2020-07-11T03:39:24Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/registry/MasterRegistry.java", "diffHunk": "@@ -113,6 +110,14 @@ public void stateChanged(CuratorFramework client, ConnectionState newState) {\n     public void unRegistry() {\n         String address = getLocalAddress();\n         String localNodePath = getMasterPath();\n+        heartBeatExecutor.shutdown();\n+        try {\n+            if (heartBeatExecutor.awaitTermination(masterConfig.getMasterHeartbeatInterval(), TimeUnit.SECONDS)) {\n+                logger.warn(\"The heartbeat executor does not shutdown\");\n+            }\n+        } catch (InterruptedException e) {\n+            logger.warn(\"The heartbeat executor is interrupted\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4320a936143acbe0a211ed09434e40cda32da92"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjM4Mg==", "bodyText": "solved", "url": "https://github.com/apache/dolphinscheduler/pull/3188#discussion_r453212382", "createdAt": "2020-07-11T16:44:18Z", "author": {"login": "tswstarplanet"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/master/registry/MasterRegistry.java", "diffHunk": "@@ -113,6 +110,14 @@ public void stateChanged(CuratorFramework client, ConnectionState newState) {\n     public void unRegistry() {\n         String address = getLocalAddress();\n         String localNodePath = getMasterPath();\n+        heartBeatExecutor.shutdown();\n+        try {\n+            if (heartBeatExecutor.awaitTermination(masterConfig.getMasterHeartbeatInterval(), TimeUnit.SECONDS)) {\n+                logger.warn(\"The heartbeat executor does not shutdown\");\n+            }\n+        } catch (InterruptedException e) {\n+            logger.warn(\"The heartbeat executor is interrupted\");\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0OTg1Nw=="}, "originalCommit": {"oid": "a4320a936143acbe0a211ed09434e40cda32da92"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3414, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}