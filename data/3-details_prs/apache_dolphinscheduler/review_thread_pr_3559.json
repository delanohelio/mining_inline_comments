{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNjU1NDc4", "number": 3559, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjoxNjoxOFrOEaxIcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjoyNDoxMVrOEaxNhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTAzNDExOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/EnterpriseWeChatUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjoxNjoxOFrOHEZPnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjoxNjoxOFrOHEZPnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM2OTk0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .replaceAll(\"\\\\{corpId\\\\}\", ENTERPRISE_WE_CHAT_CORP_ID)\n          \n          \n            \n                        .replaceAll(\"\\\\{secret\\\\}\", ENTERPRISE_WE_CHAT_SECRET);\n          \n          \n            \n                        .replaceAll(\"\\\\{corpId}\", ENTERPRISE_WE_CHAT_CORP_ID)\n          \n          \n            \n                        .replaceAll(\"\\\\{secret}\", ENTERPRISE_WE_CHAT_SECRET);\n          \n      \n    \n    \n  \n\nPlease change the other part of replaceAll.", "url": "https://github.com/apache/dolphinscheduler/pull/3559#discussion_r474369948", "createdAt": "2020-08-21T02:16:18Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/EnterpriseWeChatUtils.java", "diffHunk": "@@ -48,8 +55,8 @@\n \n     private static final String ENTERPRISE_WE_CHAT_TOKEN_URL = PropertyUtils.getString(Constants.ENTERPRISE_WECHAT_TOKEN_URL);\n     private static final String ENTERPRISE_WE_CHAT_TOKEN_URL_REPLACE = ENTERPRISE_WE_CHAT_TOKEN_URL == null ? null : ENTERPRISE_WE_CHAT_TOKEN_URL\n-    .replaceAll(\"\\\\{corpId\\\\}\", ENTERPRISE_WE_CHAT_CORP_ID)\n-    .replaceAll(\"\\\\{secret\\\\}\", ENTERPRISE_WE_CHAT_SECRET);\n+            .replaceAll(\"\\\\{corpId\\\\}\", ENTERPRISE_WE_CHAT_CORP_ID)\n+            .replaceAll(\"\\\\{secret\\\\}\", ENTERPRISE_WE_CHAT_SECRET);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fcadb6902d74a6d149b5077b08fe355a00f0043"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTA0MjEwOnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/enums/AlertWarnLevel.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjoyMDo1N1rOHEZUHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNTowMzozNVrOHEbsnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3MTEwMA==", "bodyText": "Is it better to match the logger?\nFor excample: debug, info, warning, error", "url": "https://github.com/apache/dolphinscheduler/pull/3559#discussion_r474371100", "createdAt": "2020-08-21T02:20:57Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/enums/AlertWarnLevel.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.common.enums;\n+\n+public enum AlertWarnLevel {\n+\n+    MIDDLE,SERIOUS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fcadb6902d74a6d149b5077b08fe355a00f0043"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQwOTg2NQ==", "bodyText": "Is it better to match the logger?\nFor excample: debug, info, warning, error\nThis is a way of storing the string directly into the content of the message and sending it out, and if it's a number it needs to be sent out under conversion.", "url": "https://github.com/apache/dolphinscheduler/pull/3559#discussion_r474409865", "createdAt": "2020-08-21T05:02:23Z", "author": {"login": "felix-thinkingdata"}, "path": "dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/enums/AlertWarnLevel.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.common.enums;\n+\n+public enum AlertWarnLevel {\n+\n+    MIDDLE,SERIOUS", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3MTEwMA=="}, "originalCommit": {"oid": "8fcadb6902d74a6d149b5077b08fe355a00f0043"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQxMDE0MA==", "bodyText": "", "url": "https://github.com/apache/dolphinscheduler/pull/3559#discussion_r474410140", "createdAt": "2020-08-21T05:03:35Z", "author": {"login": "felix-thinkingdata"}, "path": "dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/enums/AlertWarnLevel.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.dolphinscheduler.common.enums;\n+\n+public enum AlertWarnLevel {\n+\n+    MIDDLE,SERIOUS", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3MTEwMA=="}, "originalCommit": {"oid": "8fcadb6902d74a6d149b5077b08fe355a00f0043"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTA0NzA5OnYy", "diffSide": "RIGHT", "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/registry/ZookeeperNodeManager.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMjoyNDoxMVrOHEZXLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwMzo1NDoxMFrOHFTvZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3MTg4Nw==", "bodyText": "Is this file changes related with this pr?\nIf not related, please revert.", "url": "https://github.com/apache/dolphinscheduler/pull/3559#discussion_r474371887", "createdAt": "2020-08-21T02:24:11Z", "author": {"login": "yangyichao-mango"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/registry/ZookeeperNodeManager.java", "diffHunk": "@@ -38,33 +35,37 @@\n import java.util.concurrent.locks.Lock;\n import java.util.concurrent.locks.ReentrantLock;\n \n-import static org.apache.dolphinscheduler.common.Constants.DEFAULT_WORKER_GROUP;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n \n /**\n- *  zookeeper node manager\n+ * zookeeper node manager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fcadb6902d74a6d149b5077b08fe355a00f0043"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQxMjM4NQ==", "bodyText": "Is this file changes related with this pr?\nIf not related, please revert.\nI've optimized this part\n\nString host = org.apache.commons.lang.StringUtils.substringAfterLast(path, \"/\");\n\nbecause code style,Become less obvious ,lint 226 ,265", "url": "https://github.com/apache/dolphinscheduler/pull/3559#discussion_r474412385", "createdAt": "2020-08-21T05:12:56Z", "author": {"login": "felix-thinkingdata"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/registry/ZookeeperNodeManager.java", "diffHunk": "@@ -38,33 +35,37 @@\n import java.util.concurrent.locks.Lock;\n import java.util.concurrent.locks.ReentrantLock;\n \n-import static org.apache.dolphinscheduler.common.Constants.DEFAULT_WORKER_GROUP;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n \n /**\n- *  zookeeper node manager\n+ * zookeeper node manager", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3MTg4Nw=="}, "originalCommit": {"oid": "8fcadb6902d74a6d149b5077b08fe355a00f0043"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQxMzE5Mg==", "bodyText": "Extract the exact host information in the path of zookeeper", "url": "https://github.com/apache/dolphinscheduler/pull/3559#discussion_r474413192", "createdAt": "2020-08-21T05:16:10Z", "author": {"login": "felix-thinkingdata"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/registry/ZookeeperNodeManager.java", "diffHunk": "@@ -38,33 +35,37 @@\n import java.util.concurrent.locks.Lock;\n import java.util.concurrent.locks.ReentrantLock;\n \n-import static org.apache.dolphinscheduler.common.Constants.DEFAULT_WORKER_GROUP;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n \n /**\n- *  zookeeper node manager\n+ * zookeeper node manager", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3MTg4Nw=="}, "originalCommit": {"oid": "8fcadb6902d74a6d149b5077b08fe355a00f0043"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMyODM1OA==", "bodyText": "modified", "url": "https://github.com/apache/dolphinscheduler/pull/3559#discussion_r475328358", "createdAt": "2020-08-24T03:54:10Z", "author": {"login": "felix-thinkingdata"}, "path": "dolphinscheduler-server/src/main/java/org/apache/dolphinscheduler/server/registry/ZookeeperNodeManager.java", "diffHunk": "@@ -38,33 +35,37 @@\n import java.util.concurrent.locks.Lock;\n import java.util.concurrent.locks.ReentrantLock;\n \n-import static org.apache.dolphinscheduler.common.Constants.DEFAULT_WORKER_GROUP;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n \n /**\n- *  zookeeper node manager\n+ * zookeeper node manager", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM3MTg4Nw=="}, "originalCommit": {"oid": "8fcadb6902d74a6d149b5077b08fe355a00f0043"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3330, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}