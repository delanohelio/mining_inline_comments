{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwODA2ODUx", "number": 250, "title": "[#249] fix URLHelper.combine if absolute URLs are used", "bodyText": "closes #249", "createdAt": "2020-09-06T15:48:31Z", "url": "https://github.com/dedica-team/nivio/pull/250", "merged": true, "mergeCommit": {"oid": "c91216f08d86abe6f6cf7201a971ed43a91e3705"}, "closed": true, "closedAt": "2020-09-07T08:17:35Z", "author": {"login": "BilligsterUser"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGQVQogH2gAyNDgwODA2ODUxOjIwODFjMmM2YTdiNzA3MDY1YjFhNWEwM2E3MmE4Mjg1NjU2NTFmNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGSJSagFqTQ4MzE2MTcxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2081c2c6a7b707065b1a5a03a72a828565651f76", "author": {"user": {"login": "BilligsterUser", "name": "Paul Kusmin"}}, "url": "https://github.com/dedica-team/nivio/commit/2081c2c6a7b707065b1a5a03a72a828565651f76", "committedDate": "2020-09-06T15:42:29Z", "message": "[#249] fix URLHelper.combine & add tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMTYwMzM5", "url": "https://github.com/dedica-team/nivio/pull/250#pullrequestreview-483160339", "createdAt": "2020-09-06T17:27:22Z", "commit": {"oid": "2081c2c6a7b707065b1a5a03a72a828565651f76"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxNzoyNzoyMlrOHNqzdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxNzoyNzoyMlrOHNqzdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA5NDgzOA==", "bodyText": "It can sometimes be helpful to note given/when/then is the tests to enhance readability for other developers.\n        //given\n        String root = Paths.get(\"\").toAbsolutePath().toString();\n        if (SystemUtils.IS_OS_WINDOWS) {\n            root = \"/\" + root.replace(File.separator, \"/\");\n        }\n        URL baseUrl = new URL(\"file:\" + root + \"/src/test/resources/example/\");\n        String part = \"./services/wordpress.yml\";\n\n        //when\n        String actual = URLHelper.combine(baseUrl, part);\n\n        //then\n        String expected = \"file:\" + root + \"/src/test/resources/example/services/wordpress.yml\";\n\n        assertEquals(expected, actual);", "url": "https://github.com/dedica-team/nivio/pull/250#discussion_r484094838", "createdAt": "2020-09-06T17:27:22Z", "author": {"login": "bonndan"}, "path": "src/test/java/de/bonndan/nivio/util/URLHelperTest.java", "diffHunk": "@@ -15,55 +14,100 @@\n \n class URLHelperTest {\n \n-\t@Test\n-\tvoid test_getURL() {\n-\t\tPath currentRelativePath = Paths.get(\"\");\n-\t\tString root = currentRelativePath.toAbsolutePath().toString();\n-\t\tURL url = URLHelper.getURL(root + \"/src/test/resources/example/example_templates.yml\");\n-\t\tif (SystemUtils.IS_OS_WINDOWS) {\n-\t\t\troot = \"/\" + root.replace(File.separator, \"/\");\n-\t\t}\n-\t\tassert url != null;\n-\t\tassertEquals(\"file:\" + root + \"/src/test/resources/example/example_templates.yml\", url.toString());\n-\t}\n-\n-\t@Test\n-\tvoid test_getURL_relativePath() {\n-\t\tPath currentRelativePath = Paths.get(\"\");\n-\t\tString root = currentRelativePath.toAbsolutePath().toString();\n-\t\tif (SystemUtils.IS_OS_WINDOWS) {\n-\t\t\troot = \"/\" + root.replace(File.separator, \"/\");\n-\t\t}\n-\t\tURL url = URLHelper.getURL(\"src/test/resources/example/example_templates.yml\");\n-\t\tassert url != null;\n-\t\tassertEquals(\"file:\" + root + \"/src/test/resources/example/example_templates.yml\", url.toString());\n-\t}\n-\n-\t@Test\n-\tvoid test_splitQuery() throws MalformedURLException {\n-\t\tURL url = new URL(\"http://192.168.99.100:8080?namespace=default&groupLabel=release\");\n-\t\tMap<String, String> actual = URLHelper.splitQuery(url);\n-\n-\t\tassertEquals(2, actual.size());\n-\n-\t\tassertTrue(actual.containsKey(\"namespace\"));\n-\t\tassertTrue(actual.containsKey(\"groupLabel\"));\n-\n-\t\tassertEquals(\"default\", actual.get(\"namespace\"));\n-\t\tassertEquals(\"release\", actual.get(\"groupLabel\"));\n-\t}\n-\n-\t@Test\n-\tvoid test_splitQuery_withoutQuery() throws MalformedURLException {\n-\t\tURL url = new URL(\"http://192.168.99.100:8080\");\n-\t\tMap<String, String> actual = URLHelper.splitQuery(url);\n-\t\tassertEquals(0, actual.size());\n-\t}\n-\n-\t@Test\n-\tvoid test_splitQuery_badQuery() throws MalformedURLException {\n-\t\tURL url = new URL(\"http://192.168.99.100:8080?foo=\");\n-\t\tMap<String, String> actual = URLHelper.splitQuery(url);\n-\t\tassertEquals(0, actual.size());\n-\t}\n-}\n\\ No newline at end of file\n+    @Test\n+    void test_getURL() {\n+        String root = Paths.get(\"\").toAbsolutePath().toString();\n+        URL url = URLHelper.getURL(root + \"/src/test/resources/example/example_templates.yml\");\n+        if (SystemUtils.IS_OS_WINDOWS) {\n+            root = \"/\" + root.replace(File.separator, \"/\");\n+        }\n+        assert url != null;\n+        assertEquals(\"file:\" + root + \"/src/test/resources/example/example_templates.yml\", url.toString());\n+    }\n+\n+    @Test\n+    void test_getURL_relativePath() {\n+        String root = Paths.get(\"\").toAbsolutePath().toString();\n+        if (SystemUtils.IS_OS_WINDOWS) {\n+            root = \"/\" + root.replace(File.separator, \"/\");\n+        }\n+        URL url = URLHelper.getURL(\"src/test/resources/example/example_templates.yml\");\n+        assert url != null;\n+        assertEquals(\"file:\" + root + \"/src/test/resources/example/example_templates.yml\", url.toString());\n+    }\n+\n+    @Test\n+    void test_splitQuery() throws MalformedURLException {\n+        URL url = new URL(\"http://192.168.99.100:8080?namespace=default&groupLabel=release\");\n+        Map<String, String> actual = URLHelper.splitQuery(url);\n+\n+        assertEquals(2, actual.size());\n+\n+        assertTrue(actual.containsKey(\"namespace\"));\n+        assertTrue(actual.containsKey(\"groupLabel\"));\n+\n+        assertEquals(\"default\", actual.get(\"namespace\"));\n+        assertEquals(\"release\", actual.get(\"groupLabel\"));\n+    }\n+\n+    @Test\n+    void test_splitQuery_withoutQuery() throws MalformedURLException {\n+        URL url = new URL(\"http://192.168.99.100:8080\");\n+        Map<String, String> actual = URLHelper.splitQuery(url);\n+        assertEquals(0, actual.size());\n+    }\n+\n+    @Test\n+    void test_splitQuery_badQuery() throws MalformedURLException {\n+        URL url = new URL(\"http://192.168.99.100:8080?foo=\");\n+        Map<String, String> actual = URLHelper.splitQuery(url);\n+        assertEquals(0, actual.size());\n+    }\n+\n+\n+    @Test\n+    void test_combine() throws MalformedURLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2081c2c6a7b707065b1a5a03a72a828565651f76"}, "originalPosition": 117}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "723d20d1d32f85997cd730561e40deac7fe82f06", "author": {"user": {"login": "BilligsterUser", "name": "Paul Kusmin"}}, "url": "https://github.com/dedica-team/nivio/commit/723d20d1d32f85997cd730561e40deac7fe82f06", "committedDate": "2020-09-06T17:45:29Z", "message": "add  given/when/then to URLHelperTest to enhance readability"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMTYxNjky", "url": "https://github.com/dedica-team/nivio/pull/250#pullrequestreview-483161692", "createdAt": "2020-09-06T17:48:59Z", "commit": {"oid": "2081c2c6a7b707065b1a5a03a72a828565651f76"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxNzo0ODo1OVrOHNq7Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxNzo0ODo1OVrOHNq7Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA5Njc4Mw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/dedica-team/nivio/pull/250#discussion_r484096783", "createdAt": "2020-09-06T17:48:59Z", "author": {"login": "bonndan"}, "path": "src/test/java/de/bonndan/nivio/util/URLHelperTest.java", "diffHunk": "@@ -15,55 +14,100 @@\n \n class URLHelperTest {\n \n-\t@Test\n-\tvoid test_getURL() {\n-\t\tPath currentRelativePath = Paths.get(\"\");\n-\t\tString root = currentRelativePath.toAbsolutePath().toString();\n-\t\tURL url = URLHelper.getURL(root + \"/src/test/resources/example/example_templates.yml\");\n-\t\tif (SystemUtils.IS_OS_WINDOWS) {\n-\t\t\troot = \"/\" + root.replace(File.separator, \"/\");\n-\t\t}\n-\t\tassert url != null;\n-\t\tassertEquals(\"file:\" + root + \"/src/test/resources/example/example_templates.yml\", url.toString());\n-\t}\n-\n-\t@Test\n-\tvoid test_getURL_relativePath() {\n-\t\tPath currentRelativePath = Paths.get(\"\");\n-\t\tString root = currentRelativePath.toAbsolutePath().toString();\n-\t\tif (SystemUtils.IS_OS_WINDOWS) {\n-\t\t\troot = \"/\" + root.replace(File.separator, \"/\");\n-\t\t}\n-\t\tURL url = URLHelper.getURL(\"src/test/resources/example/example_templates.yml\");\n-\t\tassert url != null;\n-\t\tassertEquals(\"file:\" + root + \"/src/test/resources/example/example_templates.yml\", url.toString());\n-\t}\n-\n-\t@Test\n-\tvoid test_splitQuery() throws MalformedURLException {\n-\t\tURL url = new URL(\"http://192.168.99.100:8080?namespace=default&groupLabel=release\");\n-\t\tMap<String, String> actual = URLHelper.splitQuery(url);\n-\n-\t\tassertEquals(2, actual.size());\n-\n-\t\tassertTrue(actual.containsKey(\"namespace\"));\n-\t\tassertTrue(actual.containsKey(\"groupLabel\"));\n-\n-\t\tassertEquals(\"default\", actual.get(\"namespace\"));\n-\t\tassertEquals(\"release\", actual.get(\"groupLabel\"));\n-\t}\n-\n-\t@Test\n-\tvoid test_splitQuery_withoutQuery() throws MalformedURLException {\n-\t\tURL url = new URL(\"http://192.168.99.100:8080\");\n-\t\tMap<String, String> actual = URLHelper.splitQuery(url);\n-\t\tassertEquals(0, actual.size());\n-\t}\n-\n-\t@Test\n-\tvoid test_splitQuery_badQuery() throws MalformedURLException {\n-\t\tURL url = new URL(\"http://192.168.99.100:8080?foo=\");\n-\t\tMap<String, String> actual = URLHelper.splitQuery(url);\n-\t\tassertEquals(0, actual.size());\n-\t}\n-}\n\\ No newline at end of file\n+    @Test\n+    void test_getURL() {\n+        String root = Paths.get(\"\").toAbsolutePath().toString();\n+        URL url = URLHelper.getURL(root + \"/src/test/resources/example/example_templates.yml\");\n+        if (SystemUtils.IS_OS_WINDOWS) {\n+            root = \"/\" + root.replace(File.separator, \"/\");\n+        }\n+        assert url != null;\n+        assertEquals(\"file:\" + root + \"/src/test/resources/example/example_templates.yml\", url.toString());\n+    }\n+\n+    @Test\n+    void test_getURL_relativePath() {\n+        String root = Paths.get(\"\").toAbsolutePath().toString();\n+        if (SystemUtils.IS_OS_WINDOWS) {\n+            root = \"/\" + root.replace(File.separator, \"/\");\n+        }\n+        URL url = URLHelper.getURL(\"src/test/resources/example/example_templates.yml\");\n+        assert url != null;\n+        assertEquals(\"file:\" + root + \"/src/test/resources/example/example_templates.yml\", url.toString());\n+    }\n+\n+    @Test\n+    void test_splitQuery() throws MalformedURLException {\n+        URL url = new URL(\"http://192.168.99.100:8080?namespace=default&groupLabel=release\");\n+        Map<String, String> actual = URLHelper.splitQuery(url);\n+\n+        assertEquals(2, actual.size());\n+\n+        assertTrue(actual.containsKey(\"namespace\"));\n+        assertTrue(actual.containsKey(\"groupLabel\"));\n+\n+        assertEquals(\"default\", actual.get(\"namespace\"));\n+        assertEquals(\"release\", actual.get(\"groupLabel\"));\n+    }\n+\n+    @Test\n+    void test_splitQuery_withoutQuery() throws MalformedURLException {\n+        URL url = new URL(\"http://192.168.99.100:8080\");\n+        Map<String, String> actual = URLHelper.splitQuery(url);\n+        assertEquals(0, actual.size());\n+    }\n+\n+    @Test\n+    void test_splitQuery_badQuery() throws MalformedURLException {\n+        URL url = new URL(\"http://192.168.99.100:8080?foo=\");\n+        Map<String, String> actual = URLHelper.splitQuery(url);\n+        assertEquals(0, actual.size());\n+    }\n+\n+\n+    @Test\n+    void test_combine() throws MalformedURLException {\n+        String root = Paths.get(\"\").toAbsolutePath().toString();\n+        if (SystemUtils.IS_OS_WINDOWS) {\n+            root = \"/\" + root.replace(File.separator, \"/\");\n+        }\n+        URL baseUrl = new URL(\"file:\" + root + \"/src/test/resources/example/\");\n+        String part = \"./services/wordpress.yml\";\n+\n+        String actual = URLHelper.combine(baseUrl, part);\n+\n+        String expected = \"file:\" + root + \"/src/test/resources/example/services/wordpress.yml\";\n+\n+        assertEquals(expected, actual);\n+    }\n+\n+    @Test\n+    void test_combine_absolute_part() throws MalformedURLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2081c2c6a7b707065b1a5a03a72a828565651f76"}, "originalPosition": 133}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMTYxNzEw", "url": "https://github.com/dedica-team/nivio/pull/250#pullrequestreview-483161710", "createdAt": "2020-09-06T17:49:13Z", "commit": {"oid": "2081c2c6a7b707065b1a5a03a72a828565651f76"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3025, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}