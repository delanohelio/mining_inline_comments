{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1NDI3MjY0", "number": 327, "title": "Rendering optimizations", "bodyText": "closes #325 (demo map svg reduced from 680kb to 180kb)\ncloses #326 strategy to build group area is to connect each to closest neighbour, but prevent reverse connections", "createdAt": "2020-10-18T07:20:42Z", "url": "https://github.com/dedica-team/nivio/pull/327", "merged": true, "mergeCommit": {"oid": "7f91030ebdf75ad66bb71e9e6ed1bc6eccbf3b9b"}, "closed": true, "closedAt": "2020-10-30T12:33:45Z", "author": {"login": "bonndan"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTZzDNgH2gAyNTA1NDI3MjY0OmNmZTIxNDNiNjUzMmM4ODNmYWZjMDkxZTBlNTAyYTY4MmFmMDJjYWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXQTwMgH2gAyNTA1NDI3MjY0OmZkZmMwYzI5NGI0ZTU5YWJhYjI5ZjUyYjY0YTk3NzZkOWZkNzg2ZjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cfe2143b6532c883fafc091e0e502a682af02caf", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/cfe2143b6532c883fafc091e0e502a682af02caf", "committedDate": "2020-10-17T12:05:11Z", "message": "[#326] extended test data, added debug request param"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ae4ea9345aec4739e57e9af77c0e8eeec2ab313", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/8ae4ea9345aec4739e57e9af77c0e8eeec2ab313", "committedDate": "2020-10-17T12:11:30Z", "message": "[#326] extending group area, fix for missed items"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68b910dafc481a80ae0330a38939926613c0c6db", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/68b910dafc481a80ae0330a38939926613c0c6db", "committedDate": "2020-10-17T16:06:16Z", "message": "Merge branch 'develop' into rendering_optimizations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36acf3b68f1aee0ff3cfa3d2b47522da11c8c202", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/36acf3b68f1aee0ff3cfa3d2b47522da11c8c202", "committedDate": "2020-10-18T06:04:50Z", "message": "[#325] reducing map file size"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbde401d9e061f055150e68cd061cf7bb66aacbb", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/cbde401d9e061f055150e68cd061cf7bb66aacbb", "committedDate": "2020-10-18T06:05:22Z", "message": "[#325] less aggressive growing of group areas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3b5a8a2f1f78e679887d73f2e64c731c1d6fd0f", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/a3b5a8a2f1f78e679887d73f2e64c731c1d6fd0f", "committedDate": "2020-10-18T06:15:39Z", "message": "higher group area opacity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d954a1bb54a5cc5523cf083556d37ebd2cac4912", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/d954a1bb54a5cc5523cf083556d37ebd2cac4912", "committedDate": "2020-10-18T06:35:09Z", "message": "item label position below"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06e76ff97284238559643bebac645e26ff6c7336", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/06e76ff97284238559643bebac645e26ff6c7336", "committedDate": "2020-10-18T06:39:54Z", "message": "integer precision is sufficient for group outlines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e2336af5e8435ed31b857964df19e9f201d534e", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/0e2336af5e8435ed31b857964df19e9f201d534e", "committedDate": "2020-10-18T07:23:43Z", "message": "moved group label down a little"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c0e1846e0251c4d0a8d6ef961238b0a59138a32", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/1c0e1846e0251c4d0a8d6ef961238b0a59138a32", "committedDate": "2020-10-18T07:40:55Z", "message": "slightly less triangle in data flow relation rendering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e8b14fbf97ab973fb04e140848e53677e8de487", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/5e8b14fbf97ab973fb04e140848e53677e8de487", "committedDate": "2020-10-18T10:18:15Z", "message": "svg group area fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "161c657b010e63a7bd8b1f96b028235657e8ceb5", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/161c657b010e63a7bd8b1f96b028235657e8ceb5", "committedDate": "2020-10-18T10:19:07Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b018d5b4dadc4532fe1c8e5abd8b3b02474afa48", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/b018d5b4dadc4532fe1c8e5abd8b3b02474afa48", "committedDate": "2020-10-18T19:15:57Z", "message": "some background hex tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f49c14f63c2aa7406749bd590a3c5175f38c7a4", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/8f49c14f63c2aa7406749bd590a3c5175f38c7a4", "committedDate": "2020-10-18T19:22:53Z", "message": "cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTY5NzUz", "url": "https://github.com/dedica-team/nivio/pull/327#pullrequestreview-512169753", "createdAt": "2020-10-19T21:23:00Z", "commit": {"oid": "8f49c14f63c2aa7406749bd590a3c5175f38c7a4"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMToyMzowMFrOHkiKrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMjoyMDowMVrOHkjtiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA3MDU3Mw==", "bodyText": "About the TODO, that was mine I think :D The first one ItemFactory, the second one, no one. What do we need it for?", "url": "https://github.com/dedica-team/nivio/pull/327#discussion_r508070573", "createdAt": "2020-10-19T21:23:00Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/model/ServiceInterface.java", "diffHunk": "@@ -18,7 +18,6 @@\n     public ServiceInterface() {\n     }\n \n-    //TODO: who uses these constructors?\n     public ServiceInterface(InterfaceDescription interfaceItem) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f49c14f63c2aa7406749bd590a3c5175f38c7a4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA3MzY3Ng==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/dedica-team/nivio/pull/327#discussion_r508073676", "createdAt": "2020-10-19T21:29:23Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/Color.java", "diffHunk": "@@ -52,11 +52,14 @@ public static String getGroupColor(Item item) {\n     }\n \n     public static String getGroupColor(String name, Landscape landscape) {\n-        Group g = landscape.getGroup(name).orElse(landscape.getGroup(Group.COMMON).get()); //TODO: optional.get() without ifPresent check\n+        Group g = landscape.getGroup(name).orElse(landscape.getGroup(Group.COMMON).orElse(null));\n         return getGroupColor(g);\n     }\n \n     public static String getGroupColor(Group group) {\n+        if (group == null) {\n+            return Color.DARKGRAY;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f49c14f63c2aa7406749bd590a3c5175f38c7a4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA3ODE2Mg==", "bodyText": "I just checked the usage of this method (I tend to do such things while reviewing :D), my IDE shows me no usage - is this correct, or what was it intended for?", "url": "https://github.com/dedica-team/nivio/pull/327#discussion_r508078162", "createdAt": "2020-10-19T21:38:56Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/Renderer.java", "diffHunk": "@@ -12,7 +12,7 @@\n  */\n public interface Renderer<T> {\n \n-    T render(LayoutedComponent landscape);\n+    T render(LayoutedComponent layoutedComponent, boolean debug);\n \n-    void render(LayoutedComponent landscape, File file) throws IOException;\n+    void render(LayoutedComponent landscape, File file, boolean debug) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f49c14f63c2aa7406749bd590a3c5175f38c7a4"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA3ODcyMQ==", "bodyText": "Do we have a switch in the frontend to trigger the debug view?", "url": "https://github.com/dedica-team/nivio/pull/327#discussion_r508078721", "createdAt": "2020-10-19T21:40:11Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/map/MapController.java", "diffHunk": "@@ -33,14 +30,16 @@ public MapController(LandscapeRepository landscapeRepository, RenderCache render\n \n     @CrossOrigin(methods = RequestMethod.GET)\n     @RequestMapping(method = RequestMethod.GET, path = \"/{landscape}/\" + MAP_SVG_ENDPOINT)\n-    public ResponseEntity<String> svg(@PathVariable(name = \"landscape\") final String landscapeIdentifier) {\n+    public ResponseEntity<String> svg(@PathVariable(name = \"landscape\") final String landscapeIdentifier,\n+                                      @RequestParam(value = \"debug\", required = false, defaultValue = \"false\") boolean debug\n+    ) {\n         Landscape landscape = getLandscape(landscapeIdentifier);\n \n         try {\n             HttpHeaders headers = new HttpHeaders();\n             headers.add(HttpHeaders.CONTENT_TYPE, \"image/svg+xml\");\n             return new ResponseEntity<>(\n-                    renderCache.getSVG(landscape),\n+                    renderCache.getSVG(landscape, debug),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f49c14f63c2aa7406749bd590a3c5175f38c7a4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4OTgzMA==", "bodyText": "This logic is hard to review. Maybe it is best if we talk this through in a call?\nAre our tests good enough? I saw that you did not need to make many changes there :)", "url": "https://github.com/dedica-team/nivio/pull/327#discussion_r508089830", "createdAt": "2020-10-19T22:05:10Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/map/hex/GroupAreaFactory.java", "diffHunk": "@@ -34,37 +35,57 @@\n \n         Set<Item> items = group.getItems();\n         Set<Hex> inArea = new HashSet<>();\n+        List<Item> connected = new ArrayList<>();\n \n+        if (!items.iterator().hasNext()) {\n+            LOGGER.warn(\"Could not determine group area for group {}\", group);\n+            return inArea;\n+        }\n         //surround each item\n-        items.forEach(item -> {\n-            Hex hex = allVertexHexes.get(item);\n+        Item next = items.iterator().next();\n+        while (next != null) {\n+\n+            LOGGER.debug(\"adding {} to group area\", next);\n+            Hex hex = allVertexHexes.get(next);\n             inArea.add(hex);\n             hex.neighbours().forEach(neigh -> {\n                 if (!occupied.contains(neigh))\n                     inArea.add(neigh);\n             });\n \n-            Set<Hex> closestNeighbours = getClosestItemsHexes(item, items, allVertexHexes);\n+            Optional<Item> closest = getClosestItem(next, items, allVertexHexes, connected);\n+            if (closest.isEmpty()) {\n+                LOGGER.debug(\"no closest item found for {}\", next);\n+                break;\n+            }\n+\n             // we dont care for occupied tiles here, since we just want the closest item within group, and non-group\n             // items cannot be anywhere nearby (other types of obstacles do not exist yet)\n             PathFinder pathFinder = new PathFinder(Set.of());\n-            closestNeighbours.forEach(neighbour -> {\n-                Optional<HexPath> path = pathFinder.getPath(hex, neighbour);\n-                if (path.isEmpty()) {\n-                    return;\n-                }\n+\n+            Hex destination = allVertexHexes.get(closest.get());\n+            Optional<HexPath> path = pathFinder.getPath(hex, destination);\n+            if (path.isPresent()) {\n                 Set<Hex> padded = new HashSet<>(); //pad to avoid thin bridges, also workaround for svh outline issue\n                 path.get().getHexes().forEach(pathTile -> {\n                     padded.add(pathTile);\n                     padded.addAll(pathTile.neighbours());\n                 });\n                 padded.stream().filter(hex1 -> !occupied.contains(hex1)).forEach(inArea::add);\n-            });\n+            }\n \n-        });\n+            connected.add(next);\n+            // stop if the next one has been connected already\n+            next = connected.contains(closest.get()) ? null : closest.get();\n+        }\n+\n+        // adding hexes with many sides adjacent to group area until no more can be added\n \n-        Set<Hex> bridges = getBridges(inArea);\n-        inArea.addAll(bridges);\n+        Set<Hex> bridges = getBridges(inArea, 2);\n+        while (!bridges.isEmpty()) {\n+            inArea.addAll(bridges);\n+            bridges = getBridges(inArea, 3); // 2 might be too aggressive and collide with other group areas\n+        }\n \n         return inArea;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f49c14f63c2aa7406749bd590a3c5175f38c7a4"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA5MzY0OA==", "bodyText": "Where does the necesity of the AtomicReference arise? What could (concurrently) change/read that reference?", "url": "https://github.com/dedica-team/nivio/pull/327#discussion_r508093648", "createdAt": "2020-10-19T22:14:33Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/map/hex/GroupAreaFactory.java", "diffHunk": "@@ -75,41 +96,42 @@\n      * @param item           the current group item\n      * @param items          all group items\n      * @param allVertexHexes item hex mapping\n+     * @param connected\n      * @return the closest neighbours\n      */\n-    private static Set<Hex> getClosestItemsHexes(Item item, Set<Item> items, Map<Item, Hex> allVertexHexes) {\n+    private static Optional<Item> getClosestItem(Item item, Set<Item> items, Map<Item, Hex> allVertexHexes, List<Item> connected) {\n         Hex start = allVertexHexes.get(item);\n         AtomicInteger minDist = new AtomicInteger(Integer.MAX_VALUE);\n-        final Set<Hex> min = new HashSet<>();\n+        AtomicReference<Item> min = new AtomicReference<>(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f49c14f63c2aa7406749bd590a3c5175f38c7a4"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA5NDIxMQ==", "bodyText": "This is also tough to review, we could discuss this in a call.\nI did not find a test for this \ud83d\ude28, we should have one!", "url": "https://github.com/dedica-team/nivio/pull/327#discussion_r508094211", "createdAt": "2020-10-19T22:15:46Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/map/svg/SVGBackgroundFactory.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package de.bonndan.nivio.output.map.svg;\n+\n+import de.bonndan.nivio.output.map.hex.Hex;\n+import j2html.tags.ContainerTag;\n+\n+import java.awt.geom.Point2D;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static java.lang.Math.round;\n+\n+public class SVGBackgroundFactory {\n+\n+    private static final String HEX = \"hex\";\n+\n+    public static ContainerTag getHex() {\n+        ContainerTag fullHex = (ContainerTag) new SVGHex(new Hex(0, 0), \"none\", \"#cccccc\")\n+                .render();\n+        fullHex.attr(\"id\", \"hex\");\n+        return fullHex;\n+    }\n+\n+    public static List<ContainerTag> getBackgroundTiles(int minQ, int maxQ, int minR, int maxR, int height) {\n+        //render background hexes\n+        List<ContainerTag> background = new ArrayList<>();\n+        var i = 0;\n+        for (int q = minQ; q <= maxQ; q++) {\n+            for (int r = minR - i; r < (maxR + maxQ - q); r++) {\n+                Point2D.Double hex = new Hex(q, r).toPixel();\n+                float y = round((hex.y + 146)*10f)/10f ; //TODO why 146? without this bg hexes are displaced\n+                if (y < 0 || y > height) continue;\n+                ContainerTag use = SvgTagCreator.use(\"#\" + HEX)\n+                        .attr(\"x\", (int) hex.x - 2 * Hex.HEX_SIZE)\n+                        .attr(\"y\", y);\n+                background.add(use);\n+            }\n+            i++;\n+        }\n+\n+        return background;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f49c14f63c2aa7406749bd590a3c5175f38c7a4"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA5NTIyNA==", "bodyText": "Is this the logic we now have in SVGBackgroundFactory?", "url": "https://github.com/dedica-team/nivio/pull/327#discussion_r508095224", "createdAt": "2020-10-19T22:18:18Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/map/svg/SVGDocument.java", "diffHunk": "@@ -120,16 +123,14 @@ public DomContent render() {\n         }).collect(Collectors.toList());\n \n         //render background hexes\n-        var i = 0;\n-        for (int q = minQ.get(); q <= maxQ.get(); q++) {\n-            for (int r = minR.get() - i; r <= (maxR.get() + (maxQ.get())); r++) {\n-                background.add(new SVGHex(new Hex(q, r), \"none\", \"#cccccc\").render());\n-            }\n-            i++;\n-        }\n-\n-        int paddingTopLeft = 2 * Hex.HEX_SIZE;\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f49c14f63c2aa7406749bd590a3c5175f38c7a4"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA5NTg4Mw==", "bodyText": "Why don't we need this anymore?", "url": "https://github.com/dedica-team/nivio/pull/327#discussion_r508095883", "createdAt": "2020-10-19T22:20:01Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/map/svg/SVGItemLabel.java", "diffHunk": "@@ -2,60 +2,39 @@\n \n import de.bonndan.nivio.model.FullyQualifiedIdentifier;\n import de.bonndan.nivio.model.Item;\n-import de.bonndan.nivio.model.Labeled;\n import j2html.tags.ContainerTag;\n import j2html.tags.DomContent;\n import org.springframework.util.StringUtils;\n \n-import java.util.Map;\n-\n import static de.bonndan.nivio.output.map.svg.SVGRenderer.DEFAULT_ICON_SIZE;\n \n+/**\n+ *\n+ */\n class SVGItemLabel extends Component {\n \n-    public static final int LABEL_WIDTH = 140;\n-    public static final int CORNER_RADIUS = 10;\n-    private final Item item;\n-    private int width;\n+    private final String name;\n+    private final String id;\n+    private final String identifier;\n \n     SVGItemLabel(Item item) {\n-        this.item = item;\n-        this.width = LABEL_WIDTH;\n+        name = StringUtils.isEmpty(item.getName()) ? item.getIdentifier() : item.getName();\n+        id = getId(item);\n+        identifier = item.getFullyQualifiedIdentifier().jsonValue();\n     }\n \n     public DomContent render() {\n-        String name = StringUtils.isEmpty(item.getName()) ? item.getIdentifier() : item.getName();\n-        ContainerTag labelText = new SVGLabelText(name, DEFAULT_ICON_SIZE * 2 + 15 + \"\", \"0\", \"itemLabel\").render();\n \n-        //TODO this is naive\n-        if (name.length() < 10) {\n-            this.width = 100;\n-        }\n-        if (name.length() > 19) {\n-            this.width = 200;\n-        }\n+        ContainerTag labelText = new SVGLabelText(name, \"0\", 2 * DEFAULT_ICON_SIZE + 30 + \"\", \"itemLabel\").render();\n \n         ContainerTag g = SvgTagCreator.g(null, labelText).attr(\"class\", \"label\");\n-        g.attr(\"id\", getId());\n-        g.attr(\"data-identifier\", item.getFullyQualifiedIdentifier().jsonValue());\n-        if (!StringUtils.isEmpty(item.getName()))\n-            g.attr(\"data-name\", item.getName());\n-        if (!StringUtils.isEmpty(item.getDescription()))\n-            g.attr(\"data-description\", item.getDescription());\n-        if (!StringUtils.isEmpty(item.getOwner()))\n-            g.attr(\"data-owner\", item.getOwner());\n-\n-        Map<String, String> groupedLabels = Labeled.groupedByPrefixes(item.getLabels());\n-        groupedLabels.forEach((key, value) -> {\n-            if (!StringUtils.isEmpty(value)) {\n-                g.attr(\"data-\" + key, value);\n-            }\n-        });\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f49c14f63c2aa7406749bd590a3c5175f38c7a4"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ec3b1c73730620748eca756c5ff4a189891526f", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/4ec3b1c73730620748eca756c5ff4a189891526f", "committedDate": "2020-10-20T05:06:09Z", "message": "removed obsolete constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f39d66f01f00a35a48612f9e41d5e1f3c142a73d", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/f39d66f01f00a35a48612f9e41d5e1f3c142a73d", "committedDate": "2020-10-20T05:13:26Z", "message": "added Renderer interface documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f15a0a57e19997dde35913b8183a9ead1fb0f11", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/4f15a0a57e19997dde35913b8183a9ead1fb0f11", "committedDate": "2020-10-21T01:46:28Z", "message": "occupied hexes in hexmap contain group area hexes as well"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41d59ff45a6fa3f8f3ac6a5aa21a85fd757a9602", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/41d59ff45a6fa3f8f3ac6a5aa21a85fd757a9602", "committedDate": "2020-10-21T03:43:34Z", "message": "improved pathfinding, regards group areas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e1f91145f203eded31dc02e8be4e487a1f4132e", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/1e1f91145f203eded31dc02e8be4e487a1f4132e", "committedDate": "2020-10-21T03:55:24Z", "message": "svg and viewbox fixes, not perfect yet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aae372b1a3067934ec65bdeed5ad790e89c95e51", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/aae372b1a3067934ec65bdeed5ad790e89c95e51", "committedDate": "2020-10-21T04:01:54Z", "message": "commented SVGBackgroundFactory, added two simple tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34d4213e03a731f7bc5e1b101ccabe075e3a5774", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/34d4213e03a731f7bc5e1b101ccabe075e3a5774", "committedDate": "2020-10-21T04:12:25Z", "message": "more iterations for group layouting for better positioning of groups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cdc129a856af0a1e62cada78df36a37e2820497", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/8cdc129a856af0a1e62cada78df36a37e2820497", "committedDate": "2020-10-24T08:10:19Z", "message": "[#315] extracted method and added some comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a541a39ef65ff2d843b2a1bb096c3b8294e522f", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/1a541a39ef65ff2d843b2a1bb096c3b8294e522f", "committedDate": "2020-10-24T08:35:39Z", "message": "small refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b45f737a3440debc5e06e59ae1652096f691ea3e", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/b45f737a3440debc5e06e59ae1652096f691ea3e", "committedDate": "2020-10-24T08:56:19Z", "message": "extended externals landscape"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09f8818a07a7e18f90aa456adc8ecd26bbcef7ee", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/09f8818a07a7e18f90aa456adc8ecd26bbcef7ee", "committedDate": "2020-10-24T08:57:39Z", "message": "increased between-group layout initial temp for better layouts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MTk4MDU4", "url": "https://github.com/dedica-team/nivio/pull/327#pullrequestreview-517198058", "createdAt": "2020-10-26T21:42:36Z", "commit": {"oid": "09f8818a07a7e18f90aa456adc8ecd26bbcef7ee"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMTo0MjozN1rOHojg_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMTo1ODo0M1rOHoj9eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI4Njk3NQ==", "bodyText": "Which special functionality provided by the BidiMap data structure are we using? I have only seen getKey() and containsKey(). If that is so, why isn't that just the value in a normal Map structure?", "url": "https://github.com/dedica-team/nivio/pull/327#discussion_r512286975", "createdAt": "2020-10-26T21:42:37Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/map/hex/GroupAreaFactory.java", "diffHunk": "@@ -26,95 +28,112 @@\n      * <p>\n      * There is clearly much room for improvement here. It's only that I haven't found a better approach so far.\n      *\n-     * @param occupied       tiles occupied by items\n-     * @param group          the group\n-     * @param allVertexHexes a mapping from item to its hex (all, unfiltered)\n+     * @param hexesToItems tiles occupied by items\n+     * @param group        the group\n      * @return all hexes the group consists of (an area)\n      */\n-    public static Set<Hex> getGroup(Set<Hex> occupied, Group group, Map<Item, Hex> allVertexHexes) {\n+    public static Set<Hex> getGroup(BidiMap<Hex, Object> hexesToItems, Group group) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09f8818a07a7e18f90aa456adc8ecd26bbcef7ee"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI4ODA2Nw==", "bodyText": "Great! Extracting this into an own method makes everything better readable and understandable \ud83d\ude04", "url": "https://github.com/dedica-team/nivio/pull/327#discussion_r512288067", "createdAt": "2020-10-26T21:44:55Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/map/hex/GroupAreaFactory.java", "diffHunk": "@@ -26,95 +28,112 @@\n      * <p>\n      * There is clearly much room for improvement here. It's only that I haven't found a better approach so far.\n      *\n-     * @param occupied       tiles occupied by items\n-     * @param group          the group\n-     * @param allVertexHexes a mapping from item to its hex (all, unfiltered)\n+     * @param hexesToItems tiles occupied by items\n+     * @param group        the group\n      * @return all hexes the group consists of (an area)\n      */\n-    public static Set<Hex> getGroup(Set<Hex> occupied, Group group, Map<Item, Hex> allVertexHexes) {\n+    public static Set<Hex> getGroup(BidiMap<Hex, Object> hexesToItems, Group group) {\n \n         Set<Item> items = group.getItems();\n         Set<Hex> inArea = new HashSet<>();\n-        List<Item> connected = new ArrayList<>();\n \n         if (!items.iterator().hasNext()) {\n             LOGGER.warn(\"Could not determine group area for group {}\", group);\n             return inArea;\n         }\n-        //surround each item\n+\n+        //build the area by adding paths\n+        addPathsBetweenClosestItems(hexesToItems, items, inArea);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09f8818a07a7e18f90aa456adc8ecd26bbcef7ee"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI5MzI3OQ==", "bodyText": "What technical debt do you think that we are collecting here? For me it is just that I don't really understand what is going on (but I also haven't fully understood the other rendering logics).", "url": "https://github.com/dedica-team/nivio/pull/327#discussion_r512293279", "createdAt": "2020-10-26T21:56:33Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/map/svg/SVGBackgroundFactory.java", "diffHunk": "@@ -9,6 +9,11 @@\n \n import static java.lang.Math.round;\n \n+/**\n+ * This generates the background hex tiles.\n+ *\n+ * TODO It is a bad bank for technical debt.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09f8818a07a7e18f90aa456adc8ecd26bbcef7ee"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI5NDI2Ng==", "bodyText": "Do these tests cover the logic of finding the closest items and the correct occupation of tiles as implemented in the methods getGroup(), addPathsBetweenClosestItems(), getClosestItem() and getBridges()?", "url": "https://github.com/dedica-team/nivio/pull/327#discussion_r512294266", "createdAt": "2020-10-26T21:58:43Z", "author": {"login": "mfbieber"}, "path": "src/test/java/de/bonndan/nivio/output/map/hex/GroupAreaFactoryTest.java", "diffHunk": "@@ -2,12 +2,15 @@\n \n import de.bonndan.nivio.model.*;\n import de.bonndan.nivio.output.map.svg.HexPath;\n+import org.apache.commons.collections4.BidiMap;\n+import org.apache.commons.collections4.bidimap.DualHashBidiMap;\n import org.apache.commons.collections4.set.UnmodifiableSet;\n import org.junit.jupiter.api.Test;\n \n import java.util.*;\n \n import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.in;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n \n class GroupAreaFactoryTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09f8818a07a7e18f90aa456adc8ecd26bbcef7ee"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f36aa8e148f5475e4ecca193f20c09faccbb2f3", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/8f36aa8e148f5475e4ecca193f20c09faccbb2f3", "committedDate": "2020-10-28T07:04:15Z", "message": "[#326] using simple map where possible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2720958676691040abebf12b373f9d91606193e", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/b2720958676691040abebf12b373f9d91606193e", "committedDate": "2020-10-29T11:06:05Z", "message": "[#326] introduced SVGDimension to separate and fix background rendering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdfc0c294b4e59abab29f52b64a9776d9fd786f4", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/fdfc0c294b4e59abab29f52b64a9776d9fd786f4", "committedDate": "2020-10-29T11:17:33Z", "message": "[#326] cleanup"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1907, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}