{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDk1MzQ3", "number": 204, "title": "Rendering without JGraphX", "bodyText": "This escalated quickly:\n\nremoves jgraphx dependency from nivio, now it is visible what is happening during layout etc (keeping the organic layout code from jgraphx with some modifications)\nrenders groups as hex areas, not as dumb rectangles (to be drawn as Civilisation-like border later)\nensures that similar input leads to similar output (no more flickering or unexpected position changes) closes #193\n\n\n please find out why the os x build runs into a timeout", "createdAt": "2020-07-24T21:19:43Z", "url": "https://github.com/dedica-team/nivio/pull/204", "merged": true, "mergeCommit": {"oid": "ef5a24ac0c472d41e17a5a71094c944758c2fa0b"}, "closed": true, "closedAt": "2020-08-13T15:03:15Z", "author": {"login": "bonndan"}, "timelineItems": {"totalCount": 72, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc38fZhgH2gAyNDU2NDk1MzQ3OmZmMWMyNTA0NThmODRjNWI2NGM0NmUwMTAyYjkxM2ZmNzNjZmFkZjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-g4UkAH2gAyNDU2NDk1MzQ3OmExMTAyM2RlN2U3ZTY5MjFlYzY2NmYyYzNhNTM0MTNiODU0MmE2MmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ff1c250458f84c5b64c46e0102b913ff73cfadf0", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/ff1c250458f84c5b64c46e0102b913ff73cfadf0", "committedDate": "2020-07-24T04:40:31Z", "message": "[#193] using similar variant for fast organic layout for intra-group rendering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2385cb2f34ea290a997ed32e9202e473d21c681", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/a2385cb2f34ea290a997ed32e9202e473d21c681", "committedDate": "2020-07-24T05:09:04Z", "message": "[#193] ensuring every item has a group"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c54564b6bbc26a598a5b9cd0258469858ebd46c", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/1c54564b6bbc26a598a5b9cd0258469858ebd46c", "committedDate": "2020-07-24T21:13:42Z", "message": "[#193] layout without jgraphx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8b610eb1ce70b0468df613ae20407c26649f398", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/f8b610eb1ce70b0468df613ae20407c26649f398", "committedDate": "2020-07-24T21:20:57Z", "message": "[#193] removed jgraphx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14c1b1d1b4dc489384a14fc297178228d1c54770", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/14c1b1d1b4dc489384a14fc297178228d1c54770", "committedDate": "2020-07-24T21:28:40Z", "message": "[#193] test fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8ef36cfd9b3ecd30f772c7d7622be7370defeda", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/c8ef36cfd9b3ecd30f772c7d7622be7370defeda", "committedDate": "2020-07-24T21:32:16Z", "message": "[#193] test fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39198bf1753986e187924a68aeb37ca3a7a9d7c0", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/39198bf1753986e187924a68aeb37ca3a7a9d7c0", "committedDate": "2020-07-25T09:22:00Z", "message": "[#193] group rendering improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f4e38ae578c0989e6227539740138f519bd18de", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/3f4e38ae578c0989e6227539740138f519bd18de", "committedDate": "2020-07-25T10:45:19Z", "message": "[#193] group rendering improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc368742da6fa42298cd428a61f5d0cce896c49a", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/bc368742da6fa42298cd428a61f5d0cce896c49a", "committedDate": "2020-07-25T10:45:50Z", "message": "[#193] disabled debug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7a658fe16c27e9940fbec5aeec0e6453c679a05", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/b7a658fe16c27e9940fbec5aeec0e6453c679a05", "committedDate": "2020-07-25T19:00:29Z", "message": "[#193] group area made of hexagons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d769f02be5012e1d42f3b6e7ded6923be92344d4", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/d769f02be5012e1d42f3b6e7ded6923be92344d4", "committedDate": "2020-07-25T19:02:10Z", "message": "[#193] added comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b68b67dba7f3ec690a7cfc1665e58d6c94b3228c", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/b68b67dba7f3ec690a7cfc1665e58d6c94b3228c", "committedDate": "2020-07-26T08:05:21Z", "message": "[#193] extra svg margin for group areas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55ee86234bec7928c4e9ac0959baa748a7426613", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/55ee86234bec7928c4e9ac0959baa748a7426613", "committedDate": "2020-07-26T08:53:29Z", "message": "[#193] cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "618f30d9ecaffd840550496f17c8119b8667776c", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/618f30d9ecaffd840550496f17c8119b8667776c", "committedDate": "2020-07-26T09:05:55Z", "message": "[#193] group area using relation paths"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e721043baaca0479673b5f668c23050756afa9ea", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/e721043baaca0479673b5f668c23050756afa9ea", "committedDate": "2020-07-26T09:21:34Z", "message": "[#193] initial placement of items to be layouted on circle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e898ff7234e4ea64bdaae62260f03fed9b1979d7", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/e898ff7234e4ea64bdaae62260f03fed9b1979d7", "committedDate": "2020-07-26T09:24:46Z", "message": "[#193] committing render test outputs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "348ba71e474cc2a106689f412eeffbc25cf1bded", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/348ba71e474cc2a106689f412eeffbc25cf1bded", "committedDate": "2020-07-26T10:13:43Z", "message": "[#193] cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcb467fa8342db4ea375dbd95e0fbb6975c7179d", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/dcb467fa8342db4ea375dbd95e0fbb6975c7179d", "committedDate": "2020-07-26T17:07:28Z", "message": "[#193] simplified code, removed interfaces which are not necessary yet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79838402be7bfdf6582118395961ac693dab50a7", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/79838402be7bfdf6582118395961ac693dab50a7", "committedDate": "2020-07-26T17:09:05Z", "message": "[#193] cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17651eab7d398dc2ff8f025ce4141ef0cc030123", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/17651eab7d398dc2ff8f025ce4141ef0cc030123", "committedDate": "2020-07-26T17:37:43Z", "message": "[#193] added test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a8c8caad68e9113f341177bd3b264fd5423407a", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/3a8c8caad68e9113f341177bd3b264fd5423407a", "committedDate": "2020-07-26T17:39:58Z", "message": "[#193] cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0bb7a3dde6aee2dc3c6215b70f90c8f90eb0aad", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/b0bb7a3dde6aee2dc3c6215b70f90c8f90eb0aad", "committedDate": "2020-07-26T19:08:06Z", "message": "[#193] areas filled with bridges and gaps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "182570a71455ad09af56dc9ed447915254cf6343", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/182570a71455ad09af56dc9ed447915254cf6343", "committedDate": "2020-07-26T19:41:05Z", "message": "[#193] adding some extra margin for groups near top/left border"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a15511f9c2012cff0cc2048bfb1a78d5dd0e741d", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/a15511f9c2012cff0cc2048bfb1a78d5dd0e741d", "committedDate": "2020-07-26T19:42:17Z", "message": "[#193] deleted outdated test artifacts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NjgwNTQ3", "url": "https://github.com/dedica-team/nivio/pull/204#pullrequestreview-455680547", "createdAt": "2020-07-27T11:00:06Z", "commit": {"oid": "a15511f9c2012cff0cc2048bfb1a78d5dd0e741d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTowMDowN1rOG3druA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMTowMDowN1rOG3druA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDgxMTE5Mg==", "bodyText": "This will link the image from 'http://localhost:8080/icons/service.png'\nmaybe it is better to embed the image base64 encoded.\nI think this is also the reason why 'https://github.com/dedica-team/nivio/actions/runs/183402402' fails.", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r460811192", "createdAt": "2020-07-27T11:00:07Z", "author": {"login": "BilligsterUser"}, "path": "src/main/java/de/bonndan/nivio/output/map/svg/SVGRenderer.java", "diffHunk": "@@ -1,33 +1,113 @@\n package de.bonndan.nivio.output.map.svg;\n \n-import de.bonndan.nivio.model.LandscapeImpl;\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.Item;\n+import de.bonndan.nivio.output.Color;\n+import de.bonndan.nivio.output.LocalServer;\n import de.bonndan.nivio.output.Renderer;\n+import de.bonndan.nivio.output.layout.LayoutedComponent;\n+import de.bonndan.nivio.output.map.hex.Hex;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Service;\n+import org.springframework.util.StringUtils;\n \n+import java.awt.geom.Point2D;\n import java.io.File;\n import java.io.FileWriter;\n import java.io.IOException;\n+import java.util.concurrent.atomic.AtomicLong;\n \n @Service\n public class SVGRenderer implements Renderer<String> {\n \n+    private static final Logger LOGGER = LoggerFactory.getLogger(SVGRenderer.class);\n     public static final int DEFAULT_ICON_SIZE = 50;\n+\n+    private final LocalServer localServer;\n     private final MapStyleSheetFactory mapStyleSheetFactory;\n \n-    public SVGRenderer(MapStyleSheetFactory mapStyleSheetFactory) {\n+    public SVGRenderer(LocalServer localServer, MapStyleSheetFactory mapStyleSheetFactory) {\n+        this.localServer = localServer;\n         this.mapStyleSheetFactory = mapStyleSheetFactory;\n     }\n \n     @Override\n-    public String render(LandscapeImpl landscape) {\n-        SVGDocument svgDocument = new SVGDocument(landscape, mapStyleSheetFactory);\n+    public String render(LayoutedComponent layoutedComponent) {\n+        applyValues(layoutedComponent);\n+        SVGDocument svgDocument = new SVGDocument(layoutedComponent, mapStyleSheetFactory);\n         return svgDocument.getXML();\n     }\n \n     @Override\n-    public void render(LandscapeImpl landscape, File file) throws IOException {\n+    public void render(LayoutedComponent landscape, File file) throws IOException {\n         FileWriter fileWriter = new FileWriter(file);\n         fileWriter.write(render(landscape));\n         fileWriter.close();\n     }\n+\n+    /**\n+     * @param layoutedComponent layouted landscape\n+     */\n+    private void applyValues(LayoutedComponent layoutedComponent) {\n+\n+        Point2D.Double margin = getMargins(layoutedComponent);\n+        layoutedComponent.getChildren().forEach(groupBounds -> {\n+\n+            LOGGER.debug(\"group offset {} {}\", groupBounds.getX(), groupBounds.getY());\n+            Group group = (Group) groupBounds.getComponent();\n+            if (StringUtils.isEmpty(group.getColor())) {\n+                group.setColor(Color.getGroupColor(group));\n+            }\n+            groupBounds.setX(groupBounds.getX() + margin.x);\n+            groupBounds.setY(groupBounds.getY() + margin.y);\n+\n+            groupBounds.getChildren().forEach(itemBounds -> {\n+                LOGGER.debug(\"original item pos {} {}\", itemBounds.getX(), itemBounds.getY());\n+                itemBounds.setX(itemBounds.getX() + groupBounds.getX());\n+                itemBounds.setY(itemBounds.getY() + groupBounds.getY());\n+                LOGGER.debug(\"item pos with group offset: {} {}\", itemBounds.getX(), itemBounds.getY());\n+\n+                Item item = (Item) itemBounds.getComponent();\n+                itemBounds.setColor(group.getColor());\n+                itemBounds.setIcon(localServer.getIconUrl(item).toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15511f9c2012cff0cc2048bfb1a78d5dd0e741d"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "721639378146e845b981f6f71ceba3e578f6b252", "author": {"user": {"login": "BilligsterUser", "name": "Paul Kusmin"}}, "url": "https://github.com/dedica-team/nivio/commit/721639378146e845b981f6f71ceba3e578f6b252", "committedDate": "2020-07-28T14:35:45Z", "message": "fix PNGRenderCacheTest\n\nPNGRenderCacheTest: mock req to \"/icons/service.png\"\n\nPNGRenderCache & SVGDocument use \"try-with-resources\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb75cfb2701974b240d691410583b887148a17dd", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/fb75cfb2701974b240d691410583b887148a17dd", "committedDate": "2020-07-28T18:53:04Z", "message": "Merge pull request #207 from dedica-team/test-pr\n\nfix PNGRenderCacheTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2OTMzNTQz", "url": "https://github.com/dedica-team/nivio/pull/204#pullrequestreview-456933543", "createdAt": "2020-07-28T19:17:02Z", "commit": {"oid": "fb75cfb2701974b240d691410583b887148a17dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1Mzk4MDc3", "url": "https://github.com/dedica-team/nivio/pull/204#pullrequestreview-455398077", "createdAt": "2020-07-26T21:49:00Z", "commit": {"oid": "a15511f9c2012cff0cc2048bfb1a78d5dd0e741d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQyMTo0OTowMFrOG3Pa0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwOToyODoxNlrOG4wTxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzQ4OQ==", "bodyText": "Here we are reading the group (String) from the item and then setting the group (String) back again to the item. We are changing what was written before in the item to then be the group identifier.\nWhy wasn't it the identifier from the beginning?\nActually, this only makes sense if we are updating the group of an item. Then, I would prefer to have an updateGroup method on the Item and an updateGroupsOnItems on the Landscape. Then, we also wouldn't be exposing implementation details of the landscape and the items to this Resolver.\n(about exposing the implementation details, this applies to the other contents of the processmethod too)", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r460577489", "createdAt": "2020-07-26T21:49:00Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/input/GroupQueryResolver.java", "diffHunk": "@@ -30,5 +31,11 @@ public void process(LandscapeDescription input, LandscapeImpl landscape) {\n             }\n             groupDescription.getContains().forEach(condition -> group.getItems().addAll(landscape.getItems().query(condition)));\n         });\n+\n+        //cleanup to ensure every items has the group identifier\n+        landscape.getItems().stream().forEach(item -> {\n+            Group group = landscape.getGroup(item.getGroup()); //if group is empty, COMMON is returned\n+            item.setGroup(group.getIdentifier());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15511f9c2012cff0cc2048bfb1a78d5dd0e741d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzYxMw==", "bodyText": "The comment: how does this happen? I could not see it from the implementation of getGroup() or elsewhere?", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r460577613", "createdAt": "2020-07-26T21:50:13Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/input/GroupQueryResolver.java", "diffHunk": "@@ -30,5 +31,11 @@ public void process(LandscapeDescription input, LandscapeImpl landscape) {\n             }\n             groupDescription.getContains().forEach(condition -> group.getItems().addAll(landscape.getItems().query(condition)));\n         });\n+\n+        //cleanup to ensure every items has the group identifier\n+        landscape.getItems().stream().forEach(item -> {\n+            Group group = landscape.getGroup(item.getGroup()); //if group is empty, COMMON is returned", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15511f9c2012cff0cc2048bfb1a78d5dd0e741d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3ODI3NA==", "bodyText": "This returns the JGraphXConfig, which is not related to JGraphX anymore - or am I wrong? Shouldn't we rename the method and the config class?", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r460578274", "createdAt": "2020-07-26T21:57:50Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/layout/AllGroupsGraph.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package de.bonndan.nivio.output.layout;\n+\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.Item;\n+import de.bonndan.nivio.model.Landscape;\n+import de.bonndan.nivio.model.LandscapeItem;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.util.StringUtils;\n+\n+import java.util.*;\n+\n+/**\n+ * Renders a graph of group containers only, not regarding items inside the containers.\n+ */\n+public class AllGroupsGraph {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AllGroupsGraph.class);\n+    public static final int FORCE_CONSTANT = 350;\n+    public static final int MAX_DISTANCE_LIMIT = 1000;\n+\n+    private final Map<Group, LayoutedComponent> groupNodes = new LinkedHashMap<>();\n+    private final FastOrganicLayout layout;\n+    private final Landscape landscape;\n+\n+    public AllGroupsGraph(Landscape landscape, Map<String, Group> groups, Map<String, SubGraph> subgraphs) {\n+        this.landscape = landscape;\n+\n+        LOGGER.debug(\"Subgraphs sequence: {}\", subgraphs);\n+\n+        List<LandscapeItem> items = new ArrayList<>();\n+        groups.forEach((groupName, groupItem) -> {\n+            LayoutedComponent groupGeometry = subgraphs.get(groupName).getOuterBounds();\n+            groupNodes.put(groupItem, groupGeometry);\n+            items.addAll(groupItem.getItems());\n+        });\n+        LOGGER.debug(\"Group node sequence: {}\", groupNodes);\n+\n+        addVirtualEdgesBetweenGroups(items);\n+\n+        layout = new FastOrganicLayout(new ArrayList<>(groupNodes.values()));\n+        //layout.setDebug(true);\n+\n+        Optional.ofNullable(landscape.getConfig().getJgraphx().getMaxIterations())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15511f9c2012cff0cc2048bfb1a78d5dd0e741d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE0MDkzOQ==", "bodyText": "What could we use instead if this is deprecated?", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r462140939", "createdAt": "2020-07-29T08:48:39Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/dld4e/Dld4eRenderer.java", "diffHunk": "@@ -14,6 +15,7 @@\n import java.util.ArrayList;\n import java.util.List;\n \n+@Deprecated //this is both layouter and renderer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb75cfb2701974b240d691410583b887148a17dd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE0MjY5OQ==", "bodyText": "The contents of this collection are updated, but never queried.", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r462142699", "createdAt": "2020-07-29T08:51:36Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/dld4e/Dld4eRenderer.java", "diffHunk": "@@ -27,10 +29,10 @@\n     private final Icons icons = new Icons();\n \n     @Override\n-    public String render(LandscapeImpl landscape) {\n+    public String render(LayoutedComponent landscape) {\n \n-        landscape.getItems().stream().forEach(this::addService);\n-        landscape.getItems().stream().forEach(this::addLinks);\n+        List<Item> items = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb75cfb2701974b240d691410583b887148a17dd"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE0NTUxNQ==", "bodyText": "Why is this commented?", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r462145515", "createdAt": "2020-07-29T08:56:02Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/layout/GroupConnections.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package de.bonndan.nivio.output.layout;\n+\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.util.StringUtils;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+class GroupConnections {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(GroupConnections.class);\n+    private final List<Pair<String, String>> groupConnections = new ArrayList<>();\n+\n+    public boolean isConnected(String group) {\n+        return groupConnections.stream()\n+                .anyMatch(entry -> entry.getKey().equals(group) || entry.getValue().equals(group));\n+    }\n+\n+    public void connect(String a, String b, String message) {\n+        LOGGER.debug(message + a + \" and \" + b);\n+        groupConnections.add(new ImmutablePair(a, b));\n+    }\n+\n+    public boolean canConnect(String a, String b) {\n+        if (StringUtils.isEmpty(a) || StringUtils.isEmpty(b)) {\n+            LOGGER.warn(\"Empty group names in virtual connection check between {} and {}\", a, b);\n+            return false;\n+        }\n+\n+\n+        if (a.equals(b))\n+            return false;\n+\n+        boolean hasLink = groupConnections.stream()\n+                .anyMatch(pair ->\n+                        (pair.getKey().equals(a) && pair.getValue().equals(b))\n+                               // || (pair.getKey().equals(b) && pair.getValue().equals(a))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb75cfb2701974b240d691410583b887148a17dd"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE0ODEwMQ==", "bodyText": "Why are we using LandscapeImpl instead of the interface?", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r462148101", "createdAt": "2020-07-29T08:59:56Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/layout/OrganicLayouter.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package de.bonndan.nivio.output.layout;\n+\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.LandscapeImpl;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+/**\n+ * Applies {@link FastOrganicLayout} to landscape components and writes the rendered data to component labels.\n+ *\n+ *\n+ */\n+public class OrganicLayouter implements Layouter<LayoutedComponent> {\n+\n+    public OrganicLayouter() {\n+    }\n+\n+    @Override\n+    public LayoutedComponent layout(LandscapeImpl landscape) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb75cfb2701974b240d691410583b887148a17dd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE0OTk2Ng==", "bodyText": "Do we need a LinkedHashMap, or could it be a HashMap? (I don't think that we have memory problems with nivio, just to understand)", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r462149966", "createdAt": "2020-07-29T09:03:00Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/layout/OrganicLayouter.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package de.bonndan.nivio.output.layout;\n+\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.LandscapeImpl;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+/**\n+ * Applies {@link FastOrganicLayout} to landscape components and writes the rendered data to component labels.\n+ *\n+ *\n+ */\n+public class OrganicLayouter implements Layouter<LayoutedComponent> {\n+\n+    public OrganicLayouter() {\n+    }\n+\n+    @Override\n+    public LayoutedComponent layout(LandscapeImpl landscape) {\n+\n+        Map<String, SubGraph> subgraphs = new LinkedHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb75cfb2701974b240d691410583b887148a17dd"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE1MTMwMQ==", "bodyText": "Why don't we use the interface Layouter?", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r462151301", "createdAt": "2020-07-29T09:05:19Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/map/PNGRenderCache.java", "diffHunk": "@@ -71,16 +69,15 @@ public PNGRenderCache(MapFactory<mxGraph, mxCell> mapFactory, MapStyleSheetFacto\n      * @return the svg as string, uncached\n      */\n     public String getSVG(LandscapeImpl landscape) {\n-        JGraphXRenderer jGraphXRenderer = new JGraphXRenderer();\n-        RenderedArtifact<mxGraph, mxCell> render = jGraphXRenderer.render(landscape);\n-        mapFactory.applyArtifactValues(landscape, render);\n+        OrganicLayouter layouter = new OrganicLayouter();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb75cfb2701974b240d691410583b887148a17dd"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE2NDkzNA==", "bodyText": "@BilligsterUser: nice that you fixed that error! Could you also write a test that fails with the old implementation and now passes?", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r462164934", "createdAt": "2020-07-29T09:28:16Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/output/map/PNGRenderCache.java", "diffHunk": "@@ -93,23 +90,17 @@ public void onApplicationEvent(ProcessingFinishedEvent processingFinishedEvent)\n     }\n \n     private byte[] asByteArray(LandscapeImpl landscape) {\n-        TranscoderInput input_svg_image = new TranscoderInput(new ByteArrayInputStream(getSVG(landscape).getBytes()));\n-        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n-        TranscoderOutput transcoderOutput = new TranscoderOutput(outputStream);\n+        TranscoderInput input_svg_image = new TranscoderInput(\n+                new ByteArrayInputStream(getSVG(landscape).getBytes())\n+        );\n         Transcoder transcoder = new PNGTranscoder();\n-        try {\n+        try (ByteArrayOutputStream outputStream = new ByteArrayOutputStream()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb75cfb2701974b240d691410583b887148a17dd"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b696854d54725c498edac3ec186808ecd4059a9", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/7b696854d54725c498edac3ec186808ecd4059a9", "committedDate": "2020-07-29T18:23:45Z", "message": "[#204] improved and explained group resolving fallback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "140e238b43c2e71c4ea4a8b4aa7a8e264add9deb", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/140e238b43c2e71c4ea4a8b4aa7a8e264add9deb", "committedDate": "2020-07-29T18:54:52Z", "message": "[#204] cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "234215f1b0bd345bd45a6792605a964d24a0e50f", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/234215f1b0bd345bd45a6792605a964d24a0e50f", "committedDate": "2020-07-29T19:16:54Z", "message": "[#204] added comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83d9a40226aca4a9e23476836cfe06c29ef00c4b", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/83d9a40226aca4a9e23476836cfe06c29ef00c4b", "committedDate": "2020-07-29T20:04:25Z", "message": "[#204] svg renderer test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98358961a2c9bc3481467ea67daccb68460c2792", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/98358961a2c9bc3481467ea67daccb68460c2792", "committedDate": "2020-07-29T20:20:10Z", "message": "[#204] small refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aab8f81e3dc7c4daa89251c7240ad7e6bc0553a5", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/aab8f81e3dc7c4daa89251c7240ad7e6bc0553a5", "committedDate": "2020-07-29T20:54:24Z", "message": "[#204] simple InitialPlacementStrategyTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9b0cbec93bc85813197ec90a0b21faaa51b9adc", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/e9b0cbec93bc85813197ec90a0b21faaa51b9adc", "committedDate": "2020-07-29T21:12:13Z", "message": "[#204] sub graph integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b3da5c5c99ec9bad3c537376a0516d8f9ef0fc6", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/7b3da5c5c99ec9bad3c537376a0516d8f9ef0fc6", "committedDate": "2020-07-29T21:44:54Z", "message": "[#204] renamed and separated layout config, updated docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a48df8bcdb4758e0dd509733a70a35db48e2fc2", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/8a48df8bcdb4758e0dd509733a70a35db48e2fc2", "committedDate": "2020-07-29T21:48:56Z", "message": "[#204] removed dld4e stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2680f5412aa0f95311d338c5cfe6fc017986bab6", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/2680f5412aa0f95311d338c5cfe6fc017986bab6", "committedDate": "2020-07-29T21:49:50Z", "message": "[#204] removed json debug stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aecb383b6683ec933c9d1b730f4fa248fbf2e20b", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/aecb383b6683ec933c9d1b730f4fa248fbf2e20b", "committedDate": "2020-07-30T18:17:15Z", "message": "[#204] all group layout test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e968f16da7528028fe88f44266f9d7cf85eb659", "author": {"user": {"login": "mfbieber", "name": "Michelle Fernandez Bieber"}}, "url": "https://github.com/dedica-team/nivio/commit/3e968f16da7528028fe88f44266f9d7cf85eb659", "committedDate": "2020-07-31T18:04:13Z", "message": "added some tests for GroupQueryResolver that point out some potential problems - needs fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MzY0NDM4", "url": "https://github.com/dedica-team/nivio/pull/204#pullrequestreview-459364438", "createdAt": "2020-07-31T18:06:43Z", "commit": {"oid": "3e968f16da7528028fe88f44266f9d7cf85eb659"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxODowNjo0M1rOG6RaUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxODoxNDoyMVrOG6RoHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1NTg1OQ==", "bodyText": "This list contains the same Item twice. This is because the items are just added to the modifiable Collection in Group.\nI would refactor this to add a method addItem to Group that does not add items twice (or use a Set) and to have an unmodifiable Collection instead.", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r463755859", "createdAt": "2020-07-31T18:06:43Z", "author": {"login": "mfbieber"}, "path": "src/test/java/de/bonndan/nivio/input/GroupQueryResolverTest.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package de.bonndan.nivio.input;\n+\n+import de.bonndan.nivio.input.dto.GroupDescription;\n+import de.bonndan.nivio.input.dto.LandscapeDescription;\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.Item;\n+import de.bonndan.nivio.model.LandscapeImpl;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@ExtendWith(MockitoExtension.class)\n+class GroupQueryResolverTest {\n+\n+    private GroupQueryResolver groupResolver;\n+\n+    @Mock\n+    private ProcessLog processLog;\n+\n+    @BeforeEach\n+    public void setup() {\n+        groupResolver = new GroupQueryResolver(processLog);\n+    }\n+\n+    @Test\n+    void process_doesNotContainDuplicatedItemsInGroups() {\n+        LandscapeImpl landscape = new LandscapeImpl();\n+        landscape.setProcessLog(processLog);\n+        Item item = new Item();\n+        item.setIdentifier(\"itemIdentifier\");\n+        item.setGroup(\"groupIdentifier\");\n+        landscape.setItems(Set.of(item));\n+        landscape.addGroup(new Group(\"groupIdentifier\"));\n+\n+        LandscapeDescription input = new LandscapeDescription();\n+        GroupDescription groupDescription = new GroupDescription();\n+        groupDescription.setIdentifier(\"groupIdentifier\");\n+        groupDescription.setContains(List.of(\"itemidentifier\"));\n+        input.getGroups().put(\"group\", groupDescription);\n+\n+        groupResolver.process(input, landscape);\n+\n+        assertThat(landscape.getItems().stream().count()).isEqualTo(1L);\n+        assertThat(landscape.getGroup(\"groupIdentifier\").getItems()).containsExactly(item);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e968f16da7528028fe88f44266f9d7cf85eb659"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1NzU3Mw==", "bodyText": "This shows what has to be done to have valid objects (instantiation and setting of things), only to not have a NPE.\nI am not even sure if this is how the objects are intended to be used \ud83d\ude1e, which means that somehow it is not straightforward and thus potentially unsafe.\nI also did not really understand why we have Group and GroupDescription both implementing GroupItem. These seem to do almost the same things. There are several casts to these objects, which are really hard to get rid of.", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r463757573", "createdAt": "2020-07-31T18:10:29Z", "author": {"login": "mfbieber"}, "path": "src/test/java/de/bonndan/nivio/input/GroupQueryResolverTest.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package de.bonndan.nivio.input;\n+\n+import de.bonndan.nivio.input.dto.GroupDescription;\n+import de.bonndan.nivio.input.dto.LandscapeDescription;\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.Item;\n+import de.bonndan.nivio.model.LandscapeImpl;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@ExtendWith(MockitoExtension.class)\n+class GroupQueryResolverTest {\n+\n+    private GroupQueryResolver groupResolver;\n+\n+    @Mock\n+    private ProcessLog processLog;\n+\n+    @BeforeEach\n+    public void setup() {\n+        groupResolver = new GroupQueryResolver(processLog);\n+    }\n+\n+    @Test\n+    void process_doesNotContainDuplicatedItemsInGroups() {\n+        LandscapeImpl landscape = new LandscapeImpl();\n+        landscape.setProcessLog(processLog);\n+        Item item = new Item();\n+        item.setIdentifier(\"itemIdentifier\");\n+        item.setGroup(\"groupIdentifier\");\n+        landscape.setItems(Set.of(item));\n+        landscape.addGroup(new Group(\"groupIdentifier\"));\n+\n+        LandscapeDescription input = new LandscapeDescription();\n+        GroupDescription groupDescription = new GroupDescription();\n+        groupDescription.setIdentifier(\"groupIdentifier\");\n+        groupDescription.setContains(List.of(\"itemidentifier\"));\n+        input.getGroups().put(\"group\", groupDescription);\n+\n+        groupResolver.process(input, landscape);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e968f16da7528028fe88f44266f9d7cf85eb659"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1Nzg2Mg==", "bodyText": "The query condition has to be the lowercased identifier. Is this intentional? See the other test below.", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r463757862", "createdAt": "2020-07-31T18:11:06Z", "author": {"login": "mfbieber"}, "path": "src/test/java/de/bonndan/nivio/input/GroupQueryResolverTest.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package de.bonndan.nivio.input;\n+\n+import de.bonndan.nivio.input.dto.GroupDescription;\n+import de.bonndan.nivio.input.dto.LandscapeDescription;\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.Item;\n+import de.bonndan.nivio.model.LandscapeImpl;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@ExtendWith(MockitoExtension.class)\n+class GroupQueryResolverTest {\n+\n+    private GroupQueryResolver groupResolver;\n+\n+    @Mock\n+    private ProcessLog processLog;\n+\n+    @BeforeEach\n+    public void setup() {\n+        groupResolver = new GroupQueryResolver(processLog);\n+    }\n+\n+    @Test\n+    void process_doesNotContainDuplicatedItemsInGroups() {\n+        LandscapeImpl landscape = new LandscapeImpl();\n+        landscape.setProcessLog(processLog);\n+        Item item = new Item();\n+        item.setIdentifier(\"itemIdentifier\");\n+        item.setGroup(\"groupIdentifier\");\n+        landscape.setItems(Set.of(item));\n+        landscape.addGroup(new Group(\"groupIdentifier\"));\n+\n+        LandscapeDescription input = new LandscapeDescription();\n+        GroupDescription groupDescription = new GroupDescription();\n+        groupDescription.setIdentifier(\"groupIdentifier\");\n+        groupDescription.setContains(List.of(\"itemidentifier\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e968f16da7528028fe88f44266f9d7cf85eb659"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1ODQxNA==", "bodyText": "This aims for the las stream of the process() method. The groups are not updated on the landscape, only getGroup(somethingInvalid) returns Group.COMMON. Is this intentional?", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r463758414", "createdAt": "2020-07-31T18:12:14Z", "author": {"login": "mfbieber"}, "path": "src/test/java/de/bonndan/nivio/input/GroupQueryResolverTest.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package de.bonndan.nivio.input;\n+\n+import de.bonndan.nivio.input.dto.GroupDescription;\n+import de.bonndan.nivio.input.dto.LandscapeDescription;\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.Item;\n+import de.bonndan.nivio.model.LandscapeImpl;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@ExtendWith(MockitoExtension.class)\n+class GroupQueryResolverTest {\n+\n+    private GroupQueryResolver groupResolver;\n+\n+    @Mock\n+    private ProcessLog processLog;\n+\n+    @BeforeEach\n+    public void setup() {\n+        groupResolver = new GroupQueryResolver(processLog);\n+    }\n+\n+    @Test\n+    void process_doesNotContainDuplicatedItemsInGroups() {\n+        LandscapeImpl landscape = new LandscapeImpl();\n+        landscape.setProcessLog(processLog);\n+        Item item = new Item();\n+        item.setIdentifier(\"itemIdentifier\");\n+        item.setGroup(\"groupIdentifier\");\n+        landscape.setItems(Set.of(item));\n+        landscape.addGroup(new Group(\"groupIdentifier\"));\n+\n+        LandscapeDescription input = new LandscapeDescription();\n+        GroupDescription groupDescription = new GroupDescription();\n+        groupDescription.setIdentifier(\"groupIdentifier\");\n+        groupDescription.setContains(List.of(\"itemidentifier\"));\n+        input.getGroups().put(\"group\", groupDescription);\n+\n+        groupResolver.process(input, landscape);\n+\n+        assertThat(landscape.getItems().stream().count()).isEqualTo(1L);\n+        assertThat(landscape.getGroup(\"groupIdentifier\").getItems()).containsExactly(item);\n+    }\n+\n+    @Test\n+    void process_findsItemsIfQueryConditionIsNotLowercase() {\n+        LandscapeImpl landscape = new LandscapeImpl();\n+        landscape.setProcessLog(processLog);\n+        Item item = new Item();\n+        item.setIdentifier(\"itemIdentifier\");\n+        item.setGroup(\"groupIdentifier\");\n+        landscape.setItems(Set.of(item));\n+        landscape.addGroup(new Group(\"groupIdentifier\"));\n+\n+        LandscapeDescription input = new LandscapeDescription();\n+        GroupDescription groupDescription = new GroupDescription();\n+        groupDescription.setIdentifier(\"groupIdentifier\");\n+        groupDescription.setContains(List.of(\"itemIdentifier\"));\n+        input.getGroups().put(\"group\", groupDescription);\n+\n+        groupResolver.process(input, landscape);\n+\n+        assertThat(landscape.getItems().stream().count()).isEqualTo(1L);\n+        assertThat(landscape.getGroup(\"groupIdentifier\").getItems()).containsExactly(item);\n+    }\n+\n+    @Test\n+    void process_containsCommonGroupIfGroupWasEmpty() {\n+        LandscapeImpl landscape = new LandscapeImpl();\n+        landscape.setProcessLog(processLog);\n+        Item item = new Item();\n+        item.setIdentifier(\"itemIdentifier\");\n+\n+        landscape.setItems(Set.of(item));\n+\n+        LandscapeDescription input = new LandscapeDescription();\n+        GroupDescription groupDescription = new GroupDescription();\n+\n+        input.getGroups().put(\"group\", groupDescription);\n+\n+        groupResolver.process(input, landscape);\n+\n+        assertThat(landscape.getItems().stream().count()).isEqualTo(1L);\n+        assertThat(landscape.getGroups().values().size()).isEqualTo(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e968f16da7528028fe88f44266f9d7cf85eb659"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1OTM4OQ==", "bodyText": "groups can be an empty Map, so null was returned before. Is my change how it was intended to be?\nIf yes, do we need that COMMON logic inside of Group?", "url": "https://github.com/dedica-team/nivio/pull/204#discussion_r463759389", "createdAt": "2020-07-31T18:14:21Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/model/LandscapeImpl.java", "diffHunk": "@@ -162,12 +162,13 @@ public void addGroup(Group g) {\n      */\n     @NonNull\n     public Group getGroup(String group) {\n-        if (StringUtils.isEmpty(group))\n+        if (StringUtils.isEmpty(group)) {\n             group = Group.COMMON;\n+        }\n         GroupItem groupItem = groups.get(group);\n         if (groupItem == null) {\n             processLog.warn(\"Group \" + group + \" was not found, returning COMMON\");\n-            groupItem = groups.get(Group.COMMON);\n+            groupItem = new Group(Group.COMMON);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e968f16da7528028fe88f44266f9d7cf85eb659"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cf68aeec25a10ecf9deebe1e3387b6bd899a733", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/9cf68aeec25a10ecf9deebe1e3387b6bd899a733", "committedDate": "2020-08-01T06:34:52Z", "message": "[#204] removed the magic from landscape.getGroup()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ec97432838710121c70ea895ec781ac064ffdf5", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/5ec97432838710121c70ea895ec781ac064ffdf5", "committedDate": "2020-08-01T06:46:25Z", "message": "[#204] refactored group to contain a set of items"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5842174ec937545fca8a891ce1800df41c9e525", "author": {"user": {"login": "mfbieber", "name": "Michelle Fernandez Bieber"}}, "url": "https://github.com/dedica-team/nivio/commit/e5842174ec937545fca8a891ce1800df41c9e525", "committedDate": "2020-08-01T07:21:15Z", "message": "testing process with landscape from factory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90a62a3031d8a312395b62704c634abf3ffb44ef", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/90a62a3031d8a312395b62704c634abf3ffb44ef", "committedDate": "2020-08-01T08:08:13Z", "message": "[#204] improved LandscapeImpl construct to require the default group"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d39c5c0e8d981cfeabdd07fc649ce675f201dc3", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/1d39c5c0e8d981cfeabdd07fc649ce675f201dc3", "committedDate": "2020-08-01T08:47:55Z", "message": "[#204] maintaining group insertion order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3548fe39fb934d6bc517c4cc08dce15e0be55372", "author": {"user": {"login": "mfbieber", "name": "Michelle Fernandez Bieber"}}, "url": "https://github.com/dedica-team/nivio/commit/3548fe39fb934d6bc517c4cc08dce15e0be55372", "committedDate": "2020-08-02T20:32:20Z", "message": "tests for SVGGroupAreaFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20f9e0390693a38c25c5f3397e6ec6c59ada25d5", "author": {"user": {"login": "mfbieber", "name": "Michelle Fernandez Bieber"}}, "url": "https://github.com/dedica-team/nivio/commit/20f9e0390693a38c25c5f3397e6ec6c59ada25d5", "committedDate": "2020-08-02T20:38:38Z", "message": "Merge remote-tracking branch 'origin/test' into test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c17348a5367b146da0518102026d8d23f66e9427", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/c17348a5367b146da0518102026d8d23f66e9427", "committedDate": "2020-08-04T18:43:56Z", "message": "enabled test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc5ab85c0812fb77ae96320115000e19be214ab2", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/dc5ab85c0812fb77ae96320115000e19be214ab2", "committedDate": "2020-08-04T19:01:19Z", "message": "try to fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "437e6b050e968f040a057a92c59d62bfb649b543", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/437e6b050e968f040a057a92c59d62bfb649b543", "committedDate": "2020-08-05T08:30:17Z", "message": "add pm/am to date time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5baf18770443e1f1b170053b42b82a749f8617fc", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/5baf18770443e1f1b170053b42b82a749f8617fc", "committedDate": "2020-08-05T10:08:04Z", "message": "fix icon for new label naming and remove self link"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5da653cabd63e08f5465e87c37b57c4196b96eba", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/5da653cabd63e08f5465e87c37b57c4196b96eba", "committedDate": "2020-08-05T21:16:00Z", "message": "[#213] icon and color are first class Component fields again, appearance is determine independently from rendering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da76776705903f1532786e69345db4fc9610beea", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/da76776705903f1532786e69345db4fc9610beea", "committedDate": "2020-08-05T21:20:36Z", "message": "[#213] using item icon field in frontend"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83ba1a47a81252be079d10c85f0fa3daba2a0fd4", "author": {"user": {"login": "BilligsterUser", "name": "Paul Kusmin"}}, "url": "https://github.com/dedica-team/nivio/commit/83ba1a47a81252be079d10c85f0fa3daba2a0fd4", "committedDate": "2020-08-05T22:56:13Z", "message": "Update PNGRenderCacheTest.java\n\nadd test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "698b1dae406cf6d43523ddd18d6ad6b04dce59ea", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/698b1dae406cf6d43523ddd18d6ad6b04dce59ea", "committedDate": "2020-08-06T09:19:16Z", "message": "fix icons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a20d80b268c9cae9118fe8996224ab635a459ab", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/2a20d80b268c9cae9118fe8996224ab635a459ab", "committedDate": "2020-08-06T11:15:52Z", "message": "remove empty groups in dashboard"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00092b162bb0cec9f82de1f704bc4626eecfe52d", "author": {"user": {"login": "MarvinSchoening", "name": "Marvin Sch\u00f6ning"}}, "url": "https://github.com/dedica-team/nivio/commit/00092b162bb0cec9f82de1f704bc4626eecfe52d", "committedDate": "2020-08-06T11:43:47Z", "message": "Merge pull request #216 from dedica-team/test_fix_icons\n\nfix icons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "651279cb4f3c2bfa22a21f25677e77cff234f326", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/651279cb4f3c2bfa22a21f25677e77cff234f326", "committedDate": "2020-08-06T16:36:48Z", "message": "[#219] using conditional attrs on svg tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b86af9511483752114f7a578af80bf29333624f", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/2b86af9511483752114f7a578af80bf29333624f", "committedDate": "2020-08-06T16:58:35Z", "message": "simple svg hex test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5c8c20885ea90968e9ce8ea19aed7af207d6c19", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/e5c8c20885ea90968e9ce8ea19aed7af207d6c19", "committedDate": "2020-08-06T17:20:23Z", "message": "[#204] simple SVGDocument test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "355164176df13ea92d98ae1033d5679284531244", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/355164176df13ea92d98ae1033d5679284531244", "committedDate": "2020-08-06T17:31:51Z", "message": "[#204] removed color overrides for svg stroke"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ac3e6d53a56d797c00e8d211698bdfcb3f9faf2", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/6ac3e6d53a56d797c00e8d211698bdfcb3f9faf2", "committedDate": "2020-08-06T20:51:25Z", "message": "[#222] rendering optimisations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fdeeaac8bc3b09d02d5e8d4e83d4f1bd37b0bf1", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/2fdeeaac8bc3b09d02d5e8d4e83d4f1bd37b0bf1", "committedDate": "2020-08-07T19:31:02Z", "message": "[#224] fix for group names"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25d81388c8720f8c9fb0104549e30e41087f17cc", "author": {"user": {"login": "BilligsterUser", "name": "Paul Kusmin"}}, "url": "https://github.com/dedica-team/nivio/commit/25d81388c8720f8c9fb0104549e30e41087f17cc", "committedDate": "2020-08-12T04:59:53Z", "message": "Merge branch 'main' into test"}, "afterCommit": {"oid": "6ac3e6d53a56d797c00e8d211698bdfcb3f9faf2", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/6ac3e6d53a56d797c00e8d211698bdfcb3f9faf2", "committedDate": "2020-08-06T20:51:25Z", "message": "[#222] rendering optimisations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59f5f216e4c274c4de83e86e5fcf4be5a6bf5a98", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/59f5f216e4c274c4de83e86e5fcf4be5a6bf5a98", "committedDate": "2020-08-12T21:49:31Z", "message": "groups surrounded"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7beeb1325001cf99a00af2ee94391f8f8a5cadf5", "author": {"user": {"login": "BilligsterUser", "name": "Paul Kusmin"}}, "url": "https://github.com/dedica-team/nivio/commit/7beeb1325001cf99a00af2ee94391f8f8a5cadf5", "committedDate": "2020-08-13T09:58:31Z", "message": "minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9c24ec09db783dfa922d92b09d997d4c59af12b", "author": {"user": {"login": "bonndan", "name": "Daniel Pozzi"}}, "url": "https://github.com/dedica-team/nivio/commit/d9c24ec09db783dfa922d92b09d997d4c59af12b", "committedDate": "2020-08-13T10:06:07Z", "message": "Merge pull request #228 from dedica-team/test_group_outline_pr\n\nminor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89bca6e2fef4150832d60771450c43339e7ed8eb", "author": {"user": {"login": "BilligsterUser", "name": "Paul Kusmin"}}, "url": "https://github.com/dedica-team/nivio/commit/89bca6e2fef4150832d60771450c43339e7ed8eb", "committedDate": "2020-08-13T10:50:00Z", "message": "Merge pull request #225 from dedica-team/224_fix_group_names\n\n[#224] fix for group names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b11a586cd776d2292ab82ec2f4753d5dc1c1645e", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/b11a586cd776d2292ab82ec2f4753d5dc1c1645e", "committedDate": "2020-08-13T14:15:15Z", "message": "Merge branch 'test' into test_group_outline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a11023de7e7e6921ec666f2c3a53413b8542a62b", "author": {"user": {"login": "BilligsterUser", "name": "Paul Kusmin"}}, "url": "https://github.com/dedica-team/nivio/commit/a11023de7e7e6921ec666f2c3a53413b8542a62b", "committedDate": "2020-08-13T14:27:52Z", "message": "Merge pull request #227 from dedica-team/test_group_outline\n\ngroups surrounded"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3011, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}