{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2ODY3OTc0", "number": 278, "title": "[#277] refactor: separate hex code better from svg code", "bodyText": "better separation of concerns", "createdAt": "2020-09-14T20:35:34Z", "url": "https://github.com/dedica-team/nivio/pull/278", "merged": true, "mergeCommit": {"oid": "667fdecc4c61b6009640a7a283998f0cfa8d7dfc"}, "closed": true, "closedAt": "2020-09-16T07:47:28Z", "author": {"login": "bonndan"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI5TGkgH2gAyNDg2ODY3OTc0OmU1MDhlYWMwZjM1NDBlZGMxZTBiMDg2YWRlMmIzZTQ1ZTNmNDQwNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJM6v5gH2gAyNDg2ODY3OTc0OjQ2M2UyNGQzZTZlMjhmN2IxMzI5ZTBiYWNlZjZkMTkxMjZiZTI2MDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e508eac0f3540edc1e0b086ade2b3e45e3f44044", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/e508eac0f3540edc1e0b086ade2b3e45e3f44044", "committedDate": "2020-09-14T20:34:05Z", "message": "[#277] refactor: separate hex code better from svg code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NzkwODI4", "url": "https://github.com/dedica-team/nivio/pull/278#pullrequestreview-488790828", "createdAt": "2020-09-15T15:13:14Z", "commit": {"oid": "e508eac0f3540edc1e0b086ade2b3e45e3f44044"}, "state": "APPROVED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNToxMzoxNVrOHSG1VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjoxNDoyNlrOHSJiNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0ODM3Mw==", "bodyText": "Small formatting problem.", "url": "https://github.com/dedica-team/nivio/pull/278#discussion_r488748373", "createdAt": "2020-09-15T15:13:15Z", "author": {"login": "Matthimatiker"}, "path": "src/main/java/de/bonndan/nivio/output/map/hex/GroupAreaFactory.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package de.bonndan.nivio.output.map.hex;\n+\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.Item;\n+import de.bonndan.nivio.model.LandscapeItem;\n+import de.bonndan.nivio.output.map.svg.HexPath;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.*;\n+\n+/**\n+ * Collects all hexes close to group item hexes to create an area.\n+ */\n+public class GroupAreaFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(GroupAreaFactory.class);\n+\n+    /**\n+     * Builds an areas of hex tiles belonging to a group.\n+     *  @param occupied    tiles occupied by items", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e508eac0f3540edc1e0b086ade2b3e45e3f44044"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1NDIyNw==", "bodyText": "I guess the check could be extracted into a separate method, e.g. isInGroup():\n.filter(rel -> rel.getTarget().isInGroup(group.getIdentifier())", "url": "https://github.com/dedica-team/nivio/pull/278#discussion_r488754227", "createdAt": "2020-09-15T15:20:49Z", "author": {"login": "Matthimatiker"}, "path": "src/main/java/de/bonndan/nivio/output/map/hex/GroupAreaFactory.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package de.bonndan.nivio.output.map.hex;\n+\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.Item;\n+import de.bonndan.nivio.model.LandscapeItem;\n+import de.bonndan.nivio.output.map.svg.HexPath;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.*;\n+\n+/**\n+ * Collects all hexes close to group item hexes to create an area.\n+ */\n+public class GroupAreaFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(GroupAreaFactory.class);\n+\n+    /**\n+     * Builds an areas of hex tiles belonging to a group.\n+     *  @param occupied    tiles occupied by items\n+     * @param group       the group\n+     * @param vertexHexes a mapping from item to its hex\n+     * @param relationPaths   existing paths\n+     * @return\n+     */\n+    public static Set<Hex> getGroup(Set<Hex> occupied, Group group, Map<LandscapeItem, Hex> vertexHexes, List<HexPath> relationPaths) {\n+\n+        Set<Item> items = group.getItems();\n+        Set<Hex> inArea = new HashSet<>();\n+\n+        //surround each item\n+        items.forEach(item -> {\n+            Hex hex = vertexHexes.get(item);\n+            inArea.add(hex);\n+            hex.neighbours().forEach(neigh -> {\n+                if (!occupied.contains(neigh))\n+                    inArea.add(neigh);\n+            });\n+\n+            //add all \"inner\" relations (paths)\n+            relationPaths.stream()\n+                    .filter(rel -> rel.getSource().equals(item))\n+                    .filter(rel -> rel.getTarget().getGroup() != null)\n+                    .filter(rel -> rel.getTarget().getGroup().equals(group.getIdentifier()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e508eac0f3540edc1e0b086ade2b3e45e3f44044"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1NjA2Mw==", "bodyText": "I do not know how this works in detail. But is it expected to always terminate in 2 iterations?", "url": "https://github.com/dedica-team/nivio/pull/278#discussion_r488756063", "createdAt": "2020-09-15T15:23:24Z", "author": {"login": "Matthimatiker"}, "path": "src/main/java/de/bonndan/nivio/output/map/hex/GroupAreaFactory.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package de.bonndan.nivio.output.map.hex;\n+\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.Item;\n+import de.bonndan.nivio.model.LandscapeItem;\n+import de.bonndan.nivio.output.map.svg.HexPath;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.*;\n+\n+/**\n+ * Collects all hexes close to group item hexes to create an area.\n+ */\n+public class GroupAreaFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(GroupAreaFactory.class);\n+\n+    /**\n+     * Builds an areas of hex tiles belonging to a group.\n+     *  @param occupied    tiles occupied by items\n+     * @param group       the group\n+     * @param vertexHexes a mapping from item to its hex\n+     * @param relationPaths   existing paths\n+     * @return\n+     */\n+    public static Set<Hex> getGroup(Set<Hex> occupied, Group group, Map<LandscapeItem, Hex> vertexHexes, List<HexPath> relationPaths) {\n+\n+        Set<Item> items = group.getItems();\n+        Set<Hex> inArea = new HashSet<>();\n+\n+        //surround each item\n+        items.forEach(item -> {\n+            Hex hex = vertexHexes.get(item);\n+            inArea.add(hex);\n+            hex.neighbours().forEach(neigh -> {\n+                if (!occupied.contains(neigh))\n+                    inArea.add(neigh);\n+            });\n+\n+            //add all \"inner\" relations (paths)\n+            relationPaths.stream()\n+                    .filter(rel -> rel.getSource().equals(item))\n+                    .filter(rel -> rel.getTarget().getGroup() != null)\n+                    .filter(rel -> rel.getTarget().getGroup().equals(group.getIdentifier()))\n+                    .forEach(rel -> inArea.addAll(rel.getHexes()));\n+        });\n+\n+        Set<Hex> bridges = getBridges(inArea);\n+        inArea.addAll(bridges);\n+\n+        //2nd pass fills gaps\n+        bridges = getBridges(inArea);\n+        inArea.addAll(bridges);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e508eac0f3540edc1e0b086ade2b3e45e3f44044"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2MTM1Mw==", "bodyText": "What are bridges? Empty gaps between 2 Hexes?\nA brief description would help here.", "url": "https://github.com/dedica-team/nivio/pull/278#discussion_r488761353", "createdAt": "2020-09-15T15:30:19Z", "author": {"login": "Matthimatiker"}, "path": "src/main/java/de/bonndan/nivio/output/map/hex/GroupAreaFactory.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package de.bonndan.nivio.output.map.hex;\n+\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.Item;\n+import de.bonndan.nivio.model.LandscapeItem;\n+import de.bonndan.nivio.output.map.svg.HexPath;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.*;\n+\n+/**\n+ * Collects all hexes close to group item hexes to create an area.\n+ */\n+public class GroupAreaFactory {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(GroupAreaFactory.class);\n+\n+    /**\n+     * Builds an areas of hex tiles belonging to a group.\n+     *  @param occupied    tiles occupied by items\n+     * @param group       the group\n+     * @param vertexHexes a mapping from item to its hex\n+     * @param relationPaths   existing paths\n+     * @return\n+     */\n+    public static Set<Hex> getGroup(Set<Hex> occupied, Group group, Map<LandscapeItem, Hex> vertexHexes, List<HexPath> relationPaths) {\n+\n+        Set<Item> items = group.getItems();\n+        Set<Hex> inArea = new HashSet<>();\n+\n+        //surround each item\n+        items.forEach(item -> {\n+            Hex hex = vertexHexes.get(item);\n+            inArea.add(hex);\n+            hex.neighbours().forEach(neigh -> {\n+                if (!occupied.contains(neigh))\n+                    inArea.add(neigh);\n+            });\n+\n+            //add all \"inner\" relations (paths)\n+            relationPaths.stream()\n+                    .filter(rel -> rel.getSource().equals(item))\n+                    .filter(rel -> rel.getTarget().getGroup() != null)\n+                    .filter(rel -> rel.getTarget().getGroup().equals(group.getIdentifier()))\n+                    .forEach(rel -> inArea.addAll(rel.getHexes()));\n+        });\n+\n+        Set<Hex> bridges = getBridges(inArea);\n+        inArea.addAll(bridges);\n+\n+        //2nd pass fills gaps\n+        bridges = getBridges(inArea);\n+        inArea.addAll(bridges);\n+\n+        return inArea;\n+    }\n+\n+    static Set<Hex> getBridges(Set<Hex> inArea) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e508eac0f3540edc1e0b086ade2b3e45e3f44044"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2MjM3Mw==", "bodyText": "I guess this is nullable?", "url": "https://github.com/dedica-team/nivio/pull/278#discussion_r488762373", "createdAt": "2020-09-15T15:31:44Z", "author": {"login": "Matthimatiker"}, "path": "src/main/java/de/bonndan/nivio/output/map/hex/Hex.java", "diffHunk": "@@ -39,6 +41,7 @@\n     public final int r;\n     public final int s;\n     public String id;\n+    public Item item;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e508eac0f3540edc1e0b086ade2b3e45e3f44044"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2MzMyNw==", "bodyText": "Naming is so important...", "url": "https://github.com/dedica-team/nivio/pull/278#discussion_r488763327", "createdAt": "2020-09-15T15:33:01Z", "author": {"login": "Matthimatiker"}, "path": "src/main/java/de/bonndan/nivio/output/map/hex/Hex.java", "diffHunk": "@@ -39,6 +41,7 @@\n     public final int r;\n     public final int s;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e508eac0f3540edc1e0b086ade2b3e45e3f44044"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2Mzg2Ng==", "bodyText": "This could also be final.", "url": "https://github.com/dedica-team/nivio/pull/278#discussion_r488763866", "createdAt": "2020-09-15T15:33:47Z", "author": {"login": "Matthimatiker"}, "path": "src/main/java/de/bonndan/nivio/output/map/hex/HexMap.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package de.bonndan.nivio.output.map.hex;\n+\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.Item;\n+import de.bonndan.nivio.model.LandscapeItem;\n+import de.bonndan.nivio.output.layout.LayoutedComponent;\n+import de.bonndan.nivio.output.map.svg.HexPath;\n+import org.springframework.lang.Nullable;\n+\n+import java.util.*;\n+\n+/**\n+ * Representation of a hex map.\n+ *\n+ *\n+ *\n+ */\n+public class HexMap {\n+\n+    private final Set<Hex> occupied = new HashSet<>();\n+    private final boolean debug;\n+    private final Map<LandscapeItem, Hex> vertexHexes = new HashMap<>();\n+    private final PathFinder pathFinder;\n+    private List<HexPath> paths = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e508eac0f3540edc1e0b086ade2b3e45e3f44044"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2NTQ3Mg==", "bodyText": "Why is this obsolete? Can it be removed?", "url": "https://github.com/dedica-team/nivio/pull/278#discussion_r488765472", "createdAt": "2020-09-15T15:36:08Z", "author": {"login": "Matthimatiker"}, "path": "src/main/java/de/bonndan/nivio/output/map/hex/HexMap.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package de.bonndan.nivio.output.map.hex;\n+\n+import de.bonndan.nivio.model.Group;\n+import de.bonndan.nivio.model.Item;\n+import de.bonndan.nivio.model.LandscapeItem;\n+import de.bonndan.nivio.output.layout.LayoutedComponent;\n+import de.bonndan.nivio.output.map.svg.HexPath;\n+import org.springframework.lang.Nullable;\n+\n+import java.util.*;\n+\n+/**\n+ * Representation of a hex map.\n+ *\n+ *\n+ *\n+ */\n+public class HexMap {\n+\n+    private final Set<Hex> occupied = new HashSet<>();\n+    private final boolean debug;\n+    private final Map<LandscapeItem, Hex> vertexHexes = new HashMap<>();\n+    private final PathFinder pathFinder;\n+    private List<HexPath> paths = new ArrayList<>();\n+\n+    public HexMap(boolean debug) {\n+        this.debug = debug;\n+        // find and render relations\n+        pathFinder = new PathFinder(occupied);\n+        pathFinder.debug = this.debug;\n+    }\n+\n+    public void add(LayoutedComponent layoutedItem) {\n+        Hex hex = null;\n+        int i = 0;\n+        while (hex == null || occupied.contains(hex)) {\n+            hex = Hex.of(Math.round(layoutedItem.getX()) - i, Math.round(layoutedItem.getY()) - i);\n+            i++;\n+        }\n+\n+        Item item = (Item) layoutedItem.getComponent();\n+        hex.id = item.getFullyQualifiedIdentifier().jsonValue();\n+        hex.item = item;\n+        vertexHexes.put(item, hex); //this is obsolete", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e508eac0f3540edc1e0b086ade2b3e45e3f44044"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2NjY0NA==", "bodyText": "What is collect? The path? The hexes between startHex and destHex?", "url": "https://github.com/dedica-team/nivio/pull/278#discussion_r488766644", "createdAt": "2020-09-15T15:37:40Z", "author": {"login": "Matthimatiker"}, "path": "src/main/java/de/bonndan/nivio/output/map/hex/PathFinder.java", "diffHunk": "@@ -187,7 +187,7 @@ public HexPath getPath(Hex startHex, Hex destHex) {\n             return null;\n \n         List<Hex> collect = path.stream().map(tile -> tile.hex).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e508eac0f3540edc1e0b086ade2b3e45e3f44044"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc5MjYzMA==", "bodyText": "This pushes domain objects down into the view level.\nAt least that looks like the wrong abstraction level for Items.", "url": "https://github.com/dedica-team/nivio/pull/278#discussion_r488792630", "createdAt": "2020-09-15T16:14:26Z", "author": {"login": "Matthimatiker"}, "path": "src/main/java/de/bonndan/nivio/output/map/svg/HexPath.java", "diffHunk": "@@ -13,13 +14,19 @@\n  */\n public class HexPath {\n \n+    private final Item source;\n+    private final Item target;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e508eac0f3540edc1e0b086ade2b3e45e3f44044"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64d1a0707e87ebaada8c22ad15edaaae226806ad", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/64d1a0707e87ebaada8c22ad15edaaae226806ad", "committedDate": "2020-09-15T17:22:00Z", "message": "[#277] added comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95f0f655f473a46efe6639533a43723007e8c54f", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/95f0f655f473a46efe6639533a43723007e8c54f", "committedDate": "2020-09-15T19:11:49Z", "message": "[#277] added comments, different solution for in-group paths being added to group area"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf4912b7d4bbb308ec678661943c927c6f21f883", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/cf4912b7d4bbb308ec678661943c927c6f21f883", "committedDate": "2020-09-15T19:12:59Z", "message": "[#277] npe fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1b223a7f6179154bb8170af9afa67ffec0f4a33", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/a1b223a7f6179154bb8170af9afa67ffec0f4a33", "committedDate": "2020-09-15T19:15:02Z", "message": "[#277] added comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2559b5170fa42f8d2ec52b9a2353b5024062e7e9", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/2559b5170fa42f8d2ec52b9a2353b5024062e7e9", "committedDate": "2020-09-15T19:16:21Z", "message": "[#277] removed Hex.item field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "463e24d3e6e28f7b1329e0bacef6d19126be2609", "author": {"user": null}, "url": "https://github.com/dedica-team/nivio/commit/463e24d3e6e28f7b1329e0bacef6d19126be2609", "committedDate": "2020-09-15T19:25:35Z", "message": "[#277] hexmap returns optional path"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1888, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}