{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNDE4MzE4", "number": 329, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxMTo0MToxMVrOE0CiEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjo1MTozM1rOFApxmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDAyODk4OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/bonndan/nivio/output/map/RenderCacheTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxMTo0MToxMlrOHrm6kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxMjowMzowNVrOHrnBZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ4ODQwMA==", "bodyText": "If we work towards immutable objects, the identifier must not be set from the outside. Did I understand the Test as it was before and do you think that it is meaningful now too?", "url": "https://github.com/dedica-team/nivio/pull/329#discussion_r515488400", "createdAt": "2020-10-31T11:41:12Z", "author": {"login": "mfbieber"}, "path": "src/test/java/de/bonndan/nivio/output/map/RenderCacheTest.java", "diffHunk": "@@ -43,41 +43,48 @@ public void setup() {\n \n     @Test\n     void toPNGCached() {\n-        Landscape landscape = getLandscape(\"test\");\n+        Landscape landscape = getLandscape(\"test\", \"testLandscape\");\n         String first = renderCache.getSVG(landscape, false);\n         String second = renderCache.getSVG(landscape, false);\n \n-        verify(stylesheetFactory, times(1)).getMapStylesheet(any(), any());\n+        verify(stylesheetFactory, times(1))\n+                .getMapStylesheet(any(), any());\n     }\n \n     @Test\n     void cachesBasedOnIdentifier() {\n-        Landscape one = getLandscape(\"test\");\n-        String first = renderCache.getSVG(getLandscape(\"test\"), false);\n-        Landscape two = getLandscape(\"test\");\n+        Landscape one = getLandscape(\"first\", \"one\");\n+        String first = renderCache.getSVG(\n+                getLandscape(\"first\", \"testLandscape\"),\n+                false\n+        );\n+        Landscape two = getLandscape(\"second\", \"two\");\n         two.setProcessLog(one.getLog()); //sync last update\n-        two.setIdentifier(\"second\");\n         String second = renderCache.getSVG(two, false);\n \n-        verify(stylesheetFactory, times(2)).getMapStylesheet(any(), any());\n+        verify(stylesheetFactory, times(2))\n+                .getMapStylesheet(any(), any());\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e97b26b35060eceac1225b8a909cadcfcdb8b37"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5MDA4OA==", "bodyText": "You're right. It makes no sense changing the identifier.", "url": "https://github.com/dedica-team/nivio/pull/329#discussion_r515490088", "createdAt": "2020-10-31T12:02:09Z", "author": {"login": "bonndan"}, "path": "src/test/java/de/bonndan/nivio/output/map/RenderCacheTest.java", "diffHunk": "@@ -43,41 +43,48 @@ public void setup() {\n \n     @Test\n     void toPNGCached() {\n-        Landscape landscape = getLandscape(\"test\");\n+        Landscape landscape = getLandscape(\"test\", \"testLandscape\");\n         String first = renderCache.getSVG(landscape, false);\n         String second = renderCache.getSVG(landscape, false);\n \n-        verify(stylesheetFactory, times(1)).getMapStylesheet(any(), any());\n+        verify(stylesheetFactory, times(1))\n+                .getMapStylesheet(any(), any());\n     }\n \n     @Test\n     void cachesBasedOnIdentifier() {\n-        Landscape one = getLandscape(\"test\");\n-        String first = renderCache.getSVG(getLandscape(\"test\"), false);\n-        Landscape two = getLandscape(\"test\");\n+        Landscape one = getLandscape(\"first\", \"one\");\n+        String first = renderCache.getSVG(\n+                getLandscape(\"first\", \"testLandscape\"),\n+                false\n+        );\n+        Landscape two = getLandscape(\"second\", \"two\");\n         two.setProcessLog(one.getLog()); //sync last update\n-        two.setIdentifier(\"second\");\n         String second = renderCache.getSVG(two, false);\n \n-        verify(stylesheetFactory, times(2)).getMapStylesheet(any(), any());\n+        verify(stylesheetFactory, times(2))\n+                .getMapStylesheet(any(), any());\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ4ODQwMA=="}, "originalCommit": {"oid": "6e97b26b35060eceac1225b8a909cadcfcdb8b37"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5MDExOQ==", "bodyText": "The test is still valid.", "url": "https://github.com/dedica-team/nivio/pull/329#discussion_r515490119", "createdAt": "2020-10-31T12:02:29Z", "author": {"login": "bonndan"}, "path": "src/test/java/de/bonndan/nivio/output/map/RenderCacheTest.java", "diffHunk": "@@ -43,41 +43,48 @@ public void setup() {\n \n     @Test\n     void toPNGCached() {\n-        Landscape landscape = getLandscape(\"test\");\n+        Landscape landscape = getLandscape(\"test\", \"testLandscape\");\n         String first = renderCache.getSVG(landscape, false);\n         String second = renderCache.getSVG(landscape, false);\n \n-        verify(stylesheetFactory, times(1)).getMapStylesheet(any(), any());\n+        verify(stylesheetFactory, times(1))\n+                .getMapStylesheet(any(), any());\n     }\n \n     @Test\n     void cachesBasedOnIdentifier() {\n-        Landscape one = getLandscape(\"test\");\n-        String first = renderCache.getSVG(getLandscape(\"test\"), false);\n-        Landscape two = getLandscape(\"test\");\n+        Landscape one = getLandscape(\"first\", \"one\");\n+        String first = renderCache.getSVG(\n+                getLandscape(\"first\", \"testLandscape\"),\n+                false\n+        );\n+        Landscape two = getLandscape(\"second\", \"two\");\n         two.setProcessLog(one.getLog()); //sync last update\n-        two.setIdentifier(\"second\");\n         String second = renderCache.getSVG(two, false);\n \n-        verify(stylesheetFactory, times(2)).getMapStylesheet(any(), any());\n+        verify(stylesheetFactory, times(2))\n+                .getMapStylesheet(any(), any());\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ4ODQwMA=="}, "originalCommit": {"oid": "6e97b26b35060eceac1225b8a909cadcfcdb8b37"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5MDE0OA==", "bodyText": "Thanks :)", "url": "https://github.com/dedica-team/nivio/pull/329#discussion_r515490148", "createdAt": "2020-10-31T12:03:05Z", "author": {"login": "mfbieber"}, "path": "src/test/java/de/bonndan/nivio/output/map/RenderCacheTest.java", "diffHunk": "@@ -43,41 +43,48 @@ public void setup() {\n \n     @Test\n     void toPNGCached() {\n-        Landscape landscape = getLandscape(\"test\");\n+        Landscape landscape = getLandscape(\"test\", \"testLandscape\");\n         String first = renderCache.getSVG(landscape, false);\n         String second = renderCache.getSVG(landscape, false);\n \n-        verify(stylesheetFactory, times(1)).getMapStylesheet(any(), any());\n+        verify(stylesheetFactory, times(1))\n+                .getMapStylesheet(any(), any());\n     }\n \n     @Test\n     void cachesBasedOnIdentifier() {\n-        Landscape one = getLandscape(\"test\");\n-        String first = renderCache.getSVG(getLandscape(\"test\"), false);\n-        Landscape two = getLandscape(\"test\");\n+        Landscape one = getLandscape(\"first\", \"one\");\n+        String first = renderCache.getSVG(\n+                getLandscape(\"first\", \"testLandscape\"),\n+                false\n+        );\n+        Landscape two = getLandscape(\"second\", \"two\");\n         two.setProcessLog(one.getLog()); //sync last update\n-        two.setIdentifier(\"second\");\n         String second = renderCache.getSVG(two, false);\n \n-        verify(stylesheetFactory, times(2)).getMapStylesheet(any(), any());\n+        verify(stylesheetFactory, times(2))\n+                .getMapStylesheet(any(), any());\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ4ODQwMA=="}, "originalCommit": {"oid": "6e97b26b35060eceac1225b8a909cadcfcdb8b37"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDA2NTYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/bonndan/nivio/api/ApiController.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxMjozNDowNFrOHrnLyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQxMzoyNDo1M1rOII7vCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5MjgxMA==", "bodyText": "Is this meaningful?\nThis is for @RequestMapping(path = \"/landscape/{identifier}/services\", method = RequestMethod.POST), which I think triggers the indexing of a landscape provided by the POST body? Is this correct? Or are just Items added?", "url": "https://github.com/dedica-team/nivio/pull/329#discussion_r515492810", "createdAt": "2020-10-31T12:34:04Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/api/ApiController.java", "diffHunk": "@@ -133,8 +133,7 @@ public ProcessLog indexLandscape(\n             @RequestHeader(name = \"format\") String format,\n             @RequestBody String body\n     ) {\n-        LandscapeDescription dto = new LandscapeDescription();\n-        dto.setIdentifier(identifier);\n+        LandscapeDescription dto = new LandscapeDescription(identifier, \"\", null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6751d903c58110c98d817e01fb2e30a2a00d1d72"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5OTA5NQ==", "bodyText": "This is for adding items via POST body. It should also trigger reindexing. While you're at it, you might consider renaming the path to \"/items\", because \"/services\" is not used as term anymore and narrows the usage too much (although this is not scope of the ticket).", "url": "https://github.com/dedica-team/nivio/pull/329#discussion_r515499095", "createdAt": "2020-10-31T13:49:22Z", "author": {"login": "bonndan"}, "path": "src/main/java/de/bonndan/nivio/api/ApiController.java", "diffHunk": "@@ -133,8 +133,7 @@ public ProcessLog indexLandscape(\n             @RequestHeader(name = \"format\") String format,\n             @RequestBody String body\n     ) {\n-        LandscapeDescription dto = new LandscapeDescription();\n-        dto.setIdentifier(identifier);\n+        LandscapeDescription dto = new LandscapeDescription(identifier, \"\", null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5MjgxMA=="}, "originalCommit": {"oid": "6751d903c58110c98d817e01fb2e30a2a00d1d72"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU2ODQyOQ==", "bodyText": "That is fine, I renamed the endpoint.\nSo it is totally ok to have a LandscapeDescription with an identifier, but without a human readble name - correct?", "url": "https://github.com/dedica-team/nivio/pull/329#discussion_r535568429", "createdAt": "2020-12-03T20:25:20Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/api/ApiController.java", "diffHunk": "@@ -133,8 +133,7 @@ public ProcessLog indexLandscape(\n             @RequestHeader(name = \"format\") String format,\n             @RequestBody String body\n     ) {\n-        LandscapeDescription dto = new LandscapeDescription();\n-        dto.setIdentifier(identifier);\n+        LandscapeDescription dto = new LandscapeDescription(identifier, \"\", null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5MjgxMA=="}, "originalCommit": {"oid": "6751d903c58110c98d817e01fb2e30a2a00d1d72"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjIzODIxNw==", "bodyText": "Yes.", "url": "https://github.com/dedica-team/nivio/pull/329#discussion_r546238217", "createdAt": "2020-12-19T13:24:53Z", "author": {"login": "bonndan"}, "path": "src/main/java/de/bonndan/nivio/api/ApiController.java", "diffHunk": "@@ -133,8 +133,7 @@ public ProcessLog indexLandscape(\n             @RequestHeader(name = \"format\") String format,\n             @RequestBody String body\n     ) {\n-        LandscapeDescription dto = new LandscapeDescription();\n-        dto.setIdentifier(identifier);\n+        LandscapeDescription dto = new LandscapeDescription(identifier, \"\", null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5MjgxMA=="}, "originalCommit": {"oid": "6751d903c58110c98d817e01fb2e30a2a00d1d72"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjI4NzYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/bonndan/nivio/assessment/StatusValue.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjo1MTozM1rOH_DNMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozODoxOFrOH_LATw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3NDg2NQ==", "bodyText": "StringUtils.isEmpty also handles null. This is why I like it.", "url": "https://github.com/dedica-team/nivio/pull/329#discussion_r535874865", "createdAt": "2020-12-04T06:51:33Z", "author": {"login": "bonndan"}, "path": "src/main/java/de/bonndan/nivio/assessment/StatusValue.java", "diffHunk": "@@ -54,23 +63,26 @@\n     /**\n      * Creates a summary status value.\n      *\n-     * @param field composed field name\n-     * @param max   max/highest status value\n+     * @param fieldName composed field name\n+     * @param maxValue   max/highest status value\n      * @return summary\n      */\n-    public static StatusValue summary(@NonNull String field, @NonNull StatusValue max) {\n-\n-        if (StringUtils.isEmpty(field)) {\n-            throw new IllegalArgumentException(\"Status value has no field\");\n+    @NonNull\n+    public static StatusValue summary(@NonNull String fieldName, @NonNull StatusValue maxValue) {\n+        if (StringUtils.isEmpty(fieldName)) {\n+            throw new IllegalArgumentException(\"Status value has no field name.\");\n         }\n-        return new StatusValue(field, max.getStatus(), max.getMessage(), max.getField());\n+        if (StringUtils.isEmpty(maxValue)) {\n+            throw new IllegalArgumentException(\"Status value has no max status value.\");\n+        }\n+        return new StatusValue(fieldName, maxValue.getStatus(), maxValue.getMessage(), maxValue.getField());\n     }\n \n     public StatusValue(@NonNull String field, @Nullable Status status, @Nullable String message) {\n         if (StringUtils.isEmpty(field)) {\n             throw new IllegalArgumentException(\"Status value has no field\");\n         }\n-        this.field = field;\n+        this.field = Objects.requireNonNull(field);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4942058a21e787910e59b34a30f0fac30b2f6678"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAwMjYzOQ==", "bodyText": "Yes, I know that and use it too for null and empty checks. I don't know why I did that \ud83d\ude04", "url": "https://github.com/dedica-team/nivio/pull/329#discussion_r536002639", "createdAt": "2020-12-04T10:38:18Z", "author": {"login": "mfbieber"}, "path": "src/main/java/de/bonndan/nivio/assessment/StatusValue.java", "diffHunk": "@@ -54,23 +63,26 @@\n     /**\n      * Creates a summary status value.\n      *\n-     * @param field composed field name\n-     * @param max   max/highest status value\n+     * @param fieldName composed field name\n+     * @param maxValue   max/highest status value\n      * @return summary\n      */\n-    public static StatusValue summary(@NonNull String field, @NonNull StatusValue max) {\n-\n-        if (StringUtils.isEmpty(field)) {\n-            throw new IllegalArgumentException(\"Status value has no field\");\n+    @NonNull\n+    public static StatusValue summary(@NonNull String fieldName, @NonNull StatusValue maxValue) {\n+        if (StringUtils.isEmpty(fieldName)) {\n+            throw new IllegalArgumentException(\"Status value has no field name.\");\n         }\n-        return new StatusValue(field, max.getStatus(), max.getMessage(), max.getField());\n+        if (StringUtils.isEmpty(maxValue)) {\n+            throw new IllegalArgumentException(\"Status value has no max status value.\");\n+        }\n+        return new StatusValue(fieldName, maxValue.getStatus(), maxValue.getMessage(), maxValue.getField());\n     }\n \n     public StatusValue(@NonNull String field, @Nullable Status status, @Nullable String message) {\n         if (StringUtils.isEmpty(field)) {\n             throw new IllegalArgumentException(\"Status value has no field\");\n         }\n-        this.field = field;\n+        this.field = Objects.requireNonNull(field);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3NDg2NQ=="}, "originalCommit": {"oid": "4942058a21e787910e59b34a30f0fac30b2f6678"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4050, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}