{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDI2MDQ3", "number": 1561, "title": "Map dynamic registry manager", "bodyText": "Signed-off-by: liach liach@users.noreply.github.com", "createdAt": "2020-07-08T18:58:00Z", "url": "https://github.com/FabricMC/yarn/pull/1561", "merged": true, "mergeCommit": {"oid": "cf5427b0d366e7d6d9f950015244218b5f00d03d"}, "closed": true, "closedAt": "2020-07-14T17:31:24Z", "author": {"login": "liach"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcy_M6SgFqTQ0NTA0NzAwMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc03iwQgFqTQ0ODIwMzc4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MDQ3MDAz", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-445047003", "createdAt": "2020-07-08T18:59:16Z", "commit": {"oid": "1d865cf691b5c634f08c7150e1487434dda400fa"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo1OToxNlrOGu1U6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOTowMDoxMFrOGu1W5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc2MTM4NA==", "bodyText": "Does the other unsafe method throw or return null?", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r451761384", "createdAt": "2020-07-08T18:59:16Z", "author": {"login": "i509VCB"}, "path": "mappings/net/minecraft/util/registry/RegistryTracker.mapping", "diffHunk": "@@ -0,0 +1,47 @@\n+CLASS net/minecraft/class_5455 net/minecraft/util/registry/RegistryTracker\n+\tFIELD field_25918 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tFIELD field_25919 INFOS Ljava/util/Map;\n+\tMETHOD method_30518 getDimensionTypeRegistry ()Lnet/minecraft/class_2378;\n+\tMETHOD method_30519 load (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5455$class_5457;\n+\t\tARG 0 resourceManager\n+\tMETHOD method_30520 register (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/class_5321;Lcom/mojang/serialization/MapCodec;Z)Lcom/google/common/collect/ImmutableMap$Builder;\n+\t\tARG 0 infosBuilder\n+\t\tARG 1 registryRef\n+\t\tARG 2 elementCodec\n+\t\tARG 3 synced\n+\tMETHOD method_30524 addBuiltinEntries (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_2378;)V\n+\t\tARG 0 tracker\n+\t\tARG 1 registry\n+\tMETHOD method_30525 setupBuiltin (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5321;)V\n+\t\tARG 0 tracker\n+\t\tARG 1 registryRef\n+\tMETHOD method_30526 load (Lnet/minecraft/class_5382;Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5455$class_5456;)V\n+\t\tARG 0 ops\n+\t\tARG 1 tracker\n+\tMETHOD method_30527 getRegistrySafely (Lnet/minecraft/class_5321;)Ljava/util/Optional;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d865cf691b5c634f08c7150e1487434dda400fa"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc2MTU5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tFIELD field_25919 INFOS Ljava/util/Map;\n          \n          \n            \n            \tFIELD field_25919 INFORMATION Ljava/util/Map;", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r451761594", "createdAt": "2020-07-08T18:59:37Z", "author": {"login": "i509VCB"}, "path": "mappings/net/minecraft/util/registry/RegistryTracker.mapping", "diffHunk": "@@ -0,0 +1,47 @@\n+CLASS net/minecraft/class_5455 net/minecraft/util/registry/RegistryTracker\n+\tFIELD field_25918 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tFIELD field_25919 INFOS Ljava/util/Map;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d865cf691b5c634f08c7150e1487434dda400fa"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc2MTg5NA==", "bodyText": "what does this load and the other load method do differently?", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r451761894", "createdAt": "2020-07-08T19:00:10Z", "author": {"login": "i509VCB"}, "path": "mappings/net/minecraft/util/registry/RegistryTracker.mapping", "diffHunk": "@@ -0,0 +1,47 @@\n+CLASS net/minecraft/class_5455 net/minecraft/util/registry/RegistryTracker\n+\tFIELD field_25918 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tFIELD field_25919 INFOS Ljava/util/Map;\n+\tMETHOD method_30518 getDimensionTypeRegistry ()Lnet/minecraft/class_2378;\n+\tMETHOD method_30519 load (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5455$class_5457;\n+\t\tARG 0 resourceManager\n+\tMETHOD method_30520 register (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/class_5321;Lcom/mojang/serialization/MapCodec;Z)Lcom/google/common/collect/ImmutableMap$Builder;\n+\t\tARG 0 infosBuilder\n+\t\tARG 1 registryRef\n+\t\tARG 2 elementCodec\n+\t\tARG 3 synced\n+\tMETHOD method_30524 addBuiltinEntries (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_2378;)V\n+\t\tARG 0 tracker\n+\t\tARG 1 registry\n+\tMETHOD method_30525 setupBuiltin (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5321;)V\n+\t\tARG 0 tracker\n+\t\tARG 1 registryRef\n+\tMETHOD method_30526 load (Lnet/minecraft/class_5382;Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5455$class_5456;)V", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d865cf691b5c634f08c7150e1487434dda400fa"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MDYyMDAw", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-445062000", "createdAt": "2020-07-08T19:21:50Z", "commit": {"oid": "1d865cf691b5c634f08c7150e1487434dda400fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOToyMTo1MFrOGu2DSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxOToyMTo1MFrOGu2DSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc3MzI1Nw==", "bodyText": "Maybe something like Config? (assuming that all the fields are final here, if not maybe State?)", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r451773257", "createdAt": "2020-07-08T19:21:50Z", "author": {"login": "Gegy"}, "path": "mappings/net/minecraft/util/registry/RegistryTracker.mapping", "diffHunk": "@@ -0,0 +1,47 @@\n+CLASS net/minecraft/class_5455 net/minecraft/util/registry/RegistryTracker\n+\tFIELD field_25918 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tFIELD field_25919 INFOS Ljava/util/Map;\n+\tMETHOD method_30518 getDimensionTypeRegistry ()Lnet/minecraft/class_2378;\n+\tMETHOD method_30519 load (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5455$class_5457;\n+\t\tARG 0 resourceManager\n+\tMETHOD method_30520 register (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/class_5321;Lcom/mojang/serialization/MapCodec;Z)Lcom/google/common/collect/ImmutableMap$Builder;\n+\t\tARG 0 infosBuilder\n+\t\tARG 1 registryRef\n+\t\tARG 2 elementCodec\n+\t\tARG 3 synced\n+\tMETHOD method_30524 addBuiltinEntries (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_2378;)V\n+\t\tARG 0 tracker\n+\t\tARG 1 registry\n+\tMETHOD method_30525 setupBuiltin (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5321;)V\n+\t\tARG 0 tracker\n+\t\tARG 1 registryRef\n+\tMETHOD method_30526 load (Lnet/minecraft/class_5382;Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5455$class_5456;)V\n+\t\tARG 0 ops\n+\t\tARG 1 tracker\n+\tMETHOD method_30527 getRegistrySafely (Lnet/minecraft/class_5321;)Ljava/util/Optional;\n+\t\tARG 1 registryRef\n+\tMETHOD method_30528 create ()Lnet/minecraft/class_5455$class_5457;\n+\tMETHOD method_30530 getRegistry (Lnet/minecraft/class_5321;)Lnet/minecraft/class_2385;\n+\t\tARG 1 registryRef\n+\tCLASS class_5456 Info", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d865cf691b5c634f08c7150e1487434dda400fa"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2eed6c85217fc2b855a0f1a685186e2e56458b94", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/yarn/commit/2eed6c85217fc2b855a0f1a685186e2e56458b94", "committedDate": "2020-07-10T12:33:23Z", "message": "Map registry tracker again :sweat:\n\nSigned-off-by: liach <liach@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e3960261f6127cdd8bc04f854b2103a35fa6d91", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/yarn/commit/7e3960261f6127cdd8bc04f854b2103a35fa6d91", "committedDate": "2020-07-10T12:50:04Z", "message": "dynamic registry manager\n\nSigned-off-by: liach <liach@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1d865cf691b5c634f08c7150e1487434dda400fa", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/yarn/commit/1d865cf691b5c634f08c7150e1487434dda400fa", "committedDate": "2020-07-08T18:49:09Z", "message": "Map registry tracker again :sweat:\n\nSigned-off-by: liach <liach@users.noreply.github.com>"}, "afterCommit": {"oid": "7e3960261f6127cdd8bc04f854b2103a35fa6d91", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/yarn/commit/7e3960261f6127cdd8bc04f854b2103a35fa6d91", "committedDate": "2020-07-10T12:50:04Z", "message": "dynamic registry manager\n\nSigned-off-by: liach <liach@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NzA1MTAw", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-446705100", "createdAt": "2020-07-10T21:15:42Z", "commit": {"oid": "7e3960261f6127cdd8bc04f854b2103a35fa6d91"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMToxNTo0MlrOGwF2Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMToxNTo0MlrOGwF2Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA4MDY2Ng==", "bodyText": "This one is a little bit confusing, it sounds like you're getting a dimension type rather than a registry of them.", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r453080666", "createdAt": "2020-07-10T21:15:42Z", "author": {"login": "Earthcomputer"}, "path": "mappings/net/minecraft/util/registry/DynamicRegistryManager.mapping", "diffHunk": "@@ -0,0 +1,48 @@\n+CLASS net/minecraft/class_5455 net/minecraft/util/registry/DynamicRegistryManager\n+\tFIELD field_25918 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tFIELD field_25919 INFOS Ljava/util/Map;\n+\tMETHOD method_30518 getDimensionType ()Lnet/minecraft/class_2378;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e3960261f6127cdd8bc04f854b2103a35fa6d91"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NzM0NDY0", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-446734464", "createdAt": "2020-07-10T22:33:41Z", "commit": {"oid": "7e3960261f6127cdd8bc04f854b2103a35fa6d91"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjozMzo0MVrOGwHayw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjozMzo0MVrOGwHayw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwNjM3OQ==", "bodyText": "Who do I have to mug to get a class javadoc over here?\nI have a hunch what this is for, but not really a goooood idea.", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r453106379", "createdAt": "2020-07-10T22:33:41Z", "author": {"login": "shartte"}, "path": "mappings/net/minecraft/util/registry/DynamicRegistryManager.mapping", "diffHunk": "@@ -0,0 +1,48 @@\n+CLASS net/minecraft/class_5455 net/minecraft/util/registry/DynamicRegistryManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e3960261f6127cdd8bc04f854b2103a35fa6d91"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NzM2NDE0", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-446736414", "createdAt": "2020-07-10T22:40:55Z", "commit": {"oid": "7e3960261f6127cdd8bc04f854b2103a35fa6d91"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjo0MDo1NlrOGwHhrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjo0MDo1NlrOGwHhrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwODE0MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tMETHOD method_30518 getDimensionType ()Lnet/minecraft/class_2378;\n          \n          \n            \n            \tMETHOD method_30518 getDimensionTypes ()Lnet/minecraft/class_2378;", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r453108141", "createdAt": "2020-07-10T22:40:56Z", "author": {"login": "shartte"}, "path": "mappings/net/minecraft/util/registry/DynamicRegistryManager.mapping", "diffHunk": "@@ -0,0 +1,48 @@\n+CLASS net/minecraft/class_5455 net/minecraft/util/registry/DynamicRegistryManager\n+\tFIELD field_25918 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tFIELD field_25919 INFOS Ljava/util/Map;\n+\tMETHOD method_30518 getDimensionType ()Lnet/minecraft/class_2378;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e3960261f6127cdd8bc04f854b2103a35fa6d91"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "949efe588e06ecdf8c52e6f0f43db929751101e5", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/yarn/commit/949efe588e06ecdf8c52e6f0f43db929751101e5", "committedDate": "2020-07-12T18:07:04Z", "message": "Update mappings/net/minecraft/util/registry/DynamicRegistryManager.mapping\n\nCo-authored-by: shartte <shartte@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10589be7011dd9d1823479359c0d64e79aef85f1", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/yarn/commit/10589be7011dd9d1823479359c0d64e79aef85f1", "committedDate": "2020-07-12T18:35:10Z", "message": "docs docs docs\n\nSigned-off-by: liach <liach@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTAwODIw", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-446900820", "createdAt": "2020-07-12T18:38:43Z", "commit": {"oid": "10589be7011dd9d1823479359c0d64e79aef85f1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTA1MDc2", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-446905076", "createdAt": "2020-07-12T19:48:45Z", "commit": {"oid": "10589be7011dd9d1823479359c0d64e79aef85f1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxOTo0ODo0NVrOGwWqHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMDowOTozM1rOGwWyDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1NjA2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tCOMMENT <p>The {@link net.minecraft.util.registry.DynamicRegistryManager.Impl}\n          \n          \n            \n            \tCOMMENT <p>The {@link DynamicRegistryManager.Impl}", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r453356062", "createdAt": "2020-07-12T19:48:45Z", "author": {"login": "Earthcomputer"}, "path": "mappings/net/minecraft/util/registry/DynamicRegistryManager.mapping", "diffHunk": "@@ -1,30 +1,59 @@\n CLASS net/minecraft/class_5455 net/minecraft/util/registry/DynamicRegistryManager\n+\tCOMMENT A manager of dynamic registries. It allows users to access non-hardcoded\n+\tCOMMENT registries reliably.\n+\tCOMMENT\n+\tCOMMENT <p>Each minecraft server has a dynamic registry manager for file-loaded\n+\tCOMMENT registries, while each client play network handler has a dynamic registry\n+\tCOMMENT manager for server-sent dynamic registries.</p>\n+\tCOMMENT\n+\tCOMMENT <p>The {@link net.minecraft.util.registry.DynamicRegistryManager.Impl}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10589be7011dd9d1823479359c0d64e79aef85f1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1ODA5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tCOMMENT Registers a registry handling logic to the immutable map builder for\n          \n          \n            \n            \t\tCOMMENT Adds a {@linkplain DynamicRegistryManager.Info} to the immutable map builder for", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r453358092", "createdAt": "2020-07-12T20:09:33Z", "author": {"login": "Earthcomputer"}, "path": "mappings/net/minecraft/util/registry/DynamicRegistryManager.mapping", "diffHunk": "@@ -1,30 +1,59 @@\n CLASS net/minecraft/class_5455 net/minecraft/util/registry/DynamicRegistryManager\n+\tCOMMENT A manager of dynamic registries. It allows users to access non-hardcoded\n+\tCOMMENT registries reliably.\n+\tCOMMENT\n+\tCOMMENT <p>Each minecraft server has a dynamic registry manager for file-loaded\n+\tCOMMENT registries, while each client play network handler has a dynamic registry\n+\tCOMMENT manager for server-sent dynamic registries.</p>\n+\tCOMMENT\n+\tCOMMENT <p>The {@link net.minecraft.util.registry.DynamicRegistryManager.Impl}\n+\tCOMMENT class serves as an immutable implementation of any particular collection\n+\tCOMMENT or configuration of dynamic registries.</p>\n \tFIELD field_25918 LOGGER Lorg/apache/logging/log4j/Logger;\n \tFIELD field_25919 INFOS Ljava/util/Map;\n \tMETHOD method_30518 getDimensionTypes ()Lnet/minecraft/class_2378;\n \tMETHOD method_30519 load (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5455$class_5457;\n+\t\tCOMMENT Loads a dynamic registry manager from the resource manager's data files.\n \t\tARG 0 resourceManager\n \tMETHOD method_30520 register (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/class_5321;Lcom/mojang/serialization/MapCodec;Z)Lcom/google/common/collect/ImmutableMap$Builder;\n+\t\tCOMMENT Registers a registry handling logic to the immutable map builder for", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10589be7011dd9d1823479359c0d64e79aef85f1"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTEyOTE4", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-446912918", "createdAt": "2020-07-12T21:59:04Z", "commit": {"oid": "10589be7011dd9d1823479359c0d64e79aef85f1"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMTo1OTowNFrOGwXZ0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMjowMDozNFrOGwXaaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2ODI3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tCOMMENT Loads elements from the {@code ops} into the registy specified by {@code\n          \n          \n            \n            \t\tCOMMENT Loads elements from the {@code ops} into the registry specified by {@code", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r453368272", "createdAt": "2020-07-12T21:59:04Z", "author": {"login": "YanisBft"}, "path": "mappings/net/minecraft/util/registry/DynamicRegistryManager.mapping", "diffHunk": "@@ -0,0 +1,80 @@\n+CLASS net/minecraft/class_5455 net/minecraft/util/registry/DynamicRegistryManager\n+\tCOMMENT A manager of dynamic registries. It allows users to access non-hardcoded\n+\tCOMMENT registries reliably.\n+\tCOMMENT\n+\tCOMMENT <p>Each minecraft server has a dynamic registry manager for file-loaded\n+\tCOMMENT registries, while each client play network handler has a dynamic registry\n+\tCOMMENT manager for server-sent dynamic registries.</p>\n+\tCOMMENT\n+\tCOMMENT <p>The {@link net.minecraft.util.registry.DynamicRegistryManager.Impl}\n+\tCOMMENT class serves as an immutable implementation of any particular collection\n+\tCOMMENT or configuration of dynamic registries.</p>\n+\tFIELD field_25918 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tFIELD field_25919 INFOS Ljava/util/Map;\n+\tMETHOD method_30518 getDimensionTypes ()Lnet/minecraft/class_2378;\n+\tMETHOD method_30519 load (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5455$class_5457;\n+\t\tCOMMENT Loads a dynamic registry manager from the resource manager's data files.\n+\t\tARG 0 resourceManager\n+\tMETHOD method_30520 register (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/class_5321;Lcom/mojang/serialization/MapCodec;Z)Lcom/google/common/collect/ImmutableMap$Builder;\n+\t\tCOMMENT Registers a registry handling logic to the immutable map builder for\n+\t\tCOMMENT registry infos.\n+\t\tARG 0 infosBuilder\n+\t\tARG 1 registryRef\n+\t\tARG 2 elementCodec\n+\t\tARG 3 synced\n+\tMETHOD method_30524 addBuiltinEntries (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_2378;)V\n+\t\tCOMMENT Add all entries of the {@code registry} to the corresponding registry\n+\t\tCOMMENT within this manager.\n+\t\tARG 0 manager\n+\t\tARG 1 registry\n+\tMETHOD method_30525 setupBuiltin (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5321;)V\n+\t\tCOMMENT Add all entries of the registry referred by {@code registryRef} to the\n+\t\tCOMMENT corresponding registry within this manager.\n+\t\tARG 0 manager\n+\t\tARG 1 registryRef\n+\tMETHOD method_30526 load (Lnet/minecraft/class_5382;Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5455$class_5456;)V\n+\t\tCOMMENT Loads elements from the {@code ops} into the registy specified by {@code", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10589be7011dd9d1823479359c0d64e79aef85f1"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2ODMxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tCOMMENT Retreives a registry optionally from this manager.\n          \n          \n            \n            \t\tCOMMENT Retrieves a registry optionally from this manager.", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r453368315", "createdAt": "2020-07-12T21:59:40Z", "author": {"login": "YanisBft"}, "path": "mappings/net/minecraft/util/registry/DynamicRegistryManager.mapping", "diffHunk": "@@ -0,0 +1,80 @@\n+CLASS net/minecraft/class_5455 net/minecraft/util/registry/DynamicRegistryManager\n+\tCOMMENT A manager of dynamic registries. It allows users to access non-hardcoded\n+\tCOMMENT registries reliably.\n+\tCOMMENT\n+\tCOMMENT <p>Each minecraft server has a dynamic registry manager for file-loaded\n+\tCOMMENT registries, while each client play network handler has a dynamic registry\n+\tCOMMENT manager for server-sent dynamic registries.</p>\n+\tCOMMENT\n+\tCOMMENT <p>The {@link net.minecraft.util.registry.DynamicRegistryManager.Impl}\n+\tCOMMENT class serves as an immutable implementation of any particular collection\n+\tCOMMENT or configuration of dynamic registries.</p>\n+\tFIELD field_25918 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tFIELD field_25919 INFOS Ljava/util/Map;\n+\tMETHOD method_30518 getDimensionTypes ()Lnet/minecraft/class_2378;\n+\tMETHOD method_30519 load (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5455$class_5457;\n+\t\tCOMMENT Loads a dynamic registry manager from the resource manager's data files.\n+\t\tARG 0 resourceManager\n+\tMETHOD method_30520 register (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/class_5321;Lcom/mojang/serialization/MapCodec;Z)Lcom/google/common/collect/ImmutableMap$Builder;\n+\t\tCOMMENT Registers a registry handling logic to the immutable map builder for\n+\t\tCOMMENT registry infos.\n+\t\tARG 0 infosBuilder\n+\t\tARG 1 registryRef\n+\t\tARG 2 elementCodec\n+\t\tARG 3 synced\n+\tMETHOD method_30524 addBuiltinEntries (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_2378;)V\n+\t\tCOMMENT Add all entries of the {@code registry} to the corresponding registry\n+\t\tCOMMENT within this manager.\n+\t\tARG 0 manager\n+\t\tARG 1 registry\n+\tMETHOD method_30525 setupBuiltin (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5321;)V\n+\t\tCOMMENT Add all entries of the registry referred by {@code registryRef} to the\n+\t\tCOMMENT corresponding registry within this manager.\n+\t\tARG 0 manager\n+\t\tARG 1 registryRef\n+\tMETHOD method_30526 load (Lnet/minecraft/class_5382;Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5455$class_5456;)V\n+\t\tCOMMENT Loads elements from the {@code ops} into the registy specified by {@code\n+\t\tCOMMENT info} within the {@code manager}. Note that the resource manager instance\n+\t\tCOMMENT is kept within the {@code ops}.\n+\t\tARG 0 ops\n+\t\tARG 1 manager\n+\t\tARG 2 info\n+\tMETHOD method_30527 getOptional (Lnet/minecraft/class_5321;)Ljava/util/Optional;\n+\t\tCOMMENT Retreives a registry optionally from this manager.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10589be7011dd9d1823479359c0d64e79aef85f1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2ODQyNw==", "bodyText": "should be match the field (and the getter)", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r453368427", "createdAt": "2020-07-12T22:00:34Z", "author": {"login": "YanisBft"}, "path": "mappings/net/minecraft/util/registry/DynamicRegistryManager.mapping", "diffHunk": "@@ -0,0 +1,80 @@\n+CLASS net/minecraft/class_5455 net/minecraft/util/registry/DynamicRegistryManager\n+\tCOMMENT A manager of dynamic registries. It allows users to access non-hardcoded\n+\tCOMMENT registries reliably.\n+\tCOMMENT\n+\tCOMMENT <p>Each minecraft server has a dynamic registry manager for file-loaded\n+\tCOMMENT registries, while each client play network handler has a dynamic registry\n+\tCOMMENT manager for server-sent dynamic registries.</p>\n+\tCOMMENT\n+\tCOMMENT <p>The {@link net.minecraft.util.registry.DynamicRegistryManager.Impl}\n+\tCOMMENT class serves as an immutable implementation of any particular collection\n+\tCOMMENT or configuration of dynamic registries.</p>\n+\tFIELD field_25918 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tFIELD field_25919 INFOS Ljava/util/Map;\n+\tMETHOD method_30518 getDimensionTypes ()Lnet/minecraft/class_2378;\n+\tMETHOD method_30519 load (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5455$class_5457;\n+\t\tCOMMENT Loads a dynamic registry manager from the resource manager's data files.\n+\t\tARG 0 resourceManager\n+\tMETHOD method_30520 register (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/class_5321;Lcom/mojang/serialization/MapCodec;Z)Lcom/google/common/collect/ImmutableMap$Builder;\n+\t\tCOMMENT Registers a registry handling logic to the immutable map builder for\n+\t\tCOMMENT registry infos.\n+\t\tARG 0 infosBuilder\n+\t\tARG 1 registryRef\n+\t\tARG 2 elementCodec\n+\t\tARG 3 synced\n+\tMETHOD method_30524 addBuiltinEntries (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_2378;)V\n+\t\tCOMMENT Add all entries of the {@code registry} to the corresponding registry\n+\t\tCOMMENT within this manager.\n+\t\tARG 0 manager\n+\t\tARG 1 registry\n+\tMETHOD method_30525 setupBuiltin (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5321;)V\n+\t\tCOMMENT Add all entries of the registry referred by {@code registryRef} to the\n+\t\tCOMMENT corresponding registry within this manager.\n+\t\tARG 0 manager\n+\t\tARG 1 registryRef\n+\tMETHOD method_30526 load (Lnet/minecraft/class_5382;Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5455$class_5456;)V\n+\t\tCOMMENT Loads elements from the {@code ops} into the registy specified by {@code\n+\t\tCOMMENT info} within the {@code manager}. Note that the resource manager instance\n+\t\tCOMMENT is kept within the {@code ops}.\n+\t\tARG 0 ops\n+\t\tARG 1 manager\n+\t\tARG 2 info\n+\tMETHOD method_30527 getOptional (Lnet/minecraft/class_5321;)Ljava/util/Optional;\n+\t\tCOMMENT Retreives a registry optionally from this manager.\n+\t\tARG 1 key\n+\tMETHOD method_30528 create ()Lnet/minecraft/class_5455$class_5457;\n+\t\tCOMMENT Creates a default dynamic registry manager.\n+\tMETHOD method_30530 get (Lnet/minecraft/class_5321;)Lnet/minecraft/class_2385;\n+\t\tCOMMENT Retrieves a registry from this manager, or throws an exception when the\n+\t\tCOMMENT registry does not exist.\n+\t\tCOMMENT\n+\t\tCOMMENT @throws IllegalStateException if the registry does not exist\n+\t\tARG 1 key\n+\tCLASS class_5456 Info\n+\t\tCOMMENT Represents the serialization behavior of the registries, including the\n+\t\tCOMMENT id of the registry, the codec for its elements, and whether the registry\n+\t\tCOMMENT should be sent to the client.\n+\t\tFIELD field_25920 registryRef Lnet/minecraft/class_5321;\n+\t\tFIELD field_25921 elementCodec Lcom/mojang/serialization/MapCodec;\n+\t\tFIELD field_25922 synced Z\n+\t\tMETHOD <init> (Lnet/minecraft/class_5321;Lcom/mojang/serialization/MapCodec;Z)V\n+\t\t\tARG 1 registry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10589be7011dd9d1823479359c0d64e79aef85f1"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2OTcxNzMx", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-446971731", "createdAt": "2020-07-13T04:18:54Z", "commit": {"oid": "10589be7011dd9d1823479359c0d64e79aef85f1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDoxODo1NFrOGwa82A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwNDoxODo1NFrOGwa82A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQyNjM5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tFIELD field_25920 registryRef Lnet/minecraft/class_5321;\n          \n          \n            \n            \t\tFIELD field_25920 registry Lnet/minecraft/class_5321;", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r453426392", "createdAt": "2020-07-13T04:18:54Z", "author": {"login": "liach"}, "path": "mappings/net/minecraft/util/registry/DynamicRegistryManager.mapping", "diffHunk": "@@ -0,0 +1,80 @@\n+CLASS net/minecraft/class_5455 net/minecraft/util/registry/DynamicRegistryManager\n+\tCOMMENT A manager of dynamic registries. It allows users to access non-hardcoded\n+\tCOMMENT registries reliably.\n+\tCOMMENT\n+\tCOMMENT <p>Each minecraft server has a dynamic registry manager for file-loaded\n+\tCOMMENT registries, while each client play network handler has a dynamic registry\n+\tCOMMENT manager for server-sent dynamic registries.</p>\n+\tCOMMENT\n+\tCOMMENT <p>The {@link net.minecraft.util.registry.DynamicRegistryManager.Impl}\n+\tCOMMENT class serves as an immutable implementation of any particular collection\n+\tCOMMENT or configuration of dynamic registries.</p>\n+\tFIELD field_25918 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tFIELD field_25919 INFOS Ljava/util/Map;\n+\tMETHOD method_30518 getDimensionTypes ()Lnet/minecraft/class_2378;\n+\tMETHOD method_30519 load (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5455$class_5457;\n+\t\tCOMMENT Loads a dynamic registry manager from the resource manager's data files.\n+\t\tARG 0 resourceManager\n+\tMETHOD method_30520 register (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/class_5321;Lcom/mojang/serialization/MapCodec;Z)Lcom/google/common/collect/ImmutableMap$Builder;\n+\t\tCOMMENT Registers a registry handling logic to the immutable map builder for\n+\t\tCOMMENT registry infos.\n+\t\tARG 0 infosBuilder\n+\t\tARG 1 registryRef\n+\t\tARG 2 elementCodec\n+\t\tARG 3 synced\n+\tMETHOD method_30524 addBuiltinEntries (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_2378;)V\n+\t\tCOMMENT Add all entries of the {@code registry} to the corresponding registry\n+\t\tCOMMENT within this manager.\n+\t\tARG 0 manager\n+\t\tARG 1 registry\n+\tMETHOD method_30525 setupBuiltin (Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5321;)V\n+\t\tCOMMENT Add all entries of the registry referred by {@code registryRef} to the\n+\t\tCOMMENT corresponding registry within this manager.\n+\t\tARG 0 manager\n+\t\tARG 1 registryRef\n+\tMETHOD method_30526 load (Lnet/minecraft/class_5382;Lnet/minecraft/class_5455$class_5457;Lnet/minecraft/class_5455$class_5456;)V\n+\t\tCOMMENT Loads elements from the {@code ops} into the registy specified by {@code\n+\t\tCOMMENT info} within the {@code manager}. Note that the resource manager instance\n+\t\tCOMMENT is kept within the {@code ops}.\n+\t\tARG 0 ops\n+\t\tARG 1 manager\n+\t\tARG 2 info\n+\tMETHOD method_30527 getOptional (Lnet/minecraft/class_5321;)Ljava/util/Optional;\n+\t\tCOMMENT Retreives a registry optionally from this manager.\n+\t\tARG 1 key\n+\tMETHOD method_30528 create ()Lnet/minecraft/class_5455$class_5457;\n+\t\tCOMMENT Creates a default dynamic registry manager.\n+\tMETHOD method_30530 get (Lnet/minecraft/class_5321;)Lnet/minecraft/class_2385;\n+\t\tCOMMENT Retrieves a registry from this manager, or throws an exception when the\n+\t\tCOMMENT registry does not exist.\n+\t\tCOMMENT\n+\t\tCOMMENT @throws IllegalStateException if the registry does not exist\n+\t\tARG 1 key\n+\tCLASS class_5456 Info\n+\t\tCOMMENT Represents the serialization behavior of the registries, including the\n+\t\tCOMMENT id of the registry, the codec for its elements, and whether the registry\n+\t\tCOMMENT should be sent to the client.\n+\t\tFIELD field_25920 registryRef Lnet/minecraft/class_5321;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10589be7011dd9d1823479359c0d64e79aef85f1"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47c560c75ebd1f3a13cdc94e82f90d04dc98ca67", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/yarn/commit/47c560c75ebd1f3a13cdc94e82f90d04dc98ca67", "committedDate": "2020-07-13T04:19:33Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Joseph Burton <burtonjae@hotmail.co.uk>\nCo-authored-by: Yanis48 <doublecraft.official@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MDQxNDU5", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-447041459", "createdAt": "2020-07-13T08:37:49Z", "commit": {"oid": "47c560c75ebd1f3a13cdc94e82f90d04dc98ca67"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MDE0OTE5", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-448014919", "createdAt": "2020-07-14T11:19:31Z", "commit": {"oid": "47c560c75ebd1f3a13cdc94e82f90d04dc98ca67"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMToxOTozMlrOGxPTMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMToxOTozMlrOGxPTMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI4NDA4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tCOMMENT Registers a registry handling logic to the immutable map builder for\n          \n          \n            \n            \t\tCOMMENT registry infos.\n          \n          \n            \n            \t\tCOMMENT Adds a registry to be managed dynamically, and specifies its serialization behavior.", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r454284083", "createdAt": "2020-07-14T11:19:32Z", "author": {"login": "shartte"}, "path": "mappings/net/minecraft/util/registry/DynamicRegistryManager.mapping", "diffHunk": "@@ -0,0 +1,80 @@\n+CLASS net/minecraft/class_5455 net/minecraft/util/registry/DynamicRegistryManager\n+\tCOMMENT A manager of dynamic registries. It allows users to access non-hardcoded\n+\tCOMMENT registries reliably.\n+\tCOMMENT\n+\tCOMMENT <p>Each minecraft server has a dynamic registry manager for file-loaded\n+\tCOMMENT registries, while each client play network handler has a dynamic registry\n+\tCOMMENT manager for server-sent dynamic registries.</p>\n+\tCOMMENT\n+\tCOMMENT <p>The {@link DynamicRegistryManager.Impl}\n+\tCOMMENT class serves as an immutable implementation of any particular collection\n+\tCOMMENT or configuration of dynamic registries.</p>\n+\tFIELD field_25918 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tFIELD field_25919 INFOS Ljava/util/Map;\n+\tMETHOD method_30518 getDimensionTypes ()Lnet/minecraft/class_2378;\n+\tMETHOD method_30519 load (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5455$class_5457;\n+\t\tCOMMENT Loads a dynamic registry manager from the resource manager's data files.\n+\t\tARG 0 resourceManager\n+\tMETHOD method_30520 register (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/class_5321;Lcom/mojang/serialization/MapCodec;Z)Lcom/google/common/collect/ImmutableMap$Builder;\n+\t\tCOMMENT Registers a registry handling logic to the immutable map builder for\n+\t\tCOMMENT registry infos.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47c560c75ebd1f3a13cdc94e82f90d04dc98ca67"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MDYxNDg0", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-448061484", "createdAt": "2020-07-14T12:32:15Z", "commit": {"oid": "47c560c75ebd1f3a13cdc94e82f90d04dc98ca67"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjozMjoxNVrOGxRlbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjozMjoxNVrOGxRlbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMyMTUxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tCOMMENT Registers a registry handling logic to the immutable map builder for\n          \n          \n            \n            \t\tCOMMENT registry infos.\n          \n      \n    \n    \n  \n\nInternal methods don't need javadoc. Outside users aren't supposed to call it", "url": "https://github.com/FabricMC/yarn/pull/1561#discussion_r454321519", "createdAt": "2020-07-14T12:32:15Z", "author": {"login": "liach"}, "path": "mappings/net/minecraft/util/registry/DynamicRegistryManager.mapping", "diffHunk": "@@ -0,0 +1,80 @@\n+CLASS net/minecraft/class_5455 net/minecraft/util/registry/DynamicRegistryManager\n+\tCOMMENT A manager of dynamic registries. It allows users to access non-hardcoded\n+\tCOMMENT registries reliably.\n+\tCOMMENT\n+\tCOMMENT <p>Each minecraft server has a dynamic registry manager for file-loaded\n+\tCOMMENT registries, while each client play network handler has a dynamic registry\n+\tCOMMENT manager for server-sent dynamic registries.</p>\n+\tCOMMENT\n+\tCOMMENT <p>The {@link DynamicRegistryManager.Impl}\n+\tCOMMENT class serves as an immutable implementation of any particular collection\n+\tCOMMENT or configuration of dynamic registries.</p>\n+\tFIELD field_25918 LOGGER Lorg/apache/logging/log4j/Logger;\n+\tFIELD field_25919 INFOS Ljava/util/Map;\n+\tMETHOD method_30518 getDimensionTypes ()Lnet/minecraft/class_2378;\n+\tMETHOD method_30519 load (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5455$class_5457;\n+\t\tCOMMENT Loads a dynamic registry manager from the resource manager's data files.\n+\t\tARG 0 resourceManager\n+\tMETHOD method_30520 register (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/class_5321;Lcom/mojang/serialization/MapCodec;Z)Lcom/google/common/collect/ImmutableMap$Builder;\n+\t\tCOMMENT Registers a registry handling logic to the immutable map builder for\n+\t\tCOMMENT registry infos.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47c560c75ebd1f3a13cdc94e82f90d04dc98ca67"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c79db03d2d4860862699f5fe847473991b5d3dd", "author": {"user": {"login": "liach", "name": null}}, "url": "https://github.com/FabricMC/yarn/commit/6c79db03d2d4860862699f5fe847473991b5d3dd", "committedDate": "2020-07-14T12:32:19Z", "message": "Update mappings/net/minecraft/util/registry/DynamicRegistryManager.mapping"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MDY1NTQ5", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-448065549", "createdAt": "2020-07-14T12:38:03Z", "commit": {"oid": "6c79db03d2d4860862699f5fe847473991b5d3dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MjAzNzg1", "url": "https://github.com/FabricMC/yarn/pull/1561#pullrequestreview-448203785", "createdAt": "2020-07-14T15:12:53Z", "commit": {"oid": "6c79db03d2d4860862699f5fe847473991b5d3dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4661, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}