{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NzMyNTY4", "number": 1250, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxODowNzo0N1rODuEiCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxODowODowOVrODuEijg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjM1MzM4OnYy", "diffSide": "RIGHT", "path": "mappings/net/minecraft/tag/Tag.mapping", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxODowNzo0N1rOF_3ahQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNTo0NjozOFrOGAF18w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjUxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tMETHOD method_26785 streamEntries ()Ljava/util/stream/Stream;\n          \n          \n            \n            \t\tMETHOD method_26785 entryStream ()Ljava/util/stream/Stream;\n          \n      \n    \n    \n  \n\nFits the suffix convention and goes with Map.entrySet()", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402512517", "createdAt": "2020-04-02T18:07:47Z", "author": {"login": "Earthcomputer"}, "path": "mappings/net/minecraft/tag/Tag.mapping", "diffHunk": "@@ -14,9 +14,55 @@ CLASS net/minecraft/class_3494 net/minecraft/tag/Tag\n \t\tARG 1 entry\n \tMETHOD method_15142 getRandom (Ljava/util/Random;)Ljava/lang/Object;\n \t\tARG 1 random\n+\tMETHOD method_26777 of (Ljava/util/Set;)Lnet/minecraft/class_3494;\n+\t\tARG 0 set\n \tCLASS class_3495 Builder\n \t\tCOMMENT A builder class to ease the creation of tags. It can also be used as a\n \t\tCOMMENT mutable form of a tag.\n+\t\tFIELD field_23688 entries Ljava/util/Set;\n+\t\tMETHOD method_26778 create ()Lnet/minecraft/class_3494$class_3495;\n+\t\tMETHOD method_26779 add (Lnet/minecraft/class_3494$class_3496;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 entry\n+\t\tMETHOD method_26780 read (Lcom/google/gson/JsonObject;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 json\n+\t\tMETHOD method_26782 build (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional;\n+\t\t\tARG 1 tagGetter\n+\t\t\tARG 2 objectGetter\n+\t\tMETHOD method_26784 add (Lnet/minecraft/class_2960;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 id\n+\t\tMETHOD method_26785 streamEntries ()Ljava/util/stream/Stream;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ad419ae546cdbaf94bdfeb8140364f2c36ced20"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxNjk4NA==", "bodyText": "stream is like an action than an object, so you are streaming the entries here", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402516984", "createdAt": "2020-04-02T18:15:30Z", "author": {"login": "liach"}, "path": "mappings/net/minecraft/tag/Tag.mapping", "diffHunk": "@@ -14,9 +14,55 @@ CLASS net/minecraft/class_3494 net/minecraft/tag/Tag\n \t\tARG 1 entry\n \tMETHOD method_15142 getRandom (Ljava/util/Random;)Ljava/lang/Object;\n \t\tARG 1 random\n+\tMETHOD method_26777 of (Ljava/util/Set;)Lnet/minecraft/class_3494;\n+\t\tARG 0 set\n \tCLASS class_3495 Builder\n \t\tCOMMENT A builder class to ease the creation of tags. It can also be used as a\n \t\tCOMMENT mutable form of a tag.\n+\t\tFIELD field_23688 entries Ljava/util/Set;\n+\t\tMETHOD method_26778 create ()Lnet/minecraft/class_3494$class_3495;\n+\t\tMETHOD method_26779 add (Lnet/minecraft/class_3494$class_3496;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 entry\n+\t\tMETHOD method_26780 read (Lcom/google/gson/JsonObject;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 json\n+\t\tMETHOD method_26782 build (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional;\n+\t\t\tARG 1 tagGetter\n+\t\t\tARG 2 objectGetter\n+\t\tMETHOD method_26784 add (Lnet/minecraft/class_2960;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 id\n+\t\tMETHOD method_26785 streamEntries ()Ljava/util/stream/Stream;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjUxNw=="}, "originalCommit": {"oid": "0ad419ae546cdbaf94bdfeb8140364f2c36ced20"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcwMzQwNQ==", "bodyText": "We currently have streamAround etc in BlockPos, what do you guys think?", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402703405", "createdAt": "2020-04-03T02:34:30Z", "author": {"login": "liach"}, "path": "mappings/net/minecraft/tag/Tag.mapping", "diffHunk": "@@ -14,9 +14,55 @@ CLASS net/minecraft/class_3494 net/minecraft/tag/Tag\n \t\tARG 1 entry\n \tMETHOD method_15142 getRandom (Ljava/util/Random;)Ljava/lang/Object;\n \t\tARG 1 random\n+\tMETHOD method_26777 of (Ljava/util/Set;)Lnet/minecraft/class_3494;\n+\t\tARG 0 set\n \tCLASS class_3495 Builder\n \t\tCOMMENT A builder class to ease the creation of tags. It can also be used as a\n \t\tCOMMENT mutable form of a tag.\n+\t\tFIELD field_23688 entries Ljava/util/Set;\n+\t\tMETHOD method_26778 create ()Lnet/minecraft/class_3494$class_3495;\n+\t\tMETHOD method_26779 add (Lnet/minecraft/class_3494$class_3496;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 entry\n+\t\tMETHOD method_26780 read (Lcom/google/gson/JsonObject;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 json\n+\t\tMETHOD method_26782 build (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional;\n+\t\t\tARG 1 tagGetter\n+\t\t\tARG 2 objectGetter\n+\t\tMETHOD method_26784 add (Lnet/minecraft/class_2960;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 id\n+\t\tMETHOD method_26785 streamEntries ()Ljava/util/stream/Stream;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjUxNw=="}, "originalCommit": {"oid": "0ad419ae546cdbaf94bdfeb8140364f2c36ced20"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0ODkxNQ==", "bodyText": "I prefer liach's name, since it's really a command (\"stream it now!\") opposed to converting it to a stream object (\"can I have the stream?\")", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402748915", "createdAt": "2020-04-03T05:46:38Z", "author": {"login": "Prospector"}, "path": "mappings/net/minecraft/tag/Tag.mapping", "diffHunk": "@@ -14,9 +14,55 @@ CLASS net/minecraft/class_3494 net/minecraft/tag/Tag\n \t\tARG 1 entry\n \tMETHOD method_15142 getRandom (Ljava/util/Random;)Ljava/lang/Object;\n \t\tARG 1 random\n+\tMETHOD method_26777 of (Ljava/util/Set;)Lnet/minecraft/class_3494;\n+\t\tARG 0 set\n \tCLASS class_3495 Builder\n \t\tCOMMENT A builder class to ease the creation of tags. It can also be used as a\n \t\tCOMMENT mutable form of a tag.\n+\t\tFIELD field_23688 entries Ljava/util/Set;\n+\t\tMETHOD method_26778 create ()Lnet/minecraft/class_3494$class_3495;\n+\t\tMETHOD method_26779 add (Lnet/minecraft/class_3494$class_3496;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 entry\n+\t\tMETHOD method_26780 read (Lcom/google/gson/JsonObject;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 json\n+\t\tMETHOD method_26782 build (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional;\n+\t\t\tARG 1 tagGetter\n+\t\t\tARG 2 objectGetter\n+\t\tMETHOD method_26784 add (Lnet/minecraft/class_2960;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 id\n+\t\tMETHOD method_26785 streamEntries ()Ljava/util/stream/Stream;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjUxNw=="}, "originalCommit": {"oid": "0ad419ae546cdbaf94bdfeb8140364f2c36ced20"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjM1NDcwOnYy", "diffSide": "RIGHT", "path": "mappings/net/minecraft/tag/Tag.mapping", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxODowODowOVrOF_3bYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNTo0Njo1NlrOGAF2VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjczNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tMETHOD method_26786 streamUnresolvedEntries (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Stream;\n          \n          \n            \n            \t\tMETHOD method_26786 unresolvedEntryStream (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Stream;", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402512736", "createdAt": "2020-04-02T18:08:09Z", "author": {"login": "Earthcomputer"}, "path": "mappings/net/minecraft/tag/Tag.mapping", "diffHunk": "@@ -14,9 +14,55 @@ CLASS net/minecraft/class_3494 net/minecraft/tag/Tag\n \t\tARG 1 entry\n \tMETHOD method_15142 getRandom (Ljava/util/Random;)Ljava/lang/Object;\n \t\tARG 1 random\n+\tMETHOD method_26777 of (Ljava/util/Set;)Lnet/minecraft/class_3494;\n+\t\tARG 0 set\n \tCLASS class_3495 Builder\n \t\tCOMMENT A builder class to ease the creation of tags. It can also be used as a\n \t\tCOMMENT mutable form of a tag.\n+\t\tFIELD field_23688 entries Ljava/util/Set;\n+\t\tMETHOD method_26778 create ()Lnet/minecraft/class_3494$class_3495;\n+\t\tMETHOD method_26779 add (Lnet/minecraft/class_3494$class_3496;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 entry\n+\t\tMETHOD method_26780 read (Lcom/google/gson/JsonObject;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 json\n+\t\tMETHOD method_26782 build (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional;\n+\t\t\tARG 1 tagGetter\n+\t\t\tARG 2 objectGetter\n+\t\tMETHOD method_26784 add (Lnet/minecraft/class_2960;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 id\n+\t\tMETHOD method_26785 streamEntries ()Ljava/util/stream/Stream;\n+\t\tMETHOD method_26786 streamUnresolvedEntries (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Stream;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ad419ae546cdbaf94bdfeb8140364f2c36ced20"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxNzEzNQ==", "bodyText": "Same, streaming unresolved entries", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402517135", "createdAt": "2020-04-02T18:15:42Z", "author": {"login": "liach"}, "path": "mappings/net/minecraft/tag/Tag.mapping", "diffHunk": "@@ -14,9 +14,55 @@ CLASS net/minecraft/class_3494 net/minecraft/tag/Tag\n \t\tARG 1 entry\n \tMETHOD method_15142 getRandom (Ljava/util/Random;)Ljava/lang/Object;\n \t\tARG 1 random\n+\tMETHOD method_26777 of (Ljava/util/Set;)Lnet/minecraft/class_3494;\n+\t\tARG 0 set\n \tCLASS class_3495 Builder\n \t\tCOMMENT A builder class to ease the creation of tags. It can also be used as a\n \t\tCOMMENT mutable form of a tag.\n+\t\tFIELD field_23688 entries Ljava/util/Set;\n+\t\tMETHOD method_26778 create ()Lnet/minecraft/class_3494$class_3495;\n+\t\tMETHOD method_26779 add (Lnet/minecraft/class_3494$class_3496;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 entry\n+\t\tMETHOD method_26780 read (Lcom/google/gson/JsonObject;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 json\n+\t\tMETHOD method_26782 build (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional;\n+\t\t\tARG 1 tagGetter\n+\t\t\tARG 2 objectGetter\n+\t\tMETHOD method_26784 add (Lnet/minecraft/class_2960;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 id\n+\t\tMETHOD method_26785 streamEntries ()Ljava/util/stream/Stream;\n+\t\tMETHOD method_26786 streamUnresolvedEntries (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Stream;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjczNg=="}, "originalCommit": {"oid": "0ad419ae546cdbaf94bdfeb8140364f2c36ced20"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0OTAxMg==", "bodyText": "Also prefer liach's here for same reason as above", "url": "https://github.com/FabricMC/yarn/pull/1250#discussion_r402749012", "createdAt": "2020-04-03T05:46:56Z", "author": {"login": "Prospector"}, "path": "mappings/net/minecraft/tag/Tag.mapping", "diffHunk": "@@ -14,9 +14,55 @@ CLASS net/minecraft/class_3494 net/minecraft/tag/Tag\n \t\tARG 1 entry\n \tMETHOD method_15142 getRandom (Ljava/util/Random;)Ljava/lang/Object;\n \t\tARG 1 random\n+\tMETHOD method_26777 of (Ljava/util/Set;)Lnet/minecraft/class_3494;\n+\t\tARG 0 set\n \tCLASS class_3495 Builder\n \t\tCOMMENT A builder class to ease the creation of tags. It can also be used as a\n \t\tCOMMENT mutable form of a tag.\n+\t\tFIELD field_23688 entries Ljava/util/Set;\n+\t\tMETHOD method_26778 create ()Lnet/minecraft/class_3494$class_3495;\n+\t\tMETHOD method_26779 add (Lnet/minecraft/class_3494$class_3496;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 entry\n+\t\tMETHOD method_26780 read (Lcom/google/gson/JsonObject;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 json\n+\t\tMETHOD method_26782 build (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional;\n+\t\t\tARG 1 tagGetter\n+\t\t\tARG 2 objectGetter\n+\t\tMETHOD method_26784 add (Lnet/minecraft/class_2960;)Lnet/minecraft/class_3494$class_3495;\n+\t\t\tARG 1 id\n+\t\tMETHOD method_26785 streamEntries ()Ljava/util/stream/Stream;\n+\t\tMETHOD method_26786 streamUnresolvedEntries (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Stream;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUxMjczNg=="}, "originalCommit": {"oid": "0ad419ae546cdbaf94bdfeb8140364f2c36ced20"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2331, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}