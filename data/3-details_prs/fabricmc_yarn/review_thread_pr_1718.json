{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMjA2MDEy", "number": 1718, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjo1MDozOFrOEcqXgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjo1MDozOFrOEcqXgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDg5NzMxOnYy", "diffSide": "RIGHT", "path": "mappings/net/minecraft/util/dynamic/RegistryOps.mapping", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjo1MDozOFrOHHU82g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNDo1NjozNlrOHIUSsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ0NTMzOA==", "bodyText": "Weird indentation here", "url": "https://github.com/FabricMC/yarn/pull/1718#discussion_r477445338", "createdAt": "2020-08-26T16:50:38Z", "author": {"login": "YanisBft"}, "path": "mappings/net/minecraft/util/dynamic/RegistryOps.mapping", "diffHunk": "@@ -17,12 +19,28 @@ CLASS net/minecraft/class_5382 net/minecraft/util/dynamic/RegistryOps\n \t\tCOMMENT reading ops.</p>\n \t\tCOMMENT\n \t\tCOMMENT @see RegistryReadingOps#encodeOrId(Object, Object, RegistryKey, MapCodec)\n+\t\tARG 4 allowInlineDefinitions\n \tMETHOD method_29761 getValueHolder (Lnet/minecraft/class_5321;)Lnet/minecraft/class_5382$class_5383;\n \t\tARG 1 registryRef\n \tMETHOD method_29763 readSupplier (Lnet/minecraft/class_5321;Lnet/minecraft/class_2385;Lcom/mojang/serialization/Codec;Lnet/minecraft/class_2960;)Lcom/mojang/serialization/DataResult;\n \t\tCOMMENT Reads a supplier for a registry element.\n \t\tCOMMENT\n \t\tCOMMENT <p>This logic is used by both {@code decodeOrId} and {@code loadToRegistry}.</p>\n \t\tARG 4 elementId\n+\tMETHOD method_31150 of (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/class_5382$class_5506;Lnet/minecraft/class_5455$class_5457;)Lnet/minecraft/class_5382;\n \tCLASS class_5383 ValueHolder\n \t\tFIELD field_25513 values Ljava/util/Map;\n+\tCLASS class_5506 EntryLoader\n+\t\tMETHOD method_31154 resourceBacked (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5382$class_5506;\n+\t\tMETHOD method_31155 load (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/class_5321;Lnet/minecraft/class_5321;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult;\n+\t\t\tARG 2 registryId\n+\t\t\tARG 3 entryId\n+\t\tMETHOD method_31156 getKnownEntryPaths (Lnet/minecraft/class_5321;)Ljava/util/Collection;\n+\t\t\tCOMMENT @return A collection of file Identifiers of all known entries of the given registry.\n+\t\t\tCOMMENT                 Note that these are file Identifiers for use in a resource manager, not the logical names of the entries.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ac84565800ee9b1056163e4f31877b80d4063d1"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY4MDEwOQ==", "bodyText": "I was trying to make it match the previous line (so it looks correct in IDE's). Should I not do that/will it be correctly formatted when applied?", "url": "https://github.com/FabricMC/yarn/pull/1718#discussion_r477680109", "createdAt": "2020-08-26T23:34:01Z", "author": {"login": "williewillus"}, "path": "mappings/net/minecraft/util/dynamic/RegistryOps.mapping", "diffHunk": "@@ -17,12 +19,28 @@ CLASS net/minecraft/class_5382 net/minecraft/util/dynamic/RegistryOps\n \t\tCOMMENT reading ops.</p>\n \t\tCOMMENT\n \t\tCOMMENT @see RegistryReadingOps#encodeOrId(Object, Object, RegistryKey, MapCodec)\n+\t\tARG 4 allowInlineDefinitions\n \tMETHOD method_29761 getValueHolder (Lnet/minecraft/class_5321;)Lnet/minecraft/class_5382$class_5383;\n \t\tARG 1 registryRef\n \tMETHOD method_29763 readSupplier (Lnet/minecraft/class_5321;Lnet/minecraft/class_2385;Lcom/mojang/serialization/Codec;Lnet/minecraft/class_2960;)Lcom/mojang/serialization/DataResult;\n \t\tCOMMENT Reads a supplier for a registry element.\n \t\tCOMMENT\n \t\tCOMMENT <p>This logic is used by both {@code decodeOrId} and {@code loadToRegistry}.</p>\n \t\tARG 4 elementId\n+\tMETHOD method_31150 of (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/class_5382$class_5506;Lnet/minecraft/class_5455$class_5457;)Lnet/minecraft/class_5382;\n \tCLASS class_5383 ValueHolder\n \t\tFIELD field_25513 values Ljava/util/Map;\n+\tCLASS class_5506 EntryLoader\n+\t\tMETHOD method_31154 resourceBacked (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5382$class_5506;\n+\t\tMETHOD method_31155 load (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/class_5321;Lnet/minecraft/class_5321;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult;\n+\t\t\tARG 2 registryId\n+\t\t\tARG 3 entryId\n+\t\tMETHOD method_31156 getKnownEntryPaths (Lnet/minecraft/class_5321;)Ljava/util/Collection;\n+\t\t\tCOMMENT @return A collection of file Identifiers of all known entries of the given registry.\n+\t\t\tCOMMENT                 Note that these are file Identifiers for use in a resource manager, not the logical names of the entries.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ0NTMzOA=="}, "originalCommit": {"oid": "0ac84565800ee9b1056163e4f31877b80d4063d1"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ2MTM2Mw==", "bodyText": "Would be better to start a new paragraph instead of trying this", "url": "https://github.com/FabricMC/yarn/pull/1718#discussion_r478461363", "createdAt": "2020-08-27T14:27:43Z", "author": {"login": "YanisBft"}, "path": "mappings/net/minecraft/util/dynamic/RegistryOps.mapping", "diffHunk": "@@ -17,12 +19,28 @@ CLASS net/minecraft/class_5382 net/minecraft/util/dynamic/RegistryOps\n \t\tCOMMENT reading ops.</p>\n \t\tCOMMENT\n \t\tCOMMENT @see RegistryReadingOps#encodeOrId(Object, Object, RegistryKey, MapCodec)\n+\t\tARG 4 allowInlineDefinitions\n \tMETHOD method_29761 getValueHolder (Lnet/minecraft/class_5321;)Lnet/minecraft/class_5382$class_5383;\n \t\tARG 1 registryRef\n \tMETHOD method_29763 readSupplier (Lnet/minecraft/class_5321;Lnet/minecraft/class_2385;Lcom/mojang/serialization/Codec;Lnet/minecraft/class_2960;)Lcom/mojang/serialization/DataResult;\n \t\tCOMMENT Reads a supplier for a registry element.\n \t\tCOMMENT\n \t\tCOMMENT <p>This logic is used by both {@code decodeOrId} and {@code loadToRegistry}.</p>\n \t\tARG 4 elementId\n+\tMETHOD method_31150 of (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/class_5382$class_5506;Lnet/minecraft/class_5455$class_5457;)Lnet/minecraft/class_5382;\n \tCLASS class_5383 ValueHolder\n \t\tFIELD field_25513 values Ljava/util/Map;\n+\tCLASS class_5506 EntryLoader\n+\t\tMETHOD method_31154 resourceBacked (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5382$class_5506;\n+\t\tMETHOD method_31155 load (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/class_5321;Lnet/minecraft/class_5321;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult;\n+\t\t\tARG 2 registryId\n+\t\t\tARG 3 entryId\n+\t\tMETHOD method_31156 getKnownEntryPaths (Lnet/minecraft/class_5321;)Ljava/util/Collection;\n+\t\t\tCOMMENT @return A collection of file Identifiers of all known entries of the given registry.\n+\t\t\tCOMMENT                 Note that these are file Identifiers for use in a resource manager, not the logical names of the entries.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ0NTMzOA=="}, "originalCommit": {"oid": "0ac84565800ee9b1056163e4f31877b80d4063d1"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQ4MzEyMg==", "bodyText": "yeah, consider writing these as method doc than return tag content", "url": "https://github.com/FabricMC/yarn/pull/1718#discussion_r478483122", "createdAt": "2020-08-27T14:56:36Z", "author": {"login": "liach"}, "path": "mappings/net/minecraft/util/dynamic/RegistryOps.mapping", "diffHunk": "@@ -17,12 +19,28 @@ CLASS net/minecraft/class_5382 net/minecraft/util/dynamic/RegistryOps\n \t\tCOMMENT reading ops.</p>\n \t\tCOMMENT\n \t\tCOMMENT @see RegistryReadingOps#encodeOrId(Object, Object, RegistryKey, MapCodec)\n+\t\tARG 4 allowInlineDefinitions\n \tMETHOD method_29761 getValueHolder (Lnet/minecraft/class_5321;)Lnet/minecraft/class_5382$class_5383;\n \t\tARG 1 registryRef\n \tMETHOD method_29763 readSupplier (Lnet/minecraft/class_5321;Lnet/minecraft/class_2385;Lcom/mojang/serialization/Codec;Lnet/minecraft/class_2960;)Lcom/mojang/serialization/DataResult;\n \t\tCOMMENT Reads a supplier for a registry element.\n \t\tCOMMENT\n \t\tCOMMENT <p>This logic is used by both {@code decodeOrId} and {@code loadToRegistry}.</p>\n \t\tARG 4 elementId\n+\tMETHOD method_31150 of (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/class_5382$class_5506;Lnet/minecraft/class_5455$class_5457;)Lnet/minecraft/class_5382;\n \tCLASS class_5383 ValueHolder\n \t\tFIELD field_25513 values Ljava/util/Map;\n+\tCLASS class_5506 EntryLoader\n+\t\tMETHOD method_31154 resourceBacked (Lnet/minecraft/class_3300;)Lnet/minecraft/class_5382$class_5506;\n+\t\tMETHOD method_31155 load (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/class_5321;Lnet/minecraft/class_5321;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult;\n+\t\t\tARG 2 registryId\n+\t\t\tARG 3 entryId\n+\t\tMETHOD method_31156 getKnownEntryPaths (Lnet/minecraft/class_5321;)Ljava/util/Collection;\n+\t\t\tCOMMENT @return A collection of file Identifiers of all known entries of the given registry.\n+\t\t\tCOMMENT                 Note that these are file Identifiers for use in a resource manager, not the logical names of the entries.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ0NTMzOA=="}, "originalCommit": {"oid": "0ac84565800ee9b1056163e4f31877b80d4063d1"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3110, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}