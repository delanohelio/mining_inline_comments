{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI5MDc0NTA3", "number": 863, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTozNToxNFrOEDge5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjowMTowM1rOEDhL8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTEzMzgwOnYy", "diffSide": "RIGHT", "path": "titus-ext/aws/src/main/java/com/netflix/titus/ext/aws/AmazonAutoScalingAsyncProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTozNToxNFrOGgkLvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTozNToxNFrOGgkLvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgwMDQ0NQ==", "bodyText": "This code looks identical in all provider classes. We should move it to a utility class and share one implementation.", "url": "https://github.com/Netflix/titus-control-plane/pull/863#discussion_r436800445", "createdAt": "2020-06-08T15:35:14Z", "author": {"login": "tbak"}, "path": "titus-ext/aws/src/main/java/com/netflix/titus/ext/aws/AmazonAutoScalingAsyncProvider.java", "diffHunk": "@@ -33,7 +34,11 @@\n \n     @Inject\n     public AmazonAutoScalingAsyncProvider(AwsConfiguration configuration, AWSCredentialsProvider credentialProvider) {\n-        String region = configuration.getRegion().trim().toLowerCase();\n+        String region = configuration.getDataPlaneRegion().trim().toLowerCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2674e899826b894de29f4eab59ae47fbd9a9e027"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTI0NzI0OnYy", "diffSide": "RIGHT", "path": "titus-ext/aws/src/main/java/com/netflix/titus/ext/aws/AmazonClientProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjowMDozOVrOGglRhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjowMDozOVrOGglRhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxODMwOA==", "bodyText": "like above, this logic appears many times.", "url": "https://github.com/Netflix/titus-control-plane/pull/863#discussion_r436818308", "createdAt": "2020-06-08T16:00:39Z", "author": {"login": "corindwyer"}, "path": "titus-ext/aws/src/main/java/com/netflix/titus/ext/aws/AmazonClientProvider.java", "diffHunk": "@@ -34,7 +35,10 @@ public AmazonElasticLoadBalancingAsync getLoadBalancingClient(String accountId)\n             synchronized (this) {\n                 client = loadBalancerClients.get(accountId);\n                 if (client == null) {\n-                    String region = configuration.getRegion().trim().toLowerCase();\n+                    String region = configuration.getDataPlaneRegion().trim().toLowerCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2674e899826b894de29f4eab59ae47fbd9a9e027"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTI0OTEyOnYy", "diffSide": "RIGHT", "path": "titus-ext/aws/src/main/java/com/netflix/titus/ext/aws/AmazonEC2AsyncProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjowMTowM1rOGglSsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjowMTowM1rOGglSsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxODYwOA==", "bodyText": "same as above", "url": "https://github.com/Netflix/titus-control-plane/pull/863#discussion_r436818608", "createdAt": "2020-06-08T16:01:03Z", "author": {"login": "corindwyer"}, "path": "titus-ext/aws/src/main/java/com/netflix/titus/ext/aws/AmazonEC2AsyncProvider.java", "diffHunk": "@@ -33,7 +34,11 @@\n \n     @Inject\n     public AmazonEC2AsyncProvider(AwsConfiguration configuration, AWSCredentialsProvider credentialProvider) {\n-        String region = configuration.getRegion().trim().toLowerCase();\n+        String region = configuration.getDataPlaneRegion().trim().toLowerCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2674e899826b894de29f4eab59ae47fbd9a9e027"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3969, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}