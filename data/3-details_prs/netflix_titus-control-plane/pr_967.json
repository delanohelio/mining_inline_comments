{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzOTQ1MzEw", "number": 967, "title": "Adding counter to track conflicts between user and Titus provided env", "bodyText": "Description of the Change\nThis is first in a series of PRs to:\n\nverify there are currently no conflicting env variables between user provided and Titus provide sets (this PR),\nenforce that user may not provide an env variable that is going to conflict with a Titus provided default, and\nbeing able to reliably identify which env variables were provided by the user to recompute signature for verification when launching pods on Titus Agents", "createdAt": "2020-12-22T08:03:43Z", "url": "https://github.com/Netflix/titus-control-plane/pull/967", "merged": true, "mergeCommit": {"oid": "a73caae5f38b63cd86cc560a5d1b37d9371b7f6f"}, "closed": true, "closedAt": "2020-12-22T22:31:10Z", "author": {"login": "joshi-keyur"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdolwJcgH2gAyNTQzOTQ1MzEwOjIwNTdmNmI5Y2JlOWY1OGU5NWVmZjhhY2JlMTZkZGFmNzI4M2Y4ZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdowAhQgH2gAyNTQzOTQ1MzEwOjA1Y2I1MWQzMzk2OTQ3NDk1MTkzMGMwMTg0YjY2NzQxZGY2ZGQzZWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2057f6b9cbe9f58e95eff8acbe16ddaf7283f8ea", "author": {"user": {"login": "joshi-keyur", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/2057f6b9cbe9f58e95eff8acbe16ddaf7283f8ea", "committedDate": "2020-12-22T07:53:17Z", "message": "Adding counter to track conflicts between user and Titus provided env variables when pod is created"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MjM5MjQ1", "url": "https://github.com/Netflix/titus-control-plane/pull/967#pullrequestreview-557239245", "createdAt": "2020-12-22T17:20:26Z", "commit": {"oid": "2057f6b9cbe9f58e95eff8acbe16ddaf7283f8ea"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzoyMzo1OFrOIKC0GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzoyMzo1OFrOIKC0GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQwMjc3Nw==", "bodyText": "Is there a value in extracting it as an abstract class?", "url": "https://github.com/Netflix/titus-control-plane/pull/967#discussion_r547402777", "createdAt": "2020-12-22T17:23:58Z", "author": {"login": "tbak"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/env/AggregatingContainerEnvFactory.java", "diffHunk": "@@ -17,31 +17,17 @@\n package com.netflix.titus.master.mesos.kubeapiserver.direct.env;\n \n import java.util.Arrays;\n-import java.util.HashMap;\n import java.util.List;\n-import java.util.Map;\n-\n-import com.netflix.titus.api.jobmanager.model.job.Job;\n-import com.netflix.titus.api.jobmanager.model.job.Task;\n \n /**\n  * Aggregate container environment variables from many sources. Evaluation happens from left to right, with the\n  * next item overriding entries from previous evaluations if there is a collision.\n  */\n-public class AggregatingContainerEnvFactory implements ContainerEnvFactory {\n+public abstract class AggregatingContainerEnvFactory implements ContainerEnvFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2057f6b9cbe9f58e95eff8acbe16ddaf7283f8ea"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3MjQ1MDI0", "url": "https://github.com/Netflix/titus-control-plane/pull/967#pullrequestreview-557245024", "createdAt": "2020-12-22T17:29:51Z", "commit": {"oid": "2057f6b9cbe9f58e95eff8acbe16ddaf7283f8ea"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzoyOTo1MVrOIKC_tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzozMjo0M1rOIKDEyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQwNTc0OQ==", "bodyText": "The this. prefixes don't seem needed.", "url": "https://github.com/Netflix/titus-control-plane/pull/967#discussion_r547405749", "createdAt": "2020-12-22T17:29:51Z", "author": {"login": "andrew-leung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/env/DefaultAggregatingContainerEnvFactory.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.titus.master.mesos.kubeapiserver.direct.env;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+import com.netflix.spectator.api.Id;\n+import com.netflix.spectator.api.Registry;\n+import com.netflix.titus.api.jobmanager.model.job.Job;\n+import com.netflix.titus.api.jobmanager.model.job.Task;\n+import com.netflix.titus.common.runtime.TitusRuntime;\n+\n+@Singleton\n+public class DefaultAggregatingContainerEnvFactory extends AggregatingContainerEnvFactory {\n+\n+    private static final String CONFLICT_COUNTER = \"titus.aggregatingContainerEnv.conflict\";\n+\n+    private final Registry registry;\n+\n+    private final Id conflictId;\n+\n+    @Inject\n+    public DefaultAggregatingContainerEnvFactory(TitusRuntime titusRuntime) {\n+        super(UserProvidedContainerEnvFactory.getInstance(), TitusProvidedContainerEnvFactory.getInstance());\n+        this.registry = titusRuntime.getRegistry();\n+        this.conflictId = registry.createId(CONFLICT_COUNTER);\n+    }\n+\n+    @Override\n+    public Map<String, String> buildContainerEnv(Job<?> job, Task task) {\n+        Map<String, String> env = new HashMap<>();\n+        for (ContainerEnvFactory factory : factories) {\n+            Map<String, String> envMap = factory.buildContainerEnv(job, task);\n+            // Tracking conflicting env var for any two given factories\n+            env.keySet().stream().filter(envMap::containsKey).forEach(this::incrementConflictCounter);\n+            env.putAll(envMap);\n+        }\n+        return env;\n+    }\n+\n+    private void incrementConflictCounter(String envVarName) {\n+        this.registry.counter(this.conflictId.withTags(\"env\", envVarName)).increment();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2057f6b9cbe9f58e95eff8acbe16ddaf7283f8ea"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQwNzA0OQ==", "bodyText": "It seems like we're depending on the order here to make sure that factories with higher precedence override others. If that's the case, maybe we should add a comment here or where we do the put()/overwrite?", "url": "https://github.com/Netflix/titus-control-plane/pull/967#discussion_r547407049", "createdAt": "2020-12-22T17:32:43Z", "author": {"login": "andrew-leung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/env/DefaultAggregatingContainerEnvFactory.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.titus.master.mesos.kubeapiserver.direct.env;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+import com.netflix.spectator.api.Id;\n+import com.netflix.spectator.api.Registry;\n+import com.netflix.titus.api.jobmanager.model.job.Job;\n+import com.netflix.titus.api.jobmanager.model.job.Task;\n+import com.netflix.titus.common.runtime.TitusRuntime;\n+\n+@Singleton\n+public class DefaultAggregatingContainerEnvFactory extends AggregatingContainerEnvFactory {\n+\n+    private static final String CONFLICT_COUNTER = \"titus.aggregatingContainerEnv.conflict\";\n+\n+    private final Registry registry;\n+\n+    private final Id conflictId;\n+\n+    @Inject\n+    public DefaultAggregatingContainerEnvFactory(TitusRuntime titusRuntime) {\n+        super(UserProvidedContainerEnvFactory.getInstance(), TitusProvidedContainerEnvFactory.getInstance());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2057f6b9cbe9f58e95eff8acbe16ddaf7283f8ea"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05cb51d33969474951930c0184b66741df6dd3ed", "author": {"user": {"login": "joshi-keyur", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/05cb51d33969474951930c0184b66741df6dd3ed", "committedDate": "2020-12-22T19:50:13Z", "message": "Addressing code review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 483, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}