{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NjgwNzA5", "number": 804, "title": "add job descriptor annotation", "bodyText": "Description of the Change\n\nAdd configurable job descriptor annotation to the pod object.", "createdAt": "2020-03-09T16:13:53Z", "url": "https://github.com/Netflix/titus-control-plane/pull/804", "merged": true, "mergeCommit": {"oid": "79a89b74589fc6e6da9e07face1ab4b1fd63907a"}, "closed": true, "closedAt": "2020-03-12T19:00:56Z", "author": {"login": "corindwyer"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMARpfgH2gAyMzg1NjgwNzA5Ojc5MjYwYzc5MDczYmVjZGVjNWNjZjZlZDI5NzBiMTk4YjdmMDVlZGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcM__d9gH2gAyMzg1NjgwNzA5Ojc2YTBjNzU2YTA5Y2FmZTRjNDA2OGZkMDY0Y2Q3ZGEzYjA3NjQ1MGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "79260c79073becdec5ccf6ed2970b198b7f05edb", "author": {"user": {"login": "corindwyer", "name": "Corin Dwyer"}}, "url": "https://github.com/Netflix/titus-control-plane/commit/79260c79073becdec5ccf6ed2970b198b7f05edb", "committedDate": "2020-03-09T16:12:27Z", "message": "add job descriptor annotation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMzI2MDQw", "url": "https://github.com/Netflix/titus-control-plane/pull/804#pullrequestreview-371326040", "createdAt": "2020-03-09T16:16:34Z", "commit": {"oid": "79260c79073becdec5ccf6ed2970b198b7f05edb"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoxNjozNFrOFzvdTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoyNDoyMlrOFzvxQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc5OTI0Nw==", "bodyText": "worth using a try-with-resources here (and move some of the declarations outside of the try-catch block) just to avoid leaking the stream on errors?", "url": "https://github.com/Netflix/titus-control-plane/pull/804#discussion_r389799247", "createdAt": "2020-03-09T16:16:34Z", "author": {"login": "fabiokung"}, "path": "titus-common/src/main/java/com/netflix/titus/common/util/StringExt.java", "diffHunk": "@@ -540,4 +543,24 @@ public static String startWithLowercase(String text) {\n         }\n         return Optional.of(result);\n     }\n+\n+    /**\n+     * GZip a string and base64 encode the result in order to compress a string while keeping the String type.\n+     *\n+     * @return gzipped and base64 encoded string.\n+     */\n+    public static String gzipAndBase64Encode(String s) {\n+        if (StringExt.isEmpty(s)) {\n+            return s;\n+        }\n+        try {\n+            ByteArrayOutputStream out = new ByteArrayOutputStream();\n+            GZIPOutputStream gzip = new GZIPOutputStream(out);\n+            gzip.write(s.getBytes());\n+            gzip.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79260c79073becdec5ccf6ed2970b198b7f05edb"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNDM1Mw==", "bodyText": "minor: use ObjectMappers.storeMapper()#writeValue(OutputStream, Object) to save some heap space, avoid String allocations and unnecessary UTF-16 shenanigans.\nThat way you can also pass in a GZIPOutputStream directly to the writeValue() method and allow chunked encoding of the whole jobDescriptor.", "url": "https://github.com/Netflix/titus-control-plane/pull/804#discussion_r389804353", "createdAt": "2020-03-09T16:24:22Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeUtil.java", "diffHunk": "@@ -209,4 +213,24 @@ public static String getNodeIpV4Address(V1Node node) {\n                 .map(V1NodeAddress::getAddress)\n                 .orElse(\"UnknownIpAddress\");\n     }\n+\n+    public static Map<String, String> createPodAnnotations(\n+            Job<?> job,\n+            byte[] containerInfoData,\n+            Map<String, String> passthroughAttributes,\n+            boolean includeJobDescriptor\n+    ) {\n+        String encodedContainerInfo = Base64.getEncoder().encodeToString(containerInfoData);\n+\n+        Map<String, String> annotations = new HashMap<>(passthroughAttributes);\n+        annotations.putAll(PerformanceToolUtil.toAnnotations(job));\n+        annotations.put(\"containerInfo\", encodedContainerInfo);\n+\n+        if (includeJobDescriptor) {\n+            String jobDescriptorJson = CommonObjectMappers.writeValueAsString(ObjectMappers.storeMapper(), job.getJobDescriptor());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79260c79073becdec5ccf6ed2970b198b7f05edb"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMzkxMTg3", "url": "https://github.com/Netflix/titus-control-plane/pull/804#pullrequestreview-371391187", "createdAt": "2020-03-09T17:38:04Z", "commit": {"oid": "79260c79073becdec5ccf6ed2970b198b7f05edb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzozODowNFrOFzyohw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzozODowNFrOFzyohw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg1MTI3MQ==", "bodyText": "Looks like this assertion is unique to the input in this case.\nShould we generalize the test and possibly validate the decoded-gunzipped output is the same as input?\nAlso empty string is an interesting case since its output is non-empty. Maybe also handle that instead of returning an empty string. Curious to know what you think.", "url": "https://github.com/Netflix/titus-control-plane/pull/804#discussion_r389851271", "createdAt": "2020-03-09T17:38:04Z", "author": {"login": "joshi-keyur"}, "path": "titus-common/src/test/java/com/netflix/titus/common/util/StringExtTest.java", "diffHunk": "@@ -81,4 +81,11 @@ public void testParseDurationList() {\n                 Duration.ofMillis(1), Duration.ofMillis(2), Duration.ofMillis(3)\n         );\n     }\n+\n+    @Test\n+    public void testGzipAndBase64Encode() {\n+        String input = \"{aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa:bbbbbbbbbbbbbbbbbbbbbbbbbbb}\";\n+        String output = StringExt.gzipAndBase64Encode(input);\n+        assertThat(output.length()).isLessThan(input.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79260c79073becdec5ccf6ed2970b198b7f05edb"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDAyMjI5", "url": "https://github.com/Netflix/titus-control-plane/pull/804#pullrequestreview-371402229", "createdAt": "2020-03-09T17:52:59Z", "commit": {"oid": "79260c79073becdec5ccf6ed2970b198b7f05edb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDk4MDA2", "url": "https://github.com/Netflix/titus-control-plane/pull/804#pullrequestreview-371498006", "createdAt": "2020-03-09T20:17:35Z", "commit": {"oid": "79260c79073becdec5ccf6ed2970b198b7f05edb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76a0c756a09cafe4c4068fd064cd7da3b076450c", "author": {"user": {"login": "corindwyer", "name": "Corin Dwyer"}}, "url": "https://github.com/Netflix/titus-control-plane/commit/76a0c756a09cafe4c4068fd064cd7da3b076450c", "committedDate": "2020-03-12T18:26:31Z", "message": "Merge branch 'master' into job-descriptor-annotation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 657, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}