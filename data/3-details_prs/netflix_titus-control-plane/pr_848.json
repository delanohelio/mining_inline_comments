{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwOTgxNjA2", "number": 848, "title": "Configurable KubeApiServerIntegrator orphaned pods token bucket", "bodyText": "", "createdAt": "2020-05-20T19:43:36Z", "url": "https://github.com/Netflix/titus-control-plane/pull/848", "merged": true, "mergeCommit": {"oid": "1234328c151f62ff9576184604ce4fd5dbd28cc6"}, "closed": true, "closedAt": "2020-05-21T21:01:56Z", "author": {"login": "tbak"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjOcPegH2gAyNDIwOTgxNjA2OjFlYTY2ZGI5MGE0N2E2Zjk1ZmYyYTY0OTliOGI5YWZjODExMmUxYmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjjXaggH2gAyNDIwOTgxNjA2OmRmZWU5ZDk0ODYzZDlmZjNiZGUwZjU3ZjhlNjI5OGE3MThiZDRhZWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ea66db90a47a6f95ff2a6499b8b9afc8112e1ba", "author": {"user": {"login": "tbak", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/1ea66db90a47a6f95ff2a6499b8b9afc8112e1ba", "committedDate": "2020-05-20T19:42:57Z", "message": "Configurable KubeApiServerIntegrator orphaned pods token bucket"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NjY5NzI5", "url": "https://github.com/Netflix/titus-control-plane/pull/848#pullrequestreview-415669729", "createdAt": "2020-05-20T19:58:33Z", "commit": {"oid": "1ea66db90a47a6f95ff2a6499b8b9afc8112e1ba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f20716f5e57862fd201915f71753c9ae19ece119", "author": {"user": {"login": "tbak", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/f20716f5e57862fd201915f71753c9ae19ece119", "committedDate": "2020-05-20T21:16:44Z", "message": "Add proper cleanup logic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NzM1MTE2", "url": "https://github.com/Netflix/titus-control-plane/pull/848#pullrequestreview-415735116", "createdAt": "2020-05-20T21:41:28Z", "commit": {"oid": "f20716f5e57862fd201915f71753c9ae19ece119"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1Nzg3MDE2", "url": "https://github.com/Netflix/titus-control-plane/pull/848#pullrequestreview-415787016", "createdAt": "2020-05-20T23:41:11Z", "commit": {"oid": "f20716f5e57862fd201915f71753c9ae19ece119"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMzo0MToxMVrOGYhgYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMzo0MToxMVrOGYhgYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM2Nzk2OQ==", "bodyText": "Should the null check be also part of the isSame method because the latter is also used by get()?", "url": "https://github.com/Netflix/titus-control-plane/pull/848#discussion_r428367969", "createdAt": "2020-05-20T23:41:11Z", "author": {"login": "joshi-keyur"}, "path": "titus-common/src/main/java/com/netflix/titus/common/util/limiter/tokenbucket/internal/FixedIntervalTokenBucketSupplier.java", "diffHunk": "@@ -0,0 +1,147 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.titus.common.util.limiter.tokenbucket.internal;\n+\n+import java.util.Optional;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Consumer;\n+import java.util.function.Supplier;\n+\n+import com.google.common.base.Stopwatch;\n+import com.netflix.titus.common.runtime.TitusRuntime;\n+import com.netflix.titus.common.util.Evaluators;\n+import com.netflix.titus.common.util.ExceptionExt;\n+import com.netflix.titus.common.util.limiter.tokenbucket.FixedIntervalTokenBucketConfiguration;\n+import com.netflix.titus.common.util.limiter.tokenbucket.RefillStrategy;\n+import com.netflix.titus.common.util.limiter.tokenbucket.TokenBucket;\n+\n+/**\n+ * {@link TokenBucket} supplier which recreates a token bucket if any of its configurable parameters changes.\n+ * The configuration parameters are read from {@link FixedIntervalTokenBucketConfiguration}.\n+ */\n+public class FixedIntervalTokenBucketSupplier implements Supplier<TokenBucket> {\n+\n+    private final String name;\n+    private final FixedIntervalTokenBucketConfiguration configuration;\n+    private final Consumer<TokenBucket> onChangeListener;\n+    private final Optional<TitusRuntime> titusRuntime;\n+\n+    private volatile ActiveConfiguration activeConfiguration;\n+\n+    private final Object lock = new Object();\n+\n+    public FixedIntervalTokenBucketSupplier(String name,\n+                                            FixedIntervalTokenBucketConfiguration configuration,\n+                                            Consumer<TokenBucket> onChangeListener,\n+                                            Optional<TitusRuntime> titusRuntime) {\n+        this.name = name;\n+        this.configuration = configuration;\n+        this.onChangeListener = onChangeListener;\n+        this.titusRuntime = titusRuntime;\n+        this.activeConfiguration = reload();\n+    }\n+\n+    @Override\n+    public TokenBucket get() {\n+        return isSame() ? activeConfiguration.getTokenBucket() : reload().getTokenBucket();\n+    }\n+\n+    private boolean isSame() {\n+        return activeConfiguration.getCapacity() == configuration.getCapacity()\n+                && activeConfiguration.getInitialNumberOfTokens() == configuration.getInitialNumberOfTokens()\n+                && activeConfiguration.getIntervalMs() == configuration.getIntervalMs()\n+                && activeConfiguration.getNumberOfTokensPerInterval() == configuration.getNumberOfTokensPerInterval();\n+    }\n+\n+    private ActiveConfiguration reload() {\n+        boolean same;\n+        synchronized (lock) {\n+            same = activeConfiguration != null && isSame();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20716f5e57862fd201915f71753c9ae19ece119"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1ODA2MTYy", "url": "https://github.com/Netflix/titus-control-plane/pull/848#pullrequestreview-415806162", "createdAt": "2020-05-21T00:39:09Z", "commit": {"oid": "f20716f5e57862fd201915f71753c9ae19ece119"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMDozOTowOVrOGYiftg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMDozOTowOVrOGYiftg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM4NDE4Mg==", "bodyText": "Should we add Configuration prefix for better namespacing here?", "url": "https://github.com/Netflix/titus-control-plane/pull/848#discussion_r428384182", "createdAt": "2020-05-21T00:39:09Z", "author": {"login": "joshi-keyur"}, "path": "titus-common/src/main/java/com/netflix/titus/common/util/limiter/tokenbucket/FixedIntervalTokenBucketConfiguration.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.titus.common.util.limiter.tokenbucket;\n+\n+import com.netflix.archaius.api.annotations.DefaultValue;\n+\n+public interface FixedIntervalTokenBucketConfiguration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f20716f5e57862fd201915f71753c9ae19ece119"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1ODA2MTk0", "url": "https://github.com/Netflix/titus-control-plane/pull/848#pullrequestreview-415806194", "createdAt": "2020-05-21T00:39:15Z", "commit": {"oid": "f20716f5e57862fd201915f71753c9ae19ece119"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfee9d94863d9ff3bde0f57f8e6298a718bd4aea", "author": {"user": {"login": "tbak", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/dfee9d94863d9ff3bde0f57f8e6298a718bd4aea", "committedDate": "2020-05-21T20:05:41Z", "message": "Code review updates"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 516, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}