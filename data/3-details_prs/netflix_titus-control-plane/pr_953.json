{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMjEwMDU5", "number": 953, "title": "rechecking agent status if not found in cache", "bodyText": "It contains the following updates to the Kubernetes Node GC controller behavior\n\nIf node not found in AgentManagementService Cache, EC2 service call is made to fetch the instance status.\nIf node status not found in the Cache or from the EC2 service call, then it's ignored for GC", "createdAt": "2020-11-12T23:01:56Z", "url": "https://github.com/Netflix/titus-control-plane/pull/953", "merged": true, "mergeCommit": {"oid": "c787be285a9b202d6279b2bedd3e5cea9a906595"}, "closed": true, "closedAt": "2020-11-16T18:22:37Z", "author": {"login": "amit-git"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdb6tvrgH2gAyNTIwMjEwMDU5OjRjYjAwYzI0OGJiNjA2MGY1NTE1MTdkNjU2Y2M3OTJkMzk4NDI4M2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddI7nqAH2gAyNTIwMjEwMDU5OmJhMmYwMmQzNDdmY2ViYjMyOWVhOGIzNTdhNGZiNDg0NTQ1YzRjYjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4cb00c248bb6060f551517d656cc792d3984283d", "author": {"user": {"login": "amit-git", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/4cb00c248bb6060f551517d656cc792d3984283d", "committedDate": "2020-11-12T22:57:39Z", "message": "double checking agent status if not found in cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NjAwMjQ0", "url": "https://github.com/Netflix/titus-control-plane/pull/953#pullrequestreview-529600244", "createdAt": "2020-11-12T23:59:25Z", "commit": {"oid": "4cb00c248bb6060f551517d656cc792d3984283d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMzo1OToyNVrOHyT6LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMzo1OToyNVrOHyT6LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxNzAzNw==", "bodyText": "Can LifecycleStatus be null?", "url": "https://github.com/Netflix/titus-control-plane/pull/953#discussion_r522517037", "createdAt": "2020-11-12T23:59:25Z", "author": {"login": "joshi-keyur"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/NodeGcController.java", "diffHunk": "@@ -148,9 +147,15 @@ private boolean isAgentInstanceNotAvailable(String nodeName) {\n \n         Optional<AgentInstance> agentInstanceOpt = agentManagementService.findAgentInstance(nodeName);\n         if (!agentInstanceOpt.isPresent()) {\n-            return true;\n+            // re-check with agent service to find an instance\n+            AgentInstance agentInstance = agentManagementService.getAgentInstanceAsync(nodeName)\n+                    .toBlocking()\n+                    .firstOrDefault(null);\n+            if (agentInstance != null) {\n+                return agentInstance.getLifecycleStatus().getState() == InstanceLifecycleState.Stopped;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cb00c248bb6060f551517d656cc792d3984283d"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NjAwNDgz", "url": "https://github.com/Netflix/titus-control-plane/pull/953#pullrequestreview-529600483", "createdAt": "2020-11-12T23:59:58Z", "commit": {"oid": "4cb00c248bb6060f551517d656cc792d3984283d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMzo1OTo1OFrOHyT6-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMzo1OTo1OFrOHyT6-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxNzI0MQ==", "bodyText": "Should we track how frequently this may be happening using a Counter?", "url": "https://github.com/Netflix/titus-control-plane/pull/953#discussion_r522517241", "createdAt": "2020-11-12T23:59:58Z", "author": {"login": "joshi-keyur"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/NodeGcController.java", "diffHunk": "@@ -148,9 +147,15 @@ private boolean isAgentInstanceNotAvailable(String nodeName) {\n \n         Optional<AgentInstance> agentInstanceOpt = agentManagementService.findAgentInstance(nodeName);\n         if (!agentInstanceOpt.isPresent()) {\n-            return true;\n+            // re-check with agent service to find an instance\n+            AgentInstance agentInstance = agentManagementService.getAgentInstanceAsync(nodeName)\n+                    .toBlocking()\n+                    .firstOrDefault(null);\n+            if (agentInstance != null) {\n+                return agentInstance.getLifecycleStatus().getState() == InstanceLifecycleState.Stopped;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cb00c248bb6060f551517d656cc792d3984283d"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfcccad53c0b6c19edf04a45bb7b82b06f2ba5c5", "author": {"user": {"login": "amit-git", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/bfcccad53c0b6c19edf04a45bb7b82b06f2ba5c5", "committedDate": "2020-11-13T01:09:50Z", "message": "additional logging before GCing a node"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMjEzMDEz", "url": "https://github.com/Netflix/titus-control-plane/pull/953#pullrequestreview-530213013", "createdAt": "2020-11-13T16:34:39Z", "commit": {"oid": "bfcccad53c0b6c19edf04a45bb7b82b06f2ba5c5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjozNDozOVrOHy1Y2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjozODozOVrOHy1kPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA2NTU2Mg==", "bodyText": "In a new code, let's use spring-reactor API (Flux in this case).", "url": "https://github.com/Netflix/titus-control-plane/pull/953#discussion_r523065562", "createdAt": "2020-11-13T16:34:39Z", "author": {"login": "tbak"}, "path": "titus-api/src/main/java/com/netflix/titus/api/agent/service/AgentManagementService.java", "diffHunk": "@@ -134,4 +133,13 @@\n      * event for each instance group or agent instance change (add/update/remove).\n      */\n     Observable<AgentEvent> events(boolean includeSnapshot);\n+\n+    /**\n+     * Looks up agent instance by its ID, asynchronously\n+     *\n+     * @param instanceId of the agent\n+     * @return Observable of AgentInstance\n+     */\n+    Observable<AgentInstance> getAgentInstanceAsync(String instanceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfcccad53c0b6c19edf04a45bb7b82b06f2ba5c5"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA2ODQ3OQ==", "bodyText": "If after direct query agentInstance is null we should assume that it is not available, so check it first and return true?", "url": "https://github.com/Netflix/titus-control-plane/pull/953#discussion_r523068479", "createdAt": "2020-11-13T16:38:39Z", "author": {"login": "tbak"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/NodeGcController.java", "diffHunk": "@@ -148,9 +150,16 @@ private boolean isAgentInstanceNotAvailable(String nodeName) {\n \n         Optional<AgentInstance> agentInstanceOpt = agentManagementService.findAgentInstance(nodeName);\n         if (!agentInstanceOpt.isPresent()) {\n-            return true;\n+            // re-check with agent service to find an instance\n+            AgentInstance agentInstance = agentManagementService.getAgentInstanceAsync(nodeName)\n+                    .toBlocking()\n+                    .firstOrDefault(null);\n+            if (agentInstance != null && agentInstance.getLifecycleStatus() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfcccad53c0b6c19edf04a45bb7b82b06f2ba5c5"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMjMxOTcz", "url": "https://github.com/Netflix/titus-control-plane/pull/953#pullrequestreview-530231973", "createdAt": "2020-11-13T16:57:31Z", "commit": {"oid": "bfcccad53c0b6c19edf04a45bb7b82b06f2ba5c5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjo1NzozMVrOHy2Siw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzowNDo0NlrOHy2rEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA4MDMzMQ==", "bodyText": "It cannot but fine to be more defensive.", "url": "https://github.com/Netflix/titus-control-plane/pull/953#discussion_r523080331", "createdAt": "2020-11-13T16:57:31Z", "author": {"login": "corindwyer"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/NodeGcController.java", "diffHunk": "@@ -148,9 +147,15 @@ private boolean isAgentInstanceNotAvailable(String nodeName) {\n \n         Optional<AgentInstance> agentInstanceOpt = agentManagementService.findAgentInstance(nodeName);\n         if (!agentInstanceOpt.isPresent()) {\n-            return true;\n+            // re-check with agent service to find an instance\n+            AgentInstance agentInstance = agentManagementService.getAgentInstanceAsync(nodeName)\n+                    .toBlocking()\n+                    .firstOrDefault(null);\n+            if (agentInstance != null) {\n+                return agentInstance.getLifecycleStatus().getState() == InstanceLifecycleState.Stopped;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxNzAzNw=="}, "originalCommit": {"oid": "4cb00c248bb6060f551517d656cc792d3984283d"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA4NDQ2Mg==", "bodyText": "Verify this has a short timeout on it. If not, update code.", "url": "https://github.com/Netflix/titus-control-plane/pull/953#discussion_r523084462", "createdAt": "2020-11-13T17:02:54Z", "author": {"login": "corindwyer"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/NodeGcController.java", "diffHunk": "@@ -148,9 +150,16 @@ private boolean isAgentInstanceNotAvailable(String nodeName) {\n \n         Optional<AgentInstance> agentInstanceOpt = agentManagementService.findAgentInstance(nodeName);\n         if (!agentInstanceOpt.isPresent()) {\n-            return true;\n+            // re-check with agent service to find an instance\n+            AgentInstance agentInstance = agentManagementService.getAgentInstanceAsync(nodeName)\n+                    .toBlocking()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfcccad53c0b6c19edf04a45bb7b82b06f2ba5c5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA4NjYxMA==", "bodyText": "yes, this could should also handle the case of the instance is explicitly gone in AWS. This assumes you can query for the state forever but the EC2 API returns a 404 after the instance has been stopped for an hour IIRC.", "url": "https://github.com/Netflix/titus-control-plane/pull/953#discussion_r523086610", "createdAt": "2020-11-13T17:04:46Z", "author": {"login": "corindwyer"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/NodeGcController.java", "diffHunk": "@@ -148,9 +150,16 @@ private boolean isAgentInstanceNotAvailable(String nodeName) {\n \n         Optional<AgentInstance> agentInstanceOpt = agentManagementService.findAgentInstance(nodeName);\n         if (!agentInstanceOpt.isPresent()) {\n-            return true;\n+            // re-check with agent service to find an instance\n+            AgentInstance agentInstance = agentManagementService.getAgentInstanceAsync(nodeName)\n+                    .toBlocking()\n+                    .firstOrDefault(null);\n+            if (agentInstance != null && agentInstance.getLifecycleStatus() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA2ODQ3OQ=="}, "originalCommit": {"oid": "bfcccad53c0b6c19edf04a45bb7b82b06f2ba5c5"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "681cae605488744eb3469e45d564f99affd49b93", "author": {"user": {"login": "amit-git", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/681cae605488744eb3469e45d564f99affd49b93", "committedDate": "2020-11-13T23:57:38Z", "message": "adding cloud connector api to fetch instance status"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28bf23a3deab61e2214ba7233d04de80ff6925ee", "author": {"user": {"login": "amit-git", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/28bf23a3deab61e2214ba7233d04de80ff6925ee", "committedDate": "2020-11-14T01:13:48Z", "message": "cloud connector implementations supporting a single instance ID lookup method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNDc3NjY0", "url": "https://github.com/Netflix/titus-control-plane/pull/953#pullrequestreview-531477664", "createdAt": "2020-11-16T16:16:33Z", "commit": {"oid": "28bf23a3deab61e2214ba7233d04de80ff6925ee"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjoxNjozM1rOH0GPgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjoyMDo1OVrOH0GcKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM5MDI3NQ==", "bodyText": "Wrap it into Mono.defer so a new request is create on each subscribe.", "url": "https://github.com/Netflix/titus-control-plane/pull/953#discussion_r524390275", "createdAt": "2020-11-16T16:16:33Z", "author": {"login": "tbak"}, "path": "titus-ext/aws/src/main/java/com/netflix/titus/ext/aws/AwsInstanceCloudConnector.java", "diffHunk": "@@ -223,6 +227,37 @@ public ResourceDimension getInstanceTypeResourceDimension(String instanceType) {\n                 });\n     }\n \n+    @Override\n+    public Mono<Instance> getInstance(String instanceId) {\n+        DescribeInstancesRequest req = new DescribeInstancesRequest()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28bf23a3deab61e2214ba7233d04de80ff6925ee"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM5MzUxMw==", "bodyText": "Move logger after 400 check, as the latter is ok case? Otherwise it will be a lot of noise in the log file.", "url": "https://github.com/Netflix/titus-control-plane/pull/953#discussion_r524393513", "createdAt": "2020-11-16T16:20:59Z", "author": {"login": "tbak"}, "path": "titus-ext/aws/src/main/java/com/netflix/titus/ext/aws/AwsInstanceCloudConnector.java", "diffHunk": "@@ -223,6 +227,37 @@ public ResourceDimension getInstanceTypeResourceDimension(String instanceType) {\n                 });\n     }\n \n+    @Override\n+    public Mono<Instance> getInstance(String instanceId) {\n+        DescribeInstancesRequest req = new DescribeInstancesRequest()\n+                .withInstanceIds(instanceId)\n+                .withSdkRequestTimeout((int) configuration.getAwsRequestTimeoutMs());\n+\n+        Mono<DescribeInstancesResult> instancesResult = AwsReactorExt.toMono(req, ec2Client::describeInstancesAsync);\n+        return instancesResult\n+                .filter(isr -> isr.getReservations() != null &&\n+                        !isr.getReservations().isEmpty() &&\n+                        !isr.getReservations().get(0).getInstances().isEmpty())\n+                .map(isr -> {\n+                    Reservation reservation = isr.getReservations().get(0);\n+                    return toInstance(reservation.getInstances().get(0));\n+                })\n+                .onErrorResume(e -> {\n+                    if (e instanceof AmazonEC2Exception) {\n+                        AmazonEC2Exception ec2Exception = (AmazonEC2Exception) e;\n+                        logger.warn(\"Exception fetching AWS instance {}\", instanceId, ec2Exception);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28bf23a3deab61e2214ba7233d04de80ff6925ee"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNTI5MzMw", "url": "https://github.com/Netflix/titus-control-plane/pull/953#pullrequestreview-531529330", "createdAt": "2020-11-16T17:09:30Z", "commit": {"oid": "28bf23a3deab61e2214ba7233d04de80ff6925ee"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzowOTozMFrOH0IxCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzowOTozMFrOH0IxCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQzMTYyNw==", "bodyText": "It might be useful to have a log line for when instance is not found without stack trace.", "url": "https://github.com/Netflix/titus-control-plane/pull/953#discussion_r524431627", "createdAt": "2020-11-16T17:09:30Z", "author": {"login": "corindwyer"}, "path": "titus-ext/aws/src/main/java/com/netflix/titus/ext/aws/AwsInstanceCloudConnector.java", "diffHunk": "@@ -223,6 +227,37 @@ public ResourceDimension getInstanceTypeResourceDimension(String instanceType) {\n                 });\n     }\n \n+    @Override\n+    public Mono<Instance> getInstance(String instanceId) {\n+        DescribeInstancesRequest req = new DescribeInstancesRequest()\n+                .withInstanceIds(instanceId)\n+                .withSdkRequestTimeout((int) configuration.getAwsRequestTimeoutMs());\n+\n+        Mono<DescribeInstancesResult> instancesResult = AwsReactorExt.toMono(req, ec2Client::describeInstancesAsync);\n+        return instancesResult\n+                .filter(isr -> isr.getReservations() != null &&\n+                        !isr.getReservations().isEmpty() &&\n+                        !isr.getReservations().get(0).getInstances().isEmpty())\n+                .map(isr -> {\n+                    Reservation reservation = isr.getReservations().get(0);\n+                    return toInstance(reservation.getInstances().get(0));\n+                })\n+                .onErrorResume(e -> {\n+                    if (e instanceof AmazonEC2Exception) {\n+                        AmazonEC2Exception ec2Exception = (AmazonEC2Exception) e;\n+                        logger.warn(\"Exception fetching AWS instance {}\", instanceId, ec2Exception);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM5MzUxMw=="}, "originalCommit": {"oid": "28bf23a3deab61e2214ba7233d04de80ff6925ee"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba2f02d347fcebb329ea8b357a4fb484545c4cb1", "author": {"user": {"login": "amit-git", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/ba2f02d347fcebb329ea8b357a4fb484545c4cb1", "committedDate": "2020-11-16T18:05:24Z", "message": "minor updates around log lines for aws instance lookup failure mode"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 469, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}