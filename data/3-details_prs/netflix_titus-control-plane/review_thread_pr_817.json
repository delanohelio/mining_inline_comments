{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMjUzNDc2", "number": 817, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMjowNzoyOVrODpsYYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMjowNzoyOVrODpsYYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MDQ1MzQ3OnYy", "diffSide": "RIGHT", "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQyMjowNzoyOVrOF5CCiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMjowNToxNlrOF5F7Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NjU2OQ==", "bodyText": "the code below seems to be returning false when there is no explicit scheduler taint (i.e. schedulerTaintValues.size() < 1). What is the expected behavior?\nSome unit tests here would be nice.", "url": "https://github.com/Netflix/titus-control-plane/pull/817#discussion_r395346569", "createdAt": "2020-03-19T22:07:29Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java", "diffHunk": "@@ -351,24 +351,49 @@ private void nodeUpdated(V1Node node) {\n      * </ul>\n      */\n     private boolean isNodeOwnedByFenzo(V1Node node) {\n+        if (isFarzoneNode(node)) {\n+            logger.debug(\"Not owned by fenzo (farzone node): {}\", node.getMetadata().getName());\n+            return false;\n+        }\n+        if (!hasFenzoSchedulerTaint(node)) {\n+            logger.debug(\"Not owned by fenzo (non Fenzo scheduler taint): {}\", node.getMetadata().getName());\n+            return false;\n+        }\n+\n         List<V1Taint> taints = node.getSpec().getTaints();\n         if (CollectionsExt.isNullOrEmpty(taints)) {\n-            return !isFarzoneNode(node);\n+            logger.debug(\"Owned by fenzo (no taint set): {}\", node.getMetadata().getName());\n+            return true;\n         }\n \n+        Set<String> toleratedTaints = mesosConfiguration.getFenzoTaintTolerations();\n+        for (V1Taint taint : taints) {\n+            String taintKey = taint.getKey();\n+            if (!taintKey.equals(KubeConstants.TAINT_SCHEDULER) && !toleratedTaints.contains(taintKey)) {\n+                logger.debug(\"Not owned by fenzo (non tolerable taint found): nodeId={}, taintKey={}\", node.getMetadata().getName(), taintKey);\n+                return false;\n+            }\n+        }\n+\n+        logger.debug(\"Owned by fenzo (all taints tolerated): {}\", node.getMetadata().getName());\n+        return true;\n+    }\n+\n+    /**\n+     * Returns true if there is {@link KubeConstants#TAINT_SCHEDULER} taint with {@link KubeConstants#TAINT_SCHEDULER_VALUE_FENZO} value\n+     * or this taint is missing (no explicit scheduler taint == Fenzo).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1c89daf539e57d7f7c2d3a5eb52f4e1f2f98b6e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM2MjY1OQ==", "bodyText": "Yes, this is correct. If there is no taint, we assume the node belongs to fenzo (see the comment).\nWe do not have unit tests for this class. I tested this extensively manually on a running system.", "url": "https://github.com/Netflix/titus-control-plane/pull/817#discussion_r395362659", "createdAt": "2020-03-19T22:50:47Z", "author": {"login": "tbak"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java", "diffHunk": "@@ -351,24 +351,49 @@ private void nodeUpdated(V1Node node) {\n      * </ul>\n      */\n     private boolean isNodeOwnedByFenzo(V1Node node) {\n+        if (isFarzoneNode(node)) {\n+            logger.debug(\"Not owned by fenzo (farzone node): {}\", node.getMetadata().getName());\n+            return false;\n+        }\n+        if (!hasFenzoSchedulerTaint(node)) {\n+            logger.debug(\"Not owned by fenzo (non Fenzo scheduler taint): {}\", node.getMetadata().getName());\n+            return false;\n+        }\n+\n         List<V1Taint> taints = node.getSpec().getTaints();\n         if (CollectionsExt.isNullOrEmpty(taints)) {\n-            return !isFarzoneNode(node);\n+            logger.debug(\"Owned by fenzo (no taint set): {}\", node.getMetadata().getName());\n+            return true;\n         }\n \n+        Set<String> toleratedTaints = mesosConfiguration.getFenzoTaintTolerations();\n+        for (V1Taint taint : taints) {\n+            String taintKey = taint.getKey();\n+            if (!taintKey.equals(KubeConstants.TAINT_SCHEDULER) && !toleratedTaints.contains(taintKey)) {\n+                logger.debug(\"Not owned by fenzo (non tolerable taint found): nodeId={}, taintKey={}\", node.getMetadata().getName(), taintKey);\n+                return false;\n+            }\n+        }\n+\n+        logger.debug(\"Owned by fenzo (all taints tolerated): {}\", node.getMetadata().getName());\n+        return true;\n+    }\n+\n+    /**\n+     * Returns true if there is {@link KubeConstants#TAINT_SCHEDULER} taint with {@link KubeConstants#TAINT_SCHEDULER_VALUE_FENZO} value\n+     * or this taint is missing (no explicit scheduler taint == Fenzo).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NjU2OQ=="}, "originalCommit": {"oid": "d1c89daf539e57d7f7c2d3a5eb52f4e1f2f98b6e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM3NjQwNQ==", "bodyText": "Let me rephrase: the comment here is not consistent with the behavior of the code on line 396. If a Node has taints, but none of them are KubeConstants.TAINT_SCHEDULER the return of this method will be false and the node will be considered not owned by Fenzo, which is the opposite of what the javadoc says.", "url": "https://github.com/Netflix/titus-control-plane/pull/817#discussion_r395376405", "createdAt": "2020-03-19T23:34:20Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java", "diffHunk": "@@ -351,24 +351,49 @@ private void nodeUpdated(V1Node node) {\n      * </ul>\n      */\n     private boolean isNodeOwnedByFenzo(V1Node node) {\n+        if (isFarzoneNode(node)) {\n+            logger.debug(\"Not owned by fenzo (farzone node): {}\", node.getMetadata().getName());\n+            return false;\n+        }\n+        if (!hasFenzoSchedulerTaint(node)) {\n+            logger.debug(\"Not owned by fenzo (non Fenzo scheduler taint): {}\", node.getMetadata().getName());\n+            return false;\n+        }\n+\n         List<V1Taint> taints = node.getSpec().getTaints();\n         if (CollectionsExt.isNullOrEmpty(taints)) {\n-            return !isFarzoneNode(node);\n+            logger.debug(\"Owned by fenzo (no taint set): {}\", node.getMetadata().getName());\n+            return true;\n         }\n \n+        Set<String> toleratedTaints = mesosConfiguration.getFenzoTaintTolerations();\n+        for (V1Taint taint : taints) {\n+            String taintKey = taint.getKey();\n+            if (!taintKey.equals(KubeConstants.TAINT_SCHEDULER) && !toleratedTaints.contains(taintKey)) {\n+                logger.debug(\"Not owned by fenzo (non tolerable taint found): nodeId={}, taintKey={}\", node.getMetadata().getName(), taintKey);\n+                return false;\n+            }\n+        }\n+\n+        logger.debug(\"Owned by fenzo (all taints tolerated): {}\", node.getMetadata().getName());\n+        return true;\n+    }\n+\n+    /**\n+     * Returns true if there is {@link KubeConstants#TAINT_SCHEDULER} taint with {@link KubeConstants#TAINT_SCHEDULER_VALUE_FENZO} value\n+     * or this taint is missing (no explicit scheduler taint == Fenzo).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NjU2OQ=="}, "originalCommit": {"oid": "d1c89daf539e57d7f7c2d3a5eb52f4e1f2f98b6e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM3NjcwMw==", "bodyText": "If what I said is correct and I'm not missing anything, one more argument in favor of having a unit test for the behavior here (how taints are being used and expected).", "url": "https://github.com/Netflix/titus-control-plane/pull/817#discussion_r395376703", "createdAt": "2020-03-19T23:35:22Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java", "diffHunk": "@@ -351,24 +351,49 @@ private void nodeUpdated(V1Node node) {\n      * </ul>\n      */\n     private boolean isNodeOwnedByFenzo(V1Node node) {\n+        if (isFarzoneNode(node)) {\n+            logger.debug(\"Not owned by fenzo (farzone node): {}\", node.getMetadata().getName());\n+            return false;\n+        }\n+        if (!hasFenzoSchedulerTaint(node)) {\n+            logger.debug(\"Not owned by fenzo (non Fenzo scheduler taint): {}\", node.getMetadata().getName());\n+            return false;\n+        }\n+\n         List<V1Taint> taints = node.getSpec().getTaints();\n         if (CollectionsExt.isNullOrEmpty(taints)) {\n-            return !isFarzoneNode(node);\n+            logger.debug(\"Owned by fenzo (no taint set): {}\", node.getMetadata().getName());\n+            return true;\n         }\n \n+        Set<String> toleratedTaints = mesosConfiguration.getFenzoTaintTolerations();\n+        for (V1Taint taint : taints) {\n+            String taintKey = taint.getKey();\n+            if (!taintKey.equals(KubeConstants.TAINT_SCHEDULER) && !toleratedTaints.contains(taintKey)) {\n+                logger.debug(\"Not owned by fenzo (non tolerable taint found): nodeId={}, taintKey={}\", node.getMetadata().getName(), taintKey);\n+                return false;\n+            }\n+        }\n+\n+        logger.debug(\"Owned by fenzo (all taints tolerated): {}\", node.getMetadata().getName());\n+        return true;\n+    }\n+\n+    /**\n+     * Returns true if there is {@link KubeConstants#TAINT_SCHEDULER} taint with {@link KubeConstants#TAINT_SCHEDULER_VALUE_FENZO} value\n+     * or this taint is missing (no explicit scheduler taint == Fenzo).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NjU2OQ=="}, "originalCommit": {"oid": "d1c89daf539e57d7f7c2d3a5eb52f4e1f2f98b6e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQxMDI0Nw==", "bodyText": "It is a bug. I am adding a unit test for this function.", "url": "https://github.com/Netflix/titus-control-plane/pull/817#discussion_r395410247", "createdAt": "2020-03-20T02:05:16Z", "author": {"login": "tbak"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeApiServerIntegrator.java", "diffHunk": "@@ -351,24 +351,49 @@ private void nodeUpdated(V1Node node) {\n      * </ul>\n      */\n     private boolean isNodeOwnedByFenzo(V1Node node) {\n+        if (isFarzoneNode(node)) {\n+            logger.debug(\"Not owned by fenzo (farzone node): {}\", node.getMetadata().getName());\n+            return false;\n+        }\n+        if (!hasFenzoSchedulerTaint(node)) {\n+            logger.debug(\"Not owned by fenzo (non Fenzo scheduler taint): {}\", node.getMetadata().getName());\n+            return false;\n+        }\n+\n         List<V1Taint> taints = node.getSpec().getTaints();\n         if (CollectionsExt.isNullOrEmpty(taints)) {\n-            return !isFarzoneNode(node);\n+            logger.debug(\"Owned by fenzo (no taint set): {}\", node.getMetadata().getName());\n+            return true;\n         }\n \n+        Set<String> toleratedTaints = mesosConfiguration.getFenzoTaintTolerations();\n+        for (V1Taint taint : taints) {\n+            String taintKey = taint.getKey();\n+            if (!taintKey.equals(KubeConstants.TAINT_SCHEDULER) && !toleratedTaints.contains(taintKey)) {\n+                logger.debug(\"Not owned by fenzo (non tolerable taint found): nodeId={}, taintKey={}\", node.getMetadata().getName(), taintKey);\n+                return false;\n+            }\n+        }\n+\n+        logger.debug(\"Owned by fenzo (all taints tolerated): {}\", node.getMetadata().getName());\n+        return true;\n+    }\n+\n+    /**\n+     * Returns true if there is {@link KubeConstants#TAINT_SCHEDULER} taint with {@link KubeConstants#TAINT_SCHEDULER_VALUE_FENZO} value\n+     * or this taint is missing (no explicit scheduler taint == Fenzo).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NjU2OQ=="}, "originalCommit": {"oid": "d1c89daf539e57d7f7c2d3a5eb52f4e1f2f98b6e"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3926, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}