{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjgxNjQ5", "number": 964, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMTo1NzoyMVrOFHW8xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMzo0MToyMlrOFHYcHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjYwMzU3OnYy", "diffSide": "RIGHT", "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/PersistentVolumeUnassociatedGcController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMTo1NzoyMVrOIIz53A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMjo1NjozNVrOII1KjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEwOTkxNg==", "bodyText": "This is just grace period seconds. Any idea why it was 1 before?", "url": "https://github.com/Netflix/titus-control-plane/pull/964#discussion_r546109916", "createdAt": "2020-12-18T21:57:21Z", "author": {"login": "solarkennedy"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/PersistentVolumeUnassociatedGcController.java", "diffHunk": "@@ -97,13 +98,26 @@ public boolean shouldGc() {\n \n     @Override\n     public boolean gcItem(V1PersistentVolume pv) {\n+        // Delete the volume's PVC first\n+        if (!gcPersistentVolumeClaim(pv)) {\n+            // If we cannot delete the PVC then we did not successfully GC the volume.\n+            // The PVC and PV will be part of a subsequent GC iteration.\n+            return false;\n+        }\n+        return gcPersistentVolume(pv);\n+    }\n+\n+    private boolean gcPersistentVolume(V1PersistentVolume pv) {\n         String volumeName = KubeUtil.getMetadataName(pv.getMetadata());\n         try {\n+            // If the PV is deleted while still associated with a PVC (though that is not expected), the PV\n+            // will not be removed until it is no longer bound to a PVC.\n+            // https://kubernetes.io/docs/concepts/storage/persistent-volumes/#storage-object-in-use-protection\n             kubeApiFacade.getCoreV1Api().deletePersistentVolume(\n                     volumeName,\n                     null,\n                     null,\n-                    1,\n+                    0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5122542c6ddd83e319d236826751508dc48744e1"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEzMDU3Mg==", "bodyText": "It is grace period seconds. I accidentally set it to 1 previously and am fixing here.", "url": "https://github.com/Netflix/titus-control-plane/pull/964#discussion_r546130572", "createdAt": "2020-12-18T22:56:35Z", "author": {"login": "andrew-leung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/PersistentVolumeUnassociatedGcController.java", "diffHunk": "@@ -97,13 +98,26 @@ public boolean shouldGc() {\n \n     @Override\n     public boolean gcItem(V1PersistentVolume pv) {\n+        // Delete the volume's PVC first\n+        if (!gcPersistentVolumeClaim(pv)) {\n+            // If we cannot delete the PVC then we did not successfully GC the volume.\n+            // The PVC and PV will be part of a subsequent GC iteration.\n+            return false;\n+        }\n+        return gcPersistentVolume(pv);\n+    }\n+\n+    private boolean gcPersistentVolume(V1PersistentVolume pv) {\n         String volumeName = KubeUtil.getMetadataName(pv.getMetadata());\n         try {\n+            // If the PV is deleted while still associated with a PVC (though that is not expected), the PV\n+            // will not be removed until it is no longer bound to a PVC.\n+            // https://kubernetes.io/docs/concepts/storage/persistent-volumes/#storage-object-in-use-protection\n             kubeApiFacade.getCoreV1Api().deletePersistentVolume(\n                     volumeName,\n                     null,\n                     null,\n-                    1,\n+                    0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEwOTkxNg=="}, "originalCommit": {"oid": "5122542c6ddd83e319d236826751508dc48744e1"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjg0NzY0OnYy", "diffSide": "RIGHT", "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/PersistentVolumeUnassociatedGcController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMzo0MToyMlrOII2NfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMzo1Njo1NFrOII2lng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE0NzcwOA==", "bodyText": "return true when it is not found in the catch(ApiException) block?", "url": "https://github.com/Netflix/titus-control-plane/pull/964#discussion_r546147708", "createdAt": "2020-12-18T23:41:22Z", "author": {"login": "joshi-keyur"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/PersistentVolumeUnassociatedGcController.java", "diffHunk": "@@ -120,6 +134,38 @@ public boolean gcItem(V1PersistentVolume pv) {\n         return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5122542c6ddd83e319d236826751508dc48744e1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE1Mzg4Ng==", "bodyText": "Yes, good catch!", "url": "https://github.com/Netflix/titus-control-plane/pull/964#discussion_r546153886", "createdAt": "2020-12-18T23:56:54Z", "author": {"login": "andrew-leung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/kubernetes/controller/PersistentVolumeUnassociatedGcController.java", "diffHunk": "@@ -120,6 +134,38 @@ public boolean gcItem(V1PersistentVolume pv) {\n         return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE0NzcwOA=="}, "originalCommit": {"oid": "5122542c6ddd83e319d236826751508dc48744e1"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3921, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}