{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMTAwNDMz", "number": 866, "title": "Pod terminated without a container is not processed by TitusMaster", "bodyText": "Instead, TitusMaster waits indefinitely for it to complete. Such pods\nare not GCed, as they stay in the Accepted state in TitusMaster.", "createdAt": "2020-06-09T22:34:56Z", "url": "https://github.com/Netflix/titus-control-plane/pull/866", "merged": true, "mergeCommit": {"oid": "bbf6ddb9637ca138aa661c266d0f29b9c8c709bb"}, "closed": true, "closedAt": "2020-06-10T17:24:13Z", "author": {"login": "tbak"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpsod2AH2gAyNDMyMTAwNDMzOjgzMjU0ZmI2MjA5M2EzZWJlNTA3YzA3MGIyZDc3MDg5YTNjMGZlMjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcp8xtxgH2gAyNDMyMTAwNDMzOjFlMmMxZDljYTRiZmJjZDhkZDAwNGVlOTEyZmU2NDNkMjY0NzdlMjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "83254fb62093a3ebe507c070b2d77089a3c0fe27", "author": {"user": {"login": "tbak", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/83254fb62093a3ebe507c070b2d77089a3c0fe27", "committedDate": "2020-06-09T22:17:00Z", "message": "Pod terminated without a container is not processed by TitusMaster\n\nInstead, TitusMaster waits indefinitely for it to complete. Such pods\nare not GCed, as they stay in the Accepted state in TitusMaster."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NjE3MjY0", "url": "https://github.com/Netflix/titus-control-plane/pull/866#pullrequestreview-427617264", "createdAt": "2020-06-09T23:40:31Z", "commit": {"oid": "83254fb62093a3ebe507c070b2d77089a3c0fe27"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMzo0MDozMVrOGhgBig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMzo0Mzo0NVrOGhgFLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4MDg3NA==", "bodyText": "minor: thoughs on centralizing this logic into PodWrapper? e.g.: something like PodWrapper#isTerminated()", "url": "https://github.com/Netflix/titus-control-plane/pull/866#discussion_r437780874", "createdAt": "2020-06-09T23:40:31Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/jobmanager/service/KubeNotificationProcessor.java", "diffHunk": "@@ -135,7 +135,19 @@ public void shutdown() {\n     }\n \n     private Mono<Void> handlePodUpdatedEvent(PodEvent event, Job job, Task task) {\n-        if (event.getPod() == null || event.getPod().getStatus() == null || CollectionsExt.isNullOrEmpty(event.getPod().getStatus().getContainerStatuses())) {\n+        // This is basic sanity check. If it fails, we have a major problem with pod state.\n+        if (event.getPod() == null || event.getPod().getStatus() == null || event.getPod().getStatus().getPhase() == null) {\n+            logger.warn(\"Pod notification with pod without status or phase set: taskId={}, pod={}\", task.getId(), event.getPod());\n+            return Mono.empty();\n+        }\n+\n+        PodWrapper podWrapper = new PodWrapper(event.getPod());\n+\n+        if (!podWrapper.hasContainers()) {\n+            if (podWrapper.getPodPhase() == PodPhase.FAILED || podWrapper.getPodPhase() == PodPhase.SUCCEEDED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83254fb62093a3ebe507c070b2d77089a3c0fe27"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4MTQ0NQ==", "bodyText": "same here, maybe move some of this logic into the PodWrapper and reuse below on line 268, e.g.: PodWrapper#getReasonCode()", "url": "https://github.com/Netflix/titus-control-plane/pull/866#discussion_r437781445", "createdAt": "2020-06-09T23:42:27Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/jobmanager/service/KubeNotificationProcessor.java", "diffHunk": "@@ -223,15 +259,13 @@ static Task updateTaskStatus(V1Pod pod,\n         } else {\n             TaskStatus.Builder newStatusBuilder = TaskStatus.newBuilder().withState(TaskState.Finished);\n \n-            boolean hasDeletionTimestamp = pod.getMetadata().getDeletionTimestamp() != null;\n-\n-            if (\"failed\".equalsIgnoreCase(pod.getStatus().getPhase())) {\n+            if (podWrapper.getPodPhase() == PodPhase.FAILED) {\n                 newStatusBuilder\n-                        .withReasonCode(hasDeletionTimestamp ? REASON_TASK_KILLED : TaskStatus.REASON_FAILED)\n-                        .withReasonMessage(Evaluators.getOrDefault(pod.getStatus().getMessage(), \"Pod execution failed\"));\n+                        .withReasonCode(podWrapper.hasDeletionTimestamp() ? REASON_TASK_KILLED : TaskStatus.REASON_FAILED)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83254fb62093a3ebe507c070b2d77089a3c0fe27"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4MTgwNg==", "bodyText": "Nice, I really like centralizing stuff in here", "url": "https://github.com/Netflix/titus-control-plane/pull/866#discussion_r437781806", "createdAt": "2020-06-09T23:43:45Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/model/PodWrapper.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.titus.master.mesos.kubeapiserver.direct.model;\n+\n+import java.util.Optional;\n+\n+import com.netflix.titus.common.util.CollectionsExt;\n+import com.netflix.titus.master.mesos.kubeapiserver.KubeUtil;\n+import io.kubernetes.client.openapi.models.V1ContainerState;\n+import io.kubernetes.client.openapi.models.V1Pod;\n+\n+/**\n+ * A helper object for processing pod state. This implementation assumes that it is always at most one container\n+ * in a pod.\n+ */\n+public class PodWrapper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83254fb62093a3ebe507c070b2d77089a3c0fe27"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e2c1d9ca4bfbcd8dd004ee912fe643d26477e26", "author": {"user": {"login": "tbak", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/1e2c1d9ca4bfbcd8dd004ee912fe643d26477e26", "committedDate": "2020-06-10T17:05:35Z", "message": "Code review updates"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 534, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}