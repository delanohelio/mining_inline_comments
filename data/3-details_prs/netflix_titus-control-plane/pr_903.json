{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0MjEwOTk4", "number": 903, "title": "RFC - Make the kubeapiserver connector understand pod ips from kubelet", "bodyText": "I kinda don't know what I'm doing here.\nIt looks like vk + executor add extra annotations after the fact (here) to provide networking metadata back to the control plane.\nThis doesn't work on kubelet at all, so the control plane has no idea what ip address a kubelet pod has.\nI don't know how easy it is going to be to add these annotations via kubelet, but this unblocks things a little bit by getting at least an ip address?", "createdAt": "2020-08-26T21:58:02Z", "url": "https://github.com/Netflix/titus-control-plane/pull/903", "merged": true, "mergeCommit": {"oid": "423620274575ed4e1371a378b5c07523fbdb3739"}, "closed": true, "closedAt": "2020-08-28T22:53:12Z", "author": {"login": "solarkennedy"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCzY_GAFqTQ3NTkyNTk4MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDc1e3ABqjM3MDU4Mzc0NzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1OTI1OTgw", "url": "https://github.com/Netflix/titus-control-plane/pull/903#pullrequestreview-475925980", "createdAt": "2020-08-26T22:17:32Z", "commit": {"oid": "b8f7bfd4de7ac32f78bb8287c2565fc91a89000b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b8f7bfd4de7ac32f78bb8287c2565fc91a89000b", "author": {"user": {"login": "solarkennedy", "name": "Kyle Anderson"}}, "url": "https://github.com/Netflix/titus-control-plane/commit/b8f7bfd4de7ac32f78bb8287c2565fc91a89000b", "committedDate": "2020-08-26T21:52:34Z", "message": "Make the kubeapiserver  connector understand pod ips from kubelet"}, "afterCommit": {"oid": "253b77b7946c0f02818e5fc713b24256a72b31a9", "author": {"user": {"login": "solarkennedy", "name": "Kyle Anderson"}}, "url": "https://github.com/Netflix/titus-control-plane/commit/253b77b7946c0f02818e5fc713b24256a72b31a9", "committedDate": "2020-08-27T18:24:30Z", "message": "Make the KubeNotificationProcessor understand pod ips from kubelet"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2OTk0ODcw", "url": "https://github.com/Netflix/titus-control-plane/pull/903#pullrequestreview-476994870", "createdAt": "2020-08-27T18:54:05Z", "commit": {"oid": "253b77b7946c0f02818e5fc713b24256a72b31a9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODo1NDowNVrOHIdJCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODo1NzowNFrOHIdPdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyODEwNw==", "bodyText": "You can use equivalent method from Evaluators class in titus-common.", "url": "https://github.com/Netflix/titus-control-plane/pull/903#discussion_r478628107", "createdAt": "2020-08-27T18:54:05Z", "author": {"login": "tbak"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/jobmanager/service/JobManagerUtil.java", "diffHunk": "@@ -148,6 +149,15 @@ public static Task attachPlacementData(Task task, Optional<TitusExecutorDetails>\n         }).orElse(task);\n     }\n \n+    public static Task attachKubeletData(Task task, PodWrapper podWrapper) {\n+        String ipv4 = podWrapper.getV1Pod().getStatus().getPodIP();\n+        Map<String, String> newContext = new HashMap<>(task.getTaskContext());\n+        BiConsumer<String, String> contextSetter = (key, value) -> StringExt.applyIfNonEmpty(value, v -> newContext.put(key, v));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "253b77b7946c0f02818e5fc713b24256a72b31a9"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyODU0Mw==", "bodyText": "You should check defensively that status is not null as well.", "url": "https://github.com/Netflix/titus-control-plane/pull/903#discussion_r478628543", "createdAt": "2020-08-27T18:54:54Z", "author": {"login": "tbak"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/jobmanager/service/JobManagerUtil.java", "diffHunk": "@@ -148,6 +149,15 @@ public static Task attachPlacementData(Task task, Optional<TitusExecutorDetails>\n         }).orElse(task);\n     }\n \n+    public static Task attachKubeletData(Task task, PodWrapper podWrapper) {\n+        String ipv4 = podWrapper.getV1Pod().getStatus().getPodIP();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "253b77b7946c0f02818e5fc713b24256a72b31a9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyOTE5NA==", "bodyText": "executorDetailsOpt == null || executorDetailsOpt.isEmpty()", "url": "https://github.com/Netflix/titus-control-plane/pull/903#discussion_r478629194", "createdAt": "2020-08-27T18:56:04Z", "author": {"login": "tbak"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/jobmanager/service/KubeNotificationProcessor.java", "diffHunk": "@@ -290,8 +290,13 @@ static Task updateTaskStatus(PodWrapper podWrapper,\n                 .build();\n \n         Task fixedTask = fillInMissingStates(podWrapper, updatedTask);\n-        Task taskWithPlacementData = JobManagerUtil.attachPlacementData(fixedTask, executorDetailsOpt);\n-        Task taskWithNodeMetadata = node.map(n -> attachNodeMetadata(taskWithPlacementData, n)).orElse(taskWithPlacementData);\n+        Task taskWithExecutorData;\n+        if (executorDetailsOpt == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "253b77b7946c0f02818e5fc713b24256a72b31a9"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyOTc1MQ==", "bodyText": "That is not need needed?", "url": "https://github.com/Netflix/titus-control-plane/pull/903#discussion_r478629751", "createdAt": "2020-08-27T18:57:04Z", "author": {"login": "tbak"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeUtil.java", "diffHunk": "@@ -127,7 +127,21 @@ public static boolean isPodPhaseTerminal(String phase) {\n                     )\n             );\n             return Optional.of(titusExecutorDetails);\n+        } else if (!Strings.isNullOrEmpty(pod.getStatus().getPodIP())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "253b77b7946c0f02818e5fc713b24256a72b31a9"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTYzNTIy", "url": "https://github.com/Netflix/titus-control-plane/pull/903#pullrequestreview-477163522", "createdAt": "2020-08-28T00:15:35Z", "commit": {"oid": "253b77b7946c0f02818e5fc713b24256a72b31a9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "253b77b7946c0f02818e5fc713b24256a72b31a9", "author": {"user": {"login": "solarkennedy", "name": "Kyle Anderson"}}, "url": "https://github.com/Netflix/titus-control-plane/commit/253b77b7946c0f02818e5fc713b24256a72b31a9", "committedDate": "2020-08-27T18:24:30Z", "message": "Make the KubeNotificationProcessor understand pod ips from kubelet"}, "afterCommit": {"oid": "ac07a43619689f39f9d26e84536ad39bccac89bb", "author": {"user": {"login": "solarkennedy", "name": "Kyle Anderson"}}, "url": "https://github.com/Netflix/titus-control-plane/commit/ac07a43619689f39f9d26e84536ad39bccac89bb", "committedDate": "2020-08-28T17:09:27Z", "message": "Make the KubeNotificationProcessor understand pod ips from kubelet"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTAwODc3", "url": "https://github.com/Netflix/titus-control-plane/pull/903#pullrequestreview-477900877", "createdAt": "2020-08-28T17:19:41Z", "commit": {"oid": "ac07a43619689f39f9d26e84536ad39bccac89bb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzoxOTo0MVrOHJOhTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzoxOTo0MVrOHJOhTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzNzEzNA==", "bodyText": "We should also add if(podWrapper.getV1Pod().getStatus() == null) { return task; }", "url": "https://github.com/Netflix/titus-control-plane/pull/903#discussion_r479437134", "createdAt": "2020-08-28T17:19:41Z", "author": {"login": "tbak"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/jobmanager/service/JobManagerUtil.java", "diffHunk": "@@ -148,6 +149,15 @@ public static Task attachPlacementData(Task task, Optional<TitusExecutorDetails>\n         }).orElse(task);\n     }\n \n+    public static Task attachKubeletData(Task task, PodWrapper podWrapper) {\n+        String ipv4 = podWrapper.getV1Pod().getStatus().getPodIP();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYyODU0Mw=="}, "originalCommit": {"oid": "253b77b7946c0f02818e5fc713b24256a72b31a9"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86c07955c5ab9989924324c4fe51989b7619d30d", "author": {"user": {"login": "solarkennedy", "name": "Kyle Anderson"}}, "url": "https://github.com/Netflix/titus-control-plane/commit/86c07955c5ab9989924324c4fe51989b7619d30d", "committedDate": "2020-08-28T17:23:51Z", "message": "Added test case for pod ips in kubelet"}, "afterCommit": {"oid": "3eb607a9a6dedf2edf30a39cb67329ed22fef603", "author": {"user": {"login": "solarkennedy", "name": "Kyle Anderson"}}, "url": "https://github.com/Netflix/titus-control-plane/commit/3eb607a9a6dedf2edf30a39cb67329ed22fef603", "committedDate": "2020-08-28T17:32:25Z", "message": "Added test case for pod ips in kubelet"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTgzMzg0", "url": "https://github.com/Netflix/titus-control-plane/pull/903#pullrequestreview-477983384", "createdAt": "2020-08-28T19:42:35Z", "commit": {"oid": "3eb607a9a6dedf2edf30a39cb67329ed22fef603"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTo0MjozNVrOHJSbhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTo0MjozNVrOHJSbhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMTE5MQ==", "bodyText": "minor: formatting is odd here. There's code style config file for IntelliJ you can use in the codequality/ folder", "url": "https://github.com/Netflix/titus-control-plane/pull/903#discussion_r479501191", "createdAt": "2020-08-28T19:42:35Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/jobmanager/service/JobManagerUtil.java", "diffHunk": "@@ -148,6 +149,20 @@ public static Task attachPlacementData(Task task, Optional<TitusExecutorDetails>\n         }).orElse(task);\n     }\n \n+    public static Task attachKubeletData(Task task, PodWrapper podWrapper) {\n+        if(podWrapper.getV1Pod().getStatus() == null) { return task; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eb607a9a6dedf2edf30a39cb67329ed22fef603"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTgzNzg5", "url": "https://github.com/Netflix/titus-control-plane/pull/903#pullrequestreview-477983789", "createdAt": "2020-08-28T19:43:22Z", "commit": {"oid": "3eb607a9a6dedf2edf30a39cb67329ed22fef603"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTo0MzoyMlrOHJSc3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTo0MzoyMlrOHJSc3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMTUzNQ==", "bodyText": "minor: remove the else (previous if clause already has an early return) and reduce indentation level", "url": "https://github.com/Netflix/titus-control-plane/pull/903#discussion_r479501535", "createdAt": "2020-08-28T19:43:22Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/jobmanager/service/JobManagerUtil.java", "diffHunk": "@@ -148,6 +149,20 @@ public static Task attachPlacementData(Task task, Optional<TitusExecutorDetails>\n         }).orElse(task);\n     }\n \n+    public static Task attachKubeletData(Task task, PodWrapper podWrapper) {\n+        if(podWrapper.getV1Pod().getStatus() == null) { return task; }\n+        String ipv4 = podWrapper.getV1Pod().getStatus().getPodIP();\n+        if (ipv4 == null || ipv4.isEmpty()) {\n+            return task;\n+        } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eb607a9a6dedf2edf30a39cb67329ed22fef603"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTg2MDE0", "url": "https://github.com/Netflix/titus-control-plane/pull/903#pullrequestreview-477986014", "createdAt": "2020-08-28T19:47:29Z", "commit": {"oid": "3eb607a9a6dedf2edf30a39cb67329ed22fef603"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTo0NzoyOVrOHJSkCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTo0NzoyOVrOHJSkCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMzM3MA==", "bodyText": "odd formatting, please use the code-style rules in codequality/", "url": "https://github.com/Netflix/titus-control-plane/pull/903#discussion_r479503370", "createdAt": "2020-08-28T19:47:29Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/test/java/com/netflix/titus/master/jobmanager/service/KubeNotificationProcessorTest.java", "diffHunk": "@@ -45,16 +45,7 @@\n import com.netflix.titus.master.mesos.kubeapiserver.direct.model.PodPhase;\n import com.netflix.titus.master.mesos.kubeapiserver.direct.model.PodWrapper;\n import com.netflix.titus.testkit.model.job.JobGenerator;\n-import io.kubernetes.client.openapi.models.V1ContainerState;\n-import io.kubernetes.client.openapi.models.V1ContainerStateRunning;\n-import io.kubernetes.client.openapi.models.V1ContainerStateWaiting;\n-import io.kubernetes.client.openapi.models.V1ContainerStatus;\n-import io.kubernetes.client.openapi.models.V1Node;\n-import io.kubernetes.client.openapi.models.V1NodeAddress;\n-import io.kubernetes.client.openapi.models.V1NodeStatus;\n-import io.kubernetes.client.openapi.models.V1ObjectMeta;\n-import io.kubernetes.client.openapi.models.V1Pod;\n-import io.kubernetes.client.openapi.models.V1PodStatus;\n+import io.kubernetes.client.openapi.models.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eb607a9a6dedf2edf30a39cb67329ed22fef603"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTg2NzAx", "url": "https://github.com/Netflix/titus-control-plane/pull/903#pullrequestreview-477986701", "createdAt": "2020-08-28T19:48:44Z", "commit": {"oid": "3eb607a9a6dedf2edf30a39cb67329ed22fef603"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTo0ODo0NFrOHJSmMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTo0ODo0NFrOHJSmMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMzkyMg==", "bodyText": "instead of doing this here, did you consider changing the logic in KubeUtil.getTitusExecutorDetails(pod), and checking whether pod.getStatus().getPodIP() should be used instead of annotations there? Centralizing this logic in that method looks cleaner to me. As more metadata is added to the kubelet path, I think it will be easier to keep both code paths more consistent in there.", "url": "https://github.com/Netflix/titus-control-plane/pull/903#discussion_r479503922", "createdAt": "2020-08-28T19:48:44Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/jobmanager/service/KubeNotificationProcessor.java", "diffHunk": "@@ -290,8 +290,13 @@ static Task updateTaskStatus(PodWrapper podWrapper,\n                 .build();\n \n         Task fixedTask = fillInMissingStates(podWrapper, updatedTask);\n-        Task taskWithPlacementData = JobManagerUtil.attachPlacementData(fixedTask, executorDetailsOpt);\n-        Task taskWithNodeMetadata = node.map(n -> attachNodeMetadata(taskWithPlacementData, n)).orElse(taskWithPlacementData);\n+        Task taskWithExecutorData;\n+        if (executorDetailsOpt.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eb607a9a6dedf2edf30a39cb67329ed22fef603"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MDEwMDAw", "url": "https://github.com/Netflix/titus-control-plane/pull/903#pullrequestreview-478010000", "createdAt": "2020-08-28T20:33:38Z", "commit": {"oid": "c9da78c2266510e1e1dcdeb9170af79fc292dee1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMDozMzozOFrOHJTtMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMDozMzozOFrOHJTtMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMjA5OA==", "bodyText": "minor: missed formatting here", "url": "https://github.com/Netflix/titus-control-plane/pull/903#discussion_r479522098", "createdAt": "2020-08-28T20:33:38Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeUtil.java", "diffHunk": "@@ -132,6 +132,7 @@ public static boolean isPodPhaseTerminal(String phase) {\n     }\n \n     public static Optional<V1ContainerState> findContainerState(V1Pod pod) {\n+        if(pod.getStatus() == null) { return Optional.empty(); }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9da78c2266510e1e1dcdeb9170af79fc292dee1"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MDEzMDgy", "url": "https://github.com/Netflix/titus-control-plane/pull/903#pullrequestreview-478013082", "createdAt": "2020-08-28T20:40:00Z", "commit": {"oid": "c9da78c2266510e1e1dcdeb9170af79fc292dee1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4ce6b420c0f48f3659f1bbe3523b07e971c448f", "author": {"user": {"login": "solarkennedy", "name": "Kyle Anderson"}}, "url": "https://github.com/Netflix/titus-control-plane/commit/e4ce6b420c0f48f3659f1bbe3523b07e971c448f", "committedDate": "2020-08-28T22:34:28Z", "message": "Make the KubeNotificationProcessor understand pod ips from kubelet"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9da78c2266510e1e1dcdeb9170af79fc292dee1", "author": {"user": {"login": "solarkennedy", "name": "Kyle Anderson"}}, "url": "https://github.com/Netflix/titus-control-plane/commit/c9da78c2266510e1e1dcdeb9170af79fc292dee1", "committedDate": "2020-08-28T20:13:35Z", "message": "Format code according to the shared style"}, "afterCommit": {"oid": "e4ce6b420c0f48f3659f1bbe3523b07e971c448f", "author": {"user": {"login": "solarkennedy", "name": "Kyle Anderson"}}, "url": "https://github.com/Netflix/titus-control-plane/commit/e4ce6b420c0f48f3659f1bbe3523b07e971c448f", "committedDate": "2020-08-28T22:34:28Z", "message": "Make the KubeNotificationProcessor understand pod ips from kubelet"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 580, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}