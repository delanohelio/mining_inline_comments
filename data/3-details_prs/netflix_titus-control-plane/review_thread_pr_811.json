{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5ODcyNTUx", "number": 811, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo0Mjo0OVrODoxr-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo0NDo1M1rODoxv9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDgzNzA3OnYy", "diffSide": "RIGHT", "path": "titus-common/src/main/java/com/netflix/titus/common/util/feature/FeatureGuards.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo0Mjo0OVrOF3iJSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo0Mjo0OVrOF3iJSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3NTQzNQ==", "bodyText": "Can you document the intended behavior of this method? I can see it being confusing due to having to figure out how multiple feature guards are composed together.", "url": "https://github.com/Netflix/titus-control-plane/pull/811#discussion_r393775435", "createdAt": "2020-03-17T15:42:49Z", "author": {"login": "corindwyer"}, "path": "titus-common/src/main/java/com/netflix/titus/common/util/feature/FeatureGuards.java", "diffHunk": "@@ -19,10 +19,31 @@\n import java.util.function.Function;\n import java.util.function.Predicate;\n \n+import com.netflix.titus.common.util.feature.FeatureGuard.FeatureGuardResult;\n+\n public class FeatureGuards {\n \n-    public static <T> Predicate<T> toPredicate(FeatureGuard<T> featureGuard) {\n-        return value -> featureGuard.matches(value) == FeatureGuard.FeatureGuardResult.Approved;\n+    public static <T> Predicate<T> toPredicate(FeatureGuard<T>... featureGuard) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fd8b2c3ee39c69639c91b6b5058c493036805b1"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MDg0NzI3OnYy", "diffSide": "RIGHT", "path": "titus-server-runtime/src/main/java/com/netflix/titus/runtime/FeatureFlagModule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo0NDo1M1rOF3iPrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo0NDo1M1rOF3iPrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc3NzA2OQ==", "bodyText": "Can you write a test with common cases for this predicate?", "url": "https://github.com/Netflix/titus-control-plane/pull/811#discussion_r393777069", "createdAt": "2020-03-17T15:44:53Z", "author": {"login": "corindwyer"}, "path": "titus-server-runtime/src/main/java/com/netflix/titus/runtime/FeatureFlagModule.java", "diffHunk": "@@ -155,16 +158,22 @@ public FeatureGuardWhiteListConfiguration getJobActivityPublishFeatureGuardConfi\n     @Provides\n     @Singleton\n     @Named(KUBE_SCHEDULER_FEATURE)\n-    public Predicate<JobDescriptor> getKubeSchedulerFeaturePredicate(@Named(KUBE_SCHEDULER_FEATURE) FeatureGuardWhiteListConfiguration configuration) {\n-\n-        Predicate<JobDescriptor> routingPredicate = FeatureGuards.toPredicate(\n-                FeatureGuards.fromField(\n-                        JobDescriptor::getApplicationName,\n-                        FeatureGuards.newWhiteListFromConfiguration(configuration).build()\n-                )\n+    public Predicate<Pair<JobDescriptor, ApplicationSLA>> getKubeSchedulerFeaturePredicate(ConfigProxyFactory factory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fd8b2c3ee39c69639c91b6b5058c493036805b1"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4100, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}