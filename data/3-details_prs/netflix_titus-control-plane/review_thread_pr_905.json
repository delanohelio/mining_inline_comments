{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0OTEzMjg3", "number": 905, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTo0NDowNlrOEdzJRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTo0NDowNlrOEdzJRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjgyMTE4OnYy", "diffSide": "RIGHT", "path": "titus-common/src/main/java/com/netflix/titus/common/util/limiter/Limiters.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTo0NDowNlrOHJLdVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODo0NDozMFrOHJQ7HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM4Njk2NQ==", "bodyText": "We should return an actual strategy here.", "url": "https://github.com/Netflix/titus-control-plane/pull/905#discussion_r479386965", "createdAt": "2020-08-28T15:44:06Z", "author": {"login": "tbak"}, "path": "titus-common/src/main/java/com/netflix/titus/common/util/limiter/Limiters.java", "diffHunk": "@@ -75,4 +80,54 @@ public static TokenBucket createInstrumentedFixedIntervalTokenBucket(String name\n                 titusRuntime\n         );\n     }\n+\n+    private static class Unlimited implements TokenBucket {\n+        private final String name;\n+\n+        public Unlimited(String name) {\n+            this.name = name;\n+        }\n+\n+        @Override\n+        public String getName() {\n+            return name;\n+        }\n+\n+        @Override\n+        public long getCapacity() {\n+            return Long.MAX_VALUE;\n+        }\n+\n+        @Override\n+        public long getNumberOfTokens() {\n+            return Long.MAX_VALUE;\n+        }\n+\n+        @Override\n+        public boolean tryTake() {\n+            return true;\n+        }\n+\n+        @Override\n+        public boolean tryTake(long numberOfTokens) {\n+            return true;\n+        }\n+\n+        @Override\n+        public void take() {\n+        }\n+\n+        @Override\n+        public void take(long numberOfTokens) {\n+        }\n+\n+        @Override\n+        public void refill(long numberOfToken) {\n+        }\n+\n+        @Override\n+        public RefillStrategy getRefillStrategy() {\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54d6e23c771bdeff83d2aa7ab2b44fa91f953d7a"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ3NjUwOQ==", "bodyText": "Yeah, thanks for keeping me honest. I was being lazy here. I will add it", "url": "https://github.com/Netflix/titus-control-plane/pull/905#discussion_r479476509", "createdAt": "2020-08-28T18:44:30Z", "author": {"login": "fabiokung"}, "path": "titus-common/src/main/java/com/netflix/titus/common/util/limiter/Limiters.java", "diffHunk": "@@ -75,4 +80,54 @@ public static TokenBucket createInstrumentedFixedIntervalTokenBucket(String name\n                 titusRuntime\n         );\n     }\n+\n+    private static class Unlimited implements TokenBucket {\n+        private final String name;\n+\n+        public Unlimited(String name) {\n+            this.name = name;\n+        }\n+\n+        @Override\n+        public String getName() {\n+            return name;\n+        }\n+\n+        @Override\n+        public long getCapacity() {\n+            return Long.MAX_VALUE;\n+        }\n+\n+        @Override\n+        public long getNumberOfTokens() {\n+            return Long.MAX_VALUE;\n+        }\n+\n+        @Override\n+        public boolean tryTake() {\n+            return true;\n+        }\n+\n+        @Override\n+        public boolean tryTake(long numberOfTokens) {\n+            return true;\n+        }\n+\n+        @Override\n+        public void take() {\n+        }\n+\n+        @Override\n+        public void take(long numberOfTokens) {\n+        }\n+\n+        @Override\n+        public void refill(long numberOfToken) {\n+        }\n+\n+        @Override\n+        public RefillStrategy getRefillStrategy() {\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM4Njk2NQ=="}, "originalCommit": {"oid": "54d6e23c771bdeff83d2aa7ab2b44fa91f953d7a"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4021, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}