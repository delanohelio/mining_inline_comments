{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0ODQ1OTYw", "number": 904, "title": "Feature/resource pool assignment", "bodyText": "Resource pools replace tiers. When a KubeScheduler pod is created for a task, a resource pool affinity rules must be associated with it.", "createdAt": "2020-08-27T17:27:07Z", "url": "https://github.com/Netflix/titus-control-plane/pull/904", "merged": true, "mergeCommit": {"oid": "e5e342a9e864b75a94e2a9ff3cfd5f4598f1709f"}, "closed": true, "closedAt": "2020-08-27T19:21:06Z", "author": {"login": "tbak"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCeUVngH2gAyNDc0ODQ1OTYwOmU5YmU4ZWYwZDE4OTYwNmU0MTQzZTY1M2QzMzE5YzNlNjFiMTA4MWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDFSihgH2gAyNDc0ODQ1OTYwOjczYzhiOGJhNzQ2OTA5ZjU2Njc2YTYwOWZmMjc1NGFlOWMzOWRjM2Y=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e9be8ef0d189606e4143e653d3319c3e61b1081f", "author": {"user": {"login": "tbak", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/e9be8ef0d189606e4143e653d3319c3e61b1081f", "committedDate": "2020-08-25T21:44:27Z", "message": "Resource pool to pod assignment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c331e8069ddd64803228a09639611afede4767d2", "author": {"user": {"login": "tbak", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/c331e8069ddd64803228a09639611afede4767d2", "committedDate": "2020-08-27T17:23:39Z", "message": "Minor cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2OTM4NzA3", "url": "https://github.com/Netflix/titus-control-plane/pull/904#pullrequestreview-476938707", "createdAt": "2020-08-27T17:33:25Z", "commit": {"oid": "c331e8069ddd64803228a09639611afede4767d2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNzozMzoyNVrOHIactQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNzo0NTozN1rOHIa4Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4Mzk4OQ==", "bodyText": "please document what the Map return should contain", "url": "https://github.com/Netflix/titus-control-plane/pull/904#discussion_r478583989", "createdAt": "2020-08-27T17:33:25Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/PodAffinityFactory.java", "diffHunk": "@@ -26,5 +29,5 @@\n  */\n public interface PodAffinityFactory {\n \n-    V1Affinity buildV1Affinity(Job<?> job, Task task);\n+    Pair<V1Affinity, Map<String, String>> buildV1Affinity(Job<?> job, Task task);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c331e8069ddd64803228a09639611afede4767d2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4Njc4NQ==", "bodyText": "minor: thoughts on deferring this to after leader activation?", "url": "https://github.com/Netflix/titus-control-plane/pull/904#discussion_r478586785", "createdAt": "2020-08-27T17:38:14Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/resourcepool/CapacityGroupPodResourcePoolResolver.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.netflix.titus.master.mesos.kubeapiserver.direct.resourcepool;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.locks.Lock;\n+import java.util.concurrent.locks.ReentrantLock;\n+import java.util.regex.Pattern;\n+\n+import com.google.common.collect.Iterators;\n+import com.netflix.archaius.api.Config;\n+import com.netflix.titus.api.jobmanager.model.job.Job;\n+import com.netflix.titus.api.model.ApplicationSLA;\n+import com.netflix.titus.common.runtime.TitusRuntime;\n+import com.netflix.titus.common.util.tuple.Pair;\n+import com.netflix.titus.master.jobmanager.service.JobManagerUtil;\n+import com.netflix.titus.master.mesos.kubeapiserver.direct.DirectKubeConfiguration;\n+import com.netflix.titus.master.service.management.ApplicationSlaManagementService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class CapacityGroupPodResourcePoolResolver implements PodResourcePoolResolver {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(CapacityGroupPodResourcePoolResolver.class);\n+\n+    private final DirectKubeConfiguration configuration;\n+    private final Config config;\n+    private final ApplicationSlaManagementService capacityGroupService;\n+    private final TitusRuntime titusRuntime;\n+\n+    private final Lock lock = new ReentrantLock();\n+    private volatile List<Pair<String, Pattern>> resourcePoolToCapacityGroupMappers;\n+    private volatile long lastUpdate;\n+\n+    public CapacityGroupPodResourcePoolResolver(DirectKubeConfiguration configuration,\n+                                                Config config,\n+                                                ApplicationSlaManagementService capacityGroupService,\n+                                                TitusRuntime titusRuntime) {\n+        this.configuration = configuration;\n+        this.config = config;\n+        this.capacityGroupService = capacityGroupService;\n+        this.titusRuntime = titusRuntime;\n+        refreshResourcePoolToCapacityGroupMappers();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c331e8069ddd64803228a09639611afede4767d2"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4OTcyMw==", "bodyText": "minor: consider adding a GpuResourcePoolResolver into the chain to automatically assign jobs requesting GPUs to RESOURCE_POOL_GPU_PREFIX pools", "url": "https://github.com/Netflix/titus-control-plane/pull/904#discussion_r478589723", "createdAt": "2020-08-27T17:43:25Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/KubeModule.java", "diffHunk": "@@ -77,6 +87,24 @@ public FixedIntervalTokenBucketConfiguration getGcUnknownPodsTokenBucketConfigur\n         return factory.newProxy(FixedIntervalTokenBucketConfiguration.class, \"titusMaster.kube.gcUnknownPodsTokenBucket\");\n     }\n \n+    @Provides\n+    @Singleton\n+    public PodResourcePoolResolver getPodResourcePoolResolver(DirectKubeConfiguration configuration,\n+                                                              Config config,\n+                                                              ApplicationSlaManagementService capacityGroupService,\n+                                                              TitusRuntime titusRuntime) {\n+        return new PodResourcePoolResolverChain(Arrays.asList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c331e8069ddd64803228a09639611afede4767d2"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU5MTAwMw==", "bodyText": "is this backwards compatible? I think we may need to keep double writing for now until all other components are aligned", "url": "https://github.com/Netflix/titus-control-plane/pull/904#discussion_r478591003", "createdAt": "2020-08-27T17:45:37Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/mesos/kubeapiserver/direct/taint/DefaultTaintTolerationFactory.java", "diffHunk": "@@ -56,23 +49,13 @@ public DefaultTaintTolerationFactory(DirectKubeConfiguration configuration,\n         tolerations.add(Tolerations.TOLERATION_VIRTUAL_KUBLET);\n         tolerations.add(Tolerations.TOLERATION_KUBE_SCHEDULER);\n \n-        tolerations.add(resolveTierToleration(job));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c331e8069ddd64803228a09639611afede4767d2"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2OTUxNjM0", "url": "https://github.com/Netflix/titus-control-plane/pull/904#pullrequestreview-476951634", "createdAt": "2020-08-27T17:51:15Z", "commit": {"oid": "c331e8069ddd64803228a09639611afede4767d2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73c8b8ba746909f56676a609ff2754ae9c39dc3f", "author": {"user": {"login": "tbak", "name": null}}, "url": "https://github.com/Netflix/titus-control-plane/commit/73c8b8ba746909f56676a609ff2754ae9c39dc3f", "committedDate": "2020-08-27T19:08:47Z", "message": "Bug fixes and code review updates"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 582, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}