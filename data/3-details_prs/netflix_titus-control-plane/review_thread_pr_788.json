{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5ODg5MzA3", "number": 788, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMDoxMDoxN1rODi5jNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMDoxNzoxNlrODi5rMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTIxMDc3OnYy", "diffSide": "RIGHT", "path": "titus-server-master/src/main/java/com/netflix/titus/master/jobmanager/service/KubeNotificationProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMDoxMDoxN1rOFuZ81Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMDoxMDoxN1rOFuZ81Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwMzk4OQ==", "bodyText": "Failed phase can also have a deletion timestamp.", "url": "https://github.com/Netflix/titus-control-plane/pull/788#discussion_r384203989", "createdAt": "2020-02-26T00:10:17Z", "author": {"login": "corindwyer"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/jobmanager/service/KubeNotificationProcessor.java", "diffHunk": "@@ -193,11 +196,31 @@ public void shutdown() {\n         return ReactorExt.toMono(v3JobOperations.updateTask(\n                 task.getId(),\n                 currentTask -> {\n-                    TaskStatus newStatus = TaskStatus.newBuilder()\n-                            .withState(newTaskState)\n-                            .withReasonCode(TaskStatus.REASON_NORMAL)\n-                            .withReasonMessage(\"Kube pod notification\")\n-                            .build();\n+                    TaskStatus newStatus;\n+\n+                    if (newTaskState != TaskState.Finished) {\n+                        newStatus = TaskStatus.newBuilder()\n+                                .withState(newTaskState)\n+                                .withReasonCode(TaskStatus.REASON_NORMAL)\n+                                .withReasonMessage(\"Kube pod notification\")\n+                                .build();\n+                    } else {\n+                        TaskStatus.Builder newStatusBuilder = TaskStatus.newBuilder().withState(TaskState.Finished);\n+\n+                        if(\"failed\".equalsIgnoreCase(pod.getStatus().getPhase())) {\n+                            newStatusBuilder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "928388c111a7c50cc06e75864bc1dcaa409e1afd"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTIzMTIxOnYy", "diffSide": "RIGHT", "path": "titus-common/src/main/java/com/netflix/titus/common/util/loadshedding/SpectatorAdmissionController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMDoxNzoxNlrOFuaH2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo1Mzo0NlrOFuxOmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwNjgxMQ==", "bodyText": "minor: s/notSet/unknown", "url": "https://github.com/Netflix/titus-control-plane/pull/788#discussion_r384206811", "createdAt": "2020-02-26T00:17:16Z", "author": {"login": "fabiokung"}, "path": "titus-common/src/main/java/com/netflix/titus/common/util/loadshedding/SpectatorAdmissionController.java", "diffHunk": "@@ -42,18 +44,18 @@ public AdmissionControllerResponse apply(AdmissionControllerRequest request) {\n             AdmissionControllerResponse result = delegate.apply(request);\n \n             registry.counter(METRIC_NAME,\n-                    \"callerId\", request.getCallerId(),\n-                    \"endpointName\", request.getEndpointName(),\n+                    \"callerId\", getNonEmptyOrDefault(request.getCallerId(), \"notSet\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "928388c111a7c50cc06e75864bc1dcaa409e1afd"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4NTM2OQ==", "bodyText": "I have purposefully chose different word, as we use unknown in many places in the code already. I want here something that is distinct, as we know that an empty value is a bug. Maybe better would be requiredButNotSet.", "url": "https://github.com/Netflix/titus-control-plane/pull/788#discussion_r384585369", "createdAt": "2020-02-26T15:53:46Z", "author": {"login": "tbak"}, "path": "titus-common/src/main/java/com/netflix/titus/common/util/loadshedding/SpectatorAdmissionController.java", "diffHunk": "@@ -42,18 +44,18 @@ public AdmissionControllerResponse apply(AdmissionControllerRequest request) {\n             AdmissionControllerResponse result = delegate.apply(request);\n \n             registry.counter(METRIC_NAME,\n-                    \"callerId\", request.getCallerId(),\n-                    \"endpointName\", request.getEndpointName(),\n+                    \"callerId\", getNonEmptyOrDefault(request.getCallerId(), \"notSet\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwNjgxMQ=="}, "originalCommit": {"oid": "928388c111a7c50cc06e75864bc1dcaa409e1afd"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4073, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}