{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNDA1MTAy", "number": 836, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1MDozN1rODxTmVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMToxOToyNFrODxZH2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDI3OTI2OnYy", "diffSide": "RIGHT", "path": "titus-common-ext/elasticsearch/src/main/java/com/netflix/titus/ext/elasticsearch/EsClientConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1MDozN1rOGEs5rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1MDozN1rOGEs5rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MzE0OQ==", "bodyText": "I think for consistency we should use the Archaius2 annotations and factories provided by Archaius2Ext.", "url": "https://github.com/Netflix/titus-control-plane/pull/836#discussion_r407583149", "createdAt": "2020-04-13T16:50:37Z", "author": {"login": "tbak"}, "path": "titus-common-ext/elasticsearch/src/main/java/com/netflix/titus/ext/elasticsearch/EsClientConfiguration.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.netflix.titus.ext.elasticsearch;\n+\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Configuration\n+public class EsClientConfiguration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56eacff381ee61bdfd8d70fa4d61a904042b150b"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDI4NDg1OnYy", "diffSide": "RIGHT", "path": "titus-common-ext/elasticsearch/src/test/java/com/netflix/titus/ext/elasticsearch/DefaultEsWebClientFactoryTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1MjoxOFrOGEs9Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1MjoxOFrOGEs9Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NDAyNw==", "bodyText": "Not used?", "url": "https://github.com/Netflix/titus-control-plane/pull/836#discussion_r407584027", "createdAt": "2020-04-13T16:52:18Z", "author": {"login": "tbak"}, "path": "titus-common-ext/elasticsearch/src/test/java/com/netflix/titus/ext/elasticsearch/DefaultEsWebClientFactoryTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.netflix.titus.ext.elasticsearch;\n+\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.assertj.core.api.Java6Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class DefaultEsWebClientFactoryTest {\n+    private static final Logger logger = LoggerFactory.getLogger(DefaultEsWebClientFactoryTest.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56eacff381ee61bdfd8d70fa4d61a904042b150b"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDI5MzE1OnYy", "diffSide": "RIGHT", "path": "titus-common-ext/elasticsearch/src/test/java/com/netflix/titus/ext/elasticsearch/EsExternalResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1NDozOFrOGEtCFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1NDozOFrOGEtCFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NTMwMA==", "bodyText": "With Archaius2 interface getting defaults is a one liner.", "url": "https://github.com/Netflix/titus-control-plane/pull/836#discussion_r407585300", "createdAt": "2020-04-13T16:54:38Z", "author": {"login": "tbak"}, "path": "titus-common-ext/elasticsearch/src/test/java/com/netflix/titus/ext/elasticsearch/EsExternalResource.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.netflix.titus.ext.elasticsearch;\n+\n+import com.google.common.base.Preconditions;\n+import org.junit.rules.ExternalResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.web.reactive.function.client.WebClient;\n+\n+public class EsExternalResource extends ExternalResource {\n+    private static final Logger logger = LoggerFactory.getLogger(EsExternalResource.class);\n+\n+    private EsClientConfiguration esClientConfiguration;\n+\n+    @Override\n+    protected void before() throws Throwable {\n+        String esHostName = Preconditions.checkNotNull(System.getenv(\"ES_HOST_NAME\"),\n+                \"'ES_HOST_NAME' environment variable not set\"\n+        );\n+\n+        String esPortStr = Preconditions.checkNotNull(System.getenv(\"ES_PORT\"),\n+                \"'ES_PORT' environment variable not set\"\n+        );\n+\n+        int esPort = Integer.parseInt(esPortStr);\n+\n+        // check if a ES cluster state is Green\n+        WebClient webClient = WebClient.builder()\n+                .baseUrl(String.format(\"http://%s:%d\", esHostName, esPort)).build();\n+        String resp = webClient.get()\n+                .uri(\"/_cat/health\")\n+                .retrieve()\n+                .bodyToMono(String.class).block();\n+\n+        if (resp == null || !resp.contains(\"green\")) {\n+            throw new IllegalStateException(String.format(\"Elastic search cluster %s:%d not READY\", esHostName, esPort));\n+        }\n+\n+        buildEsClientConfiguration(esHostName, esPort);\n+    }\n+\n+    public EsClientConfiguration getEsClientConfiguration() {\n+        return esClientConfiguration;\n+    }\n+\n+    private void buildEsClientConfiguration(String esHostName, int esPort) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56eacff381ee61bdfd8d70fa4d61a904042b150b"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDI5NzQ3OnYy", "diffSide": "RIGHT", "path": "titus-common-ext/elasticsearch/src/test/java/com/netflix/titus/ext/elasticsearch/TestDoc.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1NTo0NlrOGEtEmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1NTo0NlrOGEtEmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NTk0Ng==", "bodyText": "Minor. Constructors should be first, followed by getters and last setters.", "url": "https://github.com/Netflix/titus-control-plane/pull/836#discussion_r407585946", "createdAt": "2020-04-13T16:55:46Z", "author": {"login": "tbak"}, "path": "titus-common-ext/elasticsearch/src/test/java/com/netflix/titus/ext/elasticsearch/TestDoc.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.netflix.titus.ext.elasticsearch;\n+\n+public class TestDoc implements EsDoc {\n+    String id;\n+    String state;\n+    long ts;\n+\n+    public TestDoc() {\n+    }\n+\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public void setState(String state) {\n+        this.state = state;\n+    }\n+\n+    public void setTs(long ts) {\n+        this.ts = ts;\n+    }\n+\n+    public TestDoc(String id, String state, long ts) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56eacff381ee61bdfd8d70fa4d61a904042b150b"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTE4NDI2OnYy", "diffSide": "RIGHT", "path": "titus-common-ext/elasticsearch/src/main/java/com/netflix/titus/ext/elasticsearch/model/BulkEsIndexResp.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMToxOToyNFrOGE1u8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMjozNDoyMFrOGE7_DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyNzg1Ng==", "bodyText": "are these POJOs auto-generated code? Can they be immutable? They are inconsistent in some other ways as well, it would be nice to normalize them all with:\n\nmany don't have private fields\nnon-standard coding conventions for field and getter/setter methods on some (with underscores)\nonly some implement toString()\ndo they all need equals() and hashcode()?", "url": "https://github.com/Netflix/titus-control-plane/pull/836#discussion_r407727856", "createdAt": "2020-04-13T21:19:24Z", "author": {"login": "fabiokung"}, "path": "titus-common-ext/elasticsearch/src/main/java/com/netflix/titus/ext/elasticsearch/model/BulkEsIndexResp.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.netflix.titus.ext.elasticsearch.model;\n+\n+import java.util.List;\n+\n+/**\n+ * Elastic search data model as defined by REST API documentation\n+ * https://www.elastic.co/guide/en/elasticsearch/reference/master/rest-apis.html\n+ */\n+public class BulkEsIndexResp {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46af771c7daf53d36f504d30de97f0e9403bc8dd"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgzMDI4NA==", "bodyText": "Good catch.\nMy initial thought on this was to not make assumptions about Webclient strategy it uses for deserializing ES responses into POJOs. But it seems like spring docs make it clear that it is going to depend on Jackson bindings for WebClient support.", "url": "https://github.com/Netflix/titus-control-plane/pull/836#discussion_r407830284", "createdAt": "2020-04-14T02:34:20Z", "author": {"login": "amit-git"}, "path": "titus-common-ext/elasticsearch/src/main/java/com/netflix/titus/ext/elasticsearch/model/BulkEsIndexResp.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2020 Netflix, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.netflix.titus.ext.elasticsearch.model;\n+\n+import java.util.List;\n+\n+/**\n+ * Elastic search data model as defined by REST API documentation\n+ * https://www.elastic.co/guide/en/elasticsearch/reference/master/rest-apis.html\n+ */\n+public class BulkEsIndexResp {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyNzg1Ng=="}, "originalCommit": {"oid": "46af771c7daf53d36f504d30de97f0e9403bc8dd"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3940, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}