{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxNDIzNTQz", "number": 885, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMDoxNjo1OFrOEPqeew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMDoxNzo1M1rOEPqfbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODYwMDI3OnYy", "diffSide": "RIGHT", "path": "titus-common/src/main/java/com/netflix/titus/common/util/CollectionsExt.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMDoxNjo1OVrOGzf_pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMDozMTo1MFrOGzgW0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NDc1OQ==", "bodyText": "Direct for loop for better performance, as this code might be used in many places?", "url": "https://github.com/Netflix/titus-control-plane/pull/885#discussion_r456654759", "createdAt": "2020-07-17T20:16:59Z", "author": {"login": "tbak"}, "path": "titus-common/src/main/java/com/netflix/titus/common/util/CollectionsExt.java", "diffHunk": "@@ -595,6 +595,31 @@ private CollectionsExt() {\n         return -from - 1;\n     }\n \n+    /**\n+     * Convert all keys to lower case, the behavior is undefined when values clash, and only one will be kept\n+     */\n+    public static <V> Map<String, V> toLowerCaseKeys(Map<String, V> entries) {\n+        return entries.entrySet().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a54b82a9ea3255f292d925245046638bac6dc570"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NDg4NQ==", "bodyText": "Is there a unit test for these methods?", "url": "https://github.com/Netflix/titus-control-plane/pull/885#discussion_r456654885", "createdAt": "2020-07-17T20:17:21Z", "author": {"login": "tbak"}, "path": "titus-common/src/main/java/com/netflix/titus/common/util/CollectionsExt.java", "diffHunk": "@@ -595,6 +595,31 @@ private CollectionsExt() {\n         return -from - 1;\n     }\n \n+    /**\n+     * Convert all keys to lower case, the behavior is undefined when values clash, and only one will be kept\n+     */\n+    public static <V> Map<String, V> toLowerCaseKeys(Map<String, V> entries) {\n+        return entries.entrySet().stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NDc1OQ=="}, "originalCommit": {"oid": "a54b82a9ea3255f292d925245046638bac6dc570"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY2MDY4OA==", "bodyText": "the same performance argument could be made to any other of the CollectionsExt methods, I think this is fine, I will leave it as is for now to avoid early optimization.\nGood point about the unit test, I will add one.", "url": "https://github.com/Netflix/titus-control-plane/pull/885#discussion_r456660688", "createdAt": "2020-07-17T20:31:50Z", "author": {"login": "fabiokung"}, "path": "titus-common/src/main/java/com/netflix/titus/common/util/CollectionsExt.java", "diffHunk": "@@ -595,6 +595,31 @@ private CollectionsExt() {\n         return -from - 1;\n     }\n \n+    /**\n+     * Convert all keys to lower case, the behavior is undefined when values clash, and only one will be kept\n+     */\n+    public static <V> Map<String, V> toLowerCaseKeys(Map<String, V> entries) {\n+        return entries.entrySet().stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NDc1OQ=="}, "originalCommit": {"oid": "a54b82a9ea3255f292d925245046638bac6dc570"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0ODYwMjY4OnYy", "diffSide": "RIGHT", "path": "titus-server-master/src/main/java/com/netflix/titus/master/scheduler/DefaultSchedulingService.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMDoxNzo1M1rOGzgBBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QyMDoyOTo1NVrOGzgTyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NTExMA==", "bodyText": "This isn't entirely a no-op as it sets a gauge", "url": "https://github.com/Netflix/titus-control-plane/pull/885#discussion_r456655110", "createdAt": "2020-07-17T20:17:53Z", "author": {"login": "corindwyer"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/scheduler/DefaultSchedulingService.java", "diffHunk": "@@ -531,6 +531,9 @@ private void processTaskSchedulingFailureCallbacks(Map<FailureKind, Map<V3Queuea\n     }\n \n     private void launchTasks(TaskAssignments taskAssignments) {\n+        if (taskAssignments.getCount() <= 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a54b82a9ea3255f292d925245046638bac6dc570"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NjUzNA==", "bodyText": "I guess it doesn't matter though as it is actually adding a 0 to the AtomicLong which is getting polled.", "url": "https://github.com/Netflix/titus-control-plane/pull/885#discussion_r456656534", "createdAt": "2020-07-17T20:21:34Z", "author": {"login": "corindwyer"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/scheduler/DefaultSchedulingService.java", "diffHunk": "@@ -531,6 +531,9 @@ private void processTaskSchedulingFailureCallbacks(Map<FailureKind, Map<V3Queuea\n     }\n \n     private void launchTasks(TaskAssignments taskAssignments) {\n+        if (taskAssignments.getCount() <= 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NTExMA=="}, "originalCommit": {"oid": "a54b82a9ea3255f292d925245046638bac6dc570"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1OTkxMg==", "bodyText": "exactly, this mirrors the previous behavior better, before #881", "url": "https://github.com/Netflix/titus-control-plane/pull/885#discussion_r456659912", "createdAt": "2020-07-17T20:29:55Z", "author": {"login": "fabiokung"}, "path": "titus-server-master/src/main/java/com/netflix/titus/master/scheduler/DefaultSchedulingService.java", "diffHunk": "@@ -531,6 +531,9 @@ private void processTaskSchedulingFailureCallbacks(Map<FailureKind, Map<V3Queuea\n     }\n \n     private void launchTasks(TaskAssignments taskAssignments) {\n+        if (taskAssignments.getCount() <= 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY1NTExMA=="}, "originalCommit": {"oid": "a54b82a9ea3255f292d925245046638bac6dc570"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3988, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}