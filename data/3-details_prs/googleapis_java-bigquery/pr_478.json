{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NTA2OTk4", "number": 478, "title": "docs(samples): add auth user flow and query", "bodyText": "Thank you for opening a Pull Request! Before submitting your PR, there are a few things you can do to make sure it goes smoothly:\n\n Make sure to open an issue as a bug/issue before writing your code!  That way we can discuss the change, evaluate designs, and agree on the general idea\n Ensure the tests and linter pass\n Code coverage does not decrease (if any source code was changed)\n Appropriate docs were updated (if necessary)", "createdAt": "2020-06-23T11:27:53Z", "url": "https://github.com/googleapis/java-bigquery/pull/478", "merged": true, "mergeCommit": {"oid": "65dffac6af316d0baca5cfbd2b3dd3fae323549d"}, "closed": true, "closedAt": "2020-07-17T15:28:06Z", "author": {"login": "pmakani"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxIjezAFqTQ0MjA4Nzc3MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1tk6hgBqjM1NTY1MDkxMjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDg3Nzcx", "url": "https://github.com/googleapis/java-bigquery/pull/478#pullrequestreview-442087771", "createdAt": "2020-07-03T00:45:36Z", "commit": {"oid": "e61090d7aa403a85dd0aad9dc3cfbccc962d6efb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMDo0NTozN1rOGsgniw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMDo0NjoxOFrOGsgoEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyNDkzOQ==", "bodyText": "getting IllegalArgumentException on this line", "url": "https://github.com/googleapis/java-bigquery/pull/478#discussion_r449324939", "createdAt": "2020-07-03T00:45:37Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/main/java/com/example/bigquery/AuthUserFlow.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_user_flow]\n+import com.google.api.client.auth.oauth2.Credential;\n+import com.google.api.client.extensions.java6.auth.oauth2.AuthorizationCodeInstalledApp;\n+import com.google.api.client.extensions.jetty.auth.oauth2.LocalServerReceiver;\n+import com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow;\n+import com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets;\n+import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.client.util.store.FileDataStoreFactory;\n+import com.google.api.gax.paging.Page;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.UserCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Dataset;\n+import com.google.common.collect.ImmutableList;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.security.GeneralSecurityException;\n+import java.util.List;\n+\n+// Sample to authenticate by using a user credential\n+public class AuthUserFlow {\n+\n+  private static final File DATA_STORE_DIR =\n+      new File(AuthUserFlow.class.getResource(\"/\").getPath(), \"credentials\");\n+  private static final JsonFactory JSON_FACTORY = JacksonFactory.getDefaultInstance();\n+  // i.e redirect_uri http://localhost:61984/Callback\n+  private static final int LOCAL_RECEIVER_PORT = 61984;\n+\n+  public static void runAuthUserFlow() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    /**\n+     * Download your OAuth2 configuration from the Google Developers Console API Credentials page.\n+     * https://console.cloud.google.com/apis/credentials\n+     */\n+    File credentialsPath = new File(\"path/to/your/client_secret.json\");\n+    List<String> scopes = ImmutableList.of(\"https://www.googleapis.com/auth/bigquery\");\n+    authUserFlow(credentialsPath, scopes);\n+  }\n+\n+  public static void authUserFlow(File credentialsPath, List<String> selectedScopes) {\n+    try {\n+\n+      // Load client_secret.json file\n+      GoogleClientSecrets clientSecrets =\n+          GoogleClientSecrets.load(\n+              JSON_FACTORY, new InputStreamReader(new FileInputStream(credentialsPath)));\n+      String clientId = clientSecrets.getDetails().getClientId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61090d7aa403a85dd0aad9dc3cfbccc962d6efb"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyNTA3Mw==", "bodyText": "we cannot upload any files that contains secrets -- have to use GCS\nString sourceUri = \"gs://cloud-devrel-kokoro-resources/java-docs-samples/service-acct.json\"; so we have to figure out how to generate File from gcs path.", "url": "https://github.com/googleapis/java-bigquery/pull/478#discussion_r449325073", "createdAt": "2020-07-03T00:46:18Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/test/java/com/example/bigquery/AuthUserFlowIT.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class AuthUserFlowIT {\n+\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    System.setOut(null);\n+  }\n+\n+  @Test\n+  public void testAuthUserFlow() {\n+    // TODO(stephaniewang526): Replace client_secret.json\n+    /*File credentialsPath = new File(\"\"path/to/your/client_secret.json\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61090d7aa403a85dd0aad9dc3cfbccc962d6efb"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDkwNTAy", "url": "https://github.com/googleapis/java-bigquery/pull/478#pullrequestreview-442090502", "createdAt": "2020-07-03T00:58:41Z", "commit": {"oid": "e61090d7aa403a85dd0aad9dc3cfbccc962d6efb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMDo1ODo0MVrOGsgxIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMDo1ODo0MVrOGsgxIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyNzM5Mg==", "bodyText": "please add in imports\nimport java.io.ByteArrayOutputStream;\nimport java.io.File;\nimport java.io.PrintStream;\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport com.google.common.collect.ImmutableList;\nimport java.util.List;", "url": "https://github.com/googleapis/java-bigquery/pull/478#discussion_r449327392", "createdAt": "2020-07-03T00:58:41Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/test/java/com/example/bigquery/AuthUserFlowIT.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import java.io.ByteArrayOutputStream;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61090d7aa403a85dd0aad9dc3cfbccc962d6efb"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjQ0Njc2", "url": "https://github.com/googleapis/java-bigquery/pull/478#pullrequestreview-443244676", "createdAt": "2020-07-06T16:46:02Z", "commit": {"oid": "bf298d2cb8dd151551b1fe39b1d0a549674575ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjQ4MDgz", "url": "https://github.com/googleapis/java-bigquery/pull/478#pullrequestreview-443248083", "createdAt": "2020-07-06T16:50:04Z", "commit": {"oid": "bf298d2cb8dd151551b1fe39b1d0a549674575ad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjo1MDowNFrOGtfZBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjo1MDowNFrOGtfZBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1MzQxMg==", "bodyText": "change to \"auto\" so user does not need to manually confirm", "url": "https://github.com/googleapis/java-bigquery/pull/478#discussion_r450353412", "createdAt": "2020-07-06T16:50:04Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/main/java/com/example/bigquery/AuthUserQuery.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_user_query]\n+import com.google.api.client.auth.oauth2.Credential;\n+import com.google.api.client.extensions.java6.auth.oauth2.AuthorizationCodeInstalledApp;\n+import com.google.api.client.extensions.jetty.auth.oauth2.LocalServerReceiver;\n+import com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow;\n+import com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets;\n+import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.client.json.jackson2.JacksonFactory;\n+import com.google.api.client.util.store.FileDataStoreFactory;\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.UserCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.cloud.bigquery.TableResult;\n+import com.google.common.collect.ImmutableList;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.security.GeneralSecurityException;\n+import java.util.List;\n+\n+// Sample to query by using a user credential\n+public class AuthUserQuery {\n+\n+  private static final File DATA_STORE_DIR =\n+      new File(AuthUserQuery.class.getResource(\"/\").getPath(), \"credentials\");\n+  private static final JsonFactory JSON_FACTORY = JacksonFactory.getDefaultInstance();\n+  // i.e redirect_uri http://localhost:61984/Callback\n+  private static final int LOCAL_RECEIVER_PORT = 61984;\n+\n+  public static void runAuthUserQuery() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    /**\n+     * Download your OAuth2 configuration from the Google Developers Console API Credentials page.\n+     * https://console.cloud.google.com/apis/credentials\n+     */\n+    Path credentialsPath = Paths.get(\"path/to/your/client_secret.json\");\n+    List<String> scopes = ImmutableList.of(\"https://www.googleapis.com/auth/bigquery\");\n+    String query =\n+        \"SELECT name, SUM(number) as total\"\n+            + \"  FROM `bigquery-public-data.usa_names.usa_1910_current`\"\n+            + \"  WHERE name = 'William'\"\n+            + \"  GROUP BY name;\";\n+    authUserQuery(credentialsPath, scopes, query);\n+  }\n+\n+  public static void authUserQuery(\n+      Path credentialsPath, List<String> selectedScopes, String query) {\n+    // Reading credentials file\n+    try (InputStream inputStream = Files.newInputStream(credentialsPath)) {\n+\n+      // Load client_secret.json file\n+      GoogleClientSecrets clientSecrets =\n+          GoogleClientSecrets.load(JSON_FACTORY, new InputStreamReader(inputStream));\n+      String clientId = clientSecrets.getDetails().getClientId();\n+      String clientSecret = clientSecrets.getDetails().getClientSecret();\n+\n+      // Generate the url that will be used for the consent dialog.\n+      GoogleAuthorizationCodeFlow flow =\n+          new GoogleAuthorizationCodeFlow.Builder(\n+                  GoogleNetHttpTransport.newTrustedTransport(),\n+                  JSON_FACTORY,\n+                  clientSecrets,\n+                  selectedScopes)\n+              .setDataStoreFactory(new FileDataStoreFactory(DATA_STORE_DIR))\n+              .setAccessType(\"offline\")\n+              .setApprovalPrompt(\"force\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf298d2cb8dd151551b1fe39b1d0a549674575ad"}, "originalPosition": 92}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8990b959011f37e548c99e1dd305c3111814c727", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/8990b959011f37e548c99e1dd305c3111814c727", "committedDate": "2020-07-10T05:45:04Z", "message": "docs(samples): add auth user flow and query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5999fc76b2cb7ced874fde0bdcb18ac67d927d7f", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/5999fc76b2cb7ced874fde0bdcb18ac67d927d7f", "committedDate": "2020-07-10T05:45:04Z", "message": "docs(samples): add dependencies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb82aebd0649a3b7595dd5eebc1f70473dbd7827", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/bb82aebd0649a3b7595dd5eebc1f70473dbd7827", "committedDate": "2020-07-10T05:45:04Z", "message": "docs(samples): rename methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4be79ba6125db0269ea1babba9f1ee50be3e2e55", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/4be79ba6125db0269ea1babba9f1ee50be3e2e55", "committedDate": "2020-07-10T05:45:04Z", "message": "docs(samples): address feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14a81860138a083525a10998eeebe3a9090dbc50", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/14a81860138a083525a10998eeebe3a9090dbc50", "committedDate": "2020-07-10T05:45:04Z", "message": "docs(samples): set auto"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "315cbb5c95eca208e40734a2ed16562907777e8b", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/315cbb5c95eca208e40734a2ed16562907777e8b", "committedDate": "2020-07-17T06:09:27Z", "message": "docs(samples): modified code and remove deps"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f49ee765a1e92ace49438f0e5c567819974a1fb", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/6f49ee765a1e92ace49438f0e5c567819974a1fb", "committedDate": "2020-07-06T16:51:53Z", "message": "docs(samples): set auto"}, "afterCommit": {"oid": "315cbb5c95eca208e40734a2ed16562907777e8b", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/315cbb5c95eca208e40734a2ed16562907777e8b", "committedDate": "2020-07-17T06:09:27Z", "message": "docs(samples): modified code and remove deps"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1199, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}