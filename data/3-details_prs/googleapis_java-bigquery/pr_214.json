{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDA3MzMw", "number": 214, "title": "samples: new sample bigquery_auth_drive_scope", "bodyText": "Fixes b/146925135", "createdAt": "2020-03-06T20:27:35Z", "url": "https://github.com/googleapis/java-bigquery/pull/214", "merged": true, "mergeCommit": {"oid": "b5215cb1c6a216b85ff334b62fdade4ae10943ac"}, "closed": true, "closedAt": "2020-03-09T22:36:25Z", "author": {"login": "stephaniewang526"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLGGPpAH2gAyMzg1MDA3MzMwOjkzMjc0NmI3OGIzMThlY2YyZmFkMTM4MmIxMGViZmU2YmZhYWFmYTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMFt3oAFqTM3MTU3MjczMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "932746b78b318ecf2fad1382b10ebfe6bfaaafa6", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/932746b78b318ecf2fad1382b10ebfe6bfaaafa6", "committedDate": "2020-03-06T20:25:30Z", "message": "samples: new sample bigquery_auth_drive_scope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70554b3d146aab067ee45966c4dff5dae3695d17", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/70554b3d146aab067ee45966c4dff5dae3695d17", "committedDate": "2020-03-06T20:35:39Z", "message": "nit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjM2MDE5", "url": "https://github.com/googleapis/java-bigquery/pull/214#pullrequestreview-370636019", "createdAt": "2020-03-06T21:25:23Z", "commit": {"oid": "70554b3d146aab067ee45966c4dff5dae3695d17"}, "state": "DISMISSED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMToyNToyM1rOFzH7kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMToyODowOFrOFzIAKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MTYzMw==", "bodyText": "Doesn't really make sense to print this multiple times.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                System.out.println(\"Datasets:\");\n          \n          \n            \n                System.out.println(\"Auth succeeded with multiple scopes. Datasets:\");", "url": "https://github.com/googleapis/java-bigquery/pull/214#discussion_r389151633", "createdAt": "2020-03-06T21:25:23Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_drive_scope]\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.ServiceAccountCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Dataset;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+\n+public class AuthDriveScope {\n+\n+  public static void setAuthDriveScope() throws IOException {\n+    // Create credentials with Drive & BigQuery API scopes.\n+    // Both APIs must be enabled for your project before running this code.\n+    GoogleCredentials credentials =\n+        ServiceAccountCredentials.getApplicationDefault()\n+            .createScoped(\n+                ImmutableSet.of(\n+                    \"https://www.googleapis.com/auth/bigquery\",\n+                    \"https://www.googleapis.com/auth/drive\"));\n+\n+    // Instantiate a client.\n+    BigQuery bigquery =\n+        BigQueryOptions.newBuilder().setCredentials(credentials).build().getService();\n+\n+    // Use the client.\n+    System.out.println(\"Datasets:\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70554b3d146aab067ee45966c4dff5dae3695d17"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MTc2Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      \"Auth succeeded with multiple scopes. Dataset %s%n\", dataset.getDatasetId().getDataset());\n          \n          \n            \n                      \"Dataset: %s%n\", dataset.getDatasetId().getDataset());", "url": "https://github.com/googleapis/java-bigquery/pull/214#discussion_r389151767", "createdAt": "2020-03-06T21:25:43Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_drive_scope]\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.ServiceAccountCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Dataset;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+\n+public class AuthDriveScope {\n+\n+  public static void setAuthDriveScope() throws IOException {\n+    // Create credentials with Drive & BigQuery API scopes.\n+    // Both APIs must be enabled for your project before running this code.\n+    GoogleCredentials credentials =\n+        ServiceAccountCredentials.getApplicationDefault()\n+            .createScoped(\n+                ImmutableSet.of(\n+                    \"https://www.googleapis.com/auth/bigquery\",\n+                    \"https://www.googleapis.com/auth/drive\"));\n+\n+    // Instantiate a client.\n+    BigQuery bigquery =\n+        BigQueryOptions.newBuilder().setCredentials(credentials).build().getService();\n+\n+    // Use the client.\n+    System.out.println(\"Datasets:\");\n+    for (Dataset dataset : bigquery.listDatasets().iterateAll()) {\n+      System.out.printf(\n+          \"Auth succeeded with multiple scopes. Dataset %s%n\", dataset.getDatasetId().getDataset());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70554b3d146aab067ee45966c4dff5dae3695d17"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MjYyNg==", "bodyText": "Can we use the wording on the other samples? About reusing the client for multiple requests?", "url": "https://github.com/googleapis/java-bigquery/pull/214#discussion_r389152626", "createdAt": "2020-03-06T21:27:41Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_drive_scope]\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.ServiceAccountCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Dataset;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+\n+public class AuthDriveScope {\n+\n+  public static void setAuthDriveScope() throws IOException {\n+    // Create credentials with Drive & BigQuery API scopes.\n+    // Both APIs must be enabled for your project before running this code.\n+    GoogleCredentials credentials =\n+        ServiceAccountCredentials.getApplicationDefault()\n+            .createScoped(\n+                ImmutableSet.of(\n+                    \"https://www.googleapis.com/auth/bigquery\",\n+                    \"https://www.googleapis.com/auth/drive\"));\n+\n+    // Instantiate a client.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70554b3d146aab067ee45966c4dff5dae3695d17"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MjgwOA==", "bodyText": "Shouldn't this catch the BigQueryException error?", "url": "https://github.com/googleapis/java-bigquery/pull/214#discussion_r389152808", "createdAt": "2020-03-06T21:28:08Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_drive_scope]\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.ServiceAccountCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Dataset;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+\n+public class AuthDriveScope {\n+\n+  public static void setAuthDriveScope() throws IOException {\n+    // Create credentials with Drive & BigQuery API scopes.\n+    // Both APIs must be enabled for your project before running this code.\n+    GoogleCredentials credentials =\n+        ServiceAccountCredentials.getApplicationDefault()\n+            .createScoped(\n+                ImmutableSet.of(\n+                    \"https://www.googleapis.com/auth/bigquery\",\n+                    \"https://www.googleapis.com/auth/drive\"));\n+\n+    // Instantiate a client.\n+    BigQuery bigquery =\n+        BigQueryOptions.newBuilder().setCredentials(credentials).build().getService();\n+\n+    // Use the client.\n+    System.out.println(\"Datasets:\");\n+    for (Dataset dataset : bigquery.listDatasets().iterateAll()) {\n+      System.out.printf(\n+          \"Auth succeeded with multiple scopes. Dataset %s%n\", dataset.getDatasetId().getDataset());\n+    }\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70554b3d146aab067ee45966c4dff5dae3695d17"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c841991852a9a0fd7fe2a6d804afd0db99a650d9", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/c841991852a9a0fd7fe2a6d804afd0db99a650d9", "committedDate": "2020-03-09T18:01:26Z", "message": "nit\n\nCo-Authored-By: Kurtis Van Gent <31518063+kurtisvg@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dca6bf911efb8b144dd64f7f50db72d5d318336", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/6dca6bf911efb8b144dd64f7f50db72d5d318336", "committedDate": "2020-03-09T18:01:35Z", "message": "nit\n\nCo-Authored-By: Kurtis Van Gent <31518063+kurtisvg@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26d8015103e592a0ea1a2d1ffdcd3faca072dcf2", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/26d8015103e592a0ea1a2d1ffdcd3faca072dcf2", "committedDate": "2020-03-09T18:07:58Z", "message": "update based on comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTcyNTMz", "url": "https://github.com/googleapis/java-bigquery/pull/214#pullrequestreview-371572533", "createdAt": "2020-03-09T22:32:17Z", "commit": {"oid": "26d8015103e592a0ea1a2d1ffdcd3faca072dcf2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjozMjoxN1rOFz7koQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjozMjoxN1rOFz7koQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk5NzcyOQ==", "bodyText": "Ok, but if you aren't handling it, and not providing any useful advice, you probably should let the higher level handle.", "url": "https://github.com/googleapis/java-bigquery/pull/214#discussion_r389997729", "createdAt": "2020-03-09T22:32:17Z", "author": {"login": "lesv"}, "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_drive_scope]\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.ServiceAccountCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Dataset;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+\n+public class AuthDriveScope {\n+\n+  public static void setAuthDriveScope() throws IOException {\n+    // Create credentials with Drive & BigQuery API scopes.\n+    // Both APIs must be enabled for your project before running this code.\n+    GoogleCredentials credentials =\n+        ServiceAccountCredentials.getApplicationDefault()\n+            .createScoped(\n+                ImmutableSet.of(\n+                    \"https://www.googleapis.com/auth/bigquery\",\n+                    \"https://www.googleapis.com/auth/drive\"));\n+\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery =\n+          BigQueryOptions.newBuilder().setCredentials(credentials).build().getService();\n+\n+      // Use the client.\n+      System.out.println(\"Auth succeeded with multiple scopes. Datasets:\");\n+      for (Dataset dataset : bigquery.listDatasets().iterateAll()) {\n+        System.out.printf(\"Dataset: %s%n\", dataset.getDatasetId().getDataset());\n+      }\n+    } catch (BigQueryException e) {\n+      System.out.println(\"Auth failed due to error: \\n\" + e.toString());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26d8015103e592a0ea1a2d1ffdcd3faca072dcf2"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTcyNzMx", "url": "https://github.com/googleapis/java-bigquery/pull/214#pullrequestreview-371572731", "createdAt": "2020-03-09T22:32:48Z", "commit": {"oid": "26d8015103e592a0ea1a2d1ffdcd3faca072dcf2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1230, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}