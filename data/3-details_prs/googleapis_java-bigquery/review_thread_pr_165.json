{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NDAxMjk5", "number": 165, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzozMjozMVrODfRNzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzozMzoyNFrODfRO3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTE0NTEwOnYy", "diffSide": "RIGHT", "path": "samples/src/main/java/com/example/bigquery/GetTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzozMjozMVrOFo38SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzozMjozMVrOFo38SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwMzkxMw==", "bodyText": "nit: Add newline before this line", "url": "https://github.com/googleapis/java-bigquery/pull/165#discussion_r378403913", "createdAt": "2020-02-12T17:32:31Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/GetTable.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_get_table]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Table;\n+import com.google.cloud.bigquery.TableId;\n+\n+public class GetTable {\n+\n+  public static void runGetTable() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"bigquery_public_data\";\n+    String datasetName = \"samples\";\n+    String tableName = \"shakespeare\";\n+    getTable(projectId, datasetName, tableName);\n+  }\n+\n+  public static void getTable(String projectId, String datasetName, String tableName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+      TableId tableId = TableId.of(projectId, datasetName, tableName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "042c4ffa2efb81343540bbe50c8977f5e1c3ecae"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTE0NzgzOnYy", "diffSide": "RIGHT", "path": "samples/src/main/java/com/example/bigquery/GetTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzozMzoyNFrOFo3-Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzozMzoyNFrOFo3-Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwNDM5MA==", "bodyText": "nit: This line seem redundant - It was already successful if you see \"Table info\"", "url": "https://github.com/googleapis/java-bigquery/pull/165#discussion_r378404390", "createdAt": "2020-02-12T17:33:24Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/GetTable.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_get_table]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Table;\n+import com.google.cloud.bigquery.TableId;\n+\n+public class GetTable {\n+\n+  public static void runGetTable() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"bigquery_public_data\";\n+    String datasetName = \"samples\";\n+    String tableName = \"shakespeare\";\n+    getTable(projectId, datasetName, tableName);\n+  }\n+\n+  public static void getTable(String projectId, String datasetName, String tableName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+      TableId tableId = TableId.of(projectId, datasetName, tableName);\n+      Table table = bigquery.getTable(tableId);\n+      System.out.println(\"Table info: \" + table.getDescription());\n+      System.out.println(\"Table retrieved successfully.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "042c4ffa2efb81343540bbe50c8977f5e1c3ecae"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3498, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}