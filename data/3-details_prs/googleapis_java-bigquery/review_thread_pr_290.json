{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MDk1NzE4", "number": 290, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODoyMTo0MFrOD1aZzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODoyMjoyMVrOD1aa7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzMzNzEwOnYy", "diffSide": "RIGHT", "path": ".readme-partials.yaml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODoyMTo0MFrOGK17Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTozMzoyNFrOGK4uAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAyMjQzOQ==", "bodyText": "You'll need to make this link a non-reference link as we don't have it in the template.", "url": "https://github.com/googleapis/java-bigquery/pull/290#discussion_r414022439", "createdAt": "2020-04-23T18:21:40Z", "author": {"login": "chingor13"}, "path": ".readme-partials.yaml", "diffHunk": "@@ -0,0 +1,104 @@\n+custom_content: |\n+  #### Creating a dataset\n+  With BigQuery you can create datasets. A dataset is a grouping mechanism that holds zero or more\n+  tables. Add the following import at the top of your file:\n+\n+  ```java\n+  import com.google.cloud.bigquery.DatasetInfo;\n+  ```\n+  Then, to create the dataset, use the following code:\n+\n+  ```java\n+  // Create a dataset\n+  String datasetId = \"my_dataset_id\";\n+  bigquery.create(DatasetInfo.newBuilder(datasetId).build());\n+  ```\n+\n+  #### Creating a table\n+  With BigQuery you can create different types of tables: normal tables with an associated schema,\n+  external tables backed by data stored on [Google Cloud Storage][cloud-storage] and view tables that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5bb01bf952494d529c3893e0405ddf9a85fe896"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAyNjcxMg==", "bodyText": "Done", "url": "https://github.com/googleapis/java-bigquery/pull/290#discussion_r414026712", "createdAt": "2020-04-23T18:28:10Z", "author": {"login": "stephaniewang526"}, "path": ".readme-partials.yaml", "diffHunk": "@@ -0,0 +1,104 @@\n+custom_content: |\n+  #### Creating a dataset\n+  With BigQuery you can create datasets. A dataset is a grouping mechanism that holds zero or more\n+  tables. Add the following import at the top of your file:\n+\n+  ```java\n+  import com.google.cloud.bigquery.DatasetInfo;\n+  ```\n+  Then, to create the dataset, use the following code:\n+\n+  ```java\n+  // Create a dataset\n+  String datasetId = \"my_dataset_id\";\n+  bigquery.create(DatasetInfo.newBuilder(datasetId).build());\n+  ```\n+\n+  #### Creating a table\n+  With BigQuery you can create different types of tables: normal tables with an associated schema,\n+  external tables backed by data stored on [Google Cloud Storage][cloud-storage] and view tables that", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAyMjQzOQ=="}, "originalCommit": {"oid": "a5bb01bf952494d529c3893e0405ddf9a85fe896"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA0ODcwMA==", "bodyText": "I don't see a change here. Any change you manually make in the README.md itself will be wiped on the next regeneration.", "url": "https://github.com/googleapis/java-bigquery/pull/290#discussion_r414048700", "createdAt": "2020-04-23T19:01:35Z", "author": {"login": "chingor13"}, "path": ".readme-partials.yaml", "diffHunk": "@@ -0,0 +1,104 @@\n+custom_content: |\n+  #### Creating a dataset\n+  With BigQuery you can create datasets. A dataset is a grouping mechanism that holds zero or more\n+  tables. Add the following import at the top of your file:\n+\n+  ```java\n+  import com.google.cloud.bigquery.DatasetInfo;\n+  ```\n+  Then, to create the dataset, use the following code:\n+\n+  ```java\n+  // Create a dataset\n+  String datasetId = \"my_dataset_id\";\n+  bigquery.create(DatasetInfo.newBuilder(datasetId).build());\n+  ```\n+\n+  #### Creating a table\n+  With BigQuery you can create different types of tables: normal tables with an associated schema,\n+  external tables backed by data stored on [Google Cloud Storage][cloud-storage] and view tables that", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAyMjQzOQ=="}, "originalCommit": {"oid": "a5bb01bf952494d529c3893e0405ddf9a85fe896"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA2ODIyNw==", "bodyText": "PTAL again", "url": "https://github.com/googleapis/java-bigquery/pull/290#discussion_r414068227", "createdAt": "2020-04-23T19:33:24Z", "author": {"login": "stephaniewang526"}, "path": ".readme-partials.yaml", "diffHunk": "@@ -0,0 +1,104 @@\n+custom_content: |\n+  #### Creating a dataset\n+  With BigQuery you can create datasets. A dataset is a grouping mechanism that holds zero or more\n+  tables. Add the following import at the top of your file:\n+\n+  ```java\n+  import com.google.cloud.bigquery.DatasetInfo;\n+  ```\n+  Then, to create the dataset, use the following code:\n+\n+  ```java\n+  // Create a dataset\n+  String datasetId = \"my_dataset_id\";\n+  bigquery.create(DatasetInfo.newBuilder(datasetId).build());\n+  ```\n+\n+  #### Creating a table\n+  With BigQuery you can create different types of tables: normal tables with an associated schema,\n+  external tables backed by data stored on [Google Cloud Storage][cloud-storage] and view tables that", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAyMjQzOQ=="}, "originalCommit": {"oid": "a5bb01bf952494d529c3893e0405ddf9a85fe896"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzMzOTk2OnYy", "diffSide": "LEFT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODoyMjoyMVrOGK187g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODoyMzozNVrOGK1_yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAyMjg5NA==", "bodyText": "Note: this snippet didn't get moved to the custom content, but is may not actually be useful", "url": "https://github.com/googleapis/java-bigquery/pull/290#discussion_r414022894", "createdAt": "2020-04-23T18:22:21Z", "author": {"login": "chingor13"}, "path": "README.md", "diffHunk": "@@ -50,57 +57,35 @@ libraryDependencies += \"com.google.cloud\" % \"google-cloud-bigquery\" % \"1.111.1\"\n ```\n [//]: # ({x-version-update-end})\n \n-Authentication\n---------------\n+## Authentication\n \n-See the [Authentication](https://github.com/googleapis/google-cloud-java#authentication) section in the base directory's README.\n+See the [Authentication][authentication] section in the base directory's README.\n \n-About Google Cloud BigQuery\n---------------------------\n+## Getting Started\n \n-[Google Cloud BigQuery][cloud-bigquery] is a fully managed, NoOps, low cost data analytics service.\n-Data can be streamed into BigQuery at millions of rows per second to enable real-time analysis.\n-With BigQuery you can easily deploy Petabyte-scale Databases.\n+### Prerequisites\n \n-Be sure to activate the Google Cloud BigQuery API on the Developer's Console to use BigQuery from\n-your project.\n-\n-See the [BigQuery client library docs][bigquery-client-lib-docs] to learn how to interact\n-with Google Cloud BigQuery using this Client Library.\n-\n-Getting Started\n----------------\n-#### Prerequisites\n-For this tutorial, you will need a\n-[Google Developers Console](https://console.developers.google.com/) project with the BigQuery API\n-enabled. You will need to [enable billing](https://support.google.com/cloud/answer/6158867?hl=en) to\n-use Google Cloud BigQuery.\n-[Follow these instructions](https://cloud.google.com/resource-manager/docs/creating-managing-projects) to get your\n-project set up. You will also need to set up the local development environment by [installing the\n-Google Cloud SDK](https://cloud.google.com/sdk/) and running the following commands in command line:\n+You will need a [Google Cloud Platform Console][developer-console] project with the Cloud BigQuery [API enabled][enable-api].\n+You will need to [enable billing][enable-billing] to use Google Cloud BigQuery.\n+[Follow these instructions][create-project] to get your project set up. You will also need to set up the local development environment by\n+[installing the Google Cloud SDK][cloud-sdk] and running the following commands in command line:\n `gcloud auth login` and `gcloud config set project [YOUR PROJECT ID]`.\n \n-#### Installation and setup\n+### Installation and setup\n+\n You'll need to obtain the `google-cloud-bigquery` library.  See the [Quickstart](#quickstart) section\n to add `google-cloud-bigquery` as a dependency in your code.\n \n-#### Creating an authorized service object\n-To make authenticated requests to Google Cloud BigQuery, you must create a service object with\n-credentials. You can then make API calls by calling methods on the BigQuery service object. The\n-simplest way to authenticate is to use\n-[Application Default Credentials](https://developers.google.com/identity/protocols/application-default-credentials).\n-These credentials are automatically inferred from your environment, so you only need the following\n-code to create your service object:\n+## About Cloud BigQuery\n \n-```java\n-import com.google.cloud.bigquery.BigQuery;\n-import com.google.cloud.bigquery.BigQueryOptions;\n \n-BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5bb01bf952494d529c3893e0405ddf9a85fe896"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAyMzYyNg==", "bodyText": "Yeah i think we can do without this snippet.", "url": "https://github.com/googleapis/java-bigquery/pull/290#discussion_r414023626", "createdAt": "2020-04-23T18:23:35Z", "author": {"login": "stephaniewang526"}, "path": "README.md", "diffHunk": "@@ -50,57 +57,35 @@ libraryDependencies += \"com.google.cloud\" % \"google-cloud-bigquery\" % \"1.111.1\"\n ```\n [//]: # ({x-version-update-end})\n \n-Authentication\n---------------\n+## Authentication\n \n-See the [Authentication](https://github.com/googleapis/google-cloud-java#authentication) section in the base directory's README.\n+See the [Authentication][authentication] section in the base directory's README.\n \n-About Google Cloud BigQuery\n---------------------------\n+## Getting Started\n \n-[Google Cloud BigQuery][cloud-bigquery] is a fully managed, NoOps, low cost data analytics service.\n-Data can be streamed into BigQuery at millions of rows per second to enable real-time analysis.\n-With BigQuery you can easily deploy Petabyte-scale Databases.\n+### Prerequisites\n \n-Be sure to activate the Google Cloud BigQuery API on the Developer's Console to use BigQuery from\n-your project.\n-\n-See the [BigQuery client library docs][bigquery-client-lib-docs] to learn how to interact\n-with Google Cloud BigQuery using this Client Library.\n-\n-Getting Started\n----------------\n-#### Prerequisites\n-For this tutorial, you will need a\n-[Google Developers Console](https://console.developers.google.com/) project with the BigQuery API\n-enabled. You will need to [enable billing](https://support.google.com/cloud/answer/6158867?hl=en) to\n-use Google Cloud BigQuery.\n-[Follow these instructions](https://cloud.google.com/resource-manager/docs/creating-managing-projects) to get your\n-project set up. You will also need to set up the local development environment by [installing the\n-Google Cloud SDK](https://cloud.google.com/sdk/) and running the following commands in command line:\n+You will need a [Google Cloud Platform Console][developer-console] project with the Cloud BigQuery [API enabled][enable-api].\n+You will need to [enable billing][enable-billing] to use Google Cloud BigQuery.\n+[Follow these instructions][create-project] to get your project set up. You will also need to set up the local development environment by\n+[installing the Google Cloud SDK][cloud-sdk] and running the following commands in command line:\n `gcloud auth login` and `gcloud config set project [YOUR PROJECT ID]`.\n \n-#### Installation and setup\n+### Installation and setup\n+\n You'll need to obtain the `google-cloud-bigquery` library.  See the [Quickstart](#quickstart) section\n to add `google-cloud-bigquery` as a dependency in your code.\n \n-#### Creating an authorized service object\n-To make authenticated requests to Google Cloud BigQuery, you must create a service object with\n-credentials. You can then make API calls by calling methods on the BigQuery service object. The\n-simplest way to authenticate is to use\n-[Application Default Credentials](https://developers.google.com/identity/protocols/application-default-credentials).\n-These credentials are automatically inferred from your environment, so you only need the following\n-code to create your service object:\n+## About Cloud BigQuery\n \n-```java\n-import com.google.cloud.bigquery.BigQuery;\n-import com.google.cloud.bigquery.BigQueryOptions;\n \n-BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAyMjg5NA=="}, "originalCommit": {"oid": "a5bb01bf952494d529c3893e0405ddf9a85fe896"}, "originalPosition": 140}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3483, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}