{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNDQwNTI2", "number": 428, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMzowNDozN1rOEDp-7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMzowNDozN1rOEDp-7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjY5MDM2OnYy", "diffSide": "RIGHT", "path": "samples/snippets/src/test/java/com/example/bigquery/LoadCsvFromGcsTruncateTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMzowNDozN1rOGgzUBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMzowNDozN1rOGgzUBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA0ODMyNg==", "bodyText": "These are repeated:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                bout = new ByteArrayOutputStream();\n          \n          \n            \n                out = new PrintStream(bout);\n          \n          \n            \n                System.setOut(out);", "url": "https://github.com/googleapis/java-bigquery/pull/428#discussion_r437048326", "createdAt": "2020-06-08T23:04:37Z", "author": {"login": "kurtisvg"}, "path": "samples/snippets/src/test/java/com/example/bigquery/LoadCsvFromGcsTruncateTest.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.LegacySQLTypeName;\n+import com.google.cloud.bigquery.Schema;\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.util.UUID;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class LoadCsvFromGcsTruncateTest {\n+\n+  private String tableName;\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  private static final String BIGQUERY_DATASET_NAME = requireEnvVar(\"BIGQUERY_DATASET_NAME\");\n+\n+  private static String requireEnvVar(String varName) {\n+    String value = System.getenv(varName);\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));\n+    return value;\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"BIGQUERY_DATASET_NAME\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab863337c76736b78f7d7749d51e34699d040122"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3471, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}