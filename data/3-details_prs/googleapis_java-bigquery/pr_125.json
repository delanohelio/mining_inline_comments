{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MDQwMzU4", "number": 125, "title": "feat: new sample - Models: List model resources contained in a dataset", "bodyText": "Fixes b/148282094", "createdAt": "2020-01-24T22:26:07Z", "url": "https://github.com/googleapis/java-bigquery/pull/125", "merged": true, "mergeCommit": {"oid": "3a62206639f50e9d4ae18cc407303cad0c4a6ddb"}, "closed": true, "closedAt": "2020-01-28T00:56:12Z", "author": {"login": "stephaniewang526"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9lxKrAH2gAyMzY3MDQwMzU4OjE3ZDk2YWY1ZDYxNmFiYTA4NjZiODc0MGM0MDhiNTk1ZWZiODFmYjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-mQdKAFqTM0OTA2ODUzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "17d96af5d616aba0866b8740c408b595efb81fb7", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/17d96af5d616aba0866b8740c408b595efb81fb7", "committedDate": "2020-01-24T21:24:30Z", "message": "feat: new sample - Models: List Models"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9198d8593371c6f2600f3f77aee76b4ddd1ffe1a", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/9198d8593371c6f2600f3f77aee76b4ddd1ffe1a", "committedDate": "2020-01-24T22:20:08Z", "message": "update to use hamcrest truth"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4ODI1ODY1", "url": "https://github.com/googleapis/java-bigquery/pull/125#pullrequestreview-348825865", "createdAt": "2020-01-27T17:03:40Z", "commit": {"oid": "9198d8593371c6f2600f3f77aee76b4ddd1ffe1a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzowMzo0MVrOFiKVGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzowMzo0MVrOFiKVGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2NTE0Nw==", "bodyText": "Is this if models is null? We should check models if it'snull and (and throw an error if it is) instead of try/catching", "url": "https://github.com/googleapis/java-bigquery/pull/125#discussion_r371365147", "createdAt": "2020-01-27T17:03:41Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQuery.ModelListOption;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Model;\n+\n+// [START bigquery_list_models]\n+public class ListModels {\n+\n+  public static void runListModels() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    listModels(datasetName);\n+  }\n+\n+  public static void listModels(String datasetName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      try {\n+        Page<Model> models = bigquery.listModels(datasetName, ModelListOption.pageSize(100));\n+        models\n+            .iterateAll()\n+            .forEach(\n+                model ->\n+                    System.out.println(\n+                        model.getModelId() + \" models in dataset listed successfully.\"));\n+      } catch (NullPointerException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9198d8593371c6f2600f3f77aee76b4ddd1ffe1a"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "635d891bccd2a6cdfb30ee4a8a067d74ca2f5c90", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/635d891bccd2a6cdfb30ee4a8a067d74ca2f5c90", "committedDate": "2020-01-27T19:04:01Z", "message": "update base on comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTkzNzM5", "url": "https://github.com/googleapis/java-bigquery/pull/125#pullrequestreview-348993739", "createdAt": "2020-01-27T21:39:40Z", "commit": {"oid": "635d891bccd2a6cdfb30ee4a8a067d74ca2f5c90"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTozOTo0MFrOFiSYjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTozOTo1OVrOFiSZGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5NzEwMg==", "bodyText": "This doesn't look right - this is printing as \"$ModelId models in dataset listed successfully\".\nI think you want probably want to do is print something like `Model: modelId = $modelId, modelName = $modelName", "url": "https://github.com/googleapis/java-bigquery/pull/125#discussion_r371497102", "createdAt": "2020-01-27T21:39:40Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQuery.ModelListOption;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Model;\n+\n+// [START bigquery_list_models]\n+public class ListModels {\n+\n+  public static void runListModels() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    listModels(datasetName);\n+  }\n+\n+  public static void listModels(String datasetName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      try {\n+        Page<Model> models = bigquery.listModels(datasetName, ModelListOption.pageSize(100));\n+        models\n+            .iterateAll()\n+            .forEach(\n+                model ->\n+                    System.out.println(\n+                        model.getModelId() + \" models in dataset listed successfully.\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "635d891bccd2a6cdfb30ee4a8a067d74ca2f5c90"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5NzI0Mg==", "bodyText": "You shouldn't catch NullPointers - prevent it from happening instead.", "url": "https://github.com/googleapis/java-bigquery/pull/125#discussion_r371497242", "createdAt": "2020-01-27T21:39:59Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQuery.ModelListOption;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Model;\n+\n+// [START bigquery_list_models]\n+public class ListModels {\n+\n+  public static void runListModels() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    listModels(datasetName);\n+  }\n+\n+  public static void listModels(String datasetName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      try {\n+        Page<Model> models = bigquery.listModels(datasetName, ModelListOption.pageSize(100));\n+        models\n+            .iterateAll()\n+            .forEach(\n+                model ->\n+                    System.out.println(\n+                        model.getModelId() + \" models in dataset listed successfully.\"));\n+      } catch (NullPointerException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2NTE0Nw=="}, "originalCommit": {"oid": "9198d8593371c6f2600f3f77aee76b4ddd1ffe1a"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c6a4f6e9e331a283d432bca1562369ea77cb129", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/3c6a4f6e9e331a283d432bca1562369ea77cb129", "committedDate": "2020-01-27T21:57:12Z", "message": "update base on comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f44e683fd4338b221060798b4d1a972b56362d46", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/f44e683fd4338b221060798b4d1a972b56362d46", "committedDate": "2020-01-27T21:58:57Z", "message": "nit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fc6d59c4355295870159d57d51d21eb2451079f", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/4fc6d59c4355295870159d57d51d21eb2451079f", "committedDate": "2020-01-27T22:09:22Z", "message": "nit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDE3ODU2", "url": "https://github.com/googleapis/java-bigquery/pull/125#pullrequestreview-349017856", "createdAt": "2020-01-27T22:23:19Z", "commit": {"oid": "4fc6d59c4355295870159d57d51d21eb2451079f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjoyMzoyMFrOFiTkaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjoyMzoyMFrOFiTkaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxNjUyMA==", "bodyText": "nit: You should use if/break over if/else here. It simplifies the control flow and makes it easier to read, and easier for people to write code after the if/else block that might rely on models (since it's guaranteed to be non-null at that point).\nif (models == null) {\n  System.out.println(\"Dataset does not contain any models.\");\n  return;\n}\nSystem.out.printf(\"Dataset contains %s models:\\n\", models.getLength());\nmodels\n  .iterateAll()\n  .forEach(\n     model -> System.out.printf(\"Model ID: %s\", model.getModelId()));", "url": "https://github.com/googleapis/java-bigquery/pull/125#discussion_r371516520", "createdAt": "2020-01-27T22:23:20Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQuery.ModelListOption;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Model;\n+\n+// [START bigquery_list_models]\n+public class ListModels {\n+\n+  public static void runListModels() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    listModels(datasetName);\n+  }\n+\n+  public static void listModels(String datasetName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      Page<Model> models = bigquery.listModels(datasetName, ModelListOption.pageSize(100));\n+      if (models == null) {\n+        System.out.println(\"Dataset does not contain any models\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fc6d59c4355295870159d57d51d21eb2451079f"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "734876952a39e2f0ccb1df32b7211d026b1379a0", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/734876952a39e2f0ccb1df32b7211d026b1379a0", "committedDate": "2020-01-27T23:38:31Z", "message": "nit update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b4a09b48159d3c99e2df27d36aa119586b02fb5", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/8b4a09b48159d3c99e2df27d36aa119586b02fb5", "committedDate": "2020-01-28T00:28:37Z", "message": "nit update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDY4NTM3", "url": "https://github.com/googleapis/java-bigquery/pull/125#pullrequestreview-349068537", "createdAt": "2020-01-28T00:32:36Z", "commit": {"oid": "8b4a09b48159d3c99e2df27d36aa119586b02fb5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1292, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}