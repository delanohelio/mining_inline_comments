{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNTI3MTA5", "number": 97, "title": "feat: sample - run a legacy SQL query", "bodyText": "Fixes b/147485316", "createdAt": "2020-01-10T16:28:43Z", "url": "https://github.com/googleapis/java-bigquery/pull/97", "merged": true, "mergeCommit": {"oid": "7fedacdc5c924de8b25aac59d00018704e0d5af8"}, "closed": true, "closedAt": "2020-01-14T16:53:21Z", "author": {"login": "stephaniewang526"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5BIzcAH2gAyMzYxNTI3MTA5OjkzN2JlMDI5MmRkYTE3NTMxZDc4OWMxY2NlNzk2ZWRkMGNjZjdhYmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6T44qAFqTM0MjY4NDk4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "937be0292dda17531d789c1cce796edd0ccf7abd", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/937be0292dda17531d789c1cce796edd0ccf7abd", "committedDate": "2020-01-10T16:28:08Z", "message": "feat: sample - run a legacy SQL query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccb573e67609630fc4baeb86a728844d6df39ba3", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/ccb573e67609630fc4baeb86a728844d6df39ba3", "committedDate": "2020-01-10T16:51:02Z", "message": "nit: update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "969c0c5c7b7a6de06e585b8b8c6f69075840e0cb", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/969c0c5c7b7a6de06e585b8b8c6f69075840e0cb", "committedDate": "2020-01-10T16:58:31Z", "message": "nit: update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNDE3ODQ0", "url": "https://github.com/googleapis/java-bigquery/pull/97#pullrequestreview-341417844", "createdAt": "2020-01-10T20:57:13Z", "commit": {"oid": "969c0c5c7b7a6de06e585b8b8c6f69075840e0cb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMDo1NzoxM1rOFcf52g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMDo1ODowOFrOFcf6-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyNzE2Mg==", "bodyText": "I think since RunLegacyQuery doesn't have any arguments, you can just leave this out.", "url": "https://github.com/googleapis/java-bigquery/pull/97#discussion_r365427162", "createdAt": "2020-01-10T20:57:13Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/RunLegacyQuery.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_query_legacy]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+\n+public class RunLegacyQuery {\n+\n+  public static void runRunLegacyQuery() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969c0c5c7b7a6de06e585b8b8c6f69075840e0cb"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQyNzQ0OQ==", "bodyText": "Is this actually running the query? Or is it just configuring it? Shouldn't you need to do something to send it?\nHow do you process data received from the query?", "url": "https://github.com/googleapis/java-bigquery/pull/97#discussion_r365427449", "createdAt": "2020-01-10T20:58:08Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/RunLegacyQuery.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_query_legacy]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+\n+public class RunLegacyQuery {\n+\n+  public static void runRunLegacyQuery() {\n+    runLegacyQuery();\n+  }\n+\n+  public static void runLegacyQuery() {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      String query =\n+          \"SELECT corpus FROM [bigquery-public-data:samples.shakespeare] GROUP BY corpus;\";\n+\n+      QueryJobConfiguration queryConfig =\n+          // To use legacy SQL syntax, set useLegacySql to true.\n+          QueryJobConfiguration.newBuilder(query).setUseLegacySql(true).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "969c0c5c7b7a6de06e585b8b8c6f69075840e0cb"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a69709fd05bdad6b3791b683223d0f75ce05ff25", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/a69709fd05bdad6b3791b683223d0f75ce05ff25", "committedDate": "2020-01-13T21:01:42Z", "message": "update base on comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjg1OTg3", "url": "https://github.com/googleapis/java-bigquery/pull/97#pullrequestreview-342285987", "createdAt": "2020-01-14T04:29:10Z", "commit": {"oid": "a69709fd05bdad6b3791b683223d0f75ce05ff25"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDoyOToxMVrOFdL5og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNDozNjo0OFrOFdL_Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE0ODAwMg==", "bodyText": "nit: I would probably put this comment above the query =  line, since that's the point at which you want to use legacy SQL syntax", "url": "https://github.com/googleapis/java-bigquery/pull/97#discussion_r366148002", "createdAt": "2020-01-14T04:29:11Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/RunLegacyQuery.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_query_legacy]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.cloud.bigquery.TableResult;\n+\n+public class RunLegacyQuery {\n+\n+  public static void runLegacyQuery() {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      String query =\n+          \"SELECT corpus FROM [bigquery-public-data:samples.shakespeare] GROUP BY corpus;\";\n+\n+      QueryJobConfiguration queryConfig =\n+          // To use legacy SQL syntax, set useLegacySql to true.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a69709fd05bdad6b3791b683223d0f75ce05ff25"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE0OTM5NA==", "bodyText": "Better, but this will just print out a bunch of random values on separate lines. Can we preserve the rows together?\nSystem.out.println(\"Results\")\nfor (FieldValueList row : result.iterateAll()) {\n  row.forEach(val -> System.print(val.getStringValue() + \" \")\n  System.out.println();\n}", "url": "https://github.com/googleapis/java-bigquery/pull/97#discussion_r366149394", "createdAt": "2020-01-14T04:36:48Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/RunLegacyQuery.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_query_legacy]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.cloud.bigquery.TableResult;\n+\n+public class RunLegacyQuery {\n+\n+  public static void runLegacyQuery() {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      String query =\n+          \"SELECT corpus FROM [bigquery-public-data:samples.shakespeare] GROUP BY corpus;\";\n+\n+      QueryJobConfiguration queryConfig =\n+          // To use legacy SQL syntax, set useLegacySql to true.\n+          QueryJobConfiguration.newBuilder(query).setUseLegacySql(true).build();\n+\n+      // Execute the query.\n+      TableResult result = bigquery.query(queryConfig);\n+\n+      // Print the results.\n+      result\n+          .iterateAll()\n+          .forEach(row -> row.forEach(val -> System.out.println(val.getStringValue())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a69709fd05bdad6b3791b683223d0f75ce05ff25"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebd1b07b2d8527017f66f5082ec7d732f1b1932d", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/ebd1b07b2d8527017f66f5082ec7d732f1b1932d", "committedDate": "2020-01-14T16:08:32Z", "message": "update base on comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNjg0OTgw", "url": "https://github.com/googleapis/java-bigquery/pull/97#pullrequestreview-342684980", "createdAt": "2020-01-14T16:52:52Z", "commit": {"oid": "ebd1b07b2d8527017f66f5082ec7d732f1b1932d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1268, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}