{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MDQwMzU4", "number": 125, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzowMzo0MVrODa9ASw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjoyMzoyMFrODbC09g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTg5MDY3OnYy", "diffSide": "RIGHT", "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzowMzo0MVrOFiKVGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjowMDozNVrOFiS-lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2NTE0Nw==", "bodyText": "Is this if models is null? We should check models if it'snull and (and throw an error if it is) instead of try/catching", "url": "https://github.com/googleapis/java-bigquery/pull/125#discussion_r371365147", "createdAt": "2020-01-27T17:03:41Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQuery.ModelListOption;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Model;\n+\n+// [START bigquery_list_models]\n+public class ListModels {\n+\n+  public static void runListModels() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    listModels(datasetName);\n+  }\n+\n+  public static void listModels(String datasetName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      try {\n+        Page<Model> models = bigquery.listModels(datasetName, ModelListOption.pageSize(100));\n+        models\n+            .iterateAll()\n+            .forEach(\n+                model ->\n+                    System.out.println(\n+                        model.getModelId() + \" models in dataset listed successfully.\"));\n+      } catch (NullPointerException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9198d8593371c6f2600f3f77aee76b4ddd1ffe1a"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQxNzI1Mg==", "bodyText": "okay", "url": "https://github.com/googleapis/java-bigquery/pull/125#discussion_r371417252", "createdAt": "2020-01-27T18:49:34Z", "author": {"login": "stephaniewang526"}, "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQuery.ModelListOption;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Model;\n+\n+// [START bigquery_list_models]\n+public class ListModels {\n+\n+  public static void runListModels() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    listModels(datasetName);\n+  }\n+\n+  public static void listModels(String datasetName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      try {\n+        Page<Model> models = bigquery.listModels(datasetName, ModelListOption.pageSize(100));\n+        models\n+            .iterateAll()\n+            .forEach(\n+                model ->\n+                    System.out.println(\n+                        model.getModelId() + \" models in dataset listed successfully.\"));\n+      } catch (NullPointerException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2NTE0Nw=="}, "originalCommit": {"oid": "9198d8593371c6f2600f3f77aee76b4ddd1ffe1a"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5NzI0Mg==", "bodyText": "You shouldn't catch NullPointers - prevent it from happening instead.", "url": "https://github.com/googleapis/java-bigquery/pull/125#discussion_r371497242", "createdAt": "2020-01-27T21:39:59Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQuery.ModelListOption;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Model;\n+\n+// [START bigquery_list_models]\n+public class ListModels {\n+\n+  public static void runListModels() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    listModels(datasetName);\n+  }\n+\n+  public static void listModels(String datasetName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      try {\n+        Page<Model> models = bigquery.listModels(datasetName, ModelListOption.pageSize(100));\n+        models\n+            .iterateAll()\n+            .forEach(\n+                model ->\n+                    System.out.println(\n+                        model.getModelId() + \" models in dataset listed successfully.\"));\n+      } catch (NullPointerException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2NTE0Nw=="}, "originalCommit": {"oid": "9198d8593371c6f2600f3f77aee76b4ddd1ffe1a"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwNjgzNg==", "bodyText": "ok", "url": "https://github.com/googleapis/java-bigquery/pull/125#discussion_r371506836", "createdAt": "2020-01-27T22:00:35Z", "author": {"login": "stephaniewang526"}, "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQuery.ModelListOption;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Model;\n+\n+// [START bigquery_list_models]\n+public class ListModels {\n+\n+  public static void runListModels() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    listModels(datasetName);\n+  }\n+\n+  public static void listModels(String datasetName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      try {\n+        Page<Model> models = bigquery.listModels(datasetName, ModelListOption.pageSize(100));\n+        models\n+            .iterateAll()\n+            .forEach(\n+                model ->\n+                    System.out.println(\n+                        model.getModelId() + \" models in dataset listed successfully.\"));\n+      } catch (NullPointerException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2NTE0Nw=="}, "originalCommit": {"oid": "9198d8593371c6f2600f3f77aee76b4ddd1ffe1a"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjcxOTMwOnYy", "diffSide": "RIGHT", "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTozOTo0MFrOFiSYjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjowMDoyM1rOFiS-MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5NzEwMg==", "bodyText": "This doesn't look right - this is printing as \"$ModelId models in dataset listed successfully\".\nI think you want probably want to do is print something like `Model: modelId = $modelId, modelName = $modelName", "url": "https://github.com/googleapis/java-bigquery/pull/125#discussion_r371497102", "createdAt": "2020-01-27T21:39:40Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQuery.ModelListOption;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Model;\n+\n+// [START bigquery_list_models]\n+public class ListModels {\n+\n+  public static void runListModels() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    listModels(datasetName);\n+  }\n+\n+  public static void listModels(String datasetName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      try {\n+        Page<Model> models = bigquery.listModels(datasetName, ModelListOption.pageSize(100));\n+        models\n+            .iterateAll()\n+            .forEach(\n+                model ->\n+                    System.out.println(\n+                        model.getModelId() + \" models in dataset listed successfully.\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "635d891bccd2a6cdfb30ee4a8a067d74ca2f5c90"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwNjczNw==", "bodyText": "Looks like there's only getModelId method to get the model Id. I think I will leave it this way but update to just \"model\" (instead of \"models\").", "url": "https://github.com/googleapis/java-bigquery/pull/125#discussion_r371506737", "createdAt": "2020-01-27T22:00:23Z", "author": {"login": "stephaniewang526"}, "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQuery.ModelListOption;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Model;\n+\n+// [START bigquery_list_models]\n+public class ListModels {\n+\n+  public static void runListModels() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    listModels(datasetName);\n+  }\n+\n+  public static void listModels(String datasetName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      try {\n+        Page<Model> models = bigquery.listModels(datasetName, ModelListOption.pageSize(100));\n+        models\n+            .iterateAll()\n+            .forEach(\n+                model ->\n+                    System.out.println(\n+                        model.getModelId() + \" models in dataset listed successfully.\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5NzEwMg=="}, "originalCommit": {"oid": "635d891bccd2a6cdfb30ee4a8a067d74ca2f5c90"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Njg0NDcwOnYy", "diffSide": "RIGHT", "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjoyMzoyMFrOFiTkaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzozODo0NlrOFiVM4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxNjUyMA==", "bodyText": "nit: You should use if/break over if/else here. It simplifies the control flow and makes it easier to read, and easier for people to write code after the if/else block that might rely on models (since it's guaranteed to be non-null at that point).\nif (models == null) {\n  System.out.println(\"Dataset does not contain any models.\");\n  return;\n}\nSystem.out.printf(\"Dataset contains %s models:\\n\", models.getLength());\nmodels\n  .iterateAll()\n  .forEach(\n     model -> System.out.printf(\"Model ID: %s\", model.getModelId()));", "url": "https://github.com/googleapis/java-bigquery/pull/125#discussion_r371516520", "createdAt": "2020-01-27T22:23:20Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQuery.ModelListOption;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Model;\n+\n+// [START bigquery_list_models]\n+public class ListModels {\n+\n+  public static void runListModels() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    listModels(datasetName);\n+  }\n+\n+  public static void listModels(String datasetName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      Page<Model> models = bigquery.listModels(datasetName, ModelListOption.pageSize(100));\n+      if (models == null) {\n+        System.out.println(\"Dataset does not contain any models\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fc6d59c4355295870159d57d51d21eb2451079f"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU0MzI2Ng==", "bodyText": "okay - updated", "url": "https://github.com/googleapis/java-bigquery/pull/125#discussion_r371543266", "createdAt": "2020-01-27T23:38:46Z", "author": {"login": "stephaniewang526"}, "path": "samples/src/main/java/com/example/bigquery/ListModels.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.api.gax.paging.Page;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQuery.ModelListOption;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Model;\n+\n+// [START bigquery_list_models]\n+public class ListModels {\n+\n+  public static void runListModels() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    listModels(datasetName);\n+  }\n+\n+  public static void listModels(String datasetName) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      Page<Model> models = bigquery.listModels(datasetName, ModelListOption.pageSize(100));\n+      if (models == null) {\n+        System.out.println(\"Dataset does not contain any models\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUxNjUyMA=="}, "originalCommit": {"oid": "4fc6d59c4355295870159d57d51d21eb2451079f"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3558, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}