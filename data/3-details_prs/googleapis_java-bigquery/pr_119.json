{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDk2Mjc2", "number": 119, "title": "feat: add new sample - Load: Column Based Time Partitioning", "bodyText": "Fixes b/148144641", "createdAt": "2020-01-22T22:33:26Z", "url": "https://github.com/googleapis/java-bigquery/pull/119", "merged": true, "mergeCommit": {"oid": "6e1eef6124108371b89137529f1c42a1a1d16578"}, "closed": true, "closedAt": "2020-01-23T20:42:01Z", "author": {"login": "stephaniewang526"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb89ezDAH2gAyMzY2MDk2Mjc2OmJkM2YzMDdhNzVkMzNkNDkwZWZkNWE1OWQ5NTJkYjgxMzk2ODE0M2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9QcY-AFqTM0NzU4ODY1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bd3f307a75d33d490efd5a59d952db813968143e", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/bd3f307a75d33d490efd5a59d952db813968143e", "committedDate": "2020-01-22T22:28:14Z", "message": "feat: add new sample - Load: Column Based Time Partitioning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "584cbb13d4aed5157cf67a4b3fd55487df642f62", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/584cbb13d4aed5157cf67a4b3fd55487df642f62", "committedDate": "2020-01-22T22:29:16Z", "message": "update code format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NDQyODk3", "url": "https://github.com/googleapis/java-bigquery/pull/119#pullrequestreview-347442897", "createdAt": "2020-01-23T16:37:36Z", "commit": {"oid": "584cbb13d4aed5157cf67a4b3fd55487df642f62"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNjozNzozNlrOFhE70Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNjozNzozNlrOFhE70Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyODE3Nw==", "bodyText": "What is the significance of this value? Can you use java.time instead?\n.setExpirationMs(Duration.of(1, ChronoUnit.DAY).toMillis());", "url": "https://github.com/googleapis/java-bigquery/pull/119#discussion_r370228177", "createdAt": "2020-01-23T16:37:36Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/LoadPartitionedTable.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_load_table_partitioned]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.FormatOptions;\n+import com.google.cloud.bigquery.Job;\n+import com.google.cloud.bigquery.JobId;\n+import com.google.cloud.bigquery.JobInfo;\n+import com.google.cloud.bigquery.LoadJobConfiguration;\n+import com.google.cloud.bigquery.Schema;\n+import com.google.cloud.bigquery.StandardSQLTypeName;\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.TimePartitioning;\n+import java.util.UUID;\n+\n+public class LoadPartitionedTable {\n+\n+  public static void runLoadPartitionedTable() throws Exception {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String datasetName = \"MY_DATASET_NAME\";\n+    String tableName = \"MY_TABLE_NAME\";\n+    String sourceUri = \"/path/to/file.csv\";\n+    loadPartitionedTable(datasetName, tableName, sourceUri);\n+  }\n+\n+  public static void loadPartitionedTable(String datasetName, String tableName, String sourceUri)\n+      throws Exception {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      TableId tableId = TableId.of(datasetName, tableName);\n+\n+      Schema schema =\n+          Schema.of(\n+              Field.of(\"name\", StandardSQLTypeName.STRING),\n+              Field.of(\"post_abbr\", StandardSQLTypeName.STRING),\n+              Field.of(\"date\", StandardSQLTypeName.DATE));\n+\n+      // Configure time partitioning. For full list of options, see:\n+      // https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#TimePartitioning\n+      TimePartitioning partitioning =\n+          TimePartitioning.newBuilder(TimePartitioning.Type.DAY)\n+              .setField(\"date\")\n+              .setExpirationMs(7776000000L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "584cbb13d4aed5157cf67a4b3fd55487df642f62"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c81670910ac7b2c726639818dd3af65c150075b", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/4c81670910ac7b2c726639818dd3af65c150075b", "committedDate": "2020-01-23T16:45:29Z", "message": "update base on comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NTg4NjUw", "url": "https://github.com/googleapis/java-bigquery/pull/119#pullrequestreview-347588650", "createdAt": "2020-01-23T20:33:40Z", "commit": {"oid": "4c81670910ac7b2c726639818dd3af65c150075b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMDozMzo0MFrOFhLxUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMDozMzo0MFrOFhLxUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDM0MDE3OQ==", "bodyText": "nit: This would be another example of where it might be better to create/delete the table as setUp and tearDown functions.", "url": "https://github.com/googleapis/java-bigquery/pull/119#discussion_r370340179", "createdAt": "2020-01-23T20:33:40Z", "author": {"login": "kurtisvg"}, "path": "samples/src/test/java/com/example/bigquery/LoadPartitionedTableIT.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class LoadPartitionedTableIT {\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  private static final String BIGQUERY_DATASET_NAME = System.getenv(\"BIGQUERY_DATASET_NAME\");\n+\n+  private static void requireEnvVar(String varName) {\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"BIGQUERY_DATASET_NAME\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    System.setOut(null);\n+  }\n+\n+  @Test\n+  public void loadPartitionedTable() throws Exception {\n+    String sourceUri = \"gs://cloud-samples-data/bigquery/us-states/us-states-by-date.csv\";\n+\n+    String tableName = \"PARTITIONED_TABLE_TEST\";\n+\n+    LoadPartitionedTable.loadPartitionedTable(BIGQUERY_DATASET_NAME, tableName, sourceUri);\n+\n+    assertThat(bout.toString())\n+        .contains(\"Data successfully loaded into time partitioned table during load job\");\n+\n+    // Clean up\n+    DeleteTable.deleteTable(BIGQUERY_DATASET_NAME, tableName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c81670910ac7b2c726639818dd3af65c150075b"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1284, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}