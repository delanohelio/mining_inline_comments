{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1Nzk3OTMx", "number": 458, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxMDoyN1rOEGZPsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxNDozNlrOEGZXng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTQwNTMwOnYy", "diffSide": "RIGHT", "path": "samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxMDoyN1rOGlKczw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxMDoyN1rOGlKczw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMTcxMQ==", "bodyText": "this needs to go above import statements so that ppl know what are needed", "url": "https://github.com/googleapis/java-bigquery/pull/458#discussion_r441621711", "createdAt": "2020-06-17T15:10:27Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.RangePartitioning;\n+import com.google.cloud.bigquery.Schema;\n+import com.google.cloud.bigquery.StandardSQLTypeName;\n+import com.google.cloud.bigquery.StandardTableDefinition;\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.TableInfo;\n+\n+// [START bigquery_create_table_range_partitioned]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f41085689a45420f23471dfa5c8a23d6bf1c412"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTQxMTcxOnYy", "diffSide": "RIGHT", "path": "samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxMTo0MFrOGlKgxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxMTo0MFrOGlKgxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMjcyNA==", "bodyText": "can we add a simple one-liner on what this sample does? something like \"//Sample to create a range partitioned table\". An example in this sample https://github.com/googleapis/java-bigquery/blob/master/samples/snippets/src/main/java/com/example/bigquery/LoadCsvFromGcs.java", "url": "https://github.com/googleapis/java-bigquery/pull/458#discussion_r441622724", "createdAt": "2020-06-17T15:11:40Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/main/java/com/example/bigquery/CreateRangePartitionedTable.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.RangePartitioning;\n+import com.google.cloud.bigquery.Schema;\n+import com.google.cloud.bigquery.StandardSQLTypeName;\n+import com.google.cloud.bigquery.StandardTableDefinition;\n+import com.google.cloud.bigquery.TableId;\n+import com.google.cloud.bigquery.TableInfo;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f41085689a45420f23471dfa5c8a23d6bf1c412"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTQyMzU1OnYy", "diffSide": "RIGHT", "path": "samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxNDowNlrOGlKoZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxNDowNlrOGlKoZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyNDY3OQ==", "bodyText": "We've decided to just call requireEnv method here to eliminate one other method called. please see this sample for details - \n  \n    \n      java-bigquery/samples/snippets/src/test/java/com/example/bigquery/LoadCsvFromGcsIT.java\n    \n    \n         Line 39\n      in\n      16738be\n    \n    \n    \n    \n\n        \n          \n           private static final String BIGQUERY_DATASET_NAME = requireEnvVar(\"BIGQUERY_DATASET_NAME\");", "url": "https://github.com/googleapis/java-bigquery/pull/458#discussion_r441624679", "createdAt": "2020-06-17T15:14:06Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.Schema;\n+import com.google.cloud.bigquery.StandardSQLTypeName;\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class CreateRangePartitionedTableIT {\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  private static final String BIGQUERY_DATASET_NAME = System.getenv(\"BIGQUERY_DATASET_NAME\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f41085689a45420f23471dfa5c8a23d6bf1c412"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTQyNTU4OnYy", "diffSide": "RIGHT", "path": "samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxNDozNlrOGlKpwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxNDozNlrOGlKpwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyNTAyNg==", "bodyText": "let's put this in teardown() - see sample \n  \n    \n      java-bigquery/samples/snippets/src/test/java/com/example/bigquery/LoadCsvFromGcsIT.java\n    \n    \n         Line 78\n      in\n      16738be\n    \n    \n    \n    \n\n        \n          \n           DeleteTable.deleteTable(BIGQUERY_DATASET_NAME, tableName);", "url": "https://github.com/googleapis/java-bigquery/pull/458#discussion_r441625026", "createdAt": "2020-06-17T15:14:36Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/test/java/com/example/bigquery/CreateRangePartitionedTableIT.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.Schema;\n+import com.google.cloud.bigquery.StandardSQLTypeName;\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class CreateRangePartitionedTableIT {\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  private static final String BIGQUERY_DATASET_NAME = System.getenv(\"BIGQUERY_DATASET_NAME\");\n+\n+  private static void requireEnvVar(String varName) {\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"BIGQUERY_DATASET_NAME\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    System.setOut(null);\n+  }\n+\n+  @Test\n+  public void testCreateRangePartitionedTable() {\n+    String tableName = \"RANGE_PARTITIONED_TABLE\";\n+    Schema schema =\n+        Schema.of(\n+            Field.of(\"integerField\", StandardSQLTypeName.INT64),\n+            Field.of(\"stringField\", StandardSQLTypeName.STRING),\n+            Field.of(\"booleanField\", StandardSQLTypeName.BOOL),\n+            Field.of(\"dateField\", StandardSQLTypeName.DATE));\n+\n+    CreateRangePartitionedTable.createRangePartitionedTable(\n+        BIGQUERY_DATASET_NAME, tableName, schema);\n+\n+    assertThat(bout.toString()).contains(\"Range partitioned table created successfully\");\n+\n+    // Clean up\n+    DeleteTable.deleteTable(BIGQUERY_DATASET_NAME, tableName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f41085689a45420f23471dfa5c8a23d6bf1c412"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3474, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}