{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDA3MzMw", "number": 214, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMToyNToyM1rODl8mcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjozMjoxN1rODmfCXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTE2Nzg2OnYy", "diffSide": "RIGHT", "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMToyNToyM1rOFzH7kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMToyNToyM1rOFzH7kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MTYzMw==", "bodyText": "Doesn't really make sense to print this multiple times.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                System.out.println(\"Datasets:\");\n          \n          \n            \n                System.out.println(\"Auth succeeded with multiple scopes. Datasets:\");", "url": "https://github.com/googleapis/java-bigquery/pull/214#discussion_r389151633", "createdAt": "2020-03-06T21:25:23Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_drive_scope]\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.ServiceAccountCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Dataset;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+\n+public class AuthDriveScope {\n+\n+  public static void setAuthDriveScope() throws IOException {\n+    // Create credentials with Drive & BigQuery API scopes.\n+    // Both APIs must be enabled for your project before running this code.\n+    GoogleCredentials credentials =\n+        ServiceAccountCredentials.getApplicationDefault()\n+            .createScoped(\n+                ImmutableSet.of(\n+                    \"https://www.googleapis.com/auth/bigquery\",\n+                    \"https://www.googleapis.com/auth/drive\"));\n+\n+    // Instantiate a client.\n+    BigQuery bigquery =\n+        BigQueryOptions.newBuilder().setCredentials(credentials).build().getService();\n+\n+    // Use the client.\n+    System.out.println(\"Datasets:\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70554b3d146aab067ee45966c4dff5dae3695d17"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTE2ODgyOnYy", "diffSide": "RIGHT", "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMToyNTo0M1rOFzH8Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMToyNTo0M1rOFzH8Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MTc2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      \"Auth succeeded with multiple scopes. Dataset %s%n\", dataset.getDatasetId().getDataset());\n          \n          \n            \n                      \"Dataset: %s%n\", dataset.getDatasetId().getDataset());", "url": "https://github.com/googleapis/java-bigquery/pull/214#discussion_r389151767", "createdAt": "2020-03-06T21:25:43Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_drive_scope]\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.ServiceAccountCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Dataset;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+\n+public class AuthDriveScope {\n+\n+  public static void setAuthDriveScope() throws IOException {\n+    // Create credentials with Drive & BigQuery API scopes.\n+    // Both APIs must be enabled for your project before running this code.\n+    GoogleCredentials credentials =\n+        ServiceAccountCredentials.getApplicationDefault()\n+            .createScoped(\n+                ImmutableSet.of(\n+                    \"https://www.googleapis.com/auth/bigquery\",\n+                    \"https://www.googleapis.com/auth/drive\"));\n+\n+    // Instantiate a client.\n+    BigQuery bigquery =\n+        BigQueryOptions.newBuilder().setCredentials(credentials).build().getService();\n+\n+    // Use the client.\n+    System.out.println(\"Datasets:\");\n+    for (Dataset dataset : bigquery.listDatasets().iterateAll()) {\n+      System.out.printf(\n+          \"Auth succeeded with multiple scopes. Dataset %s%n\", dataset.getDatasetId().getDataset());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70554b3d146aab067ee45966c4dff5dae3695d17"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTE3NDM4OnYy", "diffSide": "RIGHT", "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMToyNzo0MVrOFzH_cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODowNzoyMVrOFzztyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MjYyNg==", "bodyText": "Can we use the wording on the other samples? About reusing the client for multiple requests?", "url": "https://github.com/googleapis/java-bigquery/pull/214#discussion_r389152626", "createdAt": "2020-03-06T21:27:41Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_drive_scope]\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.ServiceAccountCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Dataset;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+\n+public class AuthDriveScope {\n+\n+  public static void setAuthDriveScope() throws IOException {\n+    // Create credentials with Drive & BigQuery API scopes.\n+    // Both APIs must be enabled for your project before running this code.\n+    GoogleCredentials credentials =\n+        ServiceAccountCredentials.getApplicationDefault()\n+            .createScoped(\n+                ImmutableSet.of(\n+                    \"https://www.googleapis.com/auth/bigquery\",\n+                    \"https://www.googleapis.com/auth/drive\"));\n+\n+    // Instantiate a client.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70554b3d146aab067ee45966c4dff5dae3695d17"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2OTAwMQ==", "bodyText": "yes - will do", "url": "https://github.com/googleapis/java-bigquery/pull/214#discussion_r389869001", "createdAt": "2020-03-09T18:07:21Z", "author": {"login": "stephaniewang526"}, "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_drive_scope]\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.ServiceAccountCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Dataset;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+\n+public class AuthDriveScope {\n+\n+  public static void setAuthDriveScope() throws IOException {\n+    // Create credentials with Drive & BigQuery API scopes.\n+    // Both APIs must be enabled for your project before running this code.\n+    GoogleCredentials credentials =\n+        ServiceAccountCredentials.getApplicationDefault()\n+            .createScoped(\n+                ImmutableSet.of(\n+                    \"https://www.googleapis.com/auth/bigquery\",\n+                    \"https://www.googleapis.com/auth/drive\"));\n+\n+    // Instantiate a client.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MjYyNg=="}, "originalCommit": {"oid": "70554b3d146aab067ee45966c4dff5dae3695d17"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTE3NTYzOnYy", "diffSide": "RIGHT", "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMToyODowOFrOFzIAKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODowNzozMlrOFzzuMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MjgwOA==", "bodyText": "Shouldn't this catch the BigQueryException error?", "url": "https://github.com/googleapis/java-bigquery/pull/214#discussion_r389152808", "createdAt": "2020-03-06T21:28:08Z", "author": {"login": "kurtisvg"}, "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_drive_scope]\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.ServiceAccountCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Dataset;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+\n+public class AuthDriveScope {\n+\n+  public static void setAuthDriveScope() throws IOException {\n+    // Create credentials with Drive & BigQuery API scopes.\n+    // Both APIs must be enabled for your project before running this code.\n+    GoogleCredentials credentials =\n+        ServiceAccountCredentials.getApplicationDefault()\n+            .createScoped(\n+                ImmutableSet.of(\n+                    \"https://www.googleapis.com/auth/bigquery\",\n+                    \"https://www.googleapis.com/auth/drive\"));\n+\n+    // Instantiate a client.\n+    BigQuery bigquery =\n+        BigQueryOptions.newBuilder().setCredentials(credentials).build().getService();\n+\n+    // Use the client.\n+    System.out.println(\"Datasets:\");\n+    for (Dataset dataset : bigquery.listDatasets().iterateAll()) {\n+      System.out.printf(\n+          \"Auth succeeded with multiple scopes. Dataset %s%n\", dataset.getDatasetId().getDataset());\n+    }\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70554b3d146aab067ee45966c4dff5dae3695d17"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2OTEwNA==", "bodyText": "yes - agree", "url": "https://github.com/googleapis/java-bigquery/pull/214#discussion_r389869104", "createdAt": "2020-03-09T18:07:32Z", "author": {"login": "stephaniewang526"}, "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_drive_scope]\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.ServiceAccountCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Dataset;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+\n+public class AuthDriveScope {\n+\n+  public static void setAuthDriveScope() throws IOException {\n+    // Create credentials with Drive & BigQuery API scopes.\n+    // Both APIs must be enabled for your project before running this code.\n+    GoogleCredentials credentials =\n+        ServiceAccountCredentials.getApplicationDefault()\n+            .createScoped(\n+                ImmutableSet.of(\n+                    \"https://www.googleapis.com/auth/bigquery\",\n+                    \"https://www.googleapis.com/auth/drive\"));\n+\n+    // Instantiate a client.\n+    BigQuery bigquery =\n+        BigQueryOptions.newBuilder().setCredentials(credentials).build().getService();\n+\n+    // Use the client.\n+    System.out.println(\"Datasets:\");\n+    for (Dataset dataset : bigquery.listDatasets().iterateAll()) {\n+      System.out.printf(\n+          \"Auth succeeded with multiple scopes. Dataset %s%n\", dataset.getDatasetId().getDataset());\n+    }\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1MjgwOA=="}, "originalCommit": {"oid": "70554b3d146aab067ee45966c4dff5dae3695d17"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjgwOTg5OnYy", "diffSide": "RIGHT", "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjozMjoxN1rOFz7koQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjozMjoxN1rOFz7koQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk5NzcyOQ==", "bodyText": "Ok, but if you aren't handling it, and not providing any useful advice, you probably should let the higher level handle.", "url": "https://github.com/googleapis/java-bigquery/pull/214#discussion_r389997729", "createdAt": "2020-03-09T22:32:17Z", "author": {"login": "lesv"}, "path": "samples/src/main/java/com/example/bigquery/AuthDriveScope.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_auth_drive_scope]\n+import com.google.auth.oauth2.GoogleCredentials;\n+import com.google.auth.oauth2.ServiceAccountCredentials;\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Dataset;\n+import com.google.common.collect.ImmutableSet;\n+import java.io.IOException;\n+\n+public class AuthDriveScope {\n+\n+  public static void setAuthDriveScope() throws IOException {\n+    // Create credentials with Drive & BigQuery API scopes.\n+    // Both APIs must be enabled for your project before running this code.\n+    GoogleCredentials credentials =\n+        ServiceAccountCredentials.getApplicationDefault()\n+            .createScoped(\n+                ImmutableSet.of(\n+                    \"https://www.googleapis.com/auth/bigquery\",\n+                    \"https://www.googleapis.com/auth/drive\"));\n+\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery =\n+          BigQueryOptions.newBuilder().setCredentials(credentials).build().getService();\n+\n+      // Use the client.\n+      System.out.println(\"Auth succeeded with multiple scopes. Datasets:\");\n+      for (Dataset dataset : bigquery.listDatasets().iterateAll()) {\n+        System.out.printf(\"Dataset: %s%n\", dataset.getDatasetId().getDataset());\n+      }\n+    } catch (BigQueryException e) {\n+      System.out.println(\"Auth failed due to error: \\n\" + e.toString());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26d8015103e592a0ea1a2d1ffdcd3faca072dcf2"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3505, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}