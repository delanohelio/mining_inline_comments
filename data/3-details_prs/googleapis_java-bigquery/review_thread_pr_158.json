{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNzE5NTEy", "number": 158, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNToxODozMlrODduEqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjo0MDoxNVrODjhvTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDkwMTUzOnYy", "diffSide": "RIGHT", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNToxODozMlrOFme3pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToyNjo1M1rOFu4-uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NTk3Mw==", "bodyText": "This is an API breaking change that requires a major version bump per semver.  If this were non-abstract with a default implementation that would not be so.", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r375895973", "createdAt": "2020-02-06T15:18:32Z", "author": {"login": "elharo"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "diffHunk": "@@ -130,6 +131,8 @@ public Table apply(TableInfo tableInfo) {\n     public abstract TableInfo build();\n \n     public abstract Builder setEncryptionConfiguration(EncryptionConfiguration configuration);\n+\n+    public abstract Builder setRequirePartitionFilter(Boolean requirePartitionFilter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b206c741fcac69c03814609eb78bc2159a8c618"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjIxNjI2MQ==", "bodyText": "@elharo please take a look on this existing PR Ref https://github.com/googleapis/google-cloud-java/pull/6321/files#diff-2814f0d886d621f57ac6eaaabd329765R127-R134, same thing introduced before and it did not break any API change.", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r376216261", "createdAt": "2020-02-07T05:06:03Z", "author": {"login": "pmakani"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "diffHunk": "@@ -130,6 +131,8 @@ public Table apply(TableInfo tableInfo) {\n     public abstract TableInfo build();\n \n     public abstract Builder setEncryptionConfiguration(EncryptionConfiguration configuration);\n+\n+    public abstract Builder setRequirePartitionFilter(Boolean requirePartitionFilter);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NTk3Mw=="}, "originalCommit": {"oid": "8b206c741fcac69c03814609eb78bc2159a8c618"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1Mjg5Mw==", "bodyText": "This breaks all existing subclasses. It looks like an incompatible API change. So does the one you cite. What am I missing?", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r376352893", "createdAt": "2020-02-07T11:51:57Z", "author": {"login": "elharo"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "diffHunk": "@@ -130,6 +131,8 @@ public Table apply(TableInfo tableInfo) {\n     public abstract TableInfo build();\n \n     public abstract Builder setEncryptionConfiguration(EncryptionConfiguration configuration);\n+\n+    public abstract Builder setRequirePartitionFilter(Boolean requirePartitionFilter);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NTk3Mw=="}, "originalCommit": {"oid": "8b206c741fcac69c03814609eb78bc2159a8c618"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM2MTY0Mg==", "bodyText": "@shollyman do you think if users are extending TableInfo.Builder ? i think it's most unlikely that's why i introduced setter.", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r376361642", "createdAt": "2020-02-07T12:16:52Z", "author": {"login": "pmakani"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "diffHunk": "@@ -130,6 +131,8 @@ public Table apply(TableInfo tableInfo) {\n     public abstract TableInfo build();\n \n     public abstract Builder setEncryptionConfiguration(EncryptionConfiguration configuration);\n+\n+    public abstract Builder setRequirePartitionFilter(Boolean requirePartitionFilter);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NTk3Mw=="}, "originalCommit": {"oid": "8b206c741fcac69c03814609eb78bc2159a8c618"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM2MjIxMQ==", "bodyText": "@elharo TableInfo.Builder is extended only once within the client.", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r376362211", "createdAt": "2020-02-07T12:18:36Z", "author": {"login": "pmakani"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "diffHunk": "@@ -130,6 +131,8 @@ public Table apply(TableInfo tableInfo) {\n     public abstract TableInfo build();\n \n     public abstract Builder setEncryptionConfiguration(EncryptionConfiguration configuration);\n+\n+    public abstract Builder setRequirePartitionFilter(Boolean requirePartitionFilter);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NTk3Mw=="}, "originalCommit": {"oid": "8b206c741fcac69c03814609eb78bc2159a8c618"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM2NzUxOQ==", "bodyText": "The class is non-final, public, and has an implicit public constructor. In hindsight, I suspect that was a mistake but we're stuck with it now until the next major version bump. We've made a commitment to our users not to break the API until then so we need to find another way around this. There are several. The cleanest and simplest is probably a default implementation that makes the method non-abstract.", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r376367519", "createdAt": "2020-02-07T12:33:14Z", "author": {"login": "elharo"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "diffHunk": "@@ -130,6 +131,8 @@ public Table apply(TableInfo tableInfo) {\n     public abstract TableInfo build();\n \n     public abstract Builder setEncryptionConfiguration(EncryptionConfiguration configuration);\n+\n+    public abstract Builder setRequirePartitionFilter(Boolean requirePartitionFilter);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NTk3Mw=="}, "originalCommit": {"oid": "8b206c741fcac69c03814609eb78bc2159a8c618"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyMjk4OQ==", "bodyText": "If I'm parsing elharo's comment correctly, the issue is we're starting with a new abstract implementation that all implementors must deal with, and that may break existing subclassing.\nThe default implementation (in the backend) treats this as false when not specified.  However, an alternate default implementation choice here may be to surface a NotImplementedException to signal to third parties about missing functionality.  Which feels like the better solution here to you @elharo?", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r380822989", "createdAt": "2020-02-18T17:27:51Z", "author": {"login": "shollyman"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "diffHunk": "@@ -130,6 +131,8 @@ public Table apply(TableInfo tableInfo) {\n     public abstract TableInfo build();\n \n     public abstract Builder setEncryptionConfiguration(EncryptionConfiguration configuration);\n+\n+    public abstract Builder setRequirePartitionFilter(Boolean requirePartitionFilter);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NTk3Mw=="}, "originalCommit": {"oid": "8b206c741fcac69c03814609eb78bc2159a8c618"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkxNjc5Nw==", "bodyText": "Can the default implementation simply set the field in the usual way?", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r380916797", "createdAt": "2020-02-18T20:28:26Z", "author": {"login": "elharo"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "diffHunk": "@@ -130,6 +131,8 @@ public Table apply(TableInfo tableInfo) {\n     public abstract TableInfo build();\n \n     public abstract Builder setEncryptionConfiguration(EncryptionConfiguration configuration);\n+\n+    public abstract Builder setRequirePartitionFilter(Boolean requirePartitionFilter);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NTk3Mw=="}, "originalCommit": {"oid": "8b206c741fcac69c03814609eb78bc2159a8c618"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcxMjM3Nw==", "bodyText": "will add an empty default implementation.", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r384712377", "createdAt": "2020-02-26T19:26:53Z", "author": {"login": "stephaniewang526"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "diffHunk": "@@ -130,6 +131,8 @@ public Table apply(TableInfo tableInfo) {\n     public abstract TableInfo build();\n \n     public abstract Builder setEncryptionConfiguration(EncryptionConfiguration configuration);\n+\n+    public abstract Builder setRequirePartitionFilter(Boolean requirePartitionFilter);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NTk3Mw=="}, "originalCommit": {"oid": "8b206c741fcac69c03814609eb78bc2159a8c618"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDkwNTUwOnYy", "diffSide": "RIGHT", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/Table.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNToxOTozNVrOFme6Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNzo1MDoxMVrOFu1yMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NjY0Ng==", "bodyText": "did the return type change here or did you just remove the outer class?", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r375896646", "createdAt": "2020-02-06T15:19:35Z", "author": {"login": "elharo"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/Table.java", "diffHunk": "@@ -139,7 +139,7 @@ public Builder setDefinition(TableDefinition definition) {\n     }\n \n     @Override\n-    public TableInfo.Builder setEncryptionConfiguration(EncryptionConfiguration configuration) {\n+    public Builder setEncryptionConfiguration(EncryptionConfiguration configuration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b206c741fcac69c03814609eb78bc2159a8c618"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY0NzQ0NQ==", "bodyText": "@pmakani hi Praful - could you explain why TableInfo need to be removed here please?", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r384647445", "createdAt": "2020-02-26T17:27:31Z", "author": {"login": "stephaniewang526"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/Table.java", "diffHunk": "@@ -139,7 +139,7 @@ public Builder setDefinition(TableDefinition definition) {\n     }\n \n     @Override\n-    public TableInfo.Builder setEncryptionConfiguration(EncryptionConfiguration configuration) {\n+    public Builder setEncryptionConfiguration(EncryptionConfiguration configuration) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NjY0Ng=="}, "originalCommit": {"oid": "8b206c741fcac69c03814609eb78bc2159a8c618"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY1Mzc3Nw==", "bodyText": "caught up w Praful -- this is to make the method consistent with the other existing methods which are not using TableInfo as an outer class.", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r384653777", "createdAt": "2020-02-26T17:39:02Z", "author": {"login": "stephaniewang526"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/Table.java", "diffHunk": "@@ -139,7 +139,7 @@ public Builder setDefinition(TableDefinition definition) {\n     }\n \n     @Override\n-    public TableInfo.Builder setEncryptionConfiguration(EncryptionConfiguration configuration) {\n+    public Builder setEncryptionConfiguration(EncryptionConfiguration configuration) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NjY0Ng=="}, "originalCommit": {"oid": "8b206c741fcac69c03814609eb78bc2159a8c618"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2MDAxOA==", "bodyText": "Looking at this again. This is not OK absent a major version bump, and it probably doesn't justify that. I would mark this method deprecated and introduce a new method that returns a Table.Builder, but you don't need to delete this one now.", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r384660018", "createdAt": "2020-02-26T17:50:11Z", "author": {"login": "elharo"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/Table.java", "diffHunk": "@@ -139,7 +139,7 @@ public Builder setDefinition(TableDefinition definition) {\n     }\n \n     @Override\n-    public TableInfo.Builder setEncryptionConfiguration(EncryptionConfiguration configuration) {\n+    public Builder setEncryptionConfiguration(EncryptionConfiguration configuration) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NjY0Ng=="}, "originalCommit": {"oid": "8b206c741fcac69c03814609eb78bc2159a8c618"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDk1ODMzOnYy", "diffSide": "RIGHT", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMjozNzozOVrOFvQnkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDo1ODozMlrOFvU1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA5OTY2Ng==", "bodyText": "delete \"to be specified\"", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r385099666", "createdAt": "2020-02-27T12:37:39Z", "author": {"login": "elharo"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "diffHunk": "@@ -399,6 +414,14 @@ public BigInteger getNumRows() {\n     return labels.userMap();\n   }\n \n+  /**\n+   * Returns true if a partition filter (that can be used for partition elimination) is required to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b946f382e59a50f4d15893b7ee7b6a63ac36363a"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE2ODY5NA==", "bodyText": "will do once GH is back up", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r385168694", "createdAt": "2020-02-27T14:58:32Z", "author": {"login": "stephaniewang526"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "diffHunk": "@@ -399,6 +414,14 @@ public BigInteger getNumRows() {\n     return labels.userMap();\n   }\n \n+  /**\n+   * Returns true if a partition filter (that can be used for partition elimination) is required to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTA5OTY2Ng=="}, "originalCommit": {"oid": "b946f382e59a50f4d15893b7ee7b6a63ac36363a"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTc5NTM0OnYy", "diffSide": "RIGHT", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjo0MDoxNVrOFvYjOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjo0MDoxNVrOFvYjOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIyOTYyNA==", "bodyText": "@pmakani - hey i can't seem to get this right on GH... could you please see to getting the comment here right to be \"is required for...\"", "url": "https://github.com/googleapis/java-bigquery/pull/158#discussion_r385229624", "createdAt": "2020-02-27T16:40:15Z", "author": {"login": "stephaniewang526"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableInfo.java", "diffHunk": "@@ -399,6 +414,14 @@ public BigInteger getNumRows() {\n     return labels.userMap();\n   }\n \n+  /**\n+   * Returns true if a partition filter (that can be used for partition elimination) is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d669cb88d08a8bfc7086bb00c629a65d7e4af04"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3495, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}