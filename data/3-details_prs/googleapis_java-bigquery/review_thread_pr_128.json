{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NjkxMzQy", "number": 128, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDo1OTozNlrODbBX0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoxMToyMVrODbY-OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjYwNjI2OnYy", "diffSide": "RIGHT", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDo1OTozNlrOFiRSOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDo1OTozNlrOFiRSOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ3OTA5Ng==", "bodyText": "Is this considered a breaking change? If not, let's be more specific with IllegalArgumentException, NullPointerException.", "url": "https://github.com/googleapis/java-bigquery/pull/128#discussion_r371479096", "createdAt": "2020-01-27T20:59:36Z", "author": {"login": "tswast"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "diffHunk": "@@ -263,7 +263,7 @@ Table toPb() {\n   }\n \n   @SuppressWarnings(\"unchecked\")\n-  static StandardTableDefinition fromPb(Table tablePb) {\n+  static StandardTableDefinition fromPb(Table tablePb) throws Throwable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "683220e4e45fc89baaa622c9486fe456be956b56"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjYxMDMzOnYy", "diffSide": "RIGHT", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableDefinition.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTowMDo0MFrOFiRUfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTowMDo0MFrOFiRUfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ3OTY3Nw==", "bodyText": "Ditto. I'm concerned that this might be a breaking change. I guess it's okay since it's protected?\nLet's be more specific than \"Throwable\" and use IllegalArgumentException, NullPointerException.", "url": "https://github.com/googleapis/java-bigquery/pull/128#discussion_r371479677", "createdAt": "2020-01-27T21:00:40Z", "author": {"login": "tswast"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/TableDefinition.java", "diffHunk": "@@ -145,7 +146,7 @@ Table toPb() {\n   }\n \n   @SuppressWarnings(\"unchecked\")\n-  static <T extends TableDefinition> T fromPb(Table tablePb) {\n+  static <T extends TableDefinition> T fromPb(Table tablePb) throws IOException, Throwable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "683220e4e45fc89baaa622c9486fe456be956b56"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjY4OTM4OnYy", "diffSide": "RIGHT", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMToyODo0N1rOFiSFuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTowMzowN1rOFioUlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5MjI4Mw==", "bodyText": "Are we expecting to get errors when constructing the exception?", "url": "https://github.com/googleapis/java-bigquery/pull/128#discussion_r371492283", "createdAt": "2020-01-27T21:28:47Z", "author": {"login": "tswast"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "diffHunk": "@@ -272,7 +272,27 @@ static StandardTableDefinition fromPb(Table tablePb) {\n       builder.setStreamingBuffer(StreamingBuffer.fromPb(tablePb.getStreamingBuffer()));\n     }\n     if (tablePb.getTimePartitioning() != null) {\n-      builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      try {\n+        builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      } catch (IllegalArgumentException e) {\n+        throw new IllegalArgumentException(\n+            \"Got unexpected time partitioning \"\n+                + tablePb.getTimePartitioning()\n+                + \" in table \"\n+                + tablePb.getTableReference(),\n+            e);\n+      } catch (NullPointerException e) {\n+        try {\n+          throw new NullPointerException(\n+                  \"Got unexpected time partitioning \"\n+                      + tablePb.getTimePartitioning()\n+                      + \" in table \"\n+                      + tablePb.getTableReference())\n+              .initCause(e);\n+        } catch (Throwable throwable) {\n+          throwable.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f18fb161bddb3bab26fc19ca90f8e146cbacac3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5MjUzOA==", "bodyText": "Or is this due to the initCause? If so, let's add a comment.", "url": "https://github.com/googleapis/java-bigquery/pull/128#discussion_r371492538", "createdAt": "2020-01-27T21:29:21Z", "author": {"login": "tswast"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "diffHunk": "@@ -272,7 +272,27 @@ static StandardTableDefinition fromPb(Table tablePb) {\n       builder.setStreamingBuffer(StreamingBuffer.fromPb(tablePb.getStreamingBuffer()));\n     }\n     if (tablePb.getTimePartitioning() != null) {\n-      builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      try {\n+        builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      } catch (IllegalArgumentException e) {\n+        throw new IllegalArgumentException(\n+            \"Got unexpected time partitioning \"\n+                + tablePb.getTimePartitioning()\n+                + \" in table \"\n+                + tablePb.getTableReference(),\n+            e);\n+      } catch (NullPointerException e) {\n+        try {\n+          throw new NullPointerException(\n+                  \"Got unexpected time partitioning \"\n+                      + tablePb.getTimePartitioning()\n+                      + \" in table \"\n+                      + tablePb.getTableReference())\n+              .initCause(e);\n+        } catch (Throwable throwable) {\n+          throwable.printStackTrace();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5MjI4Mw=="}, "originalCommit": {"oid": "7f18fb161bddb3bab26fc19ca90f8e146cbacac3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwMzc1MQ==", "bodyText": "due to initCause - added comment", "url": "https://github.com/googleapis/java-bigquery/pull/128#discussion_r371503751", "createdAt": "2020-01-27T21:53:48Z", "author": {"login": "stephaniewang526"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "diffHunk": "@@ -272,7 +272,27 @@ static StandardTableDefinition fromPb(Table tablePb) {\n       builder.setStreamingBuffer(StreamingBuffer.fromPb(tablePb.getStreamingBuffer()));\n     }\n     if (tablePb.getTimePartitioning() != null) {\n-      builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      try {\n+        builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      } catch (IllegalArgumentException e) {\n+        throw new IllegalArgumentException(\n+            \"Got unexpected time partitioning \"\n+                + tablePb.getTimePartitioning()\n+                + \" in table \"\n+                + tablePb.getTableReference(),\n+            e);\n+      } catch (NullPointerException e) {\n+        try {\n+          throw new NullPointerException(\n+                  \"Got unexpected time partitioning \"\n+                      + tablePb.getTimePartitioning()\n+                      + \" in table \"\n+                      + tablePb.getTableReference())\n+              .initCause(e);\n+        } catch (Throwable throwable) {\n+          throwable.printStackTrace();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5MjI4Mw=="}, "originalCommit": {"oid": "7f18fb161bddb3bab26fc19ca90f8e146cbacac3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg1NjUzMg==", "bodyText": "No - this is for .initiCause", "url": "https://github.com/googleapis/java-bigquery/pull/128#discussion_r371856532", "createdAt": "2020-01-28T15:03:07Z", "author": {"login": "stephaniewang526"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "diffHunk": "@@ -272,7 +272,27 @@ static StandardTableDefinition fromPb(Table tablePb) {\n       builder.setStreamingBuffer(StreamingBuffer.fromPb(tablePb.getStreamingBuffer()));\n     }\n     if (tablePb.getTimePartitioning() != null) {\n-      builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      try {\n+        builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      } catch (IllegalArgumentException e) {\n+        throw new IllegalArgumentException(\n+            \"Got unexpected time partitioning \"\n+                + tablePb.getTimePartitioning()\n+                + \" in table \"\n+                + tablePb.getTableReference(),\n+            e);\n+      } catch (NullPointerException e) {\n+        try {\n+          throw new NullPointerException(\n+                  \"Got unexpected time partitioning \"\n+                      + tablePb.getTimePartitioning()\n+                      + \" in table \"\n+                      + tablePb.getTableReference())\n+              .initCause(e);\n+        } catch (Throwable throwable) {\n+          throwable.printStackTrace();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5MjI4Mw=="}, "originalCommit": {"oid": "7f18fb161bddb3bab26fc19ca90f8e146cbacac3"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTM2NzkyOnYy", "diffSide": "RIGHT", "path": "google-cloud-bigquery/src/test/java/com/google/cloud/bigquery/StandardTableDefinitionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNjoyNDowMVrOFirkrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNjoyNDowMVrOFirkrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTkwOTgwNQ==", "bodyText": "use try/catch and assert.fail()", "url": "https://github.com/googleapis/java-bigquery/pull/128#discussion_r371909805", "createdAt": "2020-01-28T16:24:01Z", "author": {"login": "pmakani"}, "path": "google-cloud-bigquery/src/test/java/com/google/cloud/bigquery/StandardTableDefinitionTest.java", "diffHunk": "@@ -118,6 +125,12 @@ public void testToAndFromPb() {\n         definition, TableDefinition.<StandardTableDefinition>fromPb(definition.toPb()));\n   }\n \n+  @Test(expected = IllegalArgumentException.class)\n+  public void testInvalidTableDef() {\n+    // not supposed to have this time partitioning type\n+    StandardTableDefinition.fromPb(INVALID_TABLE_DEFINITION.toPb());\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3aeac4b84a5a669b2c6b95fa4ec79abde3c451b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDQ3MDk0OnYy", "diffSide": "RIGHT", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoxMDozN1rOFi2Zyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoyODowOVrOFi22Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA4NzI0Mg==", "bodyText": "Actually, can we output the whole timePartitioning pretty-printed to a string?", "url": "https://github.com/googleapis/java-bigquery/pull/128#discussion_r372087242", "createdAt": "2020-01-28T22:10:37Z", "author": {"login": "tswast"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "diffHunk": "@@ -272,7 +272,31 @@ static StandardTableDefinition fromPb(Table tablePb) {\n       builder.setStreamingBuffer(StreamingBuffer.fromPb(tablePb.getStreamingBuffer()));\n     }\n     if (tablePb.getTimePartitioning() != null) {\n-      builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      try {\n+        builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      } catch (IllegalArgumentException e) {\n+        throw new IllegalArgumentException(\n+            \"Illegal Argument - Got unexpected time partitioning \"\n+                + tablePb.getTimePartitioning().getType()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0215d2c1416fee1cd9ce088f4e7899a6c70b24c0"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA4NzMzOA==", "bodyText": "That'll give us a little more context", "url": "https://github.com/googleapis/java-bigquery/pull/128#discussion_r372087338", "createdAt": "2020-01-28T22:10:51Z", "author": {"login": "tswast"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "diffHunk": "@@ -272,7 +272,31 @@ static StandardTableDefinition fromPb(Table tablePb) {\n       builder.setStreamingBuffer(StreamingBuffer.fromPb(tablePb.getStreamingBuffer()));\n     }\n     if (tablePb.getTimePartitioning() != null) {\n-      builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      try {\n+        builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      } catch (IllegalArgumentException e) {\n+        throw new IllegalArgumentException(\n+            \"Illegal Argument - Got unexpected time partitioning \"\n+                + tablePb.getTimePartitioning().getType()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA4NzI0Mg=="}, "originalCommit": {"oid": "0215d2c1416fee1cd9ce088f4e7899a6c70b24c0"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5NDQ4Mw==", "bodyText": "changing to using toString()", "url": "https://github.com/googleapis/java-bigquery/pull/128#discussion_r372094483", "createdAt": "2020-01-28T22:28:09Z", "author": {"login": "stephaniewang526"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "diffHunk": "@@ -272,7 +272,31 @@ static StandardTableDefinition fromPb(Table tablePb) {\n       builder.setStreamingBuffer(StreamingBuffer.fromPb(tablePb.getStreamingBuffer()));\n     }\n     if (tablePb.getTimePartitioning() != null) {\n-      builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      try {\n+        builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      } catch (IllegalArgumentException e) {\n+        throw new IllegalArgumentException(\n+            \"Illegal Argument - Got unexpected time partitioning \"\n+                + tablePb.getTimePartitioning().getType()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA4NzI0Mg=="}, "originalCommit": {"oid": "0215d2c1416fee1cd9ce088f4e7899a6c70b24c0"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDQ3Mjg4OnYy", "diffSide": "RIGHT", "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoxMToyMVrOFi2bCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMjoyODozNlrOFi221A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA4NzU2MA==", "bodyText": "Same here. Let's call getTimePartitioning().toPrettyString()", "url": "https://github.com/googleapis/java-bigquery/pull/128#discussion_r372087560", "createdAt": "2020-01-28T22:11:21Z", "author": {"login": "tswast"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "diffHunk": "@@ -272,7 +272,31 @@ static StandardTableDefinition fromPb(Table tablePb) {\n       builder.setStreamingBuffer(StreamingBuffer.fromPb(tablePb.getStreamingBuffer()));\n     }\n     if (tablePb.getTimePartitioning() != null) {\n-      builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      try {\n+        builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      } catch (IllegalArgumentException e) {\n+        throw new IllegalArgumentException(\n+            \"Illegal Argument - Got unexpected time partitioning \"\n+                + tablePb.getTimePartitioning().getType()\n+                + \" in project \"\n+                + tablePb.getTableReference().getProjectId()\n+                + \" in dataset \"\n+                + tablePb.getTableReference().getDatasetId()\n+                + \" in table \"\n+                + tablePb.getTableReference().getTableId(),\n+            e);\n+      } catch (NullPointerException e) {\n+        throw new NullPointerException(\n+            \"Null pointer - Got unexpected time partitioning \"\n+                + tablePb.getTimePartitioning().getType()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0215d2c1416fee1cd9ce088f4e7899a6c70b24c0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5NDY3Ng==", "bodyText": "changing to using toString() since toPrettyString calls for adding IOException to method signature", "url": "https://github.com/googleapis/java-bigquery/pull/128#discussion_r372094676", "createdAt": "2020-01-28T22:28:36Z", "author": {"login": "stephaniewang526"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/StandardTableDefinition.java", "diffHunk": "@@ -272,7 +272,31 @@ static StandardTableDefinition fromPb(Table tablePb) {\n       builder.setStreamingBuffer(StreamingBuffer.fromPb(tablePb.getStreamingBuffer()));\n     }\n     if (tablePb.getTimePartitioning() != null) {\n-      builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      try {\n+        builder.setTimePartitioning(TimePartitioning.fromPb(tablePb.getTimePartitioning()));\n+      } catch (IllegalArgumentException e) {\n+        throw new IllegalArgumentException(\n+            \"Illegal Argument - Got unexpected time partitioning \"\n+                + tablePb.getTimePartitioning().getType()\n+                + \" in project \"\n+                + tablePb.getTableReference().getProjectId()\n+                + \" in dataset \"\n+                + tablePb.getTableReference().getDatasetId()\n+                + \" in table \"\n+                + tablePb.getTableReference().getTableId(),\n+            e);\n+      } catch (NullPointerException e) {\n+        throw new NullPointerException(\n+            \"Null pointer - Got unexpected time partitioning \"\n+                + tablePb.getTimePartitioning().getType()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA4NzU2MA=="}, "originalCommit": {"oid": "0215d2c1416fee1cd9ce088f4e7899a6c70b24c0"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3562, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}