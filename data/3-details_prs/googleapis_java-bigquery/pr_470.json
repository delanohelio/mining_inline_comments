{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MDIyNDYw", "number": 470, "title": "docs(samples): add create job", "bodyText": "Thank you for opening a Pull Request! Before submitting your PR, there are a few things you can do to make sure it goes smoothly:\n\n Make sure to open an issue as a bug/issue before writing your code!  That way we can discuss the change, evaluate designs, and agree on the general idea\n Ensure the tests and linter pass\n Code coverage does not decrease (if any source code was changed)\n Appropriate docs were updated (if necessary)", "createdAt": "2020-06-19T10:29:42Z", "url": "https://github.com/googleapis/java-bigquery/pull/470", "merged": true, "mergeCommit": {"oid": "e63f06eeaa18386a8489b41cdad8d2c8e63fc146"}, "closed": true, "closedAt": "2020-06-19T15:52:07Z", "author": {"login": "pmakani"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsvjOnAH2gAyNDM3MDIyNDYwOjU2MWJmMzgyY2UxZDYyMDQ0MDIyNTUzYjdkYzI5MDcwYzJkMDcxMTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcs1GmwAFqTQzNDE4MDc4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "561bf382ce1d62044022553b7dc29070c2d07114", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/561bf382ce1d62044022553b7dc29070c2d07114", "committedDate": "2020-06-19T09:22:46Z", "message": "docs(samples): add create job"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDc2MDA2", "url": "https://github.com/googleapis/java-bigquery/pull/470#pullrequestreview-434076006", "createdAt": "2020-06-19T13:27:00Z", "commit": {"oid": "561bf382ce1d62044022553b7dc29070c2d07114"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzoyNzowMFrOGmUyMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzozMDozMFrOGmU5aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzOTYwMw==", "bodyText": "please add description here", "url": "https://github.com/googleapis/java-bigquery/pull/470#discussion_r442839603", "createdAt": "2020-06-19T13:27:00Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/main/java/com/example/bigquery/CreateJob.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_create_job]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Job;\n+import com.google.cloud.bigquery.JobId;\n+import com.google.cloud.bigquery.JobInfo;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.common.collect.ImmutableMap;\n+import java.util.UUID;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "561bf382ce1d62044022553b7dc29070c2d07114"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzOTk5Mw==", "bodyText": "i think we can just use the raw string like you commented out here so we don't have to create all these projectId, datasetName, tableName local vars", "url": "https://github.com/googleapis/java-bigquery/pull/470#discussion_r442839993", "createdAt": "2020-06-19T13:27:42Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/main/java/com/example/bigquery/CreateJob.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_create_job]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Job;\n+import com.google.cloud.bigquery.JobId;\n+import com.google.cloud.bigquery.JobInfo;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.common.collect.ImmutableMap;\n+import java.util.UUID;\n+\n+public class CreateJob {\n+\n+  public static void runCreateJob() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"MY_PROJECT_ID\";\n+    String datasetName = \"MY_DATASET_NAME\";\n+    String tableName = \"MY_TABLE_NAME\";\n+    // i.e. SELECT country_name from `bigquery-public-data.utility_us.country_code_iso`\n+    String query =\n+        \"SELECT country_name from `\" + projectId + \".\" + datasetName + \".\" + tableName + \"`\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "561bf382ce1d62044022553b7dc29070c2d07114"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg0MTQ1MQ==", "bodyText": "could you follow the job format similar to here \n  \n    \n      java-bigquery/samples/snippets/src/main/java/com/example/bigquery/LoadLocalFile.java\n    \n    \n         Line 70\n      in\n      0ffbac3\n    \n    \n    \n    \n\n        \n          \n           Job job = bigquery.getJob(jobId); \n        \n    \n  \n\n?", "url": "https://github.com/googleapis/java-bigquery/pull/470#discussion_r442841451", "createdAt": "2020-06-19T13:30:30Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/main/java/com/example/bigquery/CreateJob.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_create_job]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.Job;\n+import com.google.cloud.bigquery.JobId;\n+import com.google.cloud.bigquery.JobInfo;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.common.collect.ImmutableMap;\n+import java.util.UUID;\n+\n+public class CreateJob {\n+\n+  public static void runCreateJob() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"MY_PROJECT_ID\";\n+    String datasetName = \"MY_DATASET_NAME\";\n+    String tableName = \"MY_TABLE_NAME\";\n+    // i.e. SELECT country_name from `bigquery-public-data.utility_us.country_code_iso`\n+    String query =\n+        \"SELECT country_name from `\" + projectId + \".\" + datasetName + \".\" + tableName + \"`\";\n+    createJob(query);\n+  }\n+\n+  public static void createJob(String query) {\n+    try {\n+      // Initialize client that will be used to send requests. This client only needs to be created\n+      // once, and can be reused for multiple requests.\n+      BigQuery bigquery = BigQueryOptions.getDefaultInstance().getService();\n+\n+      // Specify a job configuration to set optional job resource properties.\n+      QueryJobConfiguration queryConfig =\n+          QueryJobConfiguration.newBuilder(query)\n+              .setLabels(ImmutableMap.of(\"example-label\", \"example-value\"))\n+              .build();\n+\n+      // The client libraries automatically generate a job ID.\n+      // Override the generated ID with either the job_id_prefix or job_id parameters.\n+      String jobId = \"code_sample_\" + UUID.randomUUID().toString().substring(0, 8);\n+      Job job = bigquery.create(JobInfo.of(JobId.of(jobId), queryConfig));\n+      job = job.waitFor();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "561bf382ce1d62044022553b7dc29070c2d07114"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ed2c5b4d4a72350281133974f4417d761c672ca", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/0ed2c5b4d4a72350281133974f4417d761c672ca", "committedDate": "2020-06-19T14:01:23Z", "message": "docs(samples): address feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTYwNjA5", "url": "https://github.com/googleapis/java-bigquery/pull/470#pullrequestreview-434160609", "createdAt": "2020-06-19T15:21:12Z", "commit": {"oid": "0ed2c5b4d4a72350281133974f4417d761c672ca"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNToyMToxM1rOGmYk5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNToyMToxM1rOGmYk5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwMTczMg==", "bodyText": "i believe jobId is optional right? we don't need to create our own. So I think we can link user to the documentation that explains this.", "url": "https://github.com/googleapis/java-bigquery/pull/470#discussion_r442901732", "createdAt": "2020-06-19T15:21:13Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/main/java/com/example/bigquery/CreateJob.java", "diffHunk": "@@ -52,17 +48,21 @@ public static void createJob(String query) {\n               .setLabels(ImmutableMap.of(\"example-label\", \"example-value\"))\n               .build();\n \n-      // The client libraries automatically generate a job ID.\n-      // Override the generated ID with either the job_id_prefix or job_id parameters.\n-      String jobId = \"code_sample_\" + UUID.randomUUID().toString().substring(0, 8);\n-      Job job = bigquery.create(JobInfo.of(JobId.of(jobId), queryConfig));\n-      job = job.waitFor();\n-      if (job.isDone()) {\n+      // The location and JobName must be specified; other fields can be auto-detected.\n+      String jobName = \"jobId_\" + UUID.randomUUID().toString();\n+      JobId jobId = JobId.newBuilder().setLocation(\"us\").setJob(jobName).build();\n+\n+      // Create a job with job ID\n+      bigquery.create(JobInfo.of(jobId, queryConfig));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ed2c5b4d4a72350281133974f4417d761c672ca"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c80dd44c89af5635e79aa906ab371d90c614131", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/8c80dd44c89af5635e79aa906ab371d90c614131", "committedDate": "2020-06-19T15:44:18Z", "message": "docs(samples): update comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTgwNzg2", "url": "https://github.com/googleapis/java-bigquery/pull/470#pullrequestreview-434180786", "createdAt": "2020-06-19T15:50:56Z", "commit": {"oid": "8c80dd44c89af5635e79aa906ab371d90c614131"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1196, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}