{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MDAxNDAy", "number": 223, "title": "feat: add struct query parameters", "bodyText": "Thank you for opening a Pull Request! Before submitting your PR, there are a few things you can do to make sure it goes smoothly:\n\n Make sure to open an issue as a bug/issue before writing your code!  That way we can discuss the change, evaluate designs, and agree on the general idea\n Ensure the tests and linter pass\n Code coverage does not decrease (if any source code was changed)\n Appropriate docs were updated (if necessary)\n\nFixes #203", "createdAt": "2020-03-16T05:42:38Z", "url": "https://github.com/googleapis/java-bigquery/pull/223", "merged": true, "mergeCommit": {"oid": "c1997ddaca825acd94aafb15fef65c1c272d3284"}, "closed": true, "closedAt": "2020-03-20T14:48:26Z", "author": {"login": "pmakani"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNOrXSAH2gAyMzg5MDAxNDAyOjlkNmY0ZjRmMDcwY2Y0Y2ExNGNhY2I5ZjQ5MmY2ZmFkMmRhOTNkMTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPhqe8gFqTM3NTY5ODQxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9d6f4f4f070cf4ca14cacb9f492f6fad2da93d18", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/9d6f4f4f070cf4ca14cacb9f492f6fad2da93d18", "committedDate": "2020-03-13T11:33:08Z", "message": "feat: struct query parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7acf2999ea293494b53d8c0ed15df234787030b", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/e7acf2999ea293494b53d8c0ed15df234787030b", "committedDate": "2020-03-13T11:33:08Z", "message": "feat: unit and integration test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7bc009fad1a87bc0bf030973970a5d5e1354b4e", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/e7bc009fad1a87bc0bf030973970a5d5e1354b4e", "committedDate": "2020-03-16T05:23:33Z", "message": "feat: adjust code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "056603e6e479be22c8c5c83f03b63e0d0d26b73d", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/056603e6e479be22c8c5c83f03b63e0d0d26b73d", "committedDate": "2020-03-17T05:02:29Z", "message": "feat: remove clirr and refactor code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "beb5c854eb726579cfd2a1004f2c91985fb5fbba", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/beb5c854eb726579cfd2a1004f2c91985fb5fbba", "committedDate": "2020-03-19T13:24:53Z", "message": "feat: additional test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0600cf0d0b3986c27b5061a992fe94af6a80fe3", "author": {"user": {"login": "pmakani", "name": "Praful Makani"}}, "url": "https://github.com/googleapis/java-bigquery/commit/a0600cf0d0b3986c27b5061a992fe94af6a80fe3", "committedDate": "2020-03-20T12:35:58Z", "message": "feat: add asserts for values"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1Njk4NDE2", "url": "https://github.com/googleapis/java-bigquery/pull/223#pullrequestreview-375698416", "createdAt": "2020-03-17T02:26:12Z", "commit": {"oid": "e7bc009fad1a87bc0bf030973970a5d5e1354b4e"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjoyNjoxMlrOF3L2oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjo1NDowOFrOF3MREQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQxMDIwOQ==", "bodyText": "i think testing only isNotNull is insufficient -- we should probably also validate the actual types and values to be correct explicitly.", "url": "https://github.com/googleapis/java-bigquery/pull/223#discussion_r393410209", "createdAt": "2020-03-17T02:26:12Z", "author": {"login": "stephaniewang526"}, "path": "google-cloud-bigquery/src/test/java/com/google/cloud/bigquery/QueryParameterValueTest.java", "diffHunk": "@@ -378,6 +379,32 @@ public void testFromEmptyArray() {\n     assertThat(value.getArrayValues()).isEmpty();\n   }\n \n+  @Test\n+  public void testStruct() {\n+    QueryParameterValue booleanField = QueryParameterValue.bool(true);\n+    QueryParameterValue integerField = QueryParameterValue.int64(15);\n+    QueryParameterValue stringField = QueryParameterValue.string(\"test-string\");\n+    QueryParameterValue recordField =\n+        QueryParameterValue.struct(\n+            ImmutableMap.of(\n+                \"booleanField\",\n+                booleanField,\n+                \"integerField\",\n+                integerField,\n+                \"stringField\",\n+                stringField));\n+    com.google.api.services.bigquery.model.QueryParameterValue parameterValue =\n+        recordField.toValuePb();\n+    QueryParameterType parameterType = recordField.toTypePb();\n+    QueryParameterValue queryParameterValue =\n+        QueryParameterValue.fromPb(parameterValue, parameterType);\n+    assertThat(queryParameterValue).isEqualTo(recordField);\n+    assertThat(recordField.getValue()).isNull();\n+    assertThat(recordField.getType()).isEqualTo(StandardSQLTypeName.STRUCT);\n+    assertThat(recordField.getStructTypes()).isNotNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7bc009fad1a87bc0bf030973970a5d5e1354b4e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQxMDUwMw==", "bodyText": "similar to what I comment on the unit test, i think only asserting result size being 1 is insufficient -- we should explicitly assert result's types and values.", "url": "https://github.com/googleapis/java-bigquery/pull/223#discussion_r393410503", "createdAt": "2020-03-17T02:27:22Z", "author": {"login": "stephaniewang526"}, "path": "google-cloud-bigquery/src/test/java/com/google/cloud/bigquery/it/ITBigQueryTest.java", "diffHunk": "@@ -1428,6 +1428,27 @@ public void testNamedQueryParameters() throws InterruptedException {\n     assertEquals(2, Iterables.size(result.getValues()));\n   }\n \n+  @Test\n+  public void testStructNamedQueryParameters() throws InterruptedException {\n+    QueryParameterValue booleanValue = QueryParameterValue.bool(true);\n+    QueryParameterValue stringValue = QueryParameterValue.string(\"test-stringField-5\");\n+    QueryParameterValue integerValue = QueryParameterValue.int64(10);\n+    Map<String, QueryParameterValue> struct = new HashMap<>();\n+    struct.put(\"booleanField\", booleanValue);\n+    struct.put(\"integerField\", integerValue);\n+    struct.put(\"stringField\", stringValue);\n+    QueryParameterValue recordValue = QueryParameterValue.struct(struct);\n+    String query = \"SELECT STRUCT(@recordField) AS record\";\n+    QueryJobConfiguration config =\n+        QueryJobConfiguration.newBuilder(query)\n+            .setDefaultDataset(DATASET)\n+            .setUseLegacySql(false)\n+            .addNamedParameter(\"recordField\", recordValue)\n+            .build();\n+    TableResult result = bigquery.query(config);\n+    assertEquals(1, Iterables.size(result.getValues()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7bc009fad1a87bc0bf030973970a5d5e1354b4e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQxNjk3Nw==", "bodyText": "this is causing the clirr 7013 error - I understand that this is completely consistent w the other type get methods but it would be nice if we could find an alternative to go around having to add an abstract method.", "url": "https://github.com/googleapis/java-bigquery/pull/223#discussion_r393416977", "createdAt": "2020-03-17T02:54:08Z", "author": {"login": "stephaniewang526"}, "path": "google-cloud-bigquery/src/main/java/com/google/cloud/bigquery/QueryParameterValue.java", "diffHunk": "@@ -154,13 +168,26 @@ public Builder setArrayValues(List<QueryParameterValue> arrayValues) {\n   @Nullable\n   abstract ImmutableList<QueryParameterValue> getArrayValuesInner();\n \n+  /** Returns the struct values of this parameter. The returned map, if not null, is immutable. */\n+  @Nullable\n+  public Map<String, QueryParameterValue> getStructValues() {\n+    return getStructValuesInner();\n+  }\n+\n+  @Nullable\n+  abstract Map<String, QueryParameterValue> getStructValuesInner();\n+\n   /** Returns the data type of this parameter. */\n   public abstract StandardSQLTypeName getType();\n \n   /** Returns the data type of the array elements. */\n   @Nullable\n   public abstract StandardSQLTypeName getArrayType();\n \n+  /** Returns the data type of the struct elements. */\n+  @Nullable\n+  public abstract Map<String, QueryParameterValue> getStructTypes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7bc009fad1a87bc0bf030973970a5d5e1354b4e"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1236, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}