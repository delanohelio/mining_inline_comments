{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MDY5Mjk5", "number": 853, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzowNjoxN1rOExSgTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzo1Nzo1NVrOExTljA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTE4ODYwOnYy", "diffSide": "RIGHT", "path": "samples/snippets/src/main/java/com/example/bigquery/ExportQueryResultsToS3.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzowNjoxN1rOHnWR_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODowNDozOFrOHnYLVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyMTU2NA==", "bodyText": "to query?\nAWS S3 (caps)", "url": "https://github.com/googleapis/java-bigquery/pull/853#discussion_r511021564", "createdAt": "2020-10-23T17:06:17Z", "author": {"login": "elharo"}, "path": "samples/snippets/src/main/java/com/example/bigquery/ExportQueryResultsToS3.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_omni_export_query_result_to_s3]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.cloud.bigquery.TableResult;\n+\n+// Sample to queries an external data source aws s3 using a permanent table", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b35e90557f409a3c386f6e642044c247af4b9e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA1MjYyOA==", "bodyText": "Comment updated.", "url": "https://github.com/googleapis/java-bigquery/pull/853#discussion_r511052628", "createdAt": "2020-10-23T18:04:38Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/main/java/com/example/bigquery/ExportQueryResultsToS3.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_omni_export_query_result_to_s3]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.cloud.bigquery.TableResult;\n+\n+// Sample to queries an external data source aws s3 using a permanent table", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyMTU2NA=="}, "originalCommit": {"oid": "04b35e90557f409a3c386f6e642044c247af4b9e"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTE5Mjk0OnYy", "diffSide": "RIGHT", "path": "samples/snippets/src/test/java/com/example/bigquery/ExportQueryResultsToS3IT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzowNzo0OFrOHnWU1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODowNDo1MVrOHnYLuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyMjI5Mw==", "bodyText": "log --> logger", "url": "https://github.com/googleapis/java-bigquery/pull/853#discussion_r511022293", "createdAt": "2020-10-23T17:07:48Z", "author": {"login": "elharo"}, "path": "samples/snippets/src/test/java/com/example/bigquery/ExportQueryResultsToS3IT.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ExportQueryResultsToS3IT {\n+  private final Logger log = Logger.getLogger(this.getClass().getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b35e90557f409a3c386f6e642044c247af4b9e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA1MjcyOA==", "bodyText": "Ack", "url": "https://github.com/googleapis/java-bigquery/pull/853#discussion_r511052728", "createdAt": "2020-10-23T18:04:51Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/test/java/com/example/bigquery/ExportQueryResultsToS3IT.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ExportQueryResultsToS3IT {\n+  private final Logger log = Logger.getLogger(this.getClass().getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyMjI5Mw=="}, "originalCommit": {"oid": "04b35e90557f409a3c386f6e642044c247af4b9e"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTE5NDA4OnYy", "diffSide": "RIGHT", "path": "samples/snippets/src/test/java/com/example/bigquery/ExportQueryResultsToS3IT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzowODoxNFrOHnWVmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODowNToxM1rOHnYMjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyMjQ5MA==", "bodyText": "value", "url": "https://github.com/googleapis/java-bigquery/pull/853#discussion_r511022490", "createdAt": "2020-10-23T17:08:14Z", "author": {"login": "elharo"}, "path": "samples/snippets/src/test/java/com/example/bigquery/ExportQueryResultsToS3IT.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ExportQueryResultsToS3IT {\n+  private final Logger log = Logger.getLogger(this.getClass().getName());\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+  private PrintStream originalPrintStream;\n+\n+  private static final String OMNI_PROJECT_ID = requireEnvVar(\"OMNI_PROJECT_ID\");\n+  private static final String OMNI_DATASET_NAME = requireEnvVar(\"OMNI_DATASET_NAME\");\n+  private static final String OMNI_EXTERNAL_TABLE_NAME = requireEnvVar(\"OMNI_EXTERNAL_TABLE_NAME\");\n+  private static final String AWS_WRITE_CONNECTION_ID = requireEnvVar(\"AWS_WRITE_CONNECTION_ID\");\n+\n+  private static String requireEnvVar(String varName) {\n+    String value = System.getenv(varName);\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b35e90557f409a3c386f6e642044c247af4b9e"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA1Mjk0Mw==", "bodyText": "Ack", "url": "https://github.com/googleapis/java-bigquery/pull/853#discussion_r511052943", "createdAt": "2020-10-23T18:05:13Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/test/java/com/example/bigquery/ExportQueryResultsToS3IT.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ExportQueryResultsToS3IT {\n+  private final Logger log = Logger.getLogger(this.getClass().getName());\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+  private PrintStream originalPrintStream;\n+\n+  private static final String OMNI_PROJECT_ID = requireEnvVar(\"OMNI_PROJECT_ID\");\n+  private static final String OMNI_DATASET_NAME = requireEnvVar(\"OMNI_DATASET_NAME\");\n+  private static final String OMNI_EXTERNAL_TABLE_NAME = requireEnvVar(\"OMNI_EXTERNAL_TABLE_NAME\");\n+  private static final String AWS_WRITE_CONNECTION_ID = requireEnvVar(\"AWS_WRITE_CONNECTION_ID\");\n+\n+  private static String requireEnvVar(String varName) {\n+    String value = System.getenv(varName);\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyMjQ5MA=="}, "originalCommit": {"oid": "04b35e90557f409a3c386f6e642044c247af4b9e"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTE5NjQ3OnYy", "diffSide": "RIGHT", "path": "samples/snippets/src/test/java/com/example/bigquery/ExportQueryResultsToS3IT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzowOTowNFrOHnWXHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODowNDo1NlrOHnYL4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyMjg3OQ==", "bodyText": "depends on default character set", "url": "https://github.com/googleapis/java-bigquery/pull/853#discussion_r511022879", "createdAt": "2020-10-23T17:09:04Z", "author": {"login": "elharo"}, "path": "samples/snippets/src/test/java/com/example/bigquery/ExportQueryResultsToS3IT.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ExportQueryResultsToS3IT {\n+  private final Logger log = Logger.getLogger(this.getClass().getName());\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+  private PrintStream originalPrintStream;\n+\n+  private static final String OMNI_PROJECT_ID = requireEnvVar(\"OMNI_PROJECT_ID\");\n+  private static final String OMNI_DATASET_NAME = requireEnvVar(\"OMNI_DATASET_NAME\");\n+  private static final String OMNI_EXTERNAL_TABLE_NAME = requireEnvVar(\"OMNI_EXTERNAL_TABLE_NAME\");\n+  private static final String AWS_WRITE_CONNECTION_ID = requireEnvVar(\"AWS_WRITE_CONNECTION_ID\");\n+\n+  private static String requireEnvVar(String varName) {\n+    String value = System.getenv(varName);\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));\n+    return value;\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"OMNI_PROJECT_ID\");\n+    requireEnvVar(\"OMNI_DATASET_NAME\");\n+    requireEnvVar(\"OMNI_EXTERNAL_TABLE_NAME\");\n+    requireEnvVar(\"AWS_WRITE_CONNECTION_ID\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    originalPrintStream = System.out;\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    // restores print statements in the original method\n+    System.out.flush();\n+    System.setOut(originalPrintStream);\n+    log.log(Level.INFO, bout.toString());\n+  }\n+\n+  @Test\n+  public void testQueryExternalTableAws() throws InterruptedException {\n+    String destinationUri = \"s3://omni-samples-test-bucket/client-lib-test*\";\n+    String format = \"CSV\";\n+    String query =\n+        String.format(\n+            \"EXPORT DATA WITH CONNECTION `%s` OPTIONS(uri='%s', format='%s') \"\n+                + \"AS SELECT * FROM %s.%s.%s WHERE name LIKE 'W%%'\",\n+            AWS_WRITE_CONNECTION_ID,\n+            destinationUri,\n+            format,\n+            OMNI_PROJECT_ID,\n+            OMNI_DATASET_NAME,\n+            OMNI_EXTERNAL_TABLE_NAME);\n+    ExportQueryResultsToS3.exportQueryResultsToS3(query);\n+    assertThat(bout.toString()).contains(\"Query results exported to Amazon S3 successfully.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b35e90557f409a3c386f6e642044c247af4b9e"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA1Mjc2OA==", "bodyText": "Ack", "url": "https://github.com/googleapis/java-bigquery/pull/853#discussion_r511052768", "createdAt": "2020-10-23T18:04:56Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/test/java/com/example/bigquery/ExportQueryResultsToS3IT.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ExportQueryResultsToS3IT {\n+  private final Logger log = Logger.getLogger(this.getClass().getName());\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+  private PrintStream originalPrintStream;\n+\n+  private static final String OMNI_PROJECT_ID = requireEnvVar(\"OMNI_PROJECT_ID\");\n+  private static final String OMNI_DATASET_NAME = requireEnvVar(\"OMNI_DATASET_NAME\");\n+  private static final String OMNI_EXTERNAL_TABLE_NAME = requireEnvVar(\"OMNI_EXTERNAL_TABLE_NAME\");\n+  private static final String AWS_WRITE_CONNECTION_ID = requireEnvVar(\"AWS_WRITE_CONNECTION_ID\");\n+\n+  private static String requireEnvVar(String varName) {\n+    String value = System.getenv(varName);\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));\n+    return value;\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"OMNI_PROJECT_ID\");\n+    requireEnvVar(\"OMNI_DATASET_NAME\");\n+    requireEnvVar(\"OMNI_EXTERNAL_TABLE_NAME\");\n+    requireEnvVar(\"AWS_WRITE_CONNECTION_ID\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    originalPrintStream = System.out;\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    // restores print statements in the original method\n+    System.out.flush();\n+    System.setOut(originalPrintStream);\n+    log.log(Level.INFO, bout.toString());\n+  }\n+\n+  @Test\n+  public void testQueryExternalTableAws() throws InterruptedException {\n+    String destinationUri = \"s3://omni-samples-test-bucket/client-lib-test*\";\n+    String format = \"CSV\";\n+    String query =\n+        String.format(\n+            \"EXPORT DATA WITH CONNECTION `%s` OPTIONS(uri='%s', format='%s') \"\n+                + \"AS SELECT * FROM %s.%s.%s WHERE name LIKE 'W%%'\",\n+            AWS_WRITE_CONNECTION_ID,\n+            destinationUri,\n+            format,\n+            OMNI_PROJECT_ID,\n+            OMNI_DATASET_NAME,\n+            OMNI_EXTERNAL_TABLE_NAME);\n+    ExportQueryResultsToS3.exportQueryResultsToS3(query);\n+    assertThat(bout.toString()).contains(\"Query results exported to Amazon S3 successfully.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyMjg3OQ=="}, "originalCommit": {"oid": "04b35e90557f409a3c386f6e642044c247af4b9e"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTE5NzEyOnYy", "diffSide": "RIGHT", "path": "samples/snippets/src/test/java/com/example/bigquery/ExportQueryResultsToS3IT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzowOToxOFrOHnWXlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODowNTowOVrOHnYMSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyMjk5Nw==", "bodyText": "depends on default character set", "url": "https://github.com/googleapis/java-bigquery/pull/853#discussion_r511022997", "createdAt": "2020-10-23T17:09:18Z", "author": {"login": "elharo"}, "path": "samples/snippets/src/test/java/com/example/bigquery/ExportQueryResultsToS3IT.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ExportQueryResultsToS3IT {\n+  private final Logger log = Logger.getLogger(this.getClass().getName());\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+  private PrintStream originalPrintStream;\n+\n+  private static final String OMNI_PROJECT_ID = requireEnvVar(\"OMNI_PROJECT_ID\");\n+  private static final String OMNI_DATASET_NAME = requireEnvVar(\"OMNI_DATASET_NAME\");\n+  private static final String OMNI_EXTERNAL_TABLE_NAME = requireEnvVar(\"OMNI_EXTERNAL_TABLE_NAME\");\n+  private static final String AWS_WRITE_CONNECTION_ID = requireEnvVar(\"AWS_WRITE_CONNECTION_ID\");\n+\n+  private static String requireEnvVar(String varName) {\n+    String value = System.getenv(varName);\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));\n+    return value;\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"OMNI_PROJECT_ID\");\n+    requireEnvVar(\"OMNI_DATASET_NAME\");\n+    requireEnvVar(\"OMNI_EXTERNAL_TABLE_NAME\");\n+    requireEnvVar(\"AWS_WRITE_CONNECTION_ID\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    originalPrintStream = System.out;\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    // restores print statements in the original method\n+    System.out.flush();\n+    System.setOut(originalPrintStream);\n+    log.log(Level.INFO, bout.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b35e90557f409a3c386f6e642044c247af4b9e"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA1Mjg3NA==", "bodyText": "Ack", "url": "https://github.com/googleapis/java-bigquery/pull/853#discussion_r511052874", "createdAt": "2020-10-23T18:05:09Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/test/java/com/example/bigquery/ExportQueryResultsToS3IT.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class ExportQueryResultsToS3IT {\n+  private final Logger log = Logger.getLogger(this.getClass().getName());\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+  private PrintStream originalPrintStream;\n+\n+  private static final String OMNI_PROJECT_ID = requireEnvVar(\"OMNI_PROJECT_ID\");\n+  private static final String OMNI_DATASET_NAME = requireEnvVar(\"OMNI_DATASET_NAME\");\n+  private static final String OMNI_EXTERNAL_TABLE_NAME = requireEnvVar(\"OMNI_EXTERNAL_TABLE_NAME\");\n+  private static final String AWS_WRITE_CONNECTION_ID = requireEnvVar(\"AWS_WRITE_CONNECTION_ID\");\n+\n+  private static String requireEnvVar(String varName) {\n+    String value = System.getenv(varName);\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));\n+    return value;\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"OMNI_PROJECT_ID\");\n+    requireEnvVar(\"OMNI_DATASET_NAME\");\n+    requireEnvVar(\"OMNI_EXTERNAL_TABLE_NAME\");\n+    requireEnvVar(\"AWS_WRITE_CONNECTION_ID\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    originalPrintStream = System.out;\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    // restores print statements in the original method\n+    System.out.flush();\n+    System.setOut(originalPrintStream);\n+    log.log(Level.INFO, bout.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAyMjk5Nw=="}, "originalCommit": {"oid": "04b35e90557f409a3c386f6e642044c247af4b9e"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTM2NTg4OnYy", "diffSide": "RIGHT", "path": "samples/snippets/src/main/java/com/example/bigquery/ExportQueryResultsToS3.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNzo1Nzo1NVrOHnX-Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODowNTowM1rOHnYMJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA0OTI4Ng==", "bodyText": "why the * on dest?", "url": "https://github.com/googleapis/java-bigquery/pull/853#discussion_r511049286", "createdAt": "2020-10-23T17:57:55Z", "author": {"login": "lesv"}, "path": "samples/snippets/src/main/java/com/example/bigquery/ExportQueryResultsToS3.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_omni_export_query_result_to_s3]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.cloud.bigquery.TableResult;\n+\n+// Sample to queries an external data source aws s3 using a permanent table\n+public class ExportQueryResultsToS3 {\n+\n+  public static void main(String[] args) throws InterruptedException {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"MY_PROJECT_ID\";\n+    String datasetName = \"MY_DATASET_NAME\";\n+    String externalTableName = \"MY_EXTERNAL_TABLE_NAME\";\n+    // connectionName should be in the format of connection_region.connection_name. e.g.\n+    // aws-us-east-1.s3-write-conn\n+    String connectionName = \"MY_CONNECTION_REGION.MY_CONNECTION_NAME\";\n+    String destinationUri = \"s3://your-bucket-name/*\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b35e90557f409a3c386f6e642044c247af4b9e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA1MjgzOQ==", "bodyText": "Comment added!", "url": "https://github.com/googleapis/java-bigquery/pull/853#discussion_r511052839", "createdAt": "2020-10-23T18:05:03Z", "author": {"login": "stephaniewang526"}, "path": "samples/snippets/src/main/java/com/example/bigquery/ExportQueryResultsToS3.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+// [START bigquery_omni_export_query_result_to_s3]\n+import com.google.cloud.bigquery.BigQuery;\n+import com.google.cloud.bigquery.BigQueryException;\n+import com.google.cloud.bigquery.BigQueryOptions;\n+import com.google.cloud.bigquery.QueryJobConfiguration;\n+import com.google.cloud.bigquery.TableResult;\n+\n+// Sample to queries an external data source aws s3 using a permanent table\n+public class ExportQueryResultsToS3 {\n+\n+  public static void main(String[] args) throws InterruptedException {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"MY_PROJECT_ID\";\n+    String datasetName = \"MY_DATASET_NAME\";\n+    String externalTableName = \"MY_EXTERNAL_TABLE_NAME\";\n+    // connectionName should be in the format of connection_region.connection_name. e.g.\n+    // aws-us-east-1.s3-write-conn\n+    String connectionName = \"MY_CONNECTION_REGION.MY_CONNECTION_NAME\";\n+    String destinationUri = \"s3://your-bucket-name/*\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA0OTI4Ng=="}, "originalCommit": {"oid": "04b35e90557f409a3c386f6e642044c247af4b9e"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3593, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}