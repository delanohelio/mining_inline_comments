{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMjg5NTAy", "number": 424, "title": "docs(samples): add update table using dml query sample", "bodyText": "Fixes #413", "createdAt": "2020-06-08T17:28:50Z", "url": "https://github.com/googleapis/java-bigquery/pull/424", "merged": true, "mergeCommit": {"oid": "3902ba1cf0d8a88d3e6f30b6606067503487c77d"}, "closed": true, "closedAt": "2020-06-08T18:28:08Z", "author": {"login": "stephaniewang526"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpT5t8gH2gAyNDMxMjg5NTAyOjdlNzUzN2ZmZTgzMjIwNDM1NDE1ZjNhZjEwMjRhZjJiMWU2ZDk4YmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpUtH_AFqTQyNjUwMTQ4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7e7537ffe83220435415f3af1024af2b1e6d98bc", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/7e7537ffe83220435415f3af1024af2b1e6d98bc", "committedDate": "2020-06-08T17:28:13Z", "message": "docs(samples): add update table using dml query sample"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NDY1NDU1", "url": "https://github.com/googleapis/java-bigquery/pull/424#pullrequestreview-426465455", "createdAt": "2020-06-08T17:34:23Z", "commit": {"oid": "7e7537ffe83220435415f3af1024af2b1e6d98bc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzozNDoyM1rOGgo6aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzozNToxMFrOGgo8Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3NzkzMQ==", "bodyText": "You are using getenv here, but also have requireEnvVar below. Maybe use requireEnvVar here but have it to return a value?", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436877931", "createdAt": "2020-06-08T17:34:23Z", "author": {"login": "kurtisvg"}, "path": "samples/snippets/src/test/java/com/example/bigquery/UpdateTableDMLIT.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.LegacySQLTypeName;\n+import com.google.cloud.bigquery.Schema;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.nio.file.FileSystems;\n+import java.nio.file.Path;\n+import java.util.UUID;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class UpdateTableDMLIT {\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  private static final String BIGQUERY_DATASET_NAME = System.getenv(\"BIGQUERY_DATASET_NAME\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7537ffe83220435415f3af1024af2b1e6d98bc"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3ODMxMg==", "bodyText": "Should this be set up?", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436878312", "createdAt": "2020-06-08T17:34:59Z", "author": {"login": "kurtisvg"}, "path": "samples/snippets/src/test/java/com/example/bigquery/UpdateTableDMLIT.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.LegacySQLTypeName;\n+import com.google.cloud.bigquery.Schema;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.nio.file.FileSystems;\n+import java.nio.file.Path;\n+import java.util.UUID;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class UpdateTableDMLIT {\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  private static final String BIGQUERY_DATASET_NAME = System.getenv(\"BIGQUERY_DATASET_NAME\");\n+\n+  private static void requireEnvVar(String varName) {\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"BIGQUERY_DATASET_NAME\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    System.setOut(null);\n+  }\n+\n+  @Test\n+  public void testUpdateTableDML() throws IOException, InterruptedException {\n+    String tableName = \"UserSessions_TEST_\" + UUID.randomUUID().toString().replace('-', '_');\n+    Schema schema =\n+        Schema.of(\n+            Field.of(\"id\", LegacySQLTypeName.STRING),\n+            Field.of(\"user_id\", LegacySQLTypeName.STRING),\n+            Field.of(\"login_time\", LegacySQLTypeName.STRING),\n+            Field.of(\"logout_time\", LegacySQLTypeName.STRING),\n+            Field.of(\"ip_address\", LegacySQLTypeName.STRING));\n+\n+    CreateTable.createTable(BIGQUERY_DATASET_NAME, tableName, schema);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7537ffe83220435415f3af1024af2b1e6d98bc"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg3ODQzMQ==", "bodyText": "Should this be teardown?", "url": "https://github.com/googleapis/java-bigquery/pull/424#discussion_r436878431", "createdAt": "2020-06-08T17:35:10Z", "author": {"login": "kurtisvg"}, "path": "samples/snippets/src/test/java/com/example/bigquery/UpdateTableDMLIT.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.bigquery;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static junit.framework.TestCase.assertNotNull;\n+\n+import com.google.cloud.bigquery.Field;\n+import com.google.cloud.bigquery.LegacySQLTypeName;\n+import com.google.cloud.bigquery.Schema;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.nio.file.FileSystems;\n+import java.nio.file.Path;\n+import java.util.UUID;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+public class UpdateTableDMLIT {\n+  private ByteArrayOutputStream bout;\n+  private PrintStream out;\n+\n+  private static final String BIGQUERY_DATASET_NAME = System.getenv(\"BIGQUERY_DATASET_NAME\");\n+\n+  private static void requireEnvVar(String varName) {\n+    assertNotNull(\n+        \"Environment variable \" + varName + \" is required to perform these tests.\",\n+        System.getenv(varName));\n+  }\n+\n+  @BeforeClass\n+  public static void checkRequirements() {\n+    requireEnvVar(\"BIGQUERY_DATASET_NAME\");\n+  }\n+\n+  @Before\n+  public void setUp() {\n+    bout = new ByteArrayOutputStream();\n+    out = new PrintStream(bout);\n+    System.setOut(out);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    System.setOut(null);\n+  }\n+\n+  @Test\n+  public void testUpdateTableDML() throws IOException, InterruptedException {\n+    String tableName = \"UserSessions_TEST_\" + UUID.randomUUID().toString().replace('-', '_');\n+    Schema schema =\n+        Schema.of(\n+            Field.of(\"id\", LegacySQLTypeName.STRING),\n+            Field.of(\"user_id\", LegacySQLTypeName.STRING),\n+            Field.of(\"login_time\", LegacySQLTypeName.STRING),\n+            Field.of(\"logout_time\", LegacySQLTypeName.STRING),\n+            Field.of(\"ip_address\", LegacySQLTypeName.STRING));\n+\n+    CreateTable.createTable(BIGQUERY_DATASET_NAME, tableName, schema);\n+\n+    UpdateTableDML.updateTableDML(BIGQUERY_DATASET_NAME, tableName);\n+\n+    assertThat(bout.toString()).contains(\"Table updated successfully using DML\");\n+\n+    // Clean up\n+    DeleteTable.deleteTable(BIGQUERY_DATASET_NAME, tableName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7537ffe83220435415f3af1024af2b1e6d98bc"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61847792e065e9b997a924b02e5f120201ed8fda", "author": {"user": {"login": "stephaniewang526", "name": "Stephanie Wang"}}, "url": "https://github.com/googleapis/java-bigquery/commit/61847792e065e9b997a924b02e5f120201ed8fda", "committedDate": "2020-06-08T18:20:40Z", "message": "update based on comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NTAxNDgz", "url": "https://github.com/googleapis/java-bigquery/pull/424#pullrequestreview-426501483", "createdAt": "2020-06-08T18:24:22Z", "commit": {"oid": "61847792e065e9b997a924b02e5f120201ed8fda"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1184, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}