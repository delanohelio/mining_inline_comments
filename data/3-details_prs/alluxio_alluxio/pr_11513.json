{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MTUyMzMy", "number": 11513, "title": "Add readonly check while delete recursively", "bodyText": "When I use rmr to delete an alluxio path with a descendant which is a readonly mount point, alluxio will delete all the descendants no matter if it is a readonly mount point, this is extremely dangerous. So it's important to add readonly check while delete recursively.\nUse-case:\n./bin/alluxio fs mkdir /tmp\n./bin/alluxio fs mount --readonly /tmp/mnt hdfs://example/tmp/mnt\n\nUserA with all the permission did:\n./bin/alluxio fs rmr /tmp/mnt\nA write operation on /tmp/mnt under a readonly mount point hdfs://example/tmp/mnt is not allowed\n\nUserA with all the permission did:\n./bin/alluxio fs rmr /tmp\n# Everything under hdfs://example/tmp/mnt gone\n\nAs a result, hdfs://example/tmp/mnt was unexpectedly deleted", "createdAt": "2020-06-03T11:53:47Z", "url": "https://github.com/Alluxio/alluxio/pull/11513", "merged": true, "mergeCommit": {"oid": "e2431c20d4a9d1d69bd683ccd8ddf9ce0c2192ed"}, "closed": true, "closedAt": "2020-06-11T19:11:07Z", "author": {"login": "tinkerrrr"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnn6_0AH2gAyNDI3MTUyMzMyOjIxYzY4ZDc1MDRjNjcxZWViYjYzOTY4M2EzNmYyNDdiZjg1NmYwMjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqTKwngFqTQyOTIwODY2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "21c68d7504c671eebb639683a36f247bf856f029", "author": {"user": {"login": "yuanxm5", "name": "xiangmin"}}, "url": "https://github.com/Alluxio/alluxio/commit/21c68d7504c671eebb639683a36f247bf856f029", "committedDate": "2020-06-03T11:39:52Z", "message": "add readonly check while delete recursively"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDQ0OTcw", "url": "https://github.com/Alluxio/alluxio/pull/11513#pullrequestreview-424044970", "createdAt": "2020-06-04T01:40:56Z", "commit": {"oid": "21c68d7504c671eebb639683a36f247bf856f029"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMTo0MDo1NlrOGey8jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMTo0MDo1NlrOGey8jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0NTE2NA==", "bodyText": "How is this different from the check below? https://github.com/Alluxio/alluxio/pull/11513/files#diff-7f82122f923de058e3c4a20b43cd7e4eR1565", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r434945164", "createdAt": "2020-06-04T01:40:56Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -1548,6 +1548,7 @@ public void delete(AlluxioURI path, DeleteContext context)\n             for (LockedInodePath childPath : descendants) {\n               try {\n                 mPermissionChecker.checkPermission(Mode.Bits.WRITE, childPath);\n+                mMountTable.checkUnderWritableMountPoint(childPath.getUri());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21c68d7504c671eebb639683a36f247bf856f029"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6c444355fd445442f10d5dc5c4421fbfddb31df", "author": {"user": {"login": "yuanxm5", "name": "xiangmin"}}, "url": "https://github.com/Alluxio/alluxio/commit/c6c444355fd445442f10d5dc5c4421fbfddb31df", "committedDate": "2020-06-04T10:21:08Z", "message": "Add UT for delete with readonly check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89a4bfe57f61d544d7bdd916e012b71d98d8707c", "author": {"user": {"login": "yuanxm5", "name": "xiangmin"}}, "url": "https://github.com/Alluxio/alluxio/commit/89a4bfe57f61d544d7bdd916e012b71d98d8707c", "committedDate": "2020-06-04T10:24:02Z", "message": "correct typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NDY3ODA4", "url": "https://github.com/Alluxio/alluxio/pull/11513#pullrequestreview-425467808", "createdAt": "2020-06-05T16:55:50Z", "commit": {"oid": "89a4bfe57f61d544d7bdd916e012b71d98d8707c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjo1NTo1MFrOGf2GCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjo1NTo1MFrOGf2GCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA0NTMyMg==", "bodyText": "I see. Would checking only the descendant mount points work? I am concerned that checking every path may be unnecessarily expensive, especially for a large sub-tree of the namespace.", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r436045322", "createdAt": "2020-06-05T16:55:50Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -1548,6 +1548,7 @@ public void delete(AlluxioURI path, DeleteContext context)\n             for (LockedInodePath childPath : descendants) {\n               try {\n                 mPermissionChecker.checkPermission(Mode.Bits.WRITE, childPath);\n+                mMountTable.checkUnderWritableMountPoint(childPath.getUri());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk0NTE2NA=="}, "originalCommit": {"oid": "21c68d7504c671eebb639683a36f247bf856f029"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2c883be0e7053cdaab31338effc9db3845509bc", "author": {"user": {"login": "yuanxm5", "name": "xiangmin"}}, "url": "https://github.com/Alluxio/alluxio/commit/f2c883be0e7053cdaab31338effc9db3845509bc", "committedDate": "2020-06-06T06:36:47Z", "message": "Add MountTable#checkIsWritableMountPoint method to check if a path is a readonly path, without iterate over all the mount points"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MzQ5MTU2", "url": "https://github.com/Alluxio/alluxio/pull/11513#pullrequestreview-427349156", "createdAt": "2020-06-09T16:41:21Z", "commit": {"oid": "f2c883be0e7053cdaab31338effc9db3845509bc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0MToyMVrOGhTNSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0MToyMVrOGhTNSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU3MDg5MQ==", "bodyText": "Instead of introducing a new method, I was thinking more like:\nif (mMountTable.isMountPoint(childPath.getUri())) {\n  mMountTable.checkUnderWritableMountPoint(childPath.getUri());\n}\n\nThis would allow not creating a new method, and also, this performs the (potentially expensive) check for only the mount point paths.\nWhat do you think?", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r437570891", "createdAt": "2020-06-09T16:41:21Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -1548,6 +1548,7 @@ public void delete(AlluxioURI path, DeleteContext context)\n             for (LockedInodePath childPath : descendants) {\n               try {\n                 mPermissionChecker.checkPermission(Mode.Bits.WRITE, childPath);\n+                mMountTable.checkIsWritableMountPoint(childPath.getUri());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2c883be0e7053cdaab31338effc9db3845509bc"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "923b0edea75e164c64c0ed146f9b71e3f98c6cb2", "author": {"user": {"login": "yuanxm5", "name": "xiangmin"}}, "url": "https://github.com/Alluxio/alluxio/commit/923b0edea75e164c64c0ed146f9b71e3f98c6cb2", "committedDate": "2020-06-10T02:40:08Z", "message": "A more elegant way to do readOnly check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjU1NjM3", "url": "https://github.com/Alluxio/alluxio/pull/11513#pullrequestreview-428255637", "createdAt": "2020-06-10T16:59:25Z", "commit": {"oid": "923b0edea75e164c64c0ed146f9b71e3f98c6cb2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjo1OToyNVrOGh-MNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjo1OToyNVrOGh-MNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3NTEyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                mMountTable.checkUnderWritableMountPoint(childPath.getUri());\n          \n          \n            \n                              mMountTable.checkUnderWritableMountPoint(childPath.getUri());\n          \n      \n    \n    \n  \n\ncheckstyle is complaining with:\nerror: 'if' child have incorrect indentation level 20, expected level should be 18.", "url": "https://github.com/Alluxio/alluxio/pull/11513#discussion_r438275126", "createdAt": "2020-06-10T16:59:25Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -1548,6 +1548,9 @@ public void delete(AlluxioURI path, DeleteContext context)\n             for (LockedInodePath childPath : descendants) {\n               try {\n                 mPermissionChecker.checkPermission(Mode.Bits.WRITE, childPath);\n+                if (mMountTable.isMountPoint(childPath.getUri())) {\n+                    mMountTable.checkUnderWritableMountPoint(childPath.getUri());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "923b0edea75e164c64c0ed146f9b71e3f98c6cb2"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d6b58150d4d38ae0f103d83ac04c3ae2dce8078", "author": {"user": {"login": "tinkerrrr", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/7d6b58150d4d38ae0f103d83ac04c3ae2dce8078", "committedDate": "2020-06-11T02:08:08Z", "message": "Update core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java\n\nCo-authored-by: Gene Pang <gene.pang@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MjA4NjY5", "url": "https://github.com/Alluxio/alluxio/pull/11513#pullrequestreview-429208669", "createdAt": "2020-06-11T19:10:51Z", "commit": {"oid": "7d6b58150d4d38ae0f103d83ac04c3ae2dce8078"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4464, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}