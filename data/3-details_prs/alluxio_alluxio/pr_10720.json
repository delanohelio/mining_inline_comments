{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMTQ2MDYw", "number": 10720, "title": "Parallelize CompactDefinition", "bodyText": "Needs #10712 to be merged for this to not break everything.", "createdAt": "2020-01-09T20:33:27Z", "url": "https://github.com/Alluxio/alluxio/pull/10720", "merged": true, "mergeCommit": {"oid": "a94a3b69e27acc85c6ff646a6d87c300e493eaf2"}, "closed": true, "closedAt": "2020-01-15T22:13:52Z", "author": {"login": "bradyoo"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4wBKWAH2gAyMzYxMTQ2MDYwOjIxMGUyMDA1OTU1YWI3NTI2N2RmYTljMjc1NWUzN2YxMTZkZDNkODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6tE5mgFqTM0MzU1ODE3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "210e2005955ab75267dfa9c2755e37f116dd3d83", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/210e2005955ab75267dfa9c2755e37f116dd3d83", "committedDate": "2020-01-09T20:31:24Z", "message": "parallelize compactdefinition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2224b3927790d549c463d2284e946a3989e7f971", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/2224b3927790d549c463d2284e946a3989e7f971", "committedDate": "2020-01-09T20:31:30Z", "message": "fix syntax error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7779ee4a03b314692cfd592066cfc3e85b508868", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/7779ee4a03b314692cfd592066cfc3e85b508868", "committedDate": "2020-01-10T20:00:51Z", "message": "turn constant into a variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNzg0NDcz", "url": "https://github.com/Alluxio/alluxio/pull/10720#pullrequestreview-342784473", "createdAt": "2020-01-14T19:31:07Z", "commit": {"oid": "7779ee4a03b314692cfd592066cfc3e85b508868"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxOTozMTowN1rOFdjRpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxOTozNDoyMVrOFdjXkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMDk4MA==", "bodyText": "Is this \"job\" or \"task\"?", "url": "https://github.com/Alluxio/alluxio/pull/10720#discussion_r366530980", "createdAt": "2020-01-14T19:31:07Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -44,6 +45,7 @@\n public final class CompactDefinition\n     extends AbstractVoidPlanDefinition<CompactConfig, ArrayList<CompactTask>> {\n   private static final Logger LOG = LoggerFactory.getLogger(CompactDefinition.class);\n+  private static final int JOBS_PER_WORKER = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7779ee4a03b314692cfd592066cfc3e85b508868"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUzMjQ5OQ==", "bodyText": "can we add a simple unit test to see that selectExecutors() returns multiple tasks per host?", "url": "https://github.com/Alluxio/alluxio/pull/10720#discussion_r366532499", "createdAt": "2020-01-14T19:34:21Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -111,7 +113,13 @@ private boolean shouldIgnore(URIStatus status) {\n \n     Set<Pair<WorkerInfo, ArrayList<CompactTask>>> result = Sets.newHashSet();\n     for (Map.Entry<WorkerInfo, ArrayList<CompactTask>> assignment : assignments.entrySet()) {\n-      result.add(new Pair<>(assignment.getKey(), assignment.getValue()));\n+      List<List<CompactTask>> partitioned = CommonUtils.partition(\n+          assignment.getValue(), JOBS_PER_WORKER);\n+      for (List<CompactTask> compactTasks : partitioned) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7779ee4a03b314692cfd592066cfc3e85b508868"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5ec14c46902f041fded35e5dc1da566d84579d5", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/a5ec14c46902f041fded35e5dc1da566d84579d5", "committedDate": "2020-01-14T22:51:48Z", "message": "work on test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e78ca0f29ce527ba7f18b6d96a4dfd5f74609223", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/e78ca0f29ce527ba7f18b6d96a4dfd5f74609223", "committedDate": "2020-01-14T23:47:08Z", "message": "Add test for selectExecutors for Compact"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55ee6ea0f70cd303305b2c2d78c7296cc46e980c", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/55ee6ea0f70cd303305b2c2d78c7296cc46e980c", "committedDate": "2020-01-14T23:50:59Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe1f2a9d63dc69fe3f0b75601e444fae8cfdeaab", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/fe1f2a9d63dc69fe3f0b75601e444fae8cfdeaab", "committedDate": "2020-01-15T15:12:13Z", "message": "Make SelectExecutorsTest abstract so that it doesn't get picked up"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMzkxNzE4", "url": "https://github.com/Alluxio/alluxio/pull/10720#pullrequestreview-343391718", "createdAt": "2020-01-15T17:26:26Z", "commit": {"oid": "fe1f2a9d63dc69fe3f0b75601e444fae8cfdeaab"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoyNjoyN1rOFeAUkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoyNzowNlrOFeAV0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwNjg2NA==", "bodyText": "NIT: can we make this a local variable like numFiles, and we can use it here, and also at the end of the test when we verify.", "url": "https://github.com/Alluxio/alluxio/pull/10720#discussion_r367006864", "createdAt": "2020-01-15T17:26:27Z", "author": {"login": "gpang"}, "path": "job/server/src/test/java/alluxio/job/plan/transform/CompactDefinitionSelectExecutorsTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan.transform;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.when;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.client.file.URIStatus;\n+import alluxio.collections.Pair;\n+import alluxio.job.JobServerContext;\n+import alluxio.job.SelectExecutorsContext;\n+import alluxio.job.plan.SelectExecutorsTest;\n+import alluxio.wire.WorkerInfo;\n+\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+\n+public class CompactDefinitionSelectExecutorsTest extends SelectExecutorsTest {\n+\n+  private static final String INPUT_DIR = \"/input\";\n+  private static final String OUTPUT_DIR = \"/output\";\n+\n+  @Test\n+  public void testExecutorsParallel() throws Exception {\n+    CompactConfig config = new CompactConfig(null, INPUT_DIR, OUTPUT_DIR, \"test\", 100);\n+\n+    List<URIStatus> inputFiles = new ArrayList<>();\n+    for (int i = 0; i < 50; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe1f2a9d63dc69fe3f0b75601e444fae8cfdeaab"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwNzE4Nw==", "bodyText": "Would this have been only 4 in the previous version?", "url": "https://github.com/Alluxio/alluxio/pull/10720#discussion_r367007187", "createdAt": "2020-01-15T17:27:06Z", "author": {"login": "gpang"}, "path": "job/server/src/test/java/alluxio/job/plan/transform/CompactDefinitionSelectExecutorsTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan.transform;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.when;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.client.file.URIStatus;\n+import alluxio.collections.Pair;\n+import alluxio.job.JobServerContext;\n+import alluxio.job.SelectExecutorsContext;\n+import alluxio.job.plan.SelectExecutorsTest;\n+import alluxio.wire.WorkerInfo;\n+\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+\n+public class CompactDefinitionSelectExecutorsTest extends SelectExecutorsTest {\n+\n+  private static final String INPUT_DIR = \"/input\";\n+  private static final String OUTPUT_DIR = \"/output\";\n+\n+  @Test\n+  public void testExecutorsParallel() throws Exception {\n+    CompactConfig config = new CompactConfig(null, INPUT_DIR, OUTPUT_DIR, \"test\", 100);\n+\n+    List<URIStatus> inputFiles = new ArrayList<>();\n+    for (int i = 0; i < 50; i++) {\n+      inputFiles.add(newFile(Integer.toString(i)));\n+    }\n+\n+    when(mMockFileSystem.listStatus(new AlluxioURI(INPUT_DIR))).thenReturn(inputFiles);\n+\n+    Set<Pair<WorkerInfo, ArrayList<CompactTask>>> result = new CompactDefinition().selectExecutors(\n+        config, SelectExecutorsTest.JOB_WORKERS, new SelectExecutorsContext(1,\n+            new JobServerContext(mMockFileSystem, mMockFileSystemContext, mMockUfsManager)));\n+    assertEquals(40, result.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe1f2a9d63dc69fe3f0b75601e444fae8cfdeaab"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34e3d8c8d34da850a545d147b9082230a5754da1", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/34e3d8c8d34da850a545d147b9082230a5754da1", "committedDate": "2020-01-15T18:12:02Z", "message": "feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b4e11810b596a8348c1b7c584f61ff6c648bc9e", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/8b4e11810b596a8348c1b7c584f61ff6c648bc9e", "committedDate": "2020-01-15T21:23:14Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNTU4MTc1", "url": "https://github.com/Alluxio/alluxio/pull/10720#pullrequestreview-343558175", "createdAt": "2020-01-15T22:13:37Z", "commit": {"oid": "8b4e11810b596a8348c1b7c584f61ff6c648bc9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3271, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}