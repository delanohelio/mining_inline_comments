{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzkxNjYw", "number": 10822, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowMzowNVrODcqaDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowMzowNVrODcqaDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzgxNTE5OnYy", "diffSide": "RIGHT", "path": "job/server/src/main/java/alluxio/job/plan/transform/format/csv/Decimal.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowMzowNVrOFk0b-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDo1NDoyOFrOFk_m8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1MjE4NQ==", "bodyText": "are there some unit tests for this? Will this handle extraneous whitespaces well?", "url": "https://github.com/Alluxio/alluxio/pull/10822#discussion_r374152185", "createdAt": "2020-02-03T15:03:05Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/format/csv/Decimal.java", "diffHunk": "@@ -50,11 +51,23 @@ public int getScale() {\n     return mScale;\n   }\n \n+  /**\n+   * Returns the decimal's precision and scale from the type definition.\n+   *\n+   * @param type the type definition, like \"decimal(10, 2)\"\n+   * @return the decimal's precision and scale as a Pair\n+   */\n+  public static Pair<Integer, Integer> getPrecisionAndScale(String type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f534f94667356142f692d2d4753e8f933492ce41"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzMjg0NQ==", "bodyText": "This is not actually new code but I'll add some test since this class doesn't seem to have a unit test at all.", "url": "https://github.com/Alluxio/alluxio/pull/10822#discussion_r374232845", "createdAt": "2020-02-03T17:21:40Z", "author": {"login": "bradyoo"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/format/csv/Decimal.java", "diffHunk": "@@ -50,11 +51,23 @@ public int getScale() {\n     return mScale;\n   }\n \n+  /**\n+   * Returns the decimal's precision and scale from the type definition.\n+   *\n+   * @param type the type definition, like \"decimal(10, 2)\"\n+   * @return the decimal's precision and scale as a Pair\n+   */\n+  public static Pair<Integer, Integer> getPrecisionAndScale(String type) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1MjE4NQ=="}, "originalCommit": {"oid": "f534f94667356142f692d2d4753e8f933492ce41"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMzNTIxOQ==", "bodyText": "Yes, I know it is old code, but thanks for the test cases!", "url": "https://github.com/Alluxio/alluxio/pull/10822#discussion_r374335219", "createdAt": "2020-02-03T20:54:28Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/format/csv/Decimal.java", "diffHunk": "@@ -50,11 +51,23 @@ public int getScale() {\n     return mScale;\n   }\n \n+  /**\n+   * Returns the decimal's precision and scale from the type definition.\n+   *\n+   * @param type the type definition, like \"decimal(10, 2)\"\n+   * @return the decimal's precision and scale as a Pair\n+   */\n+  public static Pair<Integer, Integer> getPrecisionAndScale(String type) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1MjE4NQ=="}, "originalCommit": {"oid": "f534f94667356142f692d2d4753e8f933492ce41"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2119, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}