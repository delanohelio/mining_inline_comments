{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MDI3NzUy", "number": 11580, "title": "Add more traces for state-lock management", "bodyText": "", "createdAt": "2020-06-17T18:39:22Z", "url": "https://github.com/Alluxio/alluxio/pull/11580", "merged": true, "mergeCommit": {"oid": "f3e1c99902a97e1115a1d0221178a3f80d79fa6f"}, "closed": true, "closedAt": "2020-06-18T01:49:02Z", "author": {"login": "ggezer"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsOTXBAH2gAyNDM2MDI3NzUyOjFlYmFmZTRhOTgyY2Q4NzllNTdkNzM0NmU2MGM4Y2I0NDU2NDA1ZTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsTsnsgFqTQzMjg3MDI2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/1ebafe4a982cd879e57d7346e60c8cb4456405e6", "committedDate": "2020-06-17T18:38:34Z", "message": "Add more traces for state-lock management"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjk0ODA1", "url": "https://github.com/Alluxio/alluxio/pull/11580#pullrequestreview-432694805", "createdAt": "2020-06-17T19:06:52Z", "commit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTowNjo1M1rOGlTndA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToxOTo1M1rOGlUBrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3MTg5Mg==", "bodyText": "do you also want thread name, or just the id? Also, I think for logging you need \"{}\", not \"%d\". \"%d\" I think is for String.format().", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441771892", "createdAt": "2020-06-17T19:06:53Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -123,6 +124,9 @@ public void mastersStartedCallback() {\n    * @throws InterruptedException\n    */\n   public LockResource lockShared() throws InterruptedException {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Thread-%d entered lockShared().\", Thread.currentThread().getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3MjE0MA==", "bodyText": "why is the other one guarded by LOG.isDebugEnabled()?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441772140", "createdAt": "2020-06-17T19:07:23Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -153,11 +157,14 @@ public LockResource lockShared() throws InterruptedException {\n    */\n   public LockResource lockExclusive(StateLockOptions lockOptions)\n       throws TimeoutException, InterruptedException {\n+    LOG.debug(\"Thread-%d entered lockExclusive().\", Thread.currentThread().getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3NDcwMQ==", "bodyText": "I don't think this syntax is correct. It doesn't have enough arguments, and is \"%ms\" correct?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441774701", "createdAt": "2020-06-17T19:12:16Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -153,11 +157,14 @@ public LockResource lockShared() throws InterruptedException {\n    */\n   public LockResource lockExclusive(StateLockOptions lockOptions)\n       throws TimeoutException, InterruptedException {\n+    LOG.debug(\"Thread-%d entered lockExclusive().\", Thread.currentThread().getId());\n     // Run the grace cycle.\n     StateLockOptions.GraceMode graceMode = lockOptions.getGraceMode();\n     boolean lockAcquired = false;\n     long deadlineMs = System.currentTimeMillis() + lockOptions.getGraceCycleTimeoutMs();\n     while (System.currentTimeMillis() < deadlineMs) {\n+      LOG.debug(\"Thread-%d entered grace-cycle of try-sleep: %ms-%ms\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3NjI1Mw==", "bodyText": "Could this be useful for INFO level?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441776253", "createdAt": "2020-06-17T19:15:10Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -169,6 +176,7 @@ public LockResource lockExclusive(StateLockOptions lockOptions)\n       }\n     }\n     if (lockAcquired) { // Lock was acquired within grace-cycle.\n+      LOG.debug(\"Thread-%d acquired the lock within grace-cycle.\", Thread.currentThread().getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3NjQ5OA==", "bodyText": "Could it be useful to log something here at INFO, since we were not able to get the lock?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441776498", "createdAt": "2020-06-17T19:15:39Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -169,6 +176,7 @@ public LockResource lockExclusive(StateLockOptions lockOptions)\n       }\n     }\n     if (lockAcquired) { // Lock was acquired within grace-cycle.\n+      LOG.debug(\"Thread-%d acquired the lock within grace-cycle.\", Thread.currentThread().getId());\n       activateInterruptCycle();\n     } else { // Lock couldn't be acquired by grace-cycle.\n       if (graceMode == StateLockOptions.GraceMode.TIMEOUT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3ODYwNw==", "bodyText": "this may not be accurate, since the real interrupt happens in the loop below.", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441778607", "createdAt": "2020-06-17T19:19:53Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -247,6 +260,9 @@ private void deactivateInterruptCycle() {\n    * Scheduled routine that interrupts waiters/holders of shared lock.\n    */\n   private void waiterInterruptRoutine() {\n+    LOG.debug(\"Interrupt-cycle interrupting %d waiters/holders: {%s}\",\n+        Thread.currentThread().getId(), mSharedWaitersAndHolders.size(), mSharedWaitersAndHolders\n+            .stream().map((th) -> Long.toString(th.getId())).collect(Collectors.joining(\",\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODQzODY0", "url": "https://github.com/Alluxio/alluxio/pull/11580#pullrequestreview-432843864", "createdAt": "2020-06-17T23:31:06Z", "commit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzozMTowNlrOGlatbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzozMTowNlrOGlatbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4ODExMA==", "bodyText": "I think that we might want to wrap this in a if (Log.isDebugEnabled()) because grabbing iterating, and joining into a String can be pretty expensive?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441888110", "createdAt": "2020-06-17T23:31:06Z", "author": {"login": "ZacBlanco"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -247,6 +260,9 @@ private void deactivateInterruptCycle() {\n    * Scheduled routine that interrupts waiters/holders of shared lock.\n    */\n   private void waiterInterruptRoutine() {\n+    LOG.debug(\"Interrupt-cycle interrupting %d waiters/holders: {%s}\",\n+        Thread.currentThread().getId(), mSharedWaitersAndHolders.size(), mSharedWaitersAndHolders\n+            .stream().map((th) -> Long.toString(th.getId())).collect(Collectors.joining(\",\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODQzOTc5", "url": "https://github.com/Alluxio/alluxio/pull/11580#pullrequestreview-432843979", "createdAt": "2020-06-17T23:31:23Z", "commit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzozMToyM1rOGlatyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzozMToyM1rOGlatyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4ODIwMQ==", "bodyText": "I think that we might want to wrap this in a if (Log.isDebugEnabled()) because grabbing iterating, and joining into a String can be pretty expensive?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441888201", "createdAt": "2020-06-17T23:31:23Z", "author": {"login": "ZacBlanco"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -178,6 +186,9 @@ public LockResource lockExclusive(StateLockOptions lockOptions)\n       // Activate the interrupt cycle before entering the lock because it might wait in the queue.\n       activateInterruptCycle();\n       // Force the lock.\n+      LOG.debug(\"Thread-%d forcing the lock with %d waiters/holders: {%s}\",\n+          Thread.currentThread().getId(), mSharedWaitersAndHolders.size(), mSharedWaitersAndHolders\n+              .stream().map((th) -> Long.toString(th.getId())).collect(Collectors.joining(\",\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0c256956050945f97bb161da8a419d7281306d9", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/f0c256956050945f97bb161da8a419d7281306d9", "committedDate": "2020-06-17T23:37:55Z", "message": "PR feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODQ3NDE5", "url": "https://github.com/Alluxio/alluxio/pull/11580#pullrequestreview-432847419", "createdAt": "2020-06-17T23:41:31Z", "commit": {"oid": "f0c256956050945f97bb161da8a419d7281306d9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzo0MTozMVrOGla5dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzo1MDo0N1rOGlbDZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg5MTE5MA==", "bodyText": "I thought format used \"%s\" and \"%d\"?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441891190", "createdAt": "2020-06-17T23:41:31Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/util/ThreadUtils.java", "diffHunk": "@@ -77,5 +77,20 @@ public static void shutdownAndAwaitTermination(ExecutorService pool, long timeou\n     }\n   }\n \n+  /**\n+   * @return a string representation of the current thread\n+   */\n+  public static String getCurrentThreadIdentifier() {\n+    return getThreadIdentifier(Thread.currentThread());\n+  }\n+\n+  /**\n+   * @param thread the thread\n+   * @return a string representation of the given thread\n+   */\n+  public static String getThreadIdentifier(Thread thread) {\n+    return String.format(\"{}({})\", thread.getId(), thread.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c256956050945f97bb161da8a419d7281306d9"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg5MzA5Mw==", "bodyText": "This will print every 10 minutes for 12 hours? Is that too noisy?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441893093", "createdAt": "2020-06-17T23:48:20Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -153,11 +158,15 @@ public LockResource lockShared() throws InterruptedException {\n    */\n   public LockResource lockExclusive(StateLockOptions lockOptions)\n       throws TimeoutException, InterruptedException {\n+    LOG.debug(\"Thread-{} entered lockExclusive().\", ThreadUtils.getCurrentThreadIdentifier());\n     // Run the grace cycle.\n     StateLockOptions.GraceMode graceMode = lockOptions.getGraceMode();\n     boolean lockAcquired = false;\n     long deadlineMs = System.currentTimeMillis() + lockOptions.getGraceCycleTimeoutMs();\n     while (System.currentTimeMillis() < deadlineMs) {\n+      LOG.info(\"Thread-{} entered grace-cycle of try-sleep: {}ms-{}ms for the total of {}ms\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c256956050945f97bb161da8a419d7281306d9"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg5MzczNA==", "bodyText": "Hrmmm, is this right? I thought TIMEOUT mode would not force the lock by interrupting threads?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441893734", "createdAt": "2020-06-17T23:50:47Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -169,6 +178,8 @@ public LockResource lockExclusive(StateLockOptions lockOptions)\n       }\n     }\n     if (lockAcquired) { // Lock was acquired within grace-cycle.\n+      LOG.info(\"Thread-{} acquired the lock within grace-cycle.\",\n+          ThreadUtils.getCurrentThreadIdentifier());\n       activateInterruptCycle();\n     } else { // Lock couldn't be acquired by grace-cycle.\n       if (graceMode == StateLockOptions.GraceMode.TIMEOUT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c256956050945f97bb161da8a419d7281306d9"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd1b4712cf738cfce124ad1dbae5403930b7f792", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/cd1b4712cf738cfce124ad1dbae5403930b7f792", "committedDate": "2020-06-18T00:20:58Z", "message": "PR feedback 2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODcwMjY1", "url": "https://github.com/Alluxio/alluxio/pull/11580#pullrequestreview-432870265", "createdAt": "2020-06-18T00:55:41Z", "commit": {"oid": "cd1b4712cf738cfce124ad1dbae5403930b7f792"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4541, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}