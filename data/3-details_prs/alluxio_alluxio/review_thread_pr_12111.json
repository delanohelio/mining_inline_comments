{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MjY2NzQ0", "number": 12111, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQwMDowNjo0MlrOElJgyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQwMDowNjo0MlrOElJgyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3Mzg4NjE4OnYy", "diffSide": "RIGHT", "path": "job/server/src/main/java/alluxio/master/job/plan/PlanTracker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQwMDowNjo0MlrOHUe84Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjozNzo1NFrOHVZbAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0MDY3Mw==", "bodyText": "kind of unusual to pass stream back as return value, is the idea here to save a potential copy?", "url": "https://github.com/Alluxio/alluxio/pull/12111#discussion_r491240673", "createdAt": "2020-09-19T00:06:42Z", "author": {"login": "yuzhu"}, "path": "job/server/src/main/java/alluxio/master/job/plan/PlanTracker.java", "diffHunk": "@@ -276,7 +277,7 @@ private synchronized boolean removeFinished() {\n   /**\n    * @return list of failed plans\n    */\n-  public List<PlanInfo> failed() {\n-    return Lists.newArrayList(mFailed);\n+  public Stream<PlanInfo> failed() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4fcf71613de304bad49f265989da9dc8ad15308"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE5ODY1Ng==", "bodyText": "I don't want to send the list back because that's basically making a copy. I don't want to send the underlying data structure back because that makes it accessible. So stream was both the most straightforward and most accessible thing to send back.", "url": "https://github.com/Alluxio/alluxio/pull/12111#discussion_r492198656", "createdAt": "2020-09-21T16:37:54Z", "author": {"login": "bradyoo"}, "path": "job/server/src/main/java/alluxio/master/job/plan/PlanTracker.java", "diffHunk": "@@ -276,7 +277,7 @@ private synchronized boolean removeFinished() {\n   /**\n    * @return list of failed plans\n    */\n-  public List<PlanInfo> failed() {\n-    return Lists.newArrayList(mFailed);\n+  public Stream<PlanInfo> failed() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI0MDY3Mw=="}, "originalCommit": {"oid": "c4fcf71613de304bad49f265989da9dc8ad15308"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1187, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}