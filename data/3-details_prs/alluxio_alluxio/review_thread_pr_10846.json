{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMTQ3OTIz", "number": 10846, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzoxMzoyNFrODdMw4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzoxMzoyNFrODdMw4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTQ0NDE5OnYy", "diffSide": "RIGHT", "path": "core/server/master/src/main/java/alluxio/master/meta/DefaultMetaMaster.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMzoxMzoyNFrOFlqnWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNDoyMzozNVrOFlrbQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzOTgzNA==", "bodyText": "DefaultMetaMaster already has a method getClusterID? we can remove the 2nd parameter to the constructor", "url": "https://github.com/Alluxio/alluxio/pull/10846#discussion_r375039834", "createdAt": "2020-02-05T03:13:24Z", "author": {"login": "madanadit"}, "path": "core/server/master/src/main/java/alluxio/master/meta/DefaultMetaMaster.java", "diffHunk": "@@ -306,26 +306,18 @@ public void start(Boolean isPrimary) throws IOException {\n             ThreadFactoryUtils.build(\"DailyMetadataBackup-%d\", true)), mUfsManager);\n         mDailyBackup.start();\n       }\n-      if (mState.getClusterID() == INVALID_CLUSTER_ID) {\n+      if (mState.getClusterID().equals(INVALID_CLUSTER_ID)) {\n         try (JournalContext context = createJournalContext()) {\n           String clusterID = java.util.UUID.randomUUID().toString();\n           mState.applyAndJournal(context, clusterID);\n           LOG.info(\"Created new cluster ID {}\", clusterID);\n         }\n         if (Boolean.valueOf(ProjectConstants.UPDATE_CHECK_ENABLED)\n             && ServerConfiguration.getBoolean(PropertyKey.MASTER_UPDATE_CHECK_ENABLED)) {\n-          try {\n-            String latestVersion =\n-                UpdateCheck.getLatestVersion(mState.getClusterID(), 3000, 3000, 3000);\n-            if (!ProjectConstants.VERSION.equals(latestVersion)) {\n-              System.out.println(\"The latest version (\" + latestVersion + \") is not the same \"\n-                  + \"as the current version (\" + ProjectConstants.VERSION + \"). To upgrade \"\n-                  + \"visit https://www.alluxio.io/download/.\");\n-              mNewerVersionAvailable = true;\n-            }\n-          } catch (Exception e) {\n-            LOG.debug(\"Unable to check for updates: {}\", e.getMessage());\n-          }\n+          getExecutorService().submit(new HeartbeatThread(HeartbeatContext.MASTER_UPDATE_CHECK,\n+              new UpdateChecker(this, mState.getClusterID()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc7c91e0180bb22eb4309a856d38384090c63176"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA1MzEyMg==", "bodyText": "Good advice~!!!", "url": "https://github.com/Alluxio/alluxio/pull/10846#discussion_r375053122", "createdAt": "2020-02-05T04:23:35Z", "author": {"login": "LuQQiu"}, "path": "core/server/master/src/main/java/alluxio/master/meta/DefaultMetaMaster.java", "diffHunk": "@@ -306,26 +306,18 @@ public void start(Boolean isPrimary) throws IOException {\n             ThreadFactoryUtils.build(\"DailyMetadataBackup-%d\", true)), mUfsManager);\n         mDailyBackup.start();\n       }\n-      if (mState.getClusterID() == INVALID_CLUSTER_ID) {\n+      if (mState.getClusterID().equals(INVALID_CLUSTER_ID)) {\n         try (JournalContext context = createJournalContext()) {\n           String clusterID = java.util.UUID.randomUUID().toString();\n           mState.applyAndJournal(context, clusterID);\n           LOG.info(\"Created new cluster ID {}\", clusterID);\n         }\n         if (Boolean.valueOf(ProjectConstants.UPDATE_CHECK_ENABLED)\n             && ServerConfiguration.getBoolean(PropertyKey.MASTER_UPDATE_CHECK_ENABLED)) {\n-          try {\n-            String latestVersion =\n-                UpdateCheck.getLatestVersion(mState.getClusterID(), 3000, 3000, 3000);\n-            if (!ProjectConstants.VERSION.equals(latestVersion)) {\n-              System.out.println(\"The latest version (\" + latestVersion + \") is not the same \"\n-                  + \"as the current version (\" + ProjectConstants.VERSION + \"). To upgrade \"\n-                  + \"visit https://www.alluxio.io/download/.\");\n-              mNewerVersionAvailable = true;\n-            }\n-          } catch (Exception e) {\n-            LOG.debug(\"Unable to check for updates: {}\", e.getMessage());\n-          }\n+          getExecutorService().submit(new HeartbeatThread(HeartbeatContext.MASTER_UPDATE_CHECK,\n+              new UpdateChecker(this, mState.getClusterID()),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzOTgzNA=="}, "originalCommit": {"oid": "bc7c91e0180bb22eb4309a856d38384090c63176"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2147, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}