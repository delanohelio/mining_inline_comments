{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NzQzOTgw", "number": 12004, "title": "Update metadata sync guidelines", "bodyText": "Adds more detail on how to configure metadata sync and the various options available to users.", "createdAt": "2020-08-18T20:59:14Z", "url": "https://github.com/Alluxio/alluxio/pull/12004", "merged": true, "mergeCommit": {"oid": "96e7add1693e38f53fa16d9091310b31dc42097a"}, "closed": true, "closedAt": "2020-08-19T18:36:21Z", "author": {"login": "calvinjia"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdANdncgH2gAyNDY5NzQzOTgwOjBiNzQxNWM5OWYwNDgxZWRjN2MzNGM0ODAzYTNkODJiOTBhZmMxMjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAf-ZngFqTQ3MDczMzg2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0b7415c99f0481edc7c34c4803a3d82b90afc124", "author": {"user": {"login": "calvinjia", "name": "Calvin Jia"}}, "url": "https://github.com/Alluxio/alluxio/commit/0b7415c99f0481edc7c34c4803a3d82b90afc124", "committedDate": "2020-08-18T20:58:21Z", "message": "Update metadata sync guidelines."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5ODk1NzQ1", "url": "https://github.com/Alluxio/alluxio/pull/12004#pullrequestreview-469895745", "createdAt": "2020-08-18T23:26:07Z", "commit": {"oid": "0b7415c99f0481edc7c34c4803a3d82b90afc124"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzoyNjowN1rOHCqBwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzozMToxM1rOHCqIjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU0Nzc3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            expect performance spikes in normal application usage. The frequency at which the spikes occur will\n          \n          \n            \n            expect latency spikes in normal application usage. The frequency at which the spikes occur will", "url": "https://github.com/Alluxio/alluxio/pull/12004#discussion_r472547777", "createdAt": "2020-08-18T23:26:07Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/core-services/Unified-Namespace.md", "diffHunk": "@@ -162,22 +162,44 @@ the metadata sync feature is used to synchronize the two namespaces.\n \n When Alluxio scans a UFS directory and loads metadata for its sub-paths,\n it creates a copy of the metadata so that future operations do not need to load from the UFS.\n-The cached copy of the metadata is refreshed according to the\n+Alluxio keeps a fingerprint of each UFS file so that Alluxio can update the file if it changes.\n+The fingerprint includes information such as file size and last modified time.\n+If a file is modified in the UFS, Alluxio will detect this from the fingerprint, free the existing\n+data for that file, and reload the metadata for the updated file.\n+If a file is added or deleted in the UFS, Alluxio will update the metadata in its namespace as well.\n+\n+The fingerprint is verified with the UFS based on the\n `alluxio.user.file.metadata.sync.interval` client configuration property.\n-This property applies to client side operations.\n+\n For example, if a client executes an operation with the interval set to one minute,\n the relevant metadata will be refreshed from the UFS if the last refresh was over a minute ago.\n A value of `0` indicates that the metadata will always be synced for every operation,\n whereas the default value of `-1` indicates the metadata is never synced again after the initial load.\n \n-Low interval values allow Alluxio clients to quickly discover external modifications to the UFS,\n-at the cost of decreasing performance since the number of calls to the UFS increases.\n+The graph below illustrates the impact of setting the metadata sync interval on the latency of\n+client operations.\n \n-Metadata sync keeps a fingerprint of each UFS file so that Alluxio can update the file if it changes.\n-The fingerprint includes information such as file size and last modified time.\n-If a file is modified in the UFS, Alluxio will detect this from the fingerprint, free the existing\n-data for that file, and reload the metadata for the updated file.\n-If a file is added or deleted in the UFS, Alluxio will update the metadata in its namespace as well.\n+<p align=\"center\">\n+<img style=\"text-align: center\" src=\"{{ '/img/unified-namespace-metadata-sync-performance.png' | relativize_url }}\" alt=\"Metadata sync interval\"/>\n+</p>\n+\n+The overall cost of syncing with sync interval enabled (blue line) is amortized across the number of\n+RPCs within the sync time interval. When sync interval enabled to some non-0 value users should\n+expect performance spikes in normal application usage. The frequency at which the spikes occur will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b7415c99f0481edc7c34c4803a3d82b90afc124"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU0ODU4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If the updates happen across many parts (or unknown) of the namespace at a frequent rate, use active\n          \n          \n            \n            If the updates happen across many (or unknown) parts of the namespace at a frequent rate, use active", "url": "https://github.com/Alluxio/alluxio/pull/12004#discussion_r472548582", "createdAt": "2020-08-18T23:28:31Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/core-services/Unified-Namespace.md", "diffHunk": "@@ -202,26 +224,133 @@ In `alluxio-site.properties` on master nodes:\n \n Note master nodes need to be restarted to pick up configuration changes.\n \n+#### Utilizing Path Configuration\n+\n+For clusters where the frequency of out-of-band changes varies based on the subtree in the\n+namespace,\n+[path configurations]({{ '/en/operation/Configuration.html#path-defaults' | relativize_url }})\n+should be used to set the metadata sync interval at a finer\n+granularity. For example, for paths which change often, a sync interval of `5 minutes` can\n+be set, and for paths which do not change, a sync interval of `-1` can be set.\n+\n+### Metadata Sync Recommendations for Common Scenarios\n+\n+#### All operations through Alluxio\n+\n+If all operations are run through Alluxio without any access to the UFS from outside applications,\n+then we recommend users set a sync interval of -1 with a load metadata type of ONCE.\n+\n+#### All operations through Alluxio except for a select few\n+\n+##### HDFS UFS\n+\n+With HDFS, if most operations except for some special cases are updated through Alluxio, we can\n+take two approaches. One is [active sync](#active-sync-for-hdfs). The other is to set the sync\n+interval using path configuration.\n+\n+If HDFS is updated very frequently (not on the Alluxio mount point) and there is a large namespace,\n+it is more desirable to reduce load on the namenode by disabling active sync and simply using path\n+configuration instead. Otherwise, if the load on the namenode isn't a concern, use ActiveSync and\n+set the sync interval to -1.\n+\n+##### Non-HDFS UFS\n+\n+If a small number of paths are updated regularly or semi-regularly through the UFS directly instead\n+of Alluxio, we recommend using the path configuration feature to set the sync interval on the\n+specific path(s) based on the understanding of the rate of change in the UFS. This allows files to\n+be synced for the special cases without detrimentally affecting the performance of operations on\n+other parts of the namespace.\n+\n+#### UFS frequently updated not through Alluxio\n+\n+##### HDFS\n+\n+If the updates happen across many parts (or unknown) of the namespace at a frequent rate, use active", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b7415c99f0481edc7c34c4803a3d82b90afc124"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU0OTAwNQ==", "bodyText": "nit: newline above this line to be consistent?", "url": "https://github.com/Alluxio/alluxio/pull/12004#discussion_r472549005", "createdAt": "2020-08-18T23:29:42Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/core-services/Unified-Namespace.md", "diffHunk": "@@ -202,26 +224,133 @@ In `alluxio-site.properties` on master nodes:\n \n Note master nodes need to be restarted to pick up configuration changes.\n \n+#### Utilizing Path Configuration\n+\n+For clusters where the frequency of out-of-band changes varies based on the subtree in the\n+namespace,\n+[path configurations]({{ '/en/operation/Configuration.html#path-defaults' | relativize_url }})\n+should be used to set the metadata sync interval at a finer\n+granularity. For example, for paths which change often, a sync interval of `5 minutes` can\n+be set, and for paths which do not change, a sync interval of `-1` can be set.\n+\n+### Metadata Sync Recommendations for Common Scenarios\n+\n+#### All operations through Alluxio\n+\n+If all operations are run through Alluxio without any access to the UFS from outside applications,\n+then we recommend users set a sync interval of -1 with a load metadata type of ONCE.\n+\n+#### All operations through Alluxio except for a select few\n+\n+##### HDFS UFS\n+\n+With HDFS, if most operations except for some special cases are updated through Alluxio, we can\n+take two approaches. One is [active sync](#active-sync-for-hdfs). The other is to set the sync\n+interval using path configuration.\n+\n+If HDFS is updated very frequently (not on the Alluxio mount point) and there is a large namespace,\n+it is more desirable to reduce load on the namenode by disabling active sync and simply using path\n+configuration instead. Otherwise, if the load on the namenode isn't a concern, use ActiveSync and\n+set the sync interval to -1.\n+\n+##### Non-HDFS UFS\n+\n+If a small number of paths are updated regularly or semi-regularly through the UFS directly instead\n+of Alluxio, we recommend using the path configuration feature to set the sync interval on the\n+specific path(s) based on the understanding of the rate of change in the UFS. This allows files to\n+be synced for the special cases without detrimentally affecting the performance of operations on\n+other parts of the namespace.\n+\n+#### UFS frequently updated not through Alluxio\n+\n+##### HDFS\n+\n+If the updates happen across many parts (or unknown) of the namespace at a frequent rate, use active\n+sync in order to update metadata in a timely manner. If the rate of change is too fast, namespace is\n+too large, or the user does not want to update the max RPC size from the namenode, then follow the\n+suggestion in the section below for Non-HDFS UFS.\n+\n+##### Non-HDFS UFS\n+\n+Set the sync interval for each subtree or the entire cluster based on the understanding of the rate\n+of change in the UFS.\n+\n ### Other Methods for Loading New UFS Files\n \n-The UFS sync discussed previously is the recommended method for synchronizing changes from the UFS.\n-Here are some other methods for loading files:\n-\n-* `alluxio.user.file.metadata.load.type`: This client property can be set to either\n-`ALWAYS`, `ONCE`, or `NEVER`. It acts similar to `alluxio.user.file.metadata.sync.interval`,\n-but with two caveats:\n-    1. It only discovers new files and does not reload modified or deleted files.\n-    1. It only applies to the `exists`, `list`, and `getStatus` RPCs.\n-    \n-    `ALWAYS` will always check the UFS for new files, `ONCE` will use the default\n-behavior of only scanning each directory once ever, and `NEVER` will prevent Alluxio\n-from scanning for new files at all.\n-\n-* `alluxio fs ls -f /path`: The `-f` option to `ls` acts is equivalent to setting\n-`alluxio.user.file.metadata.load.type` to `ALWAYS`. It discovers new files but\n-does not detect modified or deleted UFS files.\n-The only way to detect modified or deleted UFS files is to pass the\n-`-Dalluxio.user.file.metadata.sync.interval=0` option to `ls`.\n+We recommend to configure the sync interval exclusively. It is not recommended to consider\n+configuring the metadata load type. However, do note the following equivalencies\n+\n+`alluxio.user.file.metadata.load.type=NEVER` is equivalent to `alluxio.user.metadata.sync.interval=-1`\n+`alluxio.user.file.metadata.load.type=ALWAYS` is equivalent to `alluxio.user.metadata.sync.interval=0`\n+\n+If the metadata sync interval is configured the metadata load type is ignored.\n+\n+### Active Sync for HDFS\n+In version 2.0, we introduced a new feature for maintaining synchronization between Alluxio space", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b7415c99f0481edc7c34c4803a3d82b90afc124"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU0OTUxNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For example, if a directory had 100, 10, 1 event in the past three intervals.\n          \n          \n            \n            For example, if a directory had 100, 10, and 1 events in the past three intervals.", "url": "https://github.com/Alluxio/alluxio/pull/12004#discussion_r472549517", "createdAt": "2020-08-18T23:31:13Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/core-services/Unified-Namespace.md", "diffHunk": "@@ -202,26 +224,133 @@ In `alluxio-site.properties` on master nodes:\n \n Note master nodes need to be restarted to pick up configuration changes.\n \n+#### Utilizing Path Configuration\n+\n+For clusters where the frequency of out-of-band changes varies based on the subtree in the\n+namespace,\n+[path configurations]({{ '/en/operation/Configuration.html#path-defaults' | relativize_url }})\n+should be used to set the metadata sync interval at a finer\n+granularity. For example, for paths which change often, a sync interval of `5 minutes` can\n+be set, and for paths which do not change, a sync interval of `-1` can be set.\n+\n+### Metadata Sync Recommendations for Common Scenarios\n+\n+#### All operations through Alluxio\n+\n+If all operations are run through Alluxio without any access to the UFS from outside applications,\n+then we recommend users set a sync interval of -1 with a load metadata type of ONCE.\n+\n+#### All operations through Alluxio except for a select few\n+\n+##### HDFS UFS\n+\n+With HDFS, if most operations except for some special cases are updated through Alluxio, we can\n+take two approaches. One is [active sync](#active-sync-for-hdfs). The other is to set the sync\n+interval using path configuration.\n+\n+If HDFS is updated very frequently (not on the Alluxio mount point) and there is a large namespace,\n+it is more desirable to reduce load on the namenode by disabling active sync and simply using path\n+configuration instead. Otherwise, if the load on the namenode isn't a concern, use ActiveSync and\n+set the sync interval to -1.\n+\n+##### Non-HDFS UFS\n+\n+If a small number of paths are updated regularly or semi-regularly through the UFS directly instead\n+of Alluxio, we recommend using the path configuration feature to set the sync interval on the\n+specific path(s) based on the understanding of the rate of change in the UFS. This allows files to\n+be synced for the special cases without detrimentally affecting the performance of operations on\n+other parts of the namespace.\n+\n+#### UFS frequently updated not through Alluxio\n+\n+##### HDFS\n+\n+If the updates happen across many parts (or unknown) of the namespace at a frequent rate, use active\n+sync in order to update metadata in a timely manner. If the rate of change is too fast, namespace is\n+too large, or the user does not want to update the max RPC size from the namenode, then follow the\n+suggestion in the section below for Non-HDFS UFS.\n+\n+##### Non-HDFS UFS\n+\n+Set the sync interval for each subtree or the entire cluster based on the understanding of the rate\n+of change in the UFS.\n+\n ### Other Methods for Loading New UFS Files\n \n-The UFS sync discussed previously is the recommended method for synchronizing changes from the UFS.\n-Here are some other methods for loading files:\n-\n-* `alluxio.user.file.metadata.load.type`: This client property can be set to either\n-`ALWAYS`, `ONCE`, or `NEVER`. It acts similar to `alluxio.user.file.metadata.sync.interval`,\n-but with two caveats:\n-    1. It only discovers new files and does not reload modified or deleted files.\n-    1. It only applies to the `exists`, `list`, and `getStatus` RPCs.\n-    \n-    `ALWAYS` will always check the UFS for new files, `ONCE` will use the default\n-behavior of only scanning each directory once ever, and `NEVER` will prevent Alluxio\n-from scanning for new files at all.\n-\n-* `alluxio fs ls -f /path`: The `-f` option to `ls` acts is equivalent to setting\n-`alluxio.user.file.metadata.load.type` to `ALWAYS`. It discovers new files but\n-does not detect modified or deleted UFS files.\n-The only way to detect modified or deleted UFS files is to pass the\n-`-Dalluxio.user.file.metadata.sync.interval=0` option to `ls`.\n+We recommend to configure the sync interval exclusively. It is not recommended to consider\n+configuring the metadata load type. However, do note the following equivalencies\n+\n+`alluxio.user.file.metadata.load.type=NEVER` is equivalent to `alluxio.user.metadata.sync.interval=-1`\n+`alluxio.user.file.metadata.load.type=ALWAYS` is equivalent to `alluxio.user.metadata.sync.interval=0`\n+\n+If the metadata sync interval is configured the metadata load type is ignored.\n+\n+### Active Sync for HDFS\n+In version 2.0, we introduced a new feature for maintaining synchronization between Alluxio space\n+and the UFS when the UFS is HDFS. The feature, called active sync, listens for HDFS events and\n+periodically synchronizes the metadata between the UFS and Alluxio namespace as a background task on\n+the master.\n+Because active sync feature depends on HDFS events, this feature is only available when the UFS HDFS\n+versions is later than 2.6.1.\n+You may need to change the value for `alluxio.underfs.version` in your configuration file.\n+Please refer to\n+[HDFS Under Store]({{ '/en/ufs/HDFS.html#supported-hdfs-versions' | relativize_url }}) for a list of\n+supported Hdfs versions.\n+\n+To enable active sync on a directory, issue the following Alluxio command.\n+\n+```console\n+$ ./bin/alluxio fs startSync /syncdir\n+```\n+\n+You can control the active sync interval by changing the `alluxio.master.ufs.active.sync.interval` option, the default is 30 seconds.\n+\n+To disable active sync on a directory, issue the following Alluxio command.\n+\n+```console\n+$ ./bin/alluxio fs stopSync /syncdir\n+```\n+\n+> Note: When `startSync` is issued, a full scan of the sync point is scheduled.\n+> If run as the Alluxio superuser, `stopSync` will interrupt any full scans which have not yet ended.\n+> If run as any other user, `stopSync` will wait for the full scan to finish before completing.\n+\n+You can also examine which directories are currently under active sync, with the following command.\n+\n+```console\n+$ ./bin/alluxio fs getSyncPathList\n+```\n+\n+#### Quiet period for Active Sync\n+\n+Active sync also tries to avoid syncing when the target directory is heavily used.\n+It tries to look for a quiet period in UFS activity to start syncing between the UFS and the Alluxio space, to avoid overloading the UFS when it is busy.\n+There are two configuration options that control this behavior.\n+\n+`alluxio.master.ufs.active.sync.max.activities` is the maximum number of activities in the UFS directory.\n+Activity is a heuristic based on the exponential moving average of number of events in a directory.\n+For example, if a directory had 100, 10, 1 event in the past three intervals.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b7415c99f0481edc7c34c4803a3d82b90afc124"}, "originalPosition": 181}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbce6fd71bcabbf28ee8e7d4f88d5e9a668187f1", "author": {"user": {"login": "calvinjia", "name": "Calvin Jia"}}, "url": "https://github.com/Alluxio/alluxio/commit/cbce6fd71bcabbf28ee8e7d4f88d5e9a668187f1", "committedDate": "2020-08-19T02:11:11Z", "message": "Address comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e2550b8cd7aa08060daa1fb31b002f0e9959e0e", "author": {"user": {"login": "calvinjia", "name": "Calvin Jia"}}, "url": "https://github.com/Alluxio/alluxio/commit/8e2550b8cd7aa08060daa1fb31b002f0e9959e0e", "committedDate": "2020-08-19T18:30:09Z", "message": "Update image to smaller size."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNzMzODY1", "url": "https://github.com/Alluxio/alluxio/pull/12004#pullrequestreview-470733865", "createdAt": "2020-08-19T18:32:27Z", "commit": {"oid": "8e2550b8cd7aa08060daa1fb31b002f0e9959e0e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4147, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}