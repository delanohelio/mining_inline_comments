{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNjc2MjY2", "number": 11190, "title": "Add Parquet Compression option", "bodyText": "Supported compressions\nparquet.compression=snappy\n-rw-r--r--  ec2-user       ec2-user             176773098       PERSISTED 03-19-2020 17:02:33:446 100% /catalog/movielens/tables/ratings/internal/ratings/20200319-170148-870-XX8Nm/part-0.parquet\nparquet.compression=gzip\n-rw-r--r--  ec2-user       ec2-user             123313059       PERSISTED 03-19-2020 17:16:04:797   0% /catalog/movielens/tables/ratings/internal/ratings/20200319-171507-662-AnOVT/part-0.parquet\nparquet.compression=uncompressed\n-rw-r--r--  ec2-user       ec2-user             208935017       PERSISTED 03-19-2020 17:11:50:626   0% /catalog/movielens/tables/ratings/internal/ratings/20200319-171107-547-xWDJC/part-0.parquet\nCan be supported but not yet\nparquet.compression=lzo\nClass com.hadoop.compression.lzo.LzoCodec not found\nparquet.compression=brotli\nClass rg.apache.hadoop.io.compress.BrotliCodec not found\nparquet.compression=lz4\nnative lz4 library not available\nparquet.compression=zstd\nClass rg.apache.hadoop.io.compress.ZStandardCodec not found", "createdAt": "2020-03-18T21:33:11Z", "url": "https://github.com/Alluxio/alluxio/pull/11190", "merged": true, "mergeCommit": {"oid": "097ce8654c7df9764c6d71807db39f598657db6f"}, "closed": true, "closedAt": "2020-04-01T20:07:09Z", "author": {"login": "bradyoo"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO-PTVgH2gAyMzkwNjc2MjY2OjEwOGQ5YjEyNGQyYTk5YTQyOWEyODE1NDYyN2FjYjNhMTA3MjBiZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTdZ15gFqTM4NTkxMDM2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "108d9b124d2a99a429a28154627acb3a10720bd3", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/108d9b124d2a99a429a28154627acb3a10720bd3", "committedDate": "2020-03-18T21:31:51Z", "message": "Add Parquet Compression option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce40b64ad3e95fba4687e0aa5f376f1a8059381b", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/ce40b64ad3e95fba4687e0aa5f376f1a8059381b", "committedDate": "2020-03-19T01:14:47Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76b16745ee9ed8a4d1f3c2c6f0e9df8f2c43a003", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/76b16745ee9ed8a4d1f3c2c6f0e9df8f2c43a003", "committedDate": "2020-03-19T22:07:48Z", "message": "add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb37f5446bb01f12cec035bfc3a59fa61a2ca25f", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/cb37f5446bb01f12cec035bfc3a59fa61a2ca25f", "committedDate": "2020-03-19T22:19:27Z", "message": "Merge remote-tracking branch 'upstream/master' into parquet_compression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af121548dc660cf95c176e338552a927841da30e", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/af121548dc660cf95c176e338552a927841da30e", "committedDate": "2020-03-19T22:30:14Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "490ee32be25be2222ebfd840c9c4445d1dc848e4", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/490ee32be25be2222ebfd840c9c4445d1dc848e4", "committedDate": "2020-03-19T22:30:43Z", "message": "undo this"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjkxMzUz", "url": "https://github.com/Alluxio/alluxio/pull/11190#pullrequestreview-381291353", "createdAt": "2020-03-25T15:56:52Z", "commit": {"oid": "490ee32be25be2222ebfd840c9c4445d1dc848e4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNTo1Njo1M1rOF7iHJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjo0Nzo0M1rOF7kfew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2OTE4OA==", "bodyText": "Should this have output partition too?", "url": "https://github.com/Alluxio/alluxio/pull/11190#discussion_r397969188", "createdAt": "2020-03-25T15:56:53Z", "author": {"login": "gpang"}, "path": "job/common/src/main/java/alluxio/job/plan/transform/CompactConfig.java", "diffHunk": "@@ -119,7 +131,7 @@ public boolean equals(Object obj) {\n       return false;\n     }\n     CompactConfig that = (CompactConfig) obj;\n-    return mPartitionInfo.equals(that.mPartitionInfo)\n+    return mInputPartitionInfo.equals(that.mInputPartitionInfo)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "490ee32be25be2222ebfd840c9c4445d1dc848e4"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2OTI2Mg==", "bodyText": "Should this have output partition too?", "url": "https://github.com/Alluxio/alluxio/pull/11190#discussion_r397969262", "createdAt": "2020-03-25T15:56:59Z", "author": {"login": "gpang"}, "path": "job/common/src/main/java/alluxio/job/plan/transform/CompactConfig.java", "diffHunk": "@@ -128,7 +140,7 @@ public boolean equals(Object obj) {\n \n   @Override\n   public int hashCode() {\n-    return Objects.hashCode(mPartitionInfo, mInput, mOutput, mMaxNumFiles, mMinFileSize);\n+    return Objects.hashCode(mInputPartitionInfo, mInput, mOutput, mMaxNumFiles, mMinFileSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "490ee32be25be2222ebfd840c9c4445d1dc848e4"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk2OTMxNQ==", "bodyText": "Should this have output partition too?", "url": "https://github.com/Alluxio/alluxio/pull/11190#discussion_r397969315", "createdAt": "2020-03-25T15:57:04Z", "author": {"login": "gpang"}, "path": "job/common/src/main/java/alluxio/job/plan/transform/CompactConfig.java", "diffHunk": "@@ -138,7 +150,7 @@ public String toString() {\n         .add(\"output\", mOutput)\n         .add(\"maxNumFiles\", mMaxNumFiles)\n         .add(\"minFileSize\", mMinFileSize)\n-        .add(\"partitionInfo\", mPartitionInfo)\n+        .add(\"partitionInfo\", mInputPartitionInfo)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "490ee32be25be2222ebfd840c9c4445d1dc848e4"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3MDcyNA==", "bodyText": "Why does this not look like other transform config properties, like \"file.count.max\"?", "url": "https://github.com/Alluxio/alluxio/pull/11190#discussion_r397970724", "createdAt": "2020-03-25T15:58:48Z", "author": {"login": "gpang"}, "path": "job/common/src/main/java/alluxio/job/plan/transform/PartitionInfo.java", "diffHunk": "@@ -27,6 +27,11 @@\n public class PartitionInfo implements Serializable {\n   private static final long serialVersionUID = 6905153658064056381L;\n \n+  /**\n+   * Key in Serde Properties to denote parquet compression method.\n+   */\n+  public static final String PARQUET_COMPRESSION = \"parquet.compression\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "490ee32be25be2222ebfd840c9c4445d1dc848e4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3MTQyNQ==", "bodyText": "if this is null, what does it do/mean?", "url": "https://github.com/Alluxio/alluxio/pull/11190#discussion_r397971425", "createdAt": "2020-03-25T15:59:39Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/format/TableWriter.java", "diffHunk": "@@ -25,11 +27,21 @@\n    * @param schema the table schema\n    * @param uri the URI to the output\n    * @return the writer for the output\n-   * @throws IOException when failed to create the writer\n    */\n   static TableWriter create(TableSchema schema, AlluxioURI uri) throws IOException {\n+    return create(schema, uri, null);\n+  }\n+\n+  /**\n+   * @param schema the table schema\n+   * @param uri the URI to the output\n+   * @param partitionInfo the writer for the output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "490ee32be25be2222ebfd840c9c4445d1dc848e4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3MTkyNg==", "bodyText": "can we add @Nullable?", "url": "https://github.com/Alluxio/alluxio/pull/11190#discussion_r397971926", "createdAt": "2020-03-25T16:00:18Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/format/parquet/ParquetWriter.java", "diffHunk": "@@ -55,11 +57,43 @@ private ParquetWriter(org.apache.parquet.hadoop.ParquetWriter<Record> writer) {\n    * @param schema the schema\n    * @param uri the URI to the output\n    * @return the writer\n-   * @throws IOException when failed to create the writer\n    */\n   public static ParquetWriter create(TableSchema schema, AlluxioURI uri)\n       throws IOException {\n-    return ParquetWriter.create(schema, uri, ROW_GROUP_SIZE, true);\n+    return ParquetWriter.create(schema, uri, ROW_GROUP_SIZE, true, DEFAULT_COMPRESSION_CODEC);\n+  }\n+\n+  /**\n+   * Creates a parquet writer based on the partitionInfo.\n+   *\n+   * @param schema the schema\n+   * @param uri the URI to the output\n+   * @param partitionInfo the partitionInfo\n+   * @return the writer\n+   */\n+  public static ParquetWriter create(TableSchema schema, AlluxioURI uri,\n+                                     PartitionInfo partitionInfo) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "490ee32be25be2222ebfd840c9c4445d1dc848e4"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk3MjEwMw==", "bodyText": "can we add that this could be null?", "url": "https://github.com/Alluxio/alluxio/pull/11190#discussion_r397972103", "createdAt": "2020-03-25T16:00:30Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/format/parquet/ParquetWriter.java", "diffHunk": "@@ -55,11 +57,43 @@ private ParquetWriter(org.apache.parquet.hadoop.ParquetWriter<Record> writer) {\n    * @param schema the schema\n    * @param uri the URI to the output\n    * @return the writer\n-   * @throws IOException when failed to create the writer\n    */\n   public static ParquetWriter create(TableSchema schema, AlluxioURI uri)\n       throws IOException {\n-    return ParquetWriter.create(schema, uri, ROW_GROUP_SIZE, true);\n+    return ParquetWriter.create(schema, uri, ROW_GROUP_SIZE, true, DEFAULT_COMPRESSION_CODEC);\n+  }\n+\n+  /**\n+   * Creates a parquet writer based on the partitionInfo.\n+   *\n+   * @param schema the schema\n+   * @param uri the URI to the output\n+   * @param partitionInfo the partitionInfo", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "490ee32be25be2222ebfd840c9c4445d1dc848e4"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAwODE4Nw==", "bodyText": "the properties and the definition represent the same transformation, right? Then, can we just pass in one of them, and derive the other?", "url": "https://github.com/Alluxio/alluxio/pull/11190#discussion_r398008187", "createdAt": "2020-03-25T16:47:43Z", "author": {"login": "gpang"}, "path": "table/server/common/src/main/java/alluxio/table/common/transform/TransformDefinition.java", "diffHunk": "@@ -26,18 +26,21 @@\n public class TransformDefinition {\n   private final String mDefinition;\n   private final List<TransformAction> mActions;\n+  private final Properties mProperties;\n \n   /**\n    * The user-provided definition is normalized by:\n    * 1. trimming whitespaces and semicolon from the beginning and end;\n    * 2. normalize to lower case.\n-   *\n-   * @param definition the string definition\n+   *  @param definition the string definition\n    * @param actions the list of actions\n+   * @param properties the list of properties extracted from definition\n    */\n-  private TransformDefinition(String definition, List<TransformAction> actions) {\n+  private TransformDefinition(String definition, List<TransformAction> actions,\n+                              Properties properties) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "490ee32be25be2222ebfd840c9c4445d1dc848e4"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b1f58edfa9d00dcbfd8b6079b0eef4c7c4e5282", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/7b1f58edfa9d00dcbfd8b6079b0eef4c7c4e5282", "committedDate": "2020-03-25T19:10:37Z", "message": "feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41729cce10b6cc99fe1851f0cb0dabec41f91f7e", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/41729cce10b6cc99fe1851f0cb0dabec41f91f7e", "committedDate": "2020-03-25T19:39:18Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "978f11ad8f9def40dc54ab6b03d7c2376f0184e5", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/978f11ad8f9def40dc54ab6b03d7c2376f0184e5", "committedDate": "2020-03-25T22:22:49Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MjE2NjA5", "url": "https://github.com/Alluxio/alluxio/pull/11190#pullrequestreview-384216609", "createdAt": "2020-03-30T20:45:38Z", "commit": {"oid": "978f11ad8f9def40dc54ab6b03d7c2376f0184e5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDo0NTozOFrOF97hpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDo0NTozOFrOF97hpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4MjcyNA==", "bodyText": "Does doing it later mean refactoring it later? I am fine with that. If so, can you leave a TODO?", "url": "https://github.com/Alluxio/alluxio/pull/11190#discussion_r400482724", "createdAt": "2020-03-30T20:45:38Z", "author": {"login": "gpang"}, "path": "table/server/common/src/main/java/alluxio/table/common/transform/TransformDefinition.java", "diffHunk": "@@ -26,18 +26,21 @@\n public class TransformDefinition {\n   private final String mDefinition;\n   private final List<TransformAction> mActions;\n+  private final Properties mProperties;\n \n   /**\n    * The user-provided definition is normalized by:\n    * 1. trimming whitespaces and semicolon from the beginning and end;\n    * 2. normalize to lower case.\n-   *\n-   * @param definition the string definition\n+   *  @param definition the string definition\n    * @param actions the list of actions\n+   * @param properties the list of properties extracted from definition\n    */\n-  private TransformDefinition(String definition, List<TransformAction> actions) {\n+  private TransformDefinition(String definition, List<TransformAction> actions,\n+                              Properties properties) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAwODE4Nw=="}, "originalCommit": {"oid": "490ee32be25be2222ebfd840c9c4445d1dc848e4"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e773b3301f19c608684dd2236ebfc7c483fb308", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/4e773b3301f19c608684dd2236ebfc7c483fb308", "committedDate": "2020-03-31T16:27:36Z", "message": "feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1OTEwMzY1", "url": "https://github.com/Alluxio/alluxio/pull/11190#pullrequestreview-385910365", "createdAt": "2020-04-01T20:06:07Z", "commit": {"oid": "4e773b3301f19c608684dd2236ebfc7c483fb308"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4676, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}