{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NTI0NTcz", "number": 11234, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyOToxNVrODubSmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwMToyNDoxNlrODuz_Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDA4MjE4OnYy", "diffSide": "RIGHT", "path": "bin/alluxio-mount.sh", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyOToxNVrOGAafsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwMToyNjowMFrOGA7CHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4NzI4MA==", "bodyText": "is tmpfs vs ramfs the only difference between this and the linux implementation?", "url": "https://github.com/Alluxio/alluxio/pull/11234#discussion_r403087280", "createdAt": "2020-04-03T15:29:15Z", "author": {"login": "ZacBlanco"}, "path": "bin/alluxio-mount.sh", "diffHunk": "@@ -87,6 +87,65 @@ function umount_ramfs_linux() {\n   fi\n }\n \n+function check_space_freebsd() {\n+  local total_mem=$(($(sysctl -h hw.usermem | awk 'NR==1{print $2}' | sed 's/,//g')))\n+  if [[ ${total_mem} -lt ${MEM_SIZE} ]]; then\n+    echo \"ERROR: Memory(${total_mem}) is less than requested ramdisk size(${MEM_SIZE}). Please\n+    reduce alluxio.worker.memory.size in alluxio-site.properties\" >&2\n+    exit 1\n+  fi\n+}\n+\n+function mount_ramfs_freebsd() {\n+  TIER_PATH=${1}\n+  echo \"Formatting RamFS: ${TIER_PATH} (${MEM_SIZE})\"\n+  if [[ ${USE_SUDO} == true ]]; then\n+    sudo mkdir -p ${TIER_PATH}\n+  else\n+    mkdir -p ${TIER_PATH}\n+  fi\n+  if [[ $? -ne 0 ]]; then\n+    echo \"ERROR: mkdir ${TIER_PATH} failed\" >&2\n+    exit 1\n+  fi\n+\n+  if [[ ${USE_SUDO} == true ]]; then\n+    sudo mount -t tmpfs -o size=${MEM_SIZE} tmpfs ${TIER_PATH}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a98d4f9bef7a12c2f89f1011101d4cbdbc72ecd8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5MTg5NA==", "bodyText": "Additionally, I came across this link in the freebsd handbook which suggests a different approach: https://www.freebsd.org/doc/handbook/disks-virtual.html\n\nTo instead create a new memory-based memory disk with mdmfs, use this one command:\n\n# mdmfs -s 5m md1 /mnt\n\nHere is the man page on mdfs: www.freebsd.org/cgi/man.cgi?query=mdmfs&sektion=8&manpath=freebsd-release-ports\nHave you considered this option?", "url": "https://github.com/Alluxio/alluxio/pull/11234#discussion_r403091894", "createdAt": "2020-04-03T15:36:01Z", "author": {"login": "ZacBlanco"}, "path": "bin/alluxio-mount.sh", "diffHunk": "@@ -87,6 +87,65 @@ function umount_ramfs_linux() {\n   fi\n }\n \n+function check_space_freebsd() {\n+  local total_mem=$(($(sysctl -h hw.usermem | awk 'NR==1{print $2}' | sed 's/,//g')))\n+  if [[ ${total_mem} -lt ${MEM_SIZE} ]]; then\n+    echo \"ERROR: Memory(${total_mem}) is less than requested ramdisk size(${MEM_SIZE}). Please\n+    reduce alluxio.worker.memory.size in alluxio-site.properties\" >&2\n+    exit 1\n+  fi\n+}\n+\n+function mount_ramfs_freebsd() {\n+  TIER_PATH=${1}\n+  echo \"Formatting RamFS: ${TIER_PATH} (${MEM_SIZE})\"\n+  if [[ ${USE_SUDO} == true ]]; then\n+    sudo mkdir -p ${TIER_PATH}\n+  else\n+    mkdir -p ${TIER_PATH}\n+  fi\n+  if [[ $? -ne 0 ]]; then\n+    echo \"ERROR: mkdir ${TIER_PATH} failed\" >&2\n+    exit 1\n+  fi\n+\n+  if [[ ${USE_SUDO} == true ]]; then\n+    sudo mount -t tmpfs -o size=${MEM_SIZE} tmpfs ${TIER_PATH}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4NzI4MA=="}, "originalCommit": {"oid": "a98d4f9bef7a12c2f89f1011101d4cbdbc72ecd8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2Mzg1MQ==", "bodyText": "Additionally, I came across this link in the freebsd handbook which suggests a different approach: https://www.freebsd.org/doc/handbook/disks-virtual.html\n\nTo instead create a new memory-based memory disk with mdmfs, use this one command:\n\n# mdmfs -s 5m md1 /mnt\n\nHere is the man page on mdfs: www.freebsd.org/cgi/man.cgi?query=mdmfs&sektion=8&manpath=freebsd-release-ports\nHave you considered this option?\n\nYes I did but I wanted the code to be as similar to the linux version as possible. The mount -t tmpfs does basically the same thing based on the alluxio usage, see https://www.freebsd.org/cgi/man.cgi?query=mdmfs&sektion=8&manpath=freebsd-release-ports:\n     When md-device is `auto', mdmfs uses tmpfs(5) if it is present in the\n     kernel or can be loaded as\ta module, otherwise it falls back to using\n     md(4) auto-unit as\tif `md'\thad been specified.\n\n     When md-device is `tmpfs',\tmdmfs mounts a tmpfs(5)\tfilesystem, translat-\n     ing the -s\tsize option, if\tpresent, into a\t`-o size=' mount option.  Any\n     -o\toptions\ton the command line are\tpassed through to the tmpfs(5) mount.\n     Options specific to mdconfig(8) or\tnewfs(8) are ignored.\n\n\nis tmpfs vs ramfs the only difference between this and the linux implementation?\n\nThe other difference is that this implementation also uses sysctl instead of /proc/meminfo to avoid requiring mounting procfs.", "url": "https://github.com/Alluxio/alluxio/pull/11234#discussion_r403463851", "createdAt": "2020-04-04T12:20:00Z", "author": {"login": "martenlindblad"}, "path": "bin/alluxio-mount.sh", "diffHunk": "@@ -87,6 +87,65 @@ function umount_ramfs_linux() {\n   fi\n }\n \n+function check_space_freebsd() {\n+  local total_mem=$(($(sysctl -h hw.usermem | awk 'NR==1{print $2}' | sed 's/,//g')))\n+  if [[ ${total_mem} -lt ${MEM_SIZE} ]]; then\n+    echo \"ERROR: Memory(${total_mem}) is less than requested ramdisk size(${MEM_SIZE}). Please\n+    reduce alluxio.worker.memory.size in alluxio-site.properties\" >&2\n+    exit 1\n+  fi\n+}\n+\n+function mount_ramfs_freebsd() {\n+  TIER_PATH=${1}\n+  echo \"Formatting RamFS: ${TIER_PATH} (${MEM_SIZE})\"\n+  if [[ ${USE_SUDO} == true ]]; then\n+    sudo mkdir -p ${TIER_PATH}\n+  else\n+    mkdir -p ${TIER_PATH}\n+  fi\n+  if [[ $? -ne 0 ]]; then\n+    echo \"ERROR: mkdir ${TIER_PATH} failed\" >&2\n+    exit 1\n+  fi\n+\n+  if [[ ${USE_SUDO} == true ]]; then\n+    sudo mount -t tmpfs -o size=${MEM_SIZE} tmpfs ${TIER_PATH}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4NzI4MA=="}, "originalCommit": {"oid": "a98d4f9bef7a12c2f89f1011101d4cbdbc72ecd8"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzYyMDM4MQ==", "bodyText": "Thanks for the clarification!", "url": "https://github.com/Alluxio/alluxio/pull/11234#discussion_r403620381", "createdAt": "2020-04-05T01:26:00Z", "author": {"login": "ZacBlanco"}, "path": "bin/alluxio-mount.sh", "diffHunk": "@@ -87,6 +87,65 @@ function umount_ramfs_linux() {\n   fi\n }\n \n+function check_space_freebsd() {\n+  local total_mem=$(($(sysctl -h hw.usermem | awk 'NR==1{print $2}' | sed 's/,//g')))\n+  if [[ ${total_mem} -lt ${MEM_SIZE} ]]; then\n+    echo \"ERROR: Memory(${total_mem}) is less than requested ramdisk size(${MEM_SIZE}). Please\n+    reduce alluxio.worker.memory.size in alluxio-site.properties\" >&2\n+    exit 1\n+  fi\n+}\n+\n+function mount_ramfs_freebsd() {\n+  TIER_PATH=${1}\n+  echo \"Formatting RamFS: ${TIER_PATH} (${MEM_SIZE})\"\n+  if [[ ${USE_SUDO} == true ]]; then\n+    sudo mkdir -p ${TIER_PATH}\n+  else\n+    mkdir -p ${TIER_PATH}\n+  fi\n+  if [[ $? -ne 0 ]]; then\n+    echo \"ERROR: mkdir ${TIER_PATH} failed\" >&2\n+    exit 1\n+  fi\n+\n+  if [[ ${USE_SUDO} == true ]]; then\n+    sudo mount -t tmpfs -o size=${MEM_SIZE} tmpfs ${TIER_PATH}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4NzI4MA=="}, "originalCommit": {"oid": "a98d4f9bef7a12c2f89f1011101d4cbdbc72ecd8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDEyODc0OnYy", "diffSide": "RIGHT", "path": "bin/alluxio-mount.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwMToyNDoxNlrOGA6_eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxMDoyNTo1M1rOGA-wMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzYxOTcwNg==", "bodyText": "Just trying to understand this command\n\nsysctl -h hw.usermem\n\nprints out the system memory in human-readable format because of the -h flag\n\nawk 'NR==1{print $2}\n\nThis will print out the 2nd column from the first line, where the column is defined by a  char. I'm assuming the 2nd column is the value for the hw.usermem\n\nsed 's/,//g'\n\nRemoves an commas from the resulting output.\nMy only question with this set of commands is the -h flag. It will print in human readable format, but does that mean it will convert bytes to kb, mb, gb, etc dynamically based on the actual value?\nIn our linux version we use /proc/meminfo which always prints in kb, and then multiply that value by 1024. If we leave off the -h will it just give us the raw value in bytes? I think that is what we want.\n(sorry I don't have a freebsd system available to test this myself)", "url": "https://github.com/Alluxio/alluxio/pull/11234#discussion_r403619706", "createdAt": "2020-04-05T01:24:16Z", "author": {"login": "ZacBlanco"}, "path": "bin/alluxio-mount.sh", "diffHunk": "@@ -87,6 +87,65 @@ function umount_ramfs_linux() {\n   fi\n }\n \n+function check_space_freebsd() {\n+  local total_mem=$(($(sysctl -h hw.usermem | awk 'NR==1{print $2}' | sed 's/,//g')))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a98d4f9bef7a12c2f89f1011101d4cbdbc72ecd8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY4MTMyOQ==", "bodyText": "You're right, this was really sloppy from me. The correct way of doing it is sysctl -n hw.usermem. That way we can omit the awk and sed commands. I will update the PR.", "url": "https://github.com/Alluxio/alluxio/pull/11234#discussion_r403681329", "createdAt": "2020-04-05T10:25:53Z", "author": {"login": "martenlindblad"}, "path": "bin/alluxio-mount.sh", "diffHunk": "@@ -87,6 +87,65 @@ function umount_ramfs_linux() {\n   fi\n }\n \n+function check_space_freebsd() {\n+  local total_mem=$(($(sysctl -h hw.usermem | awk 'NR==1{print $2}' | sed 's/,//g')))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzYxOTcwNg=="}, "originalCommit": {"oid": "a98d4f9bef7a12c2f89f1011101d4cbdbc72ecd8"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1819, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}