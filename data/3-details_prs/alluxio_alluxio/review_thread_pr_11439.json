{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NzYyMDM0", "number": 11439, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo0MzoyOVrOD8_rRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo0Mzo0OFrOD8_rnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mjg0NDIwOnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/NoExceptionCacheManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo0MzoyOVrOGWRs0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToyNTowOFrOGWUSTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMTg1OA==", "bodyText": "Should this catch throwable, and should we log when we catch?", "url": "https://github.com/Alluxio/alluxio/pull/11439#discussion_r426011858", "createdAt": "2020-05-15T19:43:29Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/NoExceptionCacheManager.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.client.file.cache;\n+\n+import alluxio.metrics.MetricKey;\n+import alluxio.metrics.MetricsSystem;\n+\n+import com.codahale.metrics.Counter;\n+\n+import java.nio.channels.ReadableByteChannel;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A wrapper class of CacheManager without throwing unchecked exceptions.\n+ */\n+public class NoExceptionCacheManager implements CacheManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b286fb86971f487f98a3ae730fbec45cae5e18c4"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1NDIyMg==", "bodyText": "add log. but IMO  Error should be escalated as these are not something we should recover.", "url": "https://github.com/Alluxio/alluxio/pull/11439#discussion_r426054222", "createdAt": "2020-05-15T21:25:08Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/NoExceptionCacheManager.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.client.file.cache;\n+\n+import alluxio.metrics.MetricKey;\n+import alluxio.metrics.MetricsSystem;\n+\n+import com.codahale.metrics.Counter;\n+\n+import java.nio.channels.ReadableByteChannel;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A wrapper class of CacheManager without throwing unchecked exceptions.\n+ */\n+public class NoExceptionCacheManager implements CacheManager {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMTg1OA=="}, "originalCommit": {"oid": "b286fb86971f487f98a3ae730fbec45cae5e18c4"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mjg0NTA4OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/LocalPageStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo0Mzo0OFrOGWRtaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToyNDoxOVrOGWURRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMjAxMQ==", "bodyText": "Should we catch throwable here?", "url": "https://github.com/Alluxio/alluxio/pull/11439#discussion_r426012011", "createdAt": "2020-05-15T19:43:48Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/LocalPageStore.java", "diffHunk": "@@ -76,8 +76,14 @@ public void put(PageId pageId, byte[] page) throws IOException {\n       Files.createDirectories(parent);\n       Files.createFile(p);\n     }\n-    try (FileOutputStream fos = new FileOutputStream(p.toFile(), false)) {\n-      fos.write(page);\n+    try {\n+      // extra try to ensure output stream is closed\n+      try (FileOutputStream fos = new FileOutputStream(p.toFile(), false)) {\n+        fos.write(page);\n+      }\n+    } catch (IOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b286fb86971f487f98a3ae730fbec45cae5e18c4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1Mzk1OQ==", "bodyText": "changed to Exception. If Error happens, that's something really bad and we should escalate.", "url": "https://github.com/Alluxio/alluxio/pull/11439#discussion_r426053959", "createdAt": "2020-05-15T21:24:19Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/LocalPageStore.java", "diffHunk": "@@ -76,8 +76,14 @@ public void put(PageId pageId, byte[] page) throws IOException {\n       Files.createDirectories(parent);\n       Files.createFile(p);\n     }\n-    try (FileOutputStream fos = new FileOutputStream(p.toFile(), false)) {\n-      fos.write(page);\n+    try {\n+      // extra try to ensure output stream is closed\n+      try (FileOutputStream fos = new FileOutputStream(p.toFile(), false)) {\n+        fos.write(page);\n+      }\n+    } catch (IOException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxMjAxMQ=="}, "originalCommit": {"oid": "b286fb86971f487f98a3ae730fbec45cae5e18c4"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1751, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}