{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NTI2MzIx", "number": 12636, "title": "Add Metrics System Configurations to Helm Chart", "bodyText": "Adding configurations for Metrics System via Helm Chart\nhttps://docs.alluxio.io/os/user/stable/en/operation/Metrics-System.html\nUse case: Anyone using Helm Chart to install Alluxio running on Kubernetes platform, want to configure metrics for Alluxio, can easily configure through values.yaml\nFor an example, if I want to configure Prometheus then I enable it via the following configuration in values.yaml and apply the helm chart.\n##  Metrics System ##\n\n# Settings for Alluxio metrics. Disabled by default.\nmetrics:\n  enabled: true\n  # Enable PrometheusMetricsServlet by class name\n  PrometheusMetricsServlet:\n    enabled: true\n  # Pod annotations for Prometheus\n  podAnnotations:\n    prometheus.io/scrape: \"true\"\n    prometheus.io/port: \"19999\"\n    prometheus.io/path: \"/metrics/prometheus/\"", "createdAt": "2020-12-14T14:51:53Z", "url": "https://github.com/Alluxio/alluxio/pull/12636", "merged": true, "mergeCommit": {"oid": "9833d5f0841ef03fc9bb572fe4dccdd73bb98175"}, "closed": true, "closedAt": "2020-12-22T09:05:28Z", "author": {"login": "nirav-chotai"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmG6AogH2gAyNTM5NTI2MzIxOjIyMjU0OWM0ZGIxMjMzM2Q3ODNjZWZhNDJiMDMzNGI0NGQwZTUwOTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmrkjWAFqTU1MzUwMzIyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "222549c4db12333d783cefa42b0334b44d0e5091", "author": {"user": {"login": "nirav-chotai", "name": "Nirav Chotai"}}, "url": "https://github.com/Alluxio/alluxio/commit/222549c4db12333d783cefa42b0334b44d0e5091", "committedDate": "2020-12-14T14:49:09Z", "message": "Adding Metrics System Configurations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66c5b3a70bf43799be4bd6ce58c927c804909eb8", "author": {"user": {"login": "nirav-chotai", "name": "Nirav Chotai"}}, "url": "https://github.com/Alluxio/alluxio/commit/66c5b3a70bf43799be4bd6ce58c927c804909eb8", "committedDate": "2020-12-15T02:04:21Z", "message": "Fixing header for new ConfigMap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bcfae29aa8a6ee8227b2b7b6218476741ae9f56", "author": {"user": {"login": "nirav-chotai", "name": "Nirav Chotai"}}, "url": "https://github.com/Alluxio/alluxio/commit/2bcfae29aa8a6ee8227b2b7b6218476741ae9f56", "committedDate": "2020-12-15T05:48:32Z", "message": "Updated README"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a", "author": {"user": {"login": "nirav-chotai", "name": "Nirav Chotai"}}, "url": "https://github.com/Alluxio/alluxio/commit/3e95fe7d3e4d50868ffa64948755f9983f81978a", "committedDate": "2020-12-15T06:10:59Z", "message": "Updated values.yaml for fuse component"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1767d8032a2e0fbbbe52c24f4d94174235b7b9b", "author": {"user": {"login": "nirav-chotai", "name": "Nirav Chotai"}}, "url": "https://github.com/Alluxio/alluxio/commit/c1767d8032a2e0fbbbe52c24f4d94174235b7b9b", "committedDate": "2020-12-15T07:44:45Z", "message": "Updated README"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMTcxNzA0", "url": "https://github.com/Alluxio/alluxio/pull/12636#pullrequestreview-552171704", "createdAt": "2020-12-15T07:34:21Z", "commit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozNDoyMVrOIF80UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzo1NToyOVrOIF9hdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMDIyNA==", "bodyText": "Pod Annotations for the FUSE pods?", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543110224", "createdAt": "2020-12-15T07:34:21Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values\n+\n+Full documentation can be found in the comments of the `values.yaml` file, but a high level overview is provided here.\n+\n+__Common Values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `fullnameOverride` | To replace the generated name | `alluxio` |\n+| `image` | Docker image | `alluxio/alluxio` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `user` | Security Context for user | `1000` |\n+| `group` | Security Context for group | `1000` |\n+| `fsGroup` | Security Context for fsGroup | `1000` |\n+| `secrets` | Format: (<name>:<mount path under /secrets/>) | `{}` |\n+| `secrets.master` | Shared by master and jobMaster containers | `{}` |\n+| `secrets.worker` | Shared by worker and jobWorker containers | `{}` |\n+| `properties` | Site properties for all the components | `{}` |\n+| `jvmOptions` | Recommended JVM Heap options for running in Docker. These JVM options are common to all Alluxio services | `[]` |\n+| `mounts` | Mount Persistent Volumes to all components | `[]` |\n+| `nodeSelector` | Use labels to run Alluxio on a subset of the K8s nodes | `{}` |\n+\n+__Master values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `count` | Controls the number of StatefulSets. For multiMaster mode increase this to >1. | `1` |\n+| `replicas` | Controls #replicas in a StatefulSet and should not be modified in the usual case. | `1` |\n+| `env` | Extra environment variables for the master pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - master-only <br/> - --no-format |\n+| `properties` | Properties for the master component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `19200` |\n+| `ports.rpc` | RPC Port | `19998` |\n+| `ports.web` | Web Port | `19999` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the master container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the master Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |\n+\n+__jobMaster values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-master` |\n+| `properties` | Properties for the jobMaster component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `20003` |\n+| `ports.rpc` | RPC Port | `20001` |\n+| `ports.web` | Web Port | `20002` |\n+| `jvmOptions` | JVM options specific to the jobMaster container | `[]` |\n+\n+__Worker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `env` | Extra environment variables for the worker pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - worker-only <br/> - --no-format |\n+| `properties` | Properties for the worker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `2G` |\n+| `ports.rpc` | RPC Port | `29999` |\n+| `ports.web` | Web Port | `30000` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the worker container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the worker Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the worker | `{}` |\n+\n+__jobWorker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-worker` |\n+| `properties` | Properties for the jobWorker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.rpc` | RPC Port | `30001` |\n+| `ports.data` | Data Port | `30002` |\n+| `ports.web` | Web Port | `30003` |\n+| `jvmOptions` | JVM options specific to the jobWorker container | `[]` |\n+\n+__journal values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `type` | Alluxio supports journal type of `UFS` and `EMBEDDED` | `UFS` |\n+| `ufsType` | `local` or `HDFS`. Ignored if type is `EMBEDDED` | `local` |\n+| `folder` | Master journal folder | `/journal` |\n+| `volumeType` | `volumeType` controls the type of journal volume. It can be `persistentVolumeClaim` or `emptyDir` | `persistentVolumeClaim` |\n+| `size` | journal volume size | `1Gi` |\n+| `storageClass` | Attributes to use when the journal is `persistentVolumeClaim` | `standard` |\n+| `accessModes` | Access mode for the journal volume | `- ReadWriteOnce` |\n+| `medium` | Attributes to use when the journal is emptyDir | `\"\"` |\n+| `format.runFormat` | Configuration for journal formatting job. Change to true to format journal | `false` |\n+\n+__metastore values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `volumeType` | You can enable `metastore` to use ROCKS DB instead of Heap. `persistentVolumeClaim` or `emptyDir` | `persistentVolumeClaim` |\n+| `size` | Volume Size | `1Gi` |\n+| `mountPath` | Mount Path | `/metastore` |\n+| `storageClass` | Attributes to use when the `metastore` is `persistentVolumeClaim` | `standard` |\n+| `accessModes` | Access Mode for Volume | `- ReadWriteOnce` |\n+| `medium` | Attributes to use when the `metastore` is `emptyDir` | `\"\"` |\n+\n+__tieredstore values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `levels` | Tiered Storage | `[]` |\n+| `levels.level` | Level # starts from 0 | `0` |\n+| `levels.alias` | Alias name of tiered storage | `MEM` |\n+| `levels.mediumtype` | `MEM`, `HDD`, `SSD` | `MEM` |\n+| `levels.type` | `hostPath`, `emptyDir` or `persistentVolumeClaim` | `emptyDir` |\n+| `levels.path` | Mount Path for Volume | `/dev/shm` |\n+| `levels.quota` | Volume Size | `1G` |\n+| `levels.high` | Upper usage bound | `0.95` |\n+| `levels.low` | Lower usage bound | `0.7` |\n+\n+__shortCircuit values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `enabled` | Whether use short circuit or not | `true` |\n+| `policy` | The policy for short circuit can be `local` or `uuid` | `uuid` |\n+| `volumeType` | `volumeType` controls the type of `shortCircuit` volume. It can be `persistentVolumeClaim` or `hostPath` | `persistentVolumeClaim` |\n+| `size` | Volume Size | `1Mi` |\n+| `pvcName` | Attributes to use if the domain socket volume is PVC | `alluxio-worker-domain-socket` |\n+| `accessModes` | Access Mode | `- ReadWriteOnce` |\n+| `storageClass` | Storage Class | `standard` |\n+| `hostPath` | Attributes to use if the domain socket volume is `hostPath`. The `hostPath` directory to use | `/tmp/alluxio-domain` |\n+\n+__fuse values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `env` | Extra environment variables for the fuse pod | `{}` |\n+| `image` | Docker image | `alluxio/alluxio-fuse` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `enabled` | Set to true to deploy FUSE | `false` |\n+| `clientEnabled` | Set to true to deploy FUSE | `false` |\n+| `properties` | Properties for the fuse component | `{}` |\n+| `jvmOptions` | JVM options specific to the fuse container | `[]` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `true` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `true` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirstWithHostNet` |\n+| `user` | Security Context for user | `0` |\n+| `group` | Security Context for group | `0` |\n+| `fsGroup` | Security Context for fsGroup | `0` |\n+| `args` | Arguments to Docker entrypoint | - fuse <br/> - --fuse-opts=allow_other |\n+| `mountPath` | Mount path in the host | `/mnt/alluxio-fuse` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `0.5` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMTE0Mw==", "bodyText": "Is this intended? We rarely use this separation line in our doc.", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543111143", "createdAt": "2020-12-15T07:36:12Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMTI4OQ==", "bodyText": "This section is awesome, thanks a lot for adding it.", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543111289", "createdAt": "2020-12-15T07:36:30Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMjg0Nw==", "bodyText": "Maybe EMBEDDED JOURNAL port is more descriptive", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543112847", "createdAt": "2020-12-15T07:39:25Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values\n+\n+Full documentation can be found in the comments of the `values.yaml` file, but a high level overview is provided here.\n+\n+__Common Values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `fullnameOverride` | To replace the generated name | `alluxio` |\n+| `image` | Docker image | `alluxio/alluxio` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `user` | Security Context for user | `1000` |\n+| `group` | Security Context for group | `1000` |\n+| `fsGroup` | Security Context for fsGroup | `1000` |\n+| `secrets` | Format: (<name>:<mount path under /secrets/>) | `{}` |\n+| `secrets.master` | Shared by master and jobMaster containers | `{}` |\n+| `secrets.worker` | Shared by worker and jobWorker containers | `{}` |\n+| `properties` | Site properties for all the components | `{}` |\n+| `jvmOptions` | Recommended JVM Heap options for running in Docker. These JVM options are common to all Alluxio services | `[]` |\n+| `mounts` | Mount Persistent Volumes to all components | `[]` |\n+| `nodeSelector` | Use labels to run Alluxio on a subset of the K8s nodes | `{}` |\n+\n+__Master values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `count` | Controls the number of StatefulSets. For multiMaster mode increase this to >1. | `1` |\n+| `replicas` | Controls #replicas in a StatefulSet and should not be modified in the usual case. | `1` |\n+| `env` | Extra environment variables for the master pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - master-only <br/> - --no-format |\n+| `properties` | Properties for the master component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `19200` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMzY3Nw==", "bodyText": "Is there a use case where we want the same podAnnotations as the master pods? I'm not entirely sure about your use case what annotations you are putting in for the master/worker pods. But I assume the job master/job worker should have that too?", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543113677", "createdAt": "2020-12-15T07:40:58Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values\n+\n+Full documentation can be found in the comments of the `values.yaml` file, but a high level overview is provided here.\n+\n+__Common Values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `fullnameOverride` | To replace the generated name | `alluxio` |\n+| `image` | Docker image | `alluxio/alluxio` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `user` | Security Context for user | `1000` |\n+| `group` | Security Context for group | `1000` |\n+| `fsGroup` | Security Context for fsGroup | `1000` |\n+| `secrets` | Format: (<name>:<mount path under /secrets/>) | `{}` |\n+| `secrets.master` | Shared by master and jobMaster containers | `{}` |\n+| `secrets.worker` | Shared by worker and jobWorker containers | `{}` |\n+| `properties` | Site properties for all the components | `{}` |\n+| `jvmOptions` | Recommended JVM Heap options for running in Docker. These JVM options are common to all Alluxio services | `[]` |\n+| `mounts` | Mount Persistent Volumes to all components | `[]` |\n+| `nodeSelector` | Use labels to run Alluxio on a subset of the K8s nodes | `{}` |\n+\n+__Master values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `count` | Controls the number of StatefulSets. For multiMaster mode increase this to >1. | `1` |\n+| `replicas` | Controls #replicas in a StatefulSet and should not be modified in the usual case. | `1` |\n+| `env` | Extra environment variables for the master pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - master-only <br/> - --no-format |\n+| `properties` | Properties for the master component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `19200` |\n+| `ports.rpc` | RPC Port | `19998` |\n+| `ports.web` | Web Port | `19999` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the master container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the master Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |\n+\n+__jobMaster values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-master` |\n+| `properties` | Properties for the jobMaster component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `20003` |\n+| `ports.rpc` | RPC Port | `20001` |\n+| `ports.web` | Web Port | `20002` |\n+| `jvmOptions` | JVM options specific to the jobMaster container | `[]` |\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMzk4Mg==", "bodyText": "Same as job-master, should we have a podAnnotations here?", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543113982", "createdAt": "2020-12-15T07:41:28Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values\n+\n+Full documentation can be found in the comments of the `values.yaml` file, but a high level overview is provided here.\n+\n+__Common Values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `fullnameOverride` | To replace the generated name | `alluxio` |\n+| `image` | Docker image | `alluxio/alluxio` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `user` | Security Context for user | `1000` |\n+| `group` | Security Context for group | `1000` |\n+| `fsGroup` | Security Context for fsGroup | `1000` |\n+| `secrets` | Format: (<name>:<mount path under /secrets/>) | `{}` |\n+| `secrets.master` | Shared by master and jobMaster containers | `{}` |\n+| `secrets.worker` | Shared by worker and jobWorker containers | `{}` |\n+| `properties` | Site properties for all the components | `{}` |\n+| `jvmOptions` | Recommended JVM Heap options for running in Docker. These JVM options are common to all Alluxio services | `[]` |\n+| `mounts` | Mount Persistent Volumes to all components | `[]` |\n+| `nodeSelector` | Use labels to run Alluxio on a subset of the K8s nodes | `{}` |\n+\n+__Master values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `count` | Controls the number of StatefulSets. For multiMaster mode increase this to >1. | `1` |\n+| `replicas` | Controls #replicas in a StatefulSet and should not be modified in the usual case. | `1` |\n+| `env` | Extra environment variables for the master pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - master-only <br/> - --no-format |\n+| `properties` | Properties for the master component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `19200` |\n+| `ports.rpc` | RPC Port | `19998` |\n+| `ports.web` | Web Port | `19999` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the master container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the master Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |\n+\n+__jobMaster values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-master` |\n+| `properties` | Properties for the jobMaster component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `20003` |\n+| `ports.rpc` | RPC Port | `20001` |\n+| `ports.web` | Web Port | `20002` |\n+| `jvmOptions` | JVM options specific to the jobMaster container | `[]` |\n+\n+__Worker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `env` | Extra environment variables for the worker pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - worker-only <br/> - --no-format |\n+| `properties` | Properties for the worker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `2G` |\n+| `ports.rpc` | RPC Port | `29999` |\n+| `ports.web` | Web Port | `30000` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the worker container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the worker Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the worker | `{}` |\n+\n+__jobWorker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-worker` |\n+| `properties` | Properties for the jobWorker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.rpc` | RPC Port | `30001` |\n+| `ports.data` | Data Port | `30002` |\n+| `ports.web` | Web Port | `30003` |\n+| `jvmOptions` | JVM options specific to the jobWorker container | `[]` |\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNTk5Ng==", "bodyText": "Maybe \"When metastore is enabled, Alluxio uses RocksDB to store metadata off heap. This controls what kind of volume to use for the off heap metastore. persistentVolumeClaim or emptyDir\"?", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543115996", "createdAt": "2020-12-15T07:45:05Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values\n+\n+Full documentation can be found in the comments of the `values.yaml` file, but a high level overview is provided here.\n+\n+__Common Values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `fullnameOverride` | To replace the generated name | `alluxio` |\n+| `image` | Docker image | `alluxio/alluxio` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `user` | Security Context for user | `1000` |\n+| `group` | Security Context for group | `1000` |\n+| `fsGroup` | Security Context for fsGroup | `1000` |\n+| `secrets` | Format: (<name>:<mount path under /secrets/>) | `{}` |\n+| `secrets.master` | Shared by master and jobMaster containers | `{}` |\n+| `secrets.worker` | Shared by worker and jobWorker containers | `{}` |\n+| `properties` | Site properties for all the components | `{}` |\n+| `jvmOptions` | Recommended JVM Heap options for running in Docker. These JVM options are common to all Alluxio services | `[]` |\n+| `mounts` | Mount Persistent Volumes to all components | `[]` |\n+| `nodeSelector` | Use labels to run Alluxio on a subset of the K8s nodes | `{}` |\n+\n+__Master values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `count` | Controls the number of StatefulSets. For multiMaster mode increase this to >1. | `1` |\n+| `replicas` | Controls #replicas in a StatefulSet and should not be modified in the usual case. | `1` |\n+| `env` | Extra environment variables for the master pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - master-only <br/> - --no-format |\n+| `properties` | Properties for the master component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `19200` |\n+| `ports.rpc` | RPC Port | `19998` |\n+| `ports.web` | Web Port | `19999` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the master container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the master Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |\n+\n+__jobMaster values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-master` |\n+| `properties` | Properties for the jobMaster component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `20003` |\n+| `ports.rpc` | RPC Port | `20001` |\n+| `ports.web` | Web Port | `20002` |\n+| `jvmOptions` | JVM options specific to the jobMaster container | `[]` |\n+\n+__Worker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `env` | Extra environment variables for the worker pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - worker-only <br/> - --no-format |\n+| `properties` | Properties for the worker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `2G` |\n+| `ports.rpc` | RPC Port | `29999` |\n+| `ports.web` | Web Port | `30000` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the worker container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the worker Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the worker | `{}` |\n+\n+__jobWorker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-worker` |\n+| `properties` | Properties for the jobWorker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.rpc` | RPC Port | `30001` |\n+| `ports.data` | Data Port | `30002` |\n+| `ports.web` | Web Port | `30003` |\n+| `jvmOptions` | JVM options specific to the jobWorker container | `[]` |\n+\n+__journal values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `type` | Alluxio supports journal type of `UFS` and `EMBEDDED` | `UFS` |\n+| `ufsType` | `local` or `HDFS`. Ignored if type is `EMBEDDED` | `local` |\n+| `folder` | Master journal folder | `/journal` |\n+| `volumeType` | `volumeType` controls the type of journal volume. It can be `persistentVolumeClaim` or `emptyDir` | `persistentVolumeClaim` |\n+| `size` | journal volume size | `1Gi` |\n+| `storageClass` | Attributes to use when the journal is `persistentVolumeClaim` | `standard` |\n+| `accessModes` | Access mode for the journal volume | `- ReadWriteOnce` |\n+| `medium` | Attributes to use when the journal is emptyDir | `\"\"` |\n+| `format.runFormat` | Configuration for journal formatting job. Change to true to format journal | `false` |\n+\n+__metastore values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `volumeType` | You can enable `metastore` to use ROCKS DB instead of Heap. `persistentVolumeClaim` or `emptyDir` | `persistentVolumeClaim` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNjk1NA==", "bodyText": "Could you please give me an example what this podAnnotations can be for Prometheus?", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543116954", "createdAt": "2020-12-15T07:46:51Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/README.md", "diffHunk": "@@ -79,3 +79,207 @@ The [Alluxio](https://hub.docker.com/r/alluxio/alluxio) image stores the Journal\n \n A Persistent Volume Claim is created for each master Pod defined in `volumeClaimTemplates` in `master/statefulset.yaml`.\n The PVC should be satisfied by the PersistentVolume you create.\n+\n+---\n+\n+## Helm Chart Values\n+\n+Full documentation can be found in the comments of the `values.yaml` file, but a high level overview is provided here.\n+\n+__Common Values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `fullnameOverride` | To replace the generated name | `alluxio` |\n+| `image` | Docker image | `alluxio/alluxio` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `user` | Security Context for user | `1000` |\n+| `group` | Security Context for group | `1000` |\n+| `fsGroup` | Security Context for fsGroup | `1000` |\n+| `secrets` | Format: (<name>:<mount path under /secrets/>) | `{}` |\n+| `secrets.master` | Shared by master and jobMaster containers | `{}` |\n+| `secrets.worker` | Shared by worker and jobWorker containers | `{}` |\n+| `properties` | Site properties for all the components | `{}` |\n+| `jvmOptions` | Recommended JVM Heap options for running in Docker. These JVM options are common to all Alluxio services | `[]` |\n+| `mounts` | Mount Persistent Volumes to all components | `[]` |\n+| `nodeSelector` | Use labels to run Alluxio on a subset of the K8s nodes | `{}` |\n+\n+__Master values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `count` | Controls the number of StatefulSets. For multiMaster mode increase this to >1. | `1` |\n+| `replicas` | Controls #replicas in a StatefulSet and should not be modified in the usual case. | `1` |\n+| `env` | Extra environment variables for the master pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - master-only <br/> - --no-format |\n+| `properties` | Properties for the master component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `19200` |\n+| `ports.rpc` | RPC Port | `19998` |\n+| `ports.web` | Web Port | `19999` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the master container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the master Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |\n+\n+__jobMaster values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-master` |\n+| `properties` | Properties for the jobMaster component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `8G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.embedded` | EMBEDDED Port | `20003` |\n+| `ports.rpc` | RPC Port | `20001` |\n+| `ports.web` | Web Port | `20002` |\n+| `jvmOptions` | JVM options specific to the jobMaster container | `[]` |\n+\n+__Worker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `env` | Extra environment variables for the worker pod | `{}` |\n+| `args` | Arguments to Docker entrypoint | - worker-only <br/> - --no-format |\n+| `properties` | Properties for the worker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `2G` |\n+| `ports.rpc` | RPC Port | `29999` |\n+| `ports.web` | Web Port | `30000` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `false` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `false` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirst` |\n+| `jvmOptions` | JVM options specific to the worker container | `[]` |\n+| `nodeSelector` | the nodeSelector configs for the worker Pods | `{}` |\n+| `podAnnotations` | Pod Annotations for the worker | `{}` |\n+\n+__jobWorker values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `args` | Arguments to Docker entrypoint | `- job-worker` |\n+| `properties` | Properties for the jobWorker component | `{}` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `1` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `ports.rpc` | RPC Port | `30001` |\n+| `ports.data` | Data Port | `30002` |\n+| `ports.web` | Web Port | `30003` |\n+| `jvmOptions` | JVM options specific to the jobWorker container | `[]` |\n+\n+__journal values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `type` | Alluxio supports journal type of `UFS` and `EMBEDDED` | `UFS` |\n+| `ufsType` | `local` or `HDFS`. Ignored if type is `EMBEDDED` | `local` |\n+| `folder` | Master journal folder | `/journal` |\n+| `volumeType` | `volumeType` controls the type of journal volume. It can be `persistentVolumeClaim` or `emptyDir` | `persistentVolumeClaim` |\n+| `size` | journal volume size | `1Gi` |\n+| `storageClass` | Attributes to use when the journal is `persistentVolumeClaim` | `standard` |\n+| `accessModes` | Access mode for the journal volume | `- ReadWriteOnce` |\n+| `medium` | Attributes to use when the journal is emptyDir | `\"\"` |\n+| `format.runFormat` | Configuration for journal formatting job. Change to true to format journal | `false` |\n+\n+__metastore values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `volumeType` | You can enable `metastore` to use ROCKS DB instead of Heap. `persistentVolumeClaim` or `emptyDir` | `persistentVolumeClaim` |\n+| `size` | Volume Size | `1Gi` |\n+| `mountPath` | Mount Path | `/metastore` |\n+| `storageClass` | Attributes to use when the `metastore` is `persistentVolumeClaim` | `standard` |\n+| `accessModes` | Access Mode for Volume | `- ReadWriteOnce` |\n+| `medium` | Attributes to use when the `metastore` is `emptyDir` | `\"\"` |\n+\n+__tieredstore values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `levels` | Tiered Storage | `[]` |\n+| `levels.level` | Level # starts from 0 | `0` |\n+| `levels.alias` | Alias name of tiered storage | `MEM` |\n+| `levels.mediumtype` | `MEM`, `HDD`, `SSD` | `MEM` |\n+| `levels.type` | `hostPath`, `emptyDir` or `persistentVolumeClaim` | `emptyDir` |\n+| `levels.path` | Mount Path for Volume | `/dev/shm` |\n+| `levels.quota` | Volume Size | `1G` |\n+| `levels.high` | Upper usage bound | `0.95` |\n+| `levels.low` | Lower usage bound | `0.7` |\n+\n+__shortCircuit values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `enabled` | Whether use short circuit or not | `true` |\n+| `policy` | The policy for short circuit can be `local` or `uuid` | `uuid` |\n+| `volumeType` | `volumeType` controls the type of `shortCircuit` volume. It can be `persistentVolumeClaim` or `hostPath` | `persistentVolumeClaim` |\n+| `size` | Volume Size | `1Mi` |\n+| `pvcName` | Attributes to use if the domain socket volume is PVC | `alluxio-worker-domain-socket` |\n+| `accessModes` | Access Mode | `- ReadWriteOnce` |\n+| `storageClass` | Storage Class | `standard` |\n+| `hostPath` | Attributes to use if the domain socket volume is `hostPath`. The `hostPath` directory to use | `/tmp/alluxio-domain` |\n+\n+__fuse values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `env` | Extra environment variables for the fuse pod | `{}` |\n+| `image` | Docker image | `alluxio/alluxio-fuse` |\n+| `imageTag` | Docker image tag | `2.5.0-SNAPSHOT` |\n+| `imagePullPolicy` | Docker image pull policy | `IfNotPresent` |\n+| `enabled` | Set to true to deploy FUSE | `false` |\n+| `clientEnabled` | Set to true to deploy FUSE | `false` |\n+| `properties` | Properties for the fuse component | `{}` |\n+| `jvmOptions` | JVM options specific to the fuse container | `[]` |\n+| `hostNetwork` | Controls whether the pod may use the node network namespace | `true` |\n+| `hostPID` | hostPID requires escalated privileges for using Java profile | `true` |\n+| `dnsPolicy` | `dnsPolicy` will be `ClusterFirstWithHostNet` if `hostNetwork: true` and `ClusterFirst` if `hostNetwork: false` | `ClusterFirstWithHostNet` |\n+| `user` | Security Context for user | `0` |\n+| `group` | Security Context for group | `0` |\n+| `fsGroup` | Security Context for fsGroup | `0` |\n+| `args` | Arguments to Docker entrypoint | - fuse <br/> - --fuse-opts=allow_other |\n+| `mountPath` | Mount path in the host | `/mnt/alluxio-fuse` |\n+| `resources.limits.cpu` | CPU Limit | `4` |\n+| `resources.limits.memory` | Memory Limit | `4G` |\n+| `resources.requests.cpu` | CPU Request | `0.5` |\n+| `resources.requests.memory` | Memory Request | `1G` |\n+| `podAnnotations` | Pod Annotations for the masters | `{}` |\n+\n+__Metrics values:__\n+\n+| Parameter | Description | Default |\n+| --- | --- | --- |\n+| `enabled` | Enabling Alluxio Metrics | `false` |\n+| `ConsoleSink.enabled` | Enabling ConsoleSink | `false` |\n+| `ConsoleSink.period` | Poll period | `10` |\n+| `ConsoleSink.unit` | Unit of poll period | `seconds` |\n+| `CsvSink.enabled` | Enabling CsvSink | `false` |\n+| `CsvSink.period` | Poll period | `1` |\n+| `CsvSink.unit` | Unit of poll period | `seconds` |\n+| `CsvSink.directory` | Polling directory for CsvSink, ensure this directory exists! | `/tmp/alluxio-metrics` |\n+| `JmxSink.enabled` | Enabling JmxSink | `false` |\n+| `JmxSink.domain` | Jmx domain | `org.alluxio` |\n+| `GraphiteSink.enabled` | Enabling GraphiteSink | `false` |\n+| `GraphiteSink.host` | Hostname of Graphite server | `NONE` |\n+| `GraphiteSink.port` | Port of Graphite server | `NONE` |\n+| `GraphiteSink.period` | Poll period | `10` |\n+| `GraphiteSink.unit` | Unit of poll period | `seconds` |\n+| `GraphiteSink.prefix` | Prefix to prepend to metric name | `\"\"` |\n+| `Slf4jSink.enabled` | Enabling Slf4jSink | `false` |\n+| `Slf4jSink.period` | Poll period | `10` |\n+| `Slf4jSink.unit` | Unit of poll period | `seconds` |\n+| `Slf4jSink.filterClass` | Contains all metrics | `null` |\n+| `Slf4jSink.filterRegex` | Contains all metrics | `null` |\n+| `PrometheusMetricsServlet.enabled` | Enabling PrometheusMetricsServlet | `false` |\n+| `podAnnotations` | Pod Annotations for the Prometheus | `{}` |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a"}, "originalPosition": 207}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNzQ3OQ==", "bodyText": "nit: maybe this line can be removed", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543117479", "createdAt": "2020-12-15T07:47:51Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/config/alluxio-metrics.yaml", "diffHunk": "@@ -0,0 +1,69 @@\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+{{- $name := include \"alluxio.name\" . }}\n+{{- $fullName := include \"alluxio.fullname\" . }}\n+{{- $chart := include \"alluxio.chart\" . }}\n+\n+{{ if .Values.metrics.enabled -}}\n+apiVersion: v1\n+kind: ConfigMap\n+metadata:\n+  name: {{ $fullName }}-metrics\n+  labels:\n+    name: {{ $fullName }}-metrics\n+    app: {{ $name }}\n+    chart: {{ $chart }}\n+    release: {{ .Release.Name }}\n+    heritage: {{ .Release.Service }}\n+data:\n+  metrics.properties: |-\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExOTkyNQ==", "bodyText": "nit: If .Values.metrics.enabled=true but .Values.metrics.podAnnotations is removed, this will throw an error.\nI guess you need .Values.metrics.enabled=true and .Values.metrics.PrometheusMetricsServlet.enabled=true before creating this?", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543119925", "createdAt": "2020-12-15T07:52:18Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/master/statefulset.yaml", "diffHunk": "@@ -49,6 +49,15 @@ spec:\n         release: {{ .Release.Name }}\n         heritage: {{ .Release.Service }}\n         role: alluxio-master\n+    {{- if or .Values.master.podAnnotations .Values.metrics.enabled }}\n+      annotations:\n+      {{- with .Values.master.podAnnotations }}\n+        {{- toYaml . | nindent 8 }}\n+      {{- end }}\n+      {{- with .Values.metrics.podAnnotations }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEyMTc4MA==", "bodyText": "I think you can mention something like Add a table of keys and default values for the Helm templates in README", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543121780", "createdAt": "2020-12-15T07:55:29Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/CHANGELOG.md", "diffHunk": "@@ -138,3 +138,7 @@\n 0.6.11\n \n - Pass alluxio.user.hostname via ALLUXIO_FUSE_JAVA_OPTS for FUSE\n+\n+0.6.12\n+\n+- Add Metrics configurations including Prometheus", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51039b81eca75bbbf50d33589f43818bf6553a45", "author": {"user": {"login": "nirav-chotai", "name": "Nirav Chotai"}}, "url": "https://github.com/Alluxio/alluxio/commit/51039b81eca75bbbf50d33589f43818bf6553a45", "committedDate": "2020-12-15T08:35:41Z", "message": "Fixed README and added item in the CHANGELOG"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "700ae24386b20e11098ea309751df7347426730d", "author": {"user": {"login": "nirav-chotai", "name": "Nirav Chotai"}}, "url": "https://github.com/Alluxio/alluxio/commit/700ae24386b20e11098ea309751df7347426730d", "committedDate": "2020-12-15T08:54:05Z", "message": "Added annotation example"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfb0d9e8c3b6a9a8f602e99fee67035853f9a7fe", "author": {"user": {"login": "nirav-chotai", "name": "Nirav Chotai"}}, "url": "https://github.com/Alluxio/alluxio/commit/bfb0d9e8c3b6a9a8f602e99fee67035853f9a7fe", "committedDate": "2020-12-15T09:16:57Z", "message": "Updated README"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMjY5NTMy", "url": "https://github.com/Alluxio/alluxio/pull/12636#pullrequestreview-552269532", "createdAt": "2020-12-15T09:43:11Z", "commit": {"oid": "bfb0d9e8c3b6a9a8f602e99fee67035853f9a7fe"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDIwMzI4", "url": "https://github.com/Alluxio/alluxio/pull/12636#pullrequestreview-552420328", "createdAt": "2020-12-15T12:55:38Z", "commit": {"oid": "bfb0d9e8c3b6a9a8f602e99fee67035853f9a7fe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjo1NTozOVrOIGJgdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjo1NTozOVrOIGJgdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMxODEzNA==", "bodyText": "Does it make sense to have metrics.podAnnotations when Prometheus is not enabled? If yes then I'm good with this part.", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r543318134", "createdAt": "2020-12-15T12:55:39Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/master/statefulset.yaml", "diffHunk": "@@ -49,6 +49,15 @@ spec:\n         release: {{ .Release.Name }}\n         heritage: {{ .Release.Service }}\n         role: alluxio-master\n+    {{- if or .Values.master.podAnnotations .Values.metrics.enabled }}\n+      annotations:\n+      {{- with .Values.master.podAnnotations }}\n+        {{- toYaml . | nindent 8 }}\n+      {{- end }}\n+      {{- with .Values.metrics.podAnnotations }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExOTkyNQ=="}, "originalCommit": {"oid": "3e95fe7d3e4d50868ffa64948755f9983f81978a"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNDY1MTM4", "url": "https://github.com/Alluxio/alluxio/pull/12636#pullrequestreview-553465138", "createdAt": "2020-12-16T08:44:53Z", "commit": {"oid": "bfb0d9e8c3b6a9a8f602e99fee67035853f9a7fe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODo0NDo1NFrOIG6DDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODo0NjoyNlrOIG6G2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExMzQyMA==", "bodyText": "I tested manually and this path seems to be wrong. When you mount the configmap alluxio-metrics to this path, it will be a directory:\n[ec2-user@KubernetesSingleMasterLocal-masters-1 ~]$ kubectl exec -it alluxio-master-0 bash\nDefaulting container name to alluxio-master.\nUse 'kubectl describe pod/alluxio-master-0 -n default' to see all of the containers in this pod.\nbash-4.4$ cd /config\nbash-4.4$ ls -al -R\n.:\ntotal 0\ndrwxr-xr-x    3 root     root            32 Dec 16 08:38 .\ndrwxr-xr-x    1 root     root            65 Dec 16 08:38 ..\ndrwxrwsrwx    3 root     alluxio         85 Dec 16 08:38 metrics.properties\n./metrics.properties:\ntotal 0\ndrwxrwsrwx    3 root     alluxio         85 Dec 16 08:38 .\ndrwxr-xr-x    3 root     root            32 Dec 16 08:38 ..\ndrwxr-sr-x    2 root     alluxio         32 Dec 16 08:38 ..2020_12_16_08_38_53.343245412\nlrwxrwxrwx    1 root     root            31 Dec 16 08:38 ..data -> ..2020_12_16_08_38_53.343245412\nlrwxrwxrwx    1 root     root            25 Dec 16 08:38 metrics.properties -> ..data/metrics.properties\n./metrics.properties/..2020_12_16_08_38_53.343245412:\ntotal 4\ndrwxr-sr-x    2 root     alluxio         32 Dec 16 08:38 .\ndrwxrwsrwx    3 root     alluxio         85 Dec 16 08:38 ..\n-rw-r--r--    1 root     alluxio        507 Dec 16 08:38 metrics.properties\n\nTherefore, in order for this to work, this line should be {{- $metricsConfFile := \"-Dalluxio.metrics.conf.file=/config/metrics.properties/metrics.properties\" }}", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r544113420", "createdAt": "2020-12-16T08:44:54Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/config/alluxio-conf.yaml", "diffHunk": "@@ -43,6 +43,10 @@\n {{- if .Values.jvmOptions }}\n   {{- $alluxioJavaOpts = concat $alluxioJavaOpts .Values.jvmOptions }}\n {{- end }}\n+{{- if .Values.metrics.enabled }}\n+  {{- $metricsConfFile := \"-Dalluxio.metrics.conf.file=/config/metrics.properties\" }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfb0d9e8c3b6a9a8f602e99fee67035853f9a7fe"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExNDM5Mw==", "bodyText": "Could you change the configmap alluxio-metrics to be mounted to /config/metrics and make -Dalluxio.metrics.conf.file=/config/metrics/metrics.properties? Let's distinguish the directory name with the config file name.", "url": "https://github.com/Alluxio/alluxio/pull/12636#discussion_r544114393", "createdAt": "2020-12-16T08:46:26Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/config/alluxio-conf.yaml", "diffHunk": "@@ -43,6 +43,10 @@\n {{- if .Values.jvmOptions }}\n   {{- $alluxioJavaOpts = concat $alluxioJavaOpts .Values.jvmOptions }}\n {{- end }}\n+{{- if .Values.metrics.enabled }}\n+  {{- $metricsConfFile := \"-Dalluxio.metrics.conf.file=/config/metrics.properties\" }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDExMzQyMA=="}, "originalCommit": {"oid": "bfb0d9e8c3b6a9a8f602e99fee67035853f9a7fe"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4df1f0dc1b7b20af32064a93a2760c1a0bac11c2", "author": {"user": {"login": "nirav-chotai", "name": "Nirav Chotai"}}, "url": "https://github.com/Alluxio/alluxio/commit/4df1f0dc1b7b20af32064a93a2760c1a0bac11c2", "committedDate": "2020-12-16T08:53:12Z", "message": "Fixed mount path for metrics config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNTAzMjIy", "url": "https://github.com/Alluxio/alluxio/pull/12636#pullrequestreview-553503222", "createdAt": "2020-12-16T09:32:12Z", "commit": {"oid": "4df1f0dc1b7b20af32064a93a2760c1a0bac11c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3342, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}