{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNjYyODU0", "number": 11073, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjowNjozNlrODkcO7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjowNjozNlrODkcO7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NTM3OTAwOnYy", "diffSide": "RIGHT", "path": "integration/fuse/src/main/java/alluxio/fuse/AlluxioFuseUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjowNjozNlrOFwxDow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMDowNDo1MVrOFwz3KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3OTcxNQ==", "bodyText": "indentation", "url": "https://github.com/Alluxio/alluxio/pull/11073#discussion_r386679715", "createdAt": "2020-03-02T22:06:36Z", "author": {"login": "LuQQiu"}, "path": "integration/fuse/src/main/java/alluxio/fuse/AlluxioFuseUtils.java", "diffHunk": "@@ -209,4 +209,37 @@ private static int getAlluxioErrorCode(AlluxioException e) {\n       return -ErrorCodes.EBADMSG();\n     }\n   }\n+\n+  /**\n+   * An interface representing a callable for FUSE APIs.\n+   */\n+  public interface FuseCallable {\n+    /**\n+     * The RPC implementation.\n+     *\n+     * @return the return value from the RPC\n+     */\n+    int call();\n+  }\n+\n+  /**\n+   * Calls the given {@link FuseCallable} and returns its result.\n+   *\n+   * @param logger the logger to use for this call\n+   * @param callable the callable to call\n+   * @param methodName the name of the method, used for metrics\n+   * @param description the format string of the description, used for logging\n+   * @param args the arguments for the description\n+   * @return the result\n+   */\n+  public static int call(Logger logger, FuseCallable callable,\n+                         String methodName, String description, Object... args) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f9cdd776ab2e8598d6c787405ed218ca5183efa"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyNTY3Mw==", "bodyText": "fixed", "url": "https://github.com/Alluxio/alluxio/pull/11073#discussion_r386725673", "createdAt": "2020-03-03T00:04:51Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/main/java/alluxio/fuse/AlluxioFuseUtils.java", "diffHunk": "@@ -209,4 +209,37 @@ private static int getAlluxioErrorCode(AlluxioException e) {\n       return -ErrorCodes.EBADMSG();\n     }\n   }\n+\n+  /**\n+   * An interface representing a callable for FUSE APIs.\n+   */\n+  public interface FuseCallable {\n+    /**\n+     * The RPC implementation.\n+     *\n+     * @return the return value from the RPC\n+     */\n+    int call();\n+  }\n+\n+  /**\n+   * Calls the given {@link FuseCallable} and returns its result.\n+   *\n+   * @param logger the logger to use for this call\n+   * @param callable the callable to call\n+   * @param methodName the name of the method, used for metrics\n+   * @param description the format string of the description, used for logging\n+   * @param args the arguments for the description\n+   * @return the result\n+   */\n+  public static int call(Logger logger, FuseCallable callable,\n+                         String methodName, String description, Object... args) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY3OTcxNQ=="}, "originalCommit": {"oid": "5f9cdd776ab2e8598d6c787405ed218ca5183efa"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1880, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}