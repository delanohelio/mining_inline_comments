{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMTE1NjQ3", "number": 10718, "title": "Change the default coalescing behavior", "bodyText": "", "createdAt": "2020-01-09T19:17:07Z", "url": "https://github.com/Alluxio/alluxio/pull/10718", "merged": true, "mergeCommit": {"oid": "54ad9e52e26caa212e0df0dd4aa07477e4f7c8cf"}, "closed": true, "closedAt": "2020-02-06T19:19:53Z", "author": {"login": "yuzhu"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4dOU5gH2gAyMzYxMTE1NjQ3OjgyMGVkNDQ5YzBiODU1MTdlMzk3NGI2NjYzMmE1ZWQyNDhiMGQwMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBvkD8AFqTM1NDY5NzUyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "820ed449c0b85517e3974b66632a5ed248b0d023", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/820ed449c0b85517e3974b66632a5ed248b0d023", "committedDate": "2020-01-08T22:37:35Z", "message": "add a test for default transform jobs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff86ca08d4459d8a14d1df89380a3aff3f8c60e8", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/ff86ca08d4459d8a14d1df89380a3aff3f8c60e8", "committedDate": "2020-01-09T19:08:47Z", "message": "Add logic to dynamically compute the number of files we should coalesce"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56611af19bd869a36cb6791fcf3c4cd96ebc8ef4", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/56611af19bd869a36cb6791fcf3c4cd96ebc8ef4", "committedDate": "2020-01-09T19:15:32Z", "message": "checkstyle fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "136794df1f17e7da23d323adf666a84fc0bc6688", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/136794df1f17e7da23d323adf666a84fc0bc6688", "committedDate": "2020-01-09T19:37:11Z", "message": "fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMTcyMTEw", "url": "https://github.com/Alluxio/alluxio/pull/10718#pullrequestreview-341172110", "createdAt": "2020-01-10T13:48:56Z", "commit": {"oid": "136794df1f17e7da23d323adf666a84fc0bc6688"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMzo0ODo1NlrOFcUj9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMzo0ODo1NlrOFcUj9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI0MTMzNA==", "bodyText": "I feel like the file size should also be a config parameter.", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r365241334", "createdAt": "2020-01-10T13:48:56Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -78,13 +96,19 @@ private boolean shouldIgnore(URIStatus status) {\n     AlluxioURI outputDir = new AlluxioURI(config.getOutput());\n \n     List<URIStatus> files = Lists.newArrayList();\n+    long sum = 0;\n     for (URIStatus status : context.getFileSystem().listStatus(inputDir)) {\n       if (!shouldIgnore(status)) {\n         files.add(status);\n+        sum += status.getLength();\n       }\n     }\n     Map<WorkerInfo, ArrayList<CompactTask>> assignments = Maps.newHashMap();\n-    int groupSize = Math.max(1, (files.size() + 1) / config.getNumFiles());\n+    int numOfFiles = config.getNumFiles();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "136794df1f17e7da23d323adf666a84fc0bc6688"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMzU2ODY3", "url": "https://github.com/Alluxio/alluxio/pull/10718#pullrequestreview-341356867", "createdAt": "2020-01-10T18:54:18Z", "commit": {"oid": "136794df1f17e7da23d323adf666a84fc0bc6688"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODo1NDoxOFrOFcdDOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODo1NDoxOFrOFcdDOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4MDQxMQ==", "bodyText": "What I meant was, when we do something like averageSize < FileUtils.ONE_GB, we should use the file size as a config parameter.", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r365380411", "createdAt": "2020-01-10T18:54:18Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -78,13 +96,19 @@ private boolean shouldIgnore(URIStatus status) {\n     AlluxioURI outputDir = new AlluxioURI(config.getOutput());\n \n     List<URIStatus> files = Lists.newArrayList();\n+    long sum = 0;\n     for (URIStatus status : context.getFileSystem().listStatus(inputDir)) {\n       if (!shouldIgnore(status)) {\n         files.add(status);\n+        sum += status.getLength();\n       }\n     }\n     Map<WorkerInfo, ArrayList<CompactTask>> assignments = Maps.newHashMap();\n-    int groupSize = Math.max(1, (files.size() + 1) / config.getNumFiles());\n+    int numOfFiles = config.getNumFiles();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI0MTMzNA=="}, "originalCommit": {"oid": "136794df1f17e7da23d323adf666a84fc0bc6688"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f388a5363ff8484047468bd698abdd380721662c", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/f388a5363ff8484047468bd698abdd380721662c", "committedDate": "2020-01-14T22:54:20Z", "message": "refactor file size to be an option"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MDE2Njg5", "url": "https://github.com/Alluxio/alluxio/pull/10718#pullrequestreview-344016689", "createdAt": "2020-01-16T15:51:50Z", "commit": {"oid": "f388a5363ff8484047468bd698abdd380721662c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNTo1MTo1MFrOFeeOdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNjoyNTowMFrOFeffAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ5NjgyMA==", "bodyText": "Rename this to hive.file.size, since this is relevant to the hive write type.", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r367496820", "createdAt": "2020-01-16T15:51:50Z", "author": {"login": "gpang"}, "path": "table/server/common/src/main/java/alluxio/table/common/transform/action/WriteAction.java", "diffHunk": "@@ -27,6 +28,8 @@\n public class WriteAction implements TransformAction {\n   private static final String NAME = \"write\";\n   private static final String NUM_FILES_OPTION = \"hive.num.files\";\n+  private static final String FILE_SIZE = \"file.size\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f388a5363ff8484047468bd698abdd380721662c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ5OTc5MQ==", "bodyText": "In the future, we should convert this to a map of parameters.", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r367499791", "createdAt": "2020-01-16T15:56:15Z", "author": {"login": "gpang"}, "path": "table/server/common/src/main/java/alluxio/table/common/transform/action/WriteAction.java", "diffHunk": "@@ -73,6 +84,6 @@ public JobConfig generateJobConfig(Layout base, Layout transformed) {\n         TransformActionUtils.generatePartitionInfo(base);\n     return new CompactConfig(basePartitionInfo, base.getLocation().toString(),\n         transformed.getLocation().toString(),\n-        mLayoutType, mNumFiles);\n+        mLayoutType, mNumFiles, mFileSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f388a5363ff8484047468bd698abdd380721662c"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUxMjYxMg==", "bodyText": "Maybe rename to \"EMPTY_DEFINITION\"?", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r367512612", "createdAt": "2020-01-16T16:17:05Z", "author": {"login": "gpang"}, "path": "table/server/master/src/test/java/alluxio/master/table/transform/TransformManagerTest.java", "diffHunk": "@@ -81,6 +81,7 @@\n   private static final String TABLE1 = TestDatabase.getTableName(0);\n   private static final String TABLE2 = TestDatabase.getTableName(1);\n   private static final String TABLE3 = TestDatabase.getTableName(2);\n+  private static final String DEFINITION_DEFAULT = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f388a5363ff8484047468bd698abdd380721662c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUxMzM2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void DynamicNumFiles() {\n          \n          \n            \n              public void dynamicNumFiles() {", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r367513369", "createdAt": "2020-01-16T16:18:21Z", "author": {"login": "gpang"}, "path": "table/server/common/src/test/java/alluxio/table/common/transform/action/WriteActionTest.java", "diffHunk": "@@ -51,10 +51,23 @@ public void negativeNumFiles() {\n   }\n \n   @Test\n-  public void zeroNumFiles() {\n-    mException.expect(IllegalArgumentException.class);\n-    mException.expectMessage(ExceptionMessage.TRANSFORM_WRITE_ACTION_INVALID_NUM_FILES.toString());\n-    TransformAction.Parser.parse(\"write(hive).option(hive.num.files, 0)\");\n+  public void DynamicNumFiles() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f388a5363ff8484047468bd698abdd380721662c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUxNTkyMA==", "bodyText": "rename to totalFileSize?", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r367515920", "createdAt": "2020-01-16T16:22:30Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -78,13 +95,19 @@ private boolean shouldIgnore(URIStatus status) {\n     AlluxioURI outputDir = new AlluxioURI(config.getOutput());\n \n     List<URIStatus> files = Lists.newArrayList();\n+    long sum = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f388a5363ff8484047468bd698abdd380721662c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUxNzA3OA==", "bodyText": "How will this constant group size work when the input file sizes are different? Shouldn't the file size configuration be enforced by considering each input file size?", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r367517078", "createdAt": "2020-01-16T16:24:25Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -78,13 +95,19 @@ private boolean shouldIgnore(URIStatus status) {\n     AlluxioURI outputDir = new AlluxioURI(config.getOutput());\n \n     List<URIStatus> files = Lists.newArrayList();\n+    long sum = 0;\n     for (URIStatus status : context.getFileSystem().listStatus(inputDir)) {\n       if (!shouldIgnore(status)) {\n         files.add(status);\n+        sum += status.getLength();\n       }\n     }\n     Map<WorkerInfo, ArrayList<CompactTask>> assignments = Maps.newHashMap();\n-    int groupSize = Math.max(1, (files.size() + 1) / config.getNumFiles());\n+    int numOfFiles = config.getNumFiles();\n+    if (numOfFiles == CompactConfig.DYNAMIC_NUM_OF_FILES) {\n+      numOfFiles = calcNumOfFiles(files.size(), sum / files.size(), config.getFileSize());\n+    }\n+    int groupSize = Math.max(1, (files.size() + 1) / numOfFiles);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f388a5363ff8484047468bd698abdd380721662c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUxNzQ0Mg==", "bodyText": "rename to numFiles", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r367517442", "createdAt": "2020-01-16T16:25:00Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -78,13 +95,19 @@ private boolean shouldIgnore(URIStatus status) {\n     AlluxioURI outputDir = new AlluxioURI(config.getOutput());\n \n     List<URIStatus> files = Lists.newArrayList();\n+    long sum = 0;\n     for (URIStatus status : context.getFileSystem().listStatus(inputDir)) {\n       if (!shouldIgnore(status)) {\n         files.add(status);\n+        sum += status.getLength();\n       }\n     }\n     Map<WorkerInfo, ArrayList<CompactTask>> assignments = Maps.newHashMap();\n-    int groupSize = Math.max(1, (files.size() + 1) / config.getNumFiles());\n+    int numOfFiles = config.getNumFiles();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f388a5363ff8484047468bd698abdd380721662c"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3de293b7cd343755786e6a606f983d8c708a2cc", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/c3de293b7cd343755786e6a606f983d8c708a2cc", "committedDate": "2020-02-03T23:05:38Z", "message": "address comments, and change the way we group files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a705f516eef76d7773bc8b8407db5dbd7ceb359", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/5a705f516eef76d7773bc8b8407db5dbd7ceb359", "committedDate": "2020-02-03T23:23:57Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d668db44ada4781d725accb70e7fb7785e21b61", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/7d668db44ada4781d725accb70e7fb7785e21b61", "committedDate": "2020-02-03T23:45:57Z", "message": "Merge branch 'master' into coalesce"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d97235895308c37613f5e30d19befdd87d363cec", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/d97235895308c37613f5e30d19befdd87d363cec", "committedDate": "2020-02-04T21:37:14Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ed270f52294441dc88985dc7efa63223e37edc7", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/7ed270f52294441dc88985dc7efa63223e37edc7", "committedDate": "2020-02-04T21:50:09Z", "message": "better heuristics for including a file in a particular group."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9096f1726980e9df0676deed30c403941e53ffa0", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/9096f1726980e9df0676deed30c403941e53ffa0", "committedDate": "2020-02-05T00:05:25Z", "message": "change the parameters and the algorithm to fill bucket to include a minimum bucket size."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNDE0Mzkx", "url": "https://github.com/Alluxio/alluxio/pull/10718#pullrequestreview-353414391", "createdAt": "2020-02-05T01:22:08Z", "commit": {"oid": "9096f1726980e9df0676deed30c403941e53ffa0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMToyMjowOFrOFlpENA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMToyOTozOVrOFlpLlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAxNDQ1Mg==", "bodyText": "should these be renamed to reflect \"num files max\", and \"file size min\"?", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r375014452", "createdAt": "2020-02-05T01:22:08Z", "author": {"login": "gpang"}, "path": "table/server/common/src/main/java/alluxio/table/common/transform/action/WriteAction.java", "diffHunk": "@@ -27,6 +28,8 @@\n public class WriteAction implements TransformAction {\n   private static final String NAME = \"write\";\n   private static final String NUM_FILES_OPTION = \"hive.num.files\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9096f1726980e9df0676deed30c403941e53ffa0"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAxNDQ4MQ==", "bodyText": "This should be 2g?", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r375014481", "createdAt": "2020-02-05T01:22:18Z", "author": {"login": "gpang"}, "path": "table/server/common/src/main/java/alluxio/table/common/transform/action/WriteAction.java", "diffHunk": "@@ -27,6 +28,8 @@\n public class WriteAction implements TransformAction {\n   private static final String NAME = \"write\";\n   private static final String NUM_FILES_OPTION = \"hive.num.files\";\n+  private static final String FILE_SIZE = \"hive.file.size\";\n+  private static final long DEFAULT_FILE_SIZE = FileUtils.ONE_GB;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9096f1726980e9df0676deed30c403941e53ffa0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAxNDY5Ng==", "bodyText": "should the default be setting max files to 100 and min file size to 2g?", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r375014696", "createdAt": "2020-02-05T01:23:07Z", "author": {"login": "gpang"}, "path": "table/server/master/src/main/java/alluxio/master/table/DefaultTableMaster.java", "diffHunk": "@@ -54,7 +54,7 @@\n     implements TableMaster, DelegatingJournaled {\n   private static final Logger LOG = LoggerFactory.getLogger(DefaultTableMaster.class);\n   private static final Set<Class<? extends Server>> DEPS = ImmutableSet.of(FileSystemMaster.class);\n-  private static final String DEFAULT_TRANSFORMATION = \"write(hive).option(hive.num.files, 100);\";\n+  public static final String DEFAULT_TRANSFORMATION = \"write(hive).option(hive.num.files, 0)\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9096f1726980e9df0676deed30c403941e53ffa0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAxNTA1OA==", "bodyText": "I think static final variable names have to be all caps?", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r375015058", "createdAt": "2020-02-05T01:24:27Z", "author": {"login": "gpang"}, "path": "job/server/src/test/java/alluxio/job/plan/transform/CompactDefinitionSelectExecutorsTest.java", "diffHunk": "@@ -22,17 +22,23 @@\n import alluxio.job.plan.SelectExecutorsTest;\n import alluxio.wire.WorkerInfo;\n \n+import org.apache.commons.io.FileUtils;\n import org.junit.Test;\n import org.mockito.Mockito;\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.PrimitiveIterator;\n+import java.util.Random;\n import java.util.Set;\n+import java.util.stream.LongStream;\n \n public class CompactDefinitionSelectExecutorsTest extends SelectExecutorsTest {\n \n   private static final String INPUT_DIR = \"/input\";\n   private static final String OUTPUT_DIR = \"/output\";\n+  private static final PrimitiveIterator.OfLong sLongStream = (new Random()).longs(FileUtils.ONE_GB * 2, FileUtils.ONE_GB * 10).iterator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9096f1726980e9df0676deed30c403941e53ffa0"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAxNTY0NA==", "bodyText": "NIT:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (totalFileSize / config.getMinFileSize() >= maxNumFiles) {\n          \n          \n            \n                if (totalFileSize / groupMinSize > maxNumFiles) {", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r375015644", "createdAt": "2020-02-05T01:26:44Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -80,24 +80,43 @@ private boolean shouldIgnore(URIStatus status) {\n     AlluxioURI outputDir = new AlluxioURI(config.getOutput());\n \n     List<URIStatus> files = Lists.newArrayList();\n+    // use double to prevent overflow\n+    double totalFileSize = 0;\n     for (URIStatus status : context.getFileSystem().listStatus(inputDir)) {\n       if (!shouldIgnore(status)) {\n         files.add(status);\n+        totalFileSize += status.getLength();\n       }\n     }\n     Map<WorkerInfo, ArrayList<CompactTask>> assignments = Maps.newHashMap();\n-    int groupSize = Math.max(1, (files.size() + 1) / config.getNumFiles());\n+    int maxNumFiles = config.getMaxNumFiles();\n+    long groupMinSize = config.getMinFileSize();\n+    if (totalFileSize / config.getMinFileSize() >= maxNumFiles) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9096f1726980e9df0676deed30c403941e53ffa0"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAxNjM0Mw==", "bodyText": "can we pre-compute groupMinSize / 2 earlier?", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r375016343", "createdAt": "2020-02-05T01:29:39Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -80,24 +80,43 @@ private boolean shouldIgnore(URIStatus status) {\n     AlluxioURI outputDir = new AlluxioURI(config.getOutput());\n \n     List<URIStatus> files = Lists.newArrayList();\n+    // use double to prevent overflow\n+    double totalFileSize = 0;\n     for (URIStatus status : context.getFileSystem().listStatus(inputDir)) {\n       if (!shouldIgnore(status)) {\n         files.add(status);\n+        totalFileSize += status.getLength();\n       }\n     }\n     Map<WorkerInfo, ArrayList<CompactTask>> assignments = Maps.newHashMap();\n-    int groupSize = Math.max(1, (files.size() + 1) / config.getNumFiles());\n+    int maxNumFiles = config.getMaxNumFiles();\n+    long groupMinSize = config.getMinFileSize();\n+    if (totalFileSize / config.getMinFileSize() >= maxNumFiles) {\n+      groupMinSize = Math.round(totalFileSize / maxNumFiles);\n+    }\n     // Files to be compacted are grouped into different groups,\n     // each group of files are compacted to one file,\n     // one task is to compact one group of files,\n     // different tasks are assigned to different workers in a round robin way.\n-    ArrayList<String> group = new ArrayList<>(groupSize);\n+    // We keep adding files to the group, until adding more files makes it too big.\n+    ArrayList<String> group = new ArrayList<>();\n     int workerIndex = 0;\n     int outputIndex = 0;\n-    for (int i = 0; i < files.size(); i++) {\n-      URIStatus file = files.get(i);\n-      group.add(inputDir.join(file.getName()).toString());\n-      if (group.size() == groupSize || i == files.size() - 1) {\n+    // Number of groups already generated\n+    int groupIndex = 0;\n+    long currentGroupSize = 0;\n+    for (URIStatus file : files) {\n+      // add the file to the group if\n+      // 1. group is empty\n+      // 2. group is the last group\n+      // 3. group size with the new file is closer to the groupMinSize than group size without it\n+      if (group.isEmpty() || groupIndex == maxNumFiles - 1\n+          || (currentGroupSize + file.getLength()) <= groupMinSize / 2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9096f1726980e9df0676deed30c403941e53ffa0"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38041470ce7b837b8dfed929175869054991f75b", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/38041470ce7b837b8dfed929175869054991f75b", "committedDate": "2020-02-05T02:05:17Z", "message": "address comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da0b50b697b9f477ec6335808eff1c97d047827f", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/da0b50b697b9f477ec6335808eff1c97d047827f", "committedDate": "2020-02-05T02:36:23Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNDM2NzM0", "url": "https://github.com/Alluxio/alluxio/pull/10718#pullrequestreview-353436734", "createdAt": "2020-02-05T02:43:41Z", "commit": {"oid": "da0b50b697b9f477ec6335808eff1c97d047827f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMjo0Mzo0MVrOFlqQHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwMjo0NzowNFrOFlqS9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzMzg4Nw==", "bodyText": "I think our convention has been something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final String NUM_FILES_OPTION = \"hive.file.maxcount\";\n          \n          \n            \n              private static final String NUM_FILES_OPTION = \"hive.file.count.max\";", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r375033887", "createdAt": "2020-02-05T02:43:41Z", "author": {"login": "gpang"}, "path": "table/server/common/src/main/java/alluxio/table/common/transform/action/WriteAction.java", "diffHunk": "@@ -26,8 +27,10 @@\n  */\n public class WriteAction implements TransformAction {\n   private static final String NAME = \"write\";\n-  private static final String NUM_FILES_OPTION = \"hive.num.files\";\n-  private static final int DEFAULT_NUM_FILES = 1;\n+  private static final String NUM_FILES_OPTION = \"hive.file.maxcount\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da0b50b697b9f477ec6335808eff1c97d047827f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzMzk3NA==", "bodyText": "I think our convention is like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final String FILE_SIZE_OPTION = \"hive.file.minsize\";\n          \n          \n            \n              private static final String FILE_SIZE_OPTION = \"hive.file.size.min\";", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r375033974", "createdAt": "2020-02-05T02:44:05Z", "author": {"login": "gpang"}, "path": "table/server/common/src/main/java/alluxio/table/common/transform/action/WriteAction.java", "diffHunk": "@@ -26,8 +27,10 @@\n  */\n public class WriteAction implements TransformAction {\n   private static final String NAME = \"write\";\n-  private static final String NUM_FILES_OPTION = \"hive.num.files\";\n-  private static final int DEFAULT_NUM_FILES = 1;\n+  private static final String NUM_FILES_OPTION = \"hive.file.maxcount\";\n+  private static final String FILE_SIZE_OPTION = \"hive.file.minsize\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da0b50b697b9f477ec6335808eff1c97d047827f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzNDYxMw==", "bodyText": "I have another higher level question. If there is a file conversion happening, for example, csv to parquet, there will most likely be a reduction in file sizes. This computes the INPUT file sizes, but ideally we should be computing the desired OUTPUT file sizes. Is there a simple way we can perform a heuristic for when we are converting input file types to different output types?", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r375034613", "createdAt": "2020-02-05T02:47:04Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -80,24 +80,44 @@ private boolean shouldIgnore(URIStatus status) {\n     AlluxioURI outputDir = new AlluxioURI(config.getOutput());\n \n     List<URIStatus> files = Lists.newArrayList();\n+    // use double to prevent overflow\n+    double totalFileSize = 0;\n     for (URIStatus status : context.getFileSystem().listStatus(inputDir)) {\n       if (!shouldIgnore(status)) {\n         files.add(status);\n+        totalFileSize += status.getLength();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da0b50b697b9f477ec6335808eff1c97d047827f"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cdf3d39ee88beb258301adccecb3fe821640b95", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/5cdf3d39ee88beb258301adccecb3fe821640b95", "committedDate": "2020-02-05T23:45:06Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cc76317fbf6a673089e488120f22cfcd9e4cb79", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/7cc76317fbf6a673089e488120f22cfcd9e4cb79", "committedDate": "2020-02-06T00:29:31Z", "message": "account for size difference due to compression between src and dest format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bf075178f93490487bc2567fb32ed7babc5ccbc", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/8bf075178f93490487bc2567fb32ed7babc5ccbc", "committedDate": "2020-02-06T00:47:52Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f61727d0b3c03e73be50d8473bc9cf91064b015c", "author": {"user": {"login": "yuzhu", "name": "David Zhu"}}, "url": "https://github.com/Alluxio/alluxio/commit/f61727d0b3c03e73be50d8473bc9cf91064b015c", "committedDate": "2020-02-06T04:37:20Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NTczODg1", "url": "https://github.com/Alluxio/alluxio/pull/10718#pullrequestreview-354573885", "createdAt": "2020-02-06T16:07:35Z", "commit": {"oid": "f61727d0b3c03e73be50d8473bc9cf91064b015c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNjowNzozNlrOFmg1cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNjowNzozNlrOFmg1cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkyODE3Ng==", "bodyText": "what happens if the format is unknown? Maybe for unknown formats, it should just default to 1.0 or 1.5 or something.", "url": "https://github.com/Alluxio/alluxio/pull/10718#discussion_r375928176", "createdAt": "2020-02-06T16:07:36Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -80,24 +86,52 @@ private boolean shouldIgnore(URIStatus status) {\n     AlluxioURI outputDir = new AlluxioURI(config.getOutput());\n \n     List<URIStatus> files = Lists.newArrayList();\n+    // use double to prevent overflow\n+    double totalFileSize = 0;\n     for (URIStatus status : context.getFileSystem().listStatus(inputDir)) {\n       if (!shouldIgnore(status)) {\n         files.add(status);\n+        totalFileSize += status.getLength();\n       }\n     }\n+\n     Map<WorkerInfo, ArrayList<CompactTask>> assignments = Maps.newHashMap();\n-    int groupSize = Math.max(1, (files.size() + 1) / config.getNumFiles());\n+    int maxNumFiles = config.getMaxNumFiles();\n+    long groupMinSize = config.getMinFileSize();\n+    if (totalFileSize / groupMinSize > maxNumFiles) {\n+      groupMinSize = Math.round(totalFileSize / maxNumFiles);\n+    }\n+\n+    if (!files.isEmpty() && config.getPartitionInfo() != null) {\n+      // adjust the group minimum size for source compression ratio\n+      groupMinSize *= COMPRESSION_RATIO.get(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f61727d0b3c03e73be50d8473bc9cf91064b015c"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0Njk3NTIy", "url": "https://github.com/Alluxio/alluxio/pull/10718#pullrequestreview-354697522", "createdAt": "2020-02-06T19:04:56Z", "commit": {"oid": "f61727d0b3c03e73be50d8473bc9cf91064b015c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3265, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}