{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2OTE0NzQ1", "number": 10940, "title": "Improve client cache metrics", "bodyText": "Adds bytes evicted and bytes written. Also makes the LocalCacheManager tolerant of page store failures.", "createdAt": "2020-02-19T01:14:51Z", "url": "https://github.com/Alluxio/alluxio/pull/10940", "merged": true, "mergeCommit": {"oid": "294ddccc2f698c7ecb4c24931f8f5b96908e1293"}, "closed": true, "closedAt": "2020-02-19T23:58:12Z", "author": {"login": "calvinjia"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFr2VRAH2gAyMzc2OTE0NzQ1OjE2NTc4NzM1YmVmMmEzMzM1ZTMyY2YzNTc3NzNlMzUxYTM2NmFiNzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcF_jB1gFqTM2MTUyNTI5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "16578735bef2a3335e32cf357773e351a366ab73", "author": {"user": {"login": "calvinjia", "name": "Calvin Jia"}}, "url": "https://github.com/Alluxio/alluxio/commit/16578735bef2a3335e32cf357773e351a366ab73", "committedDate": "2020-02-19T01:00:58Z", "message": "Add more metrics to client cache."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a90b9c077b9e0f0ad4d188e3c9bf679bfb8fc94f", "author": {"user": {"login": "calvinjia", "name": "Calvin Jia"}}, "url": "https://github.com/Alluxio/alluxio/commit/a90b9c077b9e0f0ad4d188e3c9bf679bfb8fc94f", "committedDate": "2020-02-19T01:13:39Z", "message": "Improve style."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a87cf3eaac72bba4729843dab6e00e989f62ef21", "author": {"user": {"login": "calvinjia", "name": "Calvin Jia"}}, "url": "https://github.com/Alluxio/alluxio/commit/a87cf3eaac72bba4729843dab6e00e989f62ef21", "committedDate": "2020-02-19T19:09:34Z", "message": "Resolve conflicts."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "700e72f9369ac030802754f94e974600bd9175c7", "author": {"user": {"login": "calvinjia", "name": "Calvin Jia"}}, "url": "https://github.com/Alluxio/alluxio/commit/700e72f9369ac030802754f94e974600bd9175c7", "committedDate": "2020-02-19T19:12:15Z", "message": "Do not fail on inconsistent page store."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDMxNzM0", "url": "https://github.com/Alluxio/alluxio/pull/10940#pullrequestreview-361431734", "createdAt": "2020-02-19T20:58:41Z", "commit": {"oid": "700e72f9369ac030802754f94e974600bd9175c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMDo1ODo0MlrOFr3YLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMDo1ODo0MlrOFr3YLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0MDM5Ng==", "bodyText": "Add @Nullable", "url": "https://github.com/Alluxio/alluxio/pull/10940#discussion_r381540396", "createdAt": "2020-02-19T20:58:42Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -268,4 +261,65 @@ public void delete(PageId pageId) throws IOException, PageNotFoundException {\n   public void close() throws Exception {\n     mPageStore.close();\n   }\n+\n+  /**\n+   * Attempts to add a page to the page store. The page lock must be acquired before calling this\n+   * method. The metastore must be updated before calling this method.\n+   *\n+   * @param pageId page id\n+   * @param page page data\n+   * @return true if successful, false otherwise\n+   */\n+  private boolean addPage(PageId pageId, byte[] page) {\n+    try {\n+      mPageStore.put(pageId, page);\n+    } catch (IOException e) {\n+      LOG.error(\"Failed to add page {}: {}\", pageId, e);\n+      return false;\n+    }\n+    mEvictor.updateOnPut(pageId);\n+    Metrics.BYTES_WRITTEN_CACHE.inc(page.length);\n+    return true;\n+  }\n+\n+  /**\n+   * Attempts to delete a page from the page store. The page lock must be acquired before calling\n+   * this method. The metastore must be updated before calling this method.\n+   *\n+   * @param pageId page id\n+   * @param pageInfo page info\n+   * @return true if successful, false otherwise\n+   */\n+  private boolean deletePage(PageId pageId, PageInfo pageInfo) {\n+    try {\n+      mPageStore.delete(pageId, pageInfo.getPageSize());\n+    } catch (IOException | PageNotFoundException e) {\n+      LOG.error(\"Failed to delete page {}: {}\", pageId, e);\n+      return false;\n+    }\n+    mEvictor.updateOnDelete(pageId);\n+    Metrics.BYTES_EVICTED_CACHE.inc(pageInfo.getPageSize());\n+    return true;\n+  }\n+\n+  private ReadableByteChannel getPage(PageId pageId, int offset) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "700e72f9369ac030802754f94e974600bd9175c7"}, "originalPosition": 145}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDM0NDUz", "url": "https://github.com/Alluxio/alluxio/pull/10940#pullrequestreview-361434453", "createdAt": "2020-02-19T21:02:51Z", "commit": {"oid": "700e72f9369ac030802754f94e974600bd9175c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMTowMjo1MVrOFr3gmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMTowMjo1MVrOFr3gmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU0MjU1Mw==", "bodyText": "move this down to be protected by lock as discussed", "url": "https://github.com/Alluxio/alluxio/pull/10940#discussion_r381542553", "createdAt": "2020-02-19T21:02:51Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -164,13 +167,13 @@ public boolean put(PageId pageId, byte[] page) throws IOException {\n           victimPageInfo = mMetaStore.getPageInfo(victim);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "700e72f9369ac030802754f94e974600bd9175c7"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bffa6d29ac4362686515a3484229b8b02019039a", "author": {"user": {"login": "calvinjia", "name": "Calvin Jia"}}, "url": "https://github.com/Alluxio/alluxio/commit/bffa6d29ac4362686515a3484229b8b02019039a", "committedDate": "2020-02-19T21:15:36Z", "message": "Address comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53ed3116939eb48d0f1c1eaa98d2c0f0f2954a58", "author": {"user": {"login": "calvinjia", "name": "Calvin Jia"}}, "url": "https://github.com/Alluxio/alluxio/commit/53ed3116939eb48d0f1c1eaa98d2c0f0f2954a58", "committedDate": "2020-02-19T21:17:08Z", "message": "Address comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDQ1NDY4", "url": "https://github.com/Alluxio/alluxio/pull/10940#pullrequestreview-361445468", "createdAt": "2020-02-19T21:20:38Z", "commit": {"oid": "53ed3116939eb48d0f1c1eaa98d2c0f0f2954a58"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMToyMDozOFrOFr4Blw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMToyMDozOFrOFr4Blw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU1MDk5OQ==", "bodyText": "still leave IOE here o signature?", "url": "https://github.com/Alluxio/alluxio/pull/10940#discussion_r381550999", "createdAt": "2020-02-19T21:20:38Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/CacheManager.java", "diffHunk": "@@ -33,45 +32,41 @@ static CacheManager create(AlluxioConfiguration conf) throws IOException {\n   }\n \n   /**\n-   * Writes a new page from a source channel with best effort. It is possible that this put\n-   * operation returns without page written due to transient behavior not due to failures writing\n-   * to disks.\n+   * Puts a page into the cache manager. This method is best effort. It is possible that this put\n+   * operation returns without page written.\n    *\n    * @param pageId page identifier\n    * @param page page data\n-   * @throws IOException if error happens when writing the page to disk\n-   * @return true on a successful put or false due to transient\n+   * @return true if the put was successful, false otherwise\n    */\n-  boolean put(PageId pageId, byte[] page) throws IOException;\n+  boolean put(PageId pageId, byte[] page);\n \n   /**\n-   * Wraps the page in a channel or null if the queried page is not found in the cache.\n+   * Wraps the page in a channel or null if the queried page is not found in the cache or otherwise\n+   * unable to be read from the cache.\n    *\n    * @param pageId page identifier\n    * @return a channel to read the page\n-   * @throws IOException if error happens when reading the page\n    */\n   @Nullable\n-  ReadableByteChannel get(PageId pageId) throws IOException;\n+  ReadableByteChannel get(PageId pageId);\n \n   /**\n-   * Wraps a part of the page in a channel or null if the queried page is not found\n-   * in the cache.\n+   * Wraps a part of the page in a channel or null if the queried page is not found in the cache or\n+   * otherwise unable to be read from the cache.\n    *\n    * @param pageId page identifier\n    * @param pageOffset offset into the page\n    * @return a channel to read the page\n-   * @throws IOException if error happens when reading the page\n    */\n   @Nullable\n-  ReadableByteChannel get(PageId pageId, int pageOffset)\n-      throws IOException;\n+  ReadableByteChannel get(PageId pageId, int pageOffset);\n \n   /**\n    * Deletes a page from the cache.\n    *\n    * @param pageId page identifier\n-   * @throws PageNotFoundException if page is not found in the store\n+   * @return true if the page is successfully deleted, false otherwise\n    */\n-  void delete(PageId pageId) throws IOException, PageNotFoundException;\n+  boolean delete(PageId pageId) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53ed3116939eb48d0f1c1eaa98d2c0f0f2954a58"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9dab782112c95cd40a155c1d68723e738dc25e0", "author": {"user": {"login": "calvinjia", "name": "Calvin Jia"}}, "url": "https://github.com/Alluxio/alluxio/commit/b9dab782112c95cd40a155c1d68723e738dc25e0", "committedDate": "2020-02-19T22:56:03Z", "message": "Update unit test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41ef5109a805d39c91ea15c09d5a9880785f61e3", "author": {"user": {"login": "calvinjia", "name": "Calvin Jia"}}, "url": "https://github.com/Alluxio/alluxio/commit/41ef5109a805d39c91ea15c09d5a9880785f61e3", "committedDate": "2020-02-19T23:17:32Z", "message": "Address comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNTI1Mjkx", "url": "https://github.com/Alluxio/alluxio/pull/10940#pullrequestreview-361525291", "createdAt": "2020-02-19T23:57:59Z", "commit": {"oid": "41ef5109a805d39c91ea15c09d5a9880785f61e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4855, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}