{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzODY2MTI3", "number": 12612, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTowNzowOFrOFDFusQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOToyMzoyNVrOFDGK2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzgzOTIxOnYy", "diffSide": "RIGHT", "path": "underfs/abfs/src/main/java/alluxio/underfs/abfs/AbfsUnderFileSystem.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTowNzowOFrOICk01g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOToyMTowNlrOIClX_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU3MTQxNA==", "bodyText": "Is there any additional configuration needed for connecting with secured scheme?", "url": "https://github.com/Alluxio/alluxio/pull/12612#discussion_r539571414", "createdAt": "2020-12-09T19:07:08Z", "author": {"login": "bf8086"}, "path": "underfs/abfs/src/main/java/alluxio/underfs/abfs/AbfsUnderFileSystem.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.underfs.abfs;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.conf.PropertyKey;\n+import alluxio.underfs.UfsFileStatus;\n+import alluxio.underfs.UfsStatus;\n+import alluxio.underfs.UnderFileSystemConfiguration;\n+import alluxio.underfs.hdfs.HdfsUnderFileSystem;\n+import alluxio.underfs.options.FileLocationOptions;\n+\n+import com.google.common.base.MoreObjects;\n+import org.apache.hadoop.conf.Configuration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.annotation.concurrent.ThreadSafe;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * A Microsoft Azure Data Lake Storage Gen2 Implementation.\n+ */\n+@ThreadSafe\n+public class AbfsUnderFileSystem extends HdfsUnderFileSystem {\n+  private static final Logger LOG = LoggerFactory.getLogger(AbfsUnderFileSystem.class);\n+\n+  /** Constant for the abfs URI scheme. */\n+  public static final String SCHEME_INSECURE = \"abfs://\";\n+\n+  /** Constant for the abfss URI scheme. */\n+  public static final String SCHEME_SECURE = \"abfss://\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f6b0dde2ec269a2f08e378e3b8f3da5367cb4a7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU3ODc2OQ==", "bodyText": "https://hadoop.apache.org/docs/current/hadoop-azure/abfs.html#Security\nHas not indicated otherwise. So doesn't seem to be the case.", "url": "https://github.com/Alluxio/alluxio/pull/12612#discussion_r539578769", "createdAt": "2020-12-09T19:18:35Z", "author": {"login": "bradyoo"}, "path": "underfs/abfs/src/main/java/alluxio/underfs/abfs/AbfsUnderFileSystem.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.underfs.abfs;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.conf.PropertyKey;\n+import alluxio.underfs.UfsFileStatus;\n+import alluxio.underfs.UfsStatus;\n+import alluxio.underfs.UnderFileSystemConfiguration;\n+import alluxio.underfs.hdfs.HdfsUnderFileSystem;\n+import alluxio.underfs.options.FileLocationOptions;\n+\n+import com.google.common.base.MoreObjects;\n+import org.apache.hadoop.conf.Configuration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.annotation.concurrent.ThreadSafe;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * A Microsoft Azure Data Lake Storage Gen2 Implementation.\n+ */\n+@ThreadSafe\n+public class AbfsUnderFileSystem extends HdfsUnderFileSystem {\n+  private static final Logger LOG = LoggerFactory.getLogger(AbfsUnderFileSystem.class);\n+\n+  /** Constant for the abfs URI scheme. */\n+  public static final String SCHEME_INSECURE = \"abfs://\";\n+\n+  /** Constant for the abfss URI scheme. */\n+  public static final String SCHEME_SECURE = \"abfss://\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU3MTQxNA=="}, "originalCommit": {"oid": "4f6b0dde2ec269a2f08e378e3b8f3da5367cb4a7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU4MDQxNQ==", "bodyText": "\u279c  alluxio git:(azure_gen2) ./bin/alluxio fs mount \n--option fs.azure.account.key.bradleytest1.dfs.core.windows.net=<SHARED_KEY> \n/abfs abfss://container@bradleytest1.dfs.core.windows.net/\nMounted abfss://container@bradleytest1.dfs.core.windows.net/ at /abfs", "url": "https://github.com/Alluxio/alluxio/pull/12612#discussion_r539580415", "createdAt": "2020-12-09T19:21:06Z", "author": {"login": "bradyoo"}, "path": "underfs/abfs/src/main/java/alluxio/underfs/abfs/AbfsUnderFileSystem.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.underfs.abfs;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.conf.PropertyKey;\n+import alluxio.underfs.UfsFileStatus;\n+import alluxio.underfs.UfsStatus;\n+import alluxio.underfs.UnderFileSystemConfiguration;\n+import alluxio.underfs.hdfs.HdfsUnderFileSystem;\n+import alluxio.underfs.options.FileLocationOptions;\n+\n+import com.google.common.base.MoreObjects;\n+import org.apache.hadoop.conf.Configuration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.annotation.concurrent.ThreadSafe;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * A Microsoft Azure Data Lake Storage Gen2 Implementation.\n+ */\n+@ThreadSafe\n+public class AbfsUnderFileSystem extends HdfsUnderFileSystem {\n+  private static final Logger LOG = LoggerFactory.getLogger(AbfsUnderFileSystem.class);\n+\n+  /** Constant for the abfs URI scheme. */\n+  public static final String SCHEME_INSECURE = \"abfs://\";\n+\n+  /** Constant for the abfss URI scheme. */\n+  public static final String SCHEME_SECURE = \"abfss://\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU3MTQxNA=="}, "originalCommit": {"oid": "4f6b0dde2ec269a2f08e378e3b8f3da5367cb4a7"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4Nzg1MTYyOnYy", "diffSide": "RIGHT", "path": "underfs/abfs/src/main/java/alluxio/underfs/abfs/AbfsUnderFileSystem.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOToxMDoxMlrOICk8OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOToxMDoxMlrOICk8OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU3MzMwNQ==", "bodyText": "Let's avoid putting credentials in log.", "url": "https://github.com/Alluxio/alluxio/pull/12612#discussion_r539573305", "createdAt": "2020-12-09T19:10:12Z", "author": {"login": "bf8086"}, "path": "underfs/abfs/src/main/java/alluxio/underfs/abfs/AbfsUnderFileSystem.java", "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.underfs.abfs;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.conf.PropertyKey;\n+import alluxio.underfs.UfsFileStatus;\n+import alluxio.underfs.UfsStatus;\n+import alluxio.underfs.UnderFileSystemConfiguration;\n+import alluxio.underfs.hdfs.HdfsUnderFileSystem;\n+import alluxio.underfs.options.FileLocationOptions;\n+\n+import com.google.common.base.MoreObjects;\n+import org.apache.hadoop.conf.Configuration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import javax.annotation.concurrent.ThreadSafe;\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * A Microsoft Azure Data Lake Storage Gen2 Implementation.\n+ */\n+@ThreadSafe\n+public class AbfsUnderFileSystem extends HdfsUnderFileSystem {\n+  private static final Logger LOG = LoggerFactory.getLogger(AbfsUnderFileSystem.class);\n+\n+  /** Constant for the abfs URI scheme. */\n+  public static final String SCHEME_INSECURE = \"abfs://\";\n+\n+  /** Constant for the abfss URI scheme. */\n+  public static final String SCHEME_SECURE = \"abfss://\";\n+\n+  private static Configuration createAbfsConfiguration(UnderFileSystemConfiguration conf) {\n+    Configuration abfsConf = HdfsUnderFileSystem.createConfiguration(conf);\n+    for (Map.Entry<String, String> entry : conf.toMap().entrySet()) {\n+      String key = entry.getKey();\n+      String value = entry.getValue();\n+      if (PropertyKey.Template.UNDERFS_AZURE_ACCOUNT_KEY.matches(key)) {\n+        abfsConf.set(key, value);\n+        final String authTypeKey = key.replace(\".key\", \".auth.type\");\n+        abfsConf.set(authTypeKey, \"SharedKey\");\n+      }\n+    }\n+    LOG.info(abfsConf.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f6b0dde2ec269a2f08e378e3b8f3da5367cb4a7"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzkwNDYyOnYy", "diffSide": "RIGHT", "path": "docs/en/ufs/Azure-Data-Lake-Gen2.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOToyMTo1MFrOIClZ-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOToyMTo1MFrOIClZ-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU4MDkyMQ==", "bodyText": "(nit) Use  ```properties in all property sections for better syntax highlight.", "url": "https://github.com/Alluxio/alluxio/pull/12612#discussion_r539580921", "createdAt": "2020-12-09T19:21:50Z", "author": {"login": "bf8086"}, "path": "docs/en/ufs/Azure-Data-Lake-Gen2.md", "diffHunk": "@@ -0,0 +1,94 @@\n+---\n+layout: global\n+title: Azure Data Lake Storage Gen2\n+nickname: Azure Data Lake Storage\n+group: Storage Integrations\n+priority: 2\n+---\n+\n+* Table of Contents\n+{:toc}\n+\n+This guide describes how to configure Alluxio with [Azure Data Lake Storage Gen2](https://docs.microsoft.com/en-in/azure/storage/blobs/data-lake-storage-introduction) as the under storage system.\n+\n+## Prerequisites\n+\n+The Alluxio binaries must be on your machine.\n+You can either [compile the binaries from Alluxio source code]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}),\n+or [download the precompiled binaries directly]({{ '/en/deploy/Running-Alluxio-Locally.html' | relativize_url }}).\n+\n+In preparation for using Azure Data Lake storage with Alluxio, [create a new Data Lake storage in your Azure\n+account](https://docs.microsoft.com/en-in/azure/storage/blobs/create-data-lake-storage-account) or use an existing Data Lake storage. \n+You should also note the directory you want to use, either by creating a new directory, or using an existing one. You also need a \n+[SharedKey](https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key(.\n+For the purposes of this guide, the Azure storage account name is called `<AZURE_ACCOUNT>`,\n+the directory in that storage account is called `<AZURE_DIRECTORY>`, and the name of the container is called `<AZURE_CONTAINER>`.\n+\n+\n+## Basic Setup\n+\n+### Root Mount\n+\n+To use Azure Data Lake Storage as the UFS of Alluxio root mount point,\n+you need to configure Alluxio to use under storage systems by modifying\n+`conf/alluxio-site.properties`. If it does not exist, create the configuration file from the\n+template.\n+\n+```console\n+$ cp conf/alluxio-site.properties.template conf/alluxio-site.properties\n+```\n+\n+Specify the underfs address by modifying `conf/alluxio-site.properties` to include:\n+\n+```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49df8437fbaaf87549e8001d0c15c2fbbe0c9d34"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzkxMTMwOnYy", "diffSide": "RIGHT", "path": "docs/en/ufs/Azure-Data-Lake-Gen2.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOToyMzoyNVrOICld9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOToyMzoyNVrOICld9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU4MTk0Mw==", "bodyText": "(nit) Add ```console for syntax highlight", "url": "https://github.com/Alluxio/alluxio/pull/12612#discussion_r539581943", "createdAt": "2020-12-09T19:23:25Z", "author": {"login": "bf8086"}, "path": "docs/en/ufs/Azure-Data-Lake-Gen2.md", "diffHunk": "@@ -0,0 +1,94 @@\n+---\n+layout: global\n+title: Azure Data Lake Storage Gen2\n+nickname: Azure Data Lake Storage\n+group: Storage Integrations\n+priority: 2\n+---\n+\n+* Table of Contents\n+{:toc}\n+\n+This guide describes how to configure Alluxio with [Azure Data Lake Storage Gen2](https://docs.microsoft.com/en-in/azure/storage/blobs/data-lake-storage-introduction) as the under storage system.\n+\n+## Prerequisites\n+\n+The Alluxio binaries must be on your machine.\n+You can either [compile the binaries from Alluxio source code]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}),\n+or [download the precompiled binaries directly]({{ '/en/deploy/Running-Alluxio-Locally.html' | relativize_url }}).\n+\n+In preparation for using Azure Data Lake storage with Alluxio, [create a new Data Lake storage in your Azure\n+account](https://docs.microsoft.com/en-in/azure/storage/blobs/create-data-lake-storage-account) or use an existing Data Lake storage. \n+You should also note the directory you want to use, either by creating a new directory, or using an existing one. You also need a \n+[SharedKey](https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key(.\n+For the purposes of this guide, the Azure storage account name is called `<AZURE_ACCOUNT>`,\n+the directory in that storage account is called `<AZURE_DIRECTORY>`, and the name of the container is called `<AZURE_CONTAINER>`.\n+\n+\n+## Basic Setup\n+\n+### Root Mount\n+\n+To use Azure Data Lake Storage as the UFS of Alluxio root mount point,\n+you need to configure Alluxio to use under storage systems by modifying\n+`conf/alluxio-site.properties`. If it does not exist, create the configuration file from the\n+template.\n+\n+```console\n+$ cp conf/alluxio-site.properties.template conf/alluxio-site.properties\n+```\n+\n+Specify the underfs address by modifying `conf/alluxio-site.properties` to include:\n+\n+```\n+alluxio.master.mount.table.root.ufs=abfs://<AZURE_CONTAINER>@<AZURE_ACCOUNT>.dfs.core.windows.net/<AZURE_DIRECTORY>/\n+```\n+\n+Specify the Shared Key by adding the following property in `conf/alluxio-site.properties`:\n+\n+```\n+alluxio.master.mount.table.root.option.fs.azure.account.key.<AZURE_ACCOUNT>.dfs.core.windows.net=<SHARED_KEY>\n+```\n+\n+### Nested Mount\n+An Azure Data Lake store location can be mounted at a nested directory in the Alluxio namespace to have unified access\n+to multiple under storage systems. Alluxio's\n+[Command Line Interface]({{ '/en/operation/User-CLI.html' | relativize_url }}) can be used for this purpose.\n+\n+```console\n+$ ./bin/alluxio fs mount \\\n+  --option fs.azure.account.key.<AZURE_ACCOUNT>.dfs.core.windows.net=<SHARED_KEY>\n+  /mnt/abfs abfs://<AZURE_CONTAINER>@<AZURE_ACCOUNT>.dfs.core.windows.net/<AZURE_DIRECTORY>/\n+```\n+\n+After these changes, Alluxio should be configured to work with Azure Data Lake storage as its under storage system, and you can run Alluxio locally with it.\n+\n+## Running Alluxio Locally with Data Lake Storage\n+\n+Start up Alluxio locally to see that everything works.\n+\n+```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49df8437fbaaf87549e8001d0c15c2fbbe0c9d34"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 944, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}