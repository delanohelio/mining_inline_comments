{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MTg2Nzk2", "number": 10813, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzo0Njo1N1rODcAPvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxODo1NzoxN1rODj6wOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjkwNzQ5OnYy", "diffSide": "RIGHT", "path": "dev/scripts/update-versions.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzo0Njo1N1rOFj0EMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODoyMjo0M1rOFj1Hug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5NzUyMQ==", "bodyText": "NIT: newline at end", "url": "https://github.com/Alluxio/alluxio/pull/10813#discussion_r373097521", "createdAt": "2020-01-30T17:46:57Z", "author": {"login": "gpang"}, "path": "dev/scripts/update-versions.sh", "diffHunk": "@@ -0,0 +1,119 @@\n+#!/usr/bin/env bash\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+# This script is designed so that someone can update all versions for releases\n+# using a single command.\n+\n+# Debugging\n+# set -x\n+set -e # exit if a command fails\n+set -u # unbound variable is an error\n+\n+HELP=$(cat <<EOF\n+Usage: update-version.sh [-s] <old version> <new version>\n+\n+    <old version>    The version to replace throughout the codebase\n+    <new version>    The new version in the codebase\n+\n+    -s               Skips updating maven pom versions. This should mainly be\n+                     used when cutting a final release where pom versions are\n+                     updated by the maven release plugin.\n+\n+\n+EOF\n+)\n+\n+# Arguments:\n+#  $1: old version\n+#  $2: new version\n+function update_poms() {\n+    find . -name pom.xml | xargs -t -n 1 perl -pi -e \"s/${1}/${2}/g\"\n+}\n+\n+# Arguments:\n+#  $1: old version\n+#  $2: new version\n+function update_libexec() {\n+    perl -pi -e \"s/${1}/${2}/g\" libexec/alluxio-config.sh\n+}\n+\n+# Arguments:\n+#  $1: old version\n+#  $2: new version\n+function update_docs() {\n+\n+    local current_branch=\"$(git rev-parse --abbrev-ref HEAD)\"\n+    perl -pi -e \"s/${1}/${2}/g\" docs/_config.yml\n+\n+    if [[ \"${current_branch}\" != \"master\" ]]; then\n+        local major_version_regex=\"([0-9]+\\.[0-9]+)\\.\"\n+        # regex is unquoted on purpose\n+        if [[ \"${2}\" =~ ${major_version_regex} ]]; then\n+            local match=\"${BASH_REMATCH[1]}\"\n+            # .* matches everything after it on that line\n+            perl -pi -e \\\n+            \"s/ALLUXIO_MAJOR_VERSION.*/ALLUXIO_MAJOR_VERSION: ${match}/g\" \\\n+                docs/_config.yml\n+\n+        fi\n+    fi\n+}\n+\n+# Arguments:\n+#  $1: old version\n+#  $2: new version\n+function update_k8s() {\n+    perl -pi -e \"s/${1}/${2}/g\" \\\n+        integration/kubernetes/helm-chart/alluxio/values.yaml\n+    pushd integration/kubernetes\n+    ./helm-generate.sh all\n+    popd\n+}\n+\n+\n+function main() {\n+    local skip_maven=\"false\"\n+\n+    while getopts \"sh\" o; do\n+        case \"${o}\" in\n+            s)\n+                skip_maven=\"true\"\n+                shift\n+                ;;\n+            h)\n+                echo \"${HELP}\"\n+                exit 0\n+                ;;\n+        esac\n+    done\n+\n+    if [[ \"$#\" -lt 2 ]]; then\n+        echo \"Arguments '<old version>' and '<new version>' must be provided.\"\n+        echo \"${HELP}\"\n+        exit 1\n+    fi\n+\n+    local _old=\"${1}\"\n+    local _new=\"${2}\"\n+\n+    if [[ \"${skip_maven}\" == \"false\" ]]; then\n+        update_poms \"$_old\" \"$_new\"\n+    fi\n+\n+    update_libexec \"$_old\" \"$_new\"\n+    update_docs \"$_old\" \"$_new\"\n+    update_k8s \"$_old\" \"$_new\"\n+\n+    exit 0\n+}\n+\n+main \"$@\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34bcaa6504d4f3280d99005a3f735be6bcabd19e"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNDgxMA==", "bodyText": "fixed", "url": "https://github.com/Alluxio/alluxio/pull/10813#discussion_r373114810", "createdAt": "2020-01-30T18:22:43Z", "author": {"login": "ZacBlanco"}, "path": "dev/scripts/update-versions.sh", "diffHunk": "@@ -0,0 +1,119 @@\n+#!/usr/bin/env bash\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+# This script is designed so that someone can update all versions for releases\n+# using a single command.\n+\n+# Debugging\n+# set -x\n+set -e # exit if a command fails\n+set -u # unbound variable is an error\n+\n+HELP=$(cat <<EOF\n+Usage: update-version.sh [-s] <old version> <new version>\n+\n+    <old version>    The version to replace throughout the codebase\n+    <new version>    The new version in the codebase\n+\n+    -s               Skips updating maven pom versions. This should mainly be\n+                     used when cutting a final release where pom versions are\n+                     updated by the maven release plugin.\n+\n+\n+EOF\n+)\n+\n+# Arguments:\n+#  $1: old version\n+#  $2: new version\n+function update_poms() {\n+    find . -name pom.xml | xargs -t -n 1 perl -pi -e \"s/${1}/${2}/g\"\n+}\n+\n+# Arguments:\n+#  $1: old version\n+#  $2: new version\n+function update_libexec() {\n+    perl -pi -e \"s/${1}/${2}/g\" libexec/alluxio-config.sh\n+}\n+\n+# Arguments:\n+#  $1: old version\n+#  $2: new version\n+function update_docs() {\n+\n+    local current_branch=\"$(git rev-parse --abbrev-ref HEAD)\"\n+    perl -pi -e \"s/${1}/${2}/g\" docs/_config.yml\n+\n+    if [[ \"${current_branch}\" != \"master\" ]]; then\n+        local major_version_regex=\"([0-9]+\\.[0-9]+)\\.\"\n+        # regex is unquoted on purpose\n+        if [[ \"${2}\" =~ ${major_version_regex} ]]; then\n+            local match=\"${BASH_REMATCH[1]}\"\n+            # .* matches everything after it on that line\n+            perl -pi -e \\\n+            \"s/ALLUXIO_MAJOR_VERSION.*/ALLUXIO_MAJOR_VERSION: ${match}/g\" \\\n+                docs/_config.yml\n+\n+        fi\n+    fi\n+}\n+\n+# Arguments:\n+#  $1: old version\n+#  $2: new version\n+function update_k8s() {\n+    perl -pi -e \"s/${1}/${2}/g\" \\\n+        integration/kubernetes/helm-chart/alluxio/values.yaml\n+    pushd integration/kubernetes\n+    ./helm-generate.sh all\n+    popd\n+}\n+\n+\n+function main() {\n+    local skip_maven=\"false\"\n+\n+    while getopts \"sh\" o; do\n+        case \"${o}\" in\n+            s)\n+                skip_maven=\"true\"\n+                shift\n+                ;;\n+            h)\n+                echo \"${HELP}\"\n+                exit 0\n+                ;;\n+        esac\n+    done\n+\n+    if [[ \"$#\" -lt 2 ]]; then\n+        echo \"Arguments '<old version>' and '<new version>' must be provided.\"\n+        echo \"${HELP}\"\n+        exit 1\n+    fi\n+\n+    local _old=\"${1}\"\n+    local _new=\"${2}\"\n+\n+    if [[ \"${skip_maven}\" == \"false\" ]]; then\n+        update_poms \"$_old\" \"$_new\"\n+    fi\n+\n+    update_libexec \"$_old\" \"$_new\"\n+    update_docs \"$_old\" \"$_new\"\n+    update_k8s \"$_old\" \"$_new\"\n+\n+    exit 0\n+}\n+\n+main \"$@\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5NzUyMQ=="}, "originalCommit": {"oid": "34bcaa6504d4f3280d99005a3f735be6bcabd19e"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjkzNTQwOnYy", "diffSide": "RIGHT", "path": "dev/scripts/update-versions.sh", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzo1NTo1MVrOFj0VkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODoyMTozMlrOFj1FTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwMTk2OQ==", "bodyText": "is perl ok to assume? Is that more common than sed?", "url": "https://github.com/Alluxio/alluxio/pull/10813#discussion_r373101969", "createdAt": "2020-01-30T17:55:51Z", "author": {"login": "gpang"}, "path": "dev/scripts/update-versions.sh", "diffHunk": "@@ -0,0 +1,119 @@\n+#!/usr/bin/env bash\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+# This script is designed so that someone can update all versions for releases\n+# using a single command.\n+\n+# Debugging\n+# set -x\n+set -e # exit if a command fails\n+set -u # unbound variable is an error\n+\n+HELP=$(cat <<EOF\n+Usage: update-version.sh [-s] <old version> <new version>\n+\n+    <old version>    The version to replace throughout the codebase\n+    <new version>    The new version in the codebase\n+\n+    -s               Skips updating maven pom versions. This should mainly be\n+                     used when cutting a final release where pom versions are\n+                     updated by the maven release plugin.\n+\n+\n+EOF\n+)\n+\n+# Arguments:\n+#  $1: old version\n+#  $2: new version\n+function update_poms() {\n+    find . -name pom.xml | xargs -t -n 1 perl -pi -e \"s/${1}/${2}/g\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34bcaa6504d4f3280d99005a3f735be6bcabd19e"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExMTQwMQ==", "bodyText": "As far as my experience has gone, I've found perl to be installed on pretty much every operating system that we develop on (Amazon linux, CentOS, Ubuntu, MacOS) and the interface and arguments that I am using with perl don't vary from distro to distro.\nThe reason I decided against sed is that the default sed installed on MacOS has a difference interface than GNU sed which is installed on the Linux-based OSes (Ubuntu, CentOS, Amazon Linux) when it comes to in-place editing with the -i argument.\n-i is not a part of the POSIX spec, and it seems the default used on MacOS doesn't behave the same as on the linux systems.", "url": "https://github.com/Alluxio/alluxio/pull/10813#discussion_r373111401", "createdAt": "2020-01-30T18:15:52Z", "author": {"login": "ZacBlanco"}, "path": "dev/scripts/update-versions.sh", "diffHunk": "@@ -0,0 +1,119 @@\n+#!/usr/bin/env bash\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+# This script is designed so that someone can update all versions for releases\n+# using a single command.\n+\n+# Debugging\n+# set -x\n+set -e # exit if a command fails\n+set -u # unbound variable is an error\n+\n+HELP=$(cat <<EOF\n+Usage: update-version.sh [-s] <old version> <new version>\n+\n+    <old version>    The version to replace throughout the codebase\n+    <new version>    The new version in the codebase\n+\n+    -s               Skips updating maven pom versions. This should mainly be\n+                     used when cutting a final release where pom versions are\n+                     updated by the maven release plugin.\n+\n+\n+EOF\n+)\n+\n+# Arguments:\n+#  $1: old version\n+#  $2: new version\n+function update_poms() {\n+    find . -name pom.xml | xargs -t -n 1 perl -pi -e \"s/${1}/${2}/g\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwMTk2OQ=="}, "originalCommit": {"oid": "34bcaa6504d4f3280d99005a3f735be6bcabd19e"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNDE5MQ==", "bodyText": "Here are two additional threads I read before deciding to stick with perl\n\nhttps://unix.stackexchange.com/questions/92895/how-can-i-achieve-portability-with-sed-i-in-place-editing\nhttps://stackoverflow.com/questions/5694228/sed-in-place-flag-that-works-both-on-mac-bsd-and-linux", "url": "https://github.com/Alluxio/alluxio/pull/10813#discussion_r373114191", "createdAt": "2020-01-30T18:21:32Z", "author": {"login": "ZacBlanco"}, "path": "dev/scripts/update-versions.sh", "diffHunk": "@@ -0,0 +1,119 @@\n+#!/usr/bin/env bash\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+# This script is designed so that someone can update all versions for releases\n+# using a single command.\n+\n+# Debugging\n+# set -x\n+set -e # exit if a command fails\n+set -u # unbound variable is an error\n+\n+HELP=$(cat <<EOF\n+Usage: update-version.sh [-s] <old version> <new version>\n+\n+    <old version>    The version to replace throughout the codebase\n+    <new version>    The new version in the codebase\n+\n+    -s               Skips updating maven pom versions. This should mainly be\n+                     used when cutting a final release where pom versions are\n+                     updated by the maven release plugin.\n+\n+\n+EOF\n+)\n+\n+# Arguments:\n+#  $1: old version\n+#  $2: new version\n+function update_poms() {\n+    find . -name pom.xml | xargs -t -n 1 perl -pi -e \"s/${1}/${2}/g\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEwMTk2OQ=="}, "originalCommit": {"oid": "34bcaa6504d4f3280d99005a3f735be6bcabd19e"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4OTg5MzcxOnYy", "diffSide": "RIGHT", "path": "dev/scripts/update-versions.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxODo1NzoxN1rOFv_adw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOTowNjo1OVrOFwrlpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2NjM1OQ==", "bodyText": "can you provide an example version string?", "url": "https://github.com/Alluxio/alluxio/pull/10813#discussion_r385866359", "createdAt": "2020-02-28T18:57:17Z", "author": {"login": "gpang"}, "path": "dev/scripts/update-versions.sh", "diffHunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env bash\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+# This script is designed so that someone can update all versions for releases\n+# using a single command.\n+\n+# Debugging\n+# set -x\n+set -e # exit if a command fails\n+set -u # unbound variable is an error\n+\n+HELP=$(cat <<EOF\n+Usage: update-version.sh [-s] <old version> <new version>\n+\n+    <old version>    The version to replace throughout the codebase", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8749c32a96c7cbc7551c514510b519878a14c23"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5MDExNw==", "bodyText": "updated", "url": "https://github.com/Alluxio/alluxio/pull/10813#discussion_r386590117", "createdAt": "2020-03-02T19:06:59Z", "author": {"login": "ZacBlanco"}, "path": "dev/scripts/update-versions.sh", "diffHunk": "@@ -0,0 +1,125 @@\n+#!/usr/bin/env bash\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+# This script is designed so that someone can update all versions for releases\n+# using a single command.\n+\n+# Debugging\n+# set -x\n+set -e # exit if a command fails\n+set -u # unbound variable is an error\n+\n+HELP=$(cat <<EOF\n+Usage: update-version.sh [-s] <old version> <new version>\n+\n+    <old version>    The version to replace throughout the codebase", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2NjM1OQ=="}, "originalCommit": {"oid": "b8749c32a96c7cbc7551c514510b519878a14c23"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2112, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}