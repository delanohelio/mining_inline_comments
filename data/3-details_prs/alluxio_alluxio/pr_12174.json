{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NTU4NDkx", "number": 12174, "title": "Implement a local first raft client for improved journal performance", "bodyText": "Current the raft client for writing journal entries will always checking for leadership and send the request through network interface, introducing significant overhead. This change implements a raft client which attempts sending messages directly to local server first, and falls back to the default client if the local server is no longer a leader.\nThe client also has built-in retry function for raft client which is closed due to timeout.", "createdAt": "2020-10-05T03:26:46Z", "url": "https://github.com/Alluxio/alluxio/pull/12174", "merged": true, "mergeCommit": {"oid": "458e0eadada2262d3fad8d88339f997055ae370d"}, "closed": true, "closedAt": "2020-10-05T23:22:53Z", "author": {"login": "bf8086"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPmcW8ABqjM4NDEzOTUzMDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPrO9AgBqjM4NDI2MjE1ODc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec8566118f6e9452346142b2c3c9b1c3a96dbd48", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/ec8566118f6e9452346142b2c3c9b1c3a96dbd48", "committedDate": "2020-10-05T16:30:58Z", "message": "Update comments"}, "afterCommit": {"oid": "269bc24fa60d79d5da8656242c93ece30863d1b7", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/269bc24fa60d79d5da8656242c93ece30863d1b7", "committedDate": "2020-10-05T16:32:03Z", "message": "Update comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjY4NDQ2", "url": "https://github.com/Alluxio/alluxio/pull/12174#pullrequestreview-502268446", "createdAt": "2020-10-05T17:25:34Z", "commit": {"oid": "269bc24fa60d79d5da8656242c93ece30863d1b7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzoyNTozNFrOHcmwXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzozMDo1NlrOHcm78g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1NzE1MA==", "bodyText": "How long and how frequently will the client retry? is it configurable?", "url": "https://github.com/Alluxio/alluxio/pull/12174#discussion_r499757150", "createdAt": "2020-10-05T17:25:34Z", "author": {"login": "LuQQiu"}, "path": "core/server/common/src/main/java/alluxio/master/journal/raft/LocalFirstRaftClient.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.master.journal.raft;\n+\n+import alluxio.util.LogUtils;\n+\n+import org.apache.ratis.client.RaftClient;\n+import org.apache.ratis.protocol.AlreadyClosedException;\n+import org.apache.ratis.protocol.ClientId;\n+import org.apache.ratis.protocol.Message;\n+import org.apache.ratis.protocol.NotLeaderException;\n+import org.apache.ratis.protocol.RaftClientReply;\n+import org.apache.ratis.protocol.RaftClientRequest;\n+import org.apache.ratis.server.RaftServer;\n+import org.apache.ratis.util.TimeDuration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.Closeable;\n+import java.io.IOException;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.CompletionException;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeoutException;\n+import java.util.function.Supplier;\n+\n+/**\n+ * A client to send messages to a raft server with a strategy to attempt sending them locally first.\n+ */\n+public class LocalFirstRaftClient implements Closeable {\n+  private static final Logger LOG = LoggerFactory.getLogger(LocalFirstRaftClient.class);\n+  private final RaftServer mServer;\n+  private final Supplier<RaftClient> mClientSupplier;\n+  private ClientId mClientId;\n+  private volatile RaftClient mClient;\n+\n+  /**\n+   * @param server the local raft server\n+   * @param clientSupplier a function for building a remote raft client\n+   * @param clientId the client id\n+   */\n+  public LocalFirstRaftClient(RaftServer server, Supplier<RaftClient> clientSupplier,\n+      ClientId clientId) {\n+    mServer = server;\n+    mClientSupplier = clientSupplier;\n+    mClientId = clientId;\n+  }\n+\n+  /**\n+   * Sends a request to raft server asynchronously.\n+   * @param message the message to send\n+   * @param timeout the time duration to wait before giving up on the request\n+   * @return a future of the server reply\n+   * @throws IOException if an exception occured while sending the request\n+   */\n+  public CompletableFuture<RaftClientReply> sendAsync(Message message,\n+      TimeDuration timeout) throws IOException {\n+    if (mClient == null) {\n+      return sendLocalRequest(message, timeout);\n+    } else {\n+      return sendRemoteRequest(message);\n+    }\n+  }\n+\n+  private CompletableFuture<RaftClientReply> sendLocalRequest(Message message,\n+      TimeDuration timeout) throws IOException {\n+    return mServer.submitClientRequestAsync(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "269bc24fa60d79d5da8656242c93ece30863d1b7"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2MDExNA==", "bodyText": "Why this is needed?", "url": "https://github.com/Alluxio/alluxio/pull/12174#discussion_r499760114", "createdAt": "2020-10-05T17:30:56Z", "author": {"login": "LuQQiu"}, "path": "core/server/common/src/main/java/alluxio/master/journal/raft/RaftJournalSystem.java", "diffHunk": "@@ -338,6 +338,7 @@ private RaftClient createClient() {\n         .build();\n     return RaftClient.newBuilder()\n         .setRaftGroup(mRaftGroup)\n+        .setClientId(mClientId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "269bc24fa60d79d5da8656242c93ece30863d1b7"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMzAyOTY4", "url": "https://github.com/Alluxio/alluxio/pull/12174#pullrequestreview-502302968", "createdAt": "2020-10-05T18:13:40Z", "commit": {"oid": "269bc24fa60d79d5da8656242c93ece30863d1b7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMzQ3NzI2", "url": "https://github.com/Alluxio/alluxio/pull/12174#pullrequestreview-502347726", "createdAt": "2020-10-05T19:17:08Z", "commit": {"oid": "269bc24fa60d79d5da8656242c93ece30863d1b7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOToxNzowOFrOHcqY1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxOToxNzowOFrOHcqY1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgxNjY2MQ==", "bodyText": "Should this be configurable? I can't tell if 100ms is too short or too long. This means we will retry 10x per second forever? That seems quite frequent.", "url": "https://github.com/Alluxio/alluxio/pull/12174#discussion_r499816661", "createdAt": "2020-10-05T19:17:08Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/journal/raft/RaftJournalSystem.java", "diffHunk": "@@ -525,14 +528,20 @@ private void catchUp(JournalStateMachine stateMachine, RaftClient client)\n       long gainPrimacySN = ThreadLocalRandom.current().nextLong(Long.MIN_VALUE, 0);\n       LOG.info(\"Performing catchup. Last applied SN: {}. Catchup ID: {}\",\n           lastAppliedSN, gainPrimacySN);\n-      CompletableFuture<RaftClientReply> future = client.sendAsync(\n-          toRaftMessage(JournalEntry.newBuilder().setSequenceNumber(gainPrimacySN).build()));\n+      Exception ex;\n       try {\n-        future.get(5, TimeUnit.SECONDS);\n-      } catch (TimeoutException | ExecutionException e) {\n-        client.getClientRpc().handleException(mPeerId,\n-            e instanceof ExecutionException ? e.getCause() : e, true);\n-        LOG.info(\"Exception submitting term start entry: {}\", e.toString());\n+        CompletableFuture<RaftClientReply> future = client.sendAsync(\n+            toRaftMessage(JournalEntry.newBuilder().setSequenceNumber(gainPrimacySN).build()),\n+            TimeDuration.valueOf(5, TimeUnit.SECONDS));\n+        RaftClientReply reply = future.get(5, TimeUnit.SECONDS);\n+        ex = reply.getException();\n+      } catch (TimeoutException | ExecutionException | IOException e) {\n+        ex = e;\n+      }\n+      if (ex != null) {\n+        LOG.info(\"Exception submitting term start entry: {}\", ex.toString());\n+        // avoid excessive retries when server is not ready\n+        Thread.sleep(100);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "269bc24fa60d79d5da8656242c93ece30863d1b7"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDMwMTU2", "url": "https://github.com/Alluxio/alluxio/pull/12174#pullrequestreview-502430156", "createdAt": "2020-10-05T21:21:47Z", "commit": {"oid": "fa52b3735fe5542da20be4defdcb75b3461a9327"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "608657b282e7f7a27ce5639b07bf07646f28c912", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/608657b282e7f7a27ce5639b07bf07646f28c912", "committedDate": "2020-10-05T22:08:03Z", "message": "Use local raft api for journal writer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "393755d45854772085baf21d091b9239cfa2a1ea", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/393755d45854772085baf21d091b9239cfa2a1ea", "committedDate": "2020-10-05T22:08:03Z", "message": "fix checkstyles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c37599509c39273d0954264ba4ff540c2d5ecff0", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/c37599509c39273d0954264ba4ff540c2d5ecff0", "committedDate": "2020-10-05T22:08:04Z", "message": "Allow local journal write to fallback to remote writer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dedc2e1bbd086f68158da3e40f3579a59310b253", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/dedc2e1bbd086f68158da3e40f3579a59310b253", "committedDate": "2020-10-05T22:08:04Z", "message": "prevent switching from remote back to local"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eedac0d6fe86bb9e825c0a40014c741066415aed", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/eedac0d6fe86bb9e825c0a40014c741066415aed", "committedDate": "2020-10-05T22:08:04Z", "message": "Improve timeout handling and retry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c81ef9f1ff0a6ea6edad3e2dc29be5e64f7e7d8f", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/c81ef9f1ff0a6ea6edad3e2dc29be5e64f7e7d8f", "committedDate": "2020-10-05T22:08:04Z", "message": "Minor refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80fd0b799e2458f82d537cafaee4bd6fe36546a2", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/80fd0b799e2458f82d537cafaee4bd6fe36546a2", "committedDate": "2020-10-05T22:08:04Z", "message": "Update comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6762535d90022fac0b33407c194c47df5806adc3", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/6762535d90022fac0b33407c194c47df5806adc3", "committedDate": "2020-10-05T22:08:04Z", "message": "Add some configuration properties"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa52b3735fe5542da20be4defdcb75b3461a9327", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/fa52b3735fe5542da20be4defdcb75b3461a9327", "committedDate": "2020-10-05T19:50:24Z", "message": "Add some configuration properties"}, "afterCommit": {"oid": "6762535d90022fac0b33407c194c47df5806adc3", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/6762535d90022fac0b33407c194c47df5806adc3", "committedDate": "2020-10-05T22:08:04Z", "message": "Add some configuration properties"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3622, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}