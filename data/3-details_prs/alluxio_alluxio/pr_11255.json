{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNjk1NTg1", "number": 11255, "title": "Keep state lock for duration of journal context", "bodyText": "The state change lock should be held for the duration of the RPC, so that when the pause lock is held, there are no outstanding RPCs. This change makes the state change lock to be held during the whole journal context, so that when backups pause the state, it is guaranteed there are no state changes or journal changes in progress.\nFixes #11259", "createdAt": "2020-04-09T23:46:45Z", "url": "https://github.com/Alluxio/alluxio/pull/11255", "merged": true, "mergeCommit": {"oid": "67c4e9680359f1f2434aace3d4347ee07aaf7b7a"}, "closed": true, "closedAt": "2020-04-10T20:15:32Z", "author": {"login": "gpang"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWFWMbgH2gAyNDAxNjk1NTg1OjcyM2MzYWRhODJiYTk2YjcyMDM3YmRhZmRmNWEzMmNlNmUzOWQzMjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWW5EsAFqTM5MTYzNzkwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "723c3ada82ba96b72037bdafdf5a32ce6e39d322", "author": {"user": {"login": "gpang", "name": "Gene Pang"}}, "url": "https://github.com/Alluxio/alluxio/commit/723c3ada82ba96b72037bdafdf5a32ce6e39d322", "committedDate": "2020-04-09T23:46:11Z", "message": "Hold state lock for duration of journal context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7bd1d0215e114fdeeb8086003b546c6c8d5e304", "author": {"user": {"login": "gpang", "name": "Gene Pang"}}, "url": "https://github.com/Alluxio/alluxio/commit/e7bd1d0215e114fdeeb8086003b546c6c8d5e304", "committedDate": "2020-04-10T17:42:59Z", "message": "Add tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTgzNzc1", "url": "https://github.com/Alluxio/alluxio/pull/11255#pullrequestreview-391583775", "createdAt": "2020-04-10T18:09:42Z", "commit": {"oid": "e7bd1d0215e114fdeeb8086003b546c6c8d5e304"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxODowOTo0MlrOGEBzOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxODowOTo0MlrOGEBzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg3Njk4NA==", "bodyText": "Can't we leave the Journal interfaces the same but wrap context here with a forwarder context that holds the lock.\nSo Journal implementations wouldn't need to manage the lock.", "url": "https://github.com/Alluxio/alluxio/pull/11255#discussion_r406876984", "createdAt": "2020-04-10T18:09:42Z", "author": {"login": "ggezer"}, "path": "core/server/common/src/main/java/alluxio/master/AbstractMaster.java", "diffHunk": "@@ -133,12 +132,9 @@ protected ExecutorService getExecutorService() {\n \n   @Override\n   public JournalContext createJournalContext() throws UnavailableException {\n-    // All modifications to journaled state must happen inside of a journal context so that we can\n-    // persist the state change. As a mechanism to allow for state pauses, we acquire the state\n-    // change lock before entering any code paths that could modify journaled state.\n-    try (LockResource l = new LockResource(mMasterContext.stateChangeLock())) {\n-      return mJournal.createJournalContext();\n-    }\n+    // Use the state change lock for the journal context, since all modifications to journaled\n+    // state must happen inside of a journal context.\n+    return mJournal.createJournalContext(mMasterContext.stateChangeLock());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7bd1d0215e114fdeeb8086003b546c6c8d5e304"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ec63f2e415cff5da59a25519961215198c794c8", "author": {"user": {"login": "gpang", "name": "Gene Pang"}}, "url": "https://github.com/Alluxio/alluxio/commit/4ec63f2e415cff5da59a25519961215198c794c8", "committedDate": "2020-04-10T18:58:29Z", "message": "Wrap the journal context"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjMzMTIx", "url": "https://github.com/Alluxio/alluxio/pull/11255#pullrequestreview-391633121", "createdAt": "2020-04-10T20:00:28Z", "commit": {"oid": "4ec63f2e415cff5da59a25519961215198c794c8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDowMDoyOVrOGEEW0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDowMDoyOVrOGEEW0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxODg2NQ==", "bodyText": "why is this synchronized now?", "url": "https://github.com/Alluxio/alluxio/pull/11255#discussion_r406918865", "createdAt": "2020-04-10T20:00:29Z", "author": {"login": "ggezer"}, "path": "core/server/master/src/main/java/alluxio/master/block/DefaultBlockMaster.java", "diffHunk": "@@ -655,11 +655,13 @@ public long getNewContainerId() throws UnavailableException {\n    * @return a {@link JournalEntry} representing the state of the container id generator\n    */\n   private JournalEntry getContainerIdJournalEntry() {\n-    BlockContainerIdGeneratorEntry blockContainerIdGenerator =\n-        BlockContainerIdGeneratorEntry.newBuilder().setNextContainerId(mJournaledNextContainerId)\n-            .build();\n-    return JournalEntry.newBuilder().setBlockContainerIdGenerator(blockContainerIdGenerator)\n-        .build();\n+    synchronized (mBlockContainerIdGenerator) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ec63f2e415cff5da59a25519961215198c794c8"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjM3OTAw", "url": "https://github.com/Alluxio/alluxio/pull/11255#pullrequestreview-391637900", "createdAt": "2020-04-10T20:12:30Z", "commit": {"oid": "4ec63f2e415cff5da59a25519961215198c794c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDoxMjozMVrOGEEmig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDoxMjozMVrOGEEmig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkyMjg5MA==", "bodyText": "O, I think this is strictly more correct, since mJournaledNextContainerId is protected by mBlockContainerIdGenerator.", "url": "https://github.com/Alluxio/alluxio/pull/11255#discussion_r406922890", "createdAt": "2020-04-10T20:12:31Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/block/DefaultBlockMaster.java", "diffHunk": "@@ -655,11 +655,13 @@ public long getNewContainerId() throws UnavailableException {\n    * @return a {@link JournalEntry} representing the state of the container id generator\n    */\n   private JournalEntry getContainerIdJournalEntry() {\n-    BlockContainerIdGeneratorEntry blockContainerIdGenerator =\n-        BlockContainerIdGeneratorEntry.newBuilder().setNextContainerId(mJournaledNextContainerId)\n-            .build();\n-    return JournalEntry.newBuilder().setBlockContainerIdGenerator(blockContainerIdGenerator)\n-        .build();\n+    synchronized (mBlockContainerIdGenerator) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkxODg2NQ=="}, "originalCommit": {"oid": "4ec63f2e415cff5da59a25519961215198c794c8"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4735, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}