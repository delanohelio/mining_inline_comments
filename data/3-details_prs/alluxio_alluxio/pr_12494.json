{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5OTU3MzIw", "number": 12494, "title": "[DOCFIX] Add flink doc back", "bodyText": "The Flink documentation was removed a while ago\nEN version was lost in 7c59f07 It was not moved to a new address, presumably lost in the doc structure refactor. The history and intention of that commit has lost track.\nCN version was removed in 9cb40db#diff-4f1b02166fb51e7e45ddba897b5926d53bdc5cda08d0a76629a04e1075fdadd5 In order to keep in sync with the EN doc.\nThis change intends to bring the Flink doc back. Please note that this change does not attempt to keep the Flink doc up-to-date with the current Alluxio. That will be done in a separate PR.", "createdAt": "2020-11-12T15:19:56Z", "url": "https://github.com/Alluxio/alluxio/pull/12494", "merged": true, "mergeCommit": {"oid": "656c02d093702a400b46173281ddd925e955466d"}, "closed": true, "closedAt": "2020-11-25T17:54:39Z", "author": {"login": "jiacheliu3"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdb0FYgAH2gAyNTE5OTU3MzIwOjM3YTIwMzVhZTVjMzM0MTg1ZTBmZGMxMGUwYzgwMmZlNmM5YjcwMmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdd4x95AH2gAyNTE5OTU3MzIwOmQxNTViYjhiNGFmNmE2Nzc1MWY2Mzk0M2ZmYzgxOGFlZjc5OGNhYzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "37a2035ae5c334185e0fdc10e0c802fe6c9b702f", "author": {"user": {"login": "jiacheliu3", "name": "Jiacheng Liu"}}, "url": "https://github.com/Alluxio/alluxio/commit/37a2035ae5c334185e0fdc10e0c802fe6c9b702f", "committedDate": "2020-11-12T15:14:08Z", "message": "add flink doc back"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c582d2d6e1fe9bd3f3144e7b79b698c9a02436f", "author": {"user": {"login": "jiacheliu3", "name": "Jiacheng Liu"}}, "url": "https://github.com/Alluxio/alluxio/commit/4c582d2d6e1fe9bd3f3144e7b79b698c9a02436f", "committedDate": "2020-11-13T02:23:57Z", "message": "update group reference"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODUyNDk4", "url": "https://github.com/Alluxio/alluxio/pull/12494#pullrequestreview-533852498", "createdAt": "2020-11-18T20:33:39Z", "commit": {"oid": "4c582d2d6e1fe9bd3f3144e7b79b698c9a02436f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODUyODA4", "url": "https://github.com/Alluxio/alluxio/pull/12494#pullrequestreview-533852808", "createdAt": "2020-11-18T20:34:05Z", "commit": {"oid": "4c582d2d6e1fe9bd3f3144e7b79b698c9a02436f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozNDowNlrOH2BEfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozNDowNlrOH2BEfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMjY4Ng==", "bodyText": "bash -> console?", "url": "https://github.com/Alluxio/alluxio/pull/12494#discussion_r526402686", "createdAt": "2020-11-18T20:34:06Z", "author": {"login": "apc999"}, "path": "docs/en/compute/Flink.md", "diffHunk": "@@ -0,0 +1,121 @@\n+---\n+layout: global\n+title: Running Apache Flink on Alluxio\n+nickname: Apache Flink\n+group: Compute Integrations\n+priority: 2\n+---\n+\n+* Table of Contents\n+{:toc}\n+\n+This guide describes how to get Alluxio running with [Apache Flink](http://flink.apache.org/), so\n+that you can easily work with files stored in Alluxio.\n+\n+## Prerequisites\n+\n+The prerequisite for this part is that you have\n+[Java](Java-Setup.html). We also assume that you have set up\n+Alluxio in accordance to these guides [Local Mode](Running-Alluxio-Locally.html) or\n+[Cluster Mode](Running-Alluxio-on-a-Cluster.html).\n+\n+Please find the guides for setting up Flink on the Apache Flink [website](http://flink.apache.org/).\n+\n+## Configuration\n+\n+Apache Flink allows to use Alluxio through a generic file system wrapper for the Hadoop file system.\n+Therefore, the configuration of Alluxio is done mostly in Hadoop configuration files.\n+\n+### Set property in `core-site.xml`\n+\n+If you have a Hadoop setup next to the Flink installation, add the following property to the\n+`core-site.xml` configuration file:\n+\n+```xml\n+<property>\n+  <name>fs.alluxio.impl</name>\n+  <value>alluxio.hadoop.FileSystem</value>\n+</property>\n+```\n+\n+In case you don't have a Hadoop setup, you have to create a file called `core-site.xml` with the\n+following contents:\n+\n+```xml\n+<configuration>\n+  <property>\n+    <name>fs.alluxio.impl</name>\n+    <value>alluxio.hadoop.FileSystem</value>\n+  </property>\n+</configuration>\n+```\n+\n+### Specify path to `core-site.xml` in `conf/flink-conf.yaml`\n+\n+Next, you have to specify the path to the Hadoop configuration in Flink. Open the\n+`conf/flink-conf.yaml` file in the Flink root directory and set the `fs.hdfs.hadoopconf`\n+configuration value to the **directory** containing the `core-site.xml`. (For newer Hadoop versions,\n+the directory usually ends with `etc/hadoop`.)\n+\n+### Distribute the Alluxio Client Jar\n+\n+In order to communicate with Alluxio, we need to provide Flink programs with the Alluxio Core Client\n+jar. We recommend you to download the tarball from\n+Alluxio [download page](http://www.alluxio.org/download).\n+Alternatively, advanced users can choose to compile this client jar from the source code\n+by following Follow the instructs [here](Building-Alluxio-From-Source.html#compute-framework-support).\n+The Alluxio client jar can be found at `{{site.ALLUXIO_CLIENT_JAR_PATH}}`.\n+\n+We need to make the Alluxio `jar` file available to Flink, because it contains the configured\n+`alluxio.hadoop.FileSystem` class.\n+\n+There are different ways to achieve that:\n+\n+- Put the `{{site.ALLUXIO_CLIENT_JAR_PATH}}` file into the `lib` directory of Flink (for local and\n+standalone cluster setups)\n+- Put the `{{site.ALLUXIO_CLIENT_JAR_PATH}}` file into the `ship` directory for Flink on YARN.\n+- Specify the location of the jar file in the `HADOOP_CLASSPATH` environment variable (make sure its\n+available on all cluster nodes as well). For example like this:\n+\n+```bash\n+$ export HADOOP_CLASSPATH={{site.ALLUXIO_CLIENT_JAR_PATH}}\n+```\n+\n+### Translate additional Alluxio site properties to Flink\n+\n+In addition, if there are any client-related properties specified in `conf/alluxio-site.properties`,\n+translate those to `env.java.opts` in `{FLINK_HOME}/conf/flink-conf.yaml` for Flink to pick up\n+Alluxio configuration. For example, if you want to configure Alluxio client to use CACHE_THROUGH as\n+the write type, you should add the following to `{FLINK_HOME}/conf/flink-conf.yaml`.\n+\n+```yaml\n+env.java.opts: -Dalluxio.user.file.writetype.default=CACHE_THROUGH\n+```\n+\n+## Using Alluxio with Flink\n+\n+To use Alluxio with Flink, just specify paths with the `alluxio://` scheme.\n+\n+If Alluxio is installed locally, a valid path would look like this\n+`alluxio://localhost:19998/user/hduser/gutenberg`.\n+\n+### Wordcount Example\n+\n+This example assumes you have set up Alluxio and Flink as previously described.\n+\n+Put the file `LICENSE` into Alluxio, assuming you are in the top level Alluxio project directory:\n+\n+```bash", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c582d2d6e1fe9bd3f3144e7b79b698c9a02436f"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODUyOTA5", "url": "https://github.com/Alluxio/alluxio/pull/12494#pullrequestreview-533852909", "createdAt": "2020-11-18T20:34:13Z", "commit": {"oid": "4c582d2d6e1fe9bd3f3144e7b79b698c9a02436f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozNDoxM1rOH2BEvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozNDoxM1rOH2BEvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMjc1MA==", "bodyText": "same here", "url": "https://github.com/Alluxio/alluxio/pull/12494#discussion_r526402750", "createdAt": "2020-11-18T20:34:13Z", "author": {"login": "apc999"}, "path": "docs/en/compute/Flink.md", "diffHunk": "@@ -0,0 +1,121 @@\n+---\n+layout: global\n+title: Running Apache Flink on Alluxio\n+nickname: Apache Flink\n+group: Compute Integrations\n+priority: 2\n+---\n+\n+* Table of Contents\n+{:toc}\n+\n+This guide describes how to get Alluxio running with [Apache Flink](http://flink.apache.org/), so\n+that you can easily work with files stored in Alluxio.\n+\n+## Prerequisites\n+\n+The prerequisite for this part is that you have\n+[Java](Java-Setup.html). We also assume that you have set up\n+Alluxio in accordance to these guides [Local Mode](Running-Alluxio-Locally.html) or\n+[Cluster Mode](Running-Alluxio-on-a-Cluster.html).\n+\n+Please find the guides for setting up Flink on the Apache Flink [website](http://flink.apache.org/).\n+\n+## Configuration\n+\n+Apache Flink allows to use Alluxio through a generic file system wrapper for the Hadoop file system.\n+Therefore, the configuration of Alluxio is done mostly in Hadoop configuration files.\n+\n+### Set property in `core-site.xml`\n+\n+If you have a Hadoop setup next to the Flink installation, add the following property to the\n+`core-site.xml` configuration file:\n+\n+```xml\n+<property>\n+  <name>fs.alluxio.impl</name>\n+  <value>alluxio.hadoop.FileSystem</value>\n+</property>\n+```\n+\n+In case you don't have a Hadoop setup, you have to create a file called `core-site.xml` with the\n+following contents:\n+\n+```xml\n+<configuration>\n+  <property>\n+    <name>fs.alluxio.impl</name>\n+    <value>alluxio.hadoop.FileSystem</value>\n+  </property>\n+</configuration>\n+```\n+\n+### Specify path to `core-site.xml` in `conf/flink-conf.yaml`\n+\n+Next, you have to specify the path to the Hadoop configuration in Flink. Open the\n+`conf/flink-conf.yaml` file in the Flink root directory and set the `fs.hdfs.hadoopconf`\n+configuration value to the **directory** containing the `core-site.xml`. (For newer Hadoop versions,\n+the directory usually ends with `etc/hadoop`.)\n+\n+### Distribute the Alluxio Client Jar\n+\n+In order to communicate with Alluxio, we need to provide Flink programs with the Alluxio Core Client\n+jar. We recommend you to download the tarball from\n+Alluxio [download page](http://www.alluxio.org/download).\n+Alternatively, advanced users can choose to compile this client jar from the source code\n+by following Follow the instructs [here](Building-Alluxio-From-Source.html#compute-framework-support).\n+The Alluxio client jar can be found at `{{site.ALLUXIO_CLIENT_JAR_PATH}}`.\n+\n+We need to make the Alluxio `jar` file available to Flink, because it contains the configured\n+`alluxio.hadoop.FileSystem` class.\n+\n+There are different ways to achieve that:\n+\n+- Put the `{{site.ALLUXIO_CLIENT_JAR_PATH}}` file into the `lib` directory of Flink (for local and\n+standalone cluster setups)\n+- Put the `{{site.ALLUXIO_CLIENT_JAR_PATH}}` file into the `ship` directory for Flink on YARN.\n+- Specify the location of the jar file in the `HADOOP_CLASSPATH` environment variable (make sure its\n+available on all cluster nodes as well). For example like this:\n+\n+```bash\n+$ export HADOOP_CLASSPATH={{site.ALLUXIO_CLIENT_JAR_PATH}}\n+```\n+\n+### Translate additional Alluxio site properties to Flink\n+\n+In addition, if there are any client-related properties specified in `conf/alluxio-site.properties`,\n+translate those to `env.java.opts` in `{FLINK_HOME}/conf/flink-conf.yaml` for Flink to pick up\n+Alluxio configuration. For example, if you want to configure Alluxio client to use CACHE_THROUGH as\n+the write type, you should add the following to `{FLINK_HOME}/conf/flink-conf.yaml`.\n+\n+```yaml\n+env.java.opts: -Dalluxio.user.file.writetype.default=CACHE_THROUGH\n+```\n+\n+## Using Alluxio with Flink\n+\n+To use Alluxio with Flink, just specify paths with the `alluxio://` scheme.\n+\n+If Alluxio is installed locally, a valid path would look like this\n+`alluxio://localhost:19998/user/hduser/gutenberg`.\n+\n+### Wordcount Example\n+\n+This example assumes you have set up Alluxio and Flink as previously described.\n+\n+Put the file `LICENSE` into Alluxio, assuming you are in the top level Alluxio project directory:\n+\n+```bash\n+$ bin/alluxio fs copyFromLocal LICENSE alluxio://localhost:19998/LICENSE\n+```\n+\n+Run the following command from the top level Flink project directory:\n+\n+```bash", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c582d2d6e1fe9bd3f3144e7b79b698c9a02436f"}, "originalPosition": 114}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2450c5023eba8f68a288977814f4819e6ea1fd4", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/e2450c5023eba8f68a288977814f4819e6ea1fd4", "committedDate": "2020-11-18T21:57:32Z", "message": "Update Flink.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0acf2add1de247aa5098d81156638de97054aab1", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/0acf2add1de247aa5098d81156638de97054aab1", "committedDate": "2020-11-18T21:59:13Z", "message": "Update Flink.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d155bb8b4af6a67751f63943ffc818aef798cac6", "author": {"user": {"login": "jiacheliu3", "name": "Jiacheng Liu"}}, "url": "https://github.com/Alluxio/alluxio/commit/d155bb8b4af6a67751f63943ffc818aef798cac6", "committedDate": "2020-11-19T01:50:18Z", "message": "bash -> console"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3432, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}