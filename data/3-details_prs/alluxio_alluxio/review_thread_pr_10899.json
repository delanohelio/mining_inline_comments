{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTA4MzEy", "number": 10899, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMjowMjozNFrODfWR8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyMjowNVrODfqyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTk3NDg4OnYy", "diffSide": "RIGHT", "path": "underfs/wasb/src/main/java/alluxio/underfs/wasb/WasbUnderFileSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMjowMjozNFrOFpAK9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMjoyMDozOVrOFpAp3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUzODc0MQ==", "bodyText": "isWasb doesn't seem very clear to me. Do you think something like isSecure might be easier to understand? - If so, you'd also have to flip the logic for the conditional below", "url": "https://github.com/Alluxio/alluxio/pull/10899#discussion_r378538741", "createdAt": "2020-02-12T22:02:34Z", "author": {"login": "ZacBlanco"}, "path": "underfs/wasb/src/main/java/alluxio/underfs/wasb/WasbUnderFileSystem.java", "diffHunk": "@@ -36,15 +38,18 @@\n   private static final Logger LOG = LoggerFactory.getLogger(WasbUnderFileSystem.class);\n \n   /** Constant for the wasb URI scheme. */\n-  public static final String SCHEME = \"wasb://\";\n+  public static final List<String> SCHEMES = Stream.of(\"wasb://\", \"wasbs://\")\n+          .collect(Collectors.toList());\n \n   /**\n    * Prepares the configuration for this Wasb as an HDFS configuration.\n    *\n    * @param conf the configuration for this UFS\n+   * @param isWasb whether to use wasb configuration or not\n    * @return the created configuration\n    */\n-  public static Configuration createConfiguration(UnderFileSystemConfiguration conf) {\n+  public static Configuration createConfiguration(UnderFileSystemConfiguration conf,\n+          Boolean isWasb) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2432b2f246c94192c3066b66bde4fed67119fe47"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU0NjY1Mg==", "bodyText": "Sure, I have changed this flag to isSecure.", "url": "https://github.com/Alluxio/alluxio/pull/10899#discussion_r378546652", "createdAt": "2020-02-12T22:20:39Z", "author": {"login": "imiller31"}, "path": "underfs/wasb/src/main/java/alluxio/underfs/wasb/WasbUnderFileSystem.java", "diffHunk": "@@ -36,15 +38,18 @@\n   private static final Logger LOG = LoggerFactory.getLogger(WasbUnderFileSystem.class);\n \n   /** Constant for the wasb URI scheme. */\n-  public static final String SCHEME = \"wasb://\";\n+  public static final List<String> SCHEMES = Stream.of(\"wasb://\", \"wasbs://\")\n+          .collect(Collectors.toList());\n \n   /**\n    * Prepares the configuration for this Wasb as an HDFS configuration.\n    *\n    * @param conf the configuration for this UFS\n+   * @param isWasb whether to use wasb configuration or not\n    * @return the created configuration\n    */\n-  public static Configuration createConfiguration(UnderFileSystemConfiguration conf) {\n+  public static Configuration createConfiguration(UnderFileSystemConfiguration conf,\n+          Boolean isWasb) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUzODc0MQ=="}, "originalCommit": {"oid": "2432b2f246c94192c3066b66bde4fed67119fe47"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTMyODcwOnYy", "diffSide": "RIGHT", "path": "underfs/wasb/src/main/java/alluxio/underfs/wasb/WasbUnderFileSystem.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyMDozMVrOFpgbbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMToxMDo1OVrOFpjqyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NzI0Ng==", "bodyText": "Does this not have to be \"fs.AbstractFileSystem.wasbs.impl\"?", "url": "https://github.com/Alluxio/alluxio/pull/10899#discussion_r379067246", "createdAt": "2020-02-13T19:20:31Z", "author": {"login": "gpang"}, "path": "underfs/wasb/src/main/java/alluxio/underfs/wasb/WasbUnderFileSystem.java", "diffHunk": "@@ -53,8 +58,13 @@ public static Configuration createConfiguration(UnderFileSystemConfiguration con\n         wasbConf.set(key, value);\n       }\n     }\n-    wasbConf.set(\"fs.AbstractFileSystem.wasb.impl\", \"org.apache.hadoop.fs.azure.Wasb\");\n-    wasbConf.set(\"fs.wasb.impl\", \"org.apache.hadoop.fs.azure.NativeAzureFileSystem\");\n+    if (isSecure) {\n+      wasbConf.set(\"fs.AbstractFileSystem.wasb.impl\", \"org.apache.hadoop.fs.azure.Wasbs\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8064122f3ebabd7559e12cd1b365a168f31d4e67"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3MDc0Mw==", "bodyText": "Yes this should be, that is a good catch. Strange that wasbs worked correctly in my testing.", "url": "https://github.com/Alluxio/alluxio/pull/10899#discussion_r379070743", "createdAt": "2020-02-13T19:26:34Z", "author": {"login": "imiller31"}, "path": "underfs/wasb/src/main/java/alluxio/underfs/wasb/WasbUnderFileSystem.java", "diffHunk": "@@ -53,8 +58,13 @@ public static Configuration createConfiguration(UnderFileSystemConfiguration con\n         wasbConf.set(key, value);\n       }\n     }\n-    wasbConf.set(\"fs.AbstractFileSystem.wasb.impl\", \"org.apache.hadoop.fs.azure.Wasb\");\n-    wasbConf.set(\"fs.wasb.impl\", \"org.apache.hadoop.fs.azure.NativeAzureFileSystem\");\n+    if (isSecure) {\n+      wasbConf.set(\"fs.AbstractFileSystem.wasb.impl\", \"org.apache.hadoop.fs.azure.Wasbs\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NzI0Ng=="}, "originalCommit": {"oid": "8064122f3ebabd7559e12cd1b365a168f31d4e67"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyMDMzMA==", "bodyText": "I've validated the new code works on a k8s installation. Resolving.", "url": "https://github.com/Alluxio/alluxio/pull/10899#discussion_r379120330", "createdAt": "2020-02-13T21:10:59Z", "author": {"login": "imiller31"}, "path": "underfs/wasb/src/main/java/alluxio/underfs/wasb/WasbUnderFileSystem.java", "diffHunk": "@@ -53,8 +58,13 @@ public static Configuration createConfiguration(UnderFileSystemConfiguration con\n         wasbConf.set(key, value);\n       }\n     }\n-    wasbConf.set(\"fs.AbstractFileSystem.wasb.impl\", \"org.apache.hadoop.fs.azure.Wasb\");\n-    wasbConf.set(\"fs.wasb.impl\", \"org.apache.hadoop.fs.azure.NativeAzureFileSystem\");\n+    if (isSecure) {\n+      wasbConf.set(\"fs.AbstractFileSystem.wasb.impl\", \"org.apache.hadoop.fs.azure.Wasbs\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NzI0Ng=="}, "originalCommit": {"oid": "8064122f3ebabd7559e12cd1b365a168f31d4e67"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTMzNDI0OnYy", "diffSide": "RIGHT", "path": "underfs/wasb/src/main/java/alluxio/underfs/wasb/WasbUnderFileSystem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyMjowNVrOFpgexA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMToxMToyMFrOFpjrYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2ODEwMA==", "bodyText": "Shouldn't this be startsWith(\"wasbs://\")?\nInstead, can we have 2 other constants, like SCHEME_SECURE=\"wasbs://\", and SCHEME_INSECURE=\"wasb://\"?", "url": "https://github.com/Alluxio/alluxio/pull/10899#discussion_r379068100", "createdAt": "2020-02-13T19:22:05Z", "author": {"login": "gpang"}, "path": "underfs/wasb/src/main/java/alluxio/underfs/wasb/WasbUnderFileSystem.java", "diffHunk": "@@ -67,7 +77,7 @@ public static Configuration createConfiguration(UnderFileSystemConfiguration con\n    */\n   public static WasbUnderFileSystem createInstance(AlluxioURI uri,\n       UnderFileSystemConfiguration conf) {\n-    Configuration wasbConf = createConfiguration(conf);\n+    Configuration wasbConf = createConfiguration(conf, uri.getScheme().startsWith(\"wasb://\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8064122f3ebabd7559e12cd1b365a168f31d4e67"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEyMDQ4Mg==", "bodyText": "Changed and verified", "url": "https://github.com/Alluxio/alluxio/pull/10899#discussion_r379120482", "createdAt": "2020-02-13T21:11:20Z", "author": {"login": "imiller31"}, "path": "underfs/wasb/src/main/java/alluxio/underfs/wasb/WasbUnderFileSystem.java", "diffHunk": "@@ -67,7 +77,7 @@ public static Configuration createConfiguration(UnderFileSystemConfiguration con\n    */\n   public static WasbUnderFileSystem createInstance(AlluxioURI uri,\n       UnderFileSystemConfiguration conf) {\n-    Configuration wasbConf = createConfiguration(conf);\n+    Configuration wasbConf = createConfiguration(conf, uri.getScheme().startsWith(\"wasb://\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2ODEwMA=="}, "originalCommit": {"oid": "8064122f3ebabd7559e12cd1b365a168f31d4e67"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2023, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}