{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2Nzk2Mjgz", "number": 11596, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo1MDo1N1rOEG77ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo1NjoyMVrOEG7_jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzA4ODY3OnYy", "diffSide": "RIGHT", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo1MDo1N1rOGmCqWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoyNzoxMlrOGmDTFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MjY4Mw==", "bodyText": "can this be something like partitions.addAll(getPartitionsResult.getPartitions()?", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442542683", "createdAt": "2020-06-18T22:50:57Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -377,15 +378,26 @@ public UdbTable getTable(String tableName) throws IOException {\n \n   private List<Partition> batchGetPartitions(AWSGlueAsync glueClient, String tableName)\n       throws IOException {\n+    // TODO(shouwei): make getPartition multi-thread to accelerate the large table fetching\n     List<Partition> partitions = new ArrayList<>();\n+    String nextToken = null;\n     try {\n-      GetPartitionsRequest getPartitionsRequest =\n-          new GetPartitionsRequest()\n-              .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n-              .withDatabaseName(mGlueDbName)\n-              .withTableName(tableName);\n-      if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n-        partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+      do {\n+        GetPartitionsRequest getPartitionsRequest =\n+            new GetPartitionsRequest()\n+                .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n+                .withDatabaseName(mGlueDbName)\n+                .withTableName(tableName)\n+                .withMaxResults(mGlueConfiguration.getInt(Property.MAX_GLUE_FETCH_PARTITIONS))\n+                .withNextToken(nextToken);\n+        GetPartitionsResult getPartitionsResult = glueClient.getPartitions(getPartitionsRequest);\n+        getPartitionsResult.getPartitions().forEach(partition -> partitions.add(partition));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1MzExMQ==", "bodyText": "changed.", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442553111", "createdAt": "2020-06-18T23:27:12Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -377,15 +378,26 @@ public UdbTable getTable(String tableName) throws IOException {\n \n   private List<Partition> batchGetPartitions(AWSGlueAsync glueClient, String tableName)\n       throws IOException {\n+    // TODO(shouwei): make getPartition multi-thread to accelerate the large table fetching\n     List<Partition> partitions = new ArrayList<>();\n+    String nextToken = null;\n     try {\n-      GetPartitionsRequest getPartitionsRequest =\n-          new GetPartitionsRequest()\n-              .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n-              .withDatabaseName(mGlueDbName)\n-              .withTableName(tableName);\n-      if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n-        partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+      do {\n+        GetPartitionsRequest getPartitionsRequest =\n+            new GetPartitionsRequest()\n+                .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n+                .withDatabaseName(mGlueDbName)\n+                .withTableName(tableName)\n+                .withMaxResults(mGlueConfiguration.getInt(Property.MAX_GLUE_FETCH_PARTITIONS))\n+                .withNextToken(nextToken);\n+        GetPartitionsResult getPartitionsResult = glueClient.getPartitions(getPartitionsRequest);\n+        getPartitionsResult.getPartitions().forEach(partition -> partitions.add(partition));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MjY4Mw=="}, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzA5MDE3OnYy", "diffSide": "RIGHT", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo1MTo0OVrOGmCrUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzo0OToyMlrOGmDsmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MjkzMA==", "bodyText": "should this be getPartitionsResult.getPartitions().size() instead of partitions.size()?", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442542930", "createdAt": "2020-06-18T22:51:49Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -377,15 +378,26 @@ public UdbTable getTable(String tableName) throws IOException {\n \n   private List<Partition> batchGetPartitions(AWSGlueAsync glueClient, String tableName)\n       throws IOException {\n+    // TODO(shouwei): make getPartition multi-thread to accelerate the large table fetching\n     List<Partition> partitions = new ArrayList<>();\n+    String nextToken = null;\n     try {\n-      GetPartitionsRequest getPartitionsRequest =\n-          new GetPartitionsRequest()\n-              .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n-              .withDatabaseName(mGlueDbName)\n-              .withTableName(tableName);\n-      if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n-        partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+      do {\n+        GetPartitionsRequest getPartitionsRequest =\n+            new GetPartitionsRequest()\n+                .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n+                .withDatabaseName(mGlueDbName)\n+                .withTableName(tableName)\n+                .withMaxResults(mGlueConfiguration.getInt(Property.MAX_GLUE_FETCH_PARTITIONS))\n+                .withNextToken(nextToken);\n+        GetPartitionsResult getPartitionsResult = glueClient.getPartitions(getPartitionsRequest);\n+        getPartitionsResult.getPartitions().forEach(partition -> partitions.add(partition));\n+        nextToken = getPartitionsResult.getNextToken();\n+        LOG.debug(\"Glue table {}.{} added {} partitions.\",\n+            mGlueDbName, tableName, partitions.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1MTc0Ng==", "bodyText": "It allows us to track the progress of getPartitions. Is it better to show the total added partitions for the current table?", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442551746", "createdAt": "2020-06-18T23:22:22Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -377,15 +378,26 @@ public UdbTable getTable(String tableName) throws IOException {\n \n   private List<Partition> batchGetPartitions(AWSGlueAsync glueClient, String tableName)\n       throws IOException {\n+    // TODO(shouwei): make getPartition multi-thread to accelerate the large table fetching\n     List<Partition> partitions = new ArrayList<>();\n+    String nextToken = null;\n     try {\n-      GetPartitionsRequest getPartitionsRequest =\n-          new GetPartitionsRequest()\n-              .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n-              .withDatabaseName(mGlueDbName)\n-              .withTableName(tableName);\n-      if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n-        partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+      do {\n+        GetPartitionsRequest getPartitionsRequest =\n+            new GetPartitionsRequest()\n+                .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n+                .withDatabaseName(mGlueDbName)\n+                .withTableName(tableName)\n+                .withMaxResults(mGlueConfiguration.getInt(Property.MAX_GLUE_FETCH_PARTITIONS))\n+                .withNextToken(nextToken);\n+        GetPartitionsResult getPartitionsResult = glueClient.getPartitions(getPartitionsRequest);\n+        getPartitionsResult.getPartitions().forEach(partition -> partitions.add(partition));\n+        nextToken = getPartitionsResult.getNextToken();\n+        LOG.debug(\"Glue table {}.{} added {} partitions.\",\n+            mGlueDbName, tableName, partitions.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MjkzMA=="}, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1ODEwMg==", "bodyText": "I think both can be useful. How about something like \"Glue table {}.{} adding {} batch partitions with {} total partitions.\"", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442558102", "createdAt": "2020-06-18T23:43:55Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -377,15 +378,26 @@ public UdbTable getTable(String tableName) throws IOException {\n \n   private List<Partition> batchGetPartitions(AWSGlueAsync glueClient, String tableName)\n       throws IOException {\n+    // TODO(shouwei): make getPartition multi-thread to accelerate the large table fetching\n     List<Partition> partitions = new ArrayList<>();\n+    String nextToken = null;\n     try {\n-      GetPartitionsRequest getPartitionsRequest =\n-          new GetPartitionsRequest()\n-              .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n-              .withDatabaseName(mGlueDbName)\n-              .withTableName(tableName);\n-      if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n-        partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+      do {\n+        GetPartitionsRequest getPartitionsRequest =\n+            new GetPartitionsRequest()\n+                .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n+                .withDatabaseName(mGlueDbName)\n+                .withTableName(tableName)\n+                .withMaxResults(mGlueConfiguration.getInt(Property.MAX_GLUE_FETCH_PARTITIONS))\n+                .withNextToken(nextToken);\n+        GetPartitionsResult getPartitionsResult = glueClient.getPartitions(getPartitionsRequest);\n+        getPartitionsResult.getPartitions().forEach(partition -> partitions.add(partition));\n+        nextToken = getPartitionsResult.getNextToken();\n+        LOG.debug(\"Glue table {}.{} added {} partitions.\",\n+            mGlueDbName, tableName, partitions.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MjkzMA=="}, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1OTY0Mg==", "bodyText": "yeah, it makes sense, I can add both of them.", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442559642", "createdAt": "2020-06-18T23:49:22Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -377,15 +378,26 @@ public UdbTable getTable(String tableName) throws IOException {\n \n   private List<Partition> batchGetPartitions(AWSGlueAsync glueClient, String tableName)\n       throws IOException {\n+    // TODO(shouwei): make getPartition multi-thread to accelerate the large table fetching\n     List<Partition> partitions = new ArrayList<>();\n+    String nextToken = null;\n     try {\n-      GetPartitionsRequest getPartitionsRequest =\n-          new GetPartitionsRequest()\n-              .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n-              .withDatabaseName(mGlueDbName)\n-              .withTableName(tableName);\n-      if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n-        partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+      do {\n+        GetPartitionsRequest getPartitionsRequest =\n+            new GetPartitionsRequest()\n+                .withCatalogId(mGlueConfiguration.get(Property.CATALOG_ID))\n+                .withDatabaseName(mGlueDbName)\n+                .withTableName(tableName)\n+                .withMaxResults(mGlueConfiguration.getInt(Property.MAX_GLUE_FETCH_PARTITIONS))\n+                .withNextToken(nextToken);\n+        GetPartitionsResult getPartitionsResult = glueClient.getPartitions(getPartitionsRequest);\n+        getPartitionsResult.getPartitions().forEach(partition -> partitions.add(partition));\n+        nextToken = getPartitionsResult.getNextToken();\n+        LOG.debug(\"Glue table {}.{} added {} partitions.\",\n+            mGlueDbName, tableName, partitions.size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MjkzMA=="}, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzA5MTk3OnYy", "diffSide": "RIGHT", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/Property.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo1MjozOVrOGmCsYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMDowMTozNlrOGmD5JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MzIwMQ==", "bodyText": "Is this large enough? Do you know if we can make this larger while still allowing it to return the correct amount?", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442543201", "createdAt": "2020-06-18T22:52:39Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/Property.java", "diffHunk": "@@ -142,11 +142,17 @@ public static void unregister(Property Property) {\n           .setDescription(\"The maximum number of connection to glue metastore.\")\n           .build();\n \n+  public static final Property MAX_GLUE_FETCH_PARTITIONS =\n+      new Builder(Name.MAX_GLUE_FETCH_PARTITIONS)\n+          .setDefaultValue(\"256\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1MjYwOQ==", "bodyText": "This value means the maximum number of partitions to return in a single response, from 1 to 1000. 256 should large enough for most cases. I will update the explanation of this property.", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442552609", "createdAt": "2020-06-18T23:25:27Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/Property.java", "diffHunk": "@@ -142,11 +142,17 @@ public static void unregister(Property Property) {\n           .setDescription(\"The maximum number of connection to glue metastore.\")\n           .build();\n \n+  public static final Property MAX_GLUE_FETCH_PARTITIONS =\n+      new Builder(Name.MAX_GLUE_FETCH_PARTITIONS)\n+          .setDefaultValue(\"256\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MzIwMQ=="}, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1NzQyNw==", "bodyText": "If we set it to 1000, is it slow? I think setting it larger would be better.", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442557427", "createdAt": "2020-06-18T23:41:36Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/Property.java", "diffHunk": "@@ -142,11 +142,17 @@ public static void unregister(Property Property) {\n           .setDescription(\"The maximum number of connection to glue metastore.\")\n           .build();\n \n+  public static final Property MAX_GLUE_FETCH_PARTITIONS =\n+      new Builder(Name.MAX_GLUE_FETCH_PARTITIONS)\n+          .setDefaultValue(\"256\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MzIwMQ=="}, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1OTU0NQ==", "bodyText": "I don't know the performance difference with an accurate number, but it should has little difference.", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442559545", "createdAt": "2020-06-18T23:49:02Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/Property.java", "diffHunk": "@@ -142,11 +142,17 @@ public static void unregister(Property Property) {\n           .setDescription(\"The maximum number of connection to glue metastore.\")\n           .build();\n \n+  public static final Property MAX_GLUE_FETCH_PARTITIONS =\n+      new Builder(Name.MAX_GLUE_FETCH_PARTITIONS)\n+          .setDefaultValue(\"256\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MzIwMQ=="}, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2MDM2NQ==", "bodyText": "I changed the default value to 512, which should more than enough for most cases.", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442560365", "createdAt": "2020-06-18T23:52:11Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/Property.java", "diffHunk": "@@ -142,11 +142,17 @@ public static void unregister(Property Property) {\n           .setDescription(\"The maximum number of connection to glue metastore.\")\n           .build();\n \n+  public static final Property MAX_GLUE_FETCH_PARTITIONS =\n+      new Builder(Name.MAX_GLUE_FETCH_PARTITIONS)\n+          .setDefaultValue(\"256\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MzIwMQ=="}, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2Mjg1Mg==", "bodyText": "I changed it to 512, it still only fetch 460 partitions every time, it would not reach the limitation.", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442562852", "createdAt": "2020-06-19T00:01:36Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/Property.java", "diffHunk": "@@ -142,11 +142,17 @@ public static void unregister(Property Property) {\n           .setDescription(\"The maximum number of connection to glue metastore.\")\n           .build();\n \n+  public static final Property MAX_GLUE_FETCH_PARTITIONS =\n+      new Builder(Name.MAX_GLUE_FETCH_PARTITIONS)\n+          .setDefaultValue(\"256\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0MzIwMQ=="}, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzA5ODM3OnYy", "diffSide": "RIGHT", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/Property.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjo1NjoyMVrOGmCwfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMzoyNzowMVrOGmDS3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0NDI1Mw==", "bodyText": "NIT: maybe partitions.fetch.max", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442544253", "createdAt": "2020-06-18T22:56:21Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/Property.java", "diffHunk": "@@ -197,6 +203,7 @@ public String getDefaultValue() {\n   public static final class Name {\n     // AWS Glue related properties\n     public static final String MAX_GLUE_CONNECTION = \"max.connection\";\n+    public static final String MAX_GLUE_FETCH_PARTITIONS = \"max.partitions\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU1MzA1Mg==", "bodyText": "changed.", "url": "https://github.com/Alluxio/alluxio/pull/11596#discussion_r442553052", "createdAt": "2020-06-18T23:27:01Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/Property.java", "diffHunk": "@@ -197,6 +203,7 @@ public String getDefaultValue() {\n   public static final class Name {\n     // AWS Glue related properties\n     public static final String MAX_GLUE_CONNECTION = \"max.connection\";\n+    public static final String MAX_GLUE_FETCH_PARTITIONS = \"max.partitions\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU0NDI1Mw=="}, "originalCommit": {"oid": "bf0ce6c928217de8c628121691288cb37f367d8c"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1485, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}