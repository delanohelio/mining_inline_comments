{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MjY4ODk1", "number": 11592, "title": "Add a state-lock call-tracker for detecting interrupt-cycles", "bodyText": "This change introduces a new FSM call-tracker that is attached to select recursive APIs (list/setAttributes/setAcl) in order for them to respect a pending backup and bail.", "createdAt": "2020-06-18T06:57:53Z", "url": "https://github.com/Alluxio/alluxio/pull/11592", "merged": true, "mergeCommit": {"oid": "634da729162025903cfe75f13417b2760069685b"}, "closed": true, "closedAt": "2020-06-19T04:06:55Z", "author": {"login": "ggezer"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsY1uMgH2gAyNDM2MjY4ODk1OjAxYjZjY2Y5MDFjMTEwNDdlMzdjZDQzZTBjMWU2OWVlNzExYTc5Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsn7QJAFqTQzMzczMDIxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "01b6ccf901c11047e37cd43e0c1e69ee711a7927", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/01b6ccf901c11047e37cd43e0c1e69ee711a7927", "committedDate": "2020-06-18T06:55:09Z", "message": "Add a state-lock call-tracker for detecting interrupt-cycles"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNTI2MDY5", "url": "https://github.com/Alluxio/alluxio/pull/11592#pullrequestreview-433526069", "createdAt": "2020-06-18T18:05:34Z", "commit": {"oid": "01b6ccf901c11047e37cd43e0c1e69ee711a7927"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowNTozNVrOGl6gxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODoxNTowOFrOGl605A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwOTE1OQ==", "bodyText": "Can we do this for recursive delete?", "url": "https://github.com/Alluxio/alluxio/pull/11592#discussion_r442409159", "createdAt": "2020-06-18T18:05:35Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -2807,6 +2809,7 @@ public void setAcl(AlluxioURI path, SetAclAction action, List<AclEntry> entries,\n       SetAclContext context)\n       throws FileDoesNotExistException, AccessControlException, InvalidPathException, IOException {\n     Metrics.SET_ACL_OPS.inc();\n+    addFileSystemMasterCallTrackers(context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b6ccf901c11047e37cd43e0c1e69ee711a7927"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQxMDgyMw==", "bodyText": "We should specify the parameter name:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  mCallTrackers.add(Preconditions.checkNotNull(callTracker));\n          \n          \n            \n                  mCallTrackers.add(Preconditions.checkNotNull(callTracker, \"callTracker\"));", "url": "https://github.com/Alluxio/alluxio/pull/11592#discussion_r442410823", "createdAt": "2020-06-18T18:08:35Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/contexts/OperationContext.java", "diffHunk": "@@ -23,41 +29,50 @@\n   // Proto message that is being wrapped\n   private T mOptionsBuilder;\n   // Used to track client call status.\n-  private CallTracker mCallTracker;\n+  private List<CallTracker> mCallTrackers;\n \n   /**\n    * Creates an instance with given proto message.\n    *\n    * @param optionsBuilder Internal proto message builder instance\n    */\n   public OperationContext(T optionsBuilder) {\n-    this(optionsBuilder, null);\n     mOptionsBuilder = optionsBuilder;\n-    mCallTracker = CallTracker.DISABLED_TRACKER;\n+    mCallTrackers = new LinkedList<>();\n   }\n \n   /**\n-   * Creates an instance with given proto message.\n-   *\n-   * @param optionsBuilder Internal proto message builder instance\n-   * @param callTracker client call tracker, or {@code null} if no tracking is desired\n+   * @return underlying proto message instance\n    */\n-  public OperationContext(T optionsBuilder, CallTracker callTracker) {\n-    mOptionsBuilder = optionsBuilder;\n-    mCallTracker = callTracker;\n+  public T getOptions() {\n+    return mOptionsBuilder;\n   }\n \n   /**\n-   * @return underlying proto message instance\n+   * Adds a new call-tracker to this context.\n+   *\n+   * @param callTracker the call tracker\n    */\n-  public T getOptions() {\n-    return mOptionsBuilder;\n+  public void addCallTracker(CallTracker callTracker) {\n+    synchronized (mCallTrackers) {\n+      mCallTrackers.add(Preconditions.checkNotNull(callTracker));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b6ccf901c11047e37cd43e0c1e69ee711a7927"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQxMTI0NQ==", "bodyText": "Why does this throw an Exception, and not just return false?", "url": "https://github.com/Alluxio/alluxio/pull/11592#discussion_r442411245", "createdAt": "2020-06-18T18:09:22Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/contexts/OperationContext.java", "diffHunk": "@@ -23,41 +29,50 @@\n   // Proto message that is being wrapped\n   private T mOptionsBuilder;\n   // Used to track client call status.\n-  private CallTracker mCallTracker;\n+  private List<CallTracker> mCallTrackers;\n \n   /**\n    * Creates an instance with given proto message.\n    *\n    * @param optionsBuilder Internal proto message builder instance\n    */\n   public OperationContext(T optionsBuilder) {\n-    this(optionsBuilder, null);\n     mOptionsBuilder = optionsBuilder;\n-    mCallTracker = CallTracker.DISABLED_TRACKER;\n+    mCallTrackers = new LinkedList<>();\n   }\n \n   /**\n-   * Creates an instance with given proto message.\n-   *\n-   * @param optionsBuilder Internal proto message builder instance\n-   * @param callTracker client call tracker, or {@code null} if no tracking is desired\n+   * @return underlying proto message instance\n    */\n-  public OperationContext(T optionsBuilder, CallTracker callTracker) {\n-    mOptionsBuilder = optionsBuilder;\n-    mCallTracker = callTracker;\n+  public T getOptions() {\n+    return mOptionsBuilder;\n   }\n \n   /**\n-   * @return underlying proto message instance\n+   * Adds a new call-tracker to this context.\n+   *\n+   * @param callTracker the call tracker\n    */\n-  public T getOptions() {\n-    return mOptionsBuilder;\n+  public void addCallTracker(CallTracker callTracker) {\n+    synchronized (mCallTrackers) {\n+      mCallTrackers.add(Preconditions.checkNotNull(callTracker));\n+    }\n   }\n \n   /**\n    * @return {@code true} if the call is cancelled by the client\n    */\n   public boolean isCancelled() {\n-    return mCallTracker.isCancelled();\n+    synchronized (mCallTrackers) {\n+      if (mCallTrackers.isEmpty()) {\n+        throw new IllegalStateException(\"No tracker registered.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b6ccf901c11047e37cd43e0c1e69ee711a7927"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQxMzk3OQ==", "bodyText": "Does this create a new CallTracker each time? Is there a way to have a single instance of the call tracker?", "url": "https://github.com/Alluxio/alluxio/pull/11592#discussion_r442413979", "createdAt": "2020-06-18T18:14:33Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -217,6 +217,15 @@ public LockResource lockExclusive(StateLockOptions lockOptions)\n     });\n   }\n \n+  /**\n+   * Used to generate a call-tracker that knows when an interrupt cycle is active.\n+   *\n+   * @return the call tracker\n+   */\n+  public CallTracker getInterruptCycleTracker() {\n+    return () -> mInterruptCycleRefCount > 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b6ccf901c11047e37cd43e0c1e69ee711a7927"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQxNDMwOA==", "bodyText": "What is preventing us from just adding the tracker to every single context? I thought it is up to the individual rpc to use it or not?", "url": "https://github.com/Alluxio/alluxio/pull/11592#discussion_r442414308", "createdAt": "2020-06-18T18:15:08Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -3535,6 +3539,17 @@ public void stopSync(AlluxioURI syncPoint)\n     return mBlockMaster.getWorkerInfoList();\n   }\n \n+  /**\n+   * Used to augment given context with fsm bound call-trackers\n+   * TODO(ggezer): Call this for each call and filter by a new method annotation (@Tracked).\n+   *\n+   * @param context the operation context\n+   */\n+  private void addFileSystemMasterCallTrackers(OperationContext context) {\n+    // Add state-lock interrupt-cycle call-tracker to given context.\n+    context.addCallTracker(mMasterContext.getStateLockManager().getInterruptCycleTracker());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b6ccf901c11047e37cd43e0c1e69ee711a7927"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd8b5b1361c4af6763807df04e4810ad5f1daf2e", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/bd8b5b1361c4af6763807df04e4810ad5f1daf2e", "committedDate": "2020-06-18T18:27:45Z", "message": "Make ref-count safe to read"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c32d66048e8d457343475d258a1e2f566d39f154", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/c32d66048e8d457343475d258a1e2f566d39f154", "committedDate": "2020-06-18T21:25:11Z", "message": "Reorganize call-tracker around file-system-master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "818711a4ce13989803b58a92507b912695199b17", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/818711a4ce13989803b58a92507b912695199b17", "committedDate": "2020-06-18T21:37:19Z", "message": "Enable call tracking for FSM#remove()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21813e252928250a799789c24ba7576f6d83c8ed", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/21813e252928250a799789c24ba7576f6d83c8ed", "committedDate": "2020-06-18T21:59:36Z", "message": "Exc message refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNjg4MTI2", "url": "https://github.com/Alluxio/alluxio/pull/11592#pullrequestreview-433688126", "createdAt": "2020-06-18T22:26:06Z", "commit": {"oid": "21813e252928250a799789c24ba7576f6d83c8ed"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjoyNjowNlrOGmCL7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjoyNjowNlrOGmCL7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzNDg5Mg==", "bodyText": "This is allowed to be @Nullable, right? We should handle that case.", "url": "https://github.com/Alluxio/alluxio/pull/11592#discussion_r442534892", "createdAt": "2020-06-18T22:26:06Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -4261,6 +4271,11 @@ private void removeBlocks(List<Long> blocks) throws IOException {\n     throw new IOException(\"Failed to remove deleted blocks from block master\", lastThrown);\n   }\n \n+  @Override\n+  public CallTracker composeCallTracker(CallTracker transportTracker) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21813e252928250a799789c24ba7576f6d83c8ed"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e1d8b0559c07b8055dd765012849d722baf6c5a", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/0e1d8b0559c07b8055dd765012849d722baf6c5a", "committedDate": "2020-06-18T22:41:59Z", "message": "remove nullable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "16e3f2a59c0b90e660493cbb68270ae30c1af704", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/16e3f2a59c0b90e660493cbb68270ae30c1af704", "committedDate": "2020-06-18T22:40:53Z", "message": "remove @nullable"}, "afterCommit": {"oid": "0e1d8b0559c07b8055dd765012849d722baf6c5a", "author": {"user": {"login": "ggezer", "name": "G\u00f6kt\u00fcrk Gezer"}}, "url": "https://github.com/Alluxio/alluxio/commit/0e1d8b0559c07b8055dd765012849d722baf6c5a", "committedDate": "2020-06-18T22:41:59Z", "message": "remove nullable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNzMwMjE5", "url": "https://github.com/Alluxio/alluxio/pull/11592#pullrequestreview-433730219", "createdAt": "2020-06-19T00:29:46Z", "commit": {"oid": "0e1d8b0559c07b8055dd765012849d722baf6c5a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4345, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}