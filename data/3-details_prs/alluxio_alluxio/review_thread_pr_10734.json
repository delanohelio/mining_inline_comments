{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMzM1MDI3", "number": 10734, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMTo0NDo0OVrODXqpPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMDoxOTo1NlrODXst6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTQyNTI3OnYy", "diffSide": "RIGHT", "path": "table/server/master/src/main/java/alluxio/master/table/AlluxioCatalog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMTo0NDo0OVrOFdFmwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMTo0NDo0OVrOFdFmwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA0NDg2NQ==", "bodyText": "nit: typo", "url": "https://github.com/Alluxio/alluxio/pull/10734#discussion_r366044865", "createdAt": "2020-01-13T21:44:49Z", "author": {"login": "ZacBlanco"}, "path": "table/server/master/src/main/java/alluxio/master/table/AlluxioCatalog.java", "diffHunk": "@@ -196,6 +196,19 @@ private Table getTableInternal(String dbName, String tableName) throws IOExcepti\n     return new ArrayList<>(mDBs.keySet());\n   }\n \n+  /**\n+   * Get Database by its name.\n+   *\n+   * @param dbName database name\n+   * @return a databae object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43d0eff95d3e224d75f8dd9f1b0f9da4d2a86700"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTY3ODIyOnYy", "diffSide": "RIGHT", "path": "tests/src/test/java/alluxio/server/ft/journal/TableMasterJournalIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzozMDo0NFrOFdIAUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzo0OToyMFrOFdIVEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4NDE3OA==", "bodyText": "won't this stop the rest of the test from being run?", "url": "https://github.com/Alluxio/alluxio/pull/10734#discussion_r366084178", "createdAt": "2020-01-13T23:30:44Z", "author": {"login": "ZacBlanco"}, "path": "tests/src/test/java/alluxio/server/ft/journal/TableMasterJournalIntegrationTest.java", "diffHunk": "@@ -92,8 +96,12 @@ public void journalAttachDb() throws Exception {\n     TableMaster tableMaster =\n         mCluster.getLocalAlluxioMaster().getMasterProcess().getMaster(TableMaster.class);\n \n+    mException.expect(IOException.class);\n+    tableMaster.getDatabase(DB_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69276b7432ebc6b9501d7ca34aa5e12d790de182"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4OTQ5MQ==", "bodyText": "doh.. why aren't we on Junit 5 yet?  I totally misunderstood the semantics of expect", "url": "https://github.com/Alluxio/alluxio/pull/10734#discussion_r366089491", "createdAt": "2020-01-13T23:49:20Z", "author": {"login": "yuzhu"}, "path": "tests/src/test/java/alluxio/server/ft/journal/TableMasterJournalIntegrationTest.java", "diffHunk": "@@ -92,8 +96,12 @@ public void journalAttachDb() throws Exception {\n     TableMaster tableMaster =\n         mCluster.getLocalAlluxioMaster().getMasterProcess().getMaster(TableMaster.class);\n \n+    mException.expect(IOException.class);\n+    tableMaster.getDatabase(DB_NAME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4NDE3OA=="}, "originalCommit": {"oid": "69276b7432ebc6b9501d7ca34aa5e12d790de182"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTY3OTQ1OnYy", "diffSide": "RIGHT", "path": "table/server/master/src/test/java/alluxio/master/table/AlluxioCatalogTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzozMToyM1rOFdIBDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMzozMToyM1rOFdIBDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA4NDM2Ng==", "bodyText": "similarly, won't all lines after this not be executed?", "url": "https://github.com/Alluxio/alluxio/pull/10734#discussion_r366084366", "createdAt": "2020-01-13T23:31:23Z", "author": {"login": "ZacBlanco"}, "path": "table/server/master/src/test/java/alluxio/master/table/AlluxioCatalogTest.java", "diffHunk": "@@ -100,6 +100,18 @@ public void detachDb() throws Exception {\n     assertEquals(0, mCatalog.getAllDatabases().size());\n   }\n \n+  @Test\n+  public void getDb() throws Exception {\n+    String dbName = \"testdb\";\n+    TestDatabase.genTable(1, 2);\n+    mException.expect(NotFoundException.class);\n+    mCatalog.getDatabase(dbName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69276b7432ebc6b9501d7ca34aa5e12d790de182"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTc2NDg5OnYy", "diffSide": "RIGHT", "path": "table/server/master/src/main/java/alluxio/master/table/TableMaster.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMDoxOTo1NlrOFdI0pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMDoxOTo1NlrOFdI0pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA5NzU3NQ==", "bodyText": "i don't care that much but for the most part methods are in alphabetical order in this class. Should we try to keep it that way? the transform methods are obviously not in the right order, but the rest seem to be", "url": "https://github.com/Alluxio/alluxio/pull/10734#discussion_r366097575", "createdAt": "2020-01-14T00:19:56Z", "author": {"login": "ZacBlanco"}, "path": "table/server/master/src/main/java/alluxio/master/table/TableMaster.java", "diffHunk": "@@ -138,4 +139,12 @@ boolean detachDatabase(String dbName)\n    * @return true if the database was changed as a result\n    */\n   boolean syncDatabase(String dbName) throws IOException;\n+\n+  /**\n+   * Gets a database object.\n+   *\n+   * @param dbName the database name\n+   * @return a database object\n+   */\n+  Database getDatabase(String dbName) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20eab99938b49b05d2b4d7b18df62740e3cdf38d"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2227, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}