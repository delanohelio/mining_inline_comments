{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1ODY3NDkw", "number": 11414, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwNToyOToyOFrOD7Fc5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwNToyOToyOFrOD7Fc5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMjgxODkyOnYy", "diffSide": "RIGHT", "path": "core/server/common/src/main/java/alluxio/master/journal/ufs/UfsJournalLogWriter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwNToyOToyOFrOGTM_2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzoyNzozNlrOGTmIwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjc4OTA4Mg==", "bodyText": "We could still lose primacy after the check, but that's fine because the rename will not pick up the wrong journal file? (ie. we check for primacy between updating current and attempting rename)", "url": "https://github.com/Alluxio/alluxio/pull/11414#discussion_r422789082", "createdAt": "2020-05-11T05:29:28Z", "author": {"login": "calvinjia"}, "path": "core/server/common/src/main/java/alluxio/master/journal/ufs/UfsJournalLogWriter.java", "diffHunk": "@@ -314,10 +329,19 @@ private void completeLog(UfsJournalFile currentLog, long nextSequenceNumber) thr\n       }\n       return;\n     }\n-    LOG.info(\"Completing log {} with next sequence number {}\", current, nextSequenceNumber);\n     String completed = UfsJournalFile\n         .encodeLogFileLocation(mJournal, currentLog.getStart(), nextSequenceNumber).toString();\n \n+    try {\n+      // Check again before the rename\n+      checkIsWritable();\n+    } catch (JournalClosedException e) {\n+      // Do not throw error, just ignore if the journal is not writable\n+      LOG.warn(\"Skipping completeLog() since journal is not writable. error: {}\", e.getMessage());\n+      return;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab759b9f485d1f855f0af0554fbaca3d59c1b9d5"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjc5NTM1OQ==", "bodyText": "yeah, I was thinking about that. I don't know how else to prevent the gap, but this basically the smallest we can make this gap. I'm not sure what will happen if the failover happens after the check, but before the rename...", "url": "https://github.com/Alluxio/alluxio/pull/11414#discussion_r422795359", "createdAt": "2020-05-11T05:49:59Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/journal/ufs/UfsJournalLogWriter.java", "diffHunk": "@@ -314,10 +329,19 @@ private void completeLog(UfsJournalFile currentLog, long nextSequenceNumber) thr\n       }\n       return;\n     }\n-    LOG.info(\"Completing log {} with next sequence number {}\", current, nextSequenceNumber);\n     String completed = UfsJournalFile\n         .encodeLogFileLocation(mJournal, currentLog.getStart(), nextSequenceNumber).toString();\n \n+    try {\n+      // Check again before the rename\n+      checkIsWritable();\n+    } catch (JournalClosedException e) {\n+      // Do not throw error, just ignore if the journal is not writable\n+      LOG.warn(\"Skipping completeLog() since journal is not writable. error: {}\", e.getMessage());\n+      return;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjc4OTA4Mg=="}, "originalCommit": {"oid": "ab759b9f485d1f855f0af0554fbaca3d59c1b9d5"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwMDk2MQ==", "bodyText": "I think it should be okay because it still is referencing the old journal file.", "url": "https://github.com/Alluxio/alluxio/pull/11414#discussion_r423200961", "createdAt": "2020-05-11T17:27:36Z", "author": {"login": "calvinjia"}, "path": "core/server/common/src/main/java/alluxio/master/journal/ufs/UfsJournalLogWriter.java", "diffHunk": "@@ -314,10 +329,19 @@ private void completeLog(UfsJournalFile currentLog, long nextSequenceNumber) thr\n       }\n       return;\n     }\n-    LOG.info(\"Completing log {} with next sequence number {}\", current, nextSequenceNumber);\n     String completed = UfsJournalFile\n         .encodeLogFileLocation(mJournal, currentLog.getStart(), nextSequenceNumber).toString();\n \n+    try {\n+      // Check again before the rename\n+      checkIsWritable();\n+    } catch (JournalClosedException e) {\n+      // Do not throw error, just ignore if the journal is not writable\n+      LOG.warn(\"Skipping completeLog() since journal is not writable. error: {}\", e.getMessage());\n+      return;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjc4OTA4Mg=="}, "originalCommit": {"oid": "ab759b9f485d1f855f0af0554fbaca3d59c1b9d5"}, "originalPosition": 123}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1730, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}