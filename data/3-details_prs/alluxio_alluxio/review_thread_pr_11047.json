{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMDg1Nzgz", "number": 11047, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTo0MTozMVrODjnwZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTo1MjoyMVrODjn8tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Njc4MTE4OnYy", "diffSide": "RIGHT", "path": "docs/en/operation/Performance-Tuning.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTo0MTozMVrOFviMxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzowODowN1rOFvkXbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM4NzcxOQ==", "bodyText": "to approximate twice in the same sentence sounds a little odd here. Can we try re-wording?", "url": "https://github.com/Alluxio/alluxio/pull/11047#discussion_r385387719", "createdAt": "2020-02-27T21:41:31Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/operation/Performance-Tuning.md", "diffHunk": "@@ -195,7 +192,8 @@ There are 3 options for loading a missing path: `Never`, `Once`, `Always`.\n `ONCE` will use the default behavior of only scanning each directory once ever, and `NEVER` will never consult the UFS\n and thus prevent Alluxio from scanning for new files at all.\n \n-The Alluxio master maintains a cache to approximate which UFS paths have been previously loaded, to approximate the `Once` behavior.\n+The Alluxio master maintains a cache to approximate which UFS paths have been previously loaded,\n+to approximate the `Once` behavior.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef5d9ac571d92e72eb0bfbee5d6351da05728f0d"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyMzIxNA==", "bodyText": "updated", "url": "https://github.com/Alluxio/alluxio/pull/11047#discussion_r385423214", "createdAt": "2020-02-27T23:08:07Z", "author": {"login": "gpang"}, "path": "docs/en/operation/Performance-Tuning.md", "diffHunk": "@@ -195,7 +192,8 @@ There are 3 options for loading a missing path: `Never`, `Once`, `Always`.\n `ONCE` will use the default behavior of only scanning each directory once ever, and `NEVER` will never consult the UFS\n and thus prevent Alluxio from scanning for new files at all.\n \n-The Alluxio master maintains a cache to approximate which UFS paths have been previously loaded, to approximate the `Once` behavior.\n+The Alluxio master maintains a cache to approximate which UFS paths have been previously loaded,\n+to approximate the `Once` behavior.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM4NzcxOQ=="}, "originalCommit": {"oid": "ef5d9ac571d92e72eb0bfbee5d6351da05728f0d"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjgxMjY4OnYy", "diffSide": "RIGHT", "path": "docs/en/operation/Performance-Tuning.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTo1MjoyMVrOFvigSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzowODoxM1rOFvkXkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5MjcxNA==", "bodyText": "\"...will be scanned for eligibility for persist\" sounds kind of odd.\nHow do you feel about: \"any files underneath the top-level directory will be considered for persistence\"\nor\n\"any files underneath the top-level directory will be considered for persist eligibility\"", "url": "https://github.com/Alluxio/alluxio/pull/11047#discussion_r385392714", "createdAt": "2020-02-27T21:52:21Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/operation/Performance-Tuning.md", "diffHunk": "@@ -320,8 +318,8 @@ alluxio.master.persistence.blacklist=.staging,_temporary\n Files such as `/data/_temporary/part-00001`, `/data/temporary.staging` will not be considered for\n persist.\n This works because eventually these temporary files will be deleted or renamed to permanent files.\n-Because `alluxio.user.file.persist.on.rename=true` is set, the files will be considered for persist\n-again when renamed.\n+Because `alluxio.user.file.persist.on.rename=true` is set, the files will be considered for\n+persistence again when renamed.\n Note that persist on rename works for directories as well as files - if a top level directory is\n renamed with the persist on rename option, all its not yet persisted files will be scanned for\n-eligbility for persist.\n+eligibility for persist.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef5d9ac571d92e72eb0bfbee5d6351da05728f0d"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyMzI0OQ==", "bodyText": "updated", "url": "https://github.com/Alluxio/alluxio/pull/11047#discussion_r385423249", "createdAt": "2020-02-27T23:08:13Z", "author": {"login": "gpang"}, "path": "docs/en/operation/Performance-Tuning.md", "diffHunk": "@@ -320,8 +318,8 @@ alluxio.master.persistence.blacklist=.staging,_temporary\n Files such as `/data/_temporary/part-00001`, `/data/temporary.staging` will not be considered for\n persist.\n This works because eventually these temporary files will be deleted or renamed to permanent files.\n-Because `alluxio.user.file.persist.on.rename=true` is set, the files will be considered for persist\n-again when renamed.\n+Because `alluxio.user.file.persist.on.rename=true` is set, the files will be considered for\n+persistence again when renamed.\n Note that persist on rename works for directories as well as files - if a top level directory is\n renamed with the persist on rename option, all its not yet persisted files will be scanned for\n-eligbility for persist.\n+eligibility for persist.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5MjcxNA=="}, "originalCommit": {"oid": "ef5d9ac571d92e72eb0bfbee5d6351da05728f0d"}, "originalPosition": 165}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2004, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}