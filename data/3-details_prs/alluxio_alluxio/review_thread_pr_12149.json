{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNzU1MjY3", "number": 12149, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTowMjo0MFrOEn5GkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzozNToxOFrOEoMOyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjY1NDg4OnYy", "diffSide": "RIGHT", "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTowMjo0MFrOHYrrSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNDowMDo0NFrOHYtxwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY0MzQ2NQ==", "bodyText": "It can be somehow confusing to have both WORKER_MASTER_PERIODICAL_CONNECT_TIMEOUT and WORKER_MASTER_CONNECT_RETRY_TIMEOUT in the configuration. Can we have a more distinguishable name for this one? How about WORKER_MASTER_PERIODICAL_RPC_TIMEOUT?", "url": "https://github.com/Alluxio/alluxio/pull/12149#discussion_r495643465", "createdAt": "2020-09-28T01:02:40Z", "author": {"login": "bf8086"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2651,6 +2651,16 @@ public String toString() {\n       .setConsistencyCheckLevel(ConsistencyCheckLevel.ENFORCE)\n       .setScope(Scope.WORKER)\n       .build();\n+  public static final PropertyKey WORKER_MASTER_PERIODICAL_CONNECT_TIMEOUT =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3410365afce65884ffea8c85bd551d0c722ea605"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY3Nzg4OQ==", "bodyText": "Sounds good", "url": "https://github.com/Alluxio/alluxio/pull/12149#discussion_r495677889", "createdAt": "2020-09-28T04:00:44Z", "author": {"login": "LuQQiu"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2651,6 +2651,16 @@ public String toString() {\n       .setConsistencyCheckLevel(ConsistencyCheckLevel.ENFORCE)\n       .setScope(Scope.WORKER)\n       .build();\n+  public static final PropertyKey WORKER_MASTER_PERIODICAL_CONNECT_TIMEOUT =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY0MzQ2NQ=="}, "originalCommit": {"oid": "3410365afce65884ffea8c85bd551d0c722ea605"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjY1NTQ3OnYy", "diffSide": "RIGHT", "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTowMzoxM1rOHYrrmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTowMzoxM1rOHYrrmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY0MzU0NA==", "bodyText": "(nit) Please sort the property name by alphabetical order.", "url": "https://github.com/Alluxio/alluxio/pull/12149#discussion_r495643544", "createdAt": "2020-09-28T01:03:13Z", "author": {"login": "bf8086"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2651,6 +2651,16 @@ public String toString() {\n       .setConsistencyCheckLevel(ConsistencyCheckLevel.ENFORCE)\n       .setScope(Scope.WORKER)\n       .build();\n+  public static final PropertyKey WORKER_MASTER_PERIODICAL_CONNECT_TIMEOUT =\n+      new Builder(Name.WORKER_MASTER_PERIODICAL_CONNECT_TIMEOUT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3410365afce65884ffea8c85bd551d0c722ea605"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjY2MzE2OnYy", "diffSide": "RIGHT", "path": "core/common/src/main/java/alluxio/util/network/NetworkAddressUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTowOTo0N1rOHYrvtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMTowOTo0N1rOHYrvtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY0NDU5OA==", "bodyText": "pingService is used in a bunch of places including client and job services. We probably want to use a different configuration property. Can we maybe reuse the USER_MASTER_POLLING_TIMEOUT or something more generic?", "url": "https://github.com/Alluxio/alluxio/pull/12149#discussion_r495644598", "createdAt": "2020-09-28T01:09:47Z", "author": {"login": "bf8086"}, "path": "core/common/src/main/java/alluxio/util/network/NetworkAddressUtils.java", "diffHunk": "@@ -670,7 +671,9 @@ public static void pingService(InetSocketAddress address, alluxio.grpc.ServiceTy\n         .build();\n     try {\n       ServiceVersionClientServiceGrpc.ServiceVersionClientServiceBlockingStub versionClient =\n-          ServiceVersionClientServiceGrpc.newBlockingStub(channel);\n+          ServiceVersionClientServiceGrpc.newBlockingStub(channel)\n+              .withDeadlineAfter(conf.getMs(PropertyKey.WORKER_MASTER_PERIODICAL_CONNECT_TIMEOUT),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3410365afce65884ffea8c85bd551d0c722ea605"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjY2ODk4OnYy", "diffSide": "RIGHT", "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMToxNDo0OVrOHYry2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMToxNDo0OVrOHYry2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY0NTQwMg==", "bodyText": "Can we explain in description how the value of the property can affect the delay before a worker attempt to register with a new primary master?", "url": "https://github.com/Alluxio/alluxio/pull/12149#discussion_r495645402", "createdAt": "2020-09-28T01:14:49Z", "author": {"login": "bf8086"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2651,6 +2651,16 @@ public String toString() {\n       .setConsistencyCheckLevel(ConsistencyCheckLevel.ENFORCE)\n       .setScope(Scope.WORKER)\n       .build();\n+  public static final PropertyKey WORKER_MASTER_PERIODICAL_CONNECT_TIMEOUT =\n+      new Builder(Name.WORKER_MASTER_PERIODICAL_CONNECT_TIMEOUT)\n+          .setDefaultValue(\"5min\")\n+          .setDescription(\"Timeout for periodical connections between workers \"\n+              + \"and the leading master. Periodical connections between workers \"\n+              + \"and previous leading master may hang which prevents workers \"\n+              + \"from registering with the new leading master \"\n+              + \"during flaky network situations.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3410365afce65884ffea8c85bd551d0c722ea605"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTc4ODkwOnYy", "diffSide": "RIGHT", "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzozNToxOFrOHZI1XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxOTo1Nzo1N1rOHZNgeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMTE4MQ==", "bodyText": "Does this control the connection phase, or the entire RPC duration as well?\nAlso, is 5m too long? This means if there is a failover, workers will take 5 minutes to re-connect?\nHow did failovers work before this parameter?", "url": "https://github.com/Alluxio/alluxio/pull/12149#discussion_r496121181", "createdAt": "2020-09-28T17:35:18Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2657,6 +2657,18 @@ public String toString() {\n           .setDefaultValue(\"1hour\")\n           .setScope(Scope.WORKER)\n           .build();\n+  public static final PropertyKey WORKER_MASTER_PERIODICAL_RPC_TIMEOUT =\n+      new Builder(Name.WORKER_MASTER_PERIODICAL_RPC_TIMEOUT)\n+          .setDefaultValue(\"5min\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "323a52544ca655e441c8e8f49577200ba041ff8d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEzMzkxMA==", "bodyText": "This only controls the RPC duration of selected periodical worker connections. Control the entire RPC duration.\nThe worker hangs problem only exists if the previous leading master is network partitioned (not responding, instead of rejection).\nI give a long timeout in the assumption that this case rarely happens and try not to affect our normal RPCs. A frequently called RPC is getPinList(). If the cluster has a large amount of files/dirs get pinned, i worried that if the timeout is short, the getPinList() may keep getting timeout unexpectedly.", "url": "https://github.com/Alluxio/alluxio/pull/12149#discussion_r496133910", "createdAt": "2020-09-28T17:57:34Z", "author": {"login": "LuQQiu"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2657,6 +2657,18 @@ public String toString() {\n           .setDefaultValue(\"1hour\")\n           .setScope(Scope.WORKER)\n           .build();\n+  public static final PropertyKey WORKER_MASTER_PERIODICAL_RPC_TIMEOUT =\n+      new Builder(Name.WORKER_MASTER_PERIODICAL_RPC_TIMEOUT)\n+          .setDefaultValue(\"5min\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMTE4MQ=="}, "originalCommit": {"oid": "323a52544ca655e441c8e8f49577200ba041ff8d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEzNTgwMA==", "bodyText": "Before this parameter, if the previous leading master is network partitioned (not responding), our workers will hang in periodical RPCs and fail to response to any requests or register with the new leading master. After the previous leading master come back, workers will receive exception message from previous leading master and continue functioning (register with new leading master)\nWhen network condition is good, the rpcs should direct fail when connecting to previous leading master and no hanging should happen.", "url": "https://github.com/Alluxio/alluxio/pull/12149#discussion_r496135800", "createdAt": "2020-09-28T18:00:55Z", "author": {"login": "LuQQiu"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2657,6 +2657,18 @@ public String toString() {\n           .setDefaultValue(\"1hour\")\n           .setScope(Scope.WORKER)\n           .build();\n+  public static final PropertyKey WORKER_MASTER_PERIODICAL_RPC_TIMEOUT =\n+      new Builder(Name.WORKER_MASTER_PERIODICAL_RPC_TIMEOUT)\n+          .setDefaultValue(\"5min\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMTE4MQ=="}, "originalCommit": {"oid": "323a52544ca655e441c8e8f49577200ba041ff8d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE1MzQ0Mg==", "bodyText": "@bf8086 What's the timeout that you think is reasonable. I saw we getPinList every second, probably 30sec or 1min timeout is good for this case?", "url": "https://github.com/Alluxio/alluxio/pull/12149#discussion_r496153442", "createdAt": "2020-09-28T18:33:35Z", "author": {"login": "LuQQiu"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2657,6 +2657,18 @@ public String toString() {\n           .setDefaultValue(\"1hour\")\n           .setScope(Scope.WORKER)\n           .build();\n+  public static final PropertyKey WORKER_MASTER_PERIODICAL_RPC_TIMEOUT =\n+      new Builder(Name.WORKER_MASTER_PERIODICAL_RPC_TIMEOUT)\n+          .setDefaultValue(\"5min\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMTE4MQ=="}, "originalCommit": {"oid": "323a52544ca655e441c8e8f49577200ba041ff8d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE1NTU0OQ==", "bodyText": "@LuQQiu\nI see. Let's say we have a 1m timeout, and the worker heartbeat takes longer than 1m, even though nothing has happened to the master (no failover, no network flakiness). What will happen to the worker? Will it just try to reconnect again?\nIf the worker heartbeat always takes more than 1m, does that mean that worker will never be able to successfully perform a heartbeat?", "url": "https://github.com/Alluxio/alluxio/pull/12149#discussion_r496155549", "createdAt": "2020-09-28T18:37:25Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2657,6 +2657,18 @@ public String toString() {\n           .setDefaultValue(\"1hour\")\n           .setScope(Scope.WORKER)\n           .build();\n+  public static final PropertyKey WORKER_MASTER_PERIODICAL_RPC_TIMEOUT =\n+      new Builder(Name.WORKER_MASTER_PERIODICAL_RPC_TIMEOUT)\n+          .setDefaultValue(\"5min\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMTE4MQ=="}, "originalCommit": {"oid": "323a52544ca655e441c8e8f49577200ba041ff8d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE3NzkyNA==", "bodyText": "Yeah for both questions, it will create a new client and retry operations. If the operations consistent taking longer than 1m, then heartbeat will never succeed. That's why i prefer to give the timeout a larger value.\nThis problem exists in previous versions but at least never be caught by us. It could be the network partition happens rarely or can be recovered in a short period of time. This change mainly protects the RPC from hanging forever.", "url": "https://github.com/Alluxio/alluxio/pull/12149#discussion_r496177924", "createdAt": "2020-09-28T19:19:50Z", "author": {"login": "LuQQiu"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2657,6 +2657,18 @@ public String toString() {\n           .setDefaultValue(\"1hour\")\n           .setScope(Scope.WORKER)\n           .build();\n+  public static final PropertyKey WORKER_MASTER_PERIODICAL_RPC_TIMEOUT =\n+      new Builder(Name.WORKER_MASTER_PERIODICAL_RPC_TIMEOUT)\n+          .setDefaultValue(\"5min\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMTE4MQ=="}, "originalCommit": {"oid": "323a52544ca655e441c8e8f49577200ba041ff8d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE4NDMzMQ==", "bodyText": "@LuQQiu I see. Then, maybe we do want to make the timeout longer.\nFrom an earlier comment, you said typically, when a master does a failover, the worker will immediately know, because the old master would actively reject the connection? Is this correct? That means this timeout will not affect normal failovers, but only unreachable old masters? If this is the case, then this is more reason to make the timeout long.\nThanks for the explanations.", "url": "https://github.com/Alluxio/alluxio/pull/12149#discussion_r496184331", "createdAt": "2020-09-28T19:32:05Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2657,6 +2657,18 @@ public String toString() {\n           .setDefaultValue(\"1hour\")\n           .setScope(Scope.WORKER)\n           .build();\n+  public static final PropertyKey WORKER_MASTER_PERIODICAL_RPC_TIMEOUT =\n+      new Builder(Name.WORKER_MASTER_PERIODICAL_RPC_TIMEOUT)\n+          .setDefaultValue(\"5min\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMTE4MQ=="}, "originalCommit": {"oid": "323a52544ca655e441c8e8f49577200ba041ff8d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE5Nzc1NA==", "bodyText": "Yeah, normally the worker will immediately know it cannot connect to the old leading master and connect to the new leading master. This timeout will not affect normal failover and only be useful when old leading master is unreachable.", "url": "https://github.com/Alluxio/alluxio/pull/12149#discussion_r496197754", "createdAt": "2020-09-28T19:57:57Z", "author": {"login": "LuQQiu"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2657,6 +2657,18 @@ public String toString() {\n           .setDefaultValue(\"1hour\")\n           .setScope(Scope.WORKER)\n           .build();\n+  public static final PropertyKey WORKER_MASTER_PERIODICAL_RPC_TIMEOUT =\n+      new Builder(Name.WORKER_MASTER_PERIODICAL_RPC_TIMEOUT)\n+          .setDefaultValue(\"5min\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMTE4MQ=="}, "originalCommit": {"oid": "323a52544ca655e441c8e8f49577200ba041ff8d"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1213, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}