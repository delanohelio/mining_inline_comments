{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMDk4NDE1", "number": 11050, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxMjowMFrODjoSqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyNjoyNVrODjoiAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Njg2ODkwOnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxMjowMFrOFvjCmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxMjowMFrOFvjCmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMTQ5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If that machine or process became unavailable, the cluster as a whole would be unavailable.\n          \n          \n            \n            If that machine or process becomes unavailable, the cluster as a whole would become unavailable.\n          \n      \n    \n    \n  \n\nYou use become in the sentence before, so it seems weird to switch tenses", "url": "https://github.com/Alluxio/alluxio/pull/11050#discussion_r385401498", "createdAt": "2020-02-27T22:12:00Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "diffHunk": "@@ -12,26 +12,28 @@ priority: 2\n ## Overview\n \n This section describes the basic setup to run Alluxio with a single master in a cluster.\n-This is the simplest way to deploy Alluxio on a cluster, meanwhile this single\n-master may also become the single point of failure (SPOF) in an Alluxio cluster. If that machine or\n-process became unavailable, the cluster as a whole would be unavailable.\n+This is the simplest way to deploy Alluxio on a cluster, meanwhile this single master may also \n+become the single point of failure (SPOF) in an Alluxio cluster.\n+If that machine or process became unavailable, the cluster as a whole would be unavailable.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "911ca61f8d51f956583bcf978240eaaea082a347"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Njg3MjA1OnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxMzoxM1rOFvjEpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxMzoxM1rOFvjEpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMjAyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              See [this tutorial] (http://www.linuxproblem.org/art_9.html) for more details.\n          \n          \n            \n              See [this tutorial](http://www.linuxproblem.org/art_9.html) for more details.", "url": "https://github.com/Alluxio/alluxio/pull/11050#discussion_r385402021", "createdAt": "2020-02-27T22:13:13Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "diffHunk": "@@ -12,26 +12,28 @@ priority: 2\n ## Overview\n \n This section describes the basic setup to run Alluxio with a single master in a cluster.\n-This is the simplest way to deploy Alluxio on a cluster, meanwhile this single\n-master may also become the single point of failure (SPOF) in an Alluxio cluster. If that machine or\n-process became unavailable, the cluster as a whole would be unavailable.\n+This is the simplest way to deploy Alluxio on a cluster, meanwhile this single master may also \n+become the single point of failure (SPOF) in an Alluxio cluster.\n+If that machine or process became unavailable, the cluster as a whole would be unavailable.\n To deploy Alluxio in production, we highly recommend running Alluxio masters in\n [High Availability]({{ '/en/deploy/Running-Alluxio-On-a-HA-Cluster.html' | relativize_url }}) mode.\n \n ## Prerequisites\n \n-* To deploy a Alluxio cluster, first [download](https://alluxio.io/download) the pre-compiled Alluxio\n-  binary file, extract the tarball with the below command, and copy the extracted directory to all\n-  nodes (including nodes running masters and workers).\n+* To deploy a Alluxio cluster, first [download](https://alluxio.io/download) the pre-compiled\n+  Alluxio binary file, extract the tarball with the below command, and copy the extracted \n+  directory to all nodes (including nodes running masters and workers).\n   \n   ```console\n   $ tar -xvzpf alluxio-{{site.ALLUXIO_VERSION_STRING}}-bin.tar.gz\n   ```\n   \n-* Enable SSH login without password from master node to worker nodes. You can add a public SSH key for\n-  the host into `~/.ssh/authorized_keys`. See [this tutorial](http://www.linuxproblem.org/art_9.html) for more details.\n-* TCP traffic across all nodes is allowed. For basic functionality make sure RPC port (default :19998) is open\n-  on all nodes.\n+* Enable SSH login without password from master node to worker nodes.\n+  You can add a public SSH key for the host into `~/.ssh/authorized_keys`.\n+  See [this tutorial] (http://www.linuxproblem.org/art_9.html) for more details.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "911ca61f8d51f956583bcf978240eaaea082a347"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Njg3MzQ4OnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxMzozOVrOFvjFfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjozOToyMFrOFvjvUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMjIzOA==", "bodyText": "why is this a requirement?", "url": "https://github.com/Alluxio/alluxio/pull/11050#discussion_r385402238", "createdAt": "2020-02-27T22:13:39Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "diffHunk": "@@ -12,26 +12,28 @@ priority: 2\n ## Overview\n \n This section describes the basic setup to run Alluxio with a single master in a cluster.\n-This is the simplest way to deploy Alluxio on a cluster, meanwhile this single\n-master may also become the single point of failure (SPOF) in an Alluxio cluster. If that machine or\n-process became unavailable, the cluster as a whole would be unavailable.\n+This is the simplest way to deploy Alluxio on a cluster, meanwhile this single master may also \n+become the single point of failure (SPOF) in an Alluxio cluster.\n+If that machine or process became unavailable, the cluster as a whole would be unavailable.\n To deploy Alluxio in production, we highly recommend running Alluxio masters in\n [High Availability]({{ '/en/deploy/Running-Alluxio-On-a-HA-Cluster.html' | relativize_url }}) mode.\n \n ## Prerequisites\n \n-* To deploy a Alluxio cluster, first [download](https://alluxio.io/download) the pre-compiled Alluxio\n-  binary file, extract the tarball with the below command, and copy the extracted directory to all\n-  nodes (including nodes running masters and workers).\n+* To deploy a Alluxio cluster, first [download](https://alluxio.io/download) the pre-compiled\n+  Alluxio binary file, extract the tarball with the below command, and copy the extracted \n+  directory to all nodes (including nodes running masters and workers).\n   \n   ```console\n   $ tar -xvzpf alluxio-{{site.ALLUXIO_VERSION_STRING}}-bin.tar.gz\n   ```\n   \n-* Enable SSH login without password from master node to worker nodes. You can add a public SSH key for\n-  the host into `~/.ssh/authorized_keys`. See [this tutorial](http://www.linuxproblem.org/art_9.html) for more details.\n-* TCP traffic across all nodes is allowed. For basic functionality make sure RPC port (default :19998) is open\n-  on all nodes.\n+* Enable SSH login without password from master node to worker nodes.\n+  You can add a public SSH key for the host into `~/.ssh/authorized_keys`.\n+  See [this tutorial] (http://www.linuxproblem.org/art_9.html) for more details.\n+* TCP traffic across all nodes is allowed.\n+  For basic functionality make sure RPC port (default :19998) is open on all nodes.\n+* Allow `sudo` privilege for the OS user that Alluxio will be running as.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "911ca61f8d51f956583bcf978240eaaea082a347"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQxMDkzOA==", "bodyText": "Further down we mention starting Alluxio with ./bin/alluxio-start.sh all SudoMount. For consistency, I think we can put this as a requirement. Alternatively, I can add more to the start section to explain how to avoid sudo.", "url": "https://github.com/Alluxio/alluxio/pull/11050#discussion_r385410938", "createdAt": "2020-02-27T22:34:02Z", "author": {"login": "ns1123"}, "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "diffHunk": "@@ -12,26 +12,28 @@ priority: 2\n ## Overview\n \n This section describes the basic setup to run Alluxio with a single master in a cluster.\n-This is the simplest way to deploy Alluxio on a cluster, meanwhile this single\n-master may also become the single point of failure (SPOF) in an Alluxio cluster. If that machine or\n-process became unavailable, the cluster as a whole would be unavailable.\n+This is the simplest way to deploy Alluxio on a cluster, meanwhile this single master may also \n+become the single point of failure (SPOF) in an Alluxio cluster.\n+If that machine or process became unavailable, the cluster as a whole would be unavailable.\n To deploy Alluxio in production, we highly recommend running Alluxio masters in\n [High Availability]({{ '/en/deploy/Running-Alluxio-On-a-HA-Cluster.html' | relativize_url }}) mode.\n \n ## Prerequisites\n \n-* To deploy a Alluxio cluster, first [download](https://alluxio.io/download) the pre-compiled Alluxio\n-  binary file, extract the tarball with the below command, and copy the extracted directory to all\n-  nodes (including nodes running masters and workers).\n+* To deploy a Alluxio cluster, first [download](https://alluxio.io/download) the pre-compiled\n+  Alluxio binary file, extract the tarball with the below command, and copy the extracted \n+  directory to all nodes (including nodes running masters and workers).\n   \n   ```console\n   $ tar -xvzpf alluxio-{{site.ALLUXIO_VERSION_STRING}}-bin.tar.gz\n   ```\n   \n-* Enable SSH login without password from master node to worker nodes. You can add a public SSH key for\n-  the host into `~/.ssh/authorized_keys`. See [this tutorial](http://www.linuxproblem.org/art_9.html) for more details.\n-* TCP traffic across all nodes is allowed. For basic functionality make sure RPC port (default :19998) is open\n-  on all nodes.\n+* Enable SSH login without password from master node to worker nodes.\n+  You can add a public SSH key for the host into `~/.ssh/authorized_keys`.\n+  See [this tutorial] (http://www.linuxproblem.org/art_9.html) for more details.\n+* TCP traffic across all nodes is allowed.\n+  For basic functionality make sure RPC port (default :19998) is open on all nodes.\n+* Allow `sudo` privilege for the OS user that Alluxio will be running as.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMjIzOA=="}, "originalCommit": {"oid": "911ca61f8d51f956583bcf978240eaaea082a347"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQxMTQ2OA==", "bodyText": "I don't think it's a hard requirement especially because it depends on configuration and mounting (NVMe?). sudo is only ever required to actually make the mount which is separate from Alluxio functionality. I think it is ok to put that sudo is required if users want our scripts to mount the workers' storage directories for them", "url": "https://github.com/Alluxio/alluxio/pull/11050#discussion_r385411468", "createdAt": "2020-02-27T22:35:29Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "diffHunk": "@@ -12,26 +12,28 @@ priority: 2\n ## Overview\n \n This section describes the basic setup to run Alluxio with a single master in a cluster.\n-This is the simplest way to deploy Alluxio on a cluster, meanwhile this single\n-master may also become the single point of failure (SPOF) in an Alluxio cluster. If that machine or\n-process became unavailable, the cluster as a whole would be unavailable.\n+This is the simplest way to deploy Alluxio on a cluster, meanwhile this single master may also \n+become the single point of failure (SPOF) in an Alluxio cluster.\n+If that machine or process became unavailable, the cluster as a whole would be unavailable.\n To deploy Alluxio in production, we highly recommend running Alluxio masters in\n [High Availability]({{ '/en/deploy/Running-Alluxio-On-a-HA-Cluster.html' | relativize_url }}) mode.\n \n ## Prerequisites\n \n-* To deploy a Alluxio cluster, first [download](https://alluxio.io/download) the pre-compiled Alluxio\n-  binary file, extract the tarball with the below command, and copy the extracted directory to all\n-  nodes (including nodes running masters and workers).\n+* To deploy a Alluxio cluster, first [download](https://alluxio.io/download) the pre-compiled\n+  Alluxio binary file, extract the tarball with the below command, and copy the extracted \n+  directory to all nodes (including nodes running masters and workers).\n   \n   ```console\n   $ tar -xvzpf alluxio-{{site.ALLUXIO_VERSION_STRING}}-bin.tar.gz\n   ```\n   \n-* Enable SSH login without password from master node to worker nodes. You can add a public SSH key for\n-  the host into `~/.ssh/authorized_keys`. See [this tutorial](http://www.linuxproblem.org/art_9.html) for more details.\n-* TCP traffic across all nodes is allowed. For basic functionality make sure RPC port (default :19998) is open\n-  on all nodes.\n+* Enable SSH login without password from master node to worker nodes.\n+  You can add a public SSH key for the host into `~/.ssh/authorized_keys`.\n+  See [this tutorial] (http://www.linuxproblem.org/art_9.html) for more details.\n+* TCP traffic across all nodes is allowed.\n+  For basic functionality make sure RPC port (default :19998) is open on all nodes.\n+* Allow `sudo` privilege for the OS user that Alluxio will be running as.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMjIzOA=="}, "originalCommit": {"oid": "911ca61f8d51f956583bcf978240eaaea082a347"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQxMjk0NA==", "bodyText": "done", "url": "https://github.com/Alluxio/alluxio/pull/11050#discussion_r385412944", "createdAt": "2020-02-27T22:39:20Z", "author": {"login": "ns1123"}, "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "diffHunk": "@@ -12,26 +12,28 @@ priority: 2\n ## Overview\n \n This section describes the basic setup to run Alluxio with a single master in a cluster.\n-This is the simplest way to deploy Alluxio on a cluster, meanwhile this single\n-master may also become the single point of failure (SPOF) in an Alluxio cluster. If that machine or\n-process became unavailable, the cluster as a whole would be unavailable.\n+This is the simplest way to deploy Alluxio on a cluster, meanwhile this single master may also \n+become the single point of failure (SPOF) in an Alluxio cluster.\n+If that machine or process became unavailable, the cluster as a whole would be unavailable.\n To deploy Alluxio in production, we highly recommend running Alluxio masters in\n [High Availability]({{ '/en/deploy/Running-Alluxio-On-a-HA-Cluster.html' | relativize_url }}) mode.\n \n ## Prerequisites\n \n-* To deploy a Alluxio cluster, first [download](https://alluxio.io/download) the pre-compiled Alluxio\n-  binary file, extract the tarball with the below command, and copy the extracted directory to all\n-  nodes (including nodes running masters and workers).\n+* To deploy a Alluxio cluster, first [download](https://alluxio.io/download) the pre-compiled\n+  Alluxio binary file, extract the tarball with the below command, and copy the extracted \n+  directory to all nodes (including nodes running masters and workers).\n   \n   ```console\n   $ tar -xvzpf alluxio-{{site.ALLUXIO_VERSION_STRING}}-bin.tar.gz\n   ```\n   \n-* Enable SSH login without password from master node to worker nodes. You can add a public SSH key for\n-  the host into `~/.ssh/authorized_keys`. See [this tutorial](http://www.linuxproblem.org/art_9.html) for more details.\n-* TCP traffic across all nodes is allowed. For basic functionality make sure RPC port (default :19998) is open\n-  on all nodes.\n+* Enable SSH login without password from master node to worker nodes.\n+  You can add a public SSH key for the host into `~/.ssh/authorized_keys`.\n+  See [this tutorial] (http://www.linuxproblem.org/art_9.html) for more details.\n+* TCP traffic across all nodes is allowed.\n+  For basic functionality make sure RPC port (default :19998) is open on all nodes.\n+* Allow `sudo` privilege for the OS user that Alluxio will be running as.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMjIzOA=="}, "originalCommit": {"oid": "911ca61f8d51f956583bcf978240eaaea082a347"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Njg4NzA4OnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxODo0OVrOFvjOBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxODo0OVrOFvjOBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNDQyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            operator can make use of in-built utilities to copy configurations to remote nodes such as below.\n          \n          \n            \n            operator can make use of built-in utilities to copy configurations to remote nodes such as below.", "url": "https://github.com/Alluxio/alluxio/pull/11050#discussion_r385404420", "createdAt": "2020-02-27T22:18:49Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "diffHunk": "@@ -49,23 +51,25 @@ alluxio.master.mount.table.root.ufs=<STORAGE_URI>\n ```\n \n - The first property `alluxio.master.hostname` sets the hostname of the single master node.\n-Examples include\n-`alluxio.master.hostname=1.2.3.4` or `alluxio.master.hostname=node1.a.com`.\n-- The second property\n-`alluxio.master.mount.table.root.ufs` sets to the URI of the under store to mount to\n-the Alluxio root. This shared shared storage system must be accessible by the master node and all\n-worker nodes. Examples include `alluxio.master.mount.table.root.ufs=hdfs://1.2.3.4:9000/alluxio/root/`,\n-or `alluxio.master.mount.table.root.ufs=s3://bucket/dir/`.\n-\n-Next, copy configuration files to all the other Alluxio nodes. To use the provided scripts,\n-add the IP addresses or hostnames of all the worker nodes to the `conf/workers` file. Then run:\n+  Examples include\n+  `alluxio.master.hostname=1.2.3.4` or `alluxio.master.hostname=node1.a.com`.\n+- The second property `alluxio.master.mount.table.root.ufs` sets to the URI of the under store to\n+  mount to the Alluxio root.\n+  This shared shared storage system must be accessible by the master node and all worker nodes.\n+  Examples include `alluxio.master.mount.table.root.ufs=hdfs://1.2.3.4:9000/alluxio/root/`, or \n+  `alluxio.master.mount.table.root.ufs=s3://bucket/dir/`.\n+\n+Next, copy configuration files to all the other Alluxio nodes.\n+By adding the IP addresses or hostnames of all the worker nodes to the `conf/workers` file, an \n+operator can make use of in-built utilities to copy configurations to remote nodes such as below.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "911ca61f8d51f956583bcf978240eaaea082a347"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjkwNDQ1OnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyNToxOVrOFvjYsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyNToxOVrOFvjYsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNzE1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            process, with the appropriate configuration.\n          \n          \n            \n            process with the appropriate configuration.", "url": "https://github.com/Alluxio/alluxio/pull/11050#discussion_r385407152", "createdAt": "2020-02-27T22:25:19Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "diffHunk": "@@ -167,32 +176,35 @@ $ ./bin/alluxio-start.sh worker # starts the local worker\n On any master node, format the Alluxio journal with the following command:\n \n ```console\n-$ ./bin/alluxio format\n+$ ./bin/alluxio formatMaster\n ```\n \n-> Formatting the journal will delete all metadata from Alluxio. However, the data in under storage will be untouched.\n+Formatting the journal will delete all metadata from Alluxio. However, the data in under storage will be untouched.\n \n ### Add/Remove Workers Dynamically\n \n Adding a worker to an Alluxio cluster dynamically is as simple as starting a new Alluxio worker\n-process, with the appropriate configuration. In most cases, the new worker's configuration should be the same as all\n-the other workers' configuration. Run the following command on the new worker to add\n+process, with the appropriate configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "911ca61f8d51f956583bcf978240eaaea082a347"}, "originalPosition": 160}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjkwODE2OnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyNjoyNVrOFvjaxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjozNjo0MFrOFvjrRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNzY4NQ==", "bodyText": "re-word to not use \"consider\" twice?", "url": "https://github.com/Alluxio/alluxio/pull/11050#discussion_r385407685", "createdAt": "2020-02-27T22:26:25Z", "author": {"login": "ZacBlanco"}, "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "diffHunk": "@@ -167,32 +176,35 @@ $ ./bin/alluxio-start.sh worker # starts the local worker\n On any master node, format the Alluxio journal with the following command:\n \n ```console\n-$ ./bin/alluxio format\n+$ ./bin/alluxio formatMaster\n ```\n \n-> Formatting the journal will delete all metadata from Alluxio. However, the data in under storage will be untouched.\n+Formatting the journal will delete all metadata from Alluxio. However, the data in under storage will be untouched.\n \n ### Add/Remove Workers Dynamically\n \n Adding a worker to an Alluxio cluster dynamically is as simple as starting a new Alluxio worker\n-process, with the appropriate configuration. In most cases, the new worker's configuration should be the same as all\n-the other workers' configuration. Run the following command on the new worker to add\n+process, with the appropriate configuration.\n+In most cases, the new worker's configuration should be the same as all the other workers'\n+configuration.\n+Run the following command on the new worker to add it to the cluster.\n \n ```console\n $ ./bin/alluxio-start.sh worker SudoMount # starts the local worker\n ```\n \n-Once the worker is started, it will register itself with the Alluxio master, and become part of the Alluxio cluster.\n+Once the worker is started, it will register itself with the Alluxio master, and become part of the\n+Alluxio cluster.\n \n Removing a worker is as simple as stopping the worker process.\n \n ```console\n $ ./bin/alluxio-stop.sh worker # stops the local worker\n ```\n \n-Once the worker is stopped, and after\n-a timeout on the master (configured by master parameter `alluxio.master.worker.timeout`), the master\n-will consider the worker as \"lost\", and no longer consider it as part of the cluster.\n+Once the worker is stopped,the master will flag the worker as lost after a predetermined timeout \n+value (configured by master parameter `alluxio.master.worker.timeout`).\n+The master will consider the worker as \"lost\", and no longer consider it as part of the cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "911ca61f8d51f956583bcf978240eaaea082a347"}, "originalPosition": 184}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQxMTkxMQ==", "bodyText": "done", "url": "https://github.com/Alluxio/alluxio/pull/11050#discussion_r385411911", "createdAt": "2020-02-27T22:36:40Z", "author": {"login": "ns1123"}, "path": "docs/en/deploy/Running-Alluxio-On-a-Cluster.md", "diffHunk": "@@ -167,32 +176,35 @@ $ ./bin/alluxio-start.sh worker # starts the local worker\n On any master node, format the Alluxio journal with the following command:\n \n ```console\n-$ ./bin/alluxio format\n+$ ./bin/alluxio formatMaster\n ```\n \n-> Formatting the journal will delete all metadata from Alluxio. However, the data in under storage will be untouched.\n+Formatting the journal will delete all metadata from Alluxio. However, the data in under storage will be untouched.\n \n ### Add/Remove Workers Dynamically\n \n Adding a worker to an Alluxio cluster dynamically is as simple as starting a new Alluxio worker\n-process, with the appropriate configuration. In most cases, the new worker's configuration should be the same as all\n-the other workers' configuration. Run the following command on the new worker to add\n+process, with the appropriate configuration.\n+In most cases, the new worker's configuration should be the same as all the other workers'\n+configuration.\n+Run the following command on the new worker to add it to the cluster.\n \n ```console\n $ ./bin/alluxio-start.sh worker SudoMount # starts the local worker\n ```\n \n-Once the worker is started, it will register itself with the Alluxio master, and become part of the Alluxio cluster.\n+Once the worker is started, it will register itself with the Alluxio master, and become part of the\n+Alluxio cluster.\n \n Removing a worker is as simple as stopping the worker process.\n \n ```console\n $ ./bin/alluxio-stop.sh worker # stops the local worker\n ```\n \n-Once the worker is stopped, and after\n-a timeout on the master (configured by master parameter `alluxio.master.worker.timeout`), the master\n-will consider the worker as \"lost\", and no longer consider it as part of the cluster.\n+Once the worker is stopped,the master will flag the worker as lost after a predetermined timeout \n+value (configured by master parameter `alluxio.master.worker.timeout`).\n+The master will consider the worker as \"lost\", and no longer consider it as part of the cluster.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNzY4NQ=="}, "originalCommit": {"oid": "911ca61f8d51f956583bcf978240eaaea082a347"}, "originalPosition": 184}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1865, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}