{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMjc3MTE1", "number": 11116, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo0ODozN1rODlJGMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo0ODozN1rODlJGMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjcyOTQ0OnYy", "diffSide": "RIGHT", "path": "table/server/common/src/main/java/alluxio/table/common/transform/TransformPlan.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo0ODozN1rOFx3U6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzo0ODozN1rOFx3U6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgzMTAxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  throw new IllegalArgumentException(\"At least one action should be defined\");\n          \n          \n            \n                  throw new IllegalArgumentException(\"At least one action should be defined for the transformation\");\n          \n      \n    \n    \n  \n\nAnd, should we also include definition.getDefinition() in the message?", "url": "https://github.com/Alluxio/alluxio/pull/11116#discussion_r387831018", "createdAt": "2020-03-04T17:48:37Z", "author": {"login": "gpang"}, "path": "table/server/common/src/main/java/alluxio/table/common/transform/TransformPlan.java", "diffHunk": "@@ -49,7 +51,13 @@ public TransformPlan(Layout baseLayout, Layout transformedLayout,\n   }\n \n   private ArrayList<JobConfig> computeJobConfigs(TransformDefinition definition) {\n-    return definition.getActions().stream()\n+    final List<TransformAction> actions = definition.getActions();\n+\n+    if (actions.isEmpty()) {\n+      throw new IllegalArgumentException(\"At least one action should be defined\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bebb0d520e40847d90986e5e33ed971ec60b4aab"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1907, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}