{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMjkyMjcz", "number": 12261, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzoxOToyNVrOEtTIrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzoxOTo1N1rOEtTJDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTM0ODkzOnYy", "diffSide": "RIGHT", "path": "underfs/s3a/src/main/java/alluxio/underfs/s3a/S3AUnderFileSystem.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzoxOToyNVrOHhAsDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjowNToyMFrOHhDfwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3NjMzNQ==", "bodyText": "Based on https://stackoverflow.com/questions/18136437/whats-the-use-of-new-string0-in-toarraynew-string0\nlooks like it will be better to create the array with new String[size] than new String[0]", "url": "https://github.com/Alluxio/alluxio/pull/12261#discussion_r504376335", "createdAt": "2020-10-14T03:19:25Z", "author": {"login": "LuQQiu"}, "path": "underfs/s3a/src/main/java/alluxio/underfs/s3a/S3AUnderFileSystem.java", "diffHunk": "@@ -452,7 +453,7 @@ private ObjectListing getObjectListingChunkV1(ListObjectsRequest request) throws\n     @Override\n     public String[] getCommonPrefixes() {\n       List<String> res = mResult.getCommonPrefixes();\n-      return res.toArray(new String[res.size()]);\n+      return res.toArray(new String[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7971f5123bcd75a06796737574416c917f31254"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQyMjMzNg==", "bodyText": "Actually in the comments of this answer, there's a link https://stackoverflow.com/questions/174093/toarraynew-myclass0-or-toarraynew-myclassmylist-size/29444594#29444594 that says giving new String[0] is consistently faster. Plus Intellij throws a warning if you give it a pre-sized array.", "url": "https://github.com/Alluxio/alluxio/pull/12261#discussion_r504422336", "createdAt": "2020-10-14T06:05:20Z", "author": {"login": "jiacheliu3"}, "path": "underfs/s3a/src/main/java/alluxio/underfs/s3a/S3AUnderFileSystem.java", "diffHunk": "@@ -452,7 +453,7 @@ private ObjectListing getObjectListingChunkV1(ListObjectsRequest request) throws\n     @Override\n     public String[] getCommonPrefixes() {\n       List<String> res = mResult.getCommonPrefixes();\n-      return res.toArray(new String[res.size()]);\n+      return res.toArray(new String[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3NjMzNQ=="}, "originalCommit": {"oid": "d7971f5123bcd75a06796737574416c917f31254"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTM0OTkxOnYy", "diffSide": "RIGHT", "path": "underfs/s3a/src/main/java/alluxio/underfs/s3a/S3AUnderFileSystem.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzoxOTo1N1rOHhAsnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjowNzo1NFrOHhDjFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3NjQ3OQ==", "bodyText": "Why it needs casting, can we use the concrete type in the whole S3AUnderFileSystem?", "url": "https://github.com/Alluxio/alluxio/pull/12261#discussion_r504376479", "createdAt": "2020-10-14T03:19:57Z", "author": {"login": "LuQQiu"}, "path": "underfs/s3a/src/main/java/alluxio/underfs/s3a/S3AUnderFileSystem.java", "diffHunk": "@@ -198,7 +198,8 @@ public static S3AUnderFileSystem createInstance(AlluxioURI uri,\n       clientConf.setSignerOverride(conf.get(PropertyKey.UNDERFS_S3_SIGNER_ALGORITHM));\n     }\n \n-    AmazonS3Client amazonS3Client = new AmazonS3Client(credentials, clientConf);\n+    AmazonS3Client amazonS3Client = (AmazonS3Client) AmazonS3Client.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7971f5123bcd75a06796737574416c917f31254"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQyMzE4OA==", "bodyText": "AmazonS3ClientBuilder.build() returns type AmazonS3 instead of AmazonS3Client. Casting seems to be the only way. I think it's an issue with how aws sdk is implemented.", "url": "https://github.com/Alluxio/alluxio/pull/12261#discussion_r504423188", "createdAt": "2020-10-14T06:07:54Z", "author": {"login": "jiacheliu3"}, "path": "underfs/s3a/src/main/java/alluxio/underfs/s3a/S3AUnderFileSystem.java", "diffHunk": "@@ -198,7 +198,8 @@ public static S3AUnderFileSystem createInstance(AlluxioURI uri,\n       clientConf.setSignerOverride(conf.get(PropertyKey.UNDERFS_S3_SIGNER_ALGORITHM));\n     }\n \n-    AmazonS3Client amazonS3Client = new AmazonS3Client(credentials, clientConf);\n+    AmazonS3Client amazonS3Client = (AmazonS3Client) AmazonS3Client.builder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3NjQ3OQ=="}, "originalCommit": {"oid": "d7971f5123bcd75a06796737574416c917f31254"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1132, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}