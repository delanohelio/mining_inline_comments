{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzMDUyNTkw", "number": 11704, "title": "Optimize UFS access on missing paths", "bodyText": "The main contribution of this PR is to remove a 2nd UFS call against the UFS when performing a listStatus/getStatus against a path which doesn't exist in Alluxio or the UFS.  Previously, fetchStatusIfAbsent would return null, and then call loadMetadata with a null status which then would make an exists call against the UFS. Now we will instead throw a FileNotFoundException which is the same behavior as specified in the UFS API.", "createdAt": "2020-07-01T23:15:18Z", "url": "https://github.com/Alluxio/alluxio/pull/11704", "merged": true, "mergeCommit": {"oid": "ecbdbde8386d48816bafcbd698179f0b1399bc13"}, "closed": true, "closedAt": "2020-07-07T18:50:50Z", "author": {"login": "ZacBlanco"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwypLugH2gAyNDQzMDUyNTkwOmUwM2E2ZmVmYzUzOTU1MjFjYjFkM2JlZWRiODM0YTE3NmFkOWU2OTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyqdB6gFqTQ0NDE2MTE0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e03a6fefc5395521cb1d3beedb834a176ad9e692", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/e03a6fefc5395521cb1d3beedb834a176ad9e692", "committedDate": "2020-07-01T23:14:41Z", "message": "Optimize UFS access on missing paths"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNzM2OTQ3", "url": "https://github.com/Alluxio/alluxio/pull/11704#pullrequestreview-442736947", "createdAt": "2020-07-06T02:06:20Z", "commit": {"oid": "e03a6fefc5395521cb1d3beedb834a176ad9e692"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMjowNjoyMFrOGtG2hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMjowNjo1MlrOGtG26Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk1MTM2NQ==", "bodyText": "is this retried on caller site?", "url": "https://github.com/Alluxio/alluxio/pull/11704#discussion_r449951365", "createdAt": "2020-07-06T02:06:20Z", "author": {"login": "ggezer"}, "path": "core/server/master/src/main/java/alluxio/underfs/UfsStatusCache.java", "diffHunk": "@@ -152,15 +153,15 @@ public UfsStatus fetchStatusIfAbsent(AlluxioURI path, MountTable mountTable)\n       UnderFileSystem ufs = ufsResource.get();\n       UfsStatus ufsStatus = ufs.getStatus(ufsUri.toString());\n       if (ufsStatus == null) {\n-        return null;\n+        throw new FileNotFoundException(\"fetched status is null for: \" + ufsUri);\n       }\n       ufsStatus.setName(path.getName());\n       addStatus(path, ufsStatus);\n       return ufsStatus;\n     } catch (IllegalArgumentException | IOException e) {\n       LogUtils.warnWithException(LOG, \"Failed to fetch status for {}\", path, e);\n     }\n-    return null;\n+    throw new FileNotFoundException(\"Failed to fetch status of \" + ufsUri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e03a6fefc5395521cb1d3beedb834a176ad9e692"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk1MTQ2NQ==", "bodyText": "Can you replace these withExpectedException rule?", "url": "https://github.com/Alluxio/alluxio/pull/11704#discussion_r449951465", "createdAt": "2020-07-06T02:06:52Z", "author": {"login": "ggezer"}, "path": "core/server/master/src/test/java/alluxio/underfs/UfsStatusCacheTest.java", "diffHunk": "@@ -371,18 +372,26 @@ public void testFetchExistingSingleStatus() throws Exception {\n   @Test\n   public void testFetchSingleStatusNonExistingPath() throws Exception {\n     spyUfs();\n-    UfsStatus fetched = mCache.fetchStatusIfAbsent(new AlluxioURI(\"/testFile\"), mMountTable);\n+    try {\n+      UfsStatus fetched = mCache.fetchStatusIfAbsent(new AlluxioURI(\"/testFile\"), mMountTable);\n+      fail(\"Should have thrown FileNotFoundException\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e03a6fefc5395521cb1d3beedb834a176ad9e692"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjc1MTMw", "url": "https://github.com/Alluxio/alluxio/pull/11704#pullrequestreview-443275130", "createdAt": "2020-07-06T17:28:39Z", "commit": {"oid": "e03a6fefc5395521cb1d3beedb834a176ad9e692"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzoyODozOVrOGtgpzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzoyODozOVrOGtgpzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NDA5NQ==", "bodyText": "Will this exception be thrown to the client? If so we should make it more explanatory (ie. what does null status mean?)", "url": "https://github.com/Alluxio/alluxio/pull/11704#discussion_r450374095", "createdAt": "2020-07-06T17:28:39Z", "author": {"login": "calvinjia"}, "path": "core/server/master/src/main/java/alluxio/underfs/UfsStatusCache.java", "diffHunk": "@@ -152,15 +153,15 @@ public UfsStatus fetchStatusIfAbsent(AlluxioURI path, MountTable mountTable)\n       UnderFileSystem ufs = ufsResource.get();\n       UfsStatus ufsStatus = ufs.getStatus(ufsUri.toString());\n       if (ufsStatus == null) {\n-        return null;\n+        throw new FileNotFoundException(\"fetched status is null for: \" + ufsUri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e03a6fefc5395521cb1d3beedb834a176ad9e692"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41eeea029ed5bce469ad6a1f9951c2d7fd0d0ce4", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/41eeea029ed5bce469ad6a1f9951c2d7fd0d0ce4", "committedDate": "2020-07-06T17:38:56Z", "message": "Remove optimizations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzA1NjUw", "url": "https://github.com/Alluxio/alluxio/pull/11704#pullrequestreview-443305650", "createdAt": "2020-07-06T18:15:43Z", "commit": {"oid": "41eeea029ed5bce469ad6a1f9951c2d7fd0d0ce4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzA3ODcx", "url": "https://github.com/Alluxio/alluxio/pull/11704#pullrequestreview-443307871", "createdAt": "2020-07-06T18:19:18Z", "commit": {"oid": "41eeea029ed5bce469ad6a1f9951c2d7fd0d0ce4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTYxMTQw", "url": "https://github.com/Alluxio/alluxio/pull/11704#pullrequestreview-444161140", "createdAt": "2020-07-07T18:50:01Z", "commit": {"oid": "41eeea029ed5bce469ad6a1f9951c2d7fd0d0ce4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4235, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}