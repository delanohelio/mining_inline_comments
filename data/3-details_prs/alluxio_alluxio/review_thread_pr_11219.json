{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NzgwNTEy", "number": 11219, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxOToxMTozOVrODtq0CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxOToxNDo0MVrODtq4Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjEzOTYxOnYy", "diffSide": "RIGHT", "path": "job/server/src/main/java/alluxio/job/plan/transform/format/SchemaConversionUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxOToxMTozOVrOF_O0qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxOTo0MDoyNVrOF_Pycg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg0NzQ2NQ==", "bodyText": "were these methods mainly copied from the previous location?", "url": "https://github.com/Alluxio/alluxio/pull/11219#discussion_r401847465", "createdAt": "2020-04-01T19:11:39Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/format/SchemaConversionUtils.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan.transform.format;\n+\n+import alluxio.job.plan.transform.FieldSchema;\n+import alluxio.job.plan.transform.HiveConstants;\n+import alluxio.job.plan.transform.format.csv.CsvUtils;\n+import alluxio.job.plan.transform.format.csv.Decimal;\n+\n+import org.apache.avro.LogicalTypes;\n+import org.apache.avro.Schema;\n+import org.apache.avro.SchemaBuilder;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/**\n+ * Utility Class for converting schema to Parquet.\n+ */\n+public class SchemaConversionUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20ff70319d43e674e519f52466f5cd30a7c666b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg2MzI4Mg==", "bodyText": "Yep. These were mainly copied", "url": "https://github.com/Alluxio/alluxio/pull/11219#discussion_r401863282", "createdAt": "2020-04-01T19:40:25Z", "author": {"login": "bradyoo"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/format/SchemaConversionUtils.java", "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan.transform.format;\n+\n+import alluxio.job.plan.transform.FieldSchema;\n+import alluxio.job.plan.transform.HiveConstants;\n+import alluxio.job.plan.transform.format.csv.CsvUtils;\n+import alluxio.job.plan.transform.format.csv.Decimal;\n+\n+import org.apache.avro.LogicalTypes;\n+import org.apache.avro.Schema;\n+import org.apache.avro.SchemaBuilder;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/**\n+ * Utility Class for converting schema to Parquet.\n+ */\n+public class SchemaConversionUtils {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg0NzQ2NQ=="}, "originalCommit": {"oid": "a20ff70319d43e674e519f52466f5cd30a7c666b"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjE0NDE2OnYy", "diffSide": "RIGHT", "path": "job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcReader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxOToxMzowOFrOF_O3xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxOToxMzowOFrOF_O3xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg0ODI2MA==", "bodyText": "can you add javadoc comments for these 2 members?", "url": "https://github.com/Alluxio/alluxio/pull/11219#discussion_r401848260", "createdAt": "2020-04-01T19:13:08Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcReader.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan.transform.format.orc;\n+\n+import alluxio.AlluxioURI;\n+import alluxio.job.plan.transform.format.JobPath;\n+import alluxio.job.plan.transform.format.ReadWriterUtils;\n+import alluxio.job.plan.transform.format.TableReader;\n+import alluxio.job.plan.transform.format.TableRow;\n+import alluxio.job.plan.transform.format.TableSchema;\n+\n+import com.google.common.io.Closer;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hive.ql.exec.vector.VectorizedRowBatch;\n+import org.apache.orc.OrcFile;\n+import org.apache.orc.Reader;\n+import org.apache.orc.RecordReader;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+/**\n+ * The Orc reader.\n+ */\n+public final class OrcReader implements TableReader {\n+\n+  private final Closer mCloser;\n+  private final OrcSchema mSchema;\n+  private final Reader mReader;\n+  private final RecordReader mRows;\n+  private final List<String> mFieldNames;\n+\n+  private VectorizedRowBatch mCurrentBatch;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20ff70319d43e674e519f52466f5cd30a7c666b"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MjE0OTg3OnYy", "diffSide": "RIGHT", "path": "job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcSchema.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxOToxNDo0MVrOF_O7Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxOToxNDo0MVrOF_O7Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg0OTE4Ng==", "bodyText": "can this be initialized with the size?", "url": "https://github.com/Alluxio/alluxio/pull/11219#discussion_r401849186", "createdAt": "2020-04-01T19:14:41Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/format/orc/OrcSchema.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan.transform.format.orc;\n+\n+import alluxio.job.plan.transform.FieldSchema;\n+import alluxio.job.plan.transform.format.SchemaConversionUtils;\n+import alluxio.job.plan.transform.format.TableSchema;\n+import alluxio.job.plan.transform.format.parquet.ParquetSchema;\n+\n+import org.apache.avro.Schema;\n+import org.apache.orc.Reader;\n+import org.apache.orc.TypeDescription;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * The Orc Schema.\n+ */\n+public class OrcSchema implements TableSchema {\n+  private final ArrayList<FieldSchema> mAlluxioSchema;\n+\n+  private final Schema mWriteSchema;\n+\n+  /**\n+   * Default constructor for OrcSchema.\n+   * @param reader the orc reader\n+   */\n+  public OrcSchema(Reader reader) throws IOException {\n+    mAlluxioSchema = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a20ff70319d43e674e519f52466f5cd30a7c666b"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1811, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}