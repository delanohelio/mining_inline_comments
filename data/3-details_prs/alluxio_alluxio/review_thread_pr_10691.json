{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4ODE2OTM2", "number": 10691, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwMDoxNjo0M1rODVkrxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwMDoxNjo0M1rODVkrxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTQ3NzE5OnYy", "diffSide": "RIGHT", "path": "tests/src/test/java/alluxio/testutils/underfs/sleeping/SleepingUnderFileSystemFactory.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwMDoxNjo0M1rOFZ4ACA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjozOTowOVrOFdG9QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY3NjIzMg==", "bodyText": "Instead of directly wrapping, should we modify the conf to set managedblocking to true? This will make sleeping ufs behave more closely to normal ufs's (in cases where we do not wrap with managed blocking this will not automatically be wrapped either).", "url": "https://github.com/Alluxio/alluxio/pull/10691#discussion_r362676232", "createdAt": "2020-01-03T00:16:43Z", "author": {"login": "calvinjia"}, "path": "tests/src/test/java/alluxio/testutils/underfs/sleeping/SleepingUnderFileSystemFactory.java", "diffHunk": "@@ -41,14 +42,17 @@ public SleepingUnderFileSystemFactory(SleepingUnderFileSystemOptions options) {\n    * @param ufs the UFS instance to return on creation\n    */\n   public SleepingUnderFileSystemFactory(SleepingUnderFileSystem ufs) {\n-    mUfs = ufs;\n+    mUfs = new ManagedBlockingUfsForwarder(ufs);\n   }\n \n   @Override\n   public UnderFileSystem create(String path, UnderFileSystemConfiguration conf) {\n     if (mUfs == null) {\n       Preconditions.checkArgument(path != null, \"path may not be null\");\n-      return new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf);\n+      // Wrapping with a special forwarder to let master thread-pool know that threads will sleep\n+      // on this UFS.\n+      return new ManagedBlockingUfsForwarder(\n+          new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8ebe527451562d9e858f1c0e49c8fee9860768a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY3ODMxMA==", "bodyText": "You mean overriding the conf within SleepingUnderFileSystemFactory? Or in all tests that use SleepingUnderFileSystem ?", "url": "https://github.com/Alluxio/alluxio/pull/10691#discussion_r362678310", "createdAt": "2020-01-03T00:31:12Z", "author": {"login": "ggezer"}, "path": "tests/src/test/java/alluxio/testutils/underfs/sleeping/SleepingUnderFileSystemFactory.java", "diffHunk": "@@ -41,14 +42,17 @@ public SleepingUnderFileSystemFactory(SleepingUnderFileSystemOptions options) {\n    * @param ufs the UFS instance to return on creation\n    */\n   public SleepingUnderFileSystemFactory(SleepingUnderFileSystem ufs) {\n-    mUfs = ufs;\n+    mUfs = new ManagedBlockingUfsForwarder(ufs);\n   }\n \n   @Override\n   public UnderFileSystem create(String path, UnderFileSystemConfiguration conf) {\n     if (mUfs == null) {\n       Preconditions.checkArgument(path != null, \"path may not be null\");\n-      return new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf);\n+      // Wrapping with a special forwarder to let master thread-pool know that threads will sleep\n+      // on this UFS.\n+      return new ManagedBlockingUfsForwarder(\n+          new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY3NjIzMg=="}, "originalCommit": {"oid": "f8ebe527451562d9e858f1c0e49c8fee9860768a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY4Mjg5NA==", "bodyText": "overriding the conf within SleepingUnderFileSystemFactory if it is not set", "url": "https://github.com/Alluxio/alluxio/pull/10691#discussion_r362682894", "createdAt": "2020-01-03T01:03:10Z", "author": {"login": "calvinjia"}, "path": "tests/src/test/java/alluxio/testutils/underfs/sleeping/SleepingUnderFileSystemFactory.java", "diffHunk": "@@ -41,14 +42,17 @@ public SleepingUnderFileSystemFactory(SleepingUnderFileSystemOptions options) {\n    * @param ufs the UFS instance to return on creation\n    */\n   public SleepingUnderFileSystemFactory(SleepingUnderFileSystem ufs) {\n-    mUfs = ufs;\n+    mUfs = new ManagedBlockingUfsForwarder(ufs);\n   }\n \n   @Override\n   public UnderFileSystem create(String path, UnderFileSystemConfiguration conf) {\n     if (mUfs == null) {\n       Preconditions.checkArgument(path != null, \"path may not be null\");\n-      return new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf);\n+      // Wrapping with a special forwarder to let master thread-pool know that threads will sleep\n+      // on this UFS.\n+      return new ManagedBlockingUfsForwarder(\n+          new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY3NjIzMg=="}, "originalCommit": {"oid": "f8ebe527451562d9e858f1c0e49c8fee9860768a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjcwMzM4Mw==", "bodyText": "I feel uneasy about introducing a special config override.  Could you please explain what do you mean by ufs not being automatically wrapped?", "url": "https://github.com/Alluxio/alluxio/pull/10691#discussion_r362703383", "createdAt": "2020-01-03T04:23:44Z", "author": {"login": "ggezer"}, "path": "tests/src/test/java/alluxio/testutils/underfs/sleeping/SleepingUnderFileSystemFactory.java", "diffHunk": "@@ -41,14 +42,17 @@ public SleepingUnderFileSystemFactory(SleepingUnderFileSystemOptions options) {\n    * @param ufs the UFS instance to return on creation\n    */\n   public SleepingUnderFileSystemFactory(SleepingUnderFileSystem ufs) {\n-    mUfs = ufs;\n+    mUfs = new ManagedBlockingUfsForwarder(ufs);\n   }\n \n   @Override\n   public UnderFileSystem create(String path, UnderFileSystemConfiguration conf) {\n     if (mUfs == null) {\n       Preconditions.checkArgument(path != null, \"path may not be null\");\n-      return new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf);\n+      // Wrapping with a special forwarder to let master thread-pool know that threads will sleep\n+      // on this UFS.\n+      return new ManagedBlockingUfsForwarder(\n+          new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY3NjIzMg=="}, "originalCommit": {"oid": "f8ebe527451562d9e858f1c0e49c8fee9860768a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjg5NzAzNw==", "bodyText": "We have this property (alluxio.master.ufs.managed.blocking.enabled), right? Is @calvinjia saying just set that in here? When overriding the conf, do we just need to override the UFS conf, or would we need to override the server conf? I don't think we can or should update server conf in a UFS.", "url": "https://github.com/Alluxio/alluxio/pull/10691#discussion_r362897037", "createdAt": "2020-01-03T17:41:03Z", "author": {"login": "gpang"}, "path": "tests/src/test/java/alluxio/testutils/underfs/sleeping/SleepingUnderFileSystemFactory.java", "diffHunk": "@@ -41,14 +42,17 @@ public SleepingUnderFileSystemFactory(SleepingUnderFileSystemOptions options) {\n    * @param ufs the UFS instance to return on creation\n    */\n   public SleepingUnderFileSystemFactory(SleepingUnderFileSystem ufs) {\n-    mUfs = ufs;\n+    mUfs = new ManagedBlockingUfsForwarder(ufs);\n   }\n \n   @Override\n   public UnderFileSystem create(String path, UnderFileSystemConfiguration conf) {\n     if (mUfs == null) {\n       Preconditions.checkArgument(path != null, \"path may not be null\");\n-      return new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf);\n+      // Wrapping with a special forwarder to let master thread-pool know that threads will sleep\n+      // on this UFS.\n+      return new ManagedBlockingUfsForwarder(\n+          new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY3NjIzMg=="}, "originalCommit": {"oid": "f8ebe527451562d9e858f1c0e49c8fee9860768a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyNTk5OQ==", "bodyText": "Currently the managed blocking flag is turned on if isObjectStore is true or if the managed blocking configuration value is set. I would prefer to use one mechanism to determine if we are using managed blocking.\nWhat I mean is - if somewhere in our code we get a new S3AUnderFileSystem, it will not be wrapped in managed blocking (only if it is created through the UfsManager).", "url": "https://github.com/Alluxio/alluxio/pull/10691#discussion_r362925999", "createdAt": "2020-01-03T19:11:28Z", "author": {"login": "calvinjia"}, "path": "tests/src/test/java/alluxio/testutils/underfs/sleeping/SleepingUnderFileSystemFactory.java", "diffHunk": "@@ -41,14 +42,17 @@ public SleepingUnderFileSystemFactory(SleepingUnderFileSystemOptions options) {\n    * @param ufs the UFS instance to return on creation\n    */\n   public SleepingUnderFileSystemFactory(SleepingUnderFileSystem ufs) {\n-    mUfs = ufs;\n+    mUfs = new ManagedBlockingUfsForwarder(ufs);\n   }\n \n   @Override\n   public UnderFileSystem create(String path, UnderFileSystemConfiguration conf) {\n     if (mUfs == null) {\n       Preconditions.checkArgument(path != null, \"path may not be null\");\n-      return new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf);\n+      // Wrapping with a special forwarder to let master thread-pool know that threads will sleep\n+      // on this UFS.\n+      return new ManagedBlockingUfsForwarder(\n+          new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY3NjIzMg=="}, "originalCommit": {"oid": "f8ebe527451562d9e858f1c0e49c8fee9860768a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk4Nzc0Ng==", "bodyText": "@gpang right, it would be set in the ufsconf, ideally we want to check if it has been set already (not sure if we can distinguish between set and default value though)", "url": "https://github.com/Alluxio/alluxio/pull/10691#discussion_r362987746", "createdAt": "2020-01-03T22:55:20Z", "author": {"login": "calvinjia"}, "path": "tests/src/test/java/alluxio/testutils/underfs/sleeping/SleepingUnderFileSystemFactory.java", "diffHunk": "@@ -41,14 +42,17 @@ public SleepingUnderFileSystemFactory(SleepingUnderFileSystemOptions options) {\n    * @param ufs the UFS instance to return on creation\n    */\n   public SleepingUnderFileSystemFactory(SleepingUnderFileSystem ufs) {\n-    mUfs = ufs;\n+    mUfs = new ManagedBlockingUfsForwarder(ufs);\n   }\n \n   @Override\n   public UnderFileSystem create(String path, UnderFileSystemConfiguration conf) {\n     if (mUfs == null) {\n       Preconditions.checkArgument(path != null, \"path may not be null\");\n-      return new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf);\n+      // Wrapping with a special forwarder to let master thread-pool know that threads will sleep\n+      // on this UFS.\n+      return new ManagedBlockingUfsForwarder(\n+          new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY3NjIzMg=="}, "originalCommit": {"oid": "f8ebe527451562d9e858f1c0e49c8fee9860768a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA2NzAwOA==", "bodyText": "Understood. PTAL at the updated commit.", "url": "https://github.com/Alluxio/alluxio/pull/10691#discussion_r366067008", "createdAt": "2020-01-13T22:39:09Z", "author": {"login": "ggezer"}, "path": "tests/src/test/java/alluxio/testutils/underfs/sleeping/SleepingUnderFileSystemFactory.java", "diffHunk": "@@ -41,14 +42,17 @@ public SleepingUnderFileSystemFactory(SleepingUnderFileSystemOptions options) {\n    * @param ufs the UFS instance to return on creation\n    */\n   public SleepingUnderFileSystemFactory(SleepingUnderFileSystem ufs) {\n-    mUfs = ufs;\n+    mUfs = new ManagedBlockingUfsForwarder(ufs);\n   }\n \n   @Override\n   public UnderFileSystem create(String path, UnderFileSystemConfiguration conf) {\n     if (mUfs == null) {\n       Preconditions.checkArgument(path != null, \"path may not be null\");\n-      return new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf);\n+      // Wrapping with a special forwarder to let master thread-pool know that threads will sleep\n+      // on this UFS.\n+      return new ManagedBlockingUfsForwarder(\n+          new SleepingUnderFileSystem(new AlluxioURI(path), mOptions, conf));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY3NjIzMg=="}, "originalCommit": {"oid": "f8ebe527451562d9e858f1c0e49c8fee9860768a"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2186, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}