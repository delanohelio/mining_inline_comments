{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxOTU2MzAy", "number": 12257, "title": "[DOCFIX] Clarify the consistency and writing with ASYNC_THROUGH", "bodyText": "Fix #11987", "createdAt": "2020-10-13T03:40:42Z", "url": "https://github.com/Alluxio/alluxio/pull/12257", "merged": true, "mergeCommit": {"oid": "bc5929e4fd22d4fc2041c7e372ec30f19906ff84"}, "closed": true, "closedAt": "2020-10-17T05:22:28Z", "author": {"login": "maobaolong"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdR_7_1AH2gAyNTAxOTU2MzAyOjkzNzA2ZmVlNjVkZGRkYWNiMzFiZWFjYTE5NjdmZDExODU2MDAzYWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTUCAEgFqTUxMDk1MTg3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "93706fee65ddddacb31beaca1967fd11856003aa", "author": {"user": {"login": "maobaolong", "name": "maobaolong"}}, "url": "https://github.com/Alluxio/alluxio/commit/93706fee65ddddacb31beaca1967fd11856003aa", "committedDate": "2020-10-13T03:23:30Z", "message": "Improve the Write Data flow chapter, clarify the consistency and writing with `ASYNC_THROUGH` avoid one worker crashes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzQ0OTc3", "url": "https://github.com/Alluxio/alluxio/pull/12257#pullrequestreview-507744977", "createdAt": "2020-10-13T19:04:40Z", "commit": {"oid": "93706fee65ddddacb31beaca1967fd11856003aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTowNDo0MFrOHg1WJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTowNDo0MFrOHg1WJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5MDUwMA==", "bodyText": "regardless of write types, files/dirs in Alluxio space always strongly consistent as all these write operations will go through Alluxio master first and modify Alluxio file system before return the the client/applications. So for applications talking to Alluxio, they will always see the latest update as long as the write operation complete successfully.\nHowever, for users or applications taking the state in UFS into account, it might be different across write types:\n\nMUST_CACHE writes no data to UFS, so Alluxio space is never consistent with UFS\nCACHE_THROUGH writes data synchronously to Alluxio and UFS before returning success to applications. If writing to UFS is also strong consistent (e.g., HDFS), Alluxio space will be always consistent with UFS; if writing to UFS is eventual consistent (e.g. S3), it is possible that the file is written successfully to Alluxio but shown up in UFS later.\nASYNC_THROUGH writes data to Alluxio and return to applications, leaving Alluxio to propagate the data to UFS asynchronously. From users perspective, the file can be written successfully to Alluxio, but get persisted in UFS later.\nTHROUGH writes data to UFS directly without caching the data in Alluxio, however, Alluxio knows the files and its status.  Thus the metadata is still consistent.", "url": "https://github.com/Alluxio/alluxio/pull/12257#discussion_r504190500", "createdAt": "2020-10-13T19:04:40Z", "author": {"login": "apc999"}, "path": "docs/en/overview/Architecture.md", "diffHunk": "@@ -257,6 +257,11 @@ configuring the property\n in the client. This section describes the behaviors of different write types as\n well as the performance implications to the applications.\n \n+If you are writing with write type `MUST_CACHE`, `CACHE_THROUGH` or `ASYNC_THROUGH`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93706fee65ddddacb31beaca1967fd11856003aa"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzQ1NjQ1", "url": "https://github.com/Alluxio/alluxio/pull/12257#pullrequestreview-507745645", "createdAt": "2020-10-13T19:05:36Z", "commit": {"oid": "93706fee65ddddacb31beaca1967fd11856003aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTowNTozNlrOHg1YLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTowNTozNlrOHg1YLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5MTAyMg==", "bodyText": "depending on the data replications, if data is replicated to n copies and only n-1 workers crashed, there will be no data loss", "url": "https://github.com/Alluxio/alluxio/pull/12257#discussion_r504191022", "createdAt": "2020-10-13T19:05:36Z", "author": {"login": "apc999"}, "path": "docs/en/overview/Architecture.md", "diffHunk": "@@ -298,11 +303,13 @@ close to `MUST_CACHE`, while still being able to persist the data. Since Alluxio\n <img src=\"{{ '/img/dataflow-async-through.gif' | relativize_url }}\" alt=\"ASYNC_THROUGH data flow\"/>\n </p>\n \n+If you are writing with `ASYNC_THROUGH` and the worker crashes before you persist the data, then you will incur a data loss.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93706fee65ddddacb31beaca1967fd11856003aa"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzQ2MjEz", "url": "https://github.com/Alluxio/alluxio/pull/12257#pullrequestreview-507746213", "createdAt": "2020-10-13T19:06:27Z", "commit": {"oid": "93706fee65ddddacb31beaca1967fd11856003aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTowNjoyOFrOHg1Z-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTowNjoyOFrOHg1Z-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE5MTQ4Mw==", "bodyText": "correct", "url": "https://github.com/Alluxio/alluxio/pull/12257#discussion_r504191483", "createdAt": "2020-10-13T19:06:28Z", "author": {"login": "apc999"}, "path": "docs/en/overview/Architecture.md", "diffHunk": "@@ -298,11 +303,13 @@ close to `MUST_CACHE`, while still being able to persist the data. Since Alluxio\n <img src=\"{{ '/img/dataflow-async-through.gif' | relativize_url }}\" alt=\"ASYNC_THROUGH data flow\"/>\n </p>\n \n+If you are writing with `ASYNC_THROUGH` and the worker crashes before you persist the data, then you will incur a data loss.\n+\n To provide fault tolerance, one important property working with `ASYNC_THROUGH` is\n `alluxio.user.file.replication.durable`. This property sets a target replication level of new data\n in Alluxio after write completes but before the data is persisted to the under storage, with a\n default value 1. Alluxio will maintain the target replication level of the file before the\n-background persist process completes, and reclaim the space in Alluxio afterwards.\n+background persist process completes, and reclaim the space in Alluxio afterwards, so the data will only be written to the UFS once.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93706fee65ddddacb31beaca1967fd11856003aa"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8553df772708d9e889d121f7f0ced045fce1dd68", "author": {"user": {"login": "maobaolong", "name": "maobaolong"}}, "url": "https://github.com/Alluxio/alluxio/commit/8553df772708d9e889d121f7f0ced045fce1dd68", "committedDate": "2020-10-15T06:32:49Z", "message": "Make more rigorous and new a subsection under Data flow: Write"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b70e851b84ca9b82e2fd7402610ccbdcd5f627e", "author": {"user": {"login": "maobaolong", "name": "maobaolong"}}, "url": "https://github.com/Alluxio/alluxio/commit/8b70e851b84ca9b82e2fd7402610ccbdcd5f627e", "committedDate": "2020-10-16T07:58:35Z", "message": "trigger new ci check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce37602328d55675f7a601a8a88390e6a38ea993", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/ce37602328d55675f7a601a8a88390e6a38ea993", "committedDate": "2020-10-17T05:21:38Z", "message": "Update Architecture.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTUxODc1", "url": "https://github.com/Alluxio/alluxio/pull/12257#pullrequestreview-510951875", "createdAt": "2020-10-17T05:22:05Z", "commit": {"oid": "ce37602328d55675f7a601a8a88390e6a38ea993"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3532, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}