{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTgxMTQ0", "number": 10900, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMzowNDowM1rODfXPeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo0MTowMFrODfrLFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MjEzMjQyOnYy", "diffSide": "RIGHT", "path": "table/server/master/src/main/java/alluxio/master/table/Database.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMzowNDowM1rOFpBuDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMzoxOToyMVrOFpCCdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU2NDEwOA==", "bodyText": "This looks like the same implementation from InstancedConfiguration, but maybe we can extract this into a function in FormatUtils or CommonUtils so we don't have the code in both places?", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r378564108", "createdAt": "2020-02-12T23:04:03Z", "author": {"login": "ZacBlanco"}, "path": "table/server/master/src/main/java/alluxio/master/table/Database.java", "diffHunk": "@@ -58,20 +60,23 @@\n   private final String mName;\n   private final Map<String, Table> mTables;\n   private final UnderDatabase mUdb;\n-  private final Map<String, String> mConfig;\n+  private final CatalogConfiguration mConfig;\n+  private final Set<String> mIgnoreTables;\n   private final long mUdbSyncTimeoutMs =\n       ServerConfiguration.getMs(PropertyKey.TABLE_CATALOG_UDB_SYNC_TIMEOUT);\n \n   private DatabaseInfo mDatabaseInfo;\n \n   private Database(CatalogContext context, String type, String name, UnderDatabase udb,\n-      Map<String, String> configMap) {\n+      CatalogConfiguration config) {\n     mContext = context;\n     mType = type;\n     mName = name;\n     mTables = new ConcurrentHashMap<>();\n     mUdb = udb;\n-    mConfig = configMap;\n+    mConfig = config;\n+    mIgnoreTables = Sets.newHashSet(Splitter.on(\",\").trimResults().omitEmptyStrings()\n+        .split(mConfig.get(CatalogProperty.DB_IGNORE_TABLES)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a821a078f40050d4c23bbce409221541272d4f28"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU2OTMzNA==", "bodyText": "I extract that part.", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r378569334", "createdAt": "2020-02-12T23:19:21Z", "author": {"login": "gpang"}, "path": "table/server/master/src/main/java/alluxio/master/table/Database.java", "diffHunk": "@@ -58,20 +60,23 @@\n   private final String mName;\n   private final Map<String, Table> mTables;\n   private final UnderDatabase mUdb;\n-  private final Map<String, String> mConfig;\n+  private final CatalogConfiguration mConfig;\n+  private final Set<String> mIgnoreTables;\n   private final long mUdbSyncTimeoutMs =\n       ServerConfiguration.getMs(PropertyKey.TABLE_CATALOG_UDB_SYNC_TIMEOUT);\n \n   private DatabaseInfo mDatabaseInfo;\n \n   private Database(CatalogContext context, String type, String name, UnderDatabase udb,\n-      Map<String, String> configMap) {\n+      CatalogConfiguration config) {\n     mContext = context;\n     mType = type;\n     mName = name;\n     mTables = new ConcurrentHashMap<>();\n     mUdb = udb;\n-    mConfig = configMap;\n+    mConfig = config;\n+    mIgnoreTables = Sets.newHashSet(Splitter.on(\",\").trimResults().omitEmptyStrings()\n+        .split(mConfig.get(CatalogProperty.DB_IGNORE_TABLES)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU2NDEwOA=="}, "originalCommit": {"oid": "a821a078f40050d4c23bbce409221541272d4f28"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MjI1NTQwOnYy", "diffSide": "RIGHT", "path": "core/common/src/test/java/alluxio/util/ConfigurationUtilsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMDowNjoxNFrOFpC5vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyMjoxOFrOFpF7Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4MzQ4NQ==", "bodyText": "Can we add a case for a,,b to make sure empty strings are omitted?", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r378583485", "createdAt": "2020-02-13T00:06:14Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/test/java/alluxio/util/ConfigurationUtilsTest.java", "diffHunk": "@@ -142,6 +143,15 @@ public void testMasterNotConfiguredMessage() {\n         ConfigurationUtils.getJobMasterHostNotConfiguredMessage(\"test service 2\"));\n   }\n \n+  @Test\n+  public void parseAsList() {\n+    assertEquals(Lists.newArrayList(\"a\"), ConfigurationUtils.parseAsList(\"a\", \",\"));\n+    assertEquals(Lists.newArrayList(\"a\", \"b\", \"c\"), ConfigurationUtils.parseAsList(\"a,b,c\", \",\"));\n+    assertEquals(Lists.newArrayList(\"a\", \"b\", \"c\"),\n+        ConfigurationUtils.parseAsList(\" a , b , c \", \",\"));\n+    assertEquals(Lists.newArrayList(\"a,b,c\"), ConfigurationUtils.parseAsList(\"a,b,c\", \";\"));\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "609d86cf23325f4725e849cb5835d6a67334bb91"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzMjk4Mw==", "bodyText": "Good call. Added.", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r378632983", "createdAt": "2020-02-13T03:22:18Z", "author": {"login": "gpang"}, "path": "core/common/src/test/java/alluxio/util/ConfigurationUtilsTest.java", "diffHunk": "@@ -142,6 +143,15 @@ public void testMasterNotConfiguredMessage() {\n         ConfigurationUtils.getJobMasterHostNotConfiguredMessage(\"test service 2\"));\n   }\n \n+  @Test\n+  public void parseAsList() {\n+    assertEquals(Lists.newArrayList(\"a\"), ConfigurationUtils.parseAsList(\"a\", \",\"));\n+    assertEquals(Lists.newArrayList(\"a\", \"b\", \"c\"), ConfigurationUtils.parseAsList(\"a,b,c\", \",\"));\n+    assertEquals(Lists.newArrayList(\"a\", \"b\", \"c\"),\n+        ConfigurationUtils.parseAsList(\" a , b , c \", \",\"));\n+    assertEquals(Lists.newArrayList(\"a,b,c\"), ConfigurationUtils.parseAsList(\"a,b,c\", \";\"));\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4MzQ4NQ=="}, "originalCommit": {"oid": "609d86cf23325f4725e849cb5835d6a67334bb91"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MjI1NjIwOnYy", "diffSide": "RIGHT", "path": "core/common/src/main/java/alluxio/util/ConfigurationUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMDowNjo0M1rOFpC6OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMzoyOToyOFrOFpGAzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4MzYwOA==", "bodyText": "Not sure if you updated all this by hand or automatically formatted, but I think the old version of this is easier to read", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r378583608", "createdAt": "2020-02-13T00:06:43Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/util/ConfigurationUtils.java", "diffHunk": "@@ -358,10 +357,8 @@ public static boolean isHaMode(AlluxioConfiguration conf) {\n \n     List<ConfigProperty> configs = new ArrayList<>();\n     List<PropertyKey> selectedKeys =\n-        conf.keySet().stream()\n-            .filter(key -> GrpcUtils.contains(key.getScope(), scope))\n-            .filter(key -> key.isValid(key.getName()))\n-            .collect(toList());\n+        conf.keySet().stream().filter(key -> GrpcUtils.contains(key.getScope(), scope))\n+            .filter(key -> key.isValid(key.getName())).collect(toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "609d86cf23325f4725e849cb5835d6a67334bb91"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYzNDQ0NQ==", "bodyText": "It was auto-formatted. I reverted back.", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r378634445", "createdAt": "2020-02-13T03:29:28Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/util/ConfigurationUtils.java", "diffHunk": "@@ -358,10 +357,8 @@ public static boolean isHaMode(AlluxioConfiguration conf) {\n \n     List<ConfigProperty> configs = new ArrayList<>();\n     List<PropertyKey> selectedKeys =\n-        conf.keySet().stream()\n-            .filter(key -> GrpcUtils.contains(key.getScope(), scope))\n-            .filter(key -> key.isValid(key.getName()))\n-            .collect(toList());\n+        conf.keySet().stream().filter(key -> GrpcUtils.contains(key.getScope(), scope))\n+            .filter(key -> key.isValid(key.getName())).collect(toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4MzYwOA=="}, "originalCommit": {"oid": "609d86cf23325f4725e849cb5835d6a67334bb91"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTM3MzA4OnYy", "diffSide": "LEFT", "path": "table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTozMjo0M1rOFpg2Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo1MjoyNVrOFphc8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NDE1MA==", "bodyText": "why delete this? do we not need it for GLUE?", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r379074150", "createdAt": "2020-02-13T19:32:43Z", "author": {"login": "yuzhu"}, "path": "table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java", "diffHunk": "@@ -26,6 +26,7 @@ private CatalogProperty(String name, String description, String defaultValue) {\n     super(name, description, defaultValue);\n   }\n \n-  public static final CatalogProperty DB_TYPE =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b2a84e7a7e073e8447087700f745b9119759e0a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4NDAxOA==", "bodyText": "Yeah, this was unused. We passed in the type in a different way.", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r379084018", "createdAt": "2020-02-13T19:52:25Z", "author": {"login": "gpang"}, "path": "table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java", "diffHunk": "@@ -26,6 +26,7 @@ private CatalogProperty(String name, String description, String defaultValue) {\n     super(name, description, defaultValue);\n   }\n \n-  public static final CatalogProperty DB_TYPE =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3NDE1MA=="}, "originalCommit": {"oid": "7b2a84e7a7e073e8447087700f745b9119759e0a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTM5Nzk5OnYy", "diffSide": "RIGHT", "path": "table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo0MTowMFrOFphGYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMDoxOToxMVrOFpiNfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3ODI0Mw==", "bodyText": "does this option affect deletion? should we have a comment about that?", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r379078243", "createdAt": "2020-02-13T19:41:00Z", "author": {"login": "yuzhu"}, "path": "table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java", "diffHunk": "@@ -26,6 +26,7 @@ private CatalogProperty(String name, String description, String defaultValue) {\n     super(name, description, defaultValue);\n   }\n \n-  public static final CatalogProperty DB_TYPE =\n-      new CatalogProperty(\"db.type\", \"The type of database. Possible values are: hive\", \"\");\n+  public static final CatalogProperty DB_IGNORE_TABLES =\n+      new CatalogProperty(\"catalog.db.ignore.tables\",\n+          \"The comma-separated list of table names to ignore from the UDB.\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b2a84e7a7e073e8447087700f745b9119759e0a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA5NjQ0NQ==", "bodyText": "For now, it is only related to getting tables from udb via udb sync.", "url": "https://github.com/Alluxio/alluxio/pull/10900#discussion_r379096445", "createdAt": "2020-02-13T20:19:11Z", "author": {"login": "gpang"}, "path": "table/server/master/src/main/java/alluxio/master/table/CatalogProperty.java", "diffHunk": "@@ -26,6 +26,7 @@ private CatalogProperty(String name, String description, String defaultValue) {\n     super(name, description, defaultValue);\n   }\n \n-  public static final CatalogProperty DB_TYPE =\n-      new CatalogProperty(\"db.type\", \"The type of database. Possible values are: hive\", \"\");\n+  public static final CatalogProperty DB_IGNORE_TABLES =\n+      new CatalogProperty(\"catalog.db.ignore.tables\",\n+          \"The comma-separated list of table names to ignore from the UDB.\", \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3ODI0Mw=="}, "originalCommit": {"oid": "7b2a84e7a7e073e8447087700f745b9119759e0a"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2026, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}