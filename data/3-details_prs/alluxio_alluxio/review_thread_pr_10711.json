{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNzIxODQ0", "number": 10711, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwMTowMDo0NlrODXBuFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODo1NzowMFrODXPhLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NDcyMDIwOnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwMTowMDo0NlrOFcHyGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMTozMDo1N1rOFcglKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzMTk2Mg==", "bodyText": "is this the correct annotation to import?", "url": "https://github.com/Alluxio/alluxio/pull/10711#discussion_r365031962", "createdAt": "2020-01-10T01:00:46Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -15,44 +15,48 @@\n import alluxio.Constants;\n import alluxio.client.file.FileInStream;\n import alluxio.client.file.FileSystem;\n+import alluxio.client.file.URIStatus;\n import alluxio.exception.AlluxioException;\n import alluxio.grpc.OpenFilePOptions;\n import alluxio.util.io.BufferUtils;\n \n import com.google.common.base.Preconditions;\n import com.google.common.io.Closer;\n+import net.jcip.annotations.NotThreadSafe;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0ed1cddde09d913d185cd453190e5f2b967aee1"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzODI0OA==", "bodyText": "Updated, thanks.", "url": "https://github.com/Alluxio/alluxio/pull/10711#discussion_r365438248", "createdAt": "2020-01-10T21:30:57Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -15,44 +15,48 @@\n import alluxio.Constants;\n import alluxio.client.file.FileInStream;\n import alluxio.client.file.FileSystem;\n+import alluxio.client.file.URIStatus;\n import alluxio.exception.AlluxioException;\n import alluxio.grpc.OpenFilePOptions;\n import alluxio.util.io.BufferUtils;\n \n import com.google.common.base.Preconditions;\n import com.google.common.io.Closer;\n+import net.jcip.annotations.NotThreadSafe;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAzMTk2Mg=="}, "originalCommit": {"oid": "e0ed1cddde09d913d185cd453190e5f2b967aee1"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Njk4MDkyOnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODo1NzowMFrOFcdIIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMTozMToxOFrOFcgltA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4MTY2Nw==", "bodyText": "just FYI, page size will be a user facing config key after #10707", "url": "https://github.com/Alluxio/alluxio/pull/10711#discussion_r365381667", "createdAt": "2020-01-10T18:57:00Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -15,44 +15,48 @@\n import alluxio.Constants;\n import alluxio.client.file.FileInStream;\n import alluxio.client.file.FileSystem;\n+import alluxio.client.file.URIStatus;\n import alluxio.exception.AlluxioException;\n import alluxio.grpc.OpenFilePOptions;\n import alluxio.util.io.BufferUtils;\n \n import com.google.common.base.Preconditions;\n import com.google.common.io.Closer;\n+import net.jcip.annotations.NotThreadSafe;\n \n import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.ReadableByteChannel;\n \n+@NotThreadSafe\n public class LocalCacheFileInStream extends FileInStream {\n \n   /** Page size in bytes. Needs to be configurable */\n-  private static final long PAGE_SIZE = 1 * Constants.MB;\n+  protected static final long PAGE_SIZE = 1 * Constants.MB;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0ed1cddde09d913d185cd453190e5f2b967aee1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzODM4OA==", "bodyText": "Yeah let's refactor it afterward, I agree it doesn't make sense here.", "url": "https://github.com/Alluxio/alluxio/pull/10711#discussion_r365438388", "createdAt": "2020-01-10T21:31:18Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -15,44 +15,48 @@\n import alluxio.Constants;\n import alluxio.client.file.FileInStream;\n import alluxio.client.file.FileSystem;\n+import alluxio.client.file.URIStatus;\n import alluxio.exception.AlluxioException;\n import alluxio.grpc.OpenFilePOptions;\n import alluxio.util.io.BufferUtils;\n \n import com.google.common.base.Preconditions;\n import com.google.common.io.Closer;\n+import net.jcip.annotations.NotThreadSafe;\n \n import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.ReadableByteChannel;\n \n+@NotThreadSafe\n public class LocalCacheFileInStream extends FileInStream {\n \n   /** Page size in bytes. Needs to be configurable */\n-  private static final long PAGE_SIZE = 1 * Constants.MB;\n+  protected static final long PAGE_SIZE = 1 * Constants.MB;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4MTY2Nw=="}, "originalCommit": {"oid": "e0ed1cddde09d913d185cd453190e5f2b967aee1"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2202, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}