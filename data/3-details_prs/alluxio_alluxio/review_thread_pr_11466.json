{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxODIzODU3", "number": 11466, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDoyNjowM1rOD-5x0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDowMDo1MlrOD_0_JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Mjg0OTQ0OnYy", "diffSide": "RIGHT", "path": "core/server/worker/src/main/java/alluxio/worker/block/management/ManagementTaskCoordinator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDoyNjowM1rOGZST4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwOTo1OTozOFrOGZol9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2NzU4Ng==", "bodyText": "@calvinjia\nWhat do you think about making this log INFO level?\nIt would only print when a management task actually ran.\nAt the worst this would print every 10 seconds when;\n\nBackoffStrategy is DIRECTORY\nTiers don't align\nAlignTask can't make progress (due to failures or heavy load)\n\nI prefer this over crafting an admin report because the latter can't provide information for a full range without persistence at worker/master. I think this would be sufficient until at least we stabilize worker management infra.", "url": "https://github.com/Alluxio/alluxio/pull/11466#discussion_r429167586", "createdAt": "2020-05-22T10:26:03Z", "author": {"login": "ggezer"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/management/ManagementTaskCoordinator.java", "diffHunk": "@@ -181,12 +181,19 @@ private void runManagement() {\n         LOG.debug(\"Running task of type:{}\", currentTask.getClass().getSimpleName());\n         // Run the current task on coordinator thread.\n         try {\n-          currentTask.run();\n+          BlockManagementTaskResult result = currentTask.run();\n+          LOG.debug(\"Management task: {} finished with result: {}\",\n+              currentTask.getClass().getSimpleName(), result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "060caa13930b69af697cdb57d84110bf29d18a55"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ1NjQwNg==", "bodyText": "I think that's fine, we can also add a template to raise the log level of this class if it is too noisy.", "url": "https://github.com/Alluxio/alluxio/pull/11466#discussion_r429456406", "createdAt": "2020-05-22T21:24:11Z", "author": {"login": "calvinjia"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/management/ManagementTaskCoordinator.java", "diffHunk": "@@ -181,12 +181,19 @@ private void runManagement() {\n         LOG.debug(\"Running task of type:{}\", currentTask.getClass().getSimpleName());\n         // Run the current task on coordinator thread.\n         try {\n-          currentTask.run();\n+          BlockManagementTaskResult result = currentTask.run();\n+          LOG.debug(\"Management task: {} finished with result: {}\",\n+              currentTask.getClass().getSimpleName(), result);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2NzU4Ng=="}, "originalCommit": {"oid": "060caa13930b69af697cdb57d84110bf29d18a55"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzMjY2MQ==", "bodyText": "Cool. I don't think it will be noisy. I will watch for a while though.", "url": "https://github.com/Alluxio/alluxio/pull/11466#discussion_r429532661", "createdAt": "2020-05-23T09:59:38Z", "author": {"login": "ggezer"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/management/ManagementTaskCoordinator.java", "diffHunk": "@@ -181,12 +181,19 @@ private void runManagement() {\n         LOG.debug(\"Running task of type:{}\", currentTask.getClass().getSimpleName());\n         // Run the current task on coordinator thread.\n         try {\n-          currentTask.run();\n+          BlockManagementTaskResult result = currentTask.run();\n+          LOG.debug(\"Management task: {} finished with result: {}\",\n+              currentTask.getClass().getSimpleName(), result);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2NzU4Ng=="}, "originalCommit": {"oid": "060caa13930b69af697cdb57d84110bf29d18a55"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDYyNzMzOnYy", "diffSide": "RIGHT", "path": "core/server/worker/src/main/java/alluxio/worker/block/management/BlockManagementTaskResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMToxOToyNVrOGZj3TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMToxOToyNVrOGZj3TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ1NTE4MQ==", "bodyText": "Use a map here?", "url": "https://github.com/Alluxio/alluxio/pull/11466#discussion_r429455181", "createdAt": "2020-05-22T21:19:25Z", "author": {"login": "calvinjia"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/management/BlockManagementTaskResult.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.worker.block.management;\n+\n+import com.google.common.base.MoreObjects;\n+\n+import java.util.Hashtable;\n+import java.util.Map;\n+\n+/**\n+ * Holds results of a {@link BlockManagementTask}.\n+ *\n+ * It contains sub-results for each {@link BlockOperationType} that is issued\n+ * by the magement task.\n+ */\n+public class BlockManagementTaskResult {\n+  /** Map of block-operation results. */\n+  private Hashtable<BlockOperationType, BlockOperationResult> mBlockOpResults;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "060caa13930b69af697cdb57d84110bf29d18a55"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDYyODA1OnYy", "diffSide": "RIGHT", "path": "core/server/worker/src/main/java/alluxio/worker/block/management/BlockManagementTaskResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMToxOTo1MlrOGZj3tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMToxOTo1MlrOGZj3tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ1NTI4NA==", "bodyText": "Add @NotThreadSafe?", "url": "https://github.com/Alluxio/alluxio/pull/11466#discussion_r429455284", "createdAt": "2020-05-22T21:19:52Z", "author": {"login": "calvinjia"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/management/BlockManagementTaskResult.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.worker.block.management;\n+\n+import com.google.common.base.MoreObjects;\n+\n+import java.util.Hashtable;\n+import java.util.Map;\n+\n+/**\n+ * Holds results of a {@link BlockManagementTask}.\n+ *\n+ * It contains sub-results for each {@link BlockOperationType} that is issued\n+ * by the magement task.\n+ */\n+public class BlockManagementTaskResult {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "060caa13930b69af697cdb57d84110bf29d18a55"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjU1MDEyOnYy", "diffSide": "RIGHT", "path": "core/server/worker/src/main/java/alluxio/worker/block/management/BlockManagementTaskResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMDowMDo1MlrOGauSKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMjowMDowMlrOGaxxiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY3NDQ3Mw==", "bodyText": "Any reason we want to use HashTable here?", "url": "https://github.com/Alluxio/alluxio/pull/11466#discussion_r430674473", "createdAt": "2020-05-26T20:00:52Z", "author": {"login": "calvinjia"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/management/BlockManagementTaskResult.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.worker.block.management;\n+\n+import com.google.common.base.MoreObjects;\n+import net.jcip.annotations.NotThreadSafe;\n+\n+import java.util.Hashtable;\n+import java.util.Map;\n+\n+/**\n+ * Holds results of a {@link BlockManagementTask}.\n+ *\n+ * It contains sub-results for each {@link BlockOperationType} that is issued\n+ * by the magement task.\n+ */\n+@NotThreadSafe\n+public class BlockManagementTaskResult {\n+  /** Map of block-operation results. */\n+  private Map<BlockOperationType, BlockOperationResult> mBlockOpResults;\n+\n+  /**\n+   * Creates a new empty task result.\n+   */\n+  public BlockManagementTaskResult() {\n+    mBlockOpResults = new Hashtable<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "494cc56c6b090f4e3b704582266a6160d71550f2"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDczMTY1OQ==", "bodyText": "no reason. just accidents. fixed.", "url": "https://github.com/Alluxio/alluxio/pull/11466#discussion_r430731659", "createdAt": "2020-05-26T22:00:02Z", "author": {"login": "ggezer"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/management/BlockManagementTaskResult.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.worker.block.management;\n+\n+import com.google.common.base.MoreObjects;\n+import net.jcip.annotations.NotThreadSafe;\n+\n+import java.util.Hashtable;\n+import java.util.Map;\n+\n+/**\n+ * Holds results of a {@link BlockManagementTask}.\n+ *\n+ * It contains sub-results for each {@link BlockOperationType} that is issued\n+ * by the magement task.\n+ */\n+@NotThreadSafe\n+public class BlockManagementTaskResult {\n+  /** Map of block-operation results. */\n+  private Map<BlockOperationType, BlockOperationResult> mBlockOpResults;\n+\n+  /**\n+   * Creates a new empty task result.\n+   */\n+  public BlockManagementTaskResult() {\n+    mBlockOpResults = new Hashtable<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY3NDQ3Mw=="}, "originalCommit": {"oid": "494cc56c6b090f4e3b704582266a6160d71550f2"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1551, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}