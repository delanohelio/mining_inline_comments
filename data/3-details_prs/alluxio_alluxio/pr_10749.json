{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyODkzMDMx", "number": 10749, "title": "Fix some bugs and add new properties for client-side cache", "bodyText": "Fixed index out of bound exception for cache manager locking.\nFixed exception when reading from stream with oversized buffer.\nAdded properties to configure page store directory and type.", "createdAt": "2020-01-14T23:51:50Z", "url": "https://github.com/Alluxio/alluxio/pull/10749", "merged": true, "mergeCommit": {"oid": "0f6a556bb73f02a026e4602381d62bf1855ca8f7"}, "closed": true, "closedAt": "2020-01-15T01:57:18Z", "author": {"login": "bf8086"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6Z2KBgH2gAyMzYyODkzMDMxOjZiNTM3Y2ViNjJjMTE3MmVhYjUzNzM1YzE1ZTE2NTAxNDMzODk0NWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6bantgFqTM0Mjk0NTc4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/6b537ceb62c1172eab53735c15e165014338945b", "committedDate": "2020-01-14T23:49:19Z", "message": "bug fixes and new properties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTE2ODMy", "url": "https://github.com/Alluxio/alluxio/pull/10749#pullrequestreview-342916832", "createdAt": "2020-01-14T23:59:05Z", "commit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTIwNDkx", "url": "https://github.com/Alluxio/alluxio/pull/10749#pullrequestreview-342920491", "createdAt": "2020-01-15T00:10:56Z", "commit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMDoxMDo1NlrOFdp0tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMDoxMDo1NlrOFdp0tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYzODI2MA==", "bodyText": "mPosition >= mStatus.getLength()?", "url": "https://github.com/Alluxio/alluxio/pull/10749#discussion_r366638260", "createdAt": "2020-01-15T00:10:56Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -100,9 +100,15 @@ public int read(byte[] b) throws IOException {\n \n   @Override\n   public int read(byte[] b, int off, int len) throws IOException {\n+    if (len == 0) {\n+      return 0;\n+    }\n+    if (mPosition == mStatus.getLength()) { // at end of file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTIzNzcx", "url": "https://github.com/Alluxio/alluxio/pull/10749#pullrequestreview-342923771", "createdAt": "2020-01-15T00:21:16Z", "commit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMDoyMToxNlrOFdqALA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMDoyMToxNlrOFdqALA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY0MTE5Ng==", "bodyText": "please include numbers we are checking here in the error message, or it is hard to tell what's going wrong", "url": "https://github.com/Alluxio/alluxio/pull/10749#discussion_r366641196", "createdAt": "2020-01-15T00:21:16Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -124,14 +130,17 @@ public int read(byte[] b, int off, int len) throws IOException {\n           mPosition += bytesLeftInPage;\n         } else { // cache miss\n           byte[] page = readExternalPage(mPosition);\n-          mCacheManager.put(pageId, page);\n-          System.arraycopy(page, currentPageOffset, b, off + bytesRead, bytesLeftInPage);\n-          bytesRead += bytesLeftInPage;\n-          mPosition += bytesLeftInPage;\n+          if (page.length > 0) {\n+            mCacheManager.put(pageId, page);\n+            System.arraycopy(page, currentPageOffset, b, off + bytesRead, bytesLeftInPage);\n+            bytesRead += bytesLeftInPage;\n+            mPosition += bytesLeftInPage;\n+          }\n         }\n       }\n     }\n-    Preconditions.checkState(bytesRead == len, \"Invalid number of bytes read\");\n+    Preconditions.checkState(bytesRead == len || (bytesRead < len && remaining() == 0),\n+        \"Invalid number of bytes read\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTM2ODQw", "url": "https://github.com/Alluxio/alluxio/pull/10749#pullrequestreview-342936840", "createdAt": "2020-01-15T01:06:11Z", "commit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTowNjoxMVrOFdqrmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTowNjoxMVrOFdqrmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY1MjMxNA==", "bodyText": "Since this is simple enough, I would suggest to move the body this function into factory method PageStore.create, inside which we can switch the creation of options based on PropertyKey.USER_CLIENT_CACHE_STORE_TYPE.  Having factory over factory seems just complicated to me and I would optimize for code simplicity.", "url": "https://github.com/Alluxio/alluxio/pull/10749#discussion_r366652314", "createdAt": "2020-01-15T01:06:11Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/PageStoreOptions.java", "diffHunk": "@@ -11,11 +11,39 @@\n \n package alluxio.client.file.cache.store;\n \n+import alluxio.conf.AlluxioConfiguration;\n+import alluxio.conf.PropertyKey;\n+\n /**\n  * Options used to instantiate a {@link alluxio.client.file.cache.PageStore}.\n  */\n public abstract class PageStoreOptions {\n \n+  /**\n+   * Creates an instance of the {@link PageStoreOptions} based on configurations.\n+   * @param conf the Alluxio configuration\n+   * @return the created page store options\n+   */\n+  public static PageStoreOptions create(AlluxioConfiguration conf) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTM3MDQy", "url": "https://github.com/Alluxio/alluxio/pull/10749#pullrequestreview-342937042", "createdAt": "2020-01-15T01:06:49Z", "commit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTowNjo1MFrOFdqsMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTowNjo1MFrOFdqsMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY1MjQ2NA==", "bodyText": "do we still want to keep create() then?", "url": "https://github.com/Alluxio/alluxio/pull/10749#discussion_r366652464", "createdAt": "2020-01-15T01:06:50Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/PageStore.java", "diffHunk": "@@ -52,6 +53,15 @@ static PageStore create() {\n     return create(new LocalPageStoreOptions());\n   }\n \n+  /**\n+   * Creates a new instance of {@link PageStore} based on configuration.\n+   * @param conf configuration\n+   * @return the {@link PageStore}\n+   */\n+  static PageStore create(AlluxioConfiguration conf) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTM3Njcz", "url": "https://github.com/Alluxio/alluxio/pull/10749#pullrequestreview-342937673", "createdAt": "2020-01-15T01:09:02Z", "commit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTowOTowMlrOFdquXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTowOTowMlrOFdquXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY1MzAyMw==", "bodyText": "specify a bit more here what is LOCAL and what is ROCKS?", "url": "https://github.com/Alluxio/alluxio/pull/10749#discussion_r366653023", "createdAt": "2020-01-15T01:09:02Z", "author": {"login": "apc999"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -3120,6 +3120,19 @@ public String toString() {\n               + \"`alluxio.client.file.cache.LRUCacheEvictor`.\")\n           .setScope(Scope.CLIENT)\n           .build();\n+  public static final PropertyKey USER_CLIENT_CACHE_DIR =\n+      new Builder(Name.USER_CLIENT_CACHE_DIR)\n+          .setDefaultValue(\"/tmp\")\n+          .setDescription(\"The directory where client-side cache is stored.\")\n+          .setScope(Scope.CLIENT)\n+          .build();\n+  public static final PropertyKey USER_CLIENT_CACHE_STORE_TYPE =\n+      new Builder(Name.USER_CLIENT_CACHE_STORE_TYPE)\n+          .setDefaultValue(\"LOCAL\")\n+          .setDescription(\"The type of page store to use for client-side cache. Can be either \"\n+              + \"`LOCAL` or `ROCKS`.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTM4NTA4", "url": "https://github.com/Alluxio/alluxio/pull/10749#pullrequestreview-342938508", "createdAt": "2020-01-15T01:12:01Z", "commit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMToxMjowMlrOFdqxPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMToxMjowMlrOFdqxPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY1Mzc1Ng==", "bodyText": "Add Preconditions.check  on len >= 0 and off >= 0?", "url": "https://github.com/Alluxio/alluxio/pull/10749#discussion_r366653756", "createdAt": "2020-01-15T01:12:02Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -100,9 +100,15 @@ public int read(byte[] b) throws IOException {\n \n   @Override\n   public int read(byte[] b, int off, int len) throws IOException {\n+    if (len == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTM5MjY3", "url": "https://github.com/Alluxio/alluxio/pull/10749#pullrequestreview-342939267", "createdAt": "2020-01-15T01:14:48Z", "commit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMToxNDo0OVrOFdqzrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMToxNDo0OVrOFdqzrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY1NDM4MQ==", "bodyText": "will Math.floorMod handle overflow if pageId.getFileId() + pageId.getPageIndex() is larger than LONG.MAX_VALUE?", "url": "https://github.com/Alluxio/alluxio/pull/10749#discussion_r366654381", "createdAt": "2020-01-15T01:14:49Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -103,7 +103,7 @@ public LocalCacheManager(FileSystemContext fsContext) {\n    * @return the corresponding page lock\n    */\n   private ReadWriteLock getPageLock(PageId pageId) {\n-    return mPageLocks[(int) (pageId.getFileId() + pageId.getPageIndex()) % LOCK_SIZE];\n+    return mPageLocks[Math.floorMod((int) (pageId.getFileId() + pageId.getPageIndex()), LOCK_SIZE)];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTM5NjI4", "url": "https://github.com/Alluxio/alluxio/pull/10749#pullrequestreview-342939628", "createdAt": "2020-01-15T01:16:01Z", "commit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMToxNjowMlrOFdq02w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMToxNjowMlrOFdq02w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY1NDY4Mw==", "bodyText": "maybe something like /tmp/alluxio_cache to avoid creating too many dirs under /tmp directly?", "url": "https://github.com/Alluxio/alluxio/pull/10749#discussion_r366654683", "createdAt": "2020-01-15T01:16:02Z", "author": {"login": "apc999"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -3120,6 +3120,19 @@ public String toString() {\n               + \"`alluxio.client.file.cache.LRUCacheEvictor`.\")\n           .setScope(Scope.CLIENT)\n           .build();\n+  public static final PropertyKey USER_CLIENT_CACHE_DIR =\n+      new Builder(Name.USER_CLIENT_CACHE_DIR)\n+          .setDefaultValue(\"/tmp\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b537ceb62c1172eab53735c15e165014338945b"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7dad948e5feda5ea544458694c80d50b6c4db02", "author": {"user": {"login": "bf8086", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/b7dad948e5feda5ea544458694c80d50b6c4db02", "committedDate": "2020-01-15T01:33:00Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTQ1Nzg0", "url": "https://github.com/Alluxio/alluxio/pull/10749#pullrequestreview-342945784", "createdAt": "2020-01-15T01:39:02Z", "commit": {"oid": "b7dad948e5feda5ea544458694c80d50b6c4db02"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTozOTowM1rOFdrIzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTozOTowM1rOFdrIzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY1OTc4OQ==", "bodyText": "Good catch", "url": "https://github.com/Alluxio/alluxio/pull/10749#discussion_r366659789", "createdAt": "2020-01-15T01:39:03Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/test/java/alluxio/client/file/cache/LocalCacheFileInStreamTest.java", "diffHunk": "@@ -300,7 +325,7 @@ public ReadableByteChannel get(PageId pageId, int pageOffset) {\n       }\n       mPagesServed++;\n       return Channels.newChannel(new ByteArrayInputStream(\n-          Arrays.copyOfRange(mPages.get(pageId), pageOffset, PAGE_SIZE - pageOffset)));\n+          Arrays.copyOfRange(mPages.get(pageId), pageOffset, PAGE_SIZE)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7dad948e5feda5ea544458694c80d50b6c4db02"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3302, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}