{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzODc0Nzg0", "number": 11387, "title": "Improve AlluxioJniFuse", "bodyText": "", "createdAt": "2020-05-06T04:47:20Z", "url": "https://github.com/Alluxio/alluxio/pull/11387", "merged": true, "mergeCommit": {"oid": "693d822a1ebd6e4c9206cc0b7e657dd9e99f3f7d"}, "closed": true, "closedAt": "2020-05-09T04:19:02Z", "author": {"login": "iluoeli"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcb7wOvgH2gAyNDEzODc0Nzg0OmM0N2NkMGE1OWY0MDRmMjE4MmU1NThhNWE4YTYwZGMyOTY4NzM1MjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfen-agFqTQwODYxMDc3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c47cd0a59f404f2182e558a5a8a60dc296873520", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/c47cd0a59f404f2182e558a5a8a60dc296873520", "committedDate": "2020-04-28T03:59:07Z", "message": "Add struct\n\nNow we can define jnr style structure, and access field just like jnr-fuse."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6f5d7dfb18c6393ef5a3640c08807b40ac56bdd", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/e6f5d7dfb18c6393ef5a3640c08807b40ac56bdd", "committedDate": "2020-04-28T09:22:53Z", "message": "Add AlluxioJniFuse.java & AlluxioJniFuseFileSystem.java\n\nMost codes are copied from former AlluxioFuse."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e596005bb9639ebee0bc6761d9c516152126e21", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/8e596005bb9639ebee0bc6761d9c516152126e21", "committedDate": "2020-04-28T09:26:01Z", "message": "Add libjnifuse\n\nNow we can run basic read-only AlluxioFuseFileSystem.\nNOTE: jni cache is not supported."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "625eeec855bd0e1040b5eee98c80f2013ad3ca45", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/625eeec855bd0e1040b5eee98c80f2013ad3ca45", "committedDate": "2020-04-28T18:01:27Z", "message": "Refactor libjnifuse"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "633d4945ff4b6af1ac9341e2198ed7a3a272cd21", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/633d4945ff4b6af1ac9341e2198ed7a3a272cd21", "committedDate": "2020-04-29T01:30:30Z", "message": "Fix style and refactor package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "884c8e671c0b6ede80972b0018ad418f493cb9b4", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/884c8e671c0b6ede80972b0018ad418f493cb9b4", "committedDate": "2020-04-29T04:41:23Z", "message": "Revert unnecessary formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07b4b7230a397e9f54ea43b481ef7ec6a0cb95d4", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/07b4b7230a397e9f54ea43b481ef7ec6a0cb95d4", "committedDate": "2020-04-29T06:48:34Z", "message": "Cleanup AlluxioFuse to reduce PR footprint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2129ab7d099a5ee207ee86079f3174444ff19b2c", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/2129ab7d099a5ee207ee86079f3174444ff19b2c", "committedDate": "2020-04-29T10:28:45Z", "message": "Fix AlluxioFuseFileSystemTest\n\nnot actually fixed Timespec error. I just umcommented it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f39cc3a0c69821bde9bf941f80f80a9255c05f1d", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/f39cc3a0c69821bde9bf941f80f80a9255c05f1d", "committedDate": "2020-04-29T14:35:23Z", "message": "Fix Timespec"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "956a8fc4c1d9025169db0e93be8d3bed915cc59d", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/956a8fc4c1d9025169db0e93be8d3bed915cc59d", "committedDate": "2020-04-29T16:00:04Z", "message": "Format c++ code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "720855e9e227b747e6035463735ab877d4f5c47a", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/720855e9e227b747e6035463735ab877d4f5c47a", "committedDate": "2020-04-29T16:08:55Z", "message": "Replace jnr utils with jni utils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4aed659c5ea46928e4fd3b6a10f4e00d84aea4d", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/c4aed659c5ea46928e4fd3b6a10f4e00d84aea4d", "committedDate": "2020-04-30T08:04:14Z", "message": "Fix style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1b92e10b26218547a7a9c18bea8d167c0637478", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/f1b92e10b26218547a7a9c18bea8d167c0637478", "committedDate": "2020-04-30T09:08:46Z", "message": "Add jni ErrorCodes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f26a9c6747a94c437fae7183429d146f0238e7e7", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/f26a9c6747a94c437fae7183429d146f0238e7e7", "committedDate": "2020-05-01T03:53:25Z", "message": "Fix check style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b297606c3b5a6cb7ed806b691f12129286d0031", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/6b297606c3b5a6cb7ed806b691f12129286d0031", "committedDate": "2020-05-01T06:55:00Z", "message": "Various cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba5bf9c09b604fa0364c381c6209d7396d5b2397", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/ba5bf9c09b604fa0364c381c6209d7396d5b2397", "committedDate": "2020-05-01T07:38:23Z", "message": "Add Operations: unlink, flush, release"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae76dd8335ec39c7fc63b0c0532d7f6dc6891d17", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/ae76dd8335ec39c7fc63b0c0532d7f6dc6891d17", "committedDate": "2020-05-01T07:46:04Z", "message": "Remove duplicate getContext()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d778527fe8cc4b5068d9705547162426b924b6df", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/d778527fe8cc4b5068d9705547162426b924b6df", "committedDate": "2020-05-01T15:07:10Z", "message": "Improve Makefile\n\nNew bug detected: JNI memory leak.\nTest AlluxioFuse read performance with 64 threads, OOM occured:\n``` bash\n2020-05-01 23:01:02,260 ERROR AlluxioFuseFileSystem - Failed to read file /data/43a0fd54-1e56-4609-aec8-3fb0521b15fd\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n\tat alluxio.fuse.AlluxioFuseFileSystem.readInternal(AlluxioFuseFileSystem.java:608)\n\tat alluxio.fuse.AlluxioFuseFileSystem.lambda$read$7(AlluxioFuseFileSystem.java:581)\n\tat alluxio.fuse.AlluxioFuseFileSystem$$Lambda$73/92965820.call(Unknown Source)\n\tat alluxio.fuse.AlluxioFuseUtils.call(AlluxioFuseUtils.java:245)\n\tat alluxio.fuse.AlluxioFuseFileSystem.read(AlluxioFuseFileSystem.java:581)\n\tat alluxio.jnifuse.AbstractFuseFileSystem.readCallback(AbstractFuseFileSystem.java:129)\n2020-05-01 23:01:03,863 ERROR AlluxioFuseFileSystem - Failed to get info of /data/8af8ded1-3e48-4806-84e3-a18a3e360bff\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n\tat alluxio.retry.ExponentialTimeBoundedRetry$Builder.build(ExponentialTimeBoundedRetry.java:132)\n\tat alluxio.retry.RetryUtils.defaultClientRetry(RetryUtils.java:63)\n\tat alluxio.AbstractClient.lambda$new$0(AbstractClient.java:98)\n\tat alluxio.AbstractClient$$Lambda$27/1684106402.get(Unknown Source)\n\tat alluxio.AbstractClient.retryRPCInternal(AbstractClient.java:391)\n\tat alluxio.AbstractClient.retryRPC(AbstractClient.java:365)\n\tat alluxio.client.file.RetryHandlingFileSystemMasterClient.getStatus(RetryHandlingFileSystemMasterClient.java:184)\n\tat alluxio.client.file.BaseFileSystem.lambda$getStatus$8(BaseFileSystem.java:261)\n\tat alluxio.client.file.BaseFileSystem$$Lambda$38/1436996813.call(Unknown Source)\n\tat alluxio.client.file.BaseFileSystem.rpc(BaseFileSystem.java:519)\n\tat alluxio.client.file.BaseFileSystem.getStatus(BaseFileSystem.java:258)\n\tat alluxio.client.file.FileSystem.getStatus(FileSystem.java:318)\n\tat alluxio.fuse.AlluxioFuseFileSystem.getattrInternal(AlluxioFuseFileSystem.java:392)\n\tat alluxio.fuse.AlluxioFuseFileSystem.lambda$getattr$4(AlluxioFuseFileSystem.java:386)\n\tat alluxio.fuse.AlluxioFuseFileSystem$$Lambda$37/1740981154.call(Unknown Source)\n\tat alluxio.fuse.AlluxioFuseUtils.call(AlluxioFuseUtils.java:245)\n\tat alluxio.fuse.AlluxioFuseFileSystem.getattr(AlluxioFuseFileSystem.java:385)\n\tat alluxio.jnifuse.AbstractFuseFileSystem.getattrCallback(AbstractFuseFileSystem.java:134)\n2020-05-01 23:01:06,320 ERROR AlluxioFuseFileSystem - Failed to read file /data/a86b701c-28e3-43bd-bc12-21b143d40612\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n\tat java.util.LinkedList.linkLast(LinkedList.java:142)\n\tat java.util.LinkedList.add(LinkedList.java:338)\n\tat java.util.ResourceBundle$Control$CandidateListCache.getDefaultList(ResourceBundle.java:2474)\n\tat java.util.ResourceBundle$Control$CandidateListCache.createObject(ResourceBundle.java:2451)\n\tat java.util.ResourceBundle$Control$CandidateListCache.createObject(ResourceBundle.java:2381)\n\tat sun.util.locale.LocaleObjectCache.get(LocaleObjectCache.java:60)\n\tat java.util.ResourceBundle$Control.getCandidateLocales(ResourceBundle.java:2376)\n\tat sun.util.resources.LocaleData$LocaleDataResourceBundleControl.getCandidateLocales(LocaleData.java:209)\n\tat java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1365)\n\tat java.util.ResourceBundle.getBundle(ResourceBundle.java:899)\n\tat sun.util.resources.LocaleData$1.run(LocaleData.java:167)\n\tat sun.util.resources.LocaleData$1.run(LocaleData.java:163)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat sun.util.resources.LocaleData.getBundle(LocaleData.java:163)\n\tat sun.util.resources.LocaleData.getNumberFormatData(LocaleData.java:159)\n\tat sun.util.locale.provider.LocaleResources.getDecimalFormatSymbolsData(LocaleResources.java:168)\n\tat java.text.DecimalFormatSymbols.initialize(DecimalFormatSymbols.java:616)\n\tat java.text.DecimalFormatSymbols.<init>(DecimalFormatSymbols.java:113)\n\tat sun.util.locale.provider.DecimalFormatSymbolsProviderImpl.getInstance(DecimalFormatSymbolsProviderImpl.java:85)\n\tat java.text.DecimalFormatSymbols.getInstance(DecimalFormatSymbols.java:180)\n\tat java.util.Formatter.getZero(Formatter.java:2283)\n\tat java.util.Formatter.<init>(Formatter.java:1892)\n\tat java.util.Formatter.<init>(Formatter.java:1914)\n\tat java.lang.String.format(String.java:2940)\n\tat alluxio.wire.TieredIdentity.toString(TieredIdentity.java:95)\n\tat java.lang.String.valueOf(String.java:2994)\n\tat java.lang.StringBuilder.append(StringBuilder.java:131)\n\tat com.google.common.base.MoreObjects$ToStringHelper.toString(MoreObjects.java:353)\n\tat alluxio.wire.WorkerNetAddress.toString(WorkerNetAddress.java:208)\n\tat java.lang.String.valueOf(String.java:2994)\n\tat java.lang.StringBuilder.append(StringBuilder.java:131)\n\tat com.google.common.base.MoreObjects$ToStringHelper.toString(MoreObjects.java:353)\n2020-05-01 23:01:07,583 ERROR AlluxioFuseFileSystem - Failed to read file /data/ff102a2c-2836-420f-99fc-53f258a89689\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n\tat alluxio.fuse.AlluxioFuseFileSystem.readInternal(AlluxioFuseFileSystem.java:608)\n\tat alluxio.fuse.AlluxioFuseFileSystem.lambda$read$7(AlluxioFuseFileSystem.java:581)\n\tat alluxio.fuse.AlluxioFuseFileSystem$$Lambda$73/92965820.call(Unknown Source)\n\tat alluxio.fuse.AlluxioFuseUtils.call(AlluxioFuseUtils.java:245)\n\tat alluxio.fuse.AlluxioFuseFileSystem.read(AlluxioFuseFileSystem.java:581)\n\tat alluxio.jnifuse.AbstractFuseFileSystem.readCallback(AbstractFuseFileSystem.java:129)\n2020-05-01 23:01:08,954 ERROR AlluxioFuseFileSystem - Failed to open file /data/8f5b2508-dee5-4f1c-8b39-fd8dcdb81a86\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:09,460 ERROR AlluxioFuseFileSystem - Failed to read file /data/ff102a2c-2836-420f-99fc-53f258a89689\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:11,300 ERROR AlluxioFuseFileSystem - Failed to read file /data/7e4e97eb-7103-411b-b06a-7ed4e36d99ab\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:11,846 WARN  GrpcBlockingStream - Received error io.grpc.StatusRuntimeException: UNKNOWN for stream (LocalFileDataReader{request=block_id: 225452228608\npromote: true\n, address=WorkerNetAddress{host=172.16.1.190, containerHost=, rpcPort=29999, dataPort=29999, webPort=30000, domainSocketPath=, tieredIdentity=TieredIdentity(node=172.16.1.190, rack=null)}})\n2020-05-01 23:01:12,765 ERROR AlluxioFuseFileSystem - Failed to read file /data/06b7700b-6b66-43e4-aef8-3379eef88e91\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:15,200 ERROR AlluxioFuseFileSystem - Failed to read file /data/ab3ad2cf-a7ed-4043-9b1d-26983dd157d9\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:16,131 ERROR AlluxioFuseFileSystem - Failed to read file /data/348a6689-a35f-420a-94fb-2d30d7d40338\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:17,797 ERROR AlluxioFuseFileSystem - Failed to read file /data/3bac4f9b-7674-4c44-844b-fc2d408e9a66\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:18,994 WARN  AlluxioFuseFileSystem - read(path=/data/2a84d4e4-a95a-4bb4-91c7-ba2480ecd054,buf=java.nio.DirectByteBuffer[pos=129052 lim=129052 cap=129052],size=129052,offset=0) returned 129052 in 11755 ms (>=10000 ms)\n2020-05-01 23:01:21,915 ERROR AlluxioFuseFileSystem - Failed to read file /data/7ab89cc9-be95-4fd6-a400-0467169cfbb5\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:26,218 ERROR AlluxioFuseFileSystem - Failed to open file /data/e45a7770-f063-46c7-9354-ba2e4470137f\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:27,951 ERROR AlluxioFuseFileSystem - Failed to read file /data/9fc63e03-32fb-46d6-a518-55fc7d63c070\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:27,952 WARN  GrpcBlockingStream - Received error io.grpc.StatusRuntimeException: CANCELLED: Client sendMessage() failed with Error for stream (LocalFileDataReader{request=block_id: 851141722112\npromote: true\n, address=WorkerNetAddress{host=172.16.1.190, containerHost=, rpcPort=29999, dataPort=29999, webPort=30000, domainSocketPath=, tieredIdentity=TieredIdentity(node=172.16.1.190, rack=null)}})\n2020-05-01 23:01:35,767 ERROR AlluxioFuseFileSystem - Failed to read file /data/9ab298d6-adc9-4943-9c46-727562022b8b\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:36,624 ERROR AlluxioFuseFileSystem - Failed to get info of /data/2b10687c-6174-441c-be20-c395687c246c\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:42,193 ERROR AlluxioFuseFileSystem - Failed to read file /data/aa5d5b20-eead-4b3d-9958-18185fc9e7a6\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:42,765 ERROR AlluxioFuseFileSystem - Failed to read file /data/66586165-9cc6-4358-be39-158afd44fb0b\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n2020-05-01 23:01:47,647 ERROR AlluxioFuseFileSystem - Failed to read file /data/f242df29-9ecd-48f5-b725-d3d575ce6a36\njava.lang.OutOfMemoryError: GC overhead limit exceeded\n```"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a929789255bdb4326089cfc678b005ee131a67c", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/9a929789255bdb4326089cfc678b005ee131a67c", "committedDate": "2020-05-03T17:28:06Z", "message": "Fix JNI memory leak"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c46a1eed14283e762319e20d22029c70d3ce51f4", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/c46a1eed14283e762319e20d22029c70d3ce51f4", "committedDate": "2020-05-06T04:42:00Z", "message": "Merge branch 'fuse' of github.com:Alluxio/alluxio into fuse"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2Nzk2MzA2", "url": "https://github.com/Alluxio/alluxio/pull/11387#pullrequestreview-406796306", "createdAt": "2020-05-06T16:43:19Z", "commit": {"oid": "c46a1eed14283e762319e20d22029c70d3ce51f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjo0MzoxOVrOGRb5JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjo0MzoxOVrOGRb5JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDkzNTk3Mw==", "bodyText": "@iluoeli we are using 4-space indent rather than 8. Checkout https://docs.alluxio.io/os/user/stable/en/contributor/Code-Conventions.html#coding-style for the Eclipse Code Formatter or Eclipse Code Formatter Plugin\nLet's avoid introducing unnecessary change in a PR which increases the footprint and slows down code review", "url": "https://github.com/Alluxio/alluxio/pull/11387#discussion_r420935973", "createdAt": "2020-05-06T16:43:19Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/main/java/alluxio/fuse/AlluxioFuseFileSystem.java", "diffHunk": "@@ -94,7 +94,7 @@\n   public static final int MAX_NAME_LENGTH = 255;\n \n   private static InstancedConfiguration sConf =\n-      new InstancedConfiguration(ConfigurationUtils.defaults());\n+          new InstancedConfiguration(ConfigurationUtils.defaults());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46a1eed14283e762319e20d22029c70d3ce51f4"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2ODg1MTk4", "url": "https://github.com/Alluxio/alluxio/pull/11387#pullrequestreview-406885198", "createdAt": "2020-05-06T18:37:31Z", "commit": {"oid": "c46a1eed14283e762319e20d22029c70d3ce51f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODozNzozMVrOGRgUVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODozNzozMVrOGRgUVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAwODQ3MQ==", "bodyText": "newline needed", "url": "https://github.com/Alluxio/alluxio/pull/11387#discussion_r421008471", "createdAt": "2020-05-06T18:37:31Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/main/java/alluxio/fuse/AlluxioFuseFileSystem.java", "diffHunk": "@@ -969,4 +969,4 @@ public AlluxioURI load(String fusePath) {\n       return new AlluxioURI(tpath.toString());\n     }\n   }\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46a1eed14283e762319e20d22029c70d3ce51f4"}, "originalPosition": 289}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e31dd148d1849f1b44cd0822683fa3bcee5a3be0", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/e31dd148d1849f1b44cd0822683fa3bcee5a3be0", "committedDate": "2020-05-07T15:40:28Z", "message": "Fix code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "440bab6878e00feba368fdda739166e1889f4922", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/440bab6878e00feba368fdda739166e1889f4922", "committedDate": "2020-05-08T02:59:16Z", "message": "Refactor libjnifuse"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1478b12a423a3c80f74f2df1b59cefba4eacab51", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/1478b12a423a3c80f74f2df1b59cefba4eacab51", "committedDate": "2020-05-08T07:38:24Z", "message": "Fix code style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MDYwNTk5", "url": "https://github.com/Alluxio/alluxio/pull/11387#pullrequestreview-408060599", "createdAt": "2020-05-08T07:41:55Z", "commit": {"oid": "1478b12a423a3c80f74f2df1b59cefba4eacab51"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNzo0MTo1NVrOGSckfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwODowMDo1M1rOGSdGxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk5NTY0Ng==", "bodyText": "readdirOper", "url": "https://github.com/Alluxio/alluxio/pull/11387#discussion_r421995646", "createdAt": "2020-05-08T07:41:55Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/main/native/libjnifuse/jnifuse_fs.cc", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+#include \"jnifuse_fs.h\"\n+\n+#include <assert.h>\n+#include <errno.h>\n+#include <fcntl.h>\n+#include <fuse.h>\n+#include <jni.h>\n+#include <pthread.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+\n+#include \"debug.h\"\n+\n+namespace jnifuse {\n+\n+static pthread_key_t jffs_threadKey;\n+\n+static void thread_data_free(void *ptr) {\n+  ThreadData *td = (ThreadData *)ptr;\n+  if (td->attachedJVM != nullptr) {\n+    td->attachedJVM->DetachCurrentThread();\n+  }\n+  delete td;\n+}\n+\n+JniFuseFileSystem *JniFuseFileSystem::instance = nullptr;\n+\n+JniFuseFileSystem::JniFuseFileSystem(JNIEnv *env, jobject obj) {\n+  env->GetJavaVM(&this->jvm);\n+  this->fs = env->NewGlobalRef(obj);\n+\n+  this->getattrOper = new GetattrOperation(this);\n+  this->openOper = new OpenOperation(this);\n+  this->readOper = new ReadOperation(this);\n+  this->readdirOper = new ReaddirOperation(this);\n+  this->unlinkOper = new UnlinkOperation(this);\n+  this->flushOper = new FlushOperation(this);\n+  this->releaseOper = new ReleaseOperation(this);\n+  this->createOper = new CreateOperation(this);\n+  this->mkdirOper = new MkdirOperation(this);\n+  this->rmdirOper = new RmdirOperation(this);\n+  this->writeOper = new WriteOperation(this);\n+}\n+\n+JniFuseFileSystem::~JniFuseFileSystem() {\n+  delete this->getattrOper;\n+  delete this->openOper;\n+  delete this->readOper;\n+  delete this->readOper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1478b12a423a3c80f74f2df1b59cefba4eacab51"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk5NzU5NQ==", "bodyText": "please follow https://google.github.io/styleguide/cppguide.html#The__define_Guard\nthis macro should be FUSE_NATIVE_LIBJNIFUSE_FS", "url": "https://github.com/Alluxio/alluxio/pull/11387#discussion_r421997595", "createdAt": "2020-05-08T07:46:16Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/main/native/libjnifuse/jnifuse_fs.h", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+#ifndef _JNI_FUSE_FILE_SYSTEM_H", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1478b12a423a3c80f74f2df1b59cefba4eacab51"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk5Nzc0Mw==", "bodyText": "nit: sort", "url": "https://github.com/Alluxio/alluxio/pull/11387#discussion_r421997743", "createdAt": "2020-05-08T07:46:36Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/main/native/libjnifuse/jnifuse_fs.h", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+#ifndef _JNI_FUSE_FILE_SYSTEM_H\n+#define _JNI_FUSE_FILE_SYSTEM_H\n+\n+#include <fuse.h>\n+\n+#include \"jni.h\"\n+#include \"operation.h\"\n+\n+namespace jnifuse {\n+\n+class GetattrOperation;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1478b12a423a3c80f74f2df1b59cefba4eacab51"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk5ODAyNg==", "bodyText": "// FOO_BAR_BAZ_H_ (replace the macro)\nhttps://google.github.io/styleguide/cppguide.html#The__define_Guard", "url": "https://github.com/Alluxio/alluxio/pull/11387#discussion_r421998026", "createdAt": "2020-05-08T07:47:13Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/main/native/libjnifuse/jnifuse_fs.h", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+#ifndef _JNI_FUSE_FILE_SYSTEM_H\n+#define _JNI_FUSE_FILE_SYSTEM_H\n+\n+#include <fuse.h>\n+\n+#include \"jni.h\"\n+#include \"operation.h\"\n+\n+namespace jnifuse {\n+\n+class GetattrOperation;\n+class OpenOperation;\n+class Operation;\n+class ReaddirOperation;\n+class ReadOperation;\n+class UnlinkOperation;\n+class FlushOperation;\n+class ReleaseOperation;\n+class CreateOperation;\n+class MkdirOperation;\n+class RmdirOperation;\n+class WriteOperation;\n+\n+struct ThreadData {\n+  JavaVM *attachedJVM;\n+  JNIEnv *attachedEnv;\n+};\n+\n+class JniFuseFileSystem {\n+ private:\n+  JniFuseFileSystem(JNIEnv *env, jobject obj);\n+  ~JniFuseFileSystem();\n+\n+ public:\n+  static JniFuseFileSystem *getInstance();\n+  static void init(JNIEnv *env, jobject obj);\n+  JNIEnv *getEnv();\n+  JavaVM *getJVM();\n+  jobject getFSObj();\n+\n+ private:\n+  static JniFuseFileSystem *instance;\n+  JavaVM *jvm;\n+  jobject fs;\n+\n+ public:\n+  GetattrOperation *getattrOper;\n+  OpenOperation *openOper;\n+  ReadOperation *readOper;\n+  ReaddirOperation *readdirOper;\n+  UnlinkOperation *unlinkOper;\n+  FlushOperation *flushOper;\n+  ReleaseOperation *releaseOper;\n+  CreateOperation *createOper;\n+  MkdirOperation *mkdirOper;\n+  RmdirOperation *rmdirOper;\n+  WriteOperation *writeOper;\n+};\n+\n+}  // namespace jnifuse\n+\n+#endif", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1478b12a423a3c80f74f2df1b59cefba4eacab51"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAwNDMzMA==", "bodyText": "please fix, see line wrapping\nhttps://google.github.io/styleguide/javaguide.html#s4.5-line-wrapping", "url": "https://github.com/Alluxio/alluxio/pull/11387#discussion_r422004330", "createdAt": "2020-05-08T08:00:37Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/test/java/alluxio/fuse/AlluxioFuseFileSystemTest.java", "diffHunk": "@@ -86,14 +86,14 @@\n \n   @Rule\n   public ConfigurationRule mConfiguration =\n-      new ConfigurationRule(ImmutableMap.of(PropertyKey.FUSE_CACHED_PATHS_MAX, \"0\",\n-          PropertyKey.FUSE_USER_GROUP_TRANSLATION_ENABLED, \"true\"), mConf);\n+          new ConfigurationRule(ImmutableMap.of(PropertyKey.FUSE_CACHED_PATHS_MAX, \"0\",\n+                  PropertyKey.FUSE_USER_GROUP_TRANSLATION_ENABLED, \"true\"), mConf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1478b12a423a3c80f74f2df1b59cefba4eacab51"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAwNDQyMA==", "bodyText": "fix here too.", "url": "https://github.com/Alluxio/alluxio/pull/11387#discussion_r422004420", "createdAt": "2020-05-08T08:00:53Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/test/java/alluxio/fuse/AlluxioFuseFileSystemTest.java", "diffHunk": "@@ -86,14 +86,14 @@\n \n   @Rule\n   public ConfigurationRule mConfiguration =\n-      new ConfigurationRule(ImmutableMap.of(PropertyKey.FUSE_CACHED_PATHS_MAX, \"0\",\n-          PropertyKey.FUSE_USER_GROUP_TRANSLATION_ENABLED, \"true\"), mConf);\n+          new ConfigurationRule(ImmutableMap.of(PropertyKey.FUSE_CACHED_PATHS_MAX, \"0\",\n+                  PropertyKey.FUSE_USER_GROUP_TRANSLATION_ENABLED, \"true\"), mConf);\n \n   @Before\n   public void before() throws Exception {\n     final List<String> empty = Collections.emptyList();\n     AlluxioFuseOptions opts =\n-        new AlluxioFuseOptions(\"/doesnt/matter\", TEST_ROOT_PATH, false, empty);\n+            new AlluxioFuseOptions(\"/doesnt/matter\", TEST_ROOT_PATH, false, empty);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1478b12a423a3c80f74f2df1b59cefba4eacab51"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55f27826f63b2fd805b7a446219efe624145dbe7", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/55f27826f63b2fd805b7a446219efe624145dbe7", "committedDate": "2020-05-08T09:06:17Z", "message": "Fix code style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjEwNzcy", "url": "https://github.com/Alluxio/alluxio/pull/11387#pullrequestreview-408610772", "createdAt": "2020-05-09T04:18:33Z", "commit": {"oid": "55f27826f63b2fd805b7a446219efe624145dbe7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4596, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}