{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMzIxMTMw", "number": 11201, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMToyMjowNVrODqVdvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzo1MTowM1rODtySUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzE4NDYyOnYy", "diffSide": "LEFT", "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMToyMjowNVrOF6BElA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMToyMjowNVrOF6BElA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM3OTI4NA==", "bodyText": "I think this fit more into the Advanced Setup section", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r396379284", "createdAt": "2020-03-23T11:22:05Z", "author": {"login": "jiacheliu3"}, "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "diffHunk": "@@ -756,65 +883,6 @@ Job Worker:\n $ kubectl logs -f alluxio-worker-<id> -c alluxio-job-worker\n ```\n \n-### Short-circuit Access\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "908d011002e1b417df546abe06bbfeae1815f088"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzE4ODY1OnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMToyMzoxMlrOF6BHHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMToyMzoxMlrOF6BHHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM3OTkzNQ==", "bodyText": "This is based on my understanding. Please correct me if I'm wrong @madanadit", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r396379935", "createdAt": "2020-03-23T11:23:12Z", "author": {"login": "jiacheliu3"}, "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "diffHunk": "@@ -687,6 +687,133 @@ If Alluxio has already been deployed with helm and now you want to enable FUSE,\n $ helm upgrade alluxio -f config.yaml --set fuse.enabled=true --set fuse.clientEnabled=true alluxio-charts/alluxio\n ```\n \n+### Short-circuit Access\n+\n+Short-circuit access enables clients to perform read and write operations directly against the\n+worker bypassing the networking interface.\n+For performance-critical applications it is recommended to enable short-circuit operations\n+against Alluxio because it can increase a client's read and write throughput when co-located with\n+an Alluxio worker.\n+\n+#### Properties to Enable Short-Circuit Operations\n+\n+This feature is enabled by default, however requires extra configuration to work properly in\n+Kubernetes environments.\n+See sections below for how to configure short-circuit access.\n+\n+#### Disable Short-Circuit Operations\n+To disable short-circuit operations, the operation depends on how you deploy Alluxio.\n+\n+> Note: As mentioned, disabling short-circuit access for Alluxio workers will result in \n+worse throughput \n+\n+***Using `helm`***\n+You can disable short circuit by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: false\n+```\n+\n+***Using `kubectl`***\n+You should set the property `alluxio.user.short.circuit.enabled` to `false` in your `ALLUXIO_WORKER_JAVA_OPTS`.\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=false\n+```\n+\n+You should also manually remove the volume `alluxio-domain` from `volumes` of the Pod definition \n+and `volumeMounts` of each container if existing.\n+\n+#### Short-Circuit Modes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "908d011002e1b417df546abe06bbfeae1815f088"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzE5NjQ2OnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/templates/fuse/daemonset.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMToyNTo0OFrOF6BMSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMToyNTo0OFrOF6BMSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM4MTI1OQ==", "bodyText": "In my understanding local means directly use tiered storage so this should use the template.\nIn the existing template there's only hostPath, I believe this was not the intention.", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r396381259", "createdAt": "2020-03-23T11:25:48Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/fuse/daemonset.yaml", "diffHunk": "@@ -109,38 +110,14 @@ spec:\n             - name: alluxio-fuse-mount\n               mountPath: /alluxio-fuse\n               mountPropagation: Bidirectional\n-            {{- if eq .Values.worker.shortCircuitPolicy \"uuid\" }}\n+            {{- if $shortCircuitEnabled}}\n+              {{- if eq .Values.shortCircuit.policy \"uuid\" }}\n             - name: alluxio-domain\n               mountPath: /opt/domain\n-            {{- end }}\n-            {{- if eq .Values.worker.shortCircuitPolicy \"local\" }}\n-              {{- if .Values.tieredstore }} \n-                {{- if .Values.tieredstore.levels }} \n-                  {{- range .Values.tieredstore.levels }}\n-                    {{- if .mediumtype }}\n-                      {{- if contains \",\" .mediumtype }}\n-            {{- $type := .type }}\n-            {{- $path := .path }}\n-            {{- $split := split \",\" .mediumtype }}\n-                        {{- range $key, $val := $split }} \n-                          {{- if eq $type \"hostPath\"}}\n-            - mountPath:  {{ index ($path | split \",\") $key }}\n-              name: {{ $val | lower }}-{{ $key | replace \"_\" \"\" }}\n-                          {{- end}}\n-                        {{- end}}\n-                      {{- else}}\n-                        {{- if eq .type \"hostPath\"}}\n-            - name: {{ .mediumtype | replace \",\" \"-\" | lower }}\n-              mountPath: {{ .path }}\n-                        {{- else }}\n-            # report error and exit\n-            {{ .name }} with {{ .type }} is not supported in shortCircuitPolicy local\n-                        {{- end }} \n-                      {{- end }}\n-                    {{- end}} \n-                  {{- end }} \n-                {{- end }} \n-              {{- end }} \n+              {{- end }}\n+              {{- if eq .Values.shortCircuit.policy \"local\" }}\n+{{- include \"alluxio.worker.tieredstoreVolumeMounts\" . }}\n+              {{- end }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "908d011002e1b417df546abe06bbfeae1815f088"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzE5ODczOnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMToyNjozMVrOF6BN2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMToyNjozMVrOF6BN2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM4MTY1Ng==", "bodyText": "A little bit of re-ordering", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r396381656", "createdAt": "2020-03-23T11:26:31Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -133,6 +133,47 @@ journal:\n \n ## Worker ##\n \n+worker:\n+  args:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "908d011002e1b417df546abe06bbfeae1815f088"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTE2MzY3OnYy", "diffSide": "LEFT", "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTowODowNFrOF_FLkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTowODowNFrOF_FLkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4OTQ4OQ==", "bodyText": "This can now be removed since #11194 is also on the way", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r401689489", "createdAt": "2020-04-01T15:08:04Z", "author": {"login": "jiacheliu3"}, "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "diffHunk": "@@ -19,9 +19,6 @@ workers may use `emptyDir` volumes with a restricted size using the `sizeLimit`\n parameter. This is an alpha feature in Kubernetes 1.8. Please ensure the feature is enabled.\n - An Alluxio Docker image [alluxio/alluxio](https://hub.docker.com/r/alluxio/alluxio/). If using a\n private Docker registry, refer to the Kubernetes [documentation](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/).\n-- Alluxio workers use `hostNetwork` and `hostPath` volumes for locality scheduling and\n-short-circuit access respectively. Please ensure the security policy allows for provisioning these\n-resource types.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2fc92d408f324a2927a211f941f7370b8ff070"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTE3NjkxOnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNToxMDo1NVrOF_FT0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzozMzowN1rOF_aItg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY5MTYwMA==", "bodyText": "Not 100% sure it should be alluxio.worker.data.server.domain.socket.address=", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r401691600", "createdAt": "2020-04-01T15:10:55Z", "author": {"login": "jiacheliu3"}, "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "diffHunk": "@@ -687,6 +684,134 @@ If Alluxio has already been deployed with helm and now you want to enable FUSE,\n $ helm upgrade alluxio -f config.yaml --set fuse.enabled=true --set fuse.clientEnabled=true alluxio-charts/alluxio\n ```\n \n+### Short-circuit Access\n+\n+Short-circuit access enables clients to perform read and write operations directly against the\n+worker bypassing the networking interface.\n+For performance-critical applications it is recommended to enable short-circuit operations\n+against Alluxio because it can increase a client's read and write throughput when co-located with\n+an Alluxio worker.\n+\n+#### Properties to Enable Short-Circuit Operations\n+\n+This feature is enabled by default, however requires extra configuration to work properly in\n+Kubernetes environments.\n+See sections below for how to configure short-circuit access.\n+\n+#### Disable Short-Circuit Operations\n+To disable short-circuit operations, the operation depends on how you deploy Alluxio.\n+\n+> Note: As mentioned, disabling short-circuit access for Alluxio workers will result in \n+worse throughput \n+\n+***Using `helm`***\n+You can disable short circuit by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: false\n+```\n+\n+***Using `kubectl`***\n+You should set the property `alluxio.user.short.circuit.enabled` to `false` in your `ALLUXIO_WORKER_JAVA_OPTS`.\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=false\n+```\n+\n+You should also manually remove the volume `alluxio-domain` from `volumes` of the Pod definition \n+and `volumeMounts` of each container if existing.\n+\n+#### Short-Circuit Modes\n+There are 2 modes for using short-circuit.\n+\n+##### `local`\n+In this mode, the Alluxio client and local Alluxio worker recognize each other if the client hostname \n+matches the worker hostname.\n+This is called *Hostname Introspection*.\n+In this mode, the Alluxio client and local Alluxio worker share the tiered storage of Alluxio worker.\n+\n+***Using `helm`***\n+You can use `local` policy by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: true\n+  policy: \"local\"\n+```\n+\n+***Using `kubectl`***\n+In your `alluxio-configmap.yaml` you should add the following properties to `ALLUXIO_WORKER_JAVA_OPTS`:\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=true -Dalluxio.worker.data.server.domain.socket.address= -Dalluxio.worker.data.server.domain.socket.as.uuid=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c2fc92d408f324a2927a211f941f7370b8ff070"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzMjgyMg==", "bodyText": "you can ask user to remove this property altogether (unset)", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r402032822", "createdAt": "2020-04-02T03:33:07Z", "author": {"login": "madanadit"}, "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "diffHunk": "@@ -687,6 +684,134 @@ If Alluxio has already been deployed with helm and now you want to enable FUSE,\n $ helm upgrade alluxio -f config.yaml --set fuse.enabled=true --set fuse.clientEnabled=true alluxio-charts/alluxio\n ```\n \n+### Short-circuit Access\n+\n+Short-circuit access enables clients to perform read and write operations directly against the\n+worker bypassing the networking interface.\n+For performance-critical applications it is recommended to enable short-circuit operations\n+against Alluxio because it can increase a client's read and write throughput when co-located with\n+an Alluxio worker.\n+\n+#### Properties to Enable Short-Circuit Operations\n+\n+This feature is enabled by default, however requires extra configuration to work properly in\n+Kubernetes environments.\n+See sections below for how to configure short-circuit access.\n+\n+#### Disable Short-Circuit Operations\n+To disable short-circuit operations, the operation depends on how you deploy Alluxio.\n+\n+> Note: As mentioned, disabling short-circuit access for Alluxio workers will result in \n+worse throughput \n+\n+***Using `helm`***\n+You can disable short circuit by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: false\n+```\n+\n+***Using `kubectl`***\n+You should set the property `alluxio.user.short.circuit.enabled` to `false` in your `ALLUXIO_WORKER_JAVA_OPTS`.\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=false\n+```\n+\n+You should also manually remove the volume `alluxio-domain` from `volumes` of the Pod definition \n+and `volumeMounts` of each container if existing.\n+\n+#### Short-Circuit Modes\n+There are 2 modes for using short-circuit.\n+\n+##### `local`\n+In this mode, the Alluxio client and local Alluxio worker recognize each other if the client hostname \n+matches the worker hostname.\n+This is called *Hostname Introspection*.\n+In this mode, the Alluxio client and local Alluxio worker share the tiered storage of Alluxio worker.\n+\n+***Using `helm`***\n+You can use `local` policy by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: true\n+  policy: \"local\"\n+```\n+\n+***Using `kubectl`***\n+In your `alluxio-configmap.yaml` you should add the following properties to `ALLUXIO_WORKER_JAVA_OPTS`:\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=true -Dalluxio.worker.data.server.domain.socket.address= -Dalluxio.worker.data.server.domain.socket.as.uuid=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY5MTYwMA=="}, "originalCommit": {"oid": "9c2fc92d408f324a2927a211f941f7370b8ff070"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTIzODQ0OnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/templates/worker/daemonset.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNToyNDoxNFrOF_F6tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNToyNDoxNFrOF_F6tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcwMTU1OQ==", "bodyText": "With local policy this is not needed?", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r401701559", "createdAt": "2020-04-01T15:24:14Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/worker/daemonset.yaml", "diffHunk": "@@ -88,8 +77,10 @@ spec:\n           - containerPort: {{ .Values.worker.ports.web }}\n             name: web\n           volumeMounts:\n+            {{- if $needDomainSocketVolume }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30a67ae1534d6c285faacd92b3b1cd2d68cdf17"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzMzMjg4OnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzozMToxMlrOF_aHBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzozMToxMlrOF_aHBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzMjM4OQ==", "bodyText": "nit: \"could result in worse I/O throughput\" since the workload throughput might not be effected significantly", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r402032389", "createdAt": "2020-04-02T03:31:12Z", "author": {"login": "madanadit"}, "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "diffHunk": "@@ -687,6 +684,136 @@ If Alluxio has already been deployed with helm and now you want to enable FUSE,\n $ helm upgrade alluxio -f config.yaml --set fuse.enabled=true --set fuse.clientEnabled=true alluxio-charts/alluxio\n ```\n \n+### Short-circuit Access\n+\n+Short-circuit access enables clients to perform read and write operations directly against the\n+worker bypassing the networking interface.\n+For performance-critical applications it is recommended to enable short-circuit operations\n+against Alluxio because it can increase a client's read and write throughput when co-located with\n+an Alluxio worker.\n+\n+#### Properties to Enable Short-Circuit Operations\n+\n+This feature is enabled by default, however requires extra configuration to work properly in\n+Kubernetes environments.\n+See sections below for how to configure short-circuit access.\n+\n+#### Disable Short-Circuit Operations\n+To disable short-circuit operations, the operation depends on how you deploy Alluxio.\n+\n+> Note: As mentioned, disabling short-circuit access for Alluxio workers will result in \n+worse throughput ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30a67ae1534d6c285faacd92b3b1cd2d68cdf17"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzMzMzIxOnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzozMToyOFrOF_aHOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzozMToyOFrOF_aHOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzMjQ0Mw==", "bodyText": "nit: remove newline", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r402032443", "createdAt": "2020-04-02T03:31:28Z", "author": {"login": "madanadit"}, "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "diffHunk": "@@ -687,6 +684,136 @@ If Alluxio has already been deployed with helm and now you want to enable FUSE,\n $ helm upgrade alluxio -f config.yaml --set fuse.enabled=true --set fuse.clientEnabled=true alluxio-charts/alluxio\n ```\n \n+### Short-circuit Access\n+\n+Short-circuit access enables clients to perform read and write operations directly against the\n+worker bypassing the networking interface.\n+For performance-critical applications it is recommended to enable short-circuit operations\n+against Alluxio because it can increase a client's read and write throughput when co-located with\n+an Alluxio worker.\n+\n+#### Properties to Enable Short-Circuit Operations\n+\n+This feature is enabled by default, however requires extra configuration to work properly in\n+Kubernetes environments.\n+See sections below for how to configure short-circuit access.\n+\n+#### Disable Short-Circuit Operations\n+To disable short-circuit operations, the operation depends on how you deploy Alluxio.\n+\n+> Note: As mentioned, disabling short-circuit access for Alluxio workers will result in \n+worse throughput \n+\n+***Using `helm`***\n+You can disable short circuit by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: false\n+```\n+\n+***Using `kubectl`***\n+You should set the property `alluxio.user.short.circuit.enabled` to `false` in your `ALLUXIO_WORKER_JAVA_OPTS`.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30a67ae1534d6c285faacd92b3b1cd2d68cdf17"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzMzODg3OnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzozNDo0MFrOF_aKXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzozNDo0MFrOF_aKXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzMzI0NQ==", "bodyText": "add \"in Kubernetes\" to the end", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r402033245", "createdAt": "2020-04-02T03:34:40Z", "author": {"login": "madanadit"}, "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "diffHunk": "@@ -687,6 +684,136 @@ If Alluxio has already been deployed with helm and now you want to enable FUSE,\n $ helm upgrade alluxio -f config.yaml --set fuse.enabled=true --set fuse.clientEnabled=true alluxio-charts/alluxio\n ```\n \n+### Short-circuit Access\n+\n+Short-circuit access enables clients to perform read and write operations directly against the\n+worker bypassing the networking interface.\n+For performance-critical applications it is recommended to enable short-circuit operations\n+against Alluxio because it can increase a client's read and write throughput when co-located with\n+an Alluxio worker.\n+\n+#### Properties to Enable Short-Circuit Operations\n+\n+This feature is enabled by default, however requires extra configuration to work properly in\n+Kubernetes environments.\n+See sections below for how to configure short-circuit access.\n+\n+#### Disable Short-Circuit Operations\n+To disable short-circuit operations, the operation depends on how you deploy Alluxio.\n+\n+> Note: As mentioned, disabling short-circuit access for Alluxio workers will result in \n+worse throughput \n+\n+***Using `helm`***\n+You can disable short circuit by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: false\n+```\n+\n+***Using `kubectl`***\n+You should set the property `alluxio.user.short.circuit.enabled` to `false` in your `ALLUXIO_WORKER_JAVA_OPTS`.\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=false\n+```\n+\n+You should also manually remove the volume `alluxio-domain` from `volumes` of the Pod definition \n+and `volumeMounts` of each container if existing.\n+\n+#### Short-Circuit Modes\n+There are 2 modes for using short-circuit.\n+\n+##### `local`\n+In this mode, the Alluxio client and local Alluxio worker recognize each other if the client hostname \n+matches the worker hostname.\n+This is called *Hostname Introspection*.\n+In this mode, the Alluxio client and local Alluxio worker share the tiered storage of Alluxio worker.\n+\n+***Using `helm`***\n+You can use `local` policy by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: true\n+  policy: local\n+```\n+\n+***Using `kubectl`***\n+In your `alluxio-configmap.yaml` you should add the following properties to `ALLUXIO_WORKER_JAVA_OPTS`:\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=true -Dalluxio.worker.data.server.domain.socket.address= -Dalluxio.worker.data.server.domain.socket.as.uuid=false\n+```\n+\n+##### `uuid`\n+This is the **default** policy used for short-circuit.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30a67ae1534d6c285faacd92b3b1cd2d68cdf17"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzM0MTE3OnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzozNjoxMVrOF_aLrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNTozMzo1M1rOGBA-4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzMzU4Mw==", "bodyText": "this sentence doesn't make sense to me", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r402033583", "createdAt": "2020-04-02T03:36:11Z", "author": {"login": "madanadit"}, "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "diffHunk": "@@ -687,6 +684,136 @@ If Alluxio has already been deployed with helm and now you want to enable FUSE,\n $ helm upgrade alluxio -f config.yaml --set fuse.enabled=true --set fuse.clientEnabled=true alluxio-charts/alluxio\n ```\n \n+### Short-circuit Access\n+\n+Short-circuit access enables clients to perform read and write operations directly against the\n+worker bypassing the networking interface.\n+For performance-critical applications it is recommended to enable short-circuit operations\n+against Alluxio because it can increase a client's read and write throughput when co-located with\n+an Alluxio worker.\n+\n+#### Properties to Enable Short-Circuit Operations\n+\n+This feature is enabled by default, however requires extra configuration to work properly in\n+Kubernetes environments.\n+See sections below for how to configure short-circuit access.\n+\n+#### Disable Short-Circuit Operations\n+To disable short-circuit operations, the operation depends on how you deploy Alluxio.\n+\n+> Note: As mentioned, disabling short-circuit access for Alluxio workers will result in \n+worse throughput \n+\n+***Using `helm`***\n+You can disable short circuit by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: false\n+```\n+\n+***Using `kubectl`***\n+You should set the property `alluxio.user.short.circuit.enabled` to `false` in your `ALLUXIO_WORKER_JAVA_OPTS`.\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=false\n+```\n+\n+You should also manually remove the volume `alluxio-domain` from `volumes` of the Pod definition \n+and `volumeMounts` of each container if existing.\n+\n+#### Short-Circuit Modes\n+There are 2 modes for using short-circuit.\n+\n+##### `local`\n+In this mode, the Alluxio client and local Alluxio worker recognize each other if the client hostname \n+matches the worker hostname.\n+This is called *Hostname Introspection*.\n+In this mode, the Alluxio client and local Alluxio worker share the tiered storage of Alluxio worker.\n+\n+***Using `helm`***\n+You can use `local` policy by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: true\n+  policy: local\n+```\n+\n+***Using `kubectl`***\n+In your `alluxio-configmap.yaml` you should add the following properties to `ALLUXIO_WORKER_JAVA_OPTS`:\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=true -Dalluxio.worker.data.server.domain.socket.address= -Dalluxio.worker.data.server.domain.socket.as.uuid=false\n+```\n+\n+##### `uuid`\n+This is the **default** policy used for short-circuit.\n+\n+If the client or worker container is using virtual networking, their hostnames may not match.\n+In such a scenario, set the following property to use filesystem inspection to enable short-circuit\n+operations and **make sure the client container mounts the directory specified as the domain socket\n+path**.\n+Short-circuit writes are then enabled if the worker UUID is located on the client filesystem.\n+\n+***Domain Socket Path***\n+The domain socket is a volume which should be mounted on:\n+\n+- All Alluxio workers\n+- All application containers which intend to read/write through Alluxio\n+\n+This domain socket volume refers to a `PersistentVolumeClaim` by its name.\n+You should provision to the `PersistenceVolumeClaim` with a `PersistentVolume` of kind being either", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30a67ae1534d6c285faacd92b3b1cd2d68cdf17"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNzg1OQ==", "bodyText": "I tried to rephrase it. PTAL at the latest version. Thanks!", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r403717859", "createdAt": "2020-04-05T15:33:53Z", "author": {"login": "jiacheliu3"}, "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "diffHunk": "@@ -687,6 +684,136 @@ If Alluxio has already been deployed with helm and now you want to enable FUSE,\n $ helm upgrade alluxio -f config.yaml --set fuse.enabled=true --set fuse.clientEnabled=true alluxio-charts/alluxio\n ```\n \n+### Short-circuit Access\n+\n+Short-circuit access enables clients to perform read and write operations directly against the\n+worker bypassing the networking interface.\n+For performance-critical applications it is recommended to enable short-circuit operations\n+against Alluxio because it can increase a client's read and write throughput when co-located with\n+an Alluxio worker.\n+\n+#### Properties to Enable Short-Circuit Operations\n+\n+This feature is enabled by default, however requires extra configuration to work properly in\n+Kubernetes environments.\n+See sections below for how to configure short-circuit access.\n+\n+#### Disable Short-Circuit Operations\n+To disable short-circuit operations, the operation depends on how you deploy Alluxio.\n+\n+> Note: As mentioned, disabling short-circuit access for Alluxio workers will result in \n+worse throughput \n+\n+***Using `helm`***\n+You can disable short circuit by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: false\n+```\n+\n+***Using `kubectl`***\n+You should set the property `alluxio.user.short.circuit.enabled` to `false` in your `ALLUXIO_WORKER_JAVA_OPTS`.\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=false\n+```\n+\n+You should also manually remove the volume `alluxio-domain` from `volumes` of the Pod definition \n+and `volumeMounts` of each container if existing.\n+\n+#### Short-Circuit Modes\n+There are 2 modes for using short-circuit.\n+\n+##### `local`\n+In this mode, the Alluxio client and local Alluxio worker recognize each other if the client hostname \n+matches the worker hostname.\n+This is called *Hostname Introspection*.\n+In this mode, the Alluxio client and local Alluxio worker share the tiered storage of Alluxio worker.\n+\n+***Using `helm`***\n+You can use `local` policy by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: true\n+  policy: local\n+```\n+\n+***Using `kubectl`***\n+In your `alluxio-configmap.yaml` you should add the following properties to `ALLUXIO_WORKER_JAVA_OPTS`:\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=true -Dalluxio.worker.data.server.domain.socket.address= -Dalluxio.worker.data.server.domain.socket.as.uuid=false\n+```\n+\n+##### `uuid`\n+This is the **default** policy used for short-circuit.\n+\n+If the client or worker container is using virtual networking, their hostnames may not match.\n+In such a scenario, set the following property to use filesystem inspection to enable short-circuit\n+operations and **make sure the client container mounts the directory specified as the domain socket\n+path**.\n+Short-circuit writes are then enabled if the worker UUID is located on the client filesystem.\n+\n+***Domain Socket Path***\n+The domain socket is a volume which should be mounted on:\n+\n+- All Alluxio workers\n+- All application containers which intend to read/write through Alluxio\n+\n+This domain socket volume refers to a `PersistentVolumeClaim` by its name.\n+You should provision to the `PersistenceVolumeClaim` with a `PersistentVolume` of kind being either", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzMzU4Mw=="}, "originalCommit": {"oid": "f30a67ae1534d6c285faacd92b3b1cd2d68cdf17"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzM0MjM1OnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzozNzowMVrOF_aMUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzozNzowMVrOF_aMUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzMzc0Ng==", "bodyText": "clarify explicitly that the pvc is created as part of alluxio install", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r402033746", "createdAt": "2020-04-02T03:37:01Z", "author": {"login": "madanadit"}, "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "diffHunk": "@@ -687,6 +684,136 @@ If Alluxio has already been deployed with helm and now you want to enable FUSE,\n $ helm upgrade alluxio -f config.yaml --set fuse.enabled=true --set fuse.clientEnabled=true alluxio-charts/alluxio\n ```\n \n+### Short-circuit Access\n+\n+Short-circuit access enables clients to perform read and write operations directly against the\n+worker bypassing the networking interface.\n+For performance-critical applications it is recommended to enable short-circuit operations\n+against Alluxio because it can increase a client's read and write throughput when co-located with\n+an Alluxio worker.\n+\n+#### Properties to Enable Short-Circuit Operations\n+\n+This feature is enabled by default, however requires extra configuration to work properly in\n+Kubernetes environments.\n+See sections below for how to configure short-circuit access.\n+\n+#### Disable Short-Circuit Operations\n+To disable short-circuit operations, the operation depends on how you deploy Alluxio.\n+\n+> Note: As mentioned, disabling short-circuit access for Alluxio workers will result in \n+worse throughput \n+\n+***Using `helm`***\n+You can disable short circuit by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: false\n+```\n+\n+***Using `kubectl`***\n+You should set the property `alluxio.user.short.circuit.enabled` to `false` in your `ALLUXIO_WORKER_JAVA_OPTS`.\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=false\n+```\n+\n+You should also manually remove the volume `alluxio-domain` from `volumes` of the Pod definition \n+and `volumeMounts` of each container if existing.\n+\n+#### Short-Circuit Modes\n+There are 2 modes for using short-circuit.\n+\n+##### `local`\n+In this mode, the Alluxio client and local Alluxio worker recognize each other if the client hostname \n+matches the worker hostname.\n+This is called *Hostname Introspection*.\n+In this mode, the Alluxio client and local Alluxio worker share the tiered storage of Alluxio worker.\n+\n+***Using `helm`***\n+You can use `local` policy by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: true\n+  policy: local\n+```\n+\n+***Using `kubectl`***\n+In your `alluxio-configmap.yaml` you should add the following properties to `ALLUXIO_WORKER_JAVA_OPTS`:\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=true -Dalluxio.worker.data.server.domain.socket.address= -Dalluxio.worker.data.server.domain.socket.as.uuid=false\n+```\n+\n+##### `uuid`\n+This is the **default** policy used for short-circuit.\n+\n+If the client or worker container is using virtual networking, their hostnames may not match.\n+In such a scenario, set the following property to use filesystem inspection to enable short-circuit\n+operations and **make sure the client container mounts the directory specified as the domain socket\n+path**.\n+Short-circuit writes are then enabled if the worker UUID is located on the client filesystem.\n+\n+***Domain Socket Path***\n+The domain socket is a volume which should be mounted on:\n+\n+- All Alluxio workers\n+- All application containers which intend to read/write through Alluxio\n+\n+This domain socket volume refers to a `PersistentVolumeClaim` by its name.\n+You should provision to the `PersistenceVolumeClaim` with a `PersistentVolume` of kind being either\n+`hostPath` or `local`.\n+\n+***Using `helm`***\n+You can use `uuid` policy by setting the properties as below:\n+\n+```properties\n+# These are the default configurations\n+shortCircuit:\n+  enabled: true\n+  policy: uuid\n+  pvcName: alluxio-worker-domain-socket\n+  accessModes:\n+    - ReadWriteOnce\n+  size: 1Gi\n+  storageClass: standard\n+```\n+\n+The field `shortCircuit.pvcName` defines the name of the `PersistentVolumeClaim` for domain socket.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30a67ae1534d6c285faacd92b3b1cd2d68cdf17"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzM0NDk0OnYy", "diffSide": "RIGHT", "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzozODo0MlrOF_aN2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNToyMTowOFrOGBA4ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzNDEzNw==", "bodyText": "is this a helm template path? the user does not need to know about this. when using kubectl one of the pre-generated templates would be used.", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r402034137", "createdAt": "2020-04-02T03:38:42Z", "author": {"login": "madanadit"}, "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "diffHunk": "@@ -687,6 +684,136 @@ If Alluxio has already been deployed with helm and now you want to enable FUSE,\n $ helm upgrade alluxio -f config.yaml --set fuse.enabled=true --set fuse.clientEnabled=true alluxio-charts/alluxio\n ```\n \n+### Short-circuit Access\n+\n+Short-circuit access enables clients to perform read and write operations directly against the\n+worker bypassing the networking interface.\n+For performance-critical applications it is recommended to enable short-circuit operations\n+against Alluxio because it can increase a client's read and write throughput when co-located with\n+an Alluxio worker.\n+\n+#### Properties to Enable Short-Circuit Operations\n+\n+This feature is enabled by default, however requires extra configuration to work properly in\n+Kubernetes environments.\n+See sections below for how to configure short-circuit access.\n+\n+#### Disable Short-Circuit Operations\n+To disable short-circuit operations, the operation depends on how you deploy Alluxio.\n+\n+> Note: As mentioned, disabling short-circuit access for Alluxio workers will result in \n+worse throughput \n+\n+***Using `helm`***\n+You can disable short circuit by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: false\n+```\n+\n+***Using `kubectl`***\n+You should set the property `alluxio.user.short.circuit.enabled` to `false` in your `ALLUXIO_WORKER_JAVA_OPTS`.\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=false\n+```\n+\n+You should also manually remove the volume `alluxio-domain` from `volumes` of the Pod definition \n+and `volumeMounts` of each container if existing.\n+\n+#### Short-Circuit Modes\n+There are 2 modes for using short-circuit.\n+\n+##### `local`\n+In this mode, the Alluxio client and local Alluxio worker recognize each other if the client hostname \n+matches the worker hostname.\n+This is called *Hostname Introspection*.\n+In this mode, the Alluxio client and local Alluxio worker share the tiered storage of Alluxio worker.\n+\n+***Using `helm`***\n+You can use `local` policy by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: true\n+  policy: local\n+```\n+\n+***Using `kubectl`***\n+In your `alluxio-configmap.yaml` you should add the following properties to `ALLUXIO_WORKER_JAVA_OPTS`:\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=true -Dalluxio.worker.data.server.domain.socket.address= -Dalluxio.worker.data.server.domain.socket.as.uuid=false\n+```\n+\n+##### `uuid`\n+This is the **default** policy used for short-circuit.\n+\n+If the client or worker container is using virtual networking, their hostnames may not match.\n+In such a scenario, set the following property to use filesystem inspection to enable short-circuit\n+operations and **make sure the client container mounts the directory specified as the domain socket\n+path**.\n+Short-circuit writes are then enabled if the worker UUID is located on the client filesystem.\n+\n+***Domain Socket Path***\n+The domain socket is a volume which should be mounted on:\n+\n+- All Alluxio workers\n+- All application containers which intend to read/write through Alluxio\n+\n+This domain socket volume refers to a `PersistentVolumeClaim` by its name.\n+You should provision to the `PersistenceVolumeClaim` with a `PersistentVolume` of kind being either\n+`hostPath` or `local`.\n+\n+***Using `helm`***\n+You can use `uuid` policy by setting the properties as below:\n+\n+```properties\n+# These are the default configurations\n+shortCircuit:\n+  enabled: true\n+  policy: uuid\n+  pvcName: alluxio-worker-domain-socket\n+  accessModes:\n+    - ReadWriteOnce\n+  size: 1Gi\n+  storageClass: standard\n+```\n+\n+The field `shortCircuit.pvcName` defines the name of the `PersistentVolumeClaim` for domain socket.\n+\n+***Using `kubectl`***\n+You should verify the following properties in `ALLUXIO_WORKER_JAVA_OPTS`.\n+Actually they are set to these values by default:\n+```properties\n+-Dalluxio.worker.data.server.domain.socket.address=/opt/domain -Dalluxio.worker.data.server.domain.socket.as.uuid=true\n+```\n+\n+Also you should make sure the worker Pods have domain socket defined in the `volumes`,\n+and all relevant containers have the domain socket volume mounted.\n+The domain socket volume is defined as below by default:\n+```properties\n+volumes:\n+  - name: alluxio-domain\n+    persistentVolumeClaim:\n+      claimName: \"alluxio-worker-domain-socket\"\n+```\n+\n+> Note: Compute application containers **MUST** mount the domain socket volume to the same path\n+(`/opt/domain`) as configured for the Alluxio workers.\n+\n+The `PersistenceVolumeClaim` is defined in `worker/alluxio-worker-pvc.yaml`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30a67ae1534d6c285faacd92b3b1cd2d68cdf17"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNjI1OQ==", "bodyText": "This is a pre-generated template path. (I'm adding .template to the end to make it more clear)", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r403716259", "createdAt": "2020-04-05T15:21:08Z", "author": {"login": "jiacheliu3"}, "path": "docs/en/deploy/Running-Alluxio-On-Kubernetes.md", "diffHunk": "@@ -687,6 +684,136 @@ If Alluxio has already been deployed with helm and now you want to enable FUSE,\n $ helm upgrade alluxio -f config.yaml --set fuse.enabled=true --set fuse.clientEnabled=true alluxio-charts/alluxio\n ```\n \n+### Short-circuit Access\n+\n+Short-circuit access enables clients to perform read and write operations directly against the\n+worker bypassing the networking interface.\n+For performance-critical applications it is recommended to enable short-circuit operations\n+against Alluxio because it can increase a client's read and write throughput when co-located with\n+an Alluxio worker.\n+\n+#### Properties to Enable Short-Circuit Operations\n+\n+This feature is enabled by default, however requires extra configuration to work properly in\n+Kubernetes environments.\n+See sections below for how to configure short-circuit access.\n+\n+#### Disable Short-Circuit Operations\n+To disable short-circuit operations, the operation depends on how you deploy Alluxio.\n+\n+> Note: As mentioned, disabling short-circuit access for Alluxio workers will result in \n+worse throughput \n+\n+***Using `helm`***\n+You can disable short circuit by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: false\n+```\n+\n+***Using `kubectl`***\n+You should set the property `alluxio.user.short.circuit.enabled` to `false` in your `ALLUXIO_WORKER_JAVA_OPTS`.\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=false\n+```\n+\n+You should also manually remove the volume `alluxio-domain` from `volumes` of the Pod definition \n+and `volumeMounts` of each container if existing.\n+\n+#### Short-Circuit Modes\n+There are 2 modes for using short-circuit.\n+\n+##### `local`\n+In this mode, the Alluxio client and local Alluxio worker recognize each other if the client hostname \n+matches the worker hostname.\n+This is called *Hostname Introspection*.\n+In this mode, the Alluxio client and local Alluxio worker share the tiered storage of Alluxio worker.\n+\n+***Using `helm`***\n+You can use `local` policy by setting the properties as below:\n+\n+```properties\n+shortCircuit:\n+  enabled: true\n+  policy: local\n+```\n+\n+***Using `kubectl`***\n+In your `alluxio-configmap.yaml` you should add the following properties to `ALLUXIO_WORKER_JAVA_OPTS`:\n+\n+```properties\n+-Dalluxio.user.short.circuit.enabled=true -Dalluxio.worker.data.server.domain.socket.address= -Dalluxio.worker.data.server.domain.socket.as.uuid=false\n+```\n+\n+##### `uuid`\n+This is the **default** policy used for short-circuit.\n+\n+If the client or worker container is using virtual networking, their hostnames may not match.\n+In such a scenario, set the following property to use filesystem inspection to enable short-circuit\n+operations and **make sure the client container mounts the directory specified as the domain socket\n+path**.\n+Short-circuit writes are then enabled if the worker UUID is located on the client filesystem.\n+\n+***Domain Socket Path***\n+The domain socket is a volume which should be mounted on:\n+\n+- All Alluxio workers\n+- All application containers which intend to read/write through Alluxio\n+\n+This domain socket volume refers to a `PersistentVolumeClaim` by its name.\n+You should provision to the `PersistenceVolumeClaim` with a `PersistentVolume` of kind being either\n+`hostPath` or `local`.\n+\n+***Using `helm`***\n+You can use `uuid` policy by setting the properties as below:\n+\n+```properties\n+# These are the default configurations\n+shortCircuit:\n+  enabled: true\n+  policy: uuid\n+  pvcName: alluxio-worker-domain-socket\n+  accessModes:\n+    - ReadWriteOnce\n+  size: 1Gi\n+  storageClass: standard\n+```\n+\n+The field `shortCircuit.pvcName` defines the name of the `PersistentVolumeClaim` for domain socket.\n+\n+***Using `kubectl`***\n+You should verify the following properties in `ALLUXIO_WORKER_JAVA_OPTS`.\n+Actually they are set to these values by default:\n+```properties\n+-Dalluxio.worker.data.server.domain.socket.address=/opt/domain -Dalluxio.worker.data.server.domain.socket.as.uuid=true\n+```\n+\n+Also you should make sure the worker Pods have domain socket defined in the `volumes`,\n+and all relevant containers have the domain socket volume mounted.\n+The domain socket volume is defined as below by default:\n+```properties\n+volumes:\n+  - name: alluxio-domain\n+    persistentVolumeClaim:\n+      claimName: \"alluxio-worker-domain-socket\"\n+```\n+\n+> Note: Compute application containers **MUST** mount the domain socket volume to the same path\n+(`/opt/domain`) as configured for the Alluxio workers.\n+\n+The `PersistenceVolumeClaim` is defined in `worker/alluxio-worker-pvc.yaml`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzNDEzNw=="}, "originalCommit": {"oid": "f30a67ae1534d6c285faacd92b3b1cd2d68cdf17"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzM2MDUwOnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzo0ODo0M1rOF_aWmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzo0ODo0M1rOF_aWmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzNjM3OA==", "bodyText": "nit: rename to pvcSize. also this doesn't  need to be that large as its just a socket file, my guess is a default of 1Mi should be fine", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r402036378", "createdAt": "2020-04-02T03:48:43Z", "author": {"login": "madanadit"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -173,57 +214,18 @@ tieredstore:\n     high: 0.95\n     low: 0.7\n \n-# The domain hostPath for uuid mode in short-circuit\n-domainHostPath: \"/tmp/alluxio-domain\"\n-\n-worker:\n-  args:\n-    - worker-only\n-    - --no-format\n-  # Properties for the worker component\n-  properties:\n-  resources:\n-    limits:\n-      cpu: \"1\"\n-      memory: \"2G\"\n-    requests:\n-      cpu: \"1\"\n-      memory: \"2G\"\n-  ports:\n-    rpc: 29999\n-    web: 30000\n-  # JVM options specific to the worker container\n-  jvmOptions: \"\"\n-  nodeSelector: {}\n-  domainHostPath: \"/tmp/alluxio-domain\"\n-  hostNetwork: true\n-  dnsPolicy: ClusterFirstWithHostNet\n-  ramdisk:\n-    size: 1Gi\n-  # shortCircuitPolicy can be local or uuid,\n+# Short circuit related properties\n+shortCircuit:\n+  enabled: true\n+  # The policy for short circuit can be \"local\" or \"uuid\",\n   # local means the cache directory is in the same mount namespace,\n   # uuid means interact with domain socket\n-  shortCircuitPolicy: uuid\n-\n-jobWorker:\n-  args:\n-    - job-worker\n-  # Properties for the jobWorker component\n-  properties:\n-  resources:\n-    limits:\n-      cpu: \"1\"\n-      memory: \"1G\"\n-    requests:\n-      cpu: \"1\"\n-      memory: \"1G\"\n-  ports:\n-    rpc: 30001\n-    data: 30002\n-    web: 30003\n-  # JVM options specific to the jobWorker container\n-  jvmOptions: \"\"\n-\n+  policy: uuid\n+  pvcName: alluxio-worker-domain-socket\n+  accessModes:\n+    - ReadWriteOnce\n+  size: 1Gi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30a67ae1534d6c285faacd92b3b1cd2d68cdf17"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzM2MzExOnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzo1MDoyOFrOF_aYFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzo1MDoyOFrOF_aYFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzNjc1OA==", "bodyText": "nit: rename to pvcAccessModes", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r402036758", "createdAt": "2020-04-02T03:50:28Z", "author": {"login": "madanadit"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -173,57 +214,18 @@ tieredstore:\n     high: 0.95\n     low: 0.7\n \n-# The domain hostPath for uuid mode in short-circuit\n-domainHostPath: \"/tmp/alluxio-domain\"\n-\n-worker:\n-  args:\n-    - worker-only\n-    - --no-format\n-  # Properties for the worker component\n-  properties:\n-  resources:\n-    limits:\n-      cpu: \"1\"\n-      memory: \"2G\"\n-    requests:\n-      cpu: \"1\"\n-      memory: \"2G\"\n-  ports:\n-    rpc: 29999\n-    web: 30000\n-  # JVM options specific to the worker container\n-  jvmOptions: \"\"\n-  nodeSelector: {}\n-  domainHostPath: \"/tmp/alluxio-domain\"\n-  hostNetwork: true\n-  dnsPolicy: ClusterFirstWithHostNet\n-  ramdisk:\n-    size: 1Gi\n-  # shortCircuitPolicy can be local or uuid,\n+# Short circuit related properties\n+shortCircuit:\n+  enabled: true\n+  # The policy for short circuit can be \"local\" or \"uuid\",\n   # local means the cache directory is in the same mount namespace,\n   # uuid means interact with domain socket\n-  shortCircuitPolicy: uuid\n-\n-jobWorker:\n-  args:\n-    - job-worker\n-  # Properties for the jobWorker component\n-  properties:\n-  resources:\n-    limits:\n-      cpu: \"1\"\n-      memory: \"1G\"\n-    requests:\n-      cpu: \"1\"\n-      memory: \"1G\"\n-  ports:\n-    rpc: 30001\n-    data: 30002\n-    web: 30003\n-  # JVM options specific to the jobWorker container\n-  jvmOptions: \"\"\n-\n+  policy: uuid\n+  pvcName: alluxio-worker-domain-socket\n+  accessModes:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30a67ae1534d6c285faacd92b3b1cd2d68cdf17"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MzM2NDAxOnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzo1MTowM1rOF_aYow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzo1MTowM1rOF_aYow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzNjg5OQ==", "bodyText": "nit: rename to pvcStorageClass", "url": "https://github.com/Alluxio/alluxio/pull/11201#discussion_r402036899", "createdAt": "2020-04-02T03:51:03Z", "author": {"login": "madanadit"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -173,57 +214,18 @@ tieredstore:\n     high: 0.95\n     low: 0.7\n \n-# The domain hostPath for uuid mode in short-circuit\n-domainHostPath: \"/tmp/alluxio-domain\"\n-\n-worker:\n-  args:\n-    - worker-only\n-    - --no-format\n-  # Properties for the worker component\n-  properties:\n-  resources:\n-    limits:\n-      cpu: \"1\"\n-      memory: \"2G\"\n-    requests:\n-      cpu: \"1\"\n-      memory: \"2G\"\n-  ports:\n-    rpc: 29999\n-    web: 30000\n-  # JVM options specific to the worker container\n-  jvmOptions: \"\"\n-  nodeSelector: {}\n-  domainHostPath: \"/tmp/alluxio-domain\"\n-  hostNetwork: true\n-  dnsPolicy: ClusterFirstWithHostNet\n-  ramdisk:\n-    size: 1Gi\n-  # shortCircuitPolicy can be local or uuid,\n+# Short circuit related properties\n+shortCircuit:\n+  enabled: true\n+  # The policy for short circuit can be \"local\" or \"uuid\",\n   # local means the cache directory is in the same mount namespace,\n   # uuid means interact with domain socket\n-  shortCircuitPolicy: uuid\n-\n-jobWorker:\n-  args:\n-    - job-worker\n-  # Properties for the jobWorker component\n-  properties:\n-  resources:\n-    limits:\n-      cpu: \"1\"\n-      memory: \"1G\"\n-    requests:\n-      cpu: \"1\"\n-      memory: \"1G\"\n-  ports:\n-    rpc: 30001\n-    data: 30002\n-    web: 30003\n-  # JVM options specific to the jobWorker container\n-  jvmOptions: \"\"\n-\n+  policy: uuid\n+  pvcName: alluxio-worker-domain-socket\n+  accessModes:\n+    - ReadWriteOnce\n+  size: 1Gi\n+  storageClass: standard", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f30a67ae1534d6c285faacd92b3b1cd2d68cdf17"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1793, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}