{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0Njk1NjE1", "number": 11797, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOToyNjowNVrOEQw8Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOToyNjowNVrOEQw8Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDE0NTI2OnYy", "diffSide": "RIGHT", "path": "docs/en/contributor/Code-Conventions.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOToyNjowNVrOG1GkjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOToyMzowN1rOG3wQ_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzNTM3Mg==", "bodyText": "We may want to mention something like this (https://docs.alluxio.io/os/user/stable/en/contributor/Code-Conventions.html#selectively-javadoc-exceptions) here as well.", "url": "https://github.com/Alluxio/alluxio/pull/11797#discussion_r458335372", "createdAt": "2020-07-21T19:26:05Z", "author": {"login": "gpang"}, "path": "docs/en/contributor/Code-Conventions.md", "diffHunk": "@@ -75,6 +75,57 @@ warnings are introduced:\n $ mvn checkstyle:checkstyle\n ```\n \n+## JavaDoc Style\n+\n+This codebase follows the [Oracle JavaDoc style](http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html)\n+with the following refinements:\n+\n+- All public classes/interfaces should have a class/interface-level comment that describes the purpose of the class/interface.\n+- All public members should have a member-level comment the describes the purpose of the member. For example,\n+\n+```java\n+/** The number of logical bytes used. */\n+public final AtomicLong mBytes = new AtomicLong(0);\n+```\n+\n+- All public methods (including constructors) should use the following format. For example\n+\n+```java\n+/**\n+ * Does something. This is a method description that uses \n+ * 3rd person (does something) as opposed to 2nd person (do\n+ * something).\n+ *\n+ * @param param_1 description of 1st parameter\n+ * ...\n+ * @param param_n description of nth parameter\n+ * @return description of return argument (if applicable)\n+ * @throws exception_1 description of 1st exception case\n+ * ...\n+ * @throws exception_n description of nth exception case\n+ */\n+```\n+- An exception to the above rule is that `@throws` doesn\u2019t need to be provided for `@Test` methods,\n+or for generic exceptions like IOException when there is nothing interesting to document.\n+- Do not put unchecked exceptions like `RuntimeException` in javadoc unless it is critical for this methd.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64c80948a8b9b5286e6d1ff45f5fb621c75136b2"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTExNTY0Nw==", "bodyText": "done", "url": "https://github.com/Alluxio/alluxio/pull/11797#discussion_r461115647", "createdAt": "2020-07-27T19:23:07Z", "author": {"login": "apc999"}, "path": "docs/en/contributor/Code-Conventions.md", "diffHunk": "@@ -75,6 +75,57 @@ warnings are introduced:\n $ mvn checkstyle:checkstyle\n ```\n \n+## JavaDoc Style\n+\n+This codebase follows the [Oracle JavaDoc style](http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html)\n+with the following refinements:\n+\n+- All public classes/interfaces should have a class/interface-level comment that describes the purpose of the class/interface.\n+- All public members should have a member-level comment the describes the purpose of the member. For example,\n+\n+```java\n+/** The number of logical bytes used. */\n+public final AtomicLong mBytes = new AtomicLong(0);\n+```\n+\n+- All public methods (including constructors) should use the following format. For example\n+\n+```java\n+/**\n+ * Does something. This is a method description that uses \n+ * 3rd person (does something) as opposed to 2nd person (do\n+ * something).\n+ *\n+ * @param param_1 description of 1st parameter\n+ * ...\n+ * @param param_n description of nth parameter\n+ * @return description of return argument (if applicable)\n+ * @throws exception_1 description of 1st exception case\n+ * ...\n+ * @throws exception_n description of nth exception case\n+ */\n+```\n+- An exception to the above rule is that `@throws` doesn\u2019t need to be provided for `@Test` methods,\n+or for generic exceptions like IOException when there is nothing interesting to document.\n+- Do not put unchecked exceptions like `RuntimeException` in javadoc unless it is critical for this methd.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzNTM3Mg=="}, "originalCommit": {"oid": "64c80948a8b9b5286e6d1ff45f5fb621c75136b2"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1461, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}