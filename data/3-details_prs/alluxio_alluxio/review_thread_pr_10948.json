{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NDAxMTM1", "number": 10948, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMTozOTowNFrODhO0GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMTozOTowNFrODhO0GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTcyMzEzOnYy", "diffSide": "RIGHT", "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMTozOTowNFrOFr4k4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjoyNjo1MFrOFr58wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU2MDAzNA==", "bodyText": "Wouldn't this override the groupMinSize variable and discard the compression ratio?\nwhat was the observed symptom in testing?", "url": "https://github.com/Alluxio/alluxio/pull/10948#discussion_r381560034", "createdAt": "2020-02-19T21:39:04Z", "author": {"login": "yuzhu"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -96,16 +96,17 @@ private boolean shouldIgnore(URIStatus status) {\n     Map<WorkerInfo, ArrayList<CompactTask>> assignments = Maps.newHashMap();\n     int maxNumFiles = config.getMaxNumFiles();\n     long groupMinSize = config.getMinFileSize();\n-    if (totalFileSize / groupMinSize > maxNumFiles) {\n-      groupMinSize = Math.round(totalFileSize / maxNumFiles);\n-    }\n \n     if (!files.isEmpty() && config.getPartitionInfo() != null) {\n       // adjust the group minimum size for source compression ratio\n       groupMinSize *= COMPRESSION_RATIO.get(\n           config.getPartitionInfo().getFormat(files.get(0).getName()));\n     }\n \n+    if (totalFileSize / groupMinSize > maxNumFiles) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9bf4bd0b3d5863ebe45b78795382bffd5994e07"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU3NzYwMw==", "bodyText": "The problem with the current behavior is that when you have a CSV input and you say I want 100 files with groupMinSize small enough that I should be able to get 100 files, you instead get 20 files.", "url": "https://github.com/Alluxio/alluxio/pull/10948#discussion_r381577603", "createdAt": "2020-02-19T22:15:53Z", "author": {"login": "bradyoo"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -96,16 +96,17 @@ private boolean shouldIgnore(URIStatus status) {\n     Map<WorkerInfo, ArrayList<CompactTask>> assignments = Maps.newHashMap();\n     int maxNumFiles = config.getMaxNumFiles();\n     long groupMinSize = config.getMinFileSize();\n-    if (totalFileSize / groupMinSize > maxNumFiles) {\n-      groupMinSize = Math.round(totalFileSize / maxNumFiles);\n-    }\n \n     if (!files.isEmpty() && config.getPartitionInfo() != null) {\n       // adjust the group minimum size for source compression ratio\n       groupMinSize *= COMPRESSION_RATIO.get(\n           config.getPartitionInfo().getFormat(files.get(0).getName()));\n     }\n \n+    if (totalFileSize / groupMinSize > maxNumFiles) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU2MDAzNA=="}, "originalCommit": {"oid": "b9bf4bd0b3d5863ebe45b78795382bffd5994e07"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU3ODAzOA==", "bodyText": "compressionRatio should not be downsizing maxNumFiles.", "url": "https://github.com/Alluxio/alluxio/pull/10948#discussion_r381578038", "createdAt": "2020-02-19T22:16:49Z", "author": {"login": "bradyoo"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -96,16 +96,17 @@ private boolean shouldIgnore(URIStatus status) {\n     Map<WorkerInfo, ArrayList<CompactTask>> assignments = Maps.newHashMap();\n     int maxNumFiles = config.getMaxNumFiles();\n     long groupMinSize = config.getMinFileSize();\n-    if (totalFileSize / groupMinSize > maxNumFiles) {\n-      groupMinSize = Math.round(totalFileSize / maxNumFiles);\n-    }\n \n     if (!files.isEmpty() && config.getPartitionInfo() != null) {\n       // adjust the group minimum size for source compression ratio\n       groupMinSize *= COMPRESSION_RATIO.get(\n           config.getPartitionInfo().getFormat(files.get(0).getName()));\n     }\n \n+    if (totalFileSize / groupMinSize > maxNumFiles) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU2MDAzNA=="}, "originalCommit": {"oid": "b9bf4bd0b3d5863ebe45b78795382bffd5994e07"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU4MjUyOA==", "bodyText": "ah makes sense.", "url": "https://github.com/Alluxio/alluxio/pull/10948#discussion_r381582528", "createdAt": "2020-02-19T22:26:50Z", "author": {"login": "yuzhu"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -96,16 +96,17 @@ private boolean shouldIgnore(URIStatus status) {\n     Map<WorkerInfo, ArrayList<CompactTask>> assignments = Maps.newHashMap();\n     int maxNumFiles = config.getMaxNumFiles();\n     long groupMinSize = config.getMinFileSize();\n-    if (totalFileSize / groupMinSize > maxNumFiles) {\n-      groupMinSize = Math.round(totalFileSize / maxNumFiles);\n-    }\n \n     if (!files.isEmpty() && config.getPartitionInfo() != null) {\n       // adjust the group minimum size for source compression ratio\n       groupMinSize *= COMPRESSION_RATIO.get(\n           config.getPartitionInfo().getFormat(files.get(0).getName()));\n     }\n \n+    if (totalFileSize / groupMinSize > maxNumFiles) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU2MDAzNA=="}, "originalCommit": {"oid": "b9bf4bd0b3d5863ebe45b78795382bffd5994e07"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1952, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}