{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTY4MTA2", "number": 11743, "title": "Add tests for GreedyAllocator", "bodyText": "Address #8687 when loading data from UFS using GreedyAllocator\nBefore this change, when the first storage dir has only space smaller than the block size but larger than 8mb (default request buffer size), GreedyAllocator will always pick this storage dir and fail, even there are next storage dir with sufficient space.\nThe reason to have incremental growth when writing a block is only an optimization for writing a new block when we don't know the block size before hand. Whereas here for blocks in UFS, we always know the block size so it is safe to just request space as large as the block size.\nthis is reopen of #10463", "createdAt": "2020-07-10T01:10:30Z", "url": "https://github.com/Alluxio/alluxio/pull/11743", "merged": true, "mergeCommit": {"oid": "0fe89d37d6768aaa60eb9f7efe1671d255b40d29"}, "closed": true, "closedAt": "2020-11-25T17:53:51Z", "author": {"login": "apc999"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczZbVPABqjM1MzIwMjA0NTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdf_LWLAFqTUzODU0NzE0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de9f5148e22cc9498d25c08f07e3a534e1f5dfe4", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/de9f5148e22cc9498d25c08f07e3a534e1f5dfe4", "committedDate": "2020-07-10T01:08:31Z", "message": "Fix issue with GreedyAllocator"}, "afterCommit": {"oid": "031aca90ca5bb6a5efe9809b5d3479bbb39046b6", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/031aca90ca5bb6a5efe9809b5d3479bbb39046b6", "committedDate": "2020-07-10T01:33:18Z", "message": "Fix issue with GreedyAllocator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca405b5816b4bd444c71a8a96a790a619484cf64", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/ca405b5816b4bd444c71a8a96a790a619484cf64", "committedDate": "2020-07-10T06:14:21Z", "message": "Fix issue with GreedyAllocator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "031aca90ca5bb6a5efe9809b5d3479bbb39046b6", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/031aca90ca5bb6a5efe9809b5d3479bbb39046b6", "committedDate": "2020-07-10T01:33:18Z", "message": "Fix issue with GreedyAllocator"}, "afterCommit": {"oid": "ca405b5816b4bd444c71a8a96a790a619484cf64", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/ca405b5816b4bd444c71a8a96a790a619484cf64", "committedDate": "2020-07-10T06:14:21Z", "message": "Fix issue with GreedyAllocator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NTYxMjY1", "url": "https://github.com/Alluxio/alluxio/pull/11743#pullrequestreview-446561265", "createdAt": "2020-07-10T17:06:57Z", "commit": {"oid": "ca405b5816b4bd444c71a8a96a790a619484cf64"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNzowNjo1N1rOGv-56w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNzowODowNlrOGv-8Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk2Njg5MQ==", "bodyText": "Can't we use the Config annotation to update configuration for a particular test? Like: https://github.com/Alluxio/alluxio/blob/master/tests/src/test/java/alluxio/client/cli/fs/command/PersistCommandTest.java#L362\nThen we don't have to stop and start the cluster, which is not cheap.", "url": "https://github.com/Alluxio/alluxio/pull/11743#discussion_r452966891", "createdAt": "2020-07-10T17:06:57Z", "author": {"login": "gpang"}, "path": "tests/src/test/java/alluxio/server/tieredstore/TieredStoreIntegrationTest.java", "diffHunk": "@@ -236,4 +242,38 @@ public void promoteBlock() throws Exception {\n       }\n     }, WAIT_OPTIONS);\n   }\n+\n+  /**\n+   * With setting of \"StorageDir1, StorageDir2\", loading a block from UFS that is bigger than\n+   * the available space of StorageDir1 should land in StorageDir2 using GreedyAllocator.\n+   * https://github.com/Alluxio/alluxio/issues/8687\n+   */\n+  @Test\n+  public void greedyAllocator() throws Exception {\n+    mLocalAlluxioClusterResource.stop();\n+    int fileLen = 8 * Constants.MB;\n+    mLocalAlluxioClusterResource", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca405b5816b4bd444c71a8a96a790a619484cf64"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk2NzQ1OQ==", "bodyText": "Are there any implications to this change?", "url": "https://github.com/Alluxio/alluxio/pull/11743#discussion_r452967459", "createdAt": "2020-07-10T17:08:06Z", "author": {"login": "gpang"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/UnderFileSystemBlockReader.java", "diffHunk": "@@ -119,7 +117,7 @@ public static UnderFileSystemBlockReader create(UnderFileSystemBlockMeta blockMe\n   private UnderFileSystemBlockReader(UnderFileSystemBlockMeta blockMeta, boolean positionShort,\n       BlockStore localBlockStore, UfsManager ufsManager, UfsInputStreamManager ufsInstreamManager)\n       throws IOException {\n-    mInitialBlockSize = ServerConfiguration.getBytes(PropertyKey.WORKER_FILE_BUFFER_SIZE);\n+    mInitialBlockSize = blockMeta.getBlockSize();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca405b5816b4bd444c71a8a96a790a619484cf64"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NzQ4Nzgz", "url": "https://github.com/Alluxio/alluxio/pull/11743#pullrequestreview-446748783", "createdAt": "2020-07-10T23:27:37Z", "commit": {"oid": "ca405b5816b4bd444c71a8a96a790a619484cf64"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMzoyNzozN1rOGwIPTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMzoyNzozN1rOGwIPTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzExOTgyMA==", "bodyText": "Doesn'tread() method should never call requestSpace() after this change here?\nOtherwise, each read call would allocate more space on top of the initial full block size. However, requested spaces wouldn't leak because the block-store would be updated with the physical file size as part of the commit.", "url": "https://github.com/Alluxio/alluxio/pull/11743#discussion_r453119820", "createdAt": "2020-07-10T23:27:37Z", "author": {"login": "ggezer"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/UnderFileSystemBlockReader.java", "diffHunk": "@@ -119,7 +117,7 @@ public static UnderFileSystemBlockReader create(UnderFileSystemBlockMeta blockMe\n   private UnderFileSystemBlockReader(UnderFileSystemBlockMeta blockMeta, boolean positionShort,\n       BlockStore localBlockStore, UfsManager ufsManager, UfsInputStreamManager ufsInstreamManager)\n       throws IOException {\n-    mInitialBlockSize = ServerConfiguration.getBytes(PropertyKey.WORKER_FILE_BUFFER_SIZE);\n+    mInitialBlockSize = blockMeta.getBlockSize();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk2NzQ1OQ=="}, "originalCommit": {"oid": "ca405b5816b4bd444c71a8a96a790a619484cf64"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "561ca8076e0a4b1735a2fa502ca54857dc992ab2", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/561ca8076e0a4b1735a2fa502ca54857dc992ab2", "committedDate": "2020-11-20T20:05:53Z", "message": "Merge branch 'master' of github.com:Alluxio/alluxio into smallfix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NTQ3MTQ0", "url": "https://github.com/Alluxio/alluxio/pull/11743#pullrequestreview-538547144", "createdAt": "2020-11-25T14:25:19Z", "commit": {"oid": "561ca8076e0a4b1735a2fa502ca54857dc992ab2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4271, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}