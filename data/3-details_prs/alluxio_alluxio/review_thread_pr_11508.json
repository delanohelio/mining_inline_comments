{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2ODgwNjcy", "number": 11508, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzowOTo0OVrOECPxXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzowOTo0OVrOECPxXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzkxMDA3OnYy", "diffSide": "RIGHT", "path": "stress/shell/src/main/java/alluxio/stress/cli/StressMasterBench.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzowOTo0OVrOGelgaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxODozNzo0MVrOGeolyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcyNDk2OA==", "bodyText": "Could this return -1, and will that cause a problem?", "url": "https://github.com/Alluxio/alluxio/pull/11508#discussion_r434724968", "createdAt": "2020-06-03T17:09:49Z", "author": {"login": "gpang"}, "path": "stress/shell/src/main/java/alluxio/stress/cli/StressMasterBench.java", "diffHunk": "@@ -291,6 +293,15 @@ public synchronized void addAdditionalResult() throws IOException {\n     public synchronized MasterBenchTaskResult getResult() {\n       return mResult;\n     }\n+\n+    private String getMethodDescription(String type, String methodName) {\n+      if (type.contains(\"RPC\")) {\n+        final int classNameDivider = methodName.lastIndexOf(\".\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "310c231c0e9fa669f522aa6d9162dcbfda5ac62b"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc3NDk1Mw==", "bodyText": "Yes it could return -1. No it wouldn't cause a problem because s.substring(0) returns s.", "url": "https://github.com/Alluxio/alluxio/pull/11508#discussion_r434774953", "createdAt": "2020-06-03T18:36:32Z", "author": {"login": "bradyoo"}, "path": "stress/shell/src/main/java/alluxio/stress/cli/StressMasterBench.java", "diffHunk": "@@ -291,6 +293,15 @@ public synchronized void addAdditionalResult() throws IOException {\n     public synchronized MasterBenchTaskResult getResult() {\n       return mResult;\n     }\n+\n+    private String getMethodDescription(String type, String methodName) {\n+      if (type.contains(\"RPC\")) {\n+        final int classNameDivider = methodName.lastIndexOf(\".\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcyNDk2OA=="}, "originalCommit": {"oid": "310c231c0e9fa669f522aa6d9162dcbfda5ac62b"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc3NTQ5OA==", "bodyText": "Conversely, returning the last index is also not a problem because\ns.substring(s.length) returns an empty string.", "url": "https://github.com/Alluxio/alluxio/pull/11508#discussion_r434775498", "createdAt": "2020-06-03T18:37:41Z", "author": {"login": "bradyoo"}, "path": "stress/shell/src/main/java/alluxio/stress/cli/StressMasterBench.java", "diffHunk": "@@ -291,6 +293,15 @@ public synchronized void addAdditionalResult() throws IOException {\n     public synchronized MasterBenchTaskResult getResult() {\n       return mResult;\n     }\n+\n+    private String getMethodDescription(String type, String methodName) {\n+      if (type.contains(\"RPC\")) {\n+        final int classNameDivider = methodName.lastIndexOf(\".\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcyNDk2OA=="}, "originalCommit": {"oid": "310c231c0e9fa669f522aa6d9162dcbfda5ac62b"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1582, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}