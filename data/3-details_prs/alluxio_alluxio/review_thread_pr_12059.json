{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2ODY1Njc2", "number": 12059, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMDowMjowMVrOEfDzuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMDowMjowMVrOEfDzuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMDAzNzA0OnYy", "diffSide": "RIGHT", "path": "core/common/src/main/java/alluxio/util/JvmPauseMonitor.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMDowMjowMVrOHLGNqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxODo0MDozNFrOHOpgMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5ODE4NA==", "bodyText": "I think this should be fine, but maybe we should also add synchronized on both start and stop to keep the starting/stopping thread-safe.\nHow do tests call start and stop in different threads?", "url": "https://github.com/Alluxio/alluxio/pull/12059#discussion_r481398184", "createdAt": "2020-09-01T20:02:01Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/util/JvmPauseMonitor.java", "diffHunk": "@@ -88,8 +88,9 @@ public void start() {\n    * Stops jvm monitor.\n    */\n   public void stop() {\n-    Preconditions.checkState(mJvmMonitorThread != null,\n-        \"JVM monitor thread does not start\");\n+    if (mJvmMonitorThread == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f598e561c599b8eb33223148e22d5eacdbe7effd"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ1NzAxMQ==", "bodyText": "I honestly am not sure if its really the result of calling it in different threads or if it's a result of some bad code. But my main thought around this was that we really don't need assert statements that block you from doing better cleanup when we are tearing things down.", "url": "https://github.com/Alluxio/alluxio/pull/12059#discussion_r481457011", "createdAt": "2020-09-01T22:02:22Z", "author": {"login": "bradyoo"}, "path": "core/common/src/main/java/alluxio/util/JvmPauseMonitor.java", "diffHunk": "@@ -88,8 +88,9 @@ public void start() {\n    * Stops jvm monitor.\n    */\n   public void stop() {\n-    Preconditions.checkState(mJvmMonitorThread != null,\n-        \"JVM monitor thread does not start\");\n+    if (mJvmMonitorThread == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5ODE4NA=="}, "originalCommit": {"oid": "f598e561c599b8eb33223148e22d5eacdbe7effd"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA0NjcwNg==", "bodyText": "If start and stop are not synchronized, couldn't there be a situation where the clean up is not performed at all? It would be the same situation when the assert failed.", "url": "https://github.com/Alluxio/alluxio/pull/12059#discussion_r485046706", "createdAt": "2020-09-08T16:24:15Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/util/JvmPauseMonitor.java", "diffHunk": "@@ -88,8 +88,9 @@ public void start() {\n    * Stops jvm monitor.\n    */\n   public void stop() {\n-    Preconditions.checkState(mJvmMonitorThread != null,\n-        \"JVM monitor thread does not start\");\n+    if (mJvmMonitorThread == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5ODE4NA=="}, "originalCommit": {"oid": "f598e561c599b8eb33223148e22d5eacdbe7effd"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyMjA5OA==", "bodyText": "Well, that's one way this could fail. But if you look at this alternatively, if you crash here, all you are saying is that I'm going to stop this process without doing rest of the cleanup. When the whole point of stopping this is to stop the process.", "url": "https://github.com/Alluxio/alluxio/pull/12059#discussion_r485122098", "createdAt": "2020-09-08T18:40:34Z", "author": {"login": "bradyoo"}, "path": "core/common/src/main/java/alluxio/util/JvmPauseMonitor.java", "diffHunk": "@@ -88,8 +88,9 @@ public void start() {\n    * Stops jvm monitor.\n    */\n   public void stop() {\n-    Preconditions.checkState(mJvmMonitorThread != null,\n-        \"JVM monitor thread does not start\");\n+    if (mJvmMonitorThread == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5ODE4NA=="}, "originalCommit": {"oid": "f598e561c599b8eb33223148e22d5eacdbe7effd"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1245, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}