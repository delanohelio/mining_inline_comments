{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyODk4MTA1", "number": 10873, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMzo1Mzo0OVrODerjVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMzo1Mzo0OVrODerjVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDk3NDI5OnYy", "diffSide": "RIGHT", "path": "tests/src/test/java/alluxio/server/ft/journal/TableMasterJournalIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMzo1Mzo0OVrOFn874w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMjoyMjo0M1rOFobWEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzNzE1NQ==", "bodyText": "is there a way we can avoid this rule? This doesn't interact well with LocalAlluxioClusterResource especially when LocalAlluxioClusterResource is a class rule (which is ideal, so it only creates the cluster once per class)", "url": "https://github.com/Alluxio/alluxio/pull/10873#discussion_r377437155", "createdAt": "2020-02-11T03:53:49Z", "author": {"login": "gpang"}, "path": "tests/src/test/java/alluxio/server/ft/journal/TableMasterJournalIntegrationTest.java", "diffHunk": "@@ -45,18 +56,17 @@\n \n   private static final String DB_NAME = TestDatabase.TEST_UDB_NAME;\n \n-  @Before\n-  public void before() throws Exception {\n-    TestDatabase.genTable(1, 2);\n-  }\n+  @ClassRule\n+  public static ManuallyScheduleHeartbeat sManuallySchedule = new ManuallyScheduleHeartbeat(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5c56bc516b743fb620972865bbfa46d8450c367"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY0MjE3Ng==", "bodyText": "Is there a way we can make the LocalAlluxioClusterResource a ClassRule, and not per test?", "url": "https://github.com/Alluxio/alluxio/pull/10873#discussion_r377642176", "createdAt": "2020-02-11T13:45:35Z", "author": {"login": "gpang"}, "path": "tests/src/test/java/alluxio/server/ft/journal/TableMasterJournalIntegrationTest.java", "diffHunk": "@@ -45,18 +56,17 @@\n \n   private static final String DB_NAME = TestDatabase.TEST_UDB_NAME;\n \n-  @Before\n-  public void before() throws Exception {\n-    TestDatabase.genTable(1, 2);\n-  }\n+  @ClassRule\n+  public static ManuallyScheduleHeartbeat sManuallySchedule = new ManuallyScheduleHeartbeat(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzNzE1NQ=="}, "originalCommit": {"oid": "e5c56bc516b743fb620972865bbfa46d8450c367"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMTg0Nw==", "bodyText": "If we make it a ClassRule, does that mean the state will be kept between each test? that way, tests will interfere with each other right?", "url": "https://github.com/Alluxio/alluxio/pull/10873#discussion_r377901847", "createdAt": "2020-02-11T21:13:57Z", "author": {"login": "yuzhu"}, "path": "tests/src/test/java/alluxio/server/ft/journal/TableMasterJournalIntegrationTest.java", "diffHunk": "@@ -45,18 +56,17 @@\n \n   private static final String DB_NAME = TestDatabase.TEST_UDB_NAME;\n \n-  @Before\n-  public void before() throws Exception {\n-    TestDatabase.genTable(1, 2);\n-  }\n+  @ClassRule\n+  public static ManuallyScheduleHeartbeat sManuallySchedule = new ManuallyScheduleHeartbeat(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzNzE1NQ=="}, "originalCommit": {"oid": "e5c56bc516b743fb620972865bbfa46d8450c367"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwNjU5MA==", "bodyText": "Yes, so we just have to clear the necessary state in Alluxio. The reason I want to go in that direction is that there is a large startup cost to creating a cluster.", "url": "https://github.com/Alluxio/alluxio/pull/10873#discussion_r377906590", "createdAt": "2020-02-11T21:22:26Z", "author": {"login": "gpang"}, "path": "tests/src/test/java/alluxio/server/ft/journal/TableMasterJournalIntegrationTest.java", "diffHunk": "@@ -45,18 +56,17 @@\n \n   private static final String DB_NAME = TestDatabase.TEST_UDB_NAME;\n \n-  @Before\n-  public void before() throws Exception {\n-    TestDatabase.genTable(1, 2);\n-  }\n+  @ClassRule\n+  public static ManuallyScheduleHeartbeat sManuallySchedule = new ManuallyScheduleHeartbeat(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzNzE1NQ=="}, "originalCommit": {"oid": "e5c56bc516b743fb620972865bbfa46d8450c367"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkzNTM3OQ==", "bodyText": "what is the alternative to ManuallyScheduleHeartbeat? i need to manually trigger a heartbeat in a test.\nChanged it to use classrule.", "url": "https://github.com/Alluxio/alluxio/pull/10873#discussion_r377935379", "createdAt": "2020-02-11T22:22:43Z", "author": {"login": "yuzhu"}, "path": "tests/src/test/java/alluxio/server/ft/journal/TableMasterJournalIntegrationTest.java", "diffHunk": "@@ -45,18 +56,17 @@\n \n   private static final String DB_NAME = TestDatabase.TEST_UDB_NAME;\n \n-  @Before\n-  public void before() throws Exception {\n-    TestDatabase.genTable(1, 2);\n-  }\n+  @ClassRule\n+  public static ManuallyScheduleHeartbeat sManuallySchedule = new ManuallyScheduleHeartbeat(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzNzE1NQ=="}, "originalCommit": {"oid": "e5c56bc516b743fb620972865bbfa46d8450c367"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2009, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}