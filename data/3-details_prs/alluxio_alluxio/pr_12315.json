{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzOTI1MTYw", "number": 12315, "title": "Add client-side API to iterate on results of listStatus", "bodyText": "This PR aims to optimize client-side RPC handling for the case where master returns a large list of URIStatus.\nWith the new client-side api added in this patch, client can proceed with partially transmitted listStatus results, without  creating extra list and wait for all results to complete. This can reduce the memory pressure and latency when list a large directory.\nOther implications\n\navoid unnecessary sort in fs ls which further reduce memory and latency.\nalso update distributedLoad and count cli to avoid unnecessary recursion and able to proceed with partially returned status", "createdAt": "2020-10-15T08:30:50Z", "url": "https://github.com/Alluxio/alluxio/pull/12315", "merged": true, "mergeCommit": {"oid": "e5d4ea2e59993a9c47dcb08ce7aa0c95b948af84"}, "closed": true, "closedAt": "2020-10-21T20:30:14Z", "author": {"login": "apc999"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS21B0AFqTUwOTY5NTMyMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUy3YgABqjM5MDU2OTM1ODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5Njk1MzIz", "url": "https://github.com/Alluxio/alluxio/pull/12315#pullrequestreview-509695323", "createdAt": "2020-10-15T19:20:26Z", "commit": {"oid": "40eee9f76dc9d6bd69d453e63f4fd19a33c0695f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToyMDoyNlrOHiWkIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToyMDoyNlrOHiWkIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc4MzMyOA==", "bodyText": "Does listStatus just return the entire array/list? How does this stream anything when the result is already just a list/array?", "url": "https://github.com/Alluxio/alluxio/pull/12315#discussion_r505783328", "createdAt": "2020-10-15T19:20:26Z", "author": {"login": "gpang"}, "path": "core/client/fs/src/main/java/alluxio/client/file/RetryHandlingFileSystemMasterClient.java", "diffHunk": "@@ -234,6 +238,21 @@ public long getNewBlockIdForFile(final AlluxioURI path)\n     }, RPC_LOG, \"ListStatus\", \"path=%s,options=%s\", path, options);\n   }\n \n+  @Override\n+  public Stream<URIStatus> listStatusInStream(\n+      final AlluxioURI path, final ListStatusPOptions options)\n+      throws AlluxioStatusException {\n+    return retryRPC(() ->\n+      StreamSupport.stream(Spliterators.spliteratorUnknownSize(\n+          mClient.listStatus(ListStatusPRequest.newBuilder().setPath(getTransportPath(path))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40eee9f76dc9d6bd69d453e63f4fd19a33c0695f"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40eee9f76dc9d6bd69d453e63f4fd19a33c0695f", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/40eee9f76dc9d6bd69d453e63f4fd19a33c0695f", "committedDate": "2020-10-15T08:27:28Z", "message": "Return stream rather than list of URIStatus"}, "afterCommit": {"oid": "d9b2a3e6b05f0b6cbd77d68ec2c4ac334c85ad72", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/d9b2a3e6b05f0b6cbd77d68ec2c4ac334c85ad72", "committedDate": "2020-10-15T19:39:42Z", "message": "Return stream rather than list of URIStatus"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODM1MzE3", "url": "https://github.com/Alluxio/alluxio/pull/12315#pullrequestreview-509835317", "createdAt": "2020-10-15T21:52:47Z", "commit": {"oid": "d9b2a3e6b05f0b6cbd77d68ec2c4ac334c85ad72"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMTo1Mjo0OFrOHic1pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjowOToxM1rOHidOrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4NjExNg==", "bodyText": "I think these comments are stale, mentioning lists?\nAlso, is this one now preferred? Maybe we should comment on the differences/tradeoffs between this one and the standard listStatus", "url": "https://github.com/Alluxio/alluxio/pull/12315#discussion_r505886116", "createdAt": "2020-10-15T21:52:48Z", "author": {"login": "gpang"}, "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystem.java", "diffHunk": "@@ -362,6 +363,35 @@ URIStatus getStatus(AlluxioURI path, GetStatusPOptions options)\n   List<URIStatus> listStatus(AlluxioURI path, ListStatusPOptions options)\n       throws FileDoesNotExistException, IOException, AlluxioException;\n \n+  /**\n+   * If the path is a directory, returns the {@link URIStatus} of all the direct entries in it.\n+   * Otherwise returns a list with a single {@link URIStatus} element for the file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9b2a3e6b05f0b6cbd77d68ec2c4ac334c85ad72"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4NjE2OA==", "bodyText": "I think these comments are stale, mentioning lists?", "url": "https://github.com/Alluxio/alluxio/pull/12315#discussion_r505886168", "createdAt": "2020-10-15T21:52:54Z", "author": {"login": "gpang"}, "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystem.java", "diffHunk": "@@ -362,6 +363,35 @@ URIStatus getStatus(AlluxioURI path, GetStatusPOptions options)\n   List<URIStatus> listStatus(AlluxioURI path, ListStatusPOptions options)\n       throws FileDoesNotExistException, IOException, AlluxioException;\n \n+  /**\n+   * If the path is a directory, returns the {@link URIStatus} of all the direct entries in it.\n+   * Otherwise returns a list with a single {@link URIStatus} element for the file.\n+   *\n+   * @param path the path to list information about\n+   * @return a list of {@link URIStatus}s containing information about the files and directories\n+   *         which are children of the given path\n+   * @throws FileDoesNotExistException if the given path does not exist\n+   */\n+  default Stream<URIStatus> listStatusInStream(AlluxioURI path)\n+      throws FileDoesNotExistException, IOException, AlluxioException {\n+    return listStatus(path, ListStatusPOptions.getDefaultInstance()).stream();\n+  }\n+\n+  /**\n+   * If the path is a directory, returns the {@link URIStatus} of all the direct entries in it.\n+   * Otherwise returns a list with a single {@link URIStatus} element for the file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9b2a3e6b05f0b6cbd77d68ec2c4ac334c85ad72"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4ODEwNA==", "bodyText": "I'm not sure what is best practice, but should we be returning a Iterator, Iterable or Stream?\nI'm also not sure about the name. Maybe some alternatives are listStatusStream or listStatusAsStream?", "url": "https://github.com/Alluxio/alluxio/pull/12315#discussion_r505888104", "createdAt": "2020-10-15T21:57:47Z", "author": {"login": "gpang"}, "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemMasterClient.java", "diffHunk": "@@ -154,6 +155,15 @@ void createDirectory(AlluxioURI path, CreateDirectoryPOptions options)\n   List<URIStatus> listStatus(AlluxioURI path, ListStatusPOptions options)\n       throws AlluxioStatusException;\n \n+  /**\n+   * @param path the path to list\n+   * @param options the listStatus options\n+   * @return the stream of file information for the given path\n+   * @throws NotFoundException if the path does not exist\n+   */\n+  Stream<URIStatus> listStatusInStream(AlluxioURI path, ListStatusPOptions options)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9b2a3e6b05f0b6cbd77d68ec2c4ac334c85ad72"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg4OTAwNw==", "bodyText": "ugh, this was ugly...", "url": "https://github.com/Alluxio/alluxio/pull/12315#discussion_r505889007", "createdAt": "2020-10-15T22:00:05Z", "author": {"login": "gpang"}, "path": "shell/src/main/java/alluxio/cli/fs/command/CountCommand.java", "diffHunk": "@@ -88,30 +102,6 @@ private void printInfo(boolean readable, long fileCount, long folderCount, long\n     System.out.format(format, fileCount, folderCount, formatFolderSize);\n   }\n \n-  private long[] countHelper(AlluxioURI path) throws AlluxioException, IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9b2a3e6b05f0b6cbd77d68ec2c4ac334c85ad72"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg5MjI1OQ==", "bodyText": "There is a tradeoff for this recursive listing. We could be locking more of the tree for longer with the recursive listing (especially if the sync interval was triggered)", "url": "https://github.com/Alluxio/alluxio/pull/12315#discussion_r505892259", "createdAt": "2020-10-15T22:08:31Z", "author": {"login": "gpang"}, "path": "shell/src/main/java/alluxio/cli/fs/command/DistributedLoadCommand.java", "diffHunk": "@@ -268,15 +269,13 @@ private void load(AlluxioURI filePath, int replication)\n       throws IOException, AlluxioException {\n     URIStatus status = mFileSystem.getStatus(filePath);\n     if (status.isFolder()) {\n-      List<URIStatus> statuses = mFileSystem.listStatus(filePath);\n-      for (URIStatus uriStatus : statuses) {\n-        if (uriStatus.isFolder()) {\n-          AlluxioURI subPath = new AlluxioURI(uriStatus.getPath());\n-          load(subPath, replication);\n-        } else {\n-          addJob(uriStatus, replication);\n-        }\n-      }\n+      ListStatusPOptions options = ListStatusPOptions.newBuilder().setRecursive(true).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9b2a3e6b05f0b6cbd77d68ec2c4ac334c85ad72"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg5MjUyNQ==", "bodyText": "spelling timestampFunction", "url": "https://github.com/Alluxio/alluxio/pull/12315#discussion_r505892525", "createdAt": "2020-10-15T22:09:13Z", "author": {"login": "gpang"}, "path": "shell/src/main/java/alluxio/cli/fs/command/LsCommand.java", "diffHunk": "@@ -259,12 +254,14 @@ public Options getOptions() {\n   private void ls(AlluxioURI path, boolean recursive, boolean forceLoadMetadata, boolean dirAsFile,\n       boolean hSize, boolean pinnedOnly, String sortField, boolean reverse, String timestampOption)\n       throws AlluxioException, IOException {\n+    Function<URIStatus, Long> timestampFuncion = TIMESTAMP_FIELDS.get(timestampOption);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9b2a3e6b05f0b6cbd77d68ec2c4ac334c85ad72"}, "originalPosition": 33}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9b2a3e6b05f0b6cbd77d68ec2c4ac334c85ad72", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/d9b2a3e6b05f0b6cbd77d68ec2c4ac334c85ad72", "committedDate": "2020-10-15T19:39:42Z", "message": "Return stream rather than list of URIStatus"}, "afterCommit": {"oid": "7b314a23b9f325eb01b0d811f025b64ba35dfe6e", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/7b314a23b9f325eb01b0d811f025b64ba35dfe6e", "committedDate": "2020-10-16T01:18:47Z", "message": "Return stream rather than list of URIStatus"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b314a23b9f325eb01b0d811f025b64ba35dfe6e", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/7b314a23b9f325eb01b0d811f025b64ba35dfe6e", "committedDate": "2020-10-16T01:18:47Z", "message": "Return stream rather than list of URIStatus"}, "afterCommit": {"oid": "3f25c7ce5af4d903f2249718afc641aea30aa20c", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/3f25c7ce5af4d903f2249718afc641aea30aa20c", "committedDate": "2020-10-16T01:21:26Z", "message": "Return stream rather than list of URIStatus"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f25c7ce5af4d903f2249718afc641aea30aa20c", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/3f25c7ce5af4d903f2249718afc641aea30aa20c", "committedDate": "2020-10-16T01:21:26Z", "message": "Return stream rather than list of URIStatus"}, "afterCommit": {"oid": "5f2fc684d048f7b9646670ef4fe3f3db1fa3d7b7", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/5f2fc684d048f7b9646670ef4fe3f3db1fa3d7b7", "committedDate": "2020-10-16T01:22:05Z", "message": "Return stream rather than list of URIStatus"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f2fc684d048f7b9646670ef4fe3f3db1fa3d7b7", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/5f2fc684d048f7b9646670ef4fe3f3db1fa3d7b7", "committedDate": "2020-10-16T01:22:05Z", "message": "Return stream rather than list of URIStatus"}, "afterCommit": {"oid": "8dacb7ded77fe23ff385609ccf41f3dc945d1f62", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/8dacb7ded77fe23ff385609ccf41f3dc945d1f62", "committedDate": "2020-10-16T04:25:12Z", "message": "Return stream rather than list of URIStatus"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8dacb7ded77fe23ff385609ccf41f3dc945d1f62", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/8dacb7ded77fe23ff385609ccf41f3dc945d1f62", "committedDate": "2020-10-16T04:25:12Z", "message": "Return stream rather than list of URIStatus"}, "afterCommit": {"oid": "ef9969a4303e4a9c0fc2094cd24371c4f476f229", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/ef9969a4303e4a9c0fc2094cd24371c4f476f229", "committedDate": "2020-10-16T05:53:55Z", "message": "Return stream rather than list of URIStatus"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNjg3NzE5", "url": "https://github.com/Alluxio/alluxio/pull/12315#pullrequestreview-510687719", "createdAt": "2020-10-16T17:54:45Z", "commit": {"oid": "ef9969a4303e4a9c0fc2094cd24371c4f476f229"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzo1NDo0NVrOHjKl3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNzo1NDo0NVrOHjKl3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYzNTc0Mw==", "bodyText": "Do we want this to be \"ListStatusAsStream\"?", "url": "https://github.com/Alluxio/alluxio/pull/12315#discussion_r506635743", "createdAt": "2020-10-16T17:54:45Z", "author": {"login": "gpang"}, "path": "core/client/fs/src/main/java/alluxio/client/file/RetryHandlingFileSystemMasterClient.java", "diffHunk": "@@ -234,6 +238,23 @@ public long getNewBlockIdForFile(final AlluxioURI path)\n     }, RPC_LOG, \"ListStatus\", \"path=%s,options=%s\", path, options);\n   }\n \n+  @Override\n+  public Stream<URIStatus> listStatusAsStream(\n+      final AlluxioURI path, final ListStatusPOptions options)\n+      throws AlluxioStatusException {\n+    return retryRPC(\n+        () -> StreamSupport\n+            .stream(\n+                Spliterators.spliteratorUnknownSize(\n+                    mClient.listStatus(ListStatusPRequest.newBuilder()\n+                        .setPath(getTransportPath(path)).setOptions(options).build()),\n+                    Spliterator.ORDERED),\n+                false)\n+            .flatMap(pListStatusResponse -> pListStatusResponse.getFileInfosList().stream()\n+                .map(pFileInfo -> new URIStatus(GrpcUtils.fromProto(pFileInfo)))),\n+        RPC_LOG, \"ListStatus\", \"path=%s,options=%s\", path, options);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9969a4303e4a9c0fc2094cd24371c4f476f229"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b6f4bd147413b3254771df1c1c66e53bcc76abd6", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/b6f4bd147413b3254771df1c1c66e53bcc76abd6", "committedDate": "2020-10-20T19:51:48Z", "message": "Address comments"}, "afterCommit": {"oid": "373c4cd8b7d49acd3f9f25c904f7b051e77d39df", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/373c4cd8b7d49acd3f9f25c904f7b051e77d39df", "committedDate": "2020-10-20T21:11:13Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MTA3MTAy", "url": "https://github.com/Alluxio/alluxio/pull/12315#pullrequestreview-514107102", "createdAt": "2020-10-21T19:23:53Z", "commit": {"oid": "373c4cd8b7d49acd3f9f25c904f7b051e77d39df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "915a570b575be8bd104a5fec4644133156c7810e", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/915a570b575be8bd104a5fec4644133156c7810e", "committedDate": "2020-10-21T19:45:27Z", "message": "Add client-side API to iterate on results of listStatus"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "373c4cd8b7d49acd3f9f25c904f7b051e77d39df", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/373c4cd8b7d49acd3f9f25c904f7b051e77d39df", "committedDate": "2020-10-20T21:11:13Z", "message": "Address comments"}, "afterCommit": {"oid": "915a570b575be8bd104a5fec4644133156c7810e", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/915a570b575be8bd104a5fec4644133156c7810e", "committedDate": "2020-10-21T19:45:27Z", "message": "Add client-side API to iterate on results of listStatus"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3556, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}