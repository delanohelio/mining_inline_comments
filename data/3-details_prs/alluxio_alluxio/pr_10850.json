{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNjQ2NTgx", "number": 10850, "title": "Increment cluster counter and delete orphaned meter in MetricsStore", "bodyText": "Change to store the cluster counter value directly instead of remembering each counter reported by client or worker.\nThis is helpful: (1) to reduce the space needed to store reported metrics (2) because counter value is historical summarized value. There is no need to delete the orphaned counter value.\nFor all other metrics, we keep the original way: store all the original reported metrics and update the cluster metric value periodically.\nBut to make it more accurate, a delete orphaned metrics logic is added. Metrics reported by worker/client which hasn't reported for a long period of time (configurable) will be deleted. This can help us to get more accurate throughput value. worker/client report throughput as the last 1 minute rate which does not make sense if it's orphaned.", "createdAt": "2020-02-06T00:08:20Z", "url": "https://github.com/Alluxio/alluxio/pull/10850", "merged": true, "mergeCommit": {"oid": "32efede40dcd9d932b3d017cd06e8cea1235b0f2"}, "closed": true, "closedAt": "2020-02-07T22:03:37Z", "author": {"login": "LuQQiu"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBa7TngH2gAyMzcxNjQ2NTgxOjQyMTA1ZWVmYjUzZjQxNDY1NDkzNDMwMDU4YzBkNTA2Nzk0YTNmMTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcCGiVmAFqTM1NTQ1ODQ2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "42105eefb53f41465493430058c0d506794a3f12", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/42105eefb53f41465493430058c0d506794a3f12", "committedDate": "2020-02-05T19:02:19Z", "message": "Remove orphaned metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2088976d9e1b563d81edb12182521ef821d92705", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/2088976d9e1b563d81edb12182521ef821d92705", "committedDate": "2020-02-05T23:59:39Z", "message": "Remember cluster counter instead of calculate them periodically"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "262cc2c9022a8b84cdd9137728e8f39c214c35d2", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/262cc2c9022a8b84cdd9137728e8f39c214c35d2", "committedDate": "2020-02-06T00:02:36Z", "message": "small doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e43682993d1ca17bea006a4546ef2e9804723876", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/e43682993d1ca17bea006a4546ef2e9804723876", "committedDate": "2020-02-06T00:23:45Z", "message": "Fix metric test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d09c78d20aaeba188fe7d94a4774a63bf542402d", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/d09c78d20aaeba188fe7d94a4774a63bf542402d", "committedDate": "2020-02-06T00:54:14Z", "message": "small fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c93b469049ee39fb2c0b644cd072dcd4221bd84", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/3c93b469049ee39fb2c0b644cd072dcd4221bd84", "committedDate": "2020-02-06T01:20:21Z", "message": "Fix MetricsStoreTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbc26578a296f71277a7cc5666126191e0ac06bf", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/bbc26578a296f71277a7cc5666126191e0ac06bf", "committedDate": "2020-02-06T02:24:53Z", "message": "Fix MetricsMasterTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a907df8db59d0769dd7ed7fec5026777660766c4", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/a907df8db59d0769dd7ed7fec5026777660766c4", "committedDate": "2020-02-06T05:36:25Z", "message": "Fix MetricsCommandIntegrationTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09efb34837f19c8420baf19cabcec4473a0a95fb", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/09efb34837f19c8420baf19cabcec4473a0a95fb", "committedDate": "2020-02-06T18:15:41Z", "message": "Fix metric type and reduce web ui traverse"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "890b46f20e5a077e3d8ab42fd17dc0ee3231680f", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/890b46f20e5a077e3d8ab42fd17dc0ee3231680f", "committedDate": "2020-02-06T18:35:45Z", "message": "small fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjkyODk1", "url": "https://github.com/Alluxio/alluxio/pull/10850#pullrequestreview-354692895", "createdAt": "2020-02-06T18:57:41Z", "commit": {"oid": "890b46f20e5a077e3d8ab42fd17dc0ee3231680f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODo1Nzo0MVrOFmmgIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODo1Nzo0MVrOFmmgIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMTAyNA==", "bodyText": "Fix a bug that the new metrics name is <Instance_type>.<MetricName>.Tags.<InstanceHostname> instead of <Instance_type>.<MetricName>.<InstanceHostname>.Tags", "url": "https://github.com/Alluxio/alluxio/pull/10850#discussion_r376021024", "createdAt": "2020-02-06T18:57:41Z", "author": {"login": "LuQQiu"}, "path": "core/common/src/main/java/alluxio/metrics/Metric.java", "diffHunk": "@@ -300,32 +319,31 @@ public static String getMetricNameWithUserTag(String metricName, String userName\n   public static Metric from(String fullName, double value, MetricType metricType) {\n     String[] pieces = fullName.split(\"\\\\.\");\n     Preconditions.checkArgument(pieces.length > 1, \"Incorrect metrics name: %s.\", fullName);\n-\n+    int len = pieces.length;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "890b46f20e5a077e3d8ab42fd17dc0ee3231680f"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjkzNzI2", "url": "https://github.com/Alluxio/alluxio/pull/10850#pullrequestreview-354693726", "createdAt": "2020-02-06T18:58:51Z", "commit": {"oid": "890b46f20e5a077e3d8ab42fd17dc0ee3231680f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODo1ODo1MVrOFmmigA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODo1ODo1MVrOFmmigA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMTYzMg==", "bodyText": "Every MetricRegistry.getGauges and getCounters() will do a traverse of all metrics, make a copy and return. So it will be better to reduce the call to these two methods.", "url": "https://github.com/Alluxio/alluxio/pull/10850#discussion_r376021632", "createdAt": "2020-02-06T18:58:51Z", "author": {"login": "LuQQiu"}, "path": "core/server/master/src/main/java/alluxio/master/meta/AlluxioMasterRestServiceHandler.java", "diffHunk": "@@ -850,20 +849,22 @@ public Response getWebUIMetrics() {\n       MasterWebUIMetrics response = new MasterWebUIMetrics();\n \n       MetricRegistry mr = MetricsSystem.METRIC_REGISTRY;\n+      SortedMap<String, Gauge> gauges = mr.getGauges();\n+      SortedMap<String, Counter> counters = mr.getCounters();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "890b46f20e5a077e3d8ab42fd17dc0ee3231680f"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0Njk1NDIz", "url": "https://github.com/Alluxio/alluxio/pull/10850#pullrequestreview-354695423", "createdAt": "2020-02-06T19:01:31Z", "commit": {"oid": "890b46f20e5a077e3d8ab42fd17dc0ee3231680f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTowMTozMVrOFmmnyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTowMTozMVrOFmmnyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAyMjk4NQ==", "bodyText": "All BytesRead/Written will become actual MetricType.COUNTER. Their values will be incremented when received worker/client reported metrics.", "url": "https://github.com/Alluxio/alluxio/pull/10850#discussion_r376022985", "createdAt": "2020-02-06T19:01:31Z", "author": {"login": "LuQQiu"}, "path": "core/server/master/src/main/java/alluxio/master/metrics/DefaultMetricsMaster.java", "diffHunk": "@@ -126,65 +120,45 @@ public Object getValue() {\n     }\n   }\n \n+  private void cleanUpOrphaneMetrics() {\n+    mMetricsStore.cleanUpOrphanedMetrics();\n+  }\n+\n   private void registerAggregators() {\n     // worker metrics\n-    addAggregator(new SumInstancesAggregator(MetricKey.CLUSTER_BYTES_READ_ALLUXIO.getName(),\n-        MetricsSystem.InstanceType.WORKER, MetricKey.WORKER_BYTES_READ_ALLUXIO.getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "890b46f20e5a077e3d8ab42fd17dc0ee3231680f"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2ca6a6311ee9778caa8a8fb09d530942800b2da", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/c2ca6a6311ee9778caa8a8fb09d530942800b2da", "committedDate": "2020-02-06T19:23:26Z", "message": "small fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODExNjcx", "url": "https://github.com/Alluxio/alluxio/pull/10850#pullrequestreview-354811671", "createdAt": "2020-02-06T22:16:27Z", "commit": {"oid": "c2ca6a6311ee9778caa8a8fb09d530942800b2da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjoxNjoyN1rOFmsH4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjoxNjoyN1rOFmsH4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExMzEyMw==", "bodyText": "Do we want to be testing MetricType.COUNTER?", "url": "https://github.com/Alluxio/alluxio/pull/10850#discussion_r376113123", "createdAt": "2020-02-06T22:16:27Z", "author": {"login": "calvinjia"}, "path": "core/server/master/src/test/java/alluxio/master/metrics/MetricsMasterTest.java", "diffHunk": "@@ -102,12 +102,12 @@ public void testMultiValueAggregator() throws Exception {\n     mMetricsMaster.addAggregator(\n         new SingleTagValueAggregator(\"metric\", MetricsSystem.InstanceType.WORKER, \"metric\", \"tag\"));\n     List<Metric> metrics1 = Lists.newArrayList(\n-        Metric.from(\"worker.metric.192_1_1_1.tag:v1\", 10, MetricType.GAUGE),\n-        Metric.from(\"worker.metric.192_1_1_1.tag:v2\", 20, MetricType.GAUGE));\n+        Metric.from(\"worker.metric.tag:v1.192_1_1_1\", 10, MetricType.GAUGE),\n+        Metric.from(\"worker.metric.tag:v2.192_1_1_1\", 20, MetricType.GAUGE));\n     mMetricsMaster.workerHeartbeat(\"192_1_1_1\", metrics1);\n     List<Metric> metrics2 = Lists.newArrayList(\n-        Metric.from(\"worker.metric.192_1_1_2.tag:v1\", 1, MetricType.GAUGE),\n-        Metric.from(\"worker.metric.192_1_1_2.tag:v2\", 2, MetricType.GAUGE));\n+        Metric.from(\"worker.metric.tag:v1.192_1_1_2\", 1, MetricType.GAUGE),\n+        Metric.from(\"worker.metric.tag:v2.192_1_1_2\", 2, MetricType.GAUGE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ca6a6311ee9778caa8a8fb09d530942800b2da"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODEzOTQz", "url": "https://github.com/Alluxio/alluxio/pull/10850#pullrequestreview-354813943", "createdAt": "2020-02-06T22:20:50Z", "commit": {"oid": "c2ca6a6311ee9778caa8a8fb09d530942800b2da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjoyMDo1MVrOFmsO2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjoyMDo1MVrOFmsO2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExNDkwNg==", "bodyText": "cleanUpOrphaneMetrics -> cleanUpOrphanedMetrics", "url": "https://github.com/Alluxio/alluxio/pull/10850#discussion_r376114906", "createdAt": "2020-02-06T22:20:51Z", "author": {"login": "calvinjia"}, "path": "core/server/master/src/main/java/alluxio/master/metrics/DefaultMetricsMaster.java", "diffHunk": "@@ -126,65 +120,45 @@ public Object getValue() {\n     }\n   }\n \n+  private void cleanUpOrphaneMetrics() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ca6a6311ee9778caa8a8fb09d530942800b2da"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODE2Mjc1", "url": "https://github.com/Alluxio/alluxio/pull/10850#pullrequestreview-354816275", "createdAt": "2020-02-06T22:25:25Z", "commit": {"oid": "c2ca6a6311ee9778caa8a8fb09d530942800b2da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjoyNToyNVrOFmsVpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjoyNToyNVrOFmsVpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExNjY0NQ==", "bodyText": "OrphaneMetricsCleaner -> OrphanedMetricsCleaner", "url": "https://github.com/Alluxio/alluxio/pull/10850#discussion_r376116645", "createdAt": "2020-02-06T22:25:25Z", "author": {"login": "calvinjia"}, "path": "core/server/master/src/main/java/alluxio/master/metrics/DefaultMetricsMaster.java", "diffHunk": "@@ -254,4 +236,19 @@ public void close() {\n       // nothing to clean up\n     }\n   }\n+\n+  /**\n+   * Heartbeat executor that cleans the metrics reported by lost workers or clients.\n+   */\n+  private class OrphaneMetricsCleaner implements HeartbeatExecutor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ca6a6311ee9778caa8a8fb09d530942800b2da"}, "originalPosition": 115}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODE3NDQy", "url": "https://github.com/Alluxio/alluxio/pull/10850#pullrequestreview-354817442", "createdAt": "2020-02-06T22:27:40Z", "commit": {"oid": "c2ca6a6311ee9778caa8a8fb09d530942800b2da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjoyNzo0MVrOFmsZCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjoyNzo0MVrOFmsZCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExNzUxNQ==", "bodyText": "One line", "url": "https://github.com/Alluxio/alluxio/pull/10850#discussion_r376117515", "createdAt": "2020-02-06T22:27:41Z", "author": {"login": "calvinjia"}, "path": "core/server/master/src/main/java/alluxio/master/metrics/MetricsStore.java", "diffHunk": "@@ -114,28 +140,32 @@ public void putWorkerMetrics(String hostname, List<Metric> metrics) {\n    * @param metrics the new metrics\n    */\n   public void putClientMetrics(String hostname, String clientId, List<Metric> metrics) {\n-    if (metrics.isEmpty()) {\n+    if (metrics.isEmpty() || hostname == null) {\n       return;\n     }\n     try (LockResource r = new LockResource(mLock.readLock())) {\n-      putReportedMetrics(mClientMetrics, getFullInstanceId(hostname, clientId), metrics);\n+      mLastReportedTimeMap.put(getFullInstanceId(hostname, clientId), System.currentTimeMillis());\n+      putReportedMetrics(InstanceType.CLIENT, metrics);\n     }\n   }\n \n   /**\n-   * Update the reported metrics with the given instanceId and set of metrics received from a\n+   * Update the reported metrics received from a\n    * worker or client.\n    *\n-   * Any metrics from the given instanceId which are not reported in the new set of metrics are\n-   * removed. Metrics of {@link MetricType} COUNTER are incremented by the reported values.\n-   * Otherwise, all metrics are simply replaced.\n+   * Cluster metrics of {@link MetricType} COUNTER are directly incremented by the reported values.\n+   * All other metrics are recorded in the metrics map individually, calculated periodically,\n+   * and deleted when the report instance doesn't report for a period of time.\n    *\n-   * @param metricSet the {@link IndexedSet} of client or worker metrics to update\n-   * @param instanceId the instance id, derived from {@link #getFullInstanceId(String, String)}\n+   * @param instanceType the instance type that reports the metrics\n    * @param reportedMetrics the metrics received by the RPC handler\n    */\n-  private static void putReportedMetrics(IndexedSet<Metric> metricSet, String instanceId,\n+  private void putReportedMetrics(InstanceType instanceType,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ca6a6311ee9778caa8a8fb09d530942800b2da"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0ODE4NjM2", "url": "https://github.com/Alluxio/alluxio/pull/10850#pullrequestreview-354818636", "createdAt": "2020-02-06T22:30:06Z", "commit": {"oid": "c2ca6a6311ee9778caa8a8fb09d530942800b2da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjozMDowNlrOFmscrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjozMDowNlrOFmscrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExODQ0NA==", "bodyText": "Will this be expensive?", "url": "https://github.com/Alluxio/alluxio/pull/10850#discussion_r376118444", "createdAt": "2020-02-06T22:30:06Z", "author": {"login": "calvinjia"}, "path": "core/server/master/src/main/java/alluxio/master/metrics/MetricsStore.java", "diffHunk": "@@ -144,19 +174,50 @@ private static void putReportedMetrics(IndexedSet<Metric> metricSet, String inst\n       // If a metric is COUNTER, the value sent via RPC should be the incremental value; i.e.\n       // the amount the value has changed since the last RPC. The master should equivalently\n       // increment its value based on the received metric rather than replacing it.\n-      if (!metricSet.add(metric)) {\n-        Metric oldMetric = metricSet.getFirstByField(FULL_NAME_INDEX, metric.getFullMetricName());\n-        if (metric.getMetricType() == MetricType.COUNTER) {\n-          if (metric.getValue() != 0L) {\n-            oldMetric.addValue(metric.getValue());\n-          }\n-        } else {\n-          oldMetric.setValue(metric.getValue());\n+      if (metric.getMetricType() == MetricType.COUNTER) {\n+        String metricKeyName = metric.getInstanceType() + \".\" + metric.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ca6a6311ee9778caa8a8fb09d530942800b2da"}, "originalPosition": 138}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a5dc94b735e4ef85013d7402df1d44eee10e08f", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/6a5dc94b735e4ef85013d7402df1d44eee10e08f", "committedDate": "2020-02-06T22:54:44Z", "message": "small fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bf233e07c29e8e39ff332345a8d09c151b62821", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/2bf233e07c29e8e39ff332345a8d09c151b62821", "committedDate": "2020-02-07T00:42:10Z", "message": "Reduce string concatenation in MetricsStore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MzgxMjQ5", "url": "https://github.com/Alluxio/alluxio/pull/10850#pullrequestreview-355381249", "createdAt": "2020-02-07T19:21:40Z", "commit": {"oid": "2bf233e07c29e8e39ff332345a8d09c151b62821"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOToyMTo0MFrOFnHndQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxOToyMTo0MFrOFnHndQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU2MzU3Mw==", "bodyText": "These constants are available in WorkerMetrics?", "url": "https://github.com/Alluxio/alluxio/pull/10850#discussion_r376563573", "createdAt": "2020-02-07T19:21:40Z", "author": {"login": "calvinjia"}, "path": "core/server/master/src/main/java/alluxio/master/metrics/MetricsStore.java", "diffHunk": "@@ -44,6 +45,10 @@\n @ThreadSafe\n public class MetricsStore {\n   private static final Logger LOG = LoggerFactory.getLogger(MetricsStore.class);\n+  // The following fields are added for reducing the string processing\n+  // for MetricKey.WORKER_BYTES_READ_UFS and MetricKey.WORKER_BYTES_WRITTEN_UFS\n+  private static final String BYTES_READ_UFS = \"BytesReadPerUfs\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bf233e07c29e8e39ff332345a8d09c151b62821"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NDU4NDY1", "url": "https://github.com/Alluxio/alluxio/pull/10850#pullrequestreview-355458465", "createdAt": "2020-02-07T21:50:52Z", "commit": {"oid": "2bf233e07c29e8e39ff332345a8d09c151b62821"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3195, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}