{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwODE5MTU5", "number": 12652, "title": "Support Authorization and add ListAllMyBuckets for S3 Rest Api", "bodyText": "", "createdAt": "2020-12-16T01:04:39Z", "url": "https://github.com/Alluxio/alluxio/pull/12652", "merged": true, "mergeCommit": {"oid": "6524119411ac8d9b44ac699d59d09e9498bab8ce"}, "closed": true, "closedAt": "2020-12-17T19:14:28Z", "author": {"login": "bradyoo"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmkScSgH2gAyNTQwODE5MTU5OjYyODIzZjYzMjQ0NmUzNzg2YzgxOWZlN2VhOTIwMGYyYzRlODY1ZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnIea8gFqTU1NDkwNzQ5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "62823f632446e3786c819fe7ea9200f2c4e865e7", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/62823f632446e3786c819fe7ea9200f2c4e865e7", "committedDate": "2020-12-16T01:03:05Z", "message": "Authorization + ListAllMyBuckets for S3 Rest Api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "284658f9afc57ab6263cd5cf04e4facadec62d3b", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/284658f9afc57ab6263cd5cf04e4facadec62d3b", "committedDate": "2020-12-16T01:10:29Z", "message": "Remove log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2431b7d89180e922dafb2c7b7006c82d6828f09", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/a2431b7d89180e922dafb2c7b7006c82d6828f09", "committedDate": "2020-12-16T18:31:52Z", "message": "Fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MTA5MjU0", "url": "https://github.com/Alluxio/alluxio/pull/12652#pullrequestreview-554109254", "createdAt": "2020-12-16T21:44:31Z", "commit": {"oid": "a2431b7d89180e922dafb2c7b7006c82d6828f09"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTo0NDozMVrOIHaeKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTo0NTo1MVrOIHahOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0NDY0OA==", "bodyText": "Can we make this not private, and then add a unittest for this method?", "url": "https://github.com/Alluxio/alluxio/pull/12652#discussion_r544644648", "createdAt": "2020-12-16T21:44:31Z", "author": {"login": "gpang"}, "path": "core/server/proxy/src/main/java/alluxio/proxy/s3/S3RestServiceHandler.java", "diffHunk": "@@ -99,6 +104,56 @@ public S3RestServiceHandler(@Context ServletContext context) {\n         (FileSystem) context.getAttribute(ProxyWebServer.FILE_SYSTEM_SERVLET_RESOURCE_KEY);\n   }\n \n+  private static String getUserFromAuthorization(String authorization) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2431b7d89180e922dafb2c7b7006c82d6828f09"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0NTQzMw==", "bodyText": "What exactly is the concept of a bucket in the Alluxio proxy?", "url": "https://github.com/Alluxio/alluxio/pull/12652#discussion_r544645433", "createdAt": "2020-12-16T21:45:51Z", "author": {"login": "gpang"}, "path": "core/server/proxy/src/main/java/alluxio/proxy/s3/S3RestServiceHandler.java", "diffHunk": "@@ -99,6 +104,56 @@ public S3RestServiceHandler(@Context ServletContext context) {\n         (FileSystem) context.getAttribute(ProxyWebServer.FILE_SYSTEM_SERVLET_RESOURCE_KEY);\n   }\n \n+  private static String getUserFromAuthorization(String authorization) {\n+    if (authorization == null) {\n+      return \"\";\n+    }\n+\n+    // The valid pattern for Authorization is \"AWS <AWSAccessKeyId>:<Singature>\"\n+    int spaceIndex = authorization.indexOf(' ');\n+    if (spaceIndex == -1) {\n+      return \"\";\n+    }\n+    String stripped = authorization.substring(spaceIndex + 1);\n+\n+    int colonIndex = stripped.indexOf(':');\n+    if (colonIndex == -1) {\n+      return \"\";\n+    }\n+\n+    return stripped.substring(0, colonIndex);\n+  }\n+\n+  /**\n+   * @summary lists all buckets owned by you\n+   * @param authorization header parameter authorization\n+   * @return the response object\n+   */\n+  @GET\n+  @Path(\"/\")\n+  public Response listAllMyBuckets(@HeaderParam(\"Authorization\") String authorization) {\n+\n+    return S3RestUtils.call(\"\", new S3RestUtils.RestCallable<ListAllMyBucketsResult>() {\n+      @Override\n+      public ListAllMyBucketsResult call() throws S3Exception {\n+        String user = getUserFromAuthorization(authorization);\n+\n+        List<URIStatus> objects;\n+        try {\n+          objects = mFileSystem.listStatus(new AlluxioURI(\"/\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2431b7d89180e922dafb2c7b7006c82d6828f09"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0OTA3NDk5", "url": "https://github.com/Alluxio/alluxio/pull/12652#pullrequestreview-554907499", "createdAt": "2020-12-17T19:10:35Z", "commit": {"oid": "a2431b7d89180e922dafb2c7b7006c82d6828f09"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxOToxMDozNlrOIIEseg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxOToxMjozN1rOIIEw6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMzNjQ0Mg==", "bodyText": "Ok, as long as we don't forget to add the coverage soon.", "url": "https://github.com/Alluxio/alluxio/pull/12652#discussion_r545336442", "createdAt": "2020-12-17T19:10:36Z", "author": {"login": "gpang"}, "path": "core/server/proxy/src/main/java/alluxio/proxy/s3/S3RestServiceHandler.java", "diffHunk": "@@ -99,6 +104,56 @@ public S3RestServiceHandler(@Context ServletContext context) {\n         (FileSystem) context.getAttribute(ProxyWebServer.FILE_SYSTEM_SERVLET_RESOURCE_KEY);\n   }\n \n+  private static String getUserFromAuthorization(String authorization) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0NDY0OA=="}, "originalCommit": {"oid": "a2431b7d89180e922dafb2c7b7006c82d6828f09"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMzNzU3Ng==", "bodyText": "We may need to update the behavior in the future.\nAnother possibility is that we always have a \"root\" bucket which just holds the files under root, and the directories under root are just separate buckets.\nIn any case, I don't think there is a clear spec for this currently, so we may have to be flexible in the future.", "url": "https://github.com/Alluxio/alluxio/pull/12652#discussion_r545337576", "createdAt": "2020-12-17T19:12:37Z", "author": {"login": "gpang"}, "path": "core/server/proxy/src/main/java/alluxio/proxy/s3/S3RestServiceHandler.java", "diffHunk": "@@ -99,6 +104,56 @@ public S3RestServiceHandler(@Context ServletContext context) {\n         (FileSystem) context.getAttribute(ProxyWebServer.FILE_SYSTEM_SERVLET_RESOURCE_KEY);\n   }\n \n+  private static String getUserFromAuthorization(String authorization) {\n+    if (authorization == null) {\n+      return \"\";\n+    }\n+\n+    // The valid pattern for Authorization is \"AWS <AWSAccessKeyId>:<Singature>\"\n+    int spaceIndex = authorization.indexOf(' ');\n+    if (spaceIndex == -1) {\n+      return \"\";\n+    }\n+    String stripped = authorization.substring(spaceIndex + 1);\n+\n+    int colonIndex = stripped.indexOf(':');\n+    if (colonIndex == -1) {\n+      return \"\";\n+    }\n+\n+    return stripped.substring(0, colonIndex);\n+  }\n+\n+  /**\n+   * @summary lists all buckets owned by you\n+   * @param authorization header parameter authorization\n+   * @return the response object\n+   */\n+  @GET\n+  @Path(\"/\")\n+  public Response listAllMyBuckets(@HeaderParam(\"Authorization\") String authorization) {\n+\n+    return S3RestUtils.call(\"\", new S3RestUtils.RestCallable<ListAllMyBucketsResult>() {\n+      @Override\n+      public ListAllMyBucketsResult call() throws S3Exception {\n+        String user = getUserFromAuthorization(authorization);\n+\n+        List<URIStatus> objects;\n+        try {\n+          objects = mFileSystem.listStatus(new AlluxioURI(\"/\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY0NTQzMw=="}, "originalCommit": {"oid": "a2431b7d89180e922dafb2c7b7006c82d6828f09"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3356, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}