{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NjA3MzY1", "number": 10777, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToxOTowMlrODZ3obw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMzozNjowMVrODbaLjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDUyNDYzOnYy", "diffSide": "RIGHT", "path": "job/server/src/main/java/alluxio/worker/JobWorker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToxOTowMlrOFgf80A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjoyMToyOVrOFgtEFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyMjIyNA==", "bodyText": "is the thread rename intentional?", "url": "https://github.com/Alluxio/alluxio/pull/10777#discussion_r369622224", "createdAt": "2020-01-22T15:19:02Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/worker/JobWorker.java", "diffHunk": "@@ -69,8 +68,7 @@\n    * @param ufsManager the ufs manager\n    */\n   JobWorker(FileSystem filesystem, FileSystemContext fsContext, UfsManager ufsManager) {\n-    super(\n-        Executors.newFixedThreadPool(1, ThreadFactoryUtils.build(\"job-worker-heartbeat-%d\", true)));\n+    super(ExecutorServiceFactories.fixedThreadPool(\"job-worker-executor\", 1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e16554dd8acb6fb6f40fd287efcfbe85a641014"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgzNzA3OQ==", "bodyText": "Yes it's actually an worker executor thread. Various heartbeats are running on them.", "url": "https://github.com/Alluxio/alluxio/pull/10777#discussion_r369837079", "createdAt": "2020-01-22T22:21:29Z", "author": {"login": "ggezer"}, "path": "job/server/src/main/java/alluxio/worker/JobWorker.java", "diffHunk": "@@ -69,8 +68,7 @@\n    * @param ufsManager the ufs manager\n    */\n   JobWorker(FileSystem filesystem, FileSystemContext fsContext, UfsManager ufsManager) {\n-    super(\n-        Executors.newFixedThreadPool(1, ThreadFactoryUtils.build(\"job-worker-heartbeat-%d\", true)));\n+    super(ExecutorServiceFactories.fixedThreadPool(\"job-worker-executor\", 1));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyMjIyNA=="}, "originalCommit": {"oid": "6e16554dd8acb6fb6f40fd287efcfbe85a641014"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDU0MTM0OnYy", "diffSide": "RIGHT", "path": "core/server/worker/src/main/java/alluxio/worker/block/DefaultBlockWorker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToyMzoxOFrOFggHPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjoyMjoxNlrOFgtFbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyNDg5Mg==", "bodyText": "is this the heartbeat thread or something else?", "url": "https://github.com/Alluxio/alluxio/pull/10777#discussion_r369624892", "createdAt": "2020-01-22T15:23:18Z", "author": {"login": "gpang"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/DefaultBlockWorker.java", "diffHunk": "@@ -147,8 +143,7 @@\n   DefaultBlockWorker(BlockMasterClientPool blockMasterClientPool,\n       FileSystemMasterClient fileSystemMasterClient, Sessions sessions, BlockStore blockStore,\n       UfsManager ufsManager) {\n-    super(Executors\n-        .newFixedThreadPool(4, ThreadFactoryUtils.build(\"block-worker-heartbeat-%d\", true)));\n+    super(ExecutorServiceFactories.fixedThreadPool(\"block-worker-executor\", 4));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e16554dd8acb6fb6f40fd287efcfbe85a641014"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgzNzQyMA==", "bodyText": "This is worker executor thread-pool. Various heartbeats are running on them.", "url": "https://github.com/Alluxio/alluxio/pull/10777#discussion_r369837420", "createdAt": "2020-01-22T22:22:16Z", "author": {"login": "ggezer"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/DefaultBlockWorker.java", "diffHunk": "@@ -147,8 +143,7 @@\n   DefaultBlockWorker(BlockMasterClientPool blockMasterClientPool,\n       FileSystemMasterClient fileSystemMasterClient, Sessions sessions, BlockStore blockStore,\n       UfsManager ufsManager) {\n-    super(Executors\n-        .newFixedThreadPool(4, ThreadFactoryUtils.build(\"block-worker-heartbeat-%d\", true)));\n+    super(ExecutorServiceFactories.fixedThreadPool(\"block-worker-executor\", 4));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyNDg5Mg=="}, "originalCommit": {"oid": "6e16554dd8acb6fb6f40fd287efcfbe85a641014"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTgzMDExOnYy", "diffSide": "RIGHT", "path": "core/server/worker/src/main/java/alluxio/worker/block/AsyncBlockRemover.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjo0NzoxMFrOFiJvbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMDoyOTowNFrOFizc5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1NTUwMw==", "bodyText": "is this supposed to be in the if statement too?", "url": "https://github.com/Alluxio/alluxio/pull/10777#discussion_r371355503", "createdAt": "2020-01-27T16:47:10Z", "author": {"login": "gpang"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/AsyncBlockRemover.java", "diffHunk": "@@ -103,9 +106,12 @@ public void run() {\n           mBlockWorker.removeBlock(Sessions.MASTER_COMMAND_SESSION_ID, blockToBeRemoved);\n           LOG.debug(\"Block {} is removed in thread {}.\", blockToBeRemoved, mThreadName);\n         } catch (InterruptedException e) {\n-          Thread.currentThread().interrupt();\n-          LOG.warn(\"{} got interrupted while it was cleaning block {}.\",\n-              mThreadName, blockToBeRemoved);\n+          // Only log warning if interrupted not due to a shutdown.\n+          if (!mShutdown) {\n+            Thread.currentThread().interrupt();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e16554dd8acb6fb6f40fd287efcfbe85a641014"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAzODc5NA==", "bodyText": "Right. This was incorrect.", "url": "https://github.com/Alluxio/alluxio/pull/10777#discussion_r372038794", "createdAt": "2020-01-28T20:28:53Z", "author": {"login": "ggezer"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/AsyncBlockRemover.java", "diffHunk": "@@ -103,9 +106,12 @@ public void run() {\n           mBlockWorker.removeBlock(Sessions.MASTER_COMMAND_SESSION_ID, blockToBeRemoved);\n           LOG.debug(\"Block {} is removed in thread {}.\", blockToBeRemoved, mThreadName);\n         } catch (InterruptedException e) {\n-          Thread.currentThread().interrupt();\n-          LOG.warn(\"{} got interrupted while it was cleaning block {}.\",\n-              mThreadName, blockToBeRemoved);\n+          // Only log warning if interrupted not due to a shutdown.\n+          if (!mShutdown) {\n+            Thread.currentThread().interrupt();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1NTUwMw=="}, "originalCommit": {"oid": "6e16554dd8acb6fb6f40fd287efcfbe85a641014"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAzODg4NA==", "bodyText": "275c3d2", "url": "https://github.com/Alluxio/alluxio/pull/10777#discussion_r372038884", "createdAt": "2020-01-28T20:29:04Z", "author": {"login": "ggezer"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/AsyncBlockRemover.java", "diffHunk": "@@ -103,9 +106,12 @@ public void run() {\n           mBlockWorker.removeBlock(Sessions.MASTER_COMMAND_SESSION_ID, blockToBeRemoved);\n           LOG.debug(\"Block {} is removed in thread {}.\", blockToBeRemoved, mThreadName);\n         } catch (InterruptedException e) {\n-          Thread.currentThread().interrupt();\n-          LOG.warn(\"{} got interrupted while it was cleaning block {}.\",\n-              mThreadName, blockToBeRemoved);\n+          // Only log warning if interrupted not due to a shutdown.\n+          if (!mShutdown) {\n+            Thread.currentThread().interrupt();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1NTUwMw=="}, "originalCommit": {"oid": "6e16554dd8acb6fb6f40fd287efcfbe85a641014"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Njk4MTA2OnYy", "diffSide": "RIGHT", "path": "core/server/worker/src/main/java/alluxio/worker/block/DefaultBlockWorker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMzoyMTozN1rOFiU3kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMDoyOToxMlrOFizdDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUzNzgwOA==", "bodyText": "Should we have a mechanism for ensuring the shutdown of resources which need to be closed/stopped(ie. Closer)?", "url": "https://github.com/Alluxio/alluxio/pull/10777#discussion_r371537808", "createdAt": "2020-01-27T23:21:37Z", "author": {"login": "calvinjia"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/DefaultBlockWorker.java", "diffHunk": "@@ -254,40 +251,35 @@ public void start(WorkerNetAddress address) throws IOException {\n    * Stops the block worker. This method should only be called to terminate the worker.\n    */\n   @Override\n-  public void stop() {\n+  public void stop() throws IOException {\n     // Steps to shutdown:\n     // 1. Gracefully shut down the runnables running in the executors.\n-    // 2. Shutdown the executors.\n-    // 3. Shutdown the clients. This needs to happen after the executors is shutdown because\n+    // 2. Shutdown the clients. This needs to happen after the executors is shutdown because\n     //    runnables running in the executors might be using the clients.\n+    // 3. Shutdown base worker. (closes executors.)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e16554dd8acb6fb6f40fd287efcfbe85a641014"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAzODkyNw==", "bodyText": "41ad003", "url": "https://github.com/Alluxio/alluxio/pull/10777#discussion_r372038927", "createdAt": "2020-01-28T20:29:12Z", "author": {"login": "ggezer"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/DefaultBlockWorker.java", "diffHunk": "@@ -254,40 +251,35 @@ public void start(WorkerNetAddress address) throws IOException {\n    * Stops the block worker. This method should only be called to terminate the worker.\n    */\n   @Override\n-  public void stop() {\n+  public void stop() throws IOException {\n     // Steps to shutdown:\n     // 1. Gracefully shut down the runnables running in the executors.\n-    // 2. Shutdown the executors.\n-    // 3. Shutdown the clients. This needs to happen after the executors is shutdown because\n+    // 2. Shutdown the clients. This needs to happen after the executors is shutdown because\n     //    runnables running in the executors might be using the clients.\n+    // 3. Shutdown base worker. (closes executors.)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUzNzgwOA=="}, "originalCommit": {"oid": "6e16554dd8acb6fb6f40fd287efcfbe85a641014"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDY3MDg2OnYy", "diffSide": "RIGHT", "path": "core/server/worker/src/main/java/alluxio/worker/block/DefaultBlockWorker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMzozNjowMlrOFi4VqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMzozNjowMlrOFi4VqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjExODk1Mw==", "bodyText": "mBlockMasterClientPool = mResourceCloser.register?", "url": "https://github.com/Alluxio/alluxio/pull/10777#discussion_r372118953", "createdAt": "2020-01-28T23:36:02Z", "author": {"login": "calvinjia"}, "path": "core/server/worker/src/main/java/alluxio/worker/block/DefaultBlockWorker.java", "diffHunk": "@@ -147,11 +149,11 @@\n   DefaultBlockWorker(BlockMasterClientPool blockMasterClientPool,\n       FileSystemMasterClient fileSystemMasterClient, Sessions sessions, BlockStore blockStore,\n       UfsManager ufsManager) {\n-    super(Executors\n-        .newFixedThreadPool(4, ThreadFactoryUtils.build(\"block-worker-heartbeat-%d\", true)));\n-    mBlockMasterClientPool = blockMasterClientPool;\n+    super(ExecutorServiceFactories.fixedThreadPool(\"block-worker-executor\", 5));\n+    mResourceCloser = Closer.create();\n+    mResourceCloser.register(mBlockMasterClientPool = blockMasterClientPool);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d39fe982612e81f60ce1ded37915abe42efc134c"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2086, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}