{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MDI3NzUy", "number": 11580, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTowNjo1M1rOEGeykg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzo1MDo0N1rOEGjahg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjMxMzc4OnYy", "diffSide": "RIGHT", "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTowNjo1M1rOGlTndA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTowNjo1M1rOGlTndA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3MTg5Mg==", "bodyText": "do you also want thread name, or just the id? Also, I think for logging you need \"{}\", not \"%d\". \"%d\" I think is for String.format().", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441771892", "createdAt": "2020-06-17T19:06:53Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -123,6 +124,9 @@ public void mastersStartedCallback() {\n    * @throws InterruptedException\n    */\n   public LockResource lockShared() throws InterruptedException {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Thread-%d entered lockShared().\", Thread.currentThread().getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjMxNTMyOnYy", "diffSide": "RIGHT", "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTowNzoyM1rOGlTobA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTowNzoyM1rOGlTobA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3MjE0MA==", "bodyText": "why is the other one guarded by LOG.isDebugEnabled()?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441772140", "createdAt": "2020-06-17T19:07:23Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -153,11 +157,14 @@ public LockResource lockShared() throws InterruptedException {\n    */\n   public LockResource lockExclusive(StateLockOptions lockOptions)\n       throws TimeoutException, InterruptedException {\n+    LOG.debug(\"Thread-%d entered lockExclusive().\", Thread.currentThread().getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjMzMDc0OnYy", "diffSide": "RIGHT", "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToxMjoxNlrOGlTybQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToxMjoxNlrOGlTybQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3NDcwMQ==", "bodyText": "I don't think this syntax is correct. It doesn't have enough arguments, and is \"%ms\" correct?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441774701", "createdAt": "2020-06-17T19:12:16Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -153,11 +157,14 @@ public LockResource lockShared() throws InterruptedException {\n    */\n   public LockResource lockExclusive(StateLockOptions lockOptions)\n       throws TimeoutException, InterruptedException {\n+    LOG.debug(\"Thread-%d entered lockExclusive().\", Thread.currentThread().getId());\n     // Run the grace cycle.\n     StateLockOptions.GraceMode graceMode = lockOptions.getGraceMode();\n     boolean lockAcquired = false;\n     long deadlineMs = System.currentTimeMillis() + lockOptions.getGraceCycleTimeoutMs();\n     while (System.currentTimeMillis() < deadlineMs) {\n+      LOG.debug(\"Thread-%d entered grace-cycle of try-sleep: %ms-%ms\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjM0MDA3OnYy", "diffSide": "RIGHT", "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToxNToxMFrOGlT4fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzoyNzo0MFrOGlapMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3NjI1Mw==", "bodyText": "Could this be useful for INFO level?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441776253", "createdAt": "2020-06-17T19:15:10Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -169,6 +176,7 @@ public LockResource lockExclusive(StateLockOptions lockOptions)\n       }\n     }\n     if (lockAcquired) { // Lock was acquired within grace-cycle.\n+      LOG.debug(\"Thread-%d acquired the lock within grace-cycle.\", Thread.currentThread().getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4NzAyNA==", "bodyText": "Right. I now made many of them as INFO.", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441887024", "createdAt": "2020-06-17T23:27:40Z", "author": {"login": "ggezer"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -169,6 +176,7 @@ public LockResource lockExclusive(StateLockOptions lockOptions)\n       }\n     }\n     if (lockAcquired) { // Lock was acquired within grace-cycle.\n+      LOG.debug(\"Thread-%d acquired the lock within grace-cycle.\", Thread.currentThread().getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3NjI1Mw=="}, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjM0MTQ4OnYy", "diffSide": "RIGHT", "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToxNTozOVrOGlT5cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToxNTozOVrOGlT5cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3NjQ5OA==", "bodyText": "Could it be useful to log something here at INFO, since we were not able to get the lock?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441776498", "createdAt": "2020-06-17T19:15:39Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -169,6 +176,7 @@ public LockResource lockExclusive(StateLockOptions lockOptions)\n       }\n     }\n     if (lockAcquired) { // Lock was acquired within grace-cycle.\n+      LOG.debug(\"Thread-%d acquired the lock within grace-cycle.\", Thread.currentThread().getId());\n       activateInterruptCycle();\n     } else { // Lock couldn't be acquired by grace-cycle.\n       if (graceMode == StateLockOptions.GraceMode.TIMEOUT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjM1Mzc0OnYy", "diffSide": "RIGHT", "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToxOTo1M1rOGlUBrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzozNDozOVrOGlaxQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3ODYwNw==", "bodyText": "this may not be accurate, since the real interrupt happens in the loop below.", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441778607", "createdAt": "2020-06-17T19:19:53Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -247,6 +260,9 @@ private void deactivateInterruptCycle() {\n    * Scheduled routine that interrupts waiters/holders of shared lock.\n    */\n   private void waiterInterruptRoutine() {\n+    LOG.debug(\"Interrupt-cycle interrupting %d waiters/holders: {%s}\",\n+        Thread.currentThread().getId(), mSharedWaitersAndHolders.size(), mSharedWaitersAndHolders\n+            .stream().map((th) -> Long.toString(th.getId())).collect(Collectors.joining(\",\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4OTA4OQ==", "bodyText": "Bumped it down for consistent logging.", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441889089", "createdAt": "2020-06-17T23:34:39Z", "author": {"login": "ggezer"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -247,6 +260,9 @@ private void deactivateInterruptCycle() {\n    * Scheduled routine that interrupts waiters/holders of shared lock.\n    */\n   private void waiterInterruptRoutine() {\n+    LOG.debug(\"Interrupt-cycle interrupting %d waiters/holders: {%s}\",\n+        Thread.currentThread().getId(), mSharedWaitersAndHolders.size(), mSharedWaitersAndHolders\n+            .stream().map((th) -> Long.toString(th.getId())).collect(Collectors.joining(\",\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3ODYwNw=="}, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzAzNTczOnYy", "diffSide": "RIGHT", "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzozMTowNlrOGlatbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzo0MjowM1rOGla6Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4ODExMA==", "bodyText": "I think that we might want to wrap this in a if (Log.isDebugEnabled()) because grabbing iterating, and joining into a String can be pretty expensive?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441888110", "createdAt": "2020-06-17T23:31:06Z", "author": {"login": "ZacBlanco"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -247,6 +260,9 @@ private void deactivateInterruptCycle() {\n    * Scheduled routine that interrupts waiters/holders of shared lock.\n    */\n   private void waiterInterruptRoutine() {\n+    LOG.debug(\"Interrupt-cycle interrupting %d waiters/holders: {%s}\",\n+        Thread.currentThread().getId(), mSharedWaitersAndHolders.size(), mSharedWaitersAndHolders\n+            .stream().map((th) -> Long.toString(th.getId())).collect(Collectors.joining(\",\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4OTI1NQ==", "bodyText": "I made it INFO now. We don't want to miss this trace when it happens.", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441889255", "createdAt": "2020-06-17T23:35:07Z", "author": {"login": "ggezer"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -247,6 +260,9 @@ private void deactivateInterruptCycle() {\n    * Scheduled routine that interrupts waiters/holders of shared lock.\n    */\n   private void waiterInterruptRoutine() {\n+    LOG.debug(\"Interrupt-cycle interrupting %d waiters/holders: {%s}\",\n+        Thread.currentThread().getId(), mSharedWaitersAndHolders.size(), mSharedWaitersAndHolders\n+            .stream().map((th) -> Long.toString(th.getId())).collect(Collectors.joining(\",\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4ODExMA=="}, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg5MDA3Mw==", "bodyText": "How often do we expect this method to run?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441890073", "createdAt": "2020-06-17T23:37:46Z", "author": {"login": "ZacBlanco"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -247,6 +260,9 @@ private void deactivateInterruptCycle() {\n    * Scheduled routine that interrupts waiters/holders of shared lock.\n    */\n   private void waiterInterruptRoutine() {\n+    LOG.debug(\"Interrupt-cycle interrupting %d waiters/holders: {%s}\",\n+        Thread.currentThread().getId(), mSharedWaitersAndHolders.size(), mSharedWaitersAndHolders\n+            .stream().map((th) -> Long.toString(th.getId())).collect(Collectors.joining(\",\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4ODExMA=="}, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg5MDM0OA==", "bodyText": "every 30secs by default only if it is activated under certain conditions.", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441890348", "createdAt": "2020-06-17T23:38:46Z", "author": {"login": "ggezer"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -247,6 +260,9 @@ private void deactivateInterruptCycle() {\n    * Scheduled routine that interrupts waiters/holders of shared lock.\n    */\n   private void waiterInterruptRoutine() {\n+    LOG.debug(\"Interrupt-cycle interrupting %d waiters/holders: {%s}\",\n+        Thread.currentThread().getId(), mSharedWaitersAndHolders.size(), mSharedWaitersAndHolders\n+            .stream().map((th) -> Long.toString(th.getId())).collect(Collectors.joining(\",\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4ODExMA=="}, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg5MTM2Mg==", "bodyText": "ok, I think it's fine then. I just wanted to make sure it doesn't need to get computed frequently.", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441891362", "createdAt": "2020-06-17T23:42:03Z", "author": {"login": "ZacBlanco"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -247,6 +260,9 @@ private void deactivateInterruptCycle() {\n    * Scheduled routine that interrupts waiters/holders of shared lock.\n    */\n   private void waiterInterruptRoutine() {\n+    LOG.debug(\"Interrupt-cycle interrupting %d waiters/holders: {%s}\",\n+        Thread.currentThread().getId(), mSharedWaitersAndHolders.size(), mSharedWaitersAndHolders\n+            .stream().map((th) -> Long.toString(th.getId())).collect(Collectors.joining(\",\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4ODExMA=="}, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzAzNjMyOnYy", "diffSide": "RIGHT", "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzozMToyM1rOGlatyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzozNToyOFrOGlayVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4ODIwMQ==", "bodyText": "I think that we might want to wrap this in a if (Log.isDebugEnabled()) because grabbing iterating, and joining into a String can be pretty expensive?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441888201", "createdAt": "2020-06-17T23:31:23Z", "author": {"login": "ZacBlanco"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -178,6 +186,9 @@ public LockResource lockExclusive(StateLockOptions lockOptions)\n       // Activate the interrupt cycle before entering the lock because it might wait in the queue.\n       activateInterruptCycle();\n       // Force the lock.\n+      LOG.debug(\"Thread-%d forcing the lock with %d waiters/holders: {%s}\",\n+          Thread.currentThread().getId(), mSharedWaitersAndHolders.size(), mSharedWaitersAndHolders\n+              .stream().map((th) -> Long.toString(th.getId())).collect(Collectors.joining(\",\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4OTM2Nw==", "bodyText": "I made it INFO now. This is OK to be seen imo.", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441889367", "createdAt": "2020-06-17T23:35:28Z", "author": {"login": "ggezer"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -178,6 +186,9 @@ public LockResource lockExclusive(StateLockOptions lockOptions)\n       // Activate the interrupt cycle before entering the lock because it might wait in the queue.\n       activateInterruptCycle();\n       // Force the lock.\n+      LOG.debug(\"Thread-%d forcing the lock with %d waiters/holders: {%s}\",\n+          Thread.currentThread().getId(), mSharedWaitersAndHolders.size(), mSharedWaitersAndHolders\n+              .stream().map((th) -> Long.toString(th.getId())).collect(Collectors.joining(\",\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4ODIwMQ=="}, "originalCommit": {"oid": "1ebafe4a982cd879e57d7346e60c8cb4456405e6"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzA1NTM0OnYy", "diffSide": "RIGHT", "path": "core/common/src/main/java/alluxio/util/ThreadUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzo0MTozMVrOGla5dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzo0MTozMVrOGla5dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg5MTE5MA==", "bodyText": "I thought format used \"%s\" and \"%d\"?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441891190", "createdAt": "2020-06-17T23:41:31Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/util/ThreadUtils.java", "diffHunk": "@@ -77,5 +77,20 @@ public static void shutdownAndAwaitTermination(ExecutorService pool, long timeou\n     }\n   }\n \n+  /**\n+   * @return a string representation of the current thread\n+   */\n+  public static String getCurrentThreadIdentifier() {\n+    return getThreadIdentifier(Thread.currentThread());\n+  }\n+\n+  /**\n+   * @param thread the thread\n+   * @return a string representation of the given thread\n+   */\n+  public static String getThreadIdentifier(Thread thread) {\n+    return String.format(\"{}({})\", thread.getId(), thread.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c256956050945f97bb161da8a419d7281306d9"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzA2NzI4OnYy", "diffSide": "RIGHT", "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzo0ODoyMFrOGlbA5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDoyMjo0NVrOGlbkkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg5MzA5Mw==", "bodyText": "This will print every 10 minutes for 12 hours? Is that too noisy?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441893093", "createdAt": "2020-06-17T23:48:20Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -153,11 +158,15 @@ public LockResource lockShared() throws InterruptedException {\n    */\n   public LockResource lockExclusive(StateLockOptions lockOptions)\n       throws TimeoutException, InterruptedException {\n+    LOG.debug(\"Thread-{} entered lockExclusive().\", ThreadUtils.getCurrentThreadIdentifier());\n     // Run the grace cycle.\n     StateLockOptions.GraceMode graceMode = lockOptions.getGraceMode();\n     boolean lockAcquired = false;\n     long deadlineMs = System.currentTimeMillis() + lockOptions.getGraceCycleTimeoutMs();\n     while (System.currentTimeMillis() < deadlineMs) {\n+      LOG.info(\"Thread-{} entered grace-cycle of try-sleep: {}ms-{}ms for the total of {}ms\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c256956050945f97bb161da8a419d7281306d9"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMjIyNg==", "bodyText": "made it one time.", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441902226", "createdAt": "2020-06-18T00:22:45Z", "author": {"login": "ggezer"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -153,11 +158,15 @@ public LockResource lockShared() throws InterruptedException {\n    */\n   public LockResource lockExclusive(StateLockOptions lockOptions)\n       throws TimeoutException, InterruptedException {\n+    LOG.debug(\"Thread-{} entered lockExclusive().\", ThreadUtils.getCurrentThreadIdentifier());\n     // Run the grace cycle.\n     StateLockOptions.GraceMode graceMode = lockOptions.getGraceMode();\n     boolean lockAcquired = false;\n     long deadlineMs = System.currentTimeMillis() + lockOptions.getGraceCycleTimeoutMs();\n     while (System.currentTimeMillis() < deadlineMs) {\n+      LOG.info(\"Thread-{} entered grace-cycle of try-sleep: {}ms-{}ms for the total of {}ms\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg5MzA5Mw=="}, "originalCommit": {"oid": "f0c256956050945f97bb161da8a419d7281306d9"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzA3MTQyOnYy", "diffSide": "RIGHT", "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzo1MDo0N1rOGlbDZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDo1Mjo0NVrOGlcBEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg5MzczNA==", "bodyText": "Hrmmm, is this right? I thought TIMEOUT mode would not force the lock by interrupting threads?", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441893734", "createdAt": "2020-06-17T23:50:47Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -169,6 +178,8 @@ public LockResource lockExclusive(StateLockOptions lockOptions)\n       }\n     }\n     if (lockAcquired) { // Lock was acquired within grace-cycle.\n+      LOG.info(\"Thread-{} acquired the lock within grace-cycle.\",\n+          ThreadUtils.getCurrentThreadIdentifier());\n       activateInterruptCycle();\n     } else { // Lock couldn't be acquired by grace-cycle.\n       if (graceMode == StateLockOptions.GraceMode.TIMEOUT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c256956050945f97bb161da8a419d7281306d9"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwMTE1OQ==", "bodyText": "no we have to interrupt during the lock. not just when forcing the lock.", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441901159", "createdAt": "2020-06-18T00:18:13Z", "author": {"login": "ggezer"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -169,6 +178,8 @@ public LockResource lockExclusive(StateLockOptions lockOptions)\n       }\n     }\n     if (lockAcquired) { // Lock was acquired within grace-cycle.\n+      LOG.info(\"Thread-{} acquired the lock within grace-cycle.\",\n+          ThreadUtils.getCurrentThreadIdentifier());\n       activateInterruptCycle();\n     } else { // Lock couldn't be acquired by grace-cycle.\n       if (graceMode == StateLockOptions.GraceMode.TIMEOUT) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg5MzczNA=="}, "originalCommit": {"oid": "f0c256956050945f97bb161da8a419d7281306d9"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwOTUyMw==", "bodyText": "If the lock is acquired by the grace-cycle, we still need to run the interrupt-cycle for maintaining the heart-beats.\nTIMEOUT and FORCED make sense when the lock was not grabbed by the grace-cycle. In this context FORCED would mean to activate the interrupt-cycle before taking the lock.", "url": "https://github.com/Alluxio/alluxio/pull/11580#discussion_r441909523", "createdAt": "2020-06-18T00:52:45Z", "author": {"login": "ggezer"}, "path": "core/server/common/src/main/java/alluxio/master/StateLockManager.java", "diffHunk": "@@ -169,6 +178,8 @@ public LockResource lockExclusive(StateLockOptions lockOptions)\n       }\n     }\n     if (lockAcquired) { // Lock was acquired within grace-cycle.\n+      LOG.info(\"Thread-{} acquired the lock within grace-cycle.\",\n+          ThreadUtils.getCurrentThreadIdentifier());\n       activateInterruptCycle();\n     } else { // Lock couldn't be acquired by grace-cycle.\n       if (graceMode == StateLockOptions.GraceMode.TIMEOUT) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg5MzczNA=="}, "originalCommit": {"oid": "f0c256956050945f97bb161da8a419d7281306d9"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1658, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}