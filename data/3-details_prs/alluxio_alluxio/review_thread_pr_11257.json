{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNzU0Nzc2", "number": 11257, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNTowNjozNFrODwpfVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDozNjo0MVrODw2qBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMzM4MDA0OnYy", "diffSide": "RIGHT", "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNTowNjozNVrOGDxIQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNTozMTo1MFrOGDxdcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYwMzg0MQ==", "bodyText": "I am curious, under what conditions, would the ufs not have owner or group information?", "url": "https://github.com/Alluxio/alluxio/pull/11257#discussion_r406603841", "createdAt": "2020-04-10T05:06:35Z", "author": {"login": "yuzhu"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -3564,10 +3564,20 @@ private SyncResult syncInodeMetadata(RpcContext rpcContext, LockedInodePath inod\n         if (ufsFpParsed.isValid()) {\n           short mode = Short.parseShort(ufsFpParsed.getTag(Tag.MODE));\n           long opTimeMs = System.currentTimeMillis();\n-          setAttributeSingleFile(rpcContext, inodePath, false, opTimeMs, SetAttributeContext\n-              .mergeFrom(SetAttributePOptions.newBuilder().setOwner(ufsFpParsed.getTag(Tag.OWNER))\n-                  .setGroup(ufsFpParsed.getTag(Tag.GROUP)).setMode(new Mode(mode).toProto()))\n-              .setUfsFingerprint(ufsFingerprint));\n+          SetAttributePOptions.Builder builder = SetAttributePOptions.newBuilder()\n+              .setMode(new Mode(mode).toProto());\n+          String owner = ufsFpParsed.getTag(Tag.OWNER);\n+          if (!owner.equals(Fingerprint.UNDERSCORE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b57de6b98b06c807d551f2068c923e64aab5bf62"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYwNjU0MQ==", "bodyText": "its's a corner case, took me a while to figure out. i'll update the description", "url": "https://github.com/Alluxio/alluxio/pull/11257#discussion_r406606541", "createdAt": "2020-04-10T05:18:44Z", "author": {"login": "madanadit"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -3564,10 +3564,20 @@ private SyncResult syncInodeMetadata(RpcContext rpcContext, LockedInodePath inod\n         if (ufsFpParsed.isValid()) {\n           short mode = Short.parseShort(ufsFpParsed.getTag(Tag.MODE));\n           long opTimeMs = System.currentTimeMillis();\n-          setAttributeSingleFile(rpcContext, inodePath, false, opTimeMs, SetAttributeContext\n-              .mergeFrom(SetAttributePOptions.newBuilder().setOwner(ufsFpParsed.getTag(Tag.OWNER))\n-                  .setGroup(ufsFpParsed.getTag(Tag.GROUP)).setMode(new Mode(mode).toProto()))\n-              .setUfsFingerprint(ufsFingerprint));\n+          SetAttributePOptions.Builder builder = SetAttributePOptions.newBuilder()\n+              .setMode(new Mode(mode).toProto());\n+          String owner = ufsFpParsed.getTag(Tag.OWNER);\n+          if (!owner.equals(Fingerprint.UNDERSCORE)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYwMzg0MQ=="}, "originalCommit": {"oid": "b57de6b98b06c807d551f2068c923e64aab5bf62"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYwODM0Mg==", "bodyText": "@yuzhu when inherit_acl is false all object ufs do not return owner and group. that is because the s3 account credential cannot be mapped to a user in those cases.", "url": "https://github.com/Alluxio/alluxio/pull/11257#discussion_r406608342", "createdAt": "2020-04-10T05:27:40Z", "author": {"login": "madanadit"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -3564,10 +3564,20 @@ private SyncResult syncInodeMetadata(RpcContext rpcContext, LockedInodePath inod\n         if (ufsFpParsed.isValid()) {\n           short mode = Short.parseShort(ufsFpParsed.getTag(Tag.MODE));\n           long opTimeMs = System.currentTimeMillis();\n-          setAttributeSingleFile(rpcContext, inodePath, false, opTimeMs, SetAttributeContext\n-              .mergeFrom(SetAttributePOptions.newBuilder().setOwner(ufsFpParsed.getTag(Tag.OWNER))\n-                  .setGroup(ufsFpParsed.getTag(Tag.GROUP)).setMode(new Mode(mode).toProto()))\n-              .setUfsFingerprint(ufsFingerprint));\n+          SetAttributePOptions.Builder builder = SetAttributePOptions.newBuilder()\n+              .setMode(new Mode(mode).toProto());\n+          String owner = ufsFpParsed.getTag(Tag.OWNER);\n+          if (!owner.equals(Fingerprint.UNDERSCORE)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYwMzg0MQ=="}, "originalCommit": {"oid": "b57de6b98b06c807d551f2068c923e64aab5bf62"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYwOTI2Nw==", "bodyText": "got it.", "url": "https://github.com/Alluxio/alluxio/pull/11257#discussion_r406609267", "createdAt": "2020-04-10T05:31:50Z", "author": {"login": "yuzhu"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -3564,10 +3564,20 @@ private SyncResult syncInodeMetadata(RpcContext rpcContext, LockedInodePath inod\n         if (ufsFpParsed.isValid()) {\n           short mode = Short.parseShort(ufsFpParsed.getTag(Tag.MODE));\n           long opTimeMs = System.currentTimeMillis();\n-          setAttributeSingleFile(rpcContext, inodePath, false, opTimeMs, SetAttributeContext\n-              .mergeFrom(SetAttributePOptions.newBuilder().setOwner(ufsFpParsed.getTag(Tag.OWNER))\n-                  .setGroup(ufsFpParsed.getTag(Tag.GROUP)).setMode(new Mode(mode).toProto()))\n-              .setUfsFingerprint(ufsFingerprint));\n+          SetAttributePOptions.Builder builder = SetAttributePOptions.newBuilder()\n+              .setMode(new Mode(mode).toProto());\n+          String owner = ufsFpParsed.getTag(Tag.OWNER);\n+          if (!owner.equals(Fingerprint.UNDERSCORE)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYwMzg0MQ=="}, "originalCommit": {"oid": "b57de6b98b06c807d551f2068c923e64aab5bf62"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTUzNzMyOnYy", "diffSide": "RIGHT", "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMDozNjo0MVrOGEFL_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMTozNzoxNFrOGEGhOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzMjQ3Nw==", "bodyText": "Does setAttributeSingleFile handle the cases when owner or group are unset in the proto?", "url": "https://github.com/Alluxio/alluxio/pull/11257#discussion_r406932477", "createdAt": "2020-04-10T20:36:41Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -3564,10 +3564,20 @@ private SyncResult syncInodeMetadata(RpcContext rpcContext, LockedInodePath inod\n         if (ufsFpParsed.isValid()) {\n           short mode = Short.parseShort(ufsFpParsed.getTag(Tag.MODE));\n           long opTimeMs = System.currentTimeMillis();\n-          setAttributeSingleFile(rpcContext, inodePath, false, opTimeMs, SetAttributeContext\n-              .mergeFrom(SetAttributePOptions.newBuilder().setOwner(ufsFpParsed.getTag(Tag.OWNER))\n-                  .setGroup(ufsFpParsed.getTag(Tag.GROUP)).setMode(new Mode(mode).toProto()))\n-              .setUfsFingerprint(ufsFingerprint));\n+          SetAttributePOptions.Builder builder = SetAttributePOptions.newBuilder()\n+              .setMode(new Mode(mode).toProto());\n+          String owner = ufsFpParsed.getTag(Tag.OWNER);\n+          if (!owner.equals(Fingerprint.UNDERSCORE)) {\n+            // Only set owner if not empty\n+            builder.setOwner(owner);\n+          }\n+          String group = ufsFpParsed.getTag(Tag.GROUP);\n+          if (!group.equals(Fingerprint.UNDERSCORE)) {\n+            // Only set group if not empty\n+            builder.setGroup(group);\n+          }\n+          setAttributeSingleFile(rpcContext, inodePath, false, opTimeMs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acc74c216af9df09f83874de89b1bfdbc3d717bd"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk1NDI5OQ==", "bodyText": "yep, it does", "url": "https://github.com/Alluxio/alluxio/pull/11257#discussion_r406954299", "createdAt": "2020-04-10T21:37:14Z", "author": {"login": "madanadit"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -3564,10 +3564,20 @@ private SyncResult syncInodeMetadata(RpcContext rpcContext, LockedInodePath inod\n         if (ufsFpParsed.isValid()) {\n           short mode = Short.parseShort(ufsFpParsed.getTag(Tag.MODE));\n           long opTimeMs = System.currentTimeMillis();\n-          setAttributeSingleFile(rpcContext, inodePath, false, opTimeMs, SetAttributeContext\n-              .mergeFrom(SetAttributePOptions.newBuilder().setOwner(ufsFpParsed.getTag(Tag.OWNER))\n-                  .setGroup(ufsFpParsed.getTag(Tag.GROUP)).setMode(new Mode(mode).toProto()))\n-              .setUfsFingerprint(ufsFingerprint));\n+          SetAttributePOptions.Builder builder = SetAttributePOptions.newBuilder()\n+              .setMode(new Mode(mode).toProto());\n+          String owner = ufsFpParsed.getTag(Tag.OWNER);\n+          if (!owner.equals(Fingerprint.UNDERSCORE)) {\n+            // Only set owner if not empty\n+            builder.setOwner(owner);\n+          }\n+          String group = ufsFpParsed.getTag(Tag.GROUP);\n+          if (!group.equals(Fingerprint.UNDERSCORE)) {\n+            // Only set group if not empty\n+            builder.setGroup(group);\n+          }\n+          setAttributeSingleFile(rpcContext, inodePath, false, opTimeMs,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzMjQ3Nw=="}, "originalCommit": {"oid": "acc74c216af9df09f83874de89b1bfdbc3d717bd"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1836, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}