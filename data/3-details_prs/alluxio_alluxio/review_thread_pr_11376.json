{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNTg0MDQz", "number": 11376, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTozMzo0M1rOD5ImMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjoxNzoxOVrOD5L38A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjM2MjcyOnYy", "diffSide": "RIGHT", "path": "dev/jenkins/build.sh", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTozMzo0M1rOGQPFZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDoxNTo1OVrOGQQg3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3NzU0Mw==", "bodyText": "what about the case where there is no diff, and we simply want to generate the jacoco report?", "url": "https://github.com/Alluxio/alluxio/pull/11376#discussion_r419677543", "createdAt": "2020-05-04T19:33:43Z", "author": {"login": "ZacBlanco"}, "path": "dev/jenkins/build.sh", "diffHunk": "@@ -13,36 +13,68 @@\n #\n # This script is run from inside the Docker container\n #\n-set -e\n-\n-# Set things up so that the current user has a real name and can authenticate.\n-myuid=$(id -u)\n-mygid=$(id -g)\n-echo \"$myuid:x:$myuid:$mygid:anonymous uid:/home/jenkins:/bin/false\" >> /etc/passwd\n-\n-export MAVEN_OPTS=\"-Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss.SSS\"\n-\n-if [ -z ${ALLUXIO_BUILD_FORKCOUNT} ]\n-then\n-  ALLUXIO_BUILD_FORKCOUNT=4\n-fi\n+set -ex\n \n if [ -n \"${ALLUXIO_GIT_CLEAN}\" ]\n then\n   git clean -fdx\n fi\n-mvn -Duser.home=/home/jenkins -T 4C clean install -Pdeveloper -Dmaven.javadoc.skip -Dsurefire.forkCount=${ALLUXIO_BUILD_FORKCOUNT} $@\n \n-if [ -n \"${ALLUXIO_SONAR_ARGS}\" ]\n-then\n-  # A separate step to run jacoco report, with all the generated coverage data. This requires the\n-  # previous 'install' step to generate the jacoco exec data with the 'jacoco' profile.\n-  #\n-  # Must exclude some of the modules that fail to run verify again without a clean step. This is ok\n-  # since these modules do not contain any source code to track for code coverage.\n-  mvn -T 4C -Dfindbugs.skip -Dcheckstyle.skip -DskipTests -Dmaven.javadoc.skip -Dlicense.skip -PjacocoReport verify -pl '!webui,!shaded,!shaded/client,!shaded/hadoop'\n-  # run sonar analysis\n-  mvn $(echo \"${ALLUXIO_SONAR_ARGS}\") sonar:sonar\n+RUN_MAVEN=\"false\"\n+RUN_DOC_CHECK=\"false\"\n+if [ -z \"${TARGET_BRANCH}\" ]; then\n+  # if no target branch is specified, run all checks\n+  RUN_MAVEN=\"true\"\n+  RUN_DOC_CHECK=\"true\"\n+else\n+  git --no-pager diff \"refs/remotes/origin/${TARGET_BRANCH}\" --name-only > prFiles.diff\n+  echo \"PR diff is:\"\n+  cat prFiles.diff\n+\n+  while IFS=\"\" read -r filepath || [ -n \"$filepath\" ]; do\n+    if [[ ${filepath} =~ ^docs/.* ]]; then\n+      # if any file starts with \"docs/\", run doc check\n+      RUN_DOC_CHECK=\"true\"\n+    else\n+      # if any other files are in the diff, run maven\n+      RUN_MAVEN=\"true\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebd4fc28e25bc7c5355841e503d4877b7520b50d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY4MjkzMQ==", "bodyText": "before checking for TARGET_BRANCH, i could add a\nif [ -z \"${ALLUXIO_SONAR_ARGS}\"  ]; then\n  RUN_MAVEN=\"true\"\nfi\n\n== if the sonar args are provided, then force run maven", "url": "https://github.com/Alluxio/alluxio/pull/11376#discussion_r419682931", "createdAt": "2020-05-04T19:42:56Z", "author": {"login": "Xenorith"}, "path": "dev/jenkins/build.sh", "diffHunk": "@@ -13,36 +13,68 @@\n #\n # This script is run from inside the Docker container\n #\n-set -e\n-\n-# Set things up so that the current user has a real name and can authenticate.\n-myuid=$(id -u)\n-mygid=$(id -g)\n-echo \"$myuid:x:$myuid:$mygid:anonymous uid:/home/jenkins:/bin/false\" >> /etc/passwd\n-\n-export MAVEN_OPTS=\"-Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss.SSS\"\n-\n-if [ -z ${ALLUXIO_BUILD_FORKCOUNT} ]\n-then\n-  ALLUXIO_BUILD_FORKCOUNT=4\n-fi\n+set -ex\n \n if [ -n \"${ALLUXIO_GIT_CLEAN}\" ]\n then\n   git clean -fdx\n fi\n-mvn -Duser.home=/home/jenkins -T 4C clean install -Pdeveloper -Dmaven.javadoc.skip -Dsurefire.forkCount=${ALLUXIO_BUILD_FORKCOUNT} $@\n \n-if [ -n \"${ALLUXIO_SONAR_ARGS}\" ]\n-then\n-  # A separate step to run jacoco report, with all the generated coverage data. This requires the\n-  # previous 'install' step to generate the jacoco exec data with the 'jacoco' profile.\n-  #\n-  # Must exclude some of the modules that fail to run verify again without a clean step. This is ok\n-  # since these modules do not contain any source code to track for code coverage.\n-  mvn -T 4C -Dfindbugs.skip -Dcheckstyle.skip -DskipTests -Dmaven.javadoc.skip -Dlicense.skip -PjacocoReport verify -pl '!webui,!shaded,!shaded/client,!shaded/hadoop'\n-  # run sonar analysis\n-  mvn $(echo \"${ALLUXIO_SONAR_ARGS}\") sonar:sonar\n+RUN_MAVEN=\"false\"\n+RUN_DOC_CHECK=\"false\"\n+if [ -z \"${TARGET_BRANCH}\" ]; then\n+  # if no target branch is specified, run all checks\n+  RUN_MAVEN=\"true\"\n+  RUN_DOC_CHECK=\"true\"\n+else\n+  git --no-pager diff \"refs/remotes/origin/${TARGET_BRANCH}\" --name-only > prFiles.diff\n+  echo \"PR diff is:\"\n+  cat prFiles.diff\n+\n+  while IFS=\"\" read -r filepath || [ -n \"$filepath\" ]; do\n+    if [[ ${filepath} =~ ^docs/.* ]]; then\n+      # if any file starts with \"docs/\", run doc check\n+      RUN_DOC_CHECK=\"true\"\n+    else\n+      # if any other files are in the diff, run maven\n+      RUN_MAVEN=\"true\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3NzU0Mw=="}, "originalCommit": {"oid": "ebd4fc28e25bc7c5355841e503d4877b7520b50d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwMDMwNw==", "bodyText": "I think that's reasonable", "url": "https://github.com/Alluxio/alluxio/pull/11376#discussion_r419700307", "createdAt": "2020-05-04T20:14:51Z", "author": {"login": "ZacBlanco"}, "path": "dev/jenkins/build.sh", "diffHunk": "@@ -13,36 +13,68 @@\n #\n # This script is run from inside the Docker container\n #\n-set -e\n-\n-# Set things up so that the current user has a real name and can authenticate.\n-myuid=$(id -u)\n-mygid=$(id -g)\n-echo \"$myuid:x:$myuid:$mygid:anonymous uid:/home/jenkins:/bin/false\" >> /etc/passwd\n-\n-export MAVEN_OPTS=\"-Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss.SSS\"\n-\n-if [ -z ${ALLUXIO_BUILD_FORKCOUNT} ]\n-then\n-  ALLUXIO_BUILD_FORKCOUNT=4\n-fi\n+set -ex\n \n if [ -n \"${ALLUXIO_GIT_CLEAN}\" ]\n then\n   git clean -fdx\n fi\n-mvn -Duser.home=/home/jenkins -T 4C clean install -Pdeveloper -Dmaven.javadoc.skip -Dsurefire.forkCount=${ALLUXIO_BUILD_FORKCOUNT} $@\n \n-if [ -n \"${ALLUXIO_SONAR_ARGS}\" ]\n-then\n-  # A separate step to run jacoco report, with all the generated coverage data. This requires the\n-  # previous 'install' step to generate the jacoco exec data with the 'jacoco' profile.\n-  #\n-  # Must exclude some of the modules that fail to run verify again without a clean step. This is ok\n-  # since these modules do not contain any source code to track for code coverage.\n-  mvn -T 4C -Dfindbugs.skip -Dcheckstyle.skip -DskipTests -Dmaven.javadoc.skip -Dlicense.skip -PjacocoReport verify -pl '!webui,!shaded,!shaded/client,!shaded/hadoop'\n-  # run sonar analysis\n-  mvn $(echo \"${ALLUXIO_SONAR_ARGS}\") sonar:sonar\n+RUN_MAVEN=\"false\"\n+RUN_DOC_CHECK=\"false\"\n+if [ -z \"${TARGET_BRANCH}\" ]; then\n+  # if no target branch is specified, run all checks\n+  RUN_MAVEN=\"true\"\n+  RUN_DOC_CHECK=\"true\"\n+else\n+  git --no-pager diff \"refs/remotes/origin/${TARGET_BRANCH}\" --name-only > prFiles.diff\n+  echo \"PR diff is:\"\n+  cat prFiles.diff\n+\n+  while IFS=\"\" read -r filepath || [ -n \"$filepath\" ]; do\n+    if [[ ${filepath} =~ ^docs/.* ]]; then\n+      # if any file starts with \"docs/\", run doc check\n+      RUN_DOC_CHECK=\"true\"\n+    else\n+      # if any other files are in the diff, run maven\n+      RUN_MAVEN=\"true\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3NzU0Mw=="}, "originalCommit": {"oid": "ebd4fc28e25bc7c5355841e503d4877b7520b50d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwMDk1Nw==", "bodyText": "@gpang might have an opinion on a better way though?", "url": "https://github.com/Alluxio/alluxio/pull/11376#discussion_r419700957", "createdAt": "2020-05-04T20:15:59Z", "author": {"login": "ZacBlanco"}, "path": "dev/jenkins/build.sh", "diffHunk": "@@ -13,36 +13,68 @@\n #\n # This script is run from inside the Docker container\n #\n-set -e\n-\n-# Set things up so that the current user has a real name and can authenticate.\n-myuid=$(id -u)\n-mygid=$(id -g)\n-echo \"$myuid:x:$myuid:$mygid:anonymous uid:/home/jenkins:/bin/false\" >> /etc/passwd\n-\n-export MAVEN_OPTS=\"-Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss.SSS\"\n-\n-if [ -z ${ALLUXIO_BUILD_FORKCOUNT} ]\n-then\n-  ALLUXIO_BUILD_FORKCOUNT=4\n-fi\n+set -ex\n \n if [ -n \"${ALLUXIO_GIT_CLEAN}\" ]\n then\n   git clean -fdx\n fi\n-mvn -Duser.home=/home/jenkins -T 4C clean install -Pdeveloper -Dmaven.javadoc.skip -Dsurefire.forkCount=${ALLUXIO_BUILD_FORKCOUNT} $@\n \n-if [ -n \"${ALLUXIO_SONAR_ARGS}\" ]\n-then\n-  # A separate step to run jacoco report, with all the generated coverage data. This requires the\n-  # previous 'install' step to generate the jacoco exec data with the 'jacoco' profile.\n-  #\n-  # Must exclude some of the modules that fail to run verify again without a clean step. This is ok\n-  # since these modules do not contain any source code to track for code coverage.\n-  mvn -T 4C -Dfindbugs.skip -Dcheckstyle.skip -DskipTests -Dmaven.javadoc.skip -Dlicense.skip -PjacocoReport verify -pl '!webui,!shaded,!shaded/client,!shaded/hadoop'\n-  # run sonar analysis\n-  mvn $(echo \"${ALLUXIO_SONAR_ARGS}\") sonar:sonar\n+RUN_MAVEN=\"false\"\n+RUN_DOC_CHECK=\"false\"\n+if [ -z \"${TARGET_BRANCH}\" ]; then\n+  # if no target branch is specified, run all checks\n+  RUN_MAVEN=\"true\"\n+  RUN_DOC_CHECK=\"true\"\n+else\n+  git --no-pager diff \"refs/remotes/origin/${TARGET_BRANCH}\" --name-only > prFiles.diff\n+  echo \"PR diff is:\"\n+  cat prFiles.diff\n+\n+  while IFS=\"\" read -r filepath || [ -n \"$filepath\" ]; do\n+    if [[ ${filepath} =~ ^docs/.* ]]; then\n+      # if any file starts with \"docs/\", run doc check\n+      RUN_DOC_CHECK=\"true\"\n+    else\n+      # if any other files are in the diff, run maven\n+      RUN_MAVEN=\"true\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3NzU0Mw=="}, "originalCommit": {"oid": "ebd4fc28e25bc7c5355841e503d4877b7520b50d"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjM2NDgxOnYy", "diffSide": "RIGHT", "path": "dev/jenkins/build.sh", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTozNDoxNlrOGQPGsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOTozNDoxNlrOGQPGsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3Nzg3Mw==", "bodyText": "similarly, if there's no files in the diff and we just want to generate sonar reports, how will we do that now?", "url": "https://github.com/Alluxio/alluxio/pull/11376#discussion_r419677873", "createdAt": "2020-05-04T19:34:16Z", "author": {"login": "ZacBlanco"}, "path": "dev/jenkins/build.sh", "diffHunk": "@@ -13,36 +13,68 @@\n #\n # This script is run from inside the Docker container\n #\n-set -e\n-\n-# Set things up so that the current user has a real name and can authenticate.\n-myuid=$(id -u)\n-mygid=$(id -g)\n-echo \"$myuid:x:$myuid:$mygid:anonymous uid:/home/jenkins:/bin/false\" >> /etc/passwd\n-\n-export MAVEN_OPTS=\"-Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss.SSS\"\n-\n-if [ -z ${ALLUXIO_BUILD_FORKCOUNT} ]\n-then\n-  ALLUXIO_BUILD_FORKCOUNT=4\n-fi\n+set -ex\n \n if [ -n \"${ALLUXIO_GIT_CLEAN}\" ]\n then\n   git clean -fdx\n fi\n-mvn -Duser.home=/home/jenkins -T 4C clean install -Pdeveloper -Dmaven.javadoc.skip -Dsurefire.forkCount=${ALLUXIO_BUILD_FORKCOUNT} $@\n \n-if [ -n \"${ALLUXIO_SONAR_ARGS}\" ]\n-then\n-  # A separate step to run jacoco report, with all the generated coverage data. This requires the\n-  # previous 'install' step to generate the jacoco exec data with the 'jacoco' profile.\n-  #\n-  # Must exclude some of the modules that fail to run verify again without a clean step. This is ok\n-  # since these modules do not contain any source code to track for code coverage.\n-  mvn -T 4C -Dfindbugs.skip -Dcheckstyle.skip -DskipTests -Dmaven.javadoc.skip -Dlicense.skip -PjacocoReport verify -pl '!webui,!shaded,!shaded/client,!shaded/hadoop'\n-  # run sonar analysis\n-  mvn $(echo \"${ALLUXIO_SONAR_ARGS}\") sonar:sonar\n+RUN_MAVEN=\"false\"\n+RUN_DOC_CHECK=\"false\"\n+if [ -z \"${TARGET_BRANCH}\" ]; then\n+  # if no target branch is specified, run all checks\n+  RUN_MAVEN=\"true\"\n+  RUN_DOC_CHECK=\"true\"\n+else\n+  git --no-pager diff \"refs/remotes/origin/${TARGET_BRANCH}\" --name-only > prFiles.diff\n+  echo \"PR diff is:\"\n+  cat prFiles.diff\n+\n+  while IFS=\"\" read -r filepath || [ -n \"$filepath\" ]; do\n+    if [[ ${filepath} =~ ^docs/.* ]]; then\n+      # if any file starts with \"docs/\", run doc check\n+      RUN_DOC_CHECK=\"true\"\n+    else\n+      # if any other files are in the diff, run maven\n+      RUN_MAVEN=\"true\"\n+    fi\n+  done < prFiles.diff\n+  rm prFiles.diff\n fi\n \n-./dev/scripts/check-docs.sh\n+if [ \"$RUN_MAVEN\" == \"true\" ]; then\n+  # Set things up so that the current user has a real name and can authenticate.\n+  myuid=$(id -u)\n+  mygid=$(id -g)\n+  echo \"$myuid:x:$myuid:$mygid:anonymous uid:/home/jenkins:/bin/false\" >> /etc/passwd\n+\n+  export MAVEN_OPTS=\"-Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss.SSS\"\n+\n+  if [ -z \"${ALLUXIO_BUILD_FORKCOUNT}\" ]\n+  then\n+    ALLUXIO_BUILD_FORKCOUNT=4\n+  fi\n+\n+  mvn -Duser.home=/home/jenkins -T 4C clean install -Pdeveloper -Dmaven.javadoc.skip -Dsurefire.forkCount=${ALLUXIO_BUILD_FORKCOUNT} $@\n+\n+  if [ -n \"${ALLUXIO_SONAR_ARGS}\" ]\n+  then\n+    # A separate step to run jacoco report, with all the generated coverage data. This requires the\n+    # previous 'install' step to generate the jacoco exec data with the 'jacoco' profile.\n+    #\n+    # Must exclude some of the modules that fail to run verify again without a clean step. This is ok\n+    # since these modules do not contain any source code to track for code coverage.\n+    mvn -T 4C -Dfindbugs.skip -Dcheckstyle.skip -DskipTests -Dmaven.javadoc.skip -Dlicense.skip -PjacocoReport verify -pl '!webui,!shaded,!shaded/client,!shaded/hadoop'\n+    # run sonar analysis\n+    mvn $(echo \"${ALLUXIO_SONAR_ARGS}\") sonar:sonar\n+  fi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebd4fc28e25bc7c5355841e503d4877b7520b50d"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjc4MTY1OnYy", "diffSide": "RIGHT", "path": "dev/jenkins/build.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMTozNjozM1rOGQTIcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMTo0OToxNFrOGQTfjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc0Mzg1OA==", "bodyText": "@ZacBlanco i think this check addresses the scenario for the master builds. if this script isn't invoked by the PR build, this env var won't be set => defaults to running everything", "url": "https://github.com/Alluxio/alluxio/pull/11376#discussion_r419743858", "createdAt": "2020-05-04T21:36:33Z", "author": {"login": "Xenorith"}, "path": "dev/jenkins/build.sh", "diffHunk": "@@ -13,36 +13,68 @@\n #\n # This script is run from inside the Docker container\n #\n-set -e\n-\n-# Set things up so that the current user has a real name and can authenticate.\n-myuid=$(id -u)\n-mygid=$(id -g)\n-echo \"$myuid:x:$myuid:$mygid:anonymous uid:/home/jenkins:/bin/false\" >> /etc/passwd\n-\n-export MAVEN_OPTS=\"-Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss.SSS\"\n-\n-if [ -z ${ALLUXIO_BUILD_FORKCOUNT} ]\n-then\n-  ALLUXIO_BUILD_FORKCOUNT=4\n-fi\n+set -ex\n \n if [ -n \"${ALLUXIO_GIT_CLEAN}\" ]\n then\n   git clean -fdx\n fi\n-mvn -Duser.home=/home/jenkins -T 4C clean install -Pdeveloper -Dmaven.javadoc.skip -Dsurefire.forkCount=${ALLUXIO_BUILD_FORKCOUNT} $@\n \n-if [ -n \"${ALLUXIO_SONAR_ARGS}\" ]\n-then\n-  # A separate step to run jacoco report, with all the generated coverage data. This requires the\n-  # previous 'install' step to generate the jacoco exec data with the 'jacoco' profile.\n-  #\n-  # Must exclude some of the modules that fail to run verify again without a clean step. This is ok\n-  # since these modules do not contain any source code to track for code coverage.\n-  mvn -T 4C -Dfindbugs.skip -Dcheckstyle.skip -DskipTests -Dmaven.javadoc.skip -Dlicense.skip -PjacocoReport verify -pl '!webui,!shaded,!shaded/client,!shaded/hadoop'\n-  # run sonar analysis\n-  mvn $(echo \"${ALLUXIO_SONAR_ARGS}\") sonar:sonar\n+RUN_MAVEN=\"false\"\n+RUN_DOC_CHECK=\"false\"\n+if [ -z \"${TARGET_BRANCH}\" ]; then\n+  # if no target branch is specified, run all checks", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebd4fc28e25bc7c5355841e503d4877b7520b50d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc0OTc3NQ==", "bodyText": "got it, thanks!", "url": "https://github.com/Alluxio/alluxio/pull/11376#discussion_r419749775", "createdAt": "2020-05-04T21:49:14Z", "author": {"login": "ZacBlanco"}, "path": "dev/jenkins/build.sh", "diffHunk": "@@ -13,36 +13,68 @@\n #\n # This script is run from inside the Docker container\n #\n-set -e\n-\n-# Set things up so that the current user has a real name and can authenticate.\n-myuid=$(id -u)\n-mygid=$(id -g)\n-echo \"$myuid:x:$myuid:$mygid:anonymous uid:/home/jenkins:/bin/false\" >> /etc/passwd\n-\n-export MAVEN_OPTS=\"-Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss.SSS\"\n-\n-if [ -z ${ALLUXIO_BUILD_FORKCOUNT} ]\n-then\n-  ALLUXIO_BUILD_FORKCOUNT=4\n-fi\n+set -ex\n \n if [ -n \"${ALLUXIO_GIT_CLEAN}\" ]\n then\n   git clean -fdx\n fi\n-mvn -Duser.home=/home/jenkins -T 4C clean install -Pdeveloper -Dmaven.javadoc.skip -Dsurefire.forkCount=${ALLUXIO_BUILD_FORKCOUNT} $@\n \n-if [ -n \"${ALLUXIO_SONAR_ARGS}\" ]\n-then\n-  # A separate step to run jacoco report, with all the generated coverage data. This requires the\n-  # previous 'install' step to generate the jacoco exec data with the 'jacoco' profile.\n-  #\n-  # Must exclude some of the modules that fail to run verify again without a clean step. This is ok\n-  # since these modules do not contain any source code to track for code coverage.\n-  mvn -T 4C -Dfindbugs.skip -Dcheckstyle.skip -DskipTests -Dmaven.javadoc.skip -Dlicense.skip -PjacocoReport verify -pl '!webui,!shaded,!shaded/client,!shaded/hadoop'\n-  # run sonar analysis\n-  mvn $(echo \"${ALLUXIO_SONAR_ARGS}\") sonar:sonar\n+RUN_MAVEN=\"false\"\n+RUN_DOC_CHECK=\"false\"\n+if [ -z \"${TARGET_BRANCH}\" ]; then\n+  # if no target branch is specified, run all checks", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc0Mzg1OA=="}, "originalCommit": {"oid": "ebd4fc28e25bc7c5355841e503d4877b7520b50d"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjg5OTY4OnYy", "diffSide": "RIGHT", "path": "dev/jenkins/build.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjoxNzoxOVrOGQUPBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjoxNzoxOVrOGQUPBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc2MTkyNg==", "bodyText": "@Xenorith the following under integration also do not require a maven build: dataproc, docker, emr, kuberneres, vagrant", "url": "https://github.com/Alluxio/alluxio/pull/11376#discussion_r419761926", "createdAt": "2020-05-04T22:17:19Z", "author": {"login": "madanadit"}, "path": "dev/jenkins/build.sh", "diffHunk": "@@ -13,36 +13,68 @@\n #\n # This script is run from inside the Docker container\n #\n-set -e\n-\n-# Set things up so that the current user has a real name and can authenticate.\n-myuid=$(id -u)\n-mygid=$(id -g)\n-echo \"$myuid:x:$myuid:$mygid:anonymous uid:/home/jenkins:/bin/false\" >> /etc/passwd\n-\n-export MAVEN_OPTS=\"-Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss.SSS\"\n-\n-if [ -z ${ALLUXIO_BUILD_FORKCOUNT} ]\n-then\n-  ALLUXIO_BUILD_FORKCOUNT=4\n-fi\n+set -ex\n \n if [ -n \"${ALLUXIO_GIT_CLEAN}\" ]\n then\n   git clean -fdx\n fi\n-mvn -Duser.home=/home/jenkins -T 4C clean install -Pdeveloper -Dmaven.javadoc.skip -Dsurefire.forkCount=${ALLUXIO_BUILD_FORKCOUNT} $@\n \n-if [ -n \"${ALLUXIO_SONAR_ARGS}\" ]\n-then\n-  # A separate step to run jacoco report, with all the generated coverage data. This requires the\n-  # previous 'install' step to generate the jacoco exec data with the 'jacoco' profile.\n-  #\n-  # Must exclude some of the modules that fail to run verify again without a clean step. This is ok\n-  # since these modules do not contain any source code to track for code coverage.\n-  mvn -T 4C -Dfindbugs.skip -Dcheckstyle.skip -DskipTests -Dmaven.javadoc.skip -Dlicense.skip -PjacocoReport verify -pl '!webui,!shaded,!shaded/client,!shaded/hadoop'\n-  # run sonar analysis\n-  mvn $(echo \"${ALLUXIO_SONAR_ARGS}\") sonar:sonar\n+RUN_MAVEN=\"false\"\n+RUN_DOC_CHECK=\"false\"\n+if [ -z \"${TARGET_BRANCH}\" ]; then\n+  # if no target branch is specified, run all checks\n+  RUN_MAVEN=\"true\"\n+  RUN_DOC_CHECK=\"true\"\n+else\n+  git --no-pager diff \"refs/remotes/origin/${TARGET_BRANCH}\" --name-only > prFiles.diff\n+  echo \"PR diff is:\"\n+  cat prFiles.diff\n+\n+  while IFS=\"\" read -r filepath || [ -n \"$filepath\" ]; do\n+    if [[ ${filepath} =~ ^docs/.* ]]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebd4fc28e25bc7c5355841e503d4877b7520b50d"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1696, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}