{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMzM1MDY3", "number": 12662, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwODozNzoxOFrOFHEvpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwMzoyNjo1N1rOFN-ItA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTYyMDg0OnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/templates/logging/deployment.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwODozNzoxOFrOIIYP2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxMjozMjoxN1rOIM-Qdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY1Njc5NA==", "bodyText": "If this function is not in use anywhere else, then it can be removed and code can be simplified\n        resources:\n{{ toYaml .Values.logserver.resources | indent 10 }}", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r545656794", "createdAt": "2020-12-18T08:37:18Z", "author": {"login": "nirav-chotai"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/logging/deployment.yaml", "diffHunk": "@@ -0,0 +1,101 @@\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+{{ if .Values.logserver.enabled -}}\n+{{- $name := include \"alluxio.name\" . }}\n+{{- $fullName := include \"alluxio.fullname\" . }}\n+{{- $chart := include \"alluxio.chart\" . }}\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  name: {{ $fullName }}-logserver\n+  labels:\n+    name: {{ $fullName }}-logserver\n+    app: {{ $name }}\n+    chart: {{ $chart }}\n+    release: {{ .Release.Name }}\n+    heritage: {{ .Release.Service }}\n+    role: alluxio-logserver\n+spec:\n+  replicas: 1\n+  selector:\n+    matchLabels:\n+      app: {{ $name }}\n+      role: alluxio-logserver\n+      name: {{ $fullName }}-logserver\n+  template:\n+    metadata:\n+      labels:\n+        name: {{ $fullName }}-logserver\n+        app: {{ $name }}\n+        chart: {{ $chart }}\n+        release: {{ .Release.Name }}\n+        heritage: {{ .Release.Service }}\n+        role: alluxio-logserver\n+    spec:\n+      containers:\n+        - name: alluxio-logserver\n+          image: {{ .Values.image }}:{{ .Values.imageTag }}\n+          imagePullPolicy: {{ .Values.imagePullPolicy }}\n+          securityContext:\n+            runAsUser: {{ .Values.user }}\n+            runAsGroup: {{ .Values.group }}\n+          {{- if .Values.logserver.resources  }}\n+{{ include \"alluxio.logserver.resources\" . | indent 10 }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eee923d98ca45932f33f34727daafccd7cf73989"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ3Mzg0Ng==", "bodyText": "IMO this makes the code shorter with fewer if-elses that break a future user's indentation. So I lean towards having a function.", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r550473846", "createdAt": "2020-12-31T12:32:17Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/logging/deployment.yaml", "diffHunk": "@@ -0,0 +1,101 @@\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+{{ if .Values.logserver.enabled -}}\n+{{- $name := include \"alluxio.name\" . }}\n+{{- $fullName := include \"alluxio.fullname\" . }}\n+{{- $chart := include \"alluxio.chart\" . }}\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  name: {{ $fullName }}-logserver\n+  labels:\n+    name: {{ $fullName }}-logserver\n+    app: {{ $name }}\n+    chart: {{ $chart }}\n+    release: {{ .Release.Name }}\n+    heritage: {{ .Release.Service }}\n+    role: alluxio-logserver\n+spec:\n+  replicas: 1\n+  selector:\n+    matchLabels:\n+      app: {{ $name }}\n+      role: alluxio-logserver\n+      name: {{ $fullName }}-logserver\n+  template:\n+    metadata:\n+      labels:\n+        name: {{ $fullName }}-logserver\n+        app: {{ $name }}\n+        chart: {{ $chart }}\n+        release: {{ .Release.Name }}\n+        heritage: {{ .Release.Service }}\n+        role: alluxio-logserver\n+    spec:\n+      containers:\n+        - name: alluxio-logserver\n+          image: {{ .Values.image }}:{{ .Values.imageTag }}\n+          imagePullPolicy: {{ .Values.imagePullPolicy }}\n+          securityContext:\n+            runAsUser: {{ .Values.user }}\n+            runAsGroup: {{ .Values.group }}\n+          {{- if .Values.logserver.resources  }}\n+{{ include \"alluxio.logserver.resources\" . | indent 10 }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY1Njc5NA=="}, "originalCommit": {"oid": "eee923d98ca45932f33f34727daafccd7cf73989"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDEwNTg5OnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/templates/_helpers.tpl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMDoxMDozOFrOIIcz-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMDoxMDozOFrOIIcz-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczMTU3Nw==", "bodyText": "This function is really not needed.", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r545731577", "createdAt": "2020-12-18T10:10:38Z", "author": {"login": "nirav-chotai"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/_helpers.tpl", "diffHunk": "@@ -119,6 +119,28 @@ resources:\n     {{- end }}\n {{- end -}}\n \n+{{- define \"alluxio.logserver.resources\" -}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1a13e944a47e2c2e491a61e10f0c3e79e87c690"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDExOTgyOnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "isResolved": true, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMDoxNDozN1rOIIc8TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxMTozMTo1MFrOIO7O4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczMzcwOQ==", "bodyText": "What if I do not want to use any additional volume for logging as my ephermal storage is enough for my requirement, then I do not see any option here. I just want to run a remote logging server without any additional volume.", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r545733709", "createdAt": "2020-12-18T10:14:37Z", "author": {"login": "nirav-chotai"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -310,3 +310,47 @@ fuse:\n #     alluxio-hdfs-config: hdfsConfig\n #   worker: # Shared by worker and jobWorker containers\n #     alluxio-hdfs-config: hdfsConfig\n+\n+# Remote logging server\n+logserver:\n+  enabled: true\n+  replicas: 1\n+  env:\n+  # Extra environment variables for the logserver pod\n+  # Example:\n+  # JAVA_HOME: /opt/java\n+  args: # Arguments to Docker entrypoint\n+    - logserver\n+  # Properties for the logserver component\n+  properties:\n+  resources:\n+    # The default xmx is 8G\n+    limits:\n+      cpu: \"4\"\n+      memory: \"8G\"\n+    requests:\n+      cpu: \"1\"\n+      memory: \"1G\"\n+  ports:\n+    logging: 45600\n+  hostPID: false\n+  hostNetwork: false\n+  # dnsPolicy will be ClusterFirstWithHostNet if hostNetwork: true\n+  # and ClusterFirst if hostNetwork: false\n+  # You can specify dnsPolicy here to override this inference\n+  # dnsPolicy: ClusterFirst\n+  # JVM options specific to the logserver container\n+  jvmOptions:\n+  nodeSelector: {}\n+  # volumeType controls the type of log volume.\n+  # It can be \"persistentVolumeClaim\" or \"hostPath\"\n+  volumeType: persistentVolumeClaim\n+  size: 4Gi\n+  # Attributes to use if the log volume is PVC\n+  pvcName: alluxio-logserver-logs\n+  accessModes:\n+    - ReadWriteOnce\n+  storageClass: standard\n+  # Attributes to use if the log volume is hostPath\n+  hostPath: \"/tmp/alluxio-logs\" # The hostPath directory to use", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1a13e944a47e2c2e491a61e10f0c3e79e87c690"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczNzk4Mg==", "bodyText": "Could you elaborate a bit how you intend to provision your ephemeral storage for the logserver? In other words, i'm curious how much disk is given when you spawn a pod for the log server.\nIf you are thinking about test usages where provisioning a PV would be overhead or a user, does supporting emptyDir make sense here?", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r545737982", "createdAt": "2020-12-18T10:22:30Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -310,3 +310,47 @@ fuse:\n #     alluxio-hdfs-config: hdfsConfig\n #   worker: # Shared by worker and jobWorker containers\n #     alluxio-hdfs-config: hdfsConfig\n+\n+# Remote logging server\n+logserver:\n+  enabled: true\n+  replicas: 1\n+  env:\n+  # Extra environment variables for the logserver pod\n+  # Example:\n+  # JAVA_HOME: /opt/java\n+  args: # Arguments to Docker entrypoint\n+    - logserver\n+  # Properties for the logserver component\n+  properties:\n+  resources:\n+    # The default xmx is 8G\n+    limits:\n+      cpu: \"4\"\n+      memory: \"8G\"\n+    requests:\n+      cpu: \"1\"\n+      memory: \"1G\"\n+  ports:\n+    logging: 45600\n+  hostPID: false\n+  hostNetwork: false\n+  # dnsPolicy will be ClusterFirstWithHostNet if hostNetwork: true\n+  # and ClusterFirst if hostNetwork: false\n+  # You can specify dnsPolicy here to override this inference\n+  # dnsPolicy: ClusterFirst\n+  # JVM options specific to the logserver container\n+  jvmOptions:\n+  nodeSelector: {}\n+  # volumeType controls the type of log volume.\n+  # It can be \"persistentVolumeClaim\" or \"hostPath\"\n+  volumeType: persistentVolumeClaim\n+  size: 4Gi\n+  # Attributes to use if the log volume is PVC\n+  pvcName: alluxio-logserver-logs\n+  accessModes:\n+    - ReadWriteOnce\n+  storageClass: standard\n+  # Attributes to use if the log volume is hostPath\n+  hostPath: \"/tmp/alluxio-logs\" # The hostPath directory to use", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczMzcwOQ=="}, "originalCommit": {"oid": "e1a13e944a47e2c2e491a61e10f0c3e79e87c690"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc2NTQxOA==", "bodyText": "@jiacheliu3 I was talking about not adding any volume at all. I just want to run logserver based on given memory (or may be spilling to disk) but not want to attach any volume for storing logs.\nspec.containers[].resources.limits.ephemeral-storage\nspec.containers[].resources.requests.ephemeral-storage\n\nRef: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#configurations-for-local-ephemeral-storage", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r545765418", "createdAt": "2020-12-18T11:14:32Z", "author": {"login": "nirav-chotai"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -310,3 +310,47 @@ fuse:\n #     alluxio-hdfs-config: hdfsConfig\n #   worker: # Shared by worker and jobWorker containers\n #     alluxio-hdfs-config: hdfsConfig\n+\n+# Remote logging server\n+logserver:\n+  enabled: true\n+  replicas: 1\n+  env:\n+  # Extra environment variables for the logserver pod\n+  # Example:\n+  # JAVA_HOME: /opt/java\n+  args: # Arguments to Docker entrypoint\n+    - logserver\n+  # Properties for the logserver component\n+  properties:\n+  resources:\n+    # The default xmx is 8G\n+    limits:\n+      cpu: \"4\"\n+      memory: \"8G\"\n+    requests:\n+      cpu: \"1\"\n+      memory: \"1G\"\n+  ports:\n+    logging: 45600\n+  hostPID: false\n+  hostNetwork: false\n+  # dnsPolicy will be ClusterFirstWithHostNet if hostNetwork: true\n+  # and ClusterFirst if hostNetwork: false\n+  # You can specify dnsPolicy here to override this inference\n+  # dnsPolicy: ClusterFirst\n+  # JVM options specific to the logserver container\n+  jvmOptions:\n+  nodeSelector: {}\n+  # volumeType controls the type of log volume.\n+  # It can be \"persistentVolumeClaim\" or \"hostPath\"\n+  volumeType: persistentVolumeClaim\n+  size: 4Gi\n+  # Attributes to use if the log volume is PVC\n+  pvcName: alluxio-logserver-logs\n+  accessModes:\n+    - ReadWriteOnce\n+  storageClass: standard\n+  # Attributes to use if the log volume is hostPath\n+  hostPath: \"/tmp/alluxio-logs\" # The hostPath directory to use", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczMzcwOQ=="}, "originalCommit": {"oid": "e1a13e944a47e2c2e491a61e10f0c3e79e87c690"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE4MjQxMQ==", "bodyText": "@nirav-chotai Sure you do have control to the ephemeral storage, but I wouldn't recommend it because I feel it contradicts (at least partly) with why we want a logserver. To me the benefits of a log server are:\n\nWe have a centralized location for logs\nWe hold the logs when pods die\n\nIf we have the logs on the logserver but never persist that, we can still lose the logs. The logserver may be evicted for whatever reason, and you lose the logs. In the helm chart, the recommended (default) config will force the users to create and use PVs in multiple places. That was intended because we want the users to think about persistence for things like journal and worker's tiered storage. The same idea would apply to logs.\nFrom that perspective, I guess my bottom line would be: it might be okay to allow using no volume at all, but that should be explicitly turned off. In other words, using a volume should be the default to be fool-proof.\nMaybe you have your considerations or your design on how to use the logserver in your architecture? What are the benefits for you to only use ephemeral storage for the log server?", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r546182411", "createdAt": "2020-12-19T03:12:03Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -310,3 +310,47 @@ fuse:\n #     alluxio-hdfs-config: hdfsConfig\n #   worker: # Shared by worker and jobWorker containers\n #     alluxio-hdfs-config: hdfsConfig\n+\n+# Remote logging server\n+logserver:\n+  enabled: true\n+  replicas: 1\n+  env:\n+  # Extra environment variables for the logserver pod\n+  # Example:\n+  # JAVA_HOME: /opt/java\n+  args: # Arguments to Docker entrypoint\n+    - logserver\n+  # Properties for the logserver component\n+  properties:\n+  resources:\n+    # The default xmx is 8G\n+    limits:\n+      cpu: \"4\"\n+      memory: \"8G\"\n+    requests:\n+      cpu: \"1\"\n+      memory: \"1G\"\n+  ports:\n+    logging: 45600\n+  hostPID: false\n+  hostNetwork: false\n+  # dnsPolicy will be ClusterFirstWithHostNet if hostNetwork: true\n+  # and ClusterFirst if hostNetwork: false\n+  # You can specify dnsPolicy here to override this inference\n+  # dnsPolicy: ClusterFirst\n+  # JVM options specific to the logserver container\n+  jvmOptions:\n+  nodeSelector: {}\n+  # volumeType controls the type of log volume.\n+  # It can be \"persistentVolumeClaim\" or \"hostPath\"\n+  volumeType: persistentVolumeClaim\n+  size: 4Gi\n+  # Attributes to use if the log volume is PVC\n+  pvcName: alluxio-logserver-logs\n+  accessModes:\n+    - ReadWriteOnce\n+  storageClass: standard\n+  # Attributes to use if the log volume is hostPath\n+  hostPath: \"/tmp/alluxio-logs\" # The hostPath directory to use", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczMzcwOQ=="}, "originalCommit": {"oid": "e1a13e944a47e2c2e491a61e10f0c3e79e87c690"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE4NDI1NQ==", "bodyText": "Yes, you can enforce the default to have volume but there should be a way to use logserver without volume.\nMy use case, in dev like environments I would like to run separate logserver so that whenever I rollout my changes (frequent for dev), it will persist good amount of logs in the logserver (based on the capacity of the logserver pod) while recreating only master and worker pods. Production like environments I am pretty sure anyone would go for PVC only.\nIMO, anyone would try and test in dev first and if things work, then they configure PVC (not necessarily available in all environments) to meet production requirements.", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r546184255", "createdAt": "2020-12-19T03:31:08Z", "author": {"login": "nirav-chotai"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -310,3 +310,47 @@ fuse:\n #     alluxio-hdfs-config: hdfsConfig\n #   worker: # Shared by worker and jobWorker containers\n #     alluxio-hdfs-config: hdfsConfig\n+\n+# Remote logging server\n+logserver:\n+  enabled: true\n+  replicas: 1\n+  env:\n+  # Extra environment variables for the logserver pod\n+  # Example:\n+  # JAVA_HOME: /opt/java\n+  args: # Arguments to Docker entrypoint\n+    - logserver\n+  # Properties for the logserver component\n+  properties:\n+  resources:\n+    # The default xmx is 8G\n+    limits:\n+      cpu: \"4\"\n+      memory: \"8G\"\n+    requests:\n+      cpu: \"1\"\n+      memory: \"1G\"\n+  ports:\n+    logging: 45600\n+  hostPID: false\n+  hostNetwork: false\n+  # dnsPolicy will be ClusterFirstWithHostNet if hostNetwork: true\n+  # and ClusterFirst if hostNetwork: false\n+  # You can specify dnsPolicy here to override this inference\n+  # dnsPolicy: ClusterFirst\n+  # JVM options specific to the logserver container\n+  jvmOptions:\n+  nodeSelector: {}\n+  # volumeType controls the type of log volume.\n+  # It can be \"persistentVolumeClaim\" or \"hostPath\"\n+  volumeType: persistentVolumeClaim\n+  size: 4Gi\n+  # Attributes to use if the log volume is PVC\n+  pvcName: alluxio-logserver-logs\n+  accessModes:\n+    - ReadWriteOnce\n+  storageClass: standard\n+  # Attributes to use if the log volume is hostPath\n+  hostPath: \"/tmp/alluxio-logs\" # The hostPath directory to use", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczMzcwOQ=="}, "originalCommit": {"oid": "e1a13e944a47e2c2e491a61e10f0c3e79e87c690"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE4NDQyNw==", "bodyText": "And yes, your both points are valid even if I deploy logserver without volume\nWe have a centralized location for logs (yes)\nWe hold the logs when pods die (yes, logs will be there though master and workers pod die and re-created).", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r546184427", "createdAt": "2020-12-19T03:33:30Z", "author": {"login": "nirav-chotai"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -310,3 +310,47 @@ fuse:\n #     alluxio-hdfs-config: hdfsConfig\n #   worker: # Shared by worker and jobWorker containers\n #     alluxio-hdfs-config: hdfsConfig\n+\n+# Remote logging server\n+logserver:\n+  enabled: true\n+  replicas: 1\n+  env:\n+  # Extra environment variables for the logserver pod\n+  # Example:\n+  # JAVA_HOME: /opt/java\n+  args: # Arguments to Docker entrypoint\n+    - logserver\n+  # Properties for the logserver component\n+  properties:\n+  resources:\n+    # The default xmx is 8G\n+    limits:\n+      cpu: \"4\"\n+      memory: \"8G\"\n+    requests:\n+      cpu: \"1\"\n+      memory: \"1G\"\n+  ports:\n+    logging: 45600\n+  hostPID: false\n+  hostNetwork: false\n+  # dnsPolicy will be ClusterFirstWithHostNet if hostNetwork: true\n+  # and ClusterFirst if hostNetwork: false\n+  # You can specify dnsPolicy here to override this inference\n+  # dnsPolicy: ClusterFirst\n+  # JVM options specific to the logserver container\n+  jvmOptions:\n+  nodeSelector: {}\n+  # volumeType controls the type of log volume.\n+  # It can be \"persistentVolumeClaim\" or \"hostPath\"\n+  volumeType: persistentVolumeClaim\n+  size: 4Gi\n+  # Attributes to use if the log volume is PVC\n+  pvcName: alluxio-logserver-logs\n+  accessModes:\n+    - ReadWriteOnce\n+  storageClass: standard\n+  # Attributes to use if the log volume is hostPath\n+  hostPath: \"/tmp/alluxio-logs\" # The hostPath directory to use", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczMzcwOQ=="}, "originalCommit": {"oid": "e1a13e944a47e2c2e491a61e10f0c3e79e87c690"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ3MzQ5OA==", "bodyText": "@nirav-chotai Sorry for the late reply. I get your point, not needing to specify a volume in a test env is a valid use case. I wonder how different to you is 1) do not have a volume vs 2) use emptyDir?", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r550473498", "createdAt": "2020-12-31T12:29:54Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -310,3 +310,47 @@ fuse:\n #     alluxio-hdfs-config: hdfsConfig\n #   worker: # Shared by worker and jobWorker containers\n #     alluxio-hdfs-config: hdfsConfig\n+\n+# Remote logging server\n+logserver:\n+  enabled: true\n+  replicas: 1\n+  env:\n+  # Extra environment variables for the logserver pod\n+  # Example:\n+  # JAVA_HOME: /opt/java\n+  args: # Arguments to Docker entrypoint\n+    - logserver\n+  # Properties for the logserver component\n+  properties:\n+  resources:\n+    # The default xmx is 8G\n+    limits:\n+      cpu: \"4\"\n+      memory: \"8G\"\n+    requests:\n+      cpu: \"1\"\n+      memory: \"1G\"\n+  ports:\n+    logging: 45600\n+  hostPID: false\n+  hostNetwork: false\n+  # dnsPolicy will be ClusterFirstWithHostNet if hostNetwork: true\n+  # and ClusterFirst if hostNetwork: false\n+  # You can specify dnsPolicy here to override this inference\n+  # dnsPolicy: ClusterFirst\n+  # JVM options specific to the logserver container\n+  jvmOptions:\n+  nodeSelector: {}\n+  # volumeType controls the type of log volume.\n+  # It can be \"persistentVolumeClaim\" or \"hostPath\"\n+  volumeType: persistentVolumeClaim\n+  size: 4Gi\n+  # Attributes to use if the log volume is PVC\n+  pvcName: alluxio-logserver-logs\n+  accessModes:\n+    - ReadWriteOnce\n+  storageClass: standard\n+  # Attributes to use if the log volume is hostPath\n+  hostPath: \"/tmp/alluxio-logs\" # The hostPath directory to use", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczMzcwOQ=="}, "originalCommit": {"oid": "e1a13e944a47e2c2e491a61e10f0c3e79e87c690"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ3NzMxNQ==", "bodyText": "@nirav-chotai I can do as my last commit  to add a none option that creates no volume. But if emptyDir can just serve, I lean towards not adding another switch.", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r550477315", "createdAt": "2020-12-31T12:52:42Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -310,3 +310,47 @@ fuse:\n #     alluxio-hdfs-config: hdfsConfig\n #   worker: # Shared by worker and jobWorker containers\n #     alluxio-hdfs-config: hdfsConfig\n+\n+# Remote logging server\n+logserver:\n+  enabled: true\n+  replicas: 1\n+  env:\n+  # Extra environment variables for the logserver pod\n+  # Example:\n+  # JAVA_HOME: /opt/java\n+  args: # Arguments to Docker entrypoint\n+    - logserver\n+  # Properties for the logserver component\n+  properties:\n+  resources:\n+    # The default xmx is 8G\n+    limits:\n+      cpu: \"4\"\n+      memory: \"8G\"\n+    requests:\n+      cpu: \"1\"\n+      memory: \"1G\"\n+  ports:\n+    logging: 45600\n+  hostPID: false\n+  hostNetwork: false\n+  # dnsPolicy will be ClusterFirstWithHostNet if hostNetwork: true\n+  # and ClusterFirst if hostNetwork: false\n+  # You can specify dnsPolicy here to override this inference\n+  # dnsPolicy: ClusterFirst\n+  # JVM options specific to the logserver container\n+  jvmOptions:\n+  nodeSelector: {}\n+  # volumeType controls the type of log volume.\n+  # It can be \"persistentVolumeClaim\" or \"hostPath\"\n+  volumeType: persistentVolumeClaim\n+  size: 4Gi\n+  # Attributes to use if the log volume is PVC\n+  pvcName: alluxio-logserver-logs\n+  accessModes:\n+    - ReadWriteOnce\n+  storageClass: standard\n+  # Attributes to use if the log volume is hostPath\n+  hostPath: \"/tmp/alluxio-logs\" # The hostPath directory to use", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczMzcwOQ=="}, "originalCommit": {"oid": "e1a13e944a47e2c2e491a61e10f0c3e79e87c690"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ3ODM5Mw==", "bodyText": "I think I forgot to add emptyDir to the available options. Initially there was only pvc and hostPath. If there were only pvc and hostPath, I think it makes much sense to ask for sth that does need a volume like none. But if emptyDir is available, I think setting this option to emptyDir will serve your need.", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r550478393", "createdAt": "2020-12-31T12:58:41Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -310,3 +310,47 @@ fuse:\n #     alluxio-hdfs-config: hdfsConfig\n #   worker: # Shared by worker and jobWorker containers\n #     alluxio-hdfs-config: hdfsConfig\n+\n+# Remote logging server\n+logserver:\n+  enabled: true\n+  replicas: 1\n+  env:\n+  # Extra environment variables for the logserver pod\n+  # Example:\n+  # JAVA_HOME: /opt/java\n+  args: # Arguments to Docker entrypoint\n+    - logserver\n+  # Properties for the logserver component\n+  properties:\n+  resources:\n+    # The default xmx is 8G\n+    limits:\n+      cpu: \"4\"\n+      memory: \"8G\"\n+    requests:\n+      cpu: \"1\"\n+      memory: \"1G\"\n+  ports:\n+    logging: 45600\n+  hostPID: false\n+  hostNetwork: false\n+  # dnsPolicy will be ClusterFirstWithHostNet if hostNetwork: true\n+  # and ClusterFirst if hostNetwork: false\n+  # You can specify dnsPolicy here to override this inference\n+  # dnsPolicy: ClusterFirst\n+  # JVM options specific to the logserver container\n+  jvmOptions:\n+  nodeSelector: {}\n+  # volumeType controls the type of log volume.\n+  # It can be \"persistentVolumeClaim\" or \"hostPath\"\n+  volumeType: persistentVolumeClaim\n+  size: 4Gi\n+  # Attributes to use if the log volume is PVC\n+  pvcName: alluxio-logserver-logs\n+  accessModes:\n+    - ReadWriteOnce\n+  storageClass: standard\n+  # Attributes to use if the log volume is hostPath\n+  hostPath: \"/tmp/alluxio-logs\" # The hostPath directory to use", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczMzcwOQ=="}, "originalCommit": {"oid": "e1a13e944a47e2c2e491a61e10f0c3e79e87c690"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQ3MjYxMw==", "bodyText": "@jiacheliu3 Sorry, I was not available in the last few days. Yes, emptyDir will serve the need.", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r552472613", "createdAt": "2021-01-06T09:47:52Z", "author": {"login": "nirav-chotai"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -310,3 +310,47 @@ fuse:\n #     alluxio-hdfs-config: hdfsConfig\n #   worker: # Shared by worker and jobWorker containers\n #     alluxio-hdfs-config: hdfsConfig\n+\n+# Remote logging server\n+logserver:\n+  enabled: true\n+  replicas: 1\n+  env:\n+  # Extra environment variables for the logserver pod\n+  # Example:\n+  # JAVA_HOME: /opt/java\n+  args: # Arguments to Docker entrypoint\n+    - logserver\n+  # Properties for the logserver component\n+  properties:\n+  resources:\n+    # The default xmx is 8G\n+    limits:\n+      cpu: \"4\"\n+      memory: \"8G\"\n+    requests:\n+      cpu: \"1\"\n+      memory: \"1G\"\n+  ports:\n+    logging: 45600\n+  hostPID: false\n+  hostNetwork: false\n+  # dnsPolicy will be ClusterFirstWithHostNet if hostNetwork: true\n+  # and ClusterFirst if hostNetwork: false\n+  # You can specify dnsPolicy here to override this inference\n+  # dnsPolicy: ClusterFirst\n+  # JVM options specific to the logserver container\n+  jvmOptions:\n+  nodeSelector: {}\n+  # volumeType controls the type of log volume.\n+  # It can be \"persistentVolumeClaim\" or \"hostPath\"\n+  volumeType: persistentVolumeClaim\n+  size: 4Gi\n+  # Attributes to use if the log volume is PVC\n+  pvcName: alluxio-logserver-logs\n+  accessModes:\n+    - ReadWriteOnce\n+  storageClass: standard\n+  # Attributes to use if the log volume is hostPath\n+  hostPath: \"/tmp/alluxio-logs\" # The hostPath directory to use", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczMzcwOQ=="}, "originalCommit": {"oid": "e1a13e944a47e2c2e491a61e10f0c3e79e87c690"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjUyMTQ0Mw==", "bodyText": "Cool, will remove option none", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r552521443", "createdAt": "2021-01-06T11:31:50Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -310,3 +310,47 @@ fuse:\n #     alluxio-hdfs-config: hdfsConfig\n #   worker: # Shared by worker and jobWorker containers\n #     alluxio-hdfs-config: hdfsConfig\n+\n+# Remote logging server\n+logserver:\n+  enabled: true\n+  replicas: 1\n+  env:\n+  # Extra environment variables for the logserver pod\n+  # Example:\n+  # JAVA_HOME: /opt/java\n+  args: # Arguments to Docker entrypoint\n+    - logserver\n+  # Properties for the logserver component\n+  properties:\n+  resources:\n+    # The default xmx is 8G\n+    limits:\n+      cpu: \"4\"\n+      memory: \"8G\"\n+    requests:\n+      cpu: \"1\"\n+      memory: \"1G\"\n+  ports:\n+    logging: 45600\n+  hostPID: false\n+  hostNetwork: false\n+  # dnsPolicy will be ClusterFirstWithHostNet if hostNetwork: true\n+  # and ClusterFirst if hostNetwork: false\n+  # You can specify dnsPolicy here to override this inference\n+  # dnsPolicy: ClusterFirst\n+  # JVM options specific to the logserver container\n+  jvmOptions:\n+  nodeSelector: {}\n+  # volumeType controls the type of log volume.\n+  # It can be \"persistentVolumeClaim\" or \"hostPath\"\n+  volumeType: persistentVolumeClaim\n+  size: 4Gi\n+  # Attributes to use if the log volume is PVC\n+  pvcName: alluxio-logserver-logs\n+  accessModes:\n+    - ReadWriteOnce\n+  storageClass: standard\n+  # Attributes to use if the log volume is hostPath\n+  hostPath: \"/tmp/alluxio-logs\" # The hostPath directory to use", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTczMzcwOQ=="}, "originalCommit": {"oid": "e1a13e944a47e2c2e491a61e10f0c3e79e87c690"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NTk3OTgzOnYy", "diffSide": "RIGHT", "path": "integration/docker/entrypoint.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMlQwNTozMDoxMlrOINU-Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMlQwNTozMDoxMlrOINU-Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDg0NTk2Mw==", "bodyText": "Comment is stale. And why are there 2 logserver commands?", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r550845963", "createdAt": "2021-01-02T05:30:12Z", "author": {"login": "madanadit"}, "path": "integration/docker/entrypoint.sh", "diffHunk": "@@ -51,6 +51,7 @@ function printUsage {\n   echo -e \" proxy                        \\t Start Alluxio proxy\"\n   echo -e \" fuse [--fuse-opts=opt1,...]  \\t Start Alluxio FUSE file system, option --fuse-opts expects a list of fuse options separated by comma\"\n   echo -e \" logserver                    \\t Start Alluxio log server\"\n+  echo -e \" logserver [--fuse-opts=opt1,...]  \\t Start Alluxio FUSE file system, option --fuse-opts expects a list of fuse options separated by comma\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "272b55423681ed11bd64ed3ecd3991c9f00b333e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NzI2MjY3OnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/templates/worker/daemonset.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwOTo1NjowOVrOIO4hYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwOTo1NjowOVrOIO4hYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQ3NzAyNw==", "bodyText": "Where this is going to be used in the worker daemonset?", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r552477027", "createdAt": "2021-01-06T09:56:09Z", "author": {"login": "nirav-chotai"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/worker/daemonset.yaml", "diffHunk": "@@ -14,7 +14,7 @@\n {{- $hostNetwork := .Values.worker.hostNetwork }}\n {{- $hostPID := .Values.worker.hostPID }}\n {{- $fullName := include \"alluxio.fullname\" . }}\n-\n+{{- $logServerEnabled := .Values.logserver.enabled }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bda83eface068b4f3fc6225d0f5b03a48afa5da"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NzI4MDU0OnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/templates/logserver/log-pvc.yaml", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxMDowMTo1NlrOIO4sYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwMjo1MzoxMVrOIQ-NPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQ3OTg0Mg==", "bodyText": "How this will work in the case of dynamic provisioning of distributed storage?\nWith Ceph, I do not provision PV as it will automatically be created. And if that automatically created PV does not have these labels, then it will not be bound to the PVC, right?", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r552479842", "createdAt": "2021-01-06T10:01:56Z", "author": {"login": "nirav-chotai"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/logserver/log-pvc.yaml", "diffHunk": "@@ -0,0 +1,39 @@\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+{{ $enabled := .Values.logserver.enabled -}}\n+{{ $needPVC := eq .Values.logserver.volumeType \"persistentVolumeClaim\" -}}\n+{{ if and .Values.logserver.enabled $needPVC -}}\n+apiVersion: v1\n+kind: PersistentVolumeClaim\n+metadata:\n+  name: {{ .Values.logserver.pvcName }}\n+  labels:\n+    app: {{ template \"alluxio.name\" . }}\n+    chart: {{ template \"alluxio.chart\" . }}\n+    release: {{ .Release.Name }}\n+    heritage: {{ .Release.Service }}\n+    role: alluxio-logserver\n+spec:\n+  volumeMode: Filesystem\n+  resources:\n+    requests:\n+      storage: {{ .Values.logserver.size }}\n+  storageClassName: {{ .Values.logserver.storageClass }}\n+  accessModes:\n+  {{ toYaml .Values.logserver.accessModes | trim | indent 4 }}\n+selector:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bda83eface068b4f3fc6225d0f5b03a48afa5da"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEyNzQyNg==", "bodyText": "@jiacheliu3 , the above selectors, might fail in the case of Ceph PVC.", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r553127426", "createdAt": "2021-01-07T06:09:02Z", "author": {"login": "nirav-chotai"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/logserver/log-pvc.yaml", "diffHunk": "@@ -0,0 +1,39 @@\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+{{ $enabled := .Values.logserver.enabled -}}\n+{{ $needPVC := eq .Values.logserver.volumeType \"persistentVolumeClaim\" -}}\n+{{ if and .Values.logserver.enabled $needPVC -}}\n+apiVersion: v1\n+kind: PersistentVolumeClaim\n+metadata:\n+  name: {{ .Values.logserver.pvcName }}\n+  labels:\n+    app: {{ template \"alluxio.name\" . }}\n+    chart: {{ template \"alluxio.chart\" . }}\n+    release: {{ .Release.Name }}\n+    heritage: {{ .Release.Service }}\n+    role: alluxio-logserver\n+spec:\n+  volumeMode: Filesystem\n+  resources:\n+    requests:\n+      storage: {{ .Values.logserver.size }}\n+  storageClassName: {{ .Values.logserver.storageClass }}\n+  accessModes:\n+  {{ toYaml .Values.logserver.accessModes | trim | indent 4 }}\n+selector:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQ3OTg0Mg=="}, "originalCommit": {"oid": "0bda83eface068b4f3fc6225d0f5b03a48afa5da"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzcxOTMwMA==", "bodyText": "@nirav-chotai That's a very good point.\nStatic (manual) provision\nIf we remove the matchLabels, it's harder to manage for users who are using static provisioning (manual). They may be creating a PV and that got mounted by undesired pods.\nDynamic provision\nI'm not sure if it is possible to request a PV with default labels to a storageClass. Is it possible in your environment? I don't find anything online so I guess not?\nIf by either having matchingLabels or not having it, we have a hard time satisfying some use cases, do you have a better option?\nAdding @madanadit to the discussion too.", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r553719300", "createdAt": "2021-01-08T03:20:39Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/logserver/log-pvc.yaml", "diffHunk": "@@ -0,0 +1,39 @@\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+{{ $enabled := .Values.logserver.enabled -}}\n+{{ $needPVC := eq .Values.logserver.volumeType \"persistentVolumeClaim\" -}}\n+{{ if and .Values.logserver.enabled $needPVC -}}\n+apiVersion: v1\n+kind: PersistentVolumeClaim\n+metadata:\n+  name: {{ .Values.logserver.pvcName }}\n+  labels:\n+    app: {{ template \"alluxio.name\" . }}\n+    chart: {{ template \"alluxio.chart\" . }}\n+    release: {{ .Release.Name }}\n+    heritage: {{ .Release.Service }}\n+    role: alluxio-logserver\n+spec:\n+  volumeMode: Filesystem\n+  resources:\n+    requests:\n+      storage: {{ .Values.logserver.size }}\n+  storageClassName: {{ .Values.logserver.storageClass }}\n+  accessModes:\n+  {{ toYaml .Values.logserver.accessModes | trim | indent 4 }}\n+selector:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQ3OTg0Mg=="}, "originalCommit": {"oid": "0bda83eface068b4f3fc6225d0f5b03a48afa5da"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDY2MjE1Ng==", "bodyText": "@jiacheliu3 , below is an outcome of the current setup:\n...\nspec:\n  volumeMode: Filesystem\n  resources:\n    requests:\n      storage: 4Gi\n  storageClassName: standard\n  accessModes:\n    - ReadWriteOnce\n  selector:\n    matchLabels:\n      app: alluxio\n      release: myrelease\n      heritage: Helm\n      role: alluxio-logserver\n\nI would take care of both the scenarios with the below change:\nIn log-pvc.yaml:\n  {{- with .Values.logserver.pvc.selector }}\n  selector:\n    {{- toYaml . | nindent 4 }}\n  {{- end }}\n\nNow, for the scenario of static/manual provision, in values.yaml:\n# Remote logging server\nlogserver:\n  enabled: true\n  ...\n  pvc:\n    selector:\n      matchLabels:\n        role: alluxio-logserver\n        dc: mydatacenter\n        region: myregion\n\nThe outcome would be like this:\n...\nspec:\n  volumeMode: Filesystem\n  resources:\n    requests:\n      storage: 4Gi\n  storageClassName: standard\n  accessModes:\n      - ReadWriteOnce\n  selector:\n    matchLabels:\n      dc: mydatacenter\n      region: myregion\n      role: alluxio-logserver\n\nAnd, for the scenario of dynamic provision, in values.yaml:\n# Remote logging server\nlogserver:\n  enabled: true\n  ...\n  pvc:\n    selector: {}\n\nThe outcome would be like this:\n...\nspec:\n  volumeMode: Filesystem\n  resources:\n    requests:\n      storage: 4Gi\n  storageClassName: standard\n  accessModes:\n      - ReadWriteOnce", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r554662156", "createdAt": "2021-01-11T02:22:17Z", "author": {"login": "nirav-chotai"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/logserver/log-pvc.yaml", "diffHunk": "@@ -0,0 +1,39 @@\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+{{ $enabled := .Values.logserver.enabled -}}\n+{{ $needPVC := eq .Values.logserver.volumeType \"persistentVolumeClaim\" -}}\n+{{ if and .Values.logserver.enabled $needPVC -}}\n+apiVersion: v1\n+kind: PersistentVolumeClaim\n+metadata:\n+  name: {{ .Values.logserver.pvcName }}\n+  labels:\n+    app: {{ template \"alluxio.name\" . }}\n+    chart: {{ template \"alluxio.chart\" . }}\n+    release: {{ .Release.Name }}\n+    heritage: {{ .Release.Service }}\n+    role: alluxio-logserver\n+spec:\n+  volumeMode: Filesystem\n+  resources:\n+    requests:\n+      storage: {{ .Values.logserver.size }}\n+  storageClassName: {{ .Values.logserver.storageClass }}\n+  accessModes:\n+  {{ toYaml .Values.logserver.accessModes | trim | indent 4 }}\n+selector:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQ3OTg0Mg=="}, "originalCommit": {"oid": "0bda83eface068b4f3fc6225d0f5b03a48afa5da"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDY2NzMyNw==", "bodyText": "@nirav-chotai I'm actually working on the same as your suggestion. Will update the PR once I tested it :)", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r554667327", "createdAt": "2021-01-11T02:53:11Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/logserver/log-pvc.yaml", "diffHunk": "@@ -0,0 +1,39 @@\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+{{ $enabled := .Values.logserver.enabled -}}\n+{{ $needPVC := eq .Values.logserver.volumeType \"persistentVolumeClaim\" -}}\n+{{ if and .Values.logserver.enabled $needPVC -}}\n+apiVersion: v1\n+kind: PersistentVolumeClaim\n+metadata:\n+  name: {{ .Values.logserver.pvcName }}\n+  labels:\n+    app: {{ template \"alluxio.name\" . }}\n+    chart: {{ template \"alluxio.chart\" . }}\n+    release: {{ .Release.Name }}\n+    heritage: {{ .Release.Service }}\n+    role: alluxio-logserver\n+spec:\n+  volumeMode: Filesystem\n+  resources:\n+    requests:\n+      storage: {{ .Values.logserver.size }}\n+  storageClassName: {{ .Values.logserver.storageClass }}\n+  accessModes:\n+  {{ toYaml .Values.logserver.accessModes | trim | indent 4 }}\n+selector:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQ3OTg0Mg=="}, "originalCommit": {"oid": "0bda83eface068b4f3fc6225d0f5b03a48afa5da"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NzI4NjExOnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/templates/logserver/deployment.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwNToyNzo1NlrOIRyYHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwMTo0NTowM1rOIScT9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTUyMjA3OQ==", "bodyText": "why does the logserver need master secrets?", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r555522079", "createdAt": "2021-01-12T05:27:56Z", "author": {"login": "madanadit"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/logserver/deployment.yaml", "diffHunk": "@@ -0,0 +1,106 @@\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+{{ if .Values.logserver.enabled -}}\n+{{- $name := include \"alluxio.name\" . }}\n+{{- $fullName := include \"alluxio.fullname\" . }}\n+{{- $chart := include \"alluxio.chart\" . }}\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  name: {{ $fullName }}-logserver\n+  labels:\n+    name: {{ $fullName }}-logserver\n+    app: {{ $name }}\n+    chart: {{ $chart }}\n+    release: {{ .Release.Name }}\n+    heritage: {{ .Release.Service }}\n+    role: alluxio-logserver\n+spec:\n+  replicas: 1\n+  selector:\n+    matchLabels:\n+      app: {{ $name }}\n+      role: alluxio-logserver\n+      name: {{ $fullName }}-logserver\n+  template:\n+    metadata:\n+      labels:\n+        name: {{ $fullName }}-logserver\n+        app: {{ $name }}\n+        chart: {{ $chart }}\n+        release: {{ .Release.Name }}\n+        heritage: {{ .Release.Service }}\n+        role: alluxio-logserver\n+    spec:\n+      containers:\n+        - name: alluxio-logserver\n+          image: {{ .Values.image }}:{{ .Values.imageTag }}\n+          imagePullPolicy: {{ .Values.imagePullPolicy }}\n+          securityContext:\n+            runAsUser: {{ .Values.user }}\n+            runAsGroup: {{ .Values.group }}\n+          {{- if .Values.logserver.resources  }}\n+{{ include \"alluxio.logserver.resources\" . | indent 10 }}\n+          {{- end }}\n+          command: [\"tini\", \"--\", \"/entrypoint.sh\"]\n+            {{- if .Values.logserver.args }}\n+          args:\n+{{ toYaml .Values.logserver.args | trim | indent 12 }}\n+            {{- end }}\n+          env:\n+            {{- range $key, $value := .Values.logserver.env }}\n+          - name: \"{{ $key }}\"\n+            value: \"{{ $value }}\"\n+            {{- end }}\n+          envFrom:\n+          - configMapRef:\n+              name: {{ $fullName }}-config\n+          ports:\n+          - containerPort: {{ .Values.logserver.ports.logging }}\n+            name: logging\n+          volumeMounts:\n+            {{- if not (eq .Values.logserver.volumeType \"none\") }}\n+          - name: alluxio-logs\n+            mountPath: /opt/alluxio/logs\n+            {{- end }}\n+            {{- if .Values.secrets }}\n+              {{- if .Values.secrets.logserver }}\n+            {{- include \"alluxio.master.secretVolumeMounts\" . }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbf34c62ba2cd25d8f8b40e9501ef6f2d3f36ec"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjIwOTE0Mw==", "bodyText": "Oops, should be logserver secrets", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r556209143", "createdAt": "2021-01-13T01:45:03Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/logserver/deployment.yaml", "diffHunk": "@@ -0,0 +1,106 @@\n+#\n+# The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+# (the \"License\"). You may not use this work except in compliance with the License, which is\n+# available at www.apache.org/licenses/LICENSE-2.0\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+# either express or implied, as more fully set forth in the License.\n+#\n+# See the NOTICE file distributed with this work for information regarding copyright ownership.\n+#\n+\n+{{ if .Values.logserver.enabled -}}\n+{{- $name := include \"alluxio.name\" . }}\n+{{- $fullName := include \"alluxio.fullname\" . }}\n+{{- $chart := include \"alluxio.chart\" . }}\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  name: {{ $fullName }}-logserver\n+  labels:\n+    name: {{ $fullName }}-logserver\n+    app: {{ $name }}\n+    chart: {{ $chart }}\n+    release: {{ .Release.Name }}\n+    heritage: {{ .Release.Service }}\n+    role: alluxio-logserver\n+spec:\n+  replicas: 1\n+  selector:\n+    matchLabels:\n+      app: {{ $name }}\n+      role: alluxio-logserver\n+      name: {{ $fullName }}-logserver\n+  template:\n+    metadata:\n+      labels:\n+        name: {{ $fullName }}-logserver\n+        app: {{ $name }}\n+        chart: {{ $chart }}\n+        release: {{ .Release.Name }}\n+        heritage: {{ .Release.Service }}\n+        role: alluxio-logserver\n+    spec:\n+      containers:\n+        - name: alluxio-logserver\n+          image: {{ .Values.image }}:{{ .Values.imageTag }}\n+          imagePullPolicy: {{ .Values.imagePullPolicy }}\n+          securityContext:\n+            runAsUser: {{ .Values.user }}\n+            runAsGroup: {{ .Values.group }}\n+          {{- if .Values.logserver.resources  }}\n+{{ include \"alluxio.logserver.resources\" . | indent 10 }}\n+          {{- end }}\n+          command: [\"tini\", \"--\", \"/entrypoint.sh\"]\n+            {{- if .Values.logserver.args }}\n+          args:\n+{{ toYaml .Values.logserver.args | trim | indent 12 }}\n+            {{- end }}\n+          env:\n+            {{- range $key, $value := .Values.logserver.env }}\n+          - name: \"{{ $key }}\"\n+            value: \"{{ $value }}\"\n+            {{- end }}\n+          envFrom:\n+          - configMapRef:\n+              name: {{ $fullName }}-config\n+          ports:\n+          - containerPort: {{ .Values.logserver.ports.logging }}\n+            name: logging\n+          volumeMounts:\n+            {{- if not (eq .Values.logserver.volumeType \"none\") }}\n+          - name: alluxio-logs\n+            mountPath: /opt/alluxio/logs\n+            {{- end }}\n+            {{- if .Values.secrets }}\n+              {{- if .Values.secrets.logserver }}\n+            {{- include \"alluxio.master.secretVolumeMounts\" . }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTUyMjA3OQ=="}, "originalCommit": {"oid": "abbf34c62ba2cd25d8f8b40e9501ef6f2d3f36ec"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NzQ5NjAzOnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/templates/_helpers.tpl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwNzowNjoxNlrOIR0QzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwNzowNjoxNlrOIR0QzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU1Mjk3Mw==", "bodyText": "Where this is being used?", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r555552973", "createdAt": "2021-01-12T07:06:16Z", "author": {"login": "nirav-chotai"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/_helpers.tpl", "diffHunk": "@@ -333,3 +355,34 @@ livenessProbe:\n   timeoutSeconds: 5\n   failureThreshold: 2\n {{- end -}}\n+\n+{{- define \"alluxio.logserver.log.volume\" -}}\n+{{- if eq .Values.logserver.volumeType \"hostPath\" }}\n+- name: alluxio-logs\n+  hostPath:\n+    path: {{ .Values.logserver.hostPath }}\n+    type: DirectoryOrCreate\n+{{- else if eq .Values.logserver.volumeType \"emptyDir\" }}\n+- name: alluxio-logs\n+  emptyDir:\n+    medium: {{ .Values.logserver.medium }}\n+    sizeLimit: {{ .Values.logserver.size | quote }}\n+{{- else }}\n+- name: alluxio-logs\n+  persistentVolumeClaim:\n+    claimName: \"{{ .Values.logserver.pvcName }}\"\n+{{- end }}\n+{{- end -}}\n+\n+{{- define \"alluxio.logserver.pvc.selector\" -}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abbf34c62ba2cd25d8f8b40e9501ef6f2d3f36ec"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwMTkzODQ0OnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwMzoyNjo1N1rOISeLlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwNzozMjo0OVrOISirfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjIzOTc2NQ==", "bodyText": "Not sure if there's a better example", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r556239765", "createdAt": "2021-01-13T03:26:57Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -313,6 +313,8 @@ fuse:\n #     alluxio-hdfs-config: hdfsConfig\n #   worker: # Shared by worker and jobWorker containers\n #     alluxio-hdfs-config: hdfsConfig\n+#   logserver: # Used by the logserver container\n+#     alluxio-hdfs-config: hdfsConfig", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9662051cc8f8675b92e1af5c32424de756d5deff"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjMxMzQ2OQ==", "bodyText": "logserver doesn't need to talk to hdfs so the hdfs secret is not required, but his placeholder is fine", "url": "https://github.com/Alluxio/alluxio/pull/12662#discussion_r556313469", "createdAt": "2021-01-13T07:32:49Z", "author": {"login": "madanadit"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -313,6 +313,8 @@ fuse:\n #     alluxio-hdfs-config: hdfsConfig\n #   worker: # Shared by worker and jobWorker containers\n #     alluxio-hdfs-config: hdfsConfig\n+#   logserver: # Used by the logserver container\n+#     alluxio-hdfs-config: hdfsConfig", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjIzOTc2NQ=="}, "originalCommit": {"oid": "9662051cc8f8675b92e1af5c32424de756d5deff"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 981, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}