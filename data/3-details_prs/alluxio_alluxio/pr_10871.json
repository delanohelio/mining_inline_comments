{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNjU5Nzc4", "number": 10871, "title": "Fix worker/client to get right cluster config", "bodyText": "Fixes #10745", "createdAt": "2020-02-08T00:58:24Z", "url": "https://github.com/Alluxio/alluxio/pull/10871", "merged": true, "mergeCommit": {"oid": "b5fe3c84f3fa645560e8c1bee7a4733319b233a7"}, "closed": true, "closedAt": "2020-02-13T02:36:55Z", "author": {"login": "LuQQiu"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcCHDuUAH2gAyMzcyNjU5Nzc4OjhhNzUxMGRjMTJlN2E4MWQwYjU3YTNiOTg3MGUzYmYwZWFmZWMwZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDwuEWgFqTM1NzkwNDAzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a7510dc12e7a81d0b57a3b9870e3bf0eafec0ef", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/8a7510dc12e7a81d0b57a3b9870e3bf0eafec0ef", "committedDate": "2020-02-07T22:27:20Z", "message": "Validating the property key scope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd320eb053f33cb86f6b0ae8113ebf3b448a69d1", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/cd320eb053f33cb86f6b0ae8113ebf3b448a69d1", "committedDate": "2020-02-08T00:12:58Z", "message": "Load configuration for worker/client differently"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0284880ceb1d5a3ae8e5f5bb26332bb7742a2a5", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/d0284880ceb1d5a3ae8e5f5bb26332bb7742a2a5", "committedDate": "2020-02-08T00:35:58Z", "message": "Set leftover scope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b286248fbe44b5d598723c09fcf1fe297c91f09", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/0b286248fbe44b5d598723c09fcf1fe297c91f09", "committedDate": "2020-02-10T23:42:54Z", "message": "Fix ConfigCheckerIntegrationTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDU3NjI4", "url": "https://github.com/Alluxio/alluxio/pull/10871#pullrequestreview-356457628", "createdAt": "2020-02-11T07:44:31Z", "commit": {"oid": "0b286248fbe44b5d598723c09fcf1fe297c91f09"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNzo0NDozMVrOFn_gWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwODoxNDo1MlrOFoAEYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ3OTI1OA==", "bodyText": "nit: I would name it as loadClientConf; Alternatively, since this is already ClientContext, you can keep loadConf and I don't think it is confusing.\nLeave this up to you", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r377479258", "createdAt": "2020-02-11T07:44:31Z", "author": {"login": "apc999"}, "path": "core/common/src/main/java/alluxio/ClientContext.java", "diffHunk": "@@ -124,7 +125,7 @@ private ClientContext(@Nullable Subject subject, @Nullable AlluxioConfiguration\n    * @param loadPathConf whether to load path level configuration\n    * @throws AlluxioStatusException\n    */\n-  public synchronized void loadConf(InetSocketAddress address, boolean loadClusterConf,\n+  public synchronized void loadConfForClient(InetSocketAddress address, boolean loadClusterConf,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b286248fbe44b5d598723c09fcf1fe297c91f09"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ4MDYyNw==", "bodyText": "loadProperties can be sufficient. In general, concise and accurate names are preferred as long as they are not confusing :)", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r377480627", "createdAt": "2020-02-11T07:49:10Z", "author": {"login": "apc999"}, "path": "core/common/src/main/java/alluxio/util/ConfigurationUtils.java", "diffHunk": "@@ -504,21 +504,22 @@ public static GetConfigurationPResponse loadConfiguration(InetSocketAddress addr\n   }\n \n   /**\n-   * Loads client scope properties from the property list returned by grpc.\n+   * Filters and loads properties contains certain scope from the property list returned by grpc.\n    *\n    * @param properties the property list returned by grpc\n+   * @param scope the scope to filter the received property list\n    * @param logMessage a function with key and value as parameter and returns debug log message\n    * @return the loaded properties\n    */\n-  private static Properties loadClientProperties(List<ConfigProperty> properties,\n-      BiFunction<PropertyKey, String, String> logMessage) {\n+  private static Properties filterAndLoadProperties(List<ConfigProperty> properties,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b286248fbe44b5d598723c09fcf1fe297c91f09"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ4MTE2OA==", "bodyText": "update the comment", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r377481168", "createdAt": "2020-02-11T07:51:08Z", "author": {"login": "apc999"}, "path": "core/common/src/main/java/alluxio/util/ConfigurationUtils.java", "diffHunk": "@@ -504,21 +504,22 @@ public static GetConfigurationPResponse loadConfiguration(InetSocketAddress addr\n   }\n \n   /**\n-   * Loads client scope properties from the property list returned by grpc.\n+   * Filters and loads properties contains certain scope from the property list returned by grpc.\n    *\n    * @param properties the property list returned by grpc\n+   * @param scope the scope to filter the received property list\n    * @param logMessage a function with key and value as parameter and returns debug log message\n    * @return the loaded properties\n    */\n-  private static Properties loadClientProperties(List<ConfigProperty> properties,\n-      BiFunction<PropertyKey, String, String> logMessage) {\n+  private static Properties filterAndLoadProperties(List<ConfigProperty> properties,\n+      Scope scope, BiFunction<PropertyKey, String, String> logMessage) {\n     Properties props = new Properties();\n     for (ConfigProperty property : properties) {\n       String name = property.getName();\n       // TODO(binfan): support propagating unsetting properties from master\n       if (PropertyKey.isValid(name) && property.hasValue()) {\n         PropertyKey key = PropertyKey.fromString(name);\n-        if (!GrpcUtils.contains(key.getScope(), Scope.CLIENT)) {\n+        if (!GrpcUtils.contains(key.getScope(), scope)) {\n           // Only propagate client properties.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b286248fbe44b5d598723c09fcf1fe297c91f09"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ4MzQ1NA==", "bodyText": "name is too long. I would simply call it loadClusterDefaults", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r377483454", "createdAt": "2020-02-11T07:58:23Z", "author": {"login": "apc999"}, "path": "core/server/common/src/main/java/alluxio/conf/ServerConfiguration.java", "diffHunk": "@@ -345,13 +346,13 @@ public static InstancedConfiguration global() {\n    *\n    * @param address the master address\n    */\n-  public static synchronized void loadClusterDefaultsIfNotLoaded(InetSocketAddress address)\n+  public static synchronized void loadClusterDefaultsIfNotLoadedForWorker(InetSocketAddress address)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b286248fbe44b5d598723c09fcf1fe297c91f09"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ4NDExNg==", "bodyText": "is this Scope.ALL? don't we use it on client side?", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r377484116", "createdAt": "2020-02-11T08:00:38Z", "author": {"login": "apc999"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -485,54 +497,62 @@ public String toString() {\n               + \"the journal, logs, and under file storage data (if using local filesystem) \"\n               + \"are written here.\")\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n+          .setScope(Scope.ALL)\n           .build();\n   public static final PropertyKey ZOOKEEPER_ADDRESS =\n       new Builder(Name.ZOOKEEPER_ADDRESS)\n           .setDescription(\"Address of ZooKeeper.\")\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.ENFORCE)\n+          .setScope(Scope.ALL)\n           .build();\n   public static final PropertyKey ZOOKEEPER_CONNECTION_TIMEOUT =\n       new Builder(Name.ZOOKEEPER_CONNECTION_TIMEOUT)\n           .setDefaultValue(\"15s\") // matches Zookeeper's default\n           .setDescription(\"Connection timeout to use when connecting to Zookeeper\")\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n+          .setScope(Scope.MASTER)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b286248fbe44b5d598723c09fcf1fe297c91f09"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ4NDIxOA==", "bodyText": "default scope is Scope.ALL right?", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r377484218", "createdAt": "2020-02-11T08:01:00Z", "author": {"login": "apc999"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -292,6 +292,7 @@ public String toString() {\n           .setDescription(\"The directory containing files used to configure Alluxio.\")\n           .setIgnoredSiteProperty(true)\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n+          .setScope(Scope.ALL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b286248fbe44b5d598723c09fcf1fe297c91f09"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ4NDUwOQ==", "bodyText": "Scope.SERVER?", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r377484509", "createdAt": "2020-02-11T08:01:59Z", "author": {"login": "apc999"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -485,54 +497,62 @@ public String toString() {\n               + \"the journal, logs, and under file storage data (if using local filesystem) \"\n               + \"are written here.\")\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n+          .setScope(Scope.ALL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b286248fbe44b5d598723c09fcf1fe297c91f09"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ4ODQ4Mw==", "bodyText": "@calvinjia do we now also have client on worker (or job worker)? Do we need to respect cluster-default client-side setting on worker / job worker too?", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r377488483", "createdAt": "2020-02-11T08:14:52Z", "author": {"login": "apc999"}, "path": "core/server/common/src/main/java/alluxio/conf/ServerConfiguration.java", "diffHunk": "@@ -345,13 +346,13 @@ public static InstancedConfiguration global() {\n    *\n    * @param address the master address\n    */\n-  public static synchronized void loadClusterDefaultsIfNotLoaded(InetSocketAddress address)\n+  public static synchronized void loadClusterDefaultsIfNotLoadedForWorker(InetSocketAddress address)\n       throws AlluxioStatusException {\n     if (sConf.getBoolean(PropertyKey.USER_CONF_CLUSTER_DEFAULT_ENABLED)\n         && !sConf.clusterDefaultsLoaded()) {\n       GetConfigurationPResponse response = ConfigurationUtils.loadConfiguration(address, sConf,\n           false, true);\n-      AlluxioConfiguration conf = ConfigurationUtils.getClusterConf(response, sConf);\n+      AlluxioConfiguration conf = ConfigurationUtils.getClusterConf(response, sConf, Scope.WORKER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b286248fbe44b5d598723c09fcf1fe297c91f09"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f16b38a4d8ca2e28eeeb3966930651abf8a1e70", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/2f16b38a4d8ca2e28eeeb3966930651abf8a1e70", "committedDate": "2020-02-11T18:31:14Z", "message": "Addressed comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3ODI1ODk5", "url": "https://github.com/Alluxio/alluxio/pull/10871#pullrequestreview-357825899", "createdAt": "2020-02-12T22:10:52Z", "commit": {"oid": "2f16b38a4d8ca2e28eeeb3966930651abf8a1e70"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMjoxMDo1M1rOFpAZuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMjo0NToyOFrOFpBRjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU0MjUyMQ==", "bodyText": "Does this really apply to ALL? For clients, this defines a path to a metrics properties file which might not necessarily exist if the client is remote to Alluxio.", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r378542521", "createdAt": "2020-02-12T22:10:53Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -350,7 +356,7 @@ public String toString() {\n           .setDescription(\"The file path of the metrics system configuration file. By default \"\n               + \"it is `metrics.properties` in the `conf` directory.\")\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n-          .setScope(Scope.SERVER)\n+          .setScope(Scope.ALL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f16b38a4d8ca2e28eeeb3966930651abf8a1e70"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU0NzU3Ng==", "bodyText": "could this be Scope.NONE?", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r378547576", "createdAt": "2020-02-12T22:22:42Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -441,6 +450,7 @@ public String toString() {\n           .setDescription(\"Version of Alluxio. User should never modify this property.\")\n           .setIgnoredSiteProperty(true)\n           .setIsHidden(true)\n+          .setScope(Scope.ALL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f16b38a4d8ca2e28eeeb3966930651abf8a1e70"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU0NzgyNA==", "bodyText": "Should this be Scope.NONE", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r378547824", "createdAt": "2020-02-12T22:23:19Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -417,13 +424,15 @@ public String toString() {\n               String.format(\"Comma-separated search path for %s.\", Constants.SITE_PROPERTIES))\n           .setIgnoredSiteProperty(true)\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n+          .setScope(Scope.ALL)\n           .build();\n   public static final PropertyKey TEST_MODE =\n       new Builder(Name.TEST_MODE)\n           .setDefaultValue(false)\n           .setDescription(\"Flag used only during tests to allow special behavior.\")\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n           .setIsHidden(true)\n+          .setScope(Scope.ALL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f16b38a4d8ca2e28eeeb3966930651abf8a1e70"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU1MTU2OQ==", "bodyText": "why is this Scope.ALL?", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r378551569", "createdAt": "2020-02-12T22:32:11Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2443,7 +2469,7 @@ public String toString() {\n           .setDefaultValue(29999)\n           .setDescription(\"The port for Alluxio worker's RPC service.\")\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n-          .setScope(Scope.WORKER)\n+          .setScope(Scope.ALL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f16b38a4d8ca2e28eeeb3966930651abf8a1e70"}, "originalPosition": 221}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU1MTk0OQ==", "bodyText": "why is this Scope.NONE? Shouldn't this be Scope.SERVER?", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r378551949", "createdAt": "2020-02-12T22:33:06Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -2724,6 +2750,7 @@ public String toString() {\n           .setDefaultValue(Constants.S3_MULTIPART_TEMPORARY_DIR_SUFFIX)\n           .setDescription(\"Suffix for the directory which holds parts during a multipart upload.\")\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.ENFORCE)\n+          .setScope(Scope.NONE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f16b38a4d8ca2e28eeeb3966930651abf8a1e70"}, "originalPosition": 229}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU1NDUxOA==", "bodyText": "shouldn't this be Scope.WORKER?", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r378554518", "createdAt": "2020-02-12T22:39:32Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -3690,76 +3732,90 @@ public String toString() {\n               + \"setting the capacity of the job master to a large ( > 10M) value. Default is -1 \"\n               + \"denoting an unlimited value\")\n           .setDefaultValue(\"-1\")\n+          .setScope(Scope.MASTER)\n           .build();\n   public static final PropertyKey JOB_MASTER_FINISHED_JOB_RETENTION_TIME =\n       new Builder(Name.JOB_MASTER_FINISHED_JOB_RETENTION_TIME)\n           .setDescription(\"The length of time the Alluxio Job Master should save information about \"\n               + \"completed jobs before they are discarded.\")\n           .setDefaultValue(\"300sec\")\n+          .setScope(Scope.MASTER)\n           .build();\n   public static final PropertyKey JOB_MASTER_JOB_CAPACITY =\n       new Builder(Name.JOB_MASTER_JOB_CAPACITY)\n           .setDescription(\"The total possible number of available job statuses in the job master. \"\n               + \"This value includes running and finished jobs which are have completed within \"\n               + Name.JOB_MASTER_FINISHED_JOB_RETENTION_TIME + \".\")\n           .setDefaultValue(100000)\n+          .setScope(Scope.MASTER)\n           .build();\n   public static final PropertyKey JOB_MASTER_WORKER_HEARTBEAT_INTERVAL =\n       new Builder(Name.JOB_MASTER_WORKER_HEARTBEAT_INTERVAL)\n           .setDescription(\"The amount of time that the Alluxio job worker should wait in between \"\n               + \"heartbeats to the Job Master.\")\n           .setDefaultValue(\"1sec\")\n+          .setScope(Scope.MASTER)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f16b38a4d8ca2e28eeeb3966930651abf8a1e70"}, "originalPosition": 436}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU1NTQ2OA==", "bodyText": "shouldn't this be Scope.ALL? Clients need that information to connect to the job master? Mainly for CLI use cases", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r378555468", "createdAt": "2020-02-12T22:41:58Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -3804,20 +3865,23 @@ public String toString() {\n                   + \"%s using the port defined in %s\",\n               Name.MASTER_RPC_ADDRESSES, Name.JOB_MASTER_RPC_PORT,\n               Name.JOB_MASTER_EMBEDDED_JOURNAL_ADDRESSES, Name.JOB_MASTER_RPC_PORT))\n-          .setScope(Scope.CLIENT)\n+          .setScope(Scope.MASTER)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f16b38a4d8ca2e28eeeb3966930651abf8a1e70"}, "originalPosition": 545}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU1NTU5OQ==", "bodyText": "shouldn't this be Scope.ALL? Clients need that information to connect to the job master? Mainly for CLI use cases", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r378555599", "createdAt": "2020-02-12T22:42:17Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -3804,20 +3865,23 @@ public String toString() {\n                   + \"%s using the port defined in %s\",\n               Name.MASTER_RPC_ADDRESSES, Name.JOB_MASTER_RPC_PORT,\n               Name.JOB_MASTER_EMBEDDED_JOURNAL_ADDRESSES, Name.JOB_MASTER_RPC_PORT))\n-          .setScope(Scope.CLIENT)\n+          .setScope(Scope.MASTER)\n           .build();\n   public static final PropertyKey JOB_MASTER_EMBEDDED_JOURNAL_ADDRESSES =\n       new Builder(Name.JOB_MASTER_EMBEDDED_JOURNAL_ADDRESSES)\n           .setDescription(String.format(\"A comma-separated list of journal addresses for all job \"\n               + \"masters in the cluster. The format is 'hostname1:port1,hostname2:port2,...'. \"\n               + \"Defaults to the journal addresses set for the Alluxio masters (%s), but with the \"\n               + \"job master embedded journal port.\", Name.MASTER_EMBEDDED_JOURNAL_ADDRESSES))\n+          .setScope(Scope.MASTER)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f16b38a4d8ca2e28eeeb3966930651abf8a1e70"}, "originalPosition": 553}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU1NjM0Ng==", "bodyText": "nit\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Filters and loads properties contains certain scope from the property list returned by grpc.\n          \n          \n            \n               * Filters and loads properties with a certain scope from the property list returned by grpc.", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r378556346", "createdAt": "2020-02-12T22:44:13Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/util/ConfigurationUtils.java", "diffHunk": "@@ -504,22 +504,23 @@ public static GetConfigurationPResponse loadConfiguration(InetSocketAddress addr\n   }\n \n   /**\n-   * Loads client scope properties from the property list returned by grpc.\n+   * Filters and loads properties contains certain scope from the property list returned by grpc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f16b38a4d8ca2e28eeeb3966930651abf8a1e70"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU1NjgxMw==", "bodyText": "If a property has scope ALL we want that included along with properties from the CLIENT scope, correct?", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r378556813", "createdAt": "2020-02-12T22:45:28Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/util/ConfigurationUtils.java", "diffHunk": "@@ -504,22 +504,23 @@ public static GetConfigurationPResponse loadConfiguration(InetSocketAddress addr\n   }\n \n   /**\n-   * Loads client scope properties from the property list returned by grpc.\n+   * Filters and loads properties contains certain scope from the property list returned by grpc.\n    *\n    * @param properties the property list returned by grpc\n+   * @param scope the scope to filter the received property list\n    * @param logMessage a function with key and value as parameter and returns debug log message\n    * @return the loaded properties\n    */\n-  private static Properties loadClientProperties(List<ConfigProperty> properties,\n-      BiFunction<PropertyKey, String, String> logMessage) {\n+  private static Properties filterAndLoadProperties(List<ConfigProperty> properties,\n+      Scope scope, BiFunction<PropertyKey, String, String> logMessage) {\n     Properties props = new Properties();\n     for (ConfigProperty property : properties) {\n       String name = property.getName();\n       // TODO(binfan): support propagating unsetting properties from master\n       if (PropertyKey.isValid(name) && property.hasValue()) {\n         PropertyKey key = PropertyKey.fromString(name);\n-        if (!GrpcUtils.contains(key.getScope(), Scope.CLIENT)) {\n-          // Only propagate client properties.\n+        if (!GrpcUtils.contains(key.getScope(), scope)) {\n+          // Only propagate properties contains the target scope", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f16b38a4d8ca2e28eeeb3966930651abf8a1e70"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82cb04668d3b1a473f864b5729a8735b5e6359c1", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/82cb04668d3b1a473f864b5729a8735b5e6359c1", "committedDate": "2020-02-12T23:29:06Z", "message": "Fix the scope"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2924a5a094f1feb5250836da7937cc308b7605e", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/c2924a5a094f1feb5250836da7937cc308b7605e", "committedDate": "2020-02-12T23:50:20Z", "message": "small fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3ODgzNTkz", "url": "https://github.com/Alluxio/alluxio/pull/10871#pullrequestreview-357883593", "createdAt": "2020-02-13T00:28:38Z", "commit": {"oid": "c2924a5a094f1feb5250836da7937cc308b7605e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMDoyODozOVrOFpDSCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMDoyODozOVrOFpDSCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU4OTcwNg==", "bodyText": "nit: is there a reason to line break on the commas?", "url": "https://github.com/Alluxio/alluxio/pull/10871#discussion_r378589706", "createdAt": "2020-02-13T00:28:39Z", "author": {"login": "ZacBlanco"}, "path": "core/common/src/main/java/alluxio/util/ConfigurationUtils.java", "diffHunk": "@@ -531,26 +533,28 @@ private static Properties loadClientProperties(List<ConfigProperty> properties,\n   }\n \n   /**\n-   * Loads the cluster level configuration from the get configuration response, and merges it with\n-   * the existing configuration.\n+   * Loads the cluster level configuration from the get configuration response,\n+   * filters out the configuration for certain scope,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2924a5a094f1feb5250836da7937cc308b7605e"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d7cab1fa9344f8e7121fbfcb07669d72b07b36c", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/8d7cab1fa9344f8e7121fbfcb07669d72b07b36c", "committedDate": "2020-02-13T00:46:39Z", "message": "fix the version scope and comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbb6425d533bc7e2d5b72fe609560d247797c69d", "author": {"user": {"login": "LuQQiu", "name": null}}, "url": "https://github.com/Alluxio/alluxio/commit/dbb6425d533bc7e2d5b72fe609560d247797c69d", "committedDate": "2020-02-13T01:26:43Z", "message": "Change version back to ALL since client/worker need to check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3OTA0MDM5", "url": "https://github.com/Alluxio/alluxio/pull/10871#pullrequestreview-357904039", "createdAt": "2020-02-13T01:33:37Z", "commit": {"oid": "dbb6425d533bc7e2d5b72fe609560d247797c69d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3226, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}