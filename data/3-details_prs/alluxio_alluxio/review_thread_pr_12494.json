{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5OTU3MzIw", "number": 12494, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozNDowNlrOE6wTZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozNDoxM1rOE6wTiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDQ0MjYwOnYy", "diffSide": "RIGHT", "path": "docs/en/compute/Flink.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozNDowNlrOH2BEfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozNDowNlrOH2BEfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMjY4Ng==", "bodyText": "bash -> console?", "url": "https://github.com/Alluxio/alluxio/pull/12494#discussion_r526402686", "createdAt": "2020-11-18T20:34:06Z", "author": {"login": "apc999"}, "path": "docs/en/compute/Flink.md", "diffHunk": "@@ -0,0 +1,121 @@\n+---\n+layout: global\n+title: Running Apache Flink on Alluxio\n+nickname: Apache Flink\n+group: Compute Integrations\n+priority: 2\n+---\n+\n+* Table of Contents\n+{:toc}\n+\n+This guide describes how to get Alluxio running with [Apache Flink](http://flink.apache.org/), so\n+that you can easily work with files stored in Alluxio.\n+\n+## Prerequisites\n+\n+The prerequisite for this part is that you have\n+[Java](Java-Setup.html). We also assume that you have set up\n+Alluxio in accordance to these guides [Local Mode](Running-Alluxio-Locally.html) or\n+[Cluster Mode](Running-Alluxio-on-a-Cluster.html).\n+\n+Please find the guides for setting up Flink on the Apache Flink [website](http://flink.apache.org/).\n+\n+## Configuration\n+\n+Apache Flink allows to use Alluxio through a generic file system wrapper for the Hadoop file system.\n+Therefore, the configuration of Alluxio is done mostly in Hadoop configuration files.\n+\n+### Set property in `core-site.xml`\n+\n+If you have a Hadoop setup next to the Flink installation, add the following property to the\n+`core-site.xml` configuration file:\n+\n+```xml\n+<property>\n+  <name>fs.alluxio.impl</name>\n+  <value>alluxio.hadoop.FileSystem</value>\n+</property>\n+```\n+\n+In case you don't have a Hadoop setup, you have to create a file called `core-site.xml` with the\n+following contents:\n+\n+```xml\n+<configuration>\n+  <property>\n+    <name>fs.alluxio.impl</name>\n+    <value>alluxio.hadoop.FileSystem</value>\n+  </property>\n+</configuration>\n+```\n+\n+### Specify path to `core-site.xml` in `conf/flink-conf.yaml`\n+\n+Next, you have to specify the path to the Hadoop configuration in Flink. Open the\n+`conf/flink-conf.yaml` file in the Flink root directory and set the `fs.hdfs.hadoopconf`\n+configuration value to the **directory** containing the `core-site.xml`. (For newer Hadoop versions,\n+the directory usually ends with `etc/hadoop`.)\n+\n+### Distribute the Alluxio Client Jar\n+\n+In order to communicate with Alluxio, we need to provide Flink programs with the Alluxio Core Client\n+jar. We recommend you to download the tarball from\n+Alluxio [download page](http://www.alluxio.org/download).\n+Alternatively, advanced users can choose to compile this client jar from the source code\n+by following Follow the instructs [here](Building-Alluxio-From-Source.html#compute-framework-support).\n+The Alluxio client jar can be found at `{{site.ALLUXIO_CLIENT_JAR_PATH}}`.\n+\n+We need to make the Alluxio `jar` file available to Flink, because it contains the configured\n+`alluxio.hadoop.FileSystem` class.\n+\n+There are different ways to achieve that:\n+\n+- Put the `{{site.ALLUXIO_CLIENT_JAR_PATH}}` file into the `lib` directory of Flink (for local and\n+standalone cluster setups)\n+- Put the `{{site.ALLUXIO_CLIENT_JAR_PATH}}` file into the `ship` directory for Flink on YARN.\n+- Specify the location of the jar file in the `HADOOP_CLASSPATH` environment variable (make sure its\n+available on all cluster nodes as well). For example like this:\n+\n+```bash\n+$ export HADOOP_CLASSPATH={{site.ALLUXIO_CLIENT_JAR_PATH}}\n+```\n+\n+### Translate additional Alluxio site properties to Flink\n+\n+In addition, if there are any client-related properties specified in `conf/alluxio-site.properties`,\n+translate those to `env.java.opts` in `{FLINK_HOME}/conf/flink-conf.yaml` for Flink to pick up\n+Alluxio configuration. For example, if you want to configure Alluxio client to use CACHE_THROUGH as\n+the write type, you should add the following to `{FLINK_HOME}/conf/flink-conf.yaml`.\n+\n+```yaml\n+env.java.opts: -Dalluxio.user.file.writetype.default=CACHE_THROUGH\n+```\n+\n+## Using Alluxio with Flink\n+\n+To use Alluxio with Flink, just specify paths with the `alluxio://` scheme.\n+\n+If Alluxio is installed locally, a valid path would look like this\n+`alluxio://localhost:19998/user/hduser/gutenberg`.\n+\n+### Wordcount Example\n+\n+This example assumes you have set up Alluxio and Flink as previously described.\n+\n+Put the file `LICENSE` into Alluxio, assuming you are in the top level Alluxio project directory:\n+\n+```bash", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c582d2d6e1fe9bd3f3144e7b79b698c9a02436f"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDQ0Mjk2OnYy", "diffSide": "RIGHT", "path": "docs/en/compute/Flink.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozNDoxM1rOH2BEvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozNDoxM1rOH2BEvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMjc1MA==", "bodyText": "same here", "url": "https://github.com/Alluxio/alluxio/pull/12494#discussion_r526402750", "createdAt": "2020-11-18T20:34:13Z", "author": {"login": "apc999"}, "path": "docs/en/compute/Flink.md", "diffHunk": "@@ -0,0 +1,121 @@\n+---\n+layout: global\n+title: Running Apache Flink on Alluxio\n+nickname: Apache Flink\n+group: Compute Integrations\n+priority: 2\n+---\n+\n+* Table of Contents\n+{:toc}\n+\n+This guide describes how to get Alluxio running with [Apache Flink](http://flink.apache.org/), so\n+that you can easily work with files stored in Alluxio.\n+\n+## Prerequisites\n+\n+The prerequisite for this part is that you have\n+[Java](Java-Setup.html). We also assume that you have set up\n+Alluxio in accordance to these guides [Local Mode](Running-Alluxio-Locally.html) or\n+[Cluster Mode](Running-Alluxio-on-a-Cluster.html).\n+\n+Please find the guides for setting up Flink on the Apache Flink [website](http://flink.apache.org/).\n+\n+## Configuration\n+\n+Apache Flink allows to use Alluxio through a generic file system wrapper for the Hadoop file system.\n+Therefore, the configuration of Alluxio is done mostly in Hadoop configuration files.\n+\n+### Set property in `core-site.xml`\n+\n+If you have a Hadoop setup next to the Flink installation, add the following property to the\n+`core-site.xml` configuration file:\n+\n+```xml\n+<property>\n+  <name>fs.alluxio.impl</name>\n+  <value>alluxio.hadoop.FileSystem</value>\n+</property>\n+```\n+\n+In case you don't have a Hadoop setup, you have to create a file called `core-site.xml` with the\n+following contents:\n+\n+```xml\n+<configuration>\n+  <property>\n+    <name>fs.alluxio.impl</name>\n+    <value>alluxio.hadoop.FileSystem</value>\n+  </property>\n+</configuration>\n+```\n+\n+### Specify path to `core-site.xml` in `conf/flink-conf.yaml`\n+\n+Next, you have to specify the path to the Hadoop configuration in Flink. Open the\n+`conf/flink-conf.yaml` file in the Flink root directory and set the `fs.hdfs.hadoopconf`\n+configuration value to the **directory** containing the `core-site.xml`. (For newer Hadoop versions,\n+the directory usually ends with `etc/hadoop`.)\n+\n+### Distribute the Alluxio Client Jar\n+\n+In order to communicate with Alluxio, we need to provide Flink programs with the Alluxio Core Client\n+jar. We recommend you to download the tarball from\n+Alluxio [download page](http://www.alluxio.org/download).\n+Alternatively, advanced users can choose to compile this client jar from the source code\n+by following Follow the instructs [here](Building-Alluxio-From-Source.html#compute-framework-support).\n+The Alluxio client jar can be found at `{{site.ALLUXIO_CLIENT_JAR_PATH}}`.\n+\n+We need to make the Alluxio `jar` file available to Flink, because it contains the configured\n+`alluxio.hadoop.FileSystem` class.\n+\n+There are different ways to achieve that:\n+\n+- Put the `{{site.ALLUXIO_CLIENT_JAR_PATH}}` file into the `lib` directory of Flink (for local and\n+standalone cluster setups)\n+- Put the `{{site.ALLUXIO_CLIENT_JAR_PATH}}` file into the `ship` directory for Flink on YARN.\n+- Specify the location of the jar file in the `HADOOP_CLASSPATH` environment variable (make sure its\n+available on all cluster nodes as well). For example like this:\n+\n+```bash\n+$ export HADOOP_CLASSPATH={{site.ALLUXIO_CLIENT_JAR_PATH}}\n+```\n+\n+### Translate additional Alluxio site properties to Flink\n+\n+In addition, if there are any client-related properties specified in `conf/alluxio-site.properties`,\n+translate those to `env.java.opts` in `{FLINK_HOME}/conf/flink-conf.yaml` for Flink to pick up\n+Alluxio configuration. For example, if you want to configure Alluxio client to use CACHE_THROUGH as\n+the write type, you should add the following to `{FLINK_HOME}/conf/flink-conf.yaml`.\n+\n+```yaml\n+env.java.opts: -Dalluxio.user.file.writetype.default=CACHE_THROUGH\n+```\n+\n+## Using Alluxio with Flink\n+\n+To use Alluxio with Flink, just specify paths with the `alluxio://` scheme.\n+\n+If Alluxio is installed locally, a valid path would look like this\n+`alluxio://localhost:19998/user/hduser/gutenberg`.\n+\n+### Wordcount Example\n+\n+This example assumes you have set up Alluxio and Flink as previously described.\n+\n+Put the file `LICENSE` into Alluxio, assuming you are in the top level Alluxio project directory:\n+\n+```bash\n+$ bin/alluxio fs copyFromLocal LICENSE alluxio://localhost:19998/LICENSE\n+```\n+\n+Run the following command from the top level Flink project directory:\n+\n+```bash", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c582d2d6e1fe9bd3f3144e7b79b698c9a02436f"}, "originalPosition": 114}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1037, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}