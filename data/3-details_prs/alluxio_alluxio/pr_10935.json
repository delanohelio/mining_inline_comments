{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2ODYyMTk5", "number": 10935, "title": "Close previous stream before opening next one when compacting files", "bodyText": "Previous implementation of CompactDefinition opened an arbitrary number of input files to be fed through the SequentialCompactor. This is very wasteful because only one input file needs to be open at a time to compact files sequentially.", "createdAt": "2020-02-18T22:12:23Z", "url": "https://github.com/Alluxio/alluxio/pull/10935", "merged": true, "mergeCommit": {"oid": "7dca7ae603058268ef629fda2c4ff8cad2ae82d9"}, "closed": true, "closedAt": "2020-02-18T23:28:22Z", "author": {"login": "bradyoo"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFpaqYAH2gAyMzc2ODYyMTk5OjY0MmVjZmY1Mzc2NTkwMTk3MWRiNTNlYjk2MDZmOGI1YzdkZGZmYzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFqf88gFqTM2MDc0NzI3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "642ecff53765901971db53eb9606f8b5c7ddffc7", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/642ecff53765901971db53eb9606f8b5c7ddffc7", "committedDate": "2020-02-18T22:10:56Z", "message": "Close previous input stream before opening the next one when compacting files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNzE1NTYz", "url": "https://github.com/Alluxio/alluxio/pull/10935#pullrequestreview-360715563", "createdAt": "2020-02-18T22:18:37Z", "commit": {"oid": "642ecff53765901971db53eb9606f8b5c7ddffc7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMjoxODozN1rOFrUing==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMjoxODozN1rOFrUing==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk2OTYzMA==", "bodyText": "the output will be deleted all the time?", "url": "https://github.com/Alluxio/alluxio/pull/10935#discussion_r380969630", "createdAt": "2020-02-18T22:18:37Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -174,38 +172,29 @@ private boolean shouldIgnore(URIStatus status) {\n   @Override\n   public SerializableVoid runTask(CompactConfig config, ArrayList<CompactTask> tasks,\n       RunTaskContext context) throws Exception {\n-    Closer closer = Closer.create();\n-    boolean closed = false;\n-    Compactor compactor = new SequentialCompactor();\n     for (CompactTask task : tasks) {\n       ArrayList<String> inputs = task.getInputs();\n       if (inputs.isEmpty()) {\n         continue;\n       }\n       AlluxioURI output = new AlluxioURI(task.getOutput());\n-      List<TableReader> readers = Lists.newArrayList();\n-      TableWriter writer = null;\n-      try {\n+\n+      TableSchema schema;\n+      try (TableReader reader = TableReader.create(new AlluxioURI(inputs.get(0)), config.getPartitionInfo())) {\n+        schema = reader.getSchema();\n+      }\n+\n+      try (TableWriter writer = TableWriter.create(schema, output)) {\n         for (String input : inputs) {\n-          readers.add(closer.register(TableReader.create(new AlluxioURI(input),\n-              config.getPartitionInfo())));\n+          try (TableReader reader = TableReader.create(new AlluxioURI(input),\n+              config.getPartitionInfo())) {\n+            for (TableRow row = reader.read(); row != null; row = reader.read()) {\n+              writer.write(row);\n+            }\n+          }\n         }\n-        TableSchema schema = readers.get(0).getSchema();\n-        writer = closer.register(TableWriter.create(schema, output));\n-        compactor.compact(readers, writer);\n-      } catch (Throwable t) {\n-        closer.close();\n-        closed = true;\n-        try {\n-          context.getFileSystem().delete(output); // output is the compacted file\n-        } catch (Throwable e) {\n-          t.addSuppressed(e);\n-        }\n-        closer.rethrow(t);\n       } finally {\n-        if (!closed) {\n-          closer.close();\n-        }\n+        context.getFileSystem().delete(output); // output is the compacted file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "642ecff53765901971db53eb9606f8b5c7ddffc7"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f0886ff8623fbbeb07e7e7c87fbc70c4d568738", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/3f0886ff8623fbbeb07e7e7c87fbc70c4d568738", "committedDate": "2020-02-18T22:24:07Z", "message": "dont delete output all the time"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f1983d4eee2ea1c9c03cffb8de3cfc4ad40338d4", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/f1983d4eee2ea1c9c03cffb8de3cfc4ad40338d4", "committedDate": "2020-02-18T22:22:58Z", "message": "dont delete output all the time"}, "afterCommit": {"oid": "3f0886ff8623fbbeb07e7e7c87fbc70c4d568738", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/3f0886ff8623fbbeb07e7e7c87fbc70c4d568738", "committedDate": "2020-02-18T22:24:07Z", "message": "dont delete output all the time"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNzIwNDI2", "url": "https://github.com/Alluxio/alluxio/pull/10935#pullrequestreview-360720426", "createdAt": "2020-02-18T22:27:49Z", "commit": {"oid": "3f0886ff8623fbbeb07e7e7c87fbc70c4d568738"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMjoyNzo0OVrOFrUxdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMjoyNzo0OVrOFrUxdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk3MzQzMA==", "bodyText": "Shouldn't we delete the output if there is a failure?", "url": "https://github.com/Alluxio/alluxio/pull/10935#discussion_r380973430", "createdAt": "2020-02-18T22:27:49Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/job/plan/transform/CompactDefinition.java", "diffHunk": "@@ -174,37 +172,26 @@ private boolean shouldIgnore(URIStatus status) {\n   @Override\n   public SerializableVoid runTask(CompactConfig config, ArrayList<CompactTask> tasks,\n       RunTaskContext context) throws Exception {\n-    Closer closer = Closer.create();\n-    boolean closed = false;\n-    Compactor compactor = new SequentialCompactor();\n     for (CompactTask task : tasks) {\n       ArrayList<String> inputs = task.getInputs();\n       if (inputs.isEmpty()) {\n         continue;\n       }\n       AlluxioURI output = new AlluxioURI(task.getOutput());\n-      List<TableReader> readers = Lists.newArrayList();\n-      TableWriter writer = null;\n-      try {\n+\n+      TableSchema schema;\n+      try (TableReader reader = TableReader.create(new AlluxioURI(inputs.get(0)), config.getPartitionInfo())) {\n+        schema = reader.getSchema();\n+      }\n+\n+      try (TableWriter writer = TableWriter.create(schema, output)) {\n         for (String input : inputs) {\n-          readers.add(closer.register(TableReader.create(new AlluxioURI(input),\n-              config.getPartitionInfo())));\n-        }\n-        TableSchema schema = readers.get(0).getSchema();\n-        writer = closer.register(TableWriter.create(schema, output));\n-        compactor.compact(readers, writer);\n-      } catch (Throwable t) {\n-        closer.close();\n-        closed = true;\n-        try {\n-          context.getFileSystem().delete(output); // output is the compacted file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f0886ff8623fbbeb07e7e7c87fbc70c4d568738"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7905b6edf9ff134aa11d1582e93931e301f25bdf", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/7905b6edf9ff134aa11d1582e93931e301f25bdf", "committedDate": "2020-02-18T22:36:43Z", "message": "delete output file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1386b5efb04121dd0e8d77f6d074161ae42bedcc", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/1386b5efb04121dd0e8d77f6d074161ae42bedcc", "committedDate": "2020-02-18T22:37:44Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNzQ3Mjcy", "url": "https://github.com/Alluxio/alluxio/pull/10935#pullrequestreview-360747272", "createdAt": "2020-02-18T23:26:37Z", "commit": {"oid": "1386b5efb04121dd0e8d77f6d074161ae42bedcc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4988, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}