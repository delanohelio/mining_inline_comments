{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MzcwOTM4", "number": 11715, "title": "Fix potential issue caused by unhandled exception of jnifuse", "bodyText": "", "createdAt": "2020-07-05T07:28:25Z", "url": "https://github.com/Alluxio/alluxio/pull/11715", "merged": true, "mergeCommit": {"oid": "df7d58d165ef1cda9c1f8742da60a625c8bf50b4"}, "closed": true, "closedAt": "2020-07-10T06:30:37Z", "author": {"login": "iluoeli"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcx3Gj7gH2gAyNDQ0MzcwOTM4OjllOTM4NDhjOThjOTNhMjlkMTlhNWViNmUxNDJhNWZlMjE3MDI0NDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczdnG7gFqTQ0NjE0OTM4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9e93848c98c93a29d19a5eb6e142a5fe21702447", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/9e93848c98c93a29d19a5eb6e142a5fe21702447", "committedDate": "2020-07-05T07:00:19Z", "message": "Fix potential issue caused by unhandled exception of jnifuse"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzMxMDU0", "url": "https://github.com/Alluxio/alluxio/pull/11715#pullrequestreview-443331054", "createdAt": "2020-07-06T18:55:35Z", "commit": {"oid": "9e93848c98c93a29d19a5eb6e142a5fe21702447"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1NTozNVrOGtjY4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1NTozNVrOGtjY4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxODkxNA==", "bodyText": "e.printStackTrace(); prints to stdout, not appropriate for production code.\nUse LOG.error(\"Failed to open {}: \", path, e) here so the stack trace will still be printed.\nwith claiming  private static final Logger LOG = LoggerFactory.getLogger(AbstractFuseFileSystem.class); in the beginning.", "url": "https://github.com/Alluxio/alluxio/pull/11715#discussion_r450418914", "createdAt": "2020-07-06T18:55:35Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/main/java/alluxio/jnifuse/AbstractFuseFileSystem.java", "diffHunk": "@@ -132,27 +132,49 @@ public void umount() {\n   }\n \n   public int openCallback(String path, ByteBuffer buf) {\n-    FuseFileInfo fi = new FuseFileInfo(buf);\n-    return open(path, fi);\n+    try {\n+      return open(path, FuseFileInfo.wrap(buf));\n+    } catch (Exception e) {\n+      e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e93848c98c93a29d19a5eb6e142a5fe21702447"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzMxNDgx", "url": "https://github.com/Alluxio/alluxio/pull/11715#pullrequestreview-443331481", "createdAt": "2020-07-06T18:56:21Z", "commit": {"oid": "9e93848c98c93a29d19a5eb6e142a5fe21702447"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1NjoyMVrOGtjaOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1NjoyMVrOGtjaOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxOTI1OQ==", "bodyText": "LOG.error(\"Failed to read {}, size {}, offset {}: \", path, size, offset, e)", "url": "https://github.com/Alluxio/alluxio/pull/11715#discussion_r450419259", "createdAt": "2020-07-06T18:56:21Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/main/java/alluxio/jnifuse/AbstractFuseFileSystem.java", "diffHunk": "@@ -132,27 +132,49 @@ public void umount() {\n   }\n \n   public int openCallback(String path, ByteBuffer buf) {\n-    FuseFileInfo fi = new FuseFileInfo(buf);\n-    return open(path, fi);\n+    try {\n+      return open(path, FuseFileInfo.wrap(buf));\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+      return -ErrorCodes.EIO();\n+    }\n   }\n \n   public int readCallback(String path, ByteBuffer buf, long size, long offset, ByteBuffer fibuf) {\n-    FuseFileInfo fi = new FuseFileInfo(fibuf);\n-    return read(path, buf, size, offset, fi);\n+    try {\n+      return read(path, buf, size, offset, FuseFileInfo.wrap(fibuf));\n+    } catch (Exception e) {\n+     e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e93848c98c93a29d19a5eb6e142a5fe21702447"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzMxNzA3", "url": "https://github.com/Alluxio/alluxio/pull/11715#pullrequestreview-443331707", "createdAt": "2020-07-06T18:56:41Z", "commit": {"oid": "9e93848c98c93a29d19a5eb6e142a5fe21702447"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1Njo0MVrOGtja-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1Njo0MVrOGtja-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxOTQ0OA==", "bodyText": "LOG.error(\"Failed to getattr {}: \", path, e)", "url": "https://github.com/Alluxio/alluxio/pull/11715#discussion_r450419448", "createdAt": "2020-07-06T18:56:41Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/main/java/alluxio/jnifuse/AbstractFuseFileSystem.java", "diffHunk": "@@ -132,27 +132,49 @@ public void umount() {\n   }\n \n   public int openCallback(String path, ByteBuffer buf) {\n-    FuseFileInfo fi = new FuseFileInfo(buf);\n-    return open(path, fi);\n+    try {\n+      return open(path, FuseFileInfo.wrap(buf));\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+      return -ErrorCodes.EIO();\n+    }\n   }\n \n   public int readCallback(String path, ByteBuffer buf, long size, long offset, ByteBuffer fibuf) {\n-    FuseFileInfo fi = new FuseFileInfo(fibuf);\n-    return read(path, buf, size, offset, fi);\n+    try {\n+      return read(path, buf, size, offset, FuseFileInfo.wrap(fibuf));\n+    } catch (Exception e) {\n+     e.printStackTrace();\n+     return -ErrorCodes.EIO();\n+    }\n   }\n \n   public int getattrCallback(String path, ByteBuffer buf) {\n-    FileStat stat = new FileStat(buf);\n-    return getattr(path, stat);\n+    try {\n+      return getattr(path, FileStat.wrap(buf));\n+    } catch (Exception e) {\n+      e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e93848c98c93a29d19a5eb6e142a5fe21702447"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzMyMDk1", "url": "https://github.com/Alluxio/alluxio/pull/11715#pullrequestreview-443332095", "createdAt": "2020-07-06T18:57:17Z", "commit": {"oid": "9e93848c98c93a29d19a5eb6e142a5fe21702447"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1NzoxN1rOGtjcMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1NzoxN1rOGtjcMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQxOTc2Mw==", "bodyText": "LOG.error(\"Failed to readdir {}, offset {}: \", path, offset, e)", "url": "https://github.com/Alluxio/alluxio/pull/11715#discussion_r450419763", "createdAt": "2020-07-06T18:57:17Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/main/java/alluxio/jnifuse/AbstractFuseFileSystem.java", "diffHunk": "@@ -132,27 +132,49 @@ public void umount() {\n   }\n \n   public int openCallback(String path, ByteBuffer buf) {\n-    FuseFileInfo fi = new FuseFileInfo(buf);\n-    return open(path, fi);\n+    try {\n+      return open(path, FuseFileInfo.wrap(buf));\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+      return -ErrorCodes.EIO();\n+    }\n   }\n \n   public int readCallback(String path, ByteBuffer buf, long size, long offset, ByteBuffer fibuf) {\n-    FuseFileInfo fi = new FuseFileInfo(fibuf);\n-    return read(path, buf, size, offset, fi);\n+    try {\n+      return read(path, buf, size, offset, FuseFileInfo.wrap(fibuf));\n+    } catch (Exception e) {\n+     e.printStackTrace();\n+     return -ErrorCodes.EIO();\n+    }\n   }\n \n   public int getattrCallback(String path, ByteBuffer buf) {\n-    FileStat stat = new FileStat(buf);\n-    return getattr(path, stat);\n+    try {\n+      return getattr(path, FileStat.wrap(buf));\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+      return -ErrorCodes.EIO();\n+    }\n   }\n \n   public int readdirCallback(String path, long bufaddr, FuseFillDir filter, long offset,\n       ByteBuffer fi) {\n-    return readdir(path, bufaddr, filter, offset, new FuseFileInfo(fi));\n+    try {\n+      return readdir(path, bufaddr, filter, offset, new FuseFileInfo(fi));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e93848c98c93a29d19a5eb6e142a5fe21702447"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzMyNDgw", "url": "https://github.com/Alluxio/alluxio/pull/11715#pullrequestreview-443332480", "createdAt": "2020-07-06T18:57:51Z", "commit": {"oid": "9e93848c98c93a29d19a5eb6e142a5fe21702447"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1Nzo1MVrOGtjdXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODo1Nzo1MVrOGtjdXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQyMDA2Mg==", "bodyText": "LOG.error(\"Failed to unlink {}: \", path, e)", "url": "https://github.com/Alluxio/alluxio/pull/11715#discussion_r450420062", "createdAt": "2020-07-06T18:57:51Z", "author": {"login": "apc999"}, "path": "integration/fuse/src/main/java/alluxio/jnifuse/AbstractFuseFileSystem.java", "diffHunk": "@@ -132,27 +132,49 @@ public void umount() {\n   }\n \n   public int openCallback(String path, ByteBuffer buf) {\n-    FuseFileInfo fi = new FuseFileInfo(buf);\n-    return open(path, fi);\n+    try {\n+      return open(path, FuseFileInfo.wrap(buf));\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+      return -ErrorCodes.EIO();\n+    }\n   }\n \n   public int readCallback(String path, ByteBuffer buf, long size, long offset, ByteBuffer fibuf) {\n-    FuseFileInfo fi = new FuseFileInfo(fibuf);\n-    return read(path, buf, size, offset, fi);\n+    try {\n+      return read(path, buf, size, offset, FuseFileInfo.wrap(fibuf));\n+    } catch (Exception e) {\n+     e.printStackTrace();\n+     return -ErrorCodes.EIO();\n+    }\n   }\n \n   public int getattrCallback(String path, ByteBuffer buf) {\n-    FileStat stat = new FileStat(buf);\n-    return getattr(path, stat);\n+    try {\n+      return getattr(path, FileStat.wrap(buf));\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+      return -ErrorCodes.EIO();\n+    }\n   }\n \n   public int readdirCallback(String path, long bufaddr, FuseFillDir filter, long offset,\n       ByteBuffer fi) {\n-    return readdir(path, bufaddr, filter, offset, new FuseFileInfo(fi));\n+    try {\n+      return readdir(path, bufaddr, filter, offset, new FuseFileInfo(fi));\n+    } catch (Exception e) {\n+      e.printStackTrace();\n+      return -ErrorCodes.EIO();\n+    }\n   }\n \n   public int unlinkCallback(String path) {\n-    return unlink(path);\n+    try {\n+      return unlink(path);\n+    } catch (Exception e) {\n+      e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e93848c98c93a29d19a5eb6e142a5fe21702447"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzMzNzI0", "url": "https://github.com/Alluxio/alluxio/pull/11715#pullrequestreview-443333724", "createdAt": "2020-07-06T18:59:59Z", "commit": {"oid": "9e93848c98c93a29d19a5eb6e142a5fe21702447"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3abb8f2c79eccc15fa40875b5529f4aa6bfe9ec6", "author": {"user": {"login": "iluoeli", "name": "Luo Yili"}}, "url": "https://github.com/Alluxio/alluxio/commit/3abb8f2c79eccc15fa40875b5529f4aa6bfe9ec6", "committedDate": "2020-07-08T14:01:17Z", "message": "Fix logging of AbstractFuseFileSystem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0Nzk5MjIw", "url": "https://github.com/Alluxio/alluxio/pull/11715#pullrequestreview-444799220", "createdAt": "2020-07-08T14:04:37Z", "commit": {"oid": "3abb8f2c79eccc15fa40875b5529f4aa6bfe9ec6"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0OTMwMTQ3", "url": "https://github.com/Alluxio/alluxio/pull/11715#pullrequestreview-444930147", "createdAt": "2020-07-08T16:22:29Z", "commit": {"oid": "3abb8f2c79eccc15fa40875b5529f4aa6bfe9ec6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNjoyMjoyOVrOGuvtsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNjoyMjoyOVrOGuvtsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY2OTQyNA==", "bodyText": "Something to be careful of is that if you want to log the exception with LOG.error(..., e), it doesn't work with the {} substitution ability. So, that means all of the log lines with exception as the last parameter should look something like:\nLOG.error(String.format(\"... %s\", path), e)\n\nThis way, the log message has all the parameters, and the exception and stack is printed.", "url": "https://github.com/Alluxio/alluxio/pull/11715#discussion_r451669424", "createdAt": "2020-07-08T16:22:29Z", "author": {"login": "gpang"}, "path": "integration/fuse/src/main/java/alluxio/jnifuse/AbstractFuseFileSystem.java", "diffHunk": "@@ -132,70 +137,147 @@ public void umount() {\n   }\n \n   public int openCallback(String path, ByteBuffer buf) {\n-    FuseFileInfo fi = new FuseFileInfo(buf);\n-    return open(path, fi);\n+    try {\n+      return open(path, FuseFileInfo.wrap(buf));\n+    } catch (Exception e) {\n+      LOG.error(\"Failed to open {}: \", path, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3abb8f2c79eccc15fa40875b5529f4aa6bfe9ec6"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MTQ5Mzg3", "url": "https://github.com/Alluxio/alluxio/pull/11715#pullrequestreview-446149387", "createdAt": "2020-07-10T06:26:11Z", "commit": {"oid": "3abb8f2c79eccc15fa40875b5529f4aa6bfe9ec6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4243, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}