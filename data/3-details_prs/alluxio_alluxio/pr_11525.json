{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwNTg2Nzc5", "number": 11525, "title": "Improve robustness of LocalCacheManager", "bodyText": "This PR fixes a potential race condition in LocalCacheManager and improves its robustness.\nThough designed to be threadsafe, LocalCacheManager returns a ReadableByteChannel to\nLocalCacheFileInStream, where I/O operations like reading a file is actually done at read or positionedRead at LocalCacheFileInStream. This leaves an opportunity to multiple threads racing on the same file outside threadsafe LocalCacheManager. E.g., a super slow reader thread may contend with a evictor thread who wants to remove the same page file per LRU policy, leaving the reader thread risk undefined behavior (up to operating system).\nInvariants after this PR:\n(1) operating a page files is always protected inside the page lock.\n(2) given no operation on the cache LocalCacheFileInStream (moved to LocalCacheManager in this PR), if cache fails in certain unexpected way, exceptions will always be catched by the NoExceptionCacheManager.\nThis PR changes the API of LocalCacheManager.read from returning a channel to returning the number of bytes read but copying bytes inside, which is a bit different from what i previously discussed with @calvinjia . This will make the code much simpler.", "createdAt": "2020-06-08T02:00:02Z", "url": "https://github.com/Alluxio/alluxio/pull/11525", "merged": true, "mergeCommit": {"oid": "e488f4d48d6415e664203d5d3fc84e755ff328b8"}, "closed": true, "closedAt": "2020-06-11T05:28:42Z", "author": {"login": "apc999"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpGrFYAFqTQyNTg4MDExNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqDhifgBqjM0MzE5ODMyODI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1ODgwMTE2", "url": "https://github.com/Alluxio/alluxio/pull/11525#pullrequestreview-425880116", "createdAt": "2020-06-08T02:03:28Z", "commit": {"oid": "23b1d9d46d56dda72a007ac3a379480f29067ad3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwMjowMzoyOFrOGgNcWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwMjowMzoyOFrOGgNcWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQyNzg2NA==", "bodyText": "move the IO operations inside LocalCacheManager under page locks to coordinate with other threads, also procted by NoExceptionManager", "url": "https://github.com/Alluxio/alluxio/pull/11525#discussion_r436427864", "createdAt": "2020-06-08T02:03:28Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -132,47 +134,40 @@ public int read(byte[] b, int off, int len) throws IOException {\n     if (mPosition >= mStatus.getLength()) { // at end of file\n       return -1;\n     }\n-    int bytesRead = 0;\n+    int totalBytesRead = 0;\n     long lengthToRead = Math.min(len, mStatus.getLength() - mPosition);\n     // for each page, check if it is available in the cache\n-    while (bytesRead < lengthToRead) {\n+    while (totalBytesRead < lengthToRead) {\n       long currentPage = mPosition / mPageSize;\n       int currentPageOffset = (int) (mPosition % mPageSize);\n-      int bytesLeftInPage = (int) Math.min(mPageSize - currentPageOffset, lengthToRead - bytesRead);\n+      int bytesLeftInPage =\n+          (int) Math.min(mPageSize - currentPageOffset, lengthToRead - totalBytesRead);\n       PageId pageId = new PageId(mStatus.getFileIdentifier(), currentPage);\n-      try (ReadableByteChannel cachedData = mCacheManager.get(pageId, currentPageOffset)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23b1d9d46d56dda72a007ac3a379480f29067ad3"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ea999bcb3585ede16dad168038ae108d1f3fae0", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/6ea999bcb3585ede16dad168038ae108d1f3fae0", "committedDate": "2020-06-08T07:16:28Z", "message": "Fix race condition in LocalCacheManager"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23b1d9d46d56dda72a007ac3a379480f29067ad3", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/23b1d9d46d56dda72a007ac3a379480f29067ad3", "committedDate": "2020-06-08T01:47:52Z", "message": "Fix race condition in LocalCacheManager"}, "afterCommit": {"oid": "6ea999bcb3585ede16dad168038ae108d1f3fae0", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/6ea999bcb3585ede16dad168038ae108d1f3fae0", "committedDate": "2020-06-08T07:16:28Z", "message": "Fix race condition in LocalCacheManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87ace2edcb55bf513cc5d4e69291e6dcf1bbe314", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/87ace2edcb55bf513cc5d4e69291e6dcf1bbe314", "committedDate": "2020-06-08T08:16:48Z", "message": "Fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NDY5MTUw", "url": "https://github.com/Alluxio/alluxio/pull/11525#pullrequestreview-426469150", "createdAt": "2020-06-08T17:39:28Z", "commit": {"oid": "87ace2edcb55bf513cc5d4e69291e6dcf1bbe314"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzozOToyOFrOGgpFxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzozOToyOFrOGgpFxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4MDgzOQ==", "bodyText": "Should we have this logic here or leave it to NoExceptionCacheManager?", "url": "https://github.com/Alluxio/alluxio/pull/11525#discussion_r436880839", "createdAt": "2020-06-08T17:39:28Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -445,18 +445,33 @@ private boolean deletePage(PageId pageId, PageInfo pageInfo) {\n     return true;\n   }\n \n-  @Nullable\n-  private ReadableByteChannel getPage(PageId pageId, int offset) {\n-    ReadableByteChannel ret;\n-    try {\n-      ret = mPageStore.get(pageId, offset);\n+  private int getPage(PageId pageId, int offset, int bytesToRead, byte[] buffer,\n+      int offsetInBuffer) {\n+    try (ReadableByteChannel chan = mPageStore.get(pageId, offset)) {\n+      // wrap return byte array in a bytebuffer and set the pos/limit for the page read\n+      ByteBuffer buf = ByteBuffer.wrap(buffer);\n+      buf.position(offsetInBuffer);\n+      buf.limit(offsetInBuffer + bytesToRead);\n+      // read data from cache\n+      while (buf.position() != buf.limit()) {\n+        if (chan.read(buf) == -1) {\n+          break;\n+        }\n+      }\n+      if (buf.position() != buf.limit()) {\n+        // data read from page store is inconsistent from the metastore\n+        Metrics.GET_ERRORS_FAILED_READ.inc();\n+        throw new IOException(String.format(\n+            \"Failed to read page {}: supposed to read {} bytes, {} bytes actually read\",\n+            pageId, bytesToRead, buf.position() - offsetInBuffer));\n+      }\n     } catch (IOException | PageNotFoundException e) {\n       LOG.error(\"Failed to get existing page {}: {}\", pageId, e);\n       Metrics.GET_ERRORS.inc();\n-      return null;\n+      return -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87ace2edcb55bf513cc5d4e69291e6dcf1bbe314"}, "originalPosition": 104}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NjcwMDk5", "url": "https://github.com/Alluxio/alluxio/pull/11525#pullrequestreview-426670099", "createdAt": "2020-06-08T22:39:58Z", "commit": {"oid": "87ace2edcb55bf513cc5d4e69291e6dcf1bbe314"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "672872ccf1deb873157302036d7b4dfbeade0a0e", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/672872ccf1deb873157302036d7b4dfbeade0a0e", "committedDate": "2020-06-11T00:57:04Z", "message": "Fix test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e21c6e5304d3197342fecf7d362bde61e85866b", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/3e21c6e5304d3197342fecf7d362bde61e85866b", "committedDate": "2020-06-10T22:08:29Z", "message": "Fix test"}, "afterCommit": {"oid": "672872ccf1deb873157302036d7b4dfbeade0a0e", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/672872ccf1deb873157302036d7b4dfbeade0a0e", "committedDate": "2020-06-11T00:57:04Z", "message": "Fix test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4477, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}