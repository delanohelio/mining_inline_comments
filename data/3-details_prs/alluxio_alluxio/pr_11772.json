{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NzU5NTk2", "number": 11772, "title": "Support table quota for Local cache", "bodyText": "Introduce and respect quota (in bytes) for Alluxio local cache.\nGoals:\n\nIf user sets a cache quota for a specific scope, Alluxio local cache will respect the quota for this scope and its ascendant scopes when adding new data into the local cache\nIf the cache quota for certain scope is reached, we will evict a page within this scope before adding a new page.\n\nNongoals:\n\nFor this very MVP, we will not address the case where Quota specification is changed during runtime.", "createdAt": "2020-07-15T21:51:49Z", "url": "https://github.com/Alluxio/alluxio/pull/11772", "merged": true, "mergeCommit": {"oid": "33b564bd37e95ee471ef0823095fcaac79151714"}, "closed": true, "closedAt": "2021-01-29T00:33:10Z", "author": {"login": "apc999"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3V_0lABqjM1NzQ1Mjg4MzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd0uBycgFqTU3ODg0ODgzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aeb6ec623f5527ab39e05d275190567162b75b9a", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/aeb6ec623f5527ab39e05d275190567162b75b9a", "committedDate": "2020-07-15T21:50:28Z", "message": "Support table quota for Local cache"}, "afterCommit": {"oid": "51abde72e7abe2e4fdd8ebfa700df828fc6f764c", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/51abde72e7abe2e4fdd8ebfa700df828fc6f764c", "committedDate": "2020-07-22T07:49:19Z", "message": "Support table quota for Local cache"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51abde72e7abe2e4fdd8ebfa700df828fc6f764c", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/51abde72e7abe2e4fdd8ebfa700df828fc6f764c", "committedDate": "2020-07-22T07:49:19Z", "message": "Support table quota for Local cache"}, "afterCommit": {"oid": "236a2ffaef9718fd361325b3865a093d3e7a1c7d", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/236a2ffaef9718fd361325b3865a093d3e7a1c7d", "committedDate": "2020-07-22T08:11:58Z", "message": "Support table quota for Local cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3630dd4b882f0bbc091b97f4c31e017a7a1bf43", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/e3630dd4b882f0bbc091b97f4c31e017a7a1bf43", "committedDate": "2020-07-22T17:50:25Z", "message": "Support table quota for Local cache"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "236a2ffaef9718fd361325b3865a093d3e7a1c7d", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/236a2ffaef9718fd361325b3865a093d3e7a1c7d", "committedDate": "2020-07-22T08:11:58Z", "message": "Support table quota for Local cache"}, "afterCommit": {"oid": "e3630dd4b882f0bbc091b97f4c31e017a7a1bf43", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/e3630dd4b882f0bbc091b97f4c31e017a7a1bf43", "committedDate": "2020-07-22T17:50:25Z", "message": "Support table quota for Local cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNzE5NjUw", "url": "https://github.com/Alluxio/alluxio/pull/11772#pullrequestreview-453719650", "createdAt": "2020-07-22T22:07:55Z", "commit": {"oid": "e3630dd4b882f0bbc091b97f4c31e017a7a1bf43"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMjowNzo1NlrOG118RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQyMjowOTozMlrOG11-mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTExMTQ5Mg==", "bodyText": "Is this string search potentially expensive compared to having a data structure?", "url": "https://github.com/Alluxio/alluxio/pull/11772#discussion_r459111492", "createdAt": "2020-07-22T22:07:56Z", "author": {"login": "calvinjia"}, "path": "core/common/src/main/java/alluxio/client/quota/Scope.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.client.quota;\n+\n+import com.google.common.base.MoreObjects;\n+import com.google.common.base.Objects;\n+import com.google.common.base.Preconditions;\n+\n+import javax.annotation.Nullable;\n+import javax.annotation.concurrent.ThreadSafe;\n+\n+/**\n+ * This class defines \"Scope\" of a quota. A scope is hierarchical, e.g.\n+ * <ul>\n+ *   <li>\".\" for global scope;</li>\n+ *   <li>\"schema1\" for an entire schema;</li>\n+ *   <li>\"schema2.table1\" for a given table;</li>\n+ *   <li>\"schema3.table2.partition1\" for a given partition</li>\n+ * </ul>\n+ */\n+@ThreadSafe\n+public class Scope {\n+  public static final String GLOBAL_ID = \".\";\n+  public static final String SEPARATOR = \".\";\n+\n+  public static final Scope GLOBAL = new Scope(GLOBAL_ID, 1);\n+  private final String mId;\n+  private final int mLength;\n+\n+  /**\n+   * @param id id of the scope\n+   * @return an instance of this scope converted from a string\n+   */\n+  public static Scope create(String id) {\n+    Preconditions.checkArgument(id != null && id.length() > 0,\n+        \"scope id can not be null or empty string\");\n+    if (GLOBAL_ID.equals(id)) {\n+      return GLOBAL;\n+    }\n+    return new Scope(id, id.length());\n+  }\n+\n+  private Scope(String id, int len) {\n+    mId = id;\n+    mLength = len;\n+  }\n+\n+  /**\n+   * @return parent scope\n+   */\n+  @Nullable\n+  public Scope parent() {\n+    int r = mId.lastIndexOf(SEPARATOR, mLength - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3630dd4b882f0bbc091b97f4c31e017a7a1bf43"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTExMTY2Ng==", "bodyText": "Typo?", "url": "https://github.com/Alluxio/alluxio/pull/11772#discussion_r459111666", "createdAt": "2020-07-22T22:08:27Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/evictor/ScopedCacheEvictor.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */CacheQuota.java:18", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3630dd4b882f0bbc091b97f4c31e017a7a1bf43"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTExMjA5MQ==", "bodyText": "Does a cache quota belong to a file? What happens if files have conflicting cache quotas?", "url": "https://github.com/Alluxio/alluxio/pull/11772#discussion_r459112091", "createdAt": "2020-07-22T22:09:32Z", "author": {"login": "calvinjia"}, "path": "core/common/src/main/java/alluxio/wire/FileInfo.java", "diffHunk": "@@ -665,6 +673,15 @@ public FileInfo setXAttr(Map<String, byte[]> xAttr) {\n     return this;\n   }\n \n+  /**\n+   * @param cacheQuota the cache quota\n+   * @return the updated {@link FileInfo}\n+   */\n+  public FileInfo setCacheQuota(CacheQuota cacheQuota) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3630dd4b882f0bbc091b97f4c31e017a7a1bf43"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b66a0c8b8719cb30969e6548b7a26207786d14b7", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/b66a0c8b8719cb30969e6548b7a26207786d14b7", "committedDate": "2020-08-26T00:08:38Z", "message": "Merge branch 'master' of github.com:Alluxio/alluxio into quota"}, "afterCommit": {"oid": "0af2dfb424ecbd4fceb0f67b240952a271e80f8a", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/0af2dfb424ecbd4fceb0f67b240952a271e80f8a", "committedDate": "2020-08-26T00:37:37Z", "message": "Merge branch 'master' of github.com:Alluxio/alluxio into quota"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "223272afa987fef96d707718a5566b2a77a95920", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/223272afa987fef96d707718a5566b2a77a95920", "committedDate": "2020-08-26T00:57:05Z", "message": "Merge branch 'master' of github.com:Alluxio/alluxio into quota"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0af2dfb424ecbd4fceb0f67b240952a271e80f8a", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/0af2dfb424ecbd4fceb0f67b240952a271e80f8a", "committedDate": "2020-08-26T00:37:37Z", "message": "Merge branch 'master' of github.com:Alluxio/alluxio into quota"}, "afterCommit": {"oid": "223272afa987fef96d707718a5566b2a77a95920", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/223272afa987fef96d707718a5566b2a77a95920", "committedDate": "2020-08-26T00:57:05Z", "message": "Merge branch 'master' of github.com:Alluxio/alluxio into quota"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4431da9cf36c51a02f923783e292aeab96ea052f", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/4431da9cf36c51a02f923783e292aeab96ea052f", "committedDate": "2020-08-27T05:33:31Z", "message": "Fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MDcwMzM0", "url": "https://github.com/Alluxio/alluxio/pull/11772#pullrequestreview-477070334", "createdAt": "2020-08-27T20:49:05Z", "commit": {"oid": "4431da9cf36c51a02f923783e292aeab96ea052f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDo0OTowNVrOHIgvCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMTo1OTo0NFrOHIiuYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY4Njk4NA==", "bodyText": "Did you consider making another class like QuotaMetaStore?", "url": "https://github.com/Alluxio/alluxio/pull/11772#discussion_r478686984", "createdAt": "2020-08-27T20:49:05Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/DefaultMetaStore.java", "diffHunk": "@@ -38,13 +43,37 @@\n   private final AtomicLong mBytes = new AtomicLong(0);\n   /** The number of pages stored. */\n   private final AtomicLong mPages = new AtomicLong(0);\n+  /** Track the number of bytes on each scope. */\n+  private final Map<Scope, Long> mBytesInScope = new ConcurrentHashMap<>();\n+  private final boolean mQuotaEnabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4431da9cf36c51a02f923783e292aeab96ea052f"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcwNjMxMQ==", "bodyText": "If this isn't intended for normal use, should we put it in the test package?", "url": "https://github.com/Alluxio/alluxio/pull/11772#discussion_r478706311", "createdAt": "2020-08-27T21:29:07Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/evictor/FIFOEvictor.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.client.file.cache.evictor;\n+\n+import alluxio.client.file.cache.CacheEvictor;\n+import alluxio.client.file.cache.PageId;\n+import alluxio.conf.AlluxioConfiguration;\n+\n+import java.util.LinkedList;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * Implementation of Evictor using FIFO eviction policy for the test.\n+ */\n+public class FIFOEvictor implements CacheEvictor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4431da9cf36c51a02f923783e292aeab96ea052f"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcxOTU4NA==", "bodyText": "Do we need to use the new put API with the cache quota?", "url": "https://github.com/Alluxio/alluxio/pull/11772#discussion_r478719584", "createdAt": "2020-08-27T21:59:44Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -100,12 +96,11 @@ public LocalCacheFileInStream(AlluxioURI path, OpenFilePOptions options, FileSys\n   public LocalCacheFileInStream(URIStatus status, OpenFilePOptions options, FileSystem externalFs,\n       CacheManager cacheManager) {\n     mPageSize = externalFs.getConf().getBytes(PropertyKey.USER_CLIENT_CACHE_PAGE_SIZE);\n-    mPath = new AlluxioURI(status.getPath());\n     mOpenOptions = options;\n     mExternalFs = externalFs;\n     mCacheManager = cacheManager;\n-    // Lazy init of status object\n     mStatus = status;\n+    mCacheQuota = status.getCacheQuota();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4431da9cf36c51a02f923783e292aeab96ea052f"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1eb61f86cb1635727e09f62b1f9e4b43066839e5", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/1eb61f86cb1635727e09f62b1f9e4b43066839e5", "committedDate": "2020-08-28T17:07:39Z", "message": "Fix issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fe515e1e50c172e327ba2004ddfff0b15364c02", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/5fe515e1e50c172e327ba2004ddfff0b15364c02", "committedDate": "2020-09-02T01:09:56Z", "message": "Save"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "427ea3463045cbe10cc21f76d2dec2c9347dfd9f", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/427ea3463045cbe10cc21f76d2dec2c9347dfd9f", "committedDate": "2021-01-13T21:01:04Z", "message": "Merge branch 'master' of github.com:Alluxio/alluxio into quota"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bba04bc354f052f594d0a191483afc57ba08370c", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/bba04bc354f052f594d0a191483afc57ba08370c", "committedDate": "2021-01-08T08:03:24Z", "message": "Merge branch 'master' of github.com:Alluxio/alluxio into quota"}, "afterCommit": {"oid": "427ea3463045cbe10cc21f76d2dec2c9347dfd9f", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/427ea3463045cbe10cc21f76d2dec2c9347dfd9f", "committedDate": "2021-01-13T21:01:04Z", "message": "Merge branch 'master' of github.com:Alluxio/alluxio into quota"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e11ff6e33e23a177a652adffc627066620fa485b", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/e11ff6e33e23a177a652adffc627066620fa485b", "committedDate": "2021-01-13T22:52:35Z", "message": "Revert unrelated change"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cbab7f0be722e81b8d69e283449d1c572efb232b", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/cbab7f0be722e81b8d69e283449d1c572efb232b", "committedDate": "2021-01-13T22:51:30Z", "message": "Revert unrelated change"}, "afterCommit": {"oid": "e11ff6e33e23a177a652adffc627066620fa485b", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/e11ff6e33e23a177a652adffc627066620fa485b", "committedDate": "2021-01-13T22:52:35Z", "message": "Revert unrelated change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b13b2d08ff0bc195f43b135cd7dac65a46410df0", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/b13b2d08ff0bc195f43b135cd7dac65a46410df0", "committedDate": "2021-01-14T21:20:28Z", "message": "Separate QuotaMetaStore and put FIFOEvictor back"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5ac8e22ca044290ffbec5ce9abfc03a93a535a6", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/c5ac8e22ca044290ffbec5ce9abfc03a93a535a6", "committedDate": "2021-01-14T21:33:11Z", "message": "Revert more unnecessary change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b4625968e1e75dba629c1570c503d0f65840868", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/0b4625968e1e75dba629c1570c503d0f65840868", "committedDate": "2021-01-16T00:57:07Z", "message": "Fix style and add more tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc1MDEzNDEz", "url": "https://github.com/Alluxio/alluxio/pull/11772#pullrequestreview-575013413", "createdAt": "2021-01-25T01:03:22Z", "commit": {"oid": "0b4625968e1e75dba629c1570c503d0f65840868"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2f486d7364a2a854e29ec287dca212f675fb558", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/e2f486d7364a2a854e29ec287dca212f675fb558", "committedDate": "2021-01-26T20:55:14Z", "message": "Merge branch 'master' of github.com:Alluxio/alluxio into quota"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d4585f4bc11d6ebdf68c4d01f42c8bdd530e88c", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/7d4585f4bc11d6ebdf68c4d01f42c8bdd530e88c", "committedDate": "2021-01-27T05:38:31Z", "message": "Fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53fd5bb1afbf64e833a57b8b5fbe2d4d0094066f", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/53fd5bb1afbf64e833a57b8b5fbe2d4d0094066f", "committedDate": "2021-01-27T06:44:04Z", "message": "Fix more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66d7922fb9383ed9567114689bd98f3a140378ba", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/66d7922fb9383ed9567114689bd98f3a140378ba", "committedDate": "2021-01-27T07:41:14Z", "message": "More cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4NjgyMTQy", "url": "https://github.com/Alluxio/alluxio/pull/11772#pullrequestreview-578682142", "createdAt": "2021-01-28T19:44:25Z", "commit": {"oid": "66d7922fb9383ed9567114689bd98f3a140378ba"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQxOTo0NDoyNVrOIcH_ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQxOTo0NjoyMVrOIcIDzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjM2MjAxOQ==", "bodyText": "Should we be consistent in the initialization of Maps?", "url": "https://github.com/Alluxio/alluxio/pull/11772#discussion_r566362019", "createdAt": "2021-01-28T19:44:25Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/QuotaMetaStore.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.client.file.cache;\n+\n+import alluxio.client.quota.CacheScope;\n+import alluxio.conf.AlluxioConfiguration;\n+import alluxio.exception.PageNotFoundException;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.function.Supplier;\n+\n+import javax.annotation.Nullable;\n+\n+/**\n+ * A metastore implementation that tracking usage associated with each cache scope.\n+ */\n+public class QuotaMetaStore extends DefaultMetaStore {\n+  /** Track the number of bytes on each scope. */\n+  private final Map<CacheScope, Long> mBytesInScope = new ConcurrentHashMap<>();\n+  private final Map<CacheScope, CacheEvictor> mCacheEvictors;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66d7922fb9383ed9567114689bd98f3a140378ba"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjM2MzA4NA==", "bodyText": "Do we need to use regex here or can we use split by delimiter and index?", "url": "https://github.com/Alluxio/alluxio/pull/11772#discussion_r566363084", "createdAt": "2021-01-28T19:46:21Z", "author": {"login": "calvinjia"}, "path": "core/common/src/main/java/alluxio/client/quota/CacheScope.java", "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.client.quota;\n+\n+import com.google.common.base.MoreObjects;\n+import com.google.common.base.Objects;\n+import com.google.common.base.Preconditions;\n+\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import javax.annotation.Nullable;\n+import javax.annotation.concurrent.ThreadSafe;\n+\n+/**\n+ * This class defines \"Scope\" of a cache quota. For Presto caching, scope is\n+ * hierarchical with different levels including:\n+ * <ul>\n+ *   <li>GLOBAL (\".\") for global scope;</li>\n+ *   <li>SCHEMA (e.g., \"schema1\") for an entire schema;</li>\n+ *   <li>TABLE (e.g., \"schema2.table1\") for a given table;</li>\n+ *   <li>PARTITION (e.g., \"schema3.table2.partition1\") for a given partition</li>\n+ * </ul>\n+ */\n+@ThreadSafe\n+public class CacheScope {\n+  private static final String GLOBAL_ID = \".\";\n+  public static final String SEPARATOR = \".\";\n+  public static final CacheScope GLOBAL = new CacheScope(GLOBAL_ID, 1, Level.GLOBAL);\n+\n+  /**\n+   * Level of a scope.\n+   */\n+  public enum Level {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66d7922fb9383ed9567114689bd98f3a140378ba"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3a0a15195ae1686c380288c3726886af7c25e1b", "author": {"user": {"login": "apc999", "name": "Bin Fan"}}, "url": "https://github.com/Alluxio/alluxio/commit/d3a0a15195ae1686c380288c3726886af7c25e1b", "committedDate": "2021-01-29T00:09:13Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4ODQ4ODM4", "url": "https://github.com/Alluxio/alluxio/pull/11772#pullrequestreview-578848838", "createdAt": "2021-01-29T00:18:53Z", "commit": {"oid": "d3a0a15195ae1686c380288c3726886af7c25e1b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4283, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}