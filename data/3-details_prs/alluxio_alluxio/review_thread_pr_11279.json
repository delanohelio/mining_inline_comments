{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNDA3MTYz", "number": 11279, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQyMjoyNDo0MlrODxGV_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoyNDozM1rOD2xrdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyODEwNzQ5OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContextReinitializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQyMjoyNDo0MlrOGEZLJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQyMjo1NTowMVrOGEZVtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI1OTk0Mw==", "bodyText": "I suspect the first submission will hold the thread and rest will never have a chance to run.", "url": "https://github.com/Alluxio/alluxio/pull/11279#discussion_r407259943", "createdAt": "2020-04-12T22:24:42Z", "author": {"login": "ggezer"}, "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContextReinitializer.java", "diffHunk": "@@ -55,9 +57,7 @@\n   public FileSystemContextReinitializer(FileSystemContext context) {\n     mContext = context;\n     mExecutor = new ConfigHashSync(context);\n-    mExecutorService = Executors.newSingleThreadExecutor(ThreadFactoryUtils.build(\n-        \"config-hash-master-heartbeat-%d\", true));\n-    mExecutorService.submit(\n+    REINIT_EXECUTOR.submit(\n         new HeartbeatThread(HeartbeatContext.META_MASTER_CONFIG_HASH_SYNC, mContext.getId(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b711360fbd7e8380cb9c7b672f6844980d6da6"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI2MjY0NQ==", "bodyText": "that makes sense, i'll change it to a scheduled fixed rate executor service and refactor the hearbeat executor", "url": "https://github.com/Alluxio/alluxio/pull/11279#discussion_r407262645", "createdAt": "2020-04-12T22:55:01Z", "author": {"login": "madanadit"}, "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContextReinitializer.java", "diffHunk": "@@ -55,9 +57,7 @@\n   public FileSystemContextReinitializer(FileSystemContext context) {\n     mContext = context;\n     mExecutor = new ConfigHashSync(context);\n-    mExecutorService = Executors.newSingleThreadExecutor(ThreadFactoryUtils.build(\n-        \"config-hash-master-heartbeat-%d\", true));\n-    mExecutorService.submit(\n+    REINIT_EXECUTOR.submit(\n         new HeartbeatThread(HeartbeatContext.META_MASTER_CONFIG_HASH_SYNC, mContext.getId(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI1OTk0Mw=="}, "originalCommit": {"oid": "c2b711360fbd7e8380cb9c7b672f6844980d6da6"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyODUwNjM1OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContextReinitializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwNDozMzoyM1rOGEceBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwNDozMzoyM1rOGEceBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzMxMzkyNA==", "bodyText": "Can you store the Future<?> in order to cancel it during reinitializer shutdown?", "url": "https://github.com/Alluxio/alluxio/pull/11279#discussion_r407313924", "createdAt": "2020-04-13T04:33:23Z", "author": {"login": "ggezer"}, "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContextReinitializer.java", "diffHunk": "@@ -55,14 +62,17 @@\n   public FileSystemContextReinitializer(FileSystemContext context) {\n     mContext = context;\n     mExecutor = new ConfigHashSync(context);\n-    mExecutorService = Executors.newSingleThreadExecutor(ThreadFactoryUtils.build(\n-        \"config-hash-master-heartbeat-%d\", true));\n-    mExecutorService.submit(\n-        new HeartbeatThread(HeartbeatContext.META_MASTER_CONFIG_HASH_SYNC, mContext.getId(),\n-            mExecutor, mContext.getClientContext().getClusterConf().getMs(\n-                PropertyKey.USER_CONF_SYNC_INTERVAL),\n-            mContext.getClientContext().getClusterConf(),\n-            mContext.getClientContext().getUserState()));\n+    REINIT_EXECUTOR.scheduleAtFixedRate(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93c173268d99be47a3795b356beb304189eb0932"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzYzNjM3OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/block/stream/BlockWorkerClientPool.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoyNDozM1rOGMsKmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxODozNTo0OFrOGMx-Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1OTcwNw==", "bodyText": "Can't we just set minCapacity to 0 here rathat than defining a new prop?\nI don't see a scenario where we'd set it anything else.", "url": "https://github.com/Alluxio/alluxio/pull/11279#discussion_r415959707", "createdAt": "2020-04-27T16:24:33Z", "author": {"login": "ggezer"}, "path": "core/client/fs/src/main/java/alluxio/client/block/stream/BlockWorkerClientPool.java", "diffHunk": "@@ -48,12 +48,14 @@\n    *\n    * @param userState the parent userState\n    * @param address address of the worker\n+   * @param minCapacity the minimum capacity of the pool\n    * @param maxCapacity the maximum capacity of the pool\n    * @param alluxioConf Alluxio configuration\n    */\n-  public BlockWorkerClientPool(UserState userState, GrpcServerAddress address, int maxCapacity,\n-      AlluxioConfiguration alluxioConf) {\n-    super(Options.defaultOptions().setMaxCapacity(maxCapacity).setGcExecutor(GC_EXECUTOR));\n+  public BlockWorkerClientPool(UserState userState, GrpcServerAddress address, int minCapacity,\n+      int maxCapacity, AlluxioConfiguration alluxioConf) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "597b12b0f330776e6ab80fadd2e719de43a66d93"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjA1NDgyNw==", "bodyText": "@ggezer I updated the default to zero as like you said that is the common scenario and made it hidden. just to be consistent with other client thread pools, i didn't remove the property", "url": "https://github.com/Alluxio/alluxio/pull/11279#discussion_r416054827", "createdAt": "2020-04-27T18:35:48Z", "author": {"login": "madanadit"}, "path": "core/client/fs/src/main/java/alluxio/client/block/stream/BlockWorkerClientPool.java", "diffHunk": "@@ -48,12 +48,14 @@\n    *\n    * @param userState the parent userState\n    * @param address address of the worker\n+   * @param minCapacity the minimum capacity of the pool\n    * @param maxCapacity the maximum capacity of the pool\n    * @param alluxioConf Alluxio configuration\n    */\n-  public BlockWorkerClientPool(UserState userState, GrpcServerAddress address, int maxCapacity,\n-      AlluxioConfiguration alluxioConf) {\n-    super(Options.defaultOptions().setMaxCapacity(maxCapacity).setGcExecutor(GC_EXECUTOR));\n+  public BlockWorkerClientPool(UserState userState, GrpcServerAddress address, int minCapacity,\n+      int maxCapacity, AlluxioConfiguration alluxioConf) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1OTcwNw=="}, "originalCommit": {"oid": "597b12b0f330776e6ab80fadd2e719de43a66d93"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1843, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}