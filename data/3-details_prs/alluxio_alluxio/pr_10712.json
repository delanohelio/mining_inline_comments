{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNzM1NzQ0", "number": 10712, "title": "Fix workflows when a child plan has no child tasks", "bodyText": "There were couple of bugs in the previous implementation:\n\n\nIf a plan has no children, the parent workflow currently doesn't get its status updated correctly because it currently relies on job workers reporting that the tasks are done/failed.\n\n\nIf a worker submits results for multiple tasks of the same job such that the job completes, workerHeartbeat on workflow crashes. This in particular causes #10720 to break JobWorker heartbeats.\n\n\nWorkflows are not failed properly when job workers die.\n\n\nThis code fixes it by replacing the workerHeartbeat logic in workflow to being logic in the StatusChangeCallback to check for all changes in Status instead of some.", "createdAt": "2020-01-09T02:08:15Z", "url": "https://github.com/Alluxio/alluxio/pull/10712", "merged": true, "mergeCommit": {"oid": "baf2be99454845841bec0b99313347fb1fa3e922"}, "closed": true, "closedAt": "2020-01-14T19:39:01Z", "author": {"login": "bradyoo"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4gMnnAH2gAyMzYwNzM1NzQ0OjlmN2Y3MmQxNTJmNzg3MGU1OGU3M2NjNWQyYTJiNTk0ZDIwMDcwNjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6WQb4AFqTM0Mjc4ODg3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9f7f72d152f7870e58e73cc5d2a2b594d2007061", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/9f7f72d152f7870e58e73cc5d2a2b594d2007061", "committedDate": "2020-01-09T02:05:26Z", "message": "fix workflows when a child plan has no child tasks."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03102144c5fb770ea227b2bca7d7e06c36c8e856", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/03102144c5fb770ea227b2bca7d7e06c36c8e856", "committedDate": "2020-01-09T14:59:51Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "489b9d91be1fb7a0d55318996af279d5edcc71ba", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/489b9d91be1fb7a0d55318996af279d5edcc71ba", "committedDate": "2020-01-09T15:10:38Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNjkwNjUw", "url": "https://github.com/Alluxio/alluxio/pull/10712#pullrequestreview-340690650", "createdAt": "2020-01-09T17:27:28Z", "commit": {"oid": "489b9d91be1fb7a0d55318996af279d5edcc71ba"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNzoyNzoyOFrOFb9wZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNzoyODoxMFrOFb9xoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2NzY4Ng==", "bodyText": "rename to NoopPlanConfig or TestPlanConfig", "url": "https://github.com/Alluxio/alluxio/pull/10712#discussion_r364867686", "createdAt": "2020-01-09T17:27:28Z", "author": {"login": "gpang"}, "path": "job/common/src/test/java/alluxio/job/DoNothingConfig.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job;\n+\n+import alluxio.job.plan.PlanConfig;\n+\n+import com.google.common.base.MoreObjects;\n+\n+/**\n+ * Config for a plan that does nothing.\n+ */\n+public class DoNothingConfig implements PlanConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "489b9d91be1fb7a0d55318996af279d5edcc71ba"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg2ODAwMQ==", "bodyText": "NoopPlanDefinition of TestPlanDefinition", "url": "https://github.com/Alluxio/alluxio/pull/10712#discussion_r364868001", "createdAt": "2020-01-09T17:28:10Z", "author": {"login": "gpang"}, "path": "job/server/src/test/java/alluxio/job/plan/DoNothingPlanDefinition.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan;\n+\n+import alluxio.collections.Pair;\n+import alluxio.job.DoNothingConfig;\n+import alluxio.job.RunTaskContext;\n+import alluxio.job.SelectExecutorsContext;\n+import alluxio.job.util.SerializableVoid;\n+import alluxio.wire.WorkerInfo;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * This definition of a plan that does nothing.\n+ */\n+public class DoNothingPlanDefinition", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "489b9d91be1fb7a0d55318996af279d5edcc71ba"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c830eeab97a835393d0cd840bf5c4f8fbd4c175", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/0c830eeab97a835393d0cd840bf5c4f8fbd4c175", "committedDate": "2020-01-09T17:32:33Z", "message": "Feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c1315ca5f21773b15e4d19b254ffc734814a566", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/6c1315ca5f21773b15e4d19b254ffc734814a566", "committedDate": "2020-01-09T17:57:45Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c1e3c41a0c26ed5a6af9366ef09756201531d9d", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/5c1e3c41a0c26ed5a6af9366ef09756201531d9d", "committedDate": "2020-01-09T19:18:03Z", "message": "change implementation significantly to handle all cases of plan status changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18cdd636991615b4fbe4b443972d37d2bdf02486", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/18cdd636991615b4fbe4b443972d37d2bdf02486", "committedDate": "2020-01-09T19:38:55Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNjQ0MzE0", "url": "https://github.com/Alluxio/alluxio/pull/10712#pullrequestreview-342644314", "createdAt": "2020-01-14T16:00:05Z", "commit": {"oid": "18cdd636991615b4fbe4b443972d37d2bdf02486"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNjowMDowNVrOFdctSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNjowNjoxNVrOFdc7Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyMzM2OQ==", "bodyText": "should this be the same as the class name? NoopPlanConfig?", "url": "https://github.com/Alluxio/alluxio/pull/10712#discussion_r366423369", "createdAt": "2020-01-14T16:00:05Z", "author": {"login": "gpang"}, "path": "job/common/src/test/java/alluxio/job/NoopPlanConfig.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job;\n+\n+import alluxio.job.plan.PlanConfig;\n+\n+import com.google.common.base.MoreObjects;\n+\n+/**\n+ * Config for a plan that does nothing.\n+ */\n+public class NoopPlanConfig implements PlanConfig {\n+\n+  public static final String NAME = \"DoNothing\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cdd636991615b4fbe4b443972d37d2bdf02486"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyMzkyMw==", "bodyText": "maybe say something like NoopPlanDefinition should never run a task", "url": "https://github.com/Alluxio/alluxio/pull/10712#discussion_r366423923", "createdAt": "2020-01-14T16:01:01Z", "author": {"login": "gpang"}, "path": "job/server/src/test/java/alluxio/job/plan/NoopPlanDefinition.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan;\n+\n+import alluxio.collections.Pair;\n+import alluxio.job.NoopPlanConfig;\n+import alluxio.job.RunTaskContext;\n+import alluxio.job.SelectExecutorsContext;\n+import alluxio.job.util.SerializableVoid;\n+import alluxio.wire.WorkerInfo;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * This definition of a plan that does nothing.\n+ */\n+public class NoopPlanDefinition\n+    extends AbstractVoidPlanDefinition<NoopPlanConfig, SerializableVoid> {\n+\n+  public NoopPlanDefinition() {}\n+\n+  @Override\n+  public Class<NoopPlanConfig> getJobConfigClass() {\n+    return NoopPlanConfig.class;\n+  }\n+\n+  @Override\n+  public Set<Pair<WorkerInfo, SerializableVoid>> selectExecutors(NoopPlanConfig config,\n+      List<WorkerInfo> jobWorkerInfoList, SelectExecutorsContext selectExecutorsContext)\n+      throws Exception {\n+    return new HashSet<>();\n+  }\n+\n+  @Override\n+  public SerializableVoid runTask(NoopPlanConfig config, SerializableVoid args,\n+                                  RunTaskContext runTaskContext) throws Exception {\n+    throw new IllegalStateException(\"Should never get here.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cdd636991615b4fbe4b443972d37d2bdf02486"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyNDc2MQ==", "bodyText": "Is this allowed to return Collections.emptySet()?", "url": "https://github.com/Alluxio/alluxio/pull/10712#discussion_r366424761", "createdAt": "2020-01-14T16:02:25Z", "author": {"login": "gpang"}, "path": "job/server/src/test/java/alluxio/job/plan/NoopPlanDefinition.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * The Alluxio Open Foundation licenses this work under the Apache License, version 2.0\n+ * (the \"License\"). You may not use this work except in compliance with the License, which is\n+ * available at www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n+ * either express or implied, as more fully set forth in the License.\n+ *\n+ * See the NOTICE file distributed with this work for information regarding copyright ownership.\n+ */\n+\n+package alluxio.job.plan;\n+\n+import alluxio.collections.Pair;\n+import alluxio.job.NoopPlanConfig;\n+import alluxio.job.RunTaskContext;\n+import alluxio.job.SelectExecutorsContext;\n+import alluxio.job.util.SerializableVoid;\n+import alluxio.wire.WorkerInfo;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * This definition of a plan that does nothing.\n+ */\n+public class NoopPlanDefinition\n+    extends AbstractVoidPlanDefinition<NoopPlanConfig, SerializableVoid> {\n+\n+  public NoopPlanDefinition() {}\n+\n+  @Override\n+  public Class<NoopPlanConfig> getJobConfigClass() {\n+    return NoopPlanConfig.class;\n+  }\n+\n+  @Override\n+  public Set<Pair<WorkerInfo, SerializableVoid>> selectExecutors(NoopPlanConfig config,\n+      List<WorkerInfo> jobWorkerInfoList, SelectExecutorsContext selectExecutorsContext)\n+      throws Exception {\n+    return new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cdd636991615b4fbe4b443972d37d2bdf02486"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyNTU1OQ==", "bodyText": "would more info in this warning message be helpful?", "url": "https://github.com/Alluxio/alluxio/pull/10712#discussion_r366425559", "createdAt": "2020-01-14T16:03:48Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/master/job/workflow/WorkflowTracker.java", "diffHunk": "@@ -248,36 +248,24 @@ private synchronized void next(long jobId) throws ResourceExhaustedException {\n       JobConfig childJobConfig = childJobConfigsIter.next();\n       try {\n         mJobMaster.run(childJobConfig, childJobId);\n-      } catch (JobDoesNotExistException e) {\n+      } catch (JobDoesNotExistException | ResourceExhaustedException e) {\n         LOG.warn(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cdd636991615b4fbe4b443972d37d2bdf02486"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQyNjk2Mw==", "bodyText": "should this be switch statement?", "url": "https://github.com/Alluxio/alluxio/pull/10712#discussion_r366426963", "createdAt": "2020-01-14T16:06:15Z", "author": {"login": "gpang"}, "path": "job/server/src/main/java/alluxio/master/job/workflow/WorkflowTracker.java", "diffHunk": "@@ -248,36 +248,24 @@ private synchronized void next(long jobId) throws ResourceExhaustedException {\n       JobConfig childJobConfig = childJobConfigsIter.next();\n       try {\n         mJobMaster.run(childJobConfig, childJobId);\n-      } catch (JobDoesNotExistException e) {\n+      } catch (JobDoesNotExistException | ResourceExhaustedException e) {\n         LOG.warn(e.getMessage());\n         stop(jobId, Status.FAILED, e.getMessage());\n       }\n     }\n   }\n \n   /**\n-   * Updates internal state of the workflows based on the updated state of the tasks.\n-   * @param taskInfoList list of tasks that have been updated\n-   * @throws ResourceExhaustedException if new jobs can't be scheduled\n+   * Updates internal state of the workflows based on the updated state of a plan.\n+   * @param planInfo info of the plan that had its status changed\n+   * @throws ResourceExhaustedException\n    */\n-  public synchronized void workerHeartbeat(List<TaskInfo> taskInfoList)\n-      throws ResourceExhaustedException {\n-\n-    for (TaskInfo taskInfo : taskInfoList) {\n-      Long planId = taskInfo.getParentId();\n-      JobInfo jobInfo = null;\n-      try {\n-        jobInfo = mJobMaster.getStatus(planId);\n-      } catch (JobDoesNotExistException e) {\n-        LOG.info(\"Received heartbeat for a task with an unknown parent. Skipping\", planId);\n-        continue;\n-      }\n-      Status status = jobInfo.getStatus();\n-      if (status.equals(Status.COMPLETED)) {\n-        done(planId);\n-      } else if (status.equals(Status.CANCELED) || status.equals(Status.FAILED)) {\n-        stop(planId, status, jobInfo.getErrorMessage());\n-      }\n+  public void onPlanStatusChange(PlanInfo planInfo) {\n+    Status status = planInfo.getStatus();\n+    if (status.equals(Status.COMPLETED)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18cdd636991615b4fbe4b443972d37d2bdf02486"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd67fcd95b1c4bd434b0022f37d68a8c865ba4c7", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/cd67fcd95b1c4bd434b0022f37d68a8c865ba4c7", "committedDate": "2020-01-14T18:10:35Z", "message": "feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32db8d611103981afbba3075ac608786eb2aed84", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/32db8d611103981afbba3075ac608786eb2aed84", "committedDate": "2020-01-14T18:36:18Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9ecde9e5f012d8d75c2c77c5aed8ebaa4cb7686", "author": {"user": {"login": "bradyoo", "name": "Bradley Yoo"}}, "url": "https://github.com/Alluxio/alluxio/commit/e9ecde9e5f012d8d75c2c77c5aed8ebaa4cb7686", "committedDate": "2020-01-14T18:58:57Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNzg4ODcx", "url": "https://github.com/Alluxio/alluxio/pull/10712#pullrequestreview-342788871", "createdAt": "2020-01-14T19:38:24Z", "commit": {"oid": "e9ecde9e5f012d8d75c2c77c5aed8ebaa4cb7686"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3261, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}