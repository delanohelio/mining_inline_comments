{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNTk1MTEw", "number": 10835, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMTo0MjoyMlrODdI0zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMTo0NDo0NlrODdI3cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODc5ODg1OnYy", "diffSide": "RIGHT", "path": "core/client/hdfs/src/main/java/alluxio/hadoop/AbstractFileSystem.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMTo0MjoyMlrOFlkeJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMjoxNzoxMlrOFllacw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzOTE3Mw==", "bodyText": "Would it be okay now that the file system client does not have the client user subject?", "url": "https://github.com/Alluxio/alluxio/pull/10835#discussion_r374939173", "createdAt": "2020-02-04T21:42:22Z", "author": {"login": "bf8086"}, "path": "core/client/hdfs/src/main/java/alluxio/hadoop/AbstractFileSystem.java", "diffHunk": "@@ -491,9 +491,13 @@ public synchronized void initialize(URI uri, org.apache.hadoop.conf.Configuratio\n     // Create FileSystem for accessing Alluxio.\n     // Disable URI validation for non-Alluxio schemes.\n     boolean disableUriValidation =\n-        (uri.getScheme() != null) ? uri.getScheme().equals(Constants.SCHEME) : true;\n-    mFileSystem = FileSystem.Factory.create(\n-        ClientContext.create(subject, alluxioConf).setUriValidationEnabled(disableUriValidation));\n+        (uri.getScheme() == null) || uri.getScheme().equals(Constants.SCHEME);\n+    if (alluxioConf.getBoolean(PropertyKey.USER_LOCAL_CACHE_LIBRARY)) {\n+      mFileSystem = FileSystem.Factory.create(null, alluxioConf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dca43512f9788565f4984870c4bfd0247a412129"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk1NDYxMQ==", "bodyText": "that shouldn't be necessary in library mode", "url": "https://github.com/Alluxio/alluxio/pull/10835#discussion_r374954611", "createdAt": "2020-02-04T22:17:12Z", "author": {"login": "calvinjia"}, "path": "core/client/hdfs/src/main/java/alluxio/hadoop/AbstractFileSystem.java", "diffHunk": "@@ -491,9 +491,13 @@ public synchronized void initialize(URI uri, org.apache.hadoop.conf.Configuratio\n     // Create FileSystem for accessing Alluxio.\n     // Disable URI validation for non-Alluxio schemes.\n     boolean disableUriValidation =\n-        (uri.getScheme() != null) ? uri.getScheme().equals(Constants.SCHEME) : true;\n-    mFileSystem = FileSystem.Factory.create(\n-        ClientContext.create(subject, alluxioConf).setUriValidationEnabled(disableUriValidation));\n+        (uri.getScheme() == null) || uri.getScheme().equals(Constants.SCHEME);\n+    if (alluxioConf.getBoolean(PropertyKey.USER_LOCAL_CACHE_LIBRARY)) {\n+      mFileSystem = FileSystem.Factory.create(null, alluxioConf);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzOTE3Mw=="}, "originalCommit": {"oid": "dca43512f9788565f4984870c4bfd0247a412129"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODgwNTYwOnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystem.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMTo0NDo0NlrOFlkicg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMjoxNjoxOFrOFllY-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk0MDI3NA==", "bodyText": "Would it be cleaner if we just have a subclass of FileSystemContext that override getClusterConf to return the client side configuration instead?", "url": "https://github.com/Alluxio/alluxio/pull/10835#discussion_r374940274", "createdAt": "2020-02-04T21:44:46Z", "author": {"login": "bf8086"}, "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystem.java", "diffHunk": "@@ -130,9 +130,17 @@ public static FileSystem create(ClientContext ctx) {\n      * @return a new FileSystem instance\n      */\n     public static FileSystem create(FileSystemContext context) {\n+      return create(context, context.getClusterConf());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dca43512f9788565f4984870c4bfd0247a412129"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk1NDIzNQ==", "bodyText": "FileSystemContext wasn't written to be easily extended, and even if we had a subclass we would still need a switch somewhere to make that FileSystemContext version", "url": "https://github.com/Alluxio/alluxio/pull/10835#discussion_r374954235", "createdAt": "2020-02-04T22:16:18Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystem.java", "diffHunk": "@@ -130,9 +130,17 @@ public static FileSystem create(ClientContext ctx) {\n      * @return a new FileSystem instance\n      */\n     public static FileSystem create(FileSystemContext context) {\n+      return create(context, context.getClusterConf());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk0MDI3NA=="}, "originalCommit": {"oid": "dca43512f9788565f4984870c4bfd0247a412129"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2135, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}