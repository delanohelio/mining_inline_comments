{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MDQwNDgx", "number": 11399, "title": "Move validation tools from examples/ module into shell/", "bodyText": "This moves runTests, runUfsTests and journalCrashTest from examples/ to shell/ module.\nMoving journalCrashTest too as it uses CliUtils. CliUtils is also renamed to RunTestUtils to be more expressive.", "createdAt": "2020-05-08T04:36:18Z", "url": "https://github.com/Alluxio/alluxio/pull/11399", "merged": true, "mergeCommit": {"oid": "5e8251996c663f0ac3b03eeb2ea20cf1d706a141"}, "closed": true, "closedAt": "2020-05-14T00:37:26Z", "author": {"login": "jiacheliu3"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfKN0qgH2gAyNDE1MDQwNDgxOjBlNTIxZTI0ZTAyNTkxMjM3YWY1NzE3OTNkNmY1NTY0YTA2NzFhYTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgS3jrAFqTQwOTM2NjExNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0e521e24e02591237af571793d6f5564a0671aa5", "author": {"user": {"login": "jiacheliu3", "name": "Jiacheng Liu"}}, "url": "https://github.com/Alluxio/alluxio/commit/0e521e24e02591237af571793d6f5564a0671aa5", "committedDate": "2020-05-08T04:31:53Z", "message": "compiles and works"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb8cb43fe9863d2ccedc6f0f7e2c5047c22376a6", "author": {"user": {"login": "jiacheliu3", "name": "Jiacheng Liu"}}, "url": "https://github.com/Alluxio/alluxio/commit/fb8cb43fe9863d2ccedc6f0f7e2c5047c22376a6", "committedDate": "2020-05-08T05:06:26Z", "message": "update logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f7b6aa90e023d79a172a03449ffb4479bf9550a", "author": {"user": {"login": "jiacheliu3", "name": "Jiacheng Liu"}}, "url": "https://github.com/Alluxio/alluxio/commit/6f7b6aa90e023d79a172a03449ffb4479bf9550a", "committedDate": "2020-05-08T05:08:12Z", "message": "format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba1e51bd604857f7c85fa4aee9278914ee76f249", "author": {"user": {"login": "jiacheliu3", "name": "Jiacheng Liu"}}, "url": "https://github.com/Alluxio/alluxio/commit/ba1e51bd604857f7c85fa4aee9278914ee76f249", "committedDate": "2020-05-08T05:22:45Z", "message": "remove setting methods to public"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6", "author": {"user": {"login": "jiacheliu3", "name": "Jiacheng Liu"}}, "url": "https://github.com/Alluxio/alluxio/commit/bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6", "committedDate": "2020-05-08T05:54:56Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NzY4NTQ2", "url": "https://github.com/Alluxio/alluxio/pull/11399#pullrequestreview-408768546", "createdAt": "2020-05-10T18:10:16Z", "commit": {"oid": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxODoxMDoxNlrOGTGT7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxODoxNjozNVrOGTGW4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY3OTUzNA==", "bodyText": "please fix the spacing on this dependency", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422679534", "createdAt": "2020-05-10T18:10:16Z", "author": {"login": "ZacBlanco"}, "path": "shell/pom.xml", "diffHunk": "@@ -51,14 +51,18 @@\n       <groupId>commons-io</groupId>\n       <artifactId>commons-io</artifactId>\n     </dependency>\n-   <dependency>\n-     <groupId>org.apache.httpcomponents</groupId>\n-     <artifactId>httpclient</artifactId>\n-   </dependency>\n-   <dependency>\n+    <dependency>\n+      <groupId>org.apache.httpcomponents</groupId>\n+      <artifactId>httpclient</artifactId>\n+    </dependency>\n+    <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY3OTU3Nw==", "bodyText": "please revert if there is no change here", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422679577", "createdAt": "2020-05-10T18:10:37Z", "author": {"login": "ZacBlanco"}, "path": "shell/pom.xml", "diffHunk": "@@ -82,8 +86,8 @@\n       <version>${project.version}</version>\n     </dependency>\n     <dependency>\n-        <groupId>org.apache.commons</groupId>\n-        <artifactId>commons-compress</artifactId>\n+      <groupId>org.apache.commons</groupId>\n+      <artifactId>commons-compress</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY3OTgzMQ==", "bodyText": "why remove this?", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422679831", "createdAt": "2020-05-10T18:12:54Z", "author": {"login": "ZacBlanco"}, "path": "shell/src/main/java/alluxio/cli/UnderFileSystemContractTest.java", "diffHunk": "@@ -111,42 +106,47 @@ private void runS3Operations() throws Exception {\n     mUfs = UnderFileSystem.Factory.create(mUfsPath, getUfsConf());\n \n     String testDir = createTestDirectory();\n-    loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n+    return loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n   }\n \n   /**\n    * Loads and runs the tests in the target operations class.\n    *\n    * @param operations the class that contains the tests to run\n    * @param testDir the test directory to run tests against\n+   * @return the number of failed tests\n    */\n-  private void loadAndRunTests(Object operations, String testDir) throws Exception {\n+  private int loadAndRunTests(Object operations, String testDir) throws Exception {\n+    int failedTestCnt = 0;\n     try {\n       Class classToRun = operations.getClass();\n-      Field[] fields = classToRun.getDeclaredFields();\n-      for (Field field : fields) {\n-        field.setAccessible(true);\n-      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY4MDAyNQ==", "bodyText": "we should avoid catch-all here. Is there a reason to use Exception over InvocationTargetException?", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422680025", "createdAt": "2020-05-10T18:14:25Z", "author": {"login": "ZacBlanco"}, "path": "shell/src/main/java/alluxio/cli/UnderFileSystemContractTest.java", "diffHunk": "@@ -111,42 +106,47 @@ private void runS3Operations() throws Exception {\n     mUfs = UnderFileSystem.Factory.create(mUfsPath, getUfsConf());\n \n     String testDir = createTestDirectory();\n-    loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n+    return loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n   }\n \n   /**\n    * Loads and runs the tests in the target operations class.\n    *\n    * @param operations the class that contains the tests to run\n    * @param testDir the test directory to run tests against\n+   * @return the number of failed tests\n    */\n-  private void loadAndRunTests(Object operations, String testDir) throws Exception {\n+  private int loadAndRunTests(Object operations, String testDir) throws Exception {\n+    int failedTestCnt = 0;\n     try {\n       Class classToRun = operations.getClass();\n-      Field[] fields = classToRun.getDeclaredFields();\n-      for (Field field : fields) {\n-        field.setAccessible(true);\n-      }\n       Method[] tests = classToRun.getDeclaredMethods();\n       for (Method test : tests) {\n         String testName = test.getName();\n         if (testName.endsWith(\"Test\")) {\n           System.out.printf(\"Running test: %s...\", testName);\n+          boolean passed = false;\n           try {\n             test.invoke(operations);\n-          } catch (InvocationTargetException e) {\n+            passed = true;\n+            cleanupUfs(testDir);\n+          } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY4MDIzMw==", "bodyText": "should we not put cleanupUfs even on failure?", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422680233", "createdAt": "2020-05-10T18:16:08Z", "author": {"login": "ZacBlanco"}, "path": "shell/src/main/java/alluxio/cli/UnderFileSystemContractTest.java", "diffHunk": "@@ -111,42 +106,47 @@ private void runS3Operations() throws Exception {\n     mUfs = UnderFileSystem.Factory.create(mUfsPath, getUfsConf());\n \n     String testDir = createTestDirectory();\n-    loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n+    return loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n   }\n \n   /**\n    * Loads and runs the tests in the target operations class.\n    *\n    * @param operations the class that contains the tests to run\n    * @param testDir the test directory to run tests against\n+   * @return the number of failed tests\n    */\n-  private void loadAndRunTests(Object operations, String testDir) throws Exception {\n+  private int loadAndRunTests(Object operations, String testDir) throws Exception {\n+    int failedTestCnt = 0;\n     try {\n       Class classToRun = operations.getClass();\n-      Field[] fields = classToRun.getDeclaredFields();\n-      for (Field field : fields) {\n-        field.setAccessible(true);\n-      }\n       Method[] tests = classToRun.getDeclaredMethods();\n       for (Method test : tests) {\n         String testName = test.getName();\n         if (testName.endsWith(\"Test\")) {\n           System.out.printf(\"Running test: %s...\", testName);\n+          boolean passed = false;\n           try {\n             test.invoke(operations);\n-          } catch (InvocationTargetException e) {\n+            passed = true;\n+            cleanupUfs(testDir);\n+          } catch (Exception e) {\n             if (mUfs.getUnderFSType().equals(S3_IDENTIFIER)) {\n               logRelatedS3Operations(test);\n             }\n-            throw new IOException(e.getTargetException());\n+            System.err.format(\"Test %s.%s aborted%n%s\", test.getClass(), test.getName(), e);\n+          } finally {\n+            RunTestUtils.printPassInfo(passed);\n+            if (!passed) {\n+              failedTestCnt++;\n+            }\n           }\n-          System.out.println(\"Test Passed!\");\n-          cleanupUfs(testDir);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY4MDI5MA==", "bodyText": "does this print something different based on whether passed is true or false?", "url": "https://github.com/Alluxio/alluxio/pull/11399#discussion_r422680290", "createdAt": "2020-05-10T18:16:35Z", "author": {"login": "ZacBlanco"}, "path": "shell/src/main/java/alluxio/cli/UnderFileSystemContractTest.java", "diffHunk": "@@ -111,42 +106,47 @@ private void runS3Operations() throws Exception {\n     mUfs = UnderFileSystem.Factory.create(mUfsPath, getUfsConf());\n \n     String testDir = createTestDirectory();\n-    loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n+    return loadAndRunTests(new S3ASpecificOperations(testDir, mUfs, mConf), testDir);\n   }\n \n   /**\n    * Loads and runs the tests in the target operations class.\n    *\n    * @param operations the class that contains the tests to run\n    * @param testDir the test directory to run tests against\n+   * @return the number of failed tests\n    */\n-  private void loadAndRunTests(Object operations, String testDir) throws Exception {\n+  private int loadAndRunTests(Object operations, String testDir) throws Exception {\n+    int failedTestCnt = 0;\n     try {\n       Class classToRun = operations.getClass();\n-      Field[] fields = classToRun.getDeclaredFields();\n-      for (Field field : fields) {\n-        field.setAccessible(true);\n-      }\n       Method[] tests = classToRun.getDeclaredMethods();\n       for (Method test : tests) {\n         String testName = test.getName();\n         if (testName.endsWith(\"Test\")) {\n           System.out.printf(\"Running test: %s...\", testName);\n+          boolean passed = false;\n           try {\n             test.invoke(operations);\n-          } catch (InvocationTargetException e) {\n+            passed = true;\n+            cleanupUfs(testDir);\n+          } catch (Exception e) {\n             if (mUfs.getUnderFSType().equals(S3_IDENTIFIER)) {\n               logRelatedS3Operations(test);\n             }\n-            throw new IOException(e.getTargetException());\n+            System.err.format(\"Test %s.%s aborted%n%s\", test.getClass(), test.getName(), e);\n+          } finally {\n+            RunTestUtils.printPassInfo(passed);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bef6ff9a362fead4ce5a04f0d22b9b9e5dfb68c6"}, "originalPosition": 94}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4da28f645f0d92e9c1a9a7dd0206f8388d6ccd7", "author": {"user": {"login": "jiacheliu3", "name": "Jiacheng Liu"}}, "url": "https://github.com/Alluxio/alluxio/commit/f4da28f645f0d92e9c1a9a7dd0206f8388d6ccd7", "committedDate": "2020-05-11T12:01:37Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MzY2MTE2", "url": "https://github.com/Alluxio/alluxio/pull/11399#pullrequestreview-409366116", "createdAt": "2020-05-11T17:10:38Z", "commit": {"oid": "f4da28f645f0d92e9c1a9a7dd0206f8388d6ccd7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4611, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}