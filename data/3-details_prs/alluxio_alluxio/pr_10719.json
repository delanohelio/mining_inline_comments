{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMTM0MjE3", "number": 10719, "title": "Release clients back into pools during even during context reinit", "bodyText": "This removes a resource leak which may occur when a thread on a client is interrupted while performing any kind of operation.\nBecause it's possible for a fs context re-initialization to occur while the resource is\nacquired this solution removes the blockReinit which throws a runtime exception during\nan interrupt and is the root cause of the resource leak.\nThere are three different cases to which may occur during the release of the resource\n\nRelease while the context is re-initializing\n\nThe original mBlockMasterClientPool or mFileSystemMasterClientPool\nmay be null, closed, or overwritten with a difference pool. The inner class here saves\nthe original pool reference used to acquire the client initially. Releasing into the closed pool\nis harmless.\n\n\nRelease after the context has been re-initialized\n\nSimilar to the above scenario the original mBlockMasterClientPool or\nmFileSystemMasterClientPool are going to be using an entirely new pool. Since\nthis method will save the original pool reference, this method would result in releasing\ninto a closed pool which is harmless\n\n\nRelease before any re-initialization\n\nThis is the normal case. There are no special considerations\n\n\n\nThe issues mainly affected the FSMaster and BlockMaster clients, however upon inspection, BlockWorker clients have a similar issue, but seems to happen less frequently than the master clients. This PR also applies a similar strategy for BlockWorker clients to hold onto the references of the pool used during the acquire method to make a best-effort to release the resource when finished being used.\nCloses #9922 #10468", "createdAt": "2020-01-09T20:03:09Z", "url": "https://github.com/Alluxio/alluxio/pull/10719", "merged": true, "mergeCommit": {"oid": "5c4c32d193496433195c75bf2a1c0f60cd54857b"}, "closed": true, "closedAt": "2020-01-10T20:36:40Z", "author": {"login": "ZacBlanco"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4yEJKAFqTM0MDg2MzYyMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb5Dk-jgFqTM0MTM2OTg4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwODYzNjIz", "url": "https://github.com/Alluxio/alluxio/pull/10719#pullrequestreview-340863623", "createdAt": "2020-01-09T22:47:29Z", "commit": {"oid": "626fdf34ce3d945ab2e6b467588b434db0ac7419"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMjo0NzozMFrOFcFr9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMjo1MzowOVrOFcFzcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk5NzYyMw==", "bodyText": "update comment about the resource", "url": "https://github.com/Alluxio/alluxio/pull/10719#discussion_r364997623", "createdAt": "2020-01-09T22:47:30Z", "author": {"login": "gpang"}, "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java", "diffHunk": "@@ -471,25 +471,33 @@ public void close() {\n    * @param workerNetAddress the network address of the channel\n    * @return the acquired block worker", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "626fdf34ce3d945ab2e6b467588b434db0ac7419"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk5OTUzOQ==", "bodyText": "Hrmmm, can we avoid explicitly defining it, and just define a local final var for it? It will get captured like that right?", "url": "https://github.com/Alluxio/alluxio/pull/10719#discussion_r364999539", "createdAt": "2020-01-09T22:53:09Z", "author": {"login": "gpang"}, "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java", "diffHunk": "@@ -471,25 +471,33 @@ public void close() {\n    * @param workerNetAddress the network address of the channel\n    * @return the acquired block worker\n    */\n-  public BlockWorkerClient acquireBlockWorkerClient(final WorkerNetAddress workerNetAddress)\n+  public CloseableResource<BlockWorkerClient> acquireBlockWorkerClient(\n+      final WorkerNetAddress workerNetAddress)\n       throws IOException {\n     try (ReinitBlockerResource r = blockReinit()) {\n-      return acquireBlockWorkerClientInternal(workerNetAddress, getClientContext().getSubject());\n+      return acquireBlockWorkerClientInternal(workerNetAddress, getClientContext());\n     }\n   }\n \n-  private BlockWorkerClient acquireBlockWorkerClientInternal(\n-      final WorkerNetAddress workerNetAddress, final Subject subject) throws IOException {\n-    SocketAddress address =\n-        NetworkAddressUtils.getDataPortSocketAddress(workerNetAddress, getClusterConf());\n+  private CloseableResource<BlockWorkerClient> acquireBlockWorkerClientInternal(\n+      final WorkerNetAddress workerNetAddress, final ClientContext context) throws IOException {\n+    SocketAddress address = NetworkAddressUtils\n+        .getDataPortSocketAddress(workerNetAddress, context.getClusterConf());\n     GrpcServerAddress serverAddress = GrpcServerAddress.create(workerNetAddress.getHost(), address);\n-    ClientPoolKey key = new ClientPoolKey(address,\n-        AuthenticationUserUtils.getImpersonationUser(subject, getClusterConf()));\n-    return mBlockWorkerClientPool.computeIfAbsent(key,\n-        k -> new BlockWorkerClientPool(subject, serverAddress,\n-            getClusterConf().getInt(PropertyKey.USER_BLOCK_WORKER_CLIENT_POOL_SIZE),\n-            getClusterConf(), mWorkerGroup))\n-        .acquire();\n+    ClientPoolKey key = new ClientPoolKey(address, AuthenticationUserUtils\n+            .getImpersonationUser(context.getSubject(), context.getClusterConf()));\n+    return new CloseableResource<BlockWorkerClient>(mBlockWorkerClientPool.computeIfAbsent(key,\n+        k -> new BlockWorkerClientPool(context.getSubject(), serverAddress,\n+            context.getClusterConf().getInt(PropertyKey.USER_BLOCK_WORKER_CLIENT_POOL_SIZE),\n+            context.getClusterConf(), mWorkerGroup))\n+        .acquire()) {\n+      // Save the reference to the original pool map.\n+      ConcurrentHashMap<ClientPoolKey, BlockWorkerClientPool> mPoolMap = mBlockWorkerClientPool;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "626fdf34ce3d945ab2e6b467588b434db0ac7419"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c15753e6133bcfbf11f0d290b26eed850c0f899b", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/c15753e6133bcfbf11f0d290b26eed850c0f899b", "committedDate": "2020-01-09T23:03:35Z", "message": "Release clients back into pools even on interrupts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20550430f9f46362bd791d2113f9683930d9fce1", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/20550430f9f46362bd791d2113f9683930d9fce1", "committedDate": "2020-01-09T23:05:31Z", "message": "blockReinit before calling method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16a9f0ffccc1d452ecacb1fe8c564dceaafdc4b5", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/16a9f0ffccc1d452ecacb1fe8c564dceaafdc4b5", "committedDate": "2020-01-09T23:06:10Z", "message": "remove unused methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d78d1d071427606e7b2ff848109a8069f1fa59b4", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/d78d1d071427606e7b2ff848109a8069f1fa59b4", "committedDate": "2020-01-09T23:06:10Z", "message": "Use ClosableResource<T> with BlockWorkerClient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5a9cd0f5432c06c497052f70a9983ad5a17ebda", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/f5a9cd0f5432c06c497052f70a9983ad5a17ebda", "committedDate": "2020-01-09T23:06:11Z", "message": "appease spotbugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f421a2c71fba50c142fad482b0ffc8b7f58031f", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/8f421a2c71fba50c142fad482b0ffc8b7f58031f", "committedDate": "2020-01-09T23:07:05Z", "message": "fix checkstyle"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9322d4e27db77d49d357dbb89ec74b502beb11c", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/f9322d4e27db77d49d357dbb89ec74b502beb11c", "committedDate": "2020-01-09T22:38:23Z", "message": "appease spotbugs"}, "afterCommit": {"oid": "8f421a2c71fba50c142fad482b0ffc8b7f58031f", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/8f421a2c71fba50c142fad482b0ffc8b7f58031f", "committedDate": "2020-01-09T23:07:05Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d2f4bbc4a99e02d305c40d7973981bbef6677f6", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/7d2f4bbc4a99e02d305c40d7973981bbef6677f6", "committedDate": "2020-01-09T23:14:26Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3f1eca320dfaeff5e6e282fe66741d33e89b742", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/e3f1eca320dfaeff5e6e282fe66741d33e89b742", "committedDate": "2020-01-09T23:29:26Z", "message": "fix build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwODg4NTUw", "url": "https://github.com/Alluxio/alluxio/pull/10719#pullrequestreview-340888550", "createdAt": "2020-01-09T23:59:34Z", "commit": {"oid": "e3f1eca320dfaeff5e6e282fe66741d33e89b742"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMzo1OTozNVrOFcG6fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMzo1OTozNVrOFcG6fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAxNzcyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return new CloseableResource<BlockWorkerClient>(mBlockWorkerClientPool.computeIfAbsent(key,\n          \n          \n            \n                return new CloseableResource<BlockWorkerClient>(poolMap.computeIfAbsent(key,", "url": "https://github.com/Alluxio/alluxio/pull/10719#discussion_r365017724", "createdAt": "2020-01-09T23:59:35Z", "author": {"login": "gpang"}, "path": "core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java", "diffHunk": "@@ -476,27 +473,36 @@ public void close() {\n    * create a new one.\n    *\n    * @param workerNetAddress the network address of the channel\n-   * @return the acquired block worker\n+   * @return the acquired block worker resource\n    */\n-  public BlockWorkerClient acquireBlockWorkerClient(final WorkerNetAddress workerNetAddress)\n+  public CloseableResource<BlockWorkerClient> acquireBlockWorkerClient(\n+      final WorkerNetAddress workerNetAddress)\n       throws IOException {\n     try (ReinitBlockerResource r = blockReinit()) {\n-      return acquireBlockWorkerClientInternal(workerNetAddress, getClientContext().getSubject());\n+      return acquireBlockWorkerClientInternal(workerNetAddress, getClientContext());\n     }\n   }\n \n-  private BlockWorkerClient acquireBlockWorkerClientInternal(\n-      final WorkerNetAddress workerNetAddress, final Subject subject) throws IOException {\n-    SocketAddress address =\n-        NetworkAddressUtils.getDataPortSocketAddress(workerNetAddress, getClusterConf());\n+  private CloseableResource<BlockWorkerClient> acquireBlockWorkerClientInternal(\n+      final WorkerNetAddress workerNetAddress, final ClientContext context) throws IOException {\n+    SocketAddress address = NetworkAddressUtils\n+        .getDataPortSocketAddress(workerNetAddress, context.getClusterConf());\n     GrpcServerAddress serverAddress = GrpcServerAddress.create(workerNetAddress.getHost(), address);\n-    ClientPoolKey key = new ClientPoolKey(address,\n-        AuthenticationUserUtils.getImpersonationUser(subject, getClusterConf()));\n-    return mBlockWorkerClientPool.computeIfAbsent(key,\n-        k -> new BlockWorkerClientPool(subject, serverAddress,\n-            getClusterConf().getInt(PropertyKey.USER_BLOCK_WORKER_CLIENT_POOL_SIZE),\n-            getClusterConf(), mWorkerGroup))\n-        .acquire();\n+    ClientPoolKey key = new ClientPoolKey(address, AuthenticationUserUtils\n+            .getImpersonationUser(context.getSubject(), context.getClusterConf()));\n+    final ConcurrentHashMap<ClientPoolKey, BlockWorkerClientPool> poolMap =\n+        mBlockWorkerClientPool;\n+    return new CloseableResource<BlockWorkerClient>(mBlockWorkerClientPool.computeIfAbsent(key,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f1eca320dfaeff5e6e282fe66741d33e89b742"}, "originalPosition": 146}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "937b62215ff569e2e6fee9ed9dbea9bed8c46f34", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/937b62215ff569e2e6fee9ed9dbea9bed8c46f34", "committedDate": "2020-01-10T00:00:33Z", "message": "Update core/client/fs/src/main/java/alluxio/client/file/FileSystemContext.java\n\nCo-Authored-By: Gene Pang <gene.pang@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "862c031b38b4e52677b4c510888c73e2c7547a07", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/862c031b38b4e52677b4c510888c73e2c7547a07", "committedDate": "2020-01-10T00:09:43Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57faa94a40600222b417f59cf7d4329aba329dff", "author": {"user": {"login": "ZacBlanco", "name": "Zac Blanco"}}, "url": "https://github.com/Alluxio/alluxio/commit/57faa94a40600222b417f59cf7d4329aba329dff", "committedDate": "2020-01-10T00:09:55Z", "message": "Merge branch 'block-reinit-interrupt' of https://github.com/ZacBlanco/alluxio into block-reinit-interrupt"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwOTIyNDI4", "url": "https://github.com/Alluxio/alluxio/pull/10719#pullrequestreview-340922428", "createdAt": "2020-01-10T02:12:33Z", "commit": {"oid": "57faa94a40600222b417f59cf7d4329aba329dff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMzQ3NTE3", "url": "https://github.com/Alluxio/alluxio/pull/10719#pullrequestreview-341347517", "createdAt": "2020-01-10T18:37:04Z", "commit": {"oid": "57faa94a40600222b417f59cf7d4329aba329dff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxMzY5ODg4", "url": "https://github.com/Alluxio/alluxio/pull/10719#pullrequestreview-341369888", "createdAt": "2020-01-10T19:18:44Z", "commit": {"oid": "57faa94a40600222b417f59cf7d4329aba329dff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3268, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}