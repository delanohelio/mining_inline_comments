{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMTE2MDk5", "number": 10845, "title": "Choose HDFS read API based on Client buffer size", "bodyText": "This PR is a follow up to #10763.\nWhen the client buffer size is large ( > 2MB) and reads are guaranteed to be somewhat sequential, the pread API to HDFS is not as efficient as simple read. We introduce a heuristic to choose which API to use.", "createdAt": "2020-02-05T00:07:11Z", "url": "https://github.com/Alluxio/alluxio/pull/10845", "merged": true, "mergeCommit": {"oid": "4caad25cab46a827b18060dd065aa6391bbf3333"}, "closed": true, "closedAt": "2020-02-12T03:57:23Z", "author": {"login": "madanadit"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBKmoPgH2gAyMzcxMTE2MDk5OjcxNTM0NGI2YWI0ZTc4YTdmY2ExMDhjYTVhNDY1Y2ZkNmUyMjVmZTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDb5IvAH2gAyMzcxMTE2MDk5OjdiODc5OTMwMzFlNjg4ZmNhZGJiZDY2MjU4ZjI4OWQyODJiYjY5Y2E=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "715344b6ab4e78a7fca108ca5a465cfd6e225fe6", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/715344b6ab4e78a7fca108ca5a465cfd6e225fe6", "committedDate": "2020-02-05T00:01:15Z", "message": "Switch to read instead of pread for large client buffer sizes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b525a715cb450c4b0c950830464b420bb1c2e6c1", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/b525a715cb450c4b0c950830464b420bb1c2e6c1", "committedDate": "2020-02-05T00:14:07Z", "message": "Fix build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28f92fda3774533ee9b2d5a6dfa4b8f2faecb1eb", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/28f92fda3774533ee9b2d5a6dfa4b8f2faecb1eb", "committedDate": "2020-02-05T19:34:07Z", "message": "Fix implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49cbff932b2ef8379896a6c9b0df669109c5f1f4", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/49cbff932b2ef8379896a6c9b0df669109c5f1f4", "committedDate": "2020-02-07T04:05:06Z", "message": "Refactor option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e0c0a232226a5aaaf65ed1a6bc1eb6afce0e172", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/0e0c0a232226a5aaaf65ed1a6bc1eb6afce0e172", "committedDate": "2020-02-07T04:08:27Z", "message": "Switch option usage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2OTM1NDI1", "url": "https://github.com/Alluxio/alluxio/pull/10845#pullrequestreview-356935425", "createdAt": "2020-02-11T19:33:01Z", "commit": {"oid": "0e0c0a232226a5aaaf65ed1a6bc1eb6afce0e172"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTozMzowMlrOFoWShQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTozMzowMlrOFoWShQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1MjU0OQ==", "bodyText": "Does this option only apply to positioned reads or also reads through the read API?", "url": "https://github.com/Alluxio/alluxio/pull/10845#discussion_r377852549", "createdAt": "2020-02-11T19:33:02Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/AlluxioFileInStream.java", "diffHunk": "@@ -233,6 +234,11 @@ private int positionedReadInternal(long pos, byte[] b, int off, int len) throws\n       return -1;\n     }\n \n+    LOG.info(\"AMDEBUG pread len {} \", len);\n+    if (len < 2 * Constants.MB) {\n+      LOG.info(\"AMDEBUG set for pread len {} \", len);\n+      mOptions.setPositionShort(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e0c0a232226a5aaaf65ed1a6bc1eb6afce0e172"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2OTM2MjE0", "url": "https://github.com/Alluxio/alluxio/pull/10845#pullrequestreview-356936214", "createdAt": "2020-02-11T19:34:12Z", "commit": {"oid": "0e0c0a232226a5aaaf65ed1a6bc1eb6afce0e172"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTozNDoxMlrOFoWUxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTozNDoxMlrOFoWUxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1MzEyNg==", "bodyText": "I think it is good to have our heuristic to cover the typical case, but should we check if it has been set to allow the user to override?", "url": "https://github.com/Alluxio/alluxio/pull/10845#discussion_r377853126", "createdAt": "2020-02-11T19:34:12Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/AlluxioFileInStream.java", "diffHunk": "@@ -233,6 +234,11 @@ private int positionedReadInternal(long pos, byte[] b, int off, int len) throws\n       return -1;\n     }\n \n+    LOG.info(\"AMDEBUG pread len {} \", len);\n+    if (len < 2 * Constants.MB) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e0c0a232226a5aaaf65ed1a6bc1eb6afce0e172"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2OTM4MjAx", "url": "https://github.com/Alluxio/alluxio/pull/10845#pullrequestreview-356938201", "createdAt": "2020-02-11T19:37:13Z", "commit": {"oid": "0e0c0a232226a5aaaf65ed1a6bc1eb6afce0e172"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTozNzoxM1rOFoWauw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTozNzoxM1rOFoWauw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1NDY1MQ==", "bodyText": "Do we end up caching this stream anywhere, if so would it be a problem if it is a certain type?", "url": "https://github.com/Alluxio/alluxio/pull/10845#discussion_r377854651", "createdAt": "2020-02-11T19:37:13Z", "author": {"login": "calvinjia"}, "path": "underfs/hdfs/src/main/java/alluxio/underfs/hdfs/HdfsUnderFileSystem.java", "diffHunk": "@@ -563,10 +563,21 @@ public InputStream open(String path, OpenOptions options) throws IOException {\n     while (retryPolicy.attempt()) {\n       try {\n         FSDataInputStream inputStream = hdfs.open(new Path(path));\n-        // pread API instead of seek is more efficient for FSDataInputStream.\n-        // A seek on FSDataInputStream uses a skip op which is implemented as read + discard\n-        // and hence ends up reading extra data from the datanode.\n-        return new HdfsPositionedUnderFileInputStream(inputStream, options.getOffset());\n+        if (options.getPositionShort()) {\n+          LOG.info(\"AMDEBUG: using pread\");\n+          // pread API instead of seek is more efficient for FSDataInputStream.\n+          // A seek on FSDataInputStream uses a skip op which is implemented as read + discard\n+          // and hence ends up reading extra data from the datanode.\n+          return new HdfsPositionedUnderFileInputStream(inputStream, options.getOffset());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e0c0a232226a5aaaf65ed1a6bc1eb6afce0e172"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50bd3cbbbdecb05233f2be055f0c88a200fb56ba", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/50bd3cbbbdecb05233f2be055f0c88a200fb56ba", "committedDate": "2020-02-11T21:45:58Z", "message": "Refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f8ecb417cbdd66f3064c2d0eececda5b5c568f6", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/6f8ecb417cbdd66f3064c2d0eececda5b5c568f6", "committedDate": "2020-02-11T22:07:18Z", "message": "Fix style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58a3f7c120dbac438a43da5c29655b2f01c08ff7", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/58a3f7c120dbac438a43da5c29655b2f01c08ff7", "committedDate": "2020-02-11T22:56:36Z", "message": "Fix style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTA5NjQ3", "url": "https://github.com/Alluxio/alluxio/pull/10845#pullrequestreview-357109647", "createdAt": "2020-02-12T00:09:38Z", "commit": {"oid": "58a3f7c120dbac438a43da5c29655b2f01c08ff7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1c146c89c38bbf843416aa71a3cdb3dd8b43241", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/e1c146c89c38bbf843416aa71a3cdb3dd8b43241", "committedDate": "2020-02-12T00:59:43Z", "message": "Add integration test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTI5MTQw", "url": "https://github.com/Alluxio/alluxio/pull/10845#pullrequestreview-357129140", "createdAt": "2020-02-12T01:08:18Z", "commit": {"oid": "e1c146c89c38bbf843416aa71a3cdb3dd8b43241"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMTowODoxOFrOFoetiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMTowODoxOFrOFoetiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk5MDUzNw==", "bodyText": "Is there a way to verify if the PRead path is utilized?", "url": "https://github.com/Alluxio/alluxio/pull/10845#discussion_r377990537", "createdAt": "2020-02-12T01:08:18Z", "author": {"login": "calvinjia"}, "path": "tests/src/test/java/alluxio/client/fs/FileInStreamIntegrationTest.java", "diffHunk": "@@ -435,6 +435,44 @@ public void positionedReadWithoutCaching() throws Exception {\n     }\n   }\n \n+  @Test\n+  @LocalAlluxioClusterResource.Config(\n+      confParams = {PropertyKey.Name.USER_FILE_SEQUENTIAL_PREAD_THRESHOLD, \"700KB\"})\n+  public void positionedReadWithLargeThreshold() throws Exception {\n+    List<CreateFilePOptions> optionSet = new ArrayList<>(2);\n+    optionSet.add(mWriteBoth);\n+    optionSet.add(mWriteUnderStore);\n+    for (CreateFilePOptions op : optionSet) {\n+      String filename = mTestPath + \"/file_\" + MIN_LEN + \"_\" + op.hashCode();\n+      AlluxioURI uri = new AlluxioURI(filename);\n+\n+      try (FileInStream is = mFileSystem.openFile(uri, FileSystemTestUtils.toOpenFileOptions(op))) {\n+        byte[] ret = new byte[DELTA - 1];\n+        Assert.assertEquals(DELTA - 1, is.positionedRead(MIN_LEN - DELTA + 1, ret, 0, DELTA));\n+        Assert.assertTrue(BufferUtils.equalIncreasingByteArray(MIN_LEN - DELTA + 1, DELTA - 1, ret));\n+      }\n+    }\n+  }\n+\n+  @Test\n+  @LocalAlluxioClusterResource.Config(\n+      confParams = {PropertyKey.Name.USER_FILE_SEQUENTIAL_PREAD_THRESHOLD, \"200KB\"})\n+  public void positionedReadWithSmallThreshold() throws Exception {\n+    List<CreateFilePOptions> optionSet = new ArrayList<>(2);\n+    optionSet.add(mWriteBoth);\n+    optionSet.add(mWriteUnderStore);\n+    for (CreateFilePOptions op : optionSet) {\n+      String filename = mTestPath + \"/file_\" + MIN_LEN + \"_\" + op.hashCode();\n+      AlluxioURI uri = new AlluxioURI(filename);\n+\n+      try (FileInStream is = mFileSystem.openFile(uri, FileSystemTestUtils.toOpenFileOptions(op))) {\n+        byte[] ret = new byte[DELTA - 1];\n+        Assert.assertEquals(DELTA - 1, is.positionedRead(MIN_LEN - DELTA + 1, ret, 0, DELTA));\n+        Assert.assertTrue(BufferUtils.equalIncreasingByteArray(MIN_LEN - DELTA + 1, DELTA - 1, ret));\n+      }\n+    }\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1c146c89c38bbf843416aa71a3cdb3dd8b43241"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTI5OTI2", "url": "https://github.com/Alluxio/alluxio/pull/10845#pullrequestreview-357129926", "createdAt": "2020-02-12T01:10:41Z", "commit": {"oid": "e1c146c89c38bbf843416aa71a3cdb3dd8b43241"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b87993031e688fcadbbd66258f289d282bb69ca", "author": {"user": {"login": "madanadit", "name": "Adit Madan"}}, "url": "https://github.com/Alluxio/alluxio/commit/7b87993031e688fcadbbd66258f289d282bb69ca", "committedDate": "2020-02-12T01:17:42Z", "message": "Fix style"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3184, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}