{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MDQzMzcx", "number": 12317, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo1MzoyMFrOEt9SUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToxMToyMVrOEuIsRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjI1NDkwOnYy", "diffSide": "RIGHT", "path": "docs/en/contributor/Contributor-Tools.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo1MzoyMFrOHiEEOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo1MzoyMFrOHiEEOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MDI1MQ==", "bodyText": "Reduce duplicate sections", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505480251", "createdAt": "2020-10-15T11:53:20Z", "author": {"login": "jiacheliu3"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -128,27 +127,13 @@ Please be patient as the first build may take a while.\n $ mvn -T 2C install -DskipTests\n ```\n \n-After the install target executes, you may configure and start a local cluster\n-with the following commands:\n-\n-> If you haven't configured or set up a local cluster yet, run the following commands to configure\n-a local installation.\n-\n-```console\n-$ cp conf/alluxio-site.properties.template conf/alluxio-site.properties\n-$ echo \"alluxio.master.hostname=localhost\" >> conf/alluxio-site.properties\n-$ ./bin/alluxio format\n-```\n-\n-Once you've run those commands steps you can start a local Alluxio instance with\n-\n-```console\n-$ ./bin/alluxio-start.sh local SudoMount\n-```\n+After the install target executes, you can follow the instructions at \n+[Running Alluxio Locally]({{ '/en/deploy/Running-Alluxio-Locally.html' | relativize_url }})\n+to start a local cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e061e5f1337f9539a6df324c859dfd95f2f571a"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjI3MTk1OnYy", "diffSide": "LEFT", "path": "docs/en/contributor/Contributor-Tools.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo1ODoyN1rOHiEOsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo1ODoyN1rOHiEOsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MjkyOA==", "bodyText": "This link is gone", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505482928", "createdAt": "2020-10-15T11:58:27Z", "author": {"login": "jiacheliu3"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -186,22 +172,21 @@ To run more comprehensive tests on HDFS under storage using a real and running H\n $ mvn test -pl underfs/hdfs -PufsContractTest -DtestHdfsBaseDir=hdfs://ip:port/alluxio_test\n ```\n \n-- To have the logs output to STDOUT, append the following arguments to the `mvn` command\n+#### Redirect logs to STDOUT\n+To have the logs output to STDOUT, append the following arguments to the `mvn` command\n \n ```\n -Dtest.output.redirect=false -Dalluxio.root.logger=DEBUG,CONSOLE\n ```\n \n-- To quickly test APIs in an interactive manner, you may leverage the Scala shell, as discussed in this \n-[blog](http://scala4fun.tumblr.com/post/84791653967/interactivejavacoding).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjI3NDk2OnYy", "diffSide": "LEFT", "path": "docs/en/contributor/Contributor-Tools.md", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo1OToyMFrOHiEQjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMjoxNzoyNVrOHijFxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MzQwNg==", "bodyText": "We no longer need the table here, as it's been outdated for a while. @Xenorith do you think we still need the csv resources?", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505483406", "createdAt": "2020-10-15T11:59:20Z", "author": {"login": "jiacheliu3"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -227,26 +212,17 @@ $ mvn clean install -Pgenerate\n ```\n \n ## Usage of `./bin/alluxio`\n+ \n+Please refer to [Alluxio commands]({{ '/en/operation/User-CLI.html' | relativize_url }})\n+for all available commands.\n+\n+Some commands have different prerequisites.\n \n-Most commands in `bin/alluxio` are for developers. The following table explains the description and\n-the syntax of each command.\n-\n-<table class=\"table table-striped\">\n-    <tr><th>Command</th><th>Args</th><th>Description</th></tr>\n-    {% for dscp in site.data.table.developer-tips %}\n-        <tr>\n-            <td>{{dscp.command}}</td>\n-            <td>{{dscp.args}}</td>\n-            <td>{{site.data.table.en.developer-tips[dscp.command]}}</td>\n-        </tr>\n-    {% endfor %}\n-</table>\n-\n-In addition, these commands have different prerequisites. The prerequisite for the `format`,\n-`formatWorker`, `journalCrashTest`, `readJournal`, `runClass`, `version`, `validateConf` and `validateEnv` commands is\n-that you have already built Alluxio (see\n-[Build Alluxio Master Branch]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}) about how to\n-build Alluxio manually).\n-Further, the prerequisite for the `fs`, `logLevel`, `runTest` and `runTests` commands is that\n-the Alluxio service is up and running.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MzY1MA==", "bodyText": "I think the User-CLI page will do just fine listing all the commands in much more details.", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505483650", "createdAt": "2020-10-15T11:59:51Z", "author": {"login": "jiacheliu3"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -227,26 +212,17 @@ $ mvn clean install -Pgenerate\n ```\n \n ## Usage of `./bin/alluxio`\n+ \n+Please refer to [Alluxio commands]({{ '/en/operation/User-CLI.html' | relativize_url }})\n+for all available commands.\n+\n+Some commands have different prerequisites.\n \n-Most commands in `bin/alluxio` are for developers. The following table explains the description and\n-the syntax of each command.\n-\n-<table class=\"table table-striped\">\n-    <tr><th>Command</th><th>Args</th><th>Description</th></tr>\n-    {% for dscp in site.data.table.developer-tips %}\n-        <tr>\n-            <td>{{dscp.command}}</td>\n-            <td>{{dscp.args}}</td>\n-            <td>{{site.data.table.en.developer-tips[dscp.command]}}</td>\n-        </tr>\n-    {% endfor %}\n-</table>\n-\n-In addition, these commands have different prerequisites. The prerequisite for the `format`,\n-`formatWorker`, `journalCrashTest`, `readJournal`, `runClass`, `version`, `validateConf` and `validateEnv` commands is\n-that you have already built Alluxio (see\n-[Build Alluxio Master Branch]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}) about how to\n-build Alluxio manually).\n-Further, the prerequisite for the `fs`, `logLevel`, `runTest` and `runTests` commands is that\n-the Alluxio service is up and running.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MzQwNg=="}, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTczMzc2NA==", "bodyText": "I think previously we want to separate commands under bin/alluxio to be\n\nusing by users -> put in User-CLI page (like format, fs, fsadmin, getConf...)\nusing by developers -> put in this page (like runUfsTests, confDocGen)", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505733764", "createdAt": "2020-10-15T17:57:14Z", "author": {"login": "LuQQiu"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -227,26 +212,17 @@ $ mvn clean install -Pgenerate\n ```\n \n ## Usage of `./bin/alluxio`\n+ \n+Please refer to [Alluxio commands]({{ '/en/operation/User-CLI.html' | relativize_url }})\n+for all available commands.\n+\n+Some commands have different prerequisites.\n \n-Most commands in `bin/alluxio` are for developers. The following table explains the description and\n-the syntax of each command.\n-\n-<table class=\"table table-striped\">\n-    <tr><th>Command</th><th>Args</th><th>Description</th></tr>\n-    {% for dscp in site.data.table.developer-tips %}\n-        <tr>\n-            <td>{{dscp.command}}</td>\n-            <td>{{dscp.args}}</td>\n-            <td>{{site.data.table.en.developer-tips[dscp.command]}}</td>\n-        </tr>\n-    {% endfor %}\n-</table>\n-\n-In addition, these commands have different prerequisites. The prerequisite for the `format`,\n-`formatWorker`, `journalCrashTest`, `readJournal`, `runClass`, `version`, `validateConf` and `validateEnv` commands is\n-that you have already built Alluxio (see\n-[Build Alluxio Master Branch]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}) about how to\n-build Alluxio manually).\n-Further, the prerequisite for the `fs`, `logLevel`, `runTest` and `runTests` commands is that\n-the Alluxio service is up and running.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MzQwNg=="}, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTczNDA5OQ==", "bodyText": "but yeah, maybe there are better ways to present those commands and descriptions", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505734099", "createdAt": "2020-10-15T17:57:49Z", "author": {"login": "LuQQiu"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -227,26 +212,17 @@ $ mvn clean install -Pgenerate\n ```\n \n ## Usage of `./bin/alluxio`\n+ \n+Please refer to [Alluxio commands]({{ '/en/operation/User-CLI.html' | relativize_url }})\n+for all available commands.\n+\n+Some commands have different prerequisites.\n \n-Most commands in `bin/alluxio` are for developers. The following table explains the description and\n-the syntax of each command.\n-\n-<table class=\"table table-striped\">\n-    <tr><th>Command</th><th>Args</th><th>Description</th></tr>\n-    {% for dscp in site.data.table.developer-tips %}\n-        <tr>\n-            <td>{{dscp.command}}</td>\n-            <td>{{dscp.args}}</td>\n-            <td>{{site.data.table.en.developer-tips[dscp.command]}}</td>\n-        </tr>\n-    {% endfor %}\n-</table>\n-\n-In addition, these commands have different prerequisites. The prerequisite for the `format`,\n-`formatWorker`, `journalCrashTest`, `readJournal`, `runClass`, `version`, `validateConf` and `validateEnv` commands is\n-that you have already built Alluxio (see\n-[Build Alluxio Master Branch]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}) about how to\n-build Alluxio manually).\n-Further, the prerequisite for the `fs`, `logLevel`, `runTest` and `runTests` commands is that\n-the Alluxio service is up and running.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MzQwNg=="}, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc2OTI5Ng==", "bodyText": "i think it is better to reference user-cli page than to maintain a separate table here.\noptionally, we could update the grouping of the operations in the user-cli page to have a Developer operations section; then we could reference the subsection's link (ex. for general operations -> https://docs.alluxio.io/os/user/stable/en/operation/User-CLI.html#general-operations)", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505769296", "createdAt": "2020-10-15T18:54:09Z", "author": {"login": "Xenorith"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -227,26 +212,17 @@ $ mvn clean install -Pgenerate\n ```\n \n ## Usage of `./bin/alluxio`\n+ \n+Please refer to [Alluxio commands]({{ '/en/operation/User-CLI.html' | relativize_url }})\n+for all available commands.\n+\n+Some commands have different prerequisites.\n \n-Most commands in `bin/alluxio` are for developers. The following table explains the description and\n-the syntax of each command.\n-\n-<table class=\"table table-striped\">\n-    <tr><th>Command</th><th>Args</th><th>Description</th></tr>\n-    {% for dscp in site.data.table.developer-tips %}\n-        <tr>\n-            <td>{{dscp.command}}</td>\n-            <td>{{dscp.args}}</td>\n-            <td>{{site.data.table.en.developer-tips[dscp.command]}}</td>\n-        </tr>\n-    {% endfor %}\n-</table>\n-\n-In addition, these commands have different prerequisites. The prerequisite for the `format`,\n-`formatWorker`, `journalCrashTest`, `readJournal`, `runClass`, `version`, `validateConf` and `validateEnv` commands is\n-that you have already built Alluxio (see\n-[Build Alluxio Master Branch]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}) about how to\n-build Alluxio manually).\n-Further, the prerequisite for the `fs`, `logLevel`, `runTest` and `runTests` commands is that\n-the Alluxio service is up and running.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MzQwNg=="}, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg3MDEyMw==", "bodyText": "Developer operations section sounds good to me", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505870123", "createdAt": "2020-10-15T21:29:52Z", "author": {"login": "LuQQiu"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -227,26 +212,17 @@ $ mvn clean install -Pgenerate\n ```\n \n ## Usage of `./bin/alluxio`\n+ \n+Please refer to [Alluxio commands]({{ '/en/operation/User-CLI.html' | relativize_url }})\n+for all available commands.\n+\n+Some commands have different prerequisites.\n \n-Most commands in `bin/alluxio` are for developers. The following table explains the description and\n-the syntax of each command.\n-\n-<table class=\"table table-striped\">\n-    <tr><th>Command</th><th>Args</th><th>Description</th></tr>\n-    {% for dscp in site.data.table.developer-tips %}\n-        <tr>\n-            <td>{{dscp.command}}</td>\n-            <td>{{dscp.args}}</td>\n-            <td>{{site.data.table.en.developer-tips[dscp.command]}}</td>\n-        </tr>\n-    {% endfor %}\n-</table>\n-\n-In addition, these commands have different prerequisites. The prerequisite for the `format`,\n-`formatWorker`, `journalCrashTest`, `readJournal`, `runClass`, `version`, `validateConf` and `validateEnv` commands is\n-that you have already built Alluxio (see\n-[Build Alluxio Master Branch]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}) about how to\n-build Alluxio manually).\n-Further, the prerequisite for the `fs`, `logLevel`, `runTest` and `runTests` commands is that\n-the Alluxio service is up and running.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MzQwNg=="}, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk1NTYxMA==", "bodyText": "On developer operations, I think the only one that's really developer tool per se is the runClass. Other ones may be better used and understood if you can read the code, but not developer-only to me.\nI prefer to make the difference \"when you run this command whether the Alluxio code has to be built and whether the cluster has to be up\". This can go to the User-CLI page, as this particular page is Contributor Tools after all.", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505955610", "createdAt": "2020-10-16T01:11:30Z", "author": {"login": "jiacheliu3"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -227,26 +212,17 @@ $ mvn clean install -Pgenerate\n ```\n \n ## Usage of `./bin/alluxio`\n+ \n+Please refer to [Alluxio commands]({{ '/en/operation/User-CLI.html' | relativize_url }})\n+for all available commands.\n+\n+Some commands have different prerequisites.\n \n-Most commands in `bin/alluxio` are for developers. The following table explains the description and\n-the syntax of each command.\n-\n-<table class=\"table table-striped\">\n-    <tr><th>Command</th><th>Args</th><th>Description</th></tr>\n-    {% for dscp in site.data.table.developer-tips %}\n-        <tr>\n-            <td>{{dscp.command}}</td>\n-            <td>{{dscp.args}}</td>\n-            <td>{{site.data.table.en.developer-tips[dscp.command]}}</td>\n-        </tr>\n-    {% endfor %}\n-</table>\n-\n-In addition, these commands have different prerequisites. The prerequisite for the `format`,\n-`formatWorker`, `journalCrashTest`, `readJournal`, `runClass`, `version`, `validateConf` and `validateEnv` commands is\n-that you have already built Alluxio (see\n-[Build Alluxio Master Branch]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}) about how to\n-build Alluxio manually).\n-Further, the prerequisite for the `fs`, `logLevel`, `runTest` and `runTests` commands is that\n-the Alluxio service is up and running.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MzQwNg=="}, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk4ODU0OQ==", "bodyText": "i'm fine with omitting the duplicate explanation here and making the improvements in the user cli page as a later PR. important thing is to get rid of out of date table in the contribute tools page", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505988549", "createdAt": "2020-10-16T02:17:25Z", "author": {"login": "Xenorith"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -227,26 +212,17 @@ $ mvn clean install -Pgenerate\n ```\n \n ## Usage of `./bin/alluxio`\n+ \n+Please refer to [Alluxio commands]({{ '/en/operation/User-CLI.html' | relativize_url }})\n+for all available commands.\n+\n+Some commands have different prerequisites.\n \n-Most commands in `bin/alluxio` are for developers. The following table explains the description and\n-the syntax of each command.\n-\n-<table class=\"table table-striped\">\n-    <tr><th>Command</th><th>Args</th><th>Description</th></tr>\n-    {% for dscp in site.data.table.developer-tips %}\n-        <tr>\n-            <td>{{dscp.command}}</td>\n-            <td>{{dscp.args}}</td>\n-            <td>{{site.data.table.en.developer-tips[dscp.command]}}</td>\n-        </tr>\n-    {% endfor %}\n-</table>\n-\n-In addition, these commands have different prerequisites. The prerequisite for the `format`,\n-`formatWorker`, `journalCrashTest`, `readJournal`, `runClass`, `version`, `validateConf` and `validateEnv` commands is\n-that you have already built Alluxio (see\n-[Build Alluxio Master Branch]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}) about how to\n-build Alluxio manually).\n-Further, the prerequisite for the `fs`, `logLevel`, `runTest` and `runTests` commands is that\n-the Alluxio service is up and running.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MzQwNg=="}, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NzgzMjMyOnYy", "diffSide": "RIGHT", "path": "docs/en/contributor/Contributor-Tools.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzo1MzoxNlrOHiTZAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNzo1MzoxNlrOHiTZAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTczMTMzMQ==", "bodyText": "add an empty line between title and graph?", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505731331", "createdAt": "2020-10-15T17:53:16Z", "author": {"login": "LuQQiu"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -186,22 +172,21 @@ To run more comprehensive tests on HDFS under storage using a real and running H\n $ mvn test -pl underfs/hdfs -PufsContractTest -DtestHdfsBaseDir=hdfs://ip:port/alluxio_test\n ```\n \n-- To have the logs output to STDOUT, append the following arguments to the `mvn` command\n+#### Redirect logs to STDOUT\n+To have the logs output to STDOUT, append the following arguments to the `mvn` command\n \n ```\n -Dtest.output.redirect=false -Dalluxio.root.logger=DEBUG,CONSOLE\n ```\n \n-- To quickly test APIs in an interactive manner, you may leverage the Scala shell, as discussed in this \n-[blog](http://scala4fun.tumblr.com/post/84791653967/interactivejavacoding).\n-\n-- The fuse tests are ignored if the `libfuse` library is missing.\n+#### Test FUSE\n+The FUSE tests are ignored if the `libfuse` library is missing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODEyMzU4OnYy", "diffSide": "RIGHT", "path": "docs/en/contributor/Contributor-Tools.md", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToxMToyMVrOHiWRuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwMzo1OToxMlrOHjhowQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3ODYxNg==", "bodyText": "when i read this entire section on Usage of ./bin/alluxio, i don't feel it's too useful in its current state. we list a few commands and don't give much context on how they should be used. i would rather see this section contain a reference to the user-cli docs and then show an example workflow to test/validate a cluster. for example, an outline for this section could be like:\n\ndevelopers can use the bin/alluxio command to manage and test your local Alluxio cluster\nsee the full list of commands in user cli docs\nassuming alluxio is properly configured for a local cluster (link to local cluster setup), an example usage of the bin/alluxio script:\n\n(not sure if exists) run validateEnv/validateConf for local cluster to validate your local setup\nrun format to clear metadata and worker storage\nstart a local alluxio cluster (dunno cmd)\nrun fsadmin report to check cluster status summary\nrun runTests to execute read/write operations through the local cluster to the configured UFS\nrun fs ls / to see test files\ndunno if there are other commands to test on a running cluster", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505778616", "createdAt": "2020-10-15T19:11:21Z", "author": {"login": "Xenorith"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -227,26 +212,17 @@ $ mvn clean install -Pgenerate\n ```\n \n ## Usage of `./bin/alluxio`\n+ \n+Please refer to [Alluxio commands]({{ '/en/operation/User-CLI.html' | relativize_url }})\n+for all available commands.\n+\n+Some commands have different prerequisites.\n \n-Most commands in `bin/alluxio` are for developers. The following table explains the description and\n-the syntax of each command.\n-\n-<table class=\"table table-striped\">\n-    <tr><th>Command</th><th>Args</th><th>Description</th></tr>\n-    {% for dscp in site.data.table.developer-tips %}\n-        <tr>\n-            <td>{{dscp.command}}</td>\n-            <td>{{dscp.args}}</td>\n-            <td>{{site.data.table.en.developer-tips[dscp.command]}}</td>\n-        </tr>\n-    {% endfor %}\n-</table>\n-\n-In addition, these commands have different prerequisites. The prerequisite for the `format`,\n-`formatWorker`, `journalCrashTest`, `readJournal`, `runClass`, `version`, `validateConf` and `validateEnv` commands is\n-that you have already built Alluxio (see\n-[Build Alluxio Master Branch]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}) about how to\n-build Alluxio manually).\n-Further, the prerequisite for the `fs`, `logLevel`, `runTest` and `runTests` commands is that\n-the Alluxio service is up and running.\n+The prerequisite for the `format`, `formatMaster`, `formatWorker`, `getConf`, `runClass`, `runHmsTests`, `runHdfsMountTests`, ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg3MTA3NQ==", "bodyText": "Or maybe when we describe the command in User-CLI, we talked about whether it needs to be used in a running cluster", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505871075", "createdAt": "2020-10-15T21:31:02Z", "author": {"login": "LuQQiu"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -227,26 +212,17 @@ $ mvn clean install -Pgenerate\n ```\n \n ## Usage of `./bin/alluxio`\n+ \n+Please refer to [Alluxio commands]({{ '/en/operation/User-CLI.html' | relativize_url }})\n+for all available commands.\n+\n+Some commands have different prerequisites.\n \n-Most commands in `bin/alluxio` are for developers. The following table explains the description and\n-the syntax of each command.\n-\n-<table class=\"table table-striped\">\n-    <tr><th>Command</th><th>Args</th><th>Description</th></tr>\n-    {% for dscp in site.data.table.developer-tips %}\n-        <tr>\n-            <td>{{dscp.command}}</td>\n-            <td>{{dscp.args}}</td>\n-            <td>{{site.data.table.en.developer-tips[dscp.command]}}</td>\n-        </tr>\n-    {% endfor %}\n-</table>\n-\n-In addition, these commands have different prerequisites. The prerequisite for the `format`,\n-`formatWorker`, `journalCrashTest`, `readJournal`, `runClass`, `version`, `validateConf` and `validateEnv` commands is\n-that you have already built Alluxio (see\n-[Build Alluxio Master Branch]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}) about how to\n-build Alluxio manually).\n-Further, the prerequisite for the `fs`, `logLevel`, `runTest` and `runTests` commands is that\n-the Alluxio service is up and running.\n+The prerequisite for the `format`, `formatMaster`, `formatWorker`, `getConf`, `runClass`, `runHmsTests`, `runHdfsMountTests`, ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3ODYxNg=="}, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk1NzI4MA==", "bodyText": "On Rico's comment for the new section, I think the new section surely adds useful information, but should not be in the Contributor Tools page. I would do this in 2 steps:\n\nAdd info according to Lu's suggestion, state if the command needs Alluxio cluster to be up in user CLI page. And in the contributor tool page, refer to that.\n(Another PR to-be) add a section about how validation commands work together, maybe in a separate page or in the User CLI page.", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505957280", "createdAt": "2020-10-16T01:14:43Z", "author": {"login": "jiacheliu3"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -227,26 +212,17 @@ $ mvn clean install -Pgenerate\n ```\n \n ## Usage of `./bin/alluxio`\n+ \n+Please refer to [Alluxio commands]({{ '/en/operation/User-CLI.html' | relativize_url }})\n+for all available commands.\n+\n+Some commands have different prerequisites.\n \n-Most commands in `bin/alluxio` are for developers. The following table explains the description and\n-the syntax of each command.\n-\n-<table class=\"table table-striped\">\n-    <tr><th>Command</th><th>Args</th><th>Description</th></tr>\n-    {% for dscp in site.data.table.developer-tips %}\n-        <tr>\n-            <td>{{dscp.command}}</td>\n-            <td>{{dscp.args}}</td>\n-            <td>{{site.data.table.en.developer-tips[dscp.command]}}</td>\n-        </tr>\n-    {% endfor %}\n-</table>\n-\n-In addition, these commands have different prerequisites. The prerequisite for the `format`,\n-`formatWorker`, `journalCrashTest`, `readJournal`, `runClass`, `version`, `validateConf` and `validateEnv` commands is\n-that you have already built Alluxio (see\n-[Build Alluxio Master Branch]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}) about how to\n-build Alluxio manually).\n-Further, the prerequisite for the `fs`, `logLevel`, `runTest` and `runTests` commands is that\n-the Alluxio service is up and running.\n+The prerequisite for the `format`, `formatMaster`, `formatWorker`, `getConf`, `runClass`, `runHmsTests`, `runHdfsMountTests`, ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3ODYxNg=="}, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk4OTk3Ng==", "bodyText": "sounds good to me", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r505989976", "createdAt": "2020-10-16T02:19:55Z", "author": {"login": "Xenorith"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -227,26 +212,17 @@ $ mvn clean install -Pgenerate\n ```\n \n ## Usage of `./bin/alluxio`\n+ \n+Please refer to [Alluxio commands]({{ '/en/operation/User-CLI.html' | relativize_url }})\n+for all available commands.\n+\n+Some commands have different prerequisites.\n \n-Most commands in `bin/alluxio` are for developers. The following table explains the description and\n-the syntax of each command.\n-\n-<table class=\"table table-striped\">\n-    <tr><th>Command</th><th>Args</th><th>Description</th></tr>\n-    {% for dscp in site.data.table.developer-tips %}\n-        <tr>\n-            <td>{{dscp.command}}</td>\n-            <td>{{dscp.args}}</td>\n-            <td>{{site.data.table.en.developer-tips[dscp.command]}}</td>\n-        </tr>\n-    {% endfor %}\n-</table>\n-\n-In addition, these commands have different prerequisites. The prerequisite for the `format`,\n-`formatWorker`, `journalCrashTest`, `readJournal`, `runClass`, `version`, `validateConf` and `validateEnv` commands is\n-that you have already built Alluxio (see\n-[Build Alluxio Master Branch]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}) about how to\n-build Alluxio manually).\n-Further, the prerequisite for the `fs`, `logLevel`, `runTest` and `runTests` commands is that\n-the Alluxio service is up and running.\n+The prerequisite for the `format`, `formatMaster`, `formatWorker`, `getConf`, `runClass`, `runHmsTests`, `runHdfsMountTests`, ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3ODYxNg=="}, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAxMzMxMw==", "bodyText": "Added.", "url": "https://github.com/Alluxio/alluxio/pull/12317#discussion_r507013313", "createdAt": "2020-10-18T03:59:12Z", "author": {"login": "jiacheliu3"}, "path": "docs/en/contributor/Contributor-Tools.md", "diffHunk": "@@ -227,26 +212,17 @@ $ mvn clean install -Pgenerate\n ```\n \n ## Usage of `./bin/alluxio`\n+ \n+Please refer to [Alluxio commands]({{ '/en/operation/User-CLI.html' | relativize_url }})\n+for all available commands.\n+\n+Some commands have different prerequisites.\n \n-Most commands in `bin/alluxio` are for developers. The following table explains the description and\n-the syntax of each command.\n-\n-<table class=\"table table-striped\">\n-    <tr><th>Command</th><th>Args</th><th>Description</th></tr>\n-    {% for dscp in site.data.table.developer-tips %}\n-        <tr>\n-            <td>{{dscp.command}}</td>\n-            <td>{{dscp.args}}</td>\n-            <td>{{site.data.table.en.developer-tips[dscp.command]}}</td>\n-        </tr>\n-    {% endfor %}\n-</table>\n-\n-In addition, these commands have different prerequisites. The prerequisite for the `format`,\n-`formatWorker`, `journalCrashTest`, `readJournal`, `runClass`, `version`, `validateConf` and `validateEnv` commands is\n-that you have already built Alluxio (see\n-[Build Alluxio Master Branch]({{ '/en/contributor/Building-Alluxio-From-Source.html' | relativize_url }}) about how to\n-build Alluxio manually).\n-Further, the prerequisite for the `fs`, `logLevel`, `runTest` and `runTests` commands is that\n-the Alluxio service is up and running.\n+The prerequisite for the `format`, `formatMaster`, `formatWorker`, `getConf`, `runClass`, `runHmsTests`, `runHdfsMountTests`, ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3ODYxNg=="}, "originalCommit": {"oid": "7d9ed42f6ca55f4023035194c07f6bab72981a07"}, "originalPosition": 153}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1163, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}