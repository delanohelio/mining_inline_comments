{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzOTc0MDIx", "number": 11559, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxODozMToyN1rOEFRMRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjo1MzozN1rOEFnkeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTYwMDA3OnYy", "diffSide": "RIGHT", "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxODozMToyN1rOGjYxYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMToyNTo0MVrOGjaMgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTIwMw==", "bodyText": "Is udbPartition.getSpec() fully captured in udbPartition.toString()? We use the spec to identify the partition, so that would be important information to log.", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759203", "createdAt": "2020-06-13T18:31:27Z", "author": {"login": "gpang"}, "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -86,6 +86,8 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n           previousTable.mPartitionScheme.getPartitions().stream()\n               .collect(Collectors.toMap(Partition::getSpec, Function.identity()));\n       for (UdbPartition udbPartition : udbTable.getPartitions()) {\n+        LOG.debug(\"Get partition: {}, from table {} Database {}.\",\n+            udbPartition.toString(), database.getName(), mName);\n         Partition newPartition = existingPartitions.get(udbPartition.getSpec());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjUyOA==", "bodyText": "Added the Spce in toString().", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782528", "createdAt": "2020-06-14T01:25:41Z", "author": {"login": "HelloHorizon"}, "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -86,6 +86,8 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n           previousTable.mPartitionScheme.getPartitions().stream()\n               .collect(Collectors.toMap(Partition::getSpec, Function.identity()));\n       for (UdbPartition udbPartition : udbTable.getPartitions()) {\n+        LOG.debug(\"Get partition: {}, from table {} Database {}.\",\n+            udbPartition.toString(), database.getName(), mName);\n         Partition newPartition = existingPartitions.get(udbPartition.getSpec());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTIwMw=="}, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTYwMDY4OnYy", "diffSide": "RIGHT", "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxODozMjoyOFrOGjYxrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMToyNjowM1rOGjaMkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTI3OQ==", "bodyText": "I would suggest being able to distinguish the 3 cases here. Something like the following. This would allow us to reall know which code path/scenario each partition falls under, and would help with debugging.\nAlso, using if (LOG.isDebugEnabled()) since toString could be expensive.\nif (newPartition == null) {\n  // partition does not exist yet\n  newPartition = new Partition(udbPartition);\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"Existing table {}.{} adding UDB partition: {}\", ...);\n  }\n} else if (!newPartition.getBaseLayout().equals(udbPartition.getLayout())) {\n  // existing partition is updated\n  newPartition = newPartition.createNext(udbPartition);\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"Existing table {}.{} updating UDB partition: {}, ...\");\n  }\n} else {\n  if (LOG.isDebugEnabled()) {\n    LOG.debug(\"Existing table {}.{} keeping partition spec: {}\", ...);\n  }\n}", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759279", "createdAt": "2020-06-13T18:32:28Z", "author": {"login": "gpang"}, "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -86,6 +86,8 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n           previousTable.mPartitionScheme.getPartitions().stream()\n               .collect(Collectors.toMap(Partition::getSpec, Function.identity()));\n       for (UdbPartition udbPartition : udbTable.getPartitions()) {\n+        LOG.debug(\"Get partition: {}, from table {} Database {}.\",\n+            udbPartition.toString(), database.getName(), mName);\n         Partition newPartition = existingPartitions.get(udbPartition.getSpec());\n         if (newPartition == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU0Ng==", "bodyText": "yeah, it's much more efficient, changed.", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782546", "createdAt": "2020-06-14T01:26:03Z", "author": {"login": "HelloHorizon"}, "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -86,6 +86,8 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n           previousTable.mPartitionScheme.getPartitions().stream()\n               .collect(Collectors.toMap(Partition::getSpec, Function.identity()));\n       for (UdbPartition udbPartition : udbTable.getPartitions()) {\n+        LOG.debug(\"Get partition: {}, from table {} Database {}.\",\n+            udbPartition.toString(), database.getName(), mName);\n         Partition newPartition = existingPartitions.get(udbPartition.getSpec());\n         if (newPartition == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTI3OQ=="}, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTYwMTQ3OnYy", "diffSide": "RIGHT", "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxODozNDozNVrOGjYyJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMToyNjoyMlrOGjaMoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTM5Nw==", "bodyText": "maybe \"Updating existing table {}.{} with {} total partitions.\" ? This could just be at INFO level, since it won't be too noisy.", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759397", "createdAt": "2020-06-13T18:34:35Z", "author": {"login": "gpang"}, "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -96,10 +98,17 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n         }\n         partitions.add(newPartition);\n       }\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU2MA==", "bodyText": "Changed.", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782560", "createdAt": "2020-06-14T01:26:22Z", "author": {"login": "HelloHorizon"}, "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -96,10 +98,17 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n         }\n         partitions.add(newPartition);\n       }\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTM5Nw=="}, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTYwMTY2OnYy", "diffSide": "RIGHT", "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxODozNDo1OVrOGjYyPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMToyNjoxNlrOGjaMnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTQyMw==", "bodyText": "This could be INFO and something like \"Creating new table {}.{} with {} total partitions.\"", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759423", "createdAt": "2020-06-13T18:34:59Z", "author": {"login": "gpang"}, "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -96,10 +98,17 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n         }\n         partitions.add(newPartition);\n       }\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",\n+          partitions.size(), mName, database.getName());\n     } else {\n       // Use all the udb partitions\n       partitions =\n           udbTable.getPartitions().stream().map(Partition::new).collect(Collectors.toList());\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU1Nw==", "bodyText": "Changed.", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782557", "createdAt": "2020-06-14T01:26:16Z", "author": {"login": "HelloHorizon"}, "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -96,10 +98,17 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n         }\n         partitions.add(newPartition);\n       }\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",\n+          partitions.size(), mName, database.getName());\n     } else {\n       // Use all the udb partitions\n       partitions =\n           udbTable.getPartitions().stream().map(Partition::new).collect(Collectors.toList());\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTQyMw=="}, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTYwMjYxOnYy", "diffSide": "RIGHT", "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxODozNjoyMlrOGjYyuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMToyNjozMFrOGjaMpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTU0NA==", "bodyText": "Similar to above, we may want to guard this with LOG.isDebugEnabled().\nAlso, the message could be something like:\nLOG.debug(\"New table {}.{} adding UDB partition: {}\", ...);", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759544", "createdAt": "2020-06-13T18:36:22Z", "author": {"login": "gpang"}, "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -96,10 +98,17 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n         }\n         partitions.add(newPartition);\n       }\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",\n+          partitions.size(), mName, database.getName());\n     } else {\n       // Use all the udb partitions\n       partitions =\n           udbTable.getPartitions().stream().map(Partition::new).collect(Collectors.toList());\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",\n+          partitions.size(), mName, database.getName());\n+      udbTable.getPartitions().stream().forEach(udbPartition ->\n+          LOG.debug(\"Get partition: {}, from table {} Database {}.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU2NA==", "bodyText": "Changed.", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782564", "createdAt": "2020-06-14T01:26:30Z", "author": {"login": "HelloHorizon"}, "path": "table/server/master/src/main/java/alluxio/master/table/Table.java", "diffHunk": "@@ -96,10 +98,17 @@ private Table(Database database, UdbTable udbTable, @Nullable Table previousTabl\n         }\n         partitions.add(newPartition);\n       }\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",\n+          partitions.size(), mName, database.getName());\n     } else {\n       // Use all the udb partitions\n       partitions =\n           udbTable.getPartitions().stream().map(Partition::new).collect(Collectors.toList());\n+      LOG.debug(\"Get {} partitions from Table {} Database {}.\",\n+          partitions.size(), mName, database.getName());\n+      udbTable.getPartitions().stream().forEach(udbPartition ->\n+          LOG.debug(\"Get partition: {}, from table {} Database {}.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTU0NA=="}, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTYwMzExOnYy", "diffSide": "RIGHT", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxODozNzoxNFrOGjYy_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMToyNjozN1rOGjaMpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTYxNQ==", "bodyText": "related comment to above, but the spec should be in this output?\nAlso, is the spec included in the other partition types?", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759615", "createdAt": "2020-06-13T18:37:14Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "diffHunk": "@@ -45,4 +45,27 @@ public String getSpec() {\n   public Layout getLayout() {\n     return mLayout;\n   }\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"{\");\n+    if (mLayout.getData().getValuesList() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU2Ng==", "bodyText": "Changed.", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782566", "createdAt": "2020-06-14T01:26:37Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "diffHunk": "@@ -45,4 +45,27 @@ public String getSpec() {\n   public Layout getLayout() {\n     return mLayout;\n   }\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"{\");\n+    if (mLayout.getData().getValuesList() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTYxNQ=="}, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTYwNDc4OnYy", "diffSide": "RIGHT", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxODo0MDozNlrOGjYz5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMToyNjo0NVrOGjaMqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTg0Nw==", "bodyText": "It would be helpful for this message to be distinct from other messages, so this could something like \"Glue table {}.{} has {} partitions.\"", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759847", "createdAt": "2020-06-13T18:40:36Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -386,6 +386,11 @@ public UdbTable getTable(String tableName) throws IOException {\n               .withTableName(tableName);\n       if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n         partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+        LOG.debug(\"Get {} partitions from Table {} Database {}.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU3MA==", "bodyText": "Changed.", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782570", "createdAt": "2020-06-14T01:26:45Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -386,6 +386,11 @@ public UdbTable getTable(String tableName) throws IOException {\n               .withTableName(tableName);\n       if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n         partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+        LOG.debug(\"Get {} partitions from Table {} Database {}.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTg0Nw=="}, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTYwNTMzOnYy", "diffSide": "RIGHT", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QxODo0MToxOVrOGjY0LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQwMToyNjo1MVrOGjaMrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTkxNw==", "bodyText": "This should be guarded by LOG.isDebugEnabled(), since toString could be expensive.\nAlso, the message should be distinct and descriptive, so it could be something like \"Glue table {}.{} with partition: {}\"", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439759917", "createdAt": "2020-06-13T18:41:19Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -386,6 +386,11 @@ public UdbTable getTable(String tableName) throws IOException {\n               .withTableName(tableName);\n       if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n         partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+        LOG.debug(\"Get {} partitions from Table {} Database {}.\",\n+            partitions.size(), tableName, mGlueDbName);\n+        partitions.stream().forEach(partition ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjU3Mg==", "bodyText": "Changed.", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r439782572", "createdAt": "2020-06-14T01:26:51Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GlueDatabase.java", "diffHunk": "@@ -386,6 +386,11 @@ public UdbTable getTable(String tableName) throws IOException {\n               .withTableName(tableName);\n       if (glueClient.getPartitions(getPartitionsRequest).getPartitions() != null) {\n         partitions = glueClient.getPartitions(getPartitionsRequest).getPartitions();\n+        LOG.debug(\"Get {} partitions from Table {} Database {}.\",\n+            partitions.size(), tableName, mGlueDbName);\n+        partitions.stream().forEach(partition ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc1OTkxNw=="}, "originalCommit": {"oid": "38b9491b264143ea73ef9b3702a80889f2d5ffdb"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzI0ODI0OnYy", "diffSide": "RIGHT", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjo0ODoyOVrOGj6dGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODo0OTo1OVrOGj-f7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxMTA2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  sb.append(\"Specs: \").append(getSpec()).append(\",\");\n          \n          \n            \n                  sb.append(\"Spec: \").append(getSpec()).append(\",\");", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r440311065", "createdAt": "2020-06-15T16:48:29Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "diffHunk": "@@ -45,4 +45,30 @@ public String getSpec() {\n   public Layout getLayout() {\n     return mLayout;\n   }\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"{\");\n+    if (getSpec() != null) {\n+      sb.append(\"Specs: \").append(getSpec()).append(\",\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eaecc612606d48f17b700d89c5f5c492fd81244"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3NzMyNw==", "bodyText": "Changed.", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r440377327", "createdAt": "2020-06-15T18:49:59Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "diffHunk": "@@ -45,4 +45,30 @@ public String getSpec() {\n   public Layout getLayout() {\n     return mLayout;\n   }\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"{\");\n+    if (getSpec() != null) {\n+      sb.append(\"Specs: \").append(getSpec()).append(\",\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxMTA2NQ=="}, "originalCommit": {"oid": "4eaecc612606d48f17b700d89c5f5c492fd81244"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzI2MDkwOnYy", "diffSide": "RIGHT", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjo1MjowMFrOGj6lUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODo0OTo0OVrOGj-fpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxMzE2OA==", "bodyText": "Is there a reason we can't use MoreObjects.toStringHelper() for toString? Also, I don't think we have to check for null before adding fields, since it will just print null in the output, right?", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r440313168", "createdAt": "2020-06-15T16:52:00Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "diffHunk": "@@ -45,4 +45,30 @@ public String getSpec() {\n   public Layout getLayout() {\n     return mLayout;\n   }\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eaecc612606d48f17b700d89c5f5c492fd81244"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3NzI1NQ==", "bodyText": "I see, I just remove the check for null and changed to MoreObjects.toStringHelper().", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r440377255", "createdAt": "2020-06-15T18:49:49Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "diffHunk": "@@ -45,4 +45,30 @@ public String getSpec() {\n   public Layout getLayout() {\n     return mLayout;\n   }\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder sb = new StringBuilder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxMzE2OA=="}, "originalCommit": {"oid": "4eaecc612606d48f17b700d89c5f5c492fd81244"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzI2NjQ5OnYy", "diffSide": "RIGHT", "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjo1MzozN1rOGj6o-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxOTo1MTowM1rOGkAdDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxNDEwNA==", "bodyText": "Is there a way that HivePartition can also a string representation? Without it, we will only get useful information for only the Glue UDB, right?", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r440314104", "createdAt": "2020-06-15T16:53:37Z", "author": {"login": "gpang"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "diffHunk": "@@ -45,4 +45,30 @@ public String getSpec() {\n   public Layout getLayout() {\n     return mLayout;\n   }\n+\n+  @Override\n+  public String toString() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eaecc612606d48f17b700d89c5f5c492fd81244"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQwOTM1Nw==", "bodyText": "Added Hive toString() to get hive udb partition info.", "url": "https://github.com/Alluxio/alluxio/pull/11559#discussion_r440409357", "createdAt": "2020-06-15T19:51:03Z", "author": {"login": "HelloHorizon"}, "path": "table/server/underdb/glue/src/main/java/alluxio/table/under/glue/GluePartition.java", "diffHunk": "@@ -45,4 +45,30 @@ public String getSpec() {\n   public Layout getLayout() {\n     return mLayout;\n   }\n+\n+  @Override\n+  public String toString() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMxNDEwNA=="}, "originalCommit": {"oid": "4eaecc612606d48f17b700d89c5f5c492fd81244"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1631, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}