{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjU2NTI5", "number": 10729, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMTo1NjoyMVrODXq1kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMTo1NjoyMVrODXq1kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTQ1NjgyOnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/test/java/alluxio/client/file/cache/LocalCacheFileInStreamTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMTo1NjoyMVrOFdF6Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QyMjo1MTozN1rOFdHPYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA0OTg0Mw==", "bodyText": "nit: how about using ByteUtils.getIncreasingByteArray?", "url": "https://github.com/Alluxio/alluxio/pull/10729#discussion_r366049843", "createdAt": "2020-01-13T21:56:21Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/test/java/alluxio/client/file/cache/LocalCacheFileInStreamTest.java", "diffHunk": "@@ -71,50 +73,140 @@\n       (int) sConf.getBytes(PropertyKey.USER_CLIENT_CACHE_PAGE_SIZE);\n \n   @Test\n-  public void readPageCacheMiss() throws Exception {\n-    Map<AlluxioURI, byte[]> files = new HashMap<>();\n-    AlluxioURI testFilename = new AlluxioURI(\"/test\");\n+  public void readFullPage() throws Exception {\n     int fileSize = PAGE_SIZE;\n     byte[] testData = generateData(fileSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a264d43fb241a311802d2e661d242cd83f5ac3d8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA3MTY0OA==", "bodyText": "Oh yes, I was looking for that", "url": "https://github.com/Alluxio/alluxio/pull/10729#discussion_r366071648", "createdAt": "2020-01-13T22:51:37Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/test/java/alluxio/client/file/cache/LocalCacheFileInStreamTest.java", "diffHunk": "@@ -71,50 +73,140 @@\n       (int) sConf.getBytes(PropertyKey.USER_CLIENT_CACHE_PAGE_SIZE);\n \n   @Test\n-  public void readPageCacheMiss() throws Exception {\n-    Map<AlluxioURI, byte[]> files = new HashMap<>();\n-    AlluxioURI testFilename = new AlluxioURI(\"/test\");\n+  public void readFullPage() throws Exception {\n     int fileSize = PAGE_SIZE;\n     byte[] testData = generateData(fileSize);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA0OTg0Mw=="}, "originalCommit": {"oid": "a264d43fb241a311802d2e661d242cd83f5ac3d8"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2221, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}