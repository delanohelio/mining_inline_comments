{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNjU2MDY3", "number": 10869, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMTo1MDoyOVrODfBf8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMTozMDoxMlrODfVs7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODU3MDA5OnYy", "diffSide": "RIGHT", "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMTo1MDoyOVrOFofWzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMTo1MDoyOVrOFofWzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAwMTEwMQ==", "bodyText": "the same method also stops an incremental sync, so perhaps rename to make that clear?", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378001101", "createdAt": "2020-02-12T01:50:29Z", "author": {"login": "yuzhu"}, "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "diffHunk": "@@ -489,6 +562,27 @@ public void stopSyncPostJournal(AlluxioURI syncPoint) throws InvalidPathExceptio\n     }\n   }\n \n+  /**\n+   * Stop the initial full sync thread.\n+   *\n+   * @param syncPoint the sync point\n+   * @param resolution the mount table resolution\n+   */\n+  private void stopInitSync(AlluxioURI syncPoint, MountTable.Resolution resolution) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f9d9ebd29c9bbd865e5a2bb85814441e3ff4d8d"}, "originalPosition": 379}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTU1NDA2OnYy", "diffSide": "RIGHT", "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOTozOTo1M1rOFo8B9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMjo0NzoxOVrOFpBUYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3MDkwMw==", "bodyText": "I think isInterrupted() clears the interrupt flag. If the previous syncInodeMetadata was interrupted, this would evaluate to false, and this whole method would return true. Is that desired?", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378470903", "createdAt": "2020-02-12T19:39:53Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -3395,6 +3392,10 @@ private boolean syncMetadataInternal(RpcContext rpcContext, LockedInodePath inod\n \n     // Update metadata for all the mount points\n     for (String mountPoint : pathsToLoad) {\n+      if (Thread.currentThread().isInterrupted()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a022ccaee8e5d22b09e8c1ea7455d75cba963280"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUyNzA2OQ==", "bodyText": "nope. the javadoc says the interrupted status is unaffected by this method. the method accepts a flag to indicate whether to clear the state", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378527069", "createdAt": "2020-02-12T21:37:53Z", "author": {"login": "madanadit"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -3395,6 +3392,10 @@ private boolean syncMetadataInternal(RpcContext rpcContext, LockedInodePath inod\n \n     // Update metadata for all the mount points\n     for (String mountPoint : pathsToLoad) {\n+      if (Thread.currentThread().isInterrupted()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3MDkwMw=="}, "originalCommit": {"oid": "a022ccaee8e5d22b09e8c1ea7455d75cba963280"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU1NzUzNg==", "bodyText": "i think we're good here", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378557536", "createdAt": "2020-02-12T22:47:19Z", "author": {"login": "madanadit"}, "path": "core/server/master/src/main/java/alluxio/master/file/DefaultFileSystemMaster.java", "diffHunk": "@@ -3395,6 +3392,10 @@ private boolean syncMetadataInternal(RpcContext rpcContext, LockedInodePath inod\n \n     // Update metadata for all the mount points\n     for (String mountPoint : pathsToLoad) {\n+      if (Thread.currentThread().isInterrupted()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3MDkwMw=="}, "originalCommit": {"oid": "a022ccaee8e5d22b09e8c1ea7455d75cba963280"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTU2Nzg4OnYy", "diffSide": "RIGHT", "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOTo0NDoxMlrOFo8LDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMTo0NzowNVrOFo_uqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3MzIzMQ==", "bodyText": "This is specific to active sync, right? Can we be explicit for that in the description, and describe any tradeoffs/implications if any.", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378473231", "createdAt": "2020-02-12T19:44:12Z", "author": {"login": "gpang"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -1914,6 +1914,13 @@ public String toString() {\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n           .setScope(Scope.MASTER)\n           .build();\n+  public static final PropertyKey MASTER_UFS_ACTIVE_SYNC_RETRY_TIMEOUT =\n+      new Builder(Name.MASTER_UFS_ACTIVE_SYNC_RETRY_TIMEOUT)\n+          .setDefaultValue(\"10sec\")\n+          .setDescription(\"Max time to retry failed sync operation\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a022ccaee8e5d22b09e8c1ea7455d75cba963280"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUzMTQ5OQ==", "bodyText": "yep", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378531499", "createdAt": "2020-02-12T21:47:05Z", "author": {"login": "madanadit"}, "path": "core/common/src/main/java/alluxio/conf/PropertyKey.java", "diffHunk": "@@ -1914,6 +1914,13 @@ public String toString() {\n           .setConsistencyCheckLevel(ConsistencyCheckLevel.WARN)\n           .setScope(Scope.MASTER)\n           .build();\n+  public static final PropertyKey MASTER_UFS_ACTIVE_SYNC_RETRY_TIMEOUT =\n+      new Builder(Name.MASTER_UFS_ACTIVE_SYNC_RETRY_TIMEOUT)\n+          .setDefaultValue(\"10sec\")\n+          .setDescription(\"Max time to retry failed sync operation\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ3MzIzMQ=="}, "originalCommit": {"oid": "a022ccaee8e5d22b09e8c1ea7455d75cba963280"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTg1MDcyOnYy", "diffSide": "RIGHT", "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMToyMDowNlrOFo-8Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMTo1NzozMVrOFpABug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxODYwNg==", "bodyText": "was this basically copied from the other file?", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378518606", "createdAt": "2020-02-12T21:20:06Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "diffHunk": "@@ -263,7 +270,50 @@ public void applyAndJournal(Supplier<JournalContext> context, RemoveSyncPointEnt\n   }\n \n   /**\n-   * stop active sync on a mount id.\n+   * Start active sync on a URI and journal the add entry.\n+   *\n+   * @param rpcContext the master rpc or no-op context\n+   * @param syncPoint sync point to be start\n+   */\n+  public void startSyncAndJournal(RpcContext rpcContext, AlluxioURI syncPoint)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a022ccaee8e5d22b09e8c1ea7455d75cba963280"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUzNjM3OA==", "bodyText": "yep, pretty much", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378536378", "createdAt": "2020-02-12T21:57:31Z", "author": {"login": "madanadit"}, "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "diffHunk": "@@ -263,7 +270,50 @@ public void applyAndJournal(Supplier<JournalContext> context, RemoveSyncPointEnt\n   }\n \n   /**\n-   * stop active sync on a mount id.\n+   * Start active sync on a URI and journal the add entry.\n+   *\n+   * @param rpcContext the master rpc or no-op context\n+   * @param syncPoint sync point to be start\n+   */\n+  public void startSyncAndJournal(RpcContext rpcContext, AlluxioURI syncPoint)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxODYwNg=="}, "originalCommit": {"oid": "a022ccaee8e5d22b09e8c1ea7455d75cba963280"}, "originalPosition": 171}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTg4MDE0OnYy", "diffSide": "RIGHT", "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMTozMDoxMlrOFo_PFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMTo1ODo1NFrOFpAEOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUyMzQxMg==", "bodyText": "NIT: can we say something like \"Failed to stop sync point  because it is not mounted.\"", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378523412", "createdAt": "2020-02-12T21:30:12Z", "author": {"login": "gpang"}, "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "diffHunk": "@@ -272,50 +322,41 @@ public void stopSyncForMount(long mountId) throws InvalidPathException {\n     if (mFilterMap.containsKey(mountId)) {\n       List<AlluxioURI> toBeDeleted = new ArrayList<>(mFilterMap.get(mountId));\n       for (AlluxioURI uri : toBeDeleted) {\n-        stopSyncInternal(uri, mountId);\n+        stopSyncAndJournal(RpcContext.NOOP, uri);\n       }\n     }\n   }\n \n   /**\n-   * Perform various checks of stopping a sync point.\n-   *\n-   * @param syncPoint sync point to stop\n-   * @return the path resolution result if successfully passed all checks\n-   */\n-\n-  @Nullable\n-  public MountTable.Resolution resolveSyncPoint(AlluxioURI syncPoint) throws InvalidPathException {\n-    if (!mSyncPathList.contains(syncPoint)) {\n-      LOG.debug(\"syncPoint not found {}\", syncPoint.getPath());\n-      return null;\n-    }\n-    MountTable.Resolution resolution = mMountTable.resolve(syncPoint);\n-    return resolution;\n-  }\n-  /**\n-   * stop active sync on a URI.\n+   * Stop active sync on a URI and journal the remove entry.\n    *\n+   * @param rpcContext the master rpc or no-op context\n    * @param syncPoint sync point to be stopped\n-   * @param mountId mountId\n    */\n-  public void stopSyncInternal(AlluxioURI syncPoint, long mountId) {\n-    try (LockResource r = new LockResource(mSyncManagerLock)) {\n+  public void stopSyncAndJournal(RpcContext rpcContext, AlluxioURI syncPoint)\n+      throws InvalidPathException {\n+    try (LockResource r = new LockResource(mLock)) {\n+      MountTable.Resolution resolution = mMountTable.resolve(syncPoint);\n+      if (resolution == null) {\n+        throw new InvalidPathException(syncPoint + \" is not a sync point.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a022ccaee8e5d22b09e8c1ea7455d75cba963280"}, "originalPosition": 254}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUzNzAxNg==", "bodyText": "done", "url": "https://github.com/Alluxio/alluxio/pull/10869#discussion_r378537016", "createdAt": "2020-02-12T21:58:54Z", "author": {"login": "madanadit"}, "path": "core/server/master/src/main/java/alluxio/master/file/activesync/ActiveSyncManager.java", "diffHunk": "@@ -272,50 +322,41 @@ public void stopSyncForMount(long mountId) throws InvalidPathException {\n     if (mFilterMap.containsKey(mountId)) {\n       List<AlluxioURI> toBeDeleted = new ArrayList<>(mFilterMap.get(mountId));\n       for (AlluxioURI uri : toBeDeleted) {\n-        stopSyncInternal(uri, mountId);\n+        stopSyncAndJournal(RpcContext.NOOP, uri);\n       }\n     }\n   }\n \n   /**\n-   * Perform various checks of stopping a sync point.\n-   *\n-   * @param syncPoint sync point to stop\n-   * @return the path resolution result if successfully passed all checks\n-   */\n-\n-  @Nullable\n-  public MountTable.Resolution resolveSyncPoint(AlluxioURI syncPoint) throws InvalidPathException {\n-    if (!mSyncPathList.contains(syncPoint)) {\n-      LOG.debug(\"syncPoint not found {}\", syncPoint.getPath());\n-      return null;\n-    }\n-    MountTable.Resolution resolution = mMountTable.resolve(syncPoint);\n-    return resolution;\n-  }\n-  /**\n-   * stop active sync on a URI.\n+   * Stop active sync on a URI and journal the remove entry.\n    *\n+   * @param rpcContext the master rpc or no-op context\n    * @param syncPoint sync point to be stopped\n-   * @param mountId mountId\n    */\n-  public void stopSyncInternal(AlluxioURI syncPoint, long mountId) {\n-    try (LockResource r = new LockResource(mSyncManagerLock)) {\n+  public void stopSyncAndJournal(RpcContext rpcContext, AlluxioURI syncPoint)\n+      throws InvalidPathException {\n+    try (LockResource r = new LockResource(mLock)) {\n+      MountTable.Resolution resolution = mMountTable.resolve(syncPoint);\n+      if (resolution == null) {\n+        throw new InvalidPathException(syncPoint + \" is not a sync point.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUyMzQxMg=="}, "originalCommit": {"oid": "a022ccaee8e5d22b09e8c1ea7455d75cba963280"}, "originalPosition": 254}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2179, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}