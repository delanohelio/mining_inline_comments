{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNjQ3NTkz", "number": 10868, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMDoyNTo1NFrODfAneQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMDoyNzo0NVrODfApAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODQyNTUzOnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMDoyNTo1NFrOFod_eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMDoyNTo1NFrOFod_eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3ODc0NA==", "bodyText": "Good catch", "url": "https://github.com/Alluxio/alluxio/pull/10868#discussion_r377978744", "createdAt": "2020-02-12T00:25:54Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheFileInStream.java", "diffHunk": "@@ -112,12 +112,13 @@ public int read(byte[] b, int off, int len) throws IOException {\n       return -1;\n     }\n     int bytesRead = 0;\n+    long lengthToRead = Math.min(len, mStatus.getLength() - mPosition);\n     // for each page, check if it is available in the cache\n-    while (bytesRead < len && mPosition < mStatus.getLength()) {\n+    while (bytesRead < lengthToRead) {\n       long currentPage = mPosition / mPageSize;\n       int currentPageOffset = (int) (mPosition % mPageSize);\n-      int bytesLeftInPage = (int) Math.min(mPageSize - currentPageOffset, len - bytesRead);\n-      PageId pageId = new PageId(mStatus.getFileId(), currentPage);\n+      int bytesLeftInPage = (int) Math.min(mPageSize - currentPageOffset, lengthToRead - bytesRead);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8356f8da93560af872e511a07d8bc6ae1ba16aa0"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODQyNzU2OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/RocksPageStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMDoyNzowMlrOFoeAxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMTowNzozN1rOFoes-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3OTA3OQ==", "bodyText": "Is it intentional to reverse the key order?", "url": "https://github.com/Alluxio/alluxio/pull/10868#discussion_r377979079", "createdAt": "2020-02-12T00:27:02Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/RocksPageStore.java", "diffHunk": "@@ -151,9 +155,10 @@ public void close() {\n   }\n \n   private static byte[] getKeyFromPageId(PageId pageId) {\n-    ByteBuffer buf = ByteBuffer.allocate(KEY_LEN);\n-    buf.putLong(pageId.getFileId());\n+    byte[] fileId = pageId.getFileId().getBytes();\n+    ByteBuffer buf = ByteBuffer.allocate(Long.BYTES + fileId.length);\n     buf.putLong(pageId.getPageIndex());\n+    buf.put(fileId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8356f8da93560af872e511a07d8bc6ae1ba16aa0"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk5MDM5NA==", "bodyText": "yeah, it is easier to read the rest of the buffer as string when we decode the page id from byte array.", "url": "https://github.com/Alluxio/alluxio/pull/10868#discussion_r377990394", "createdAt": "2020-02-12T01:07:37Z", "author": {"login": "bf8086"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/RocksPageStore.java", "diffHunk": "@@ -151,9 +155,10 @@ public void close() {\n   }\n \n   private static byte[] getKeyFromPageId(PageId pageId) {\n-    ByteBuffer buf = ByteBuffer.allocate(KEY_LEN);\n-    buf.putLong(pageId.getFileId());\n+    byte[] fileId = pageId.getFileId().getBytes();\n+    ByteBuffer buf = ByteBuffer.allocate(Long.BYTES + fileId.length);\n     buf.putLong(pageId.getPageIndex());\n+    buf.put(fileId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3OTA3OQ=="}, "originalCommit": {"oid": "8356f8da93560af872e511a07d8bc6ae1ba16aa0"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODQyOTQ0OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/RocksPageStore.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMDoyNzo0NVrOFoeB0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMToxNTowMFrOFoe0Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3OTM0Nw==", "bodyText": "Do you know how much more expensive this is compared to getLong?", "url": "https://github.com/Alluxio/alluxio/pull/10868#discussion_r377979347", "createdAt": "2020-02-12T00:27:45Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/RocksPageStore.java", "diffHunk": "@@ -163,12 +168,12 @@ public void close() {\n    */\n   @Nullable\n   private static PageId getPageIdFromKey(byte[] key) {\n-    if (key.length != KEY_LEN) {\n+    if (key.length < Long.BYTES) {\n       return null;\n     }\n     ByteBuffer buf = ByteBuffer.wrap(key);\n-    long fileId = buf.getLong();\n     long pageIndex = buf.getLong();\n+    String fileId = Charset.defaultCharset().decode(buf).toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8356f8da93560af872e511a07d8bc6ae1ba16aa0"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk5MTQzMw==", "bodyText": "Probably a lot more expensive. Not sure how much it impact the overall performance though.", "url": "https://github.com/Alluxio/alluxio/pull/10868#discussion_r377991433", "createdAt": "2020-02-12T01:11:45Z", "author": {"login": "bf8086"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/RocksPageStore.java", "diffHunk": "@@ -163,12 +168,12 @@ public void close() {\n    */\n   @Nullable\n   private static PageId getPageIdFromKey(byte[] key) {\n-    if (key.length != KEY_LEN) {\n+    if (key.length < Long.BYTES) {\n       return null;\n     }\n     ByteBuffer buf = ByteBuffer.wrap(key);\n-    long fileId = buf.getLong();\n     long pageIndex = buf.getLong();\n+    String fileId = Charset.defaultCharset().decode(buf).toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3OTM0Nw=="}, "originalCommit": {"oid": "8356f8da93560af872e511a07d8bc6ae1ba16aa0"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk5MjI3NQ==", "bodyText": "yeah something we can keep in mind if performance is an issue", "url": "https://github.com/Alluxio/alluxio/pull/10868#discussion_r377992275", "createdAt": "2020-02-12T01:15:00Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/store/RocksPageStore.java", "diffHunk": "@@ -163,12 +168,12 @@ public void close() {\n    */\n   @Nullable\n   private static PageId getPageIdFromKey(byte[] key) {\n-    if (key.length != KEY_LEN) {\n+    if (key.length < Long.BYTES) {\n       return null;\n     }\n     ByteBuffer buf = ByteBuffer.wrap(key);\n-    long fileId = buf.getLong();\n     long pageIndex = buf.getLong();\n+    String fileId = Charset.defaultCharset().decode(buf).toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3OTM0Nw=="}, "originalCommit": {"oid": "8356f8da93560af872e511a07d8bc6ae1ba16aa0"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2175, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}