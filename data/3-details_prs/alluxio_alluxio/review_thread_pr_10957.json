{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NzAxMzkx", "number": 10957, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTo0NzoyMlrODhk8Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODowMzo1N1rODhoANw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTM0ODE4OnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/templates/_helpers.tpl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTo0NzoyMlrOFsYrbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTo0NzoyMlrOFsYrbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4NTk5Nw==", "bodyText": "Have a separate section for this journal formatting job. The resource should be different from a normal master container.", "url": "https://github.com/Alluxio/alluxio/pull/10957#discussion_r382085997", "createdAt": "2020-02-20T15:47:22Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/_helpers.tpl", "diffHunk": "@@ -119,6 +119,28 @@ resources:\n     {{- end }}\n {{- end -}}\n \n+{{- define \"alluxio.journal.format.resources\" -}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c5398960649090574bf5ab7b78b36bbe99c3585"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTM0OTQ1OnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/templates/job/format-journal-job.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTo0Nzo0M1rOFsYsSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTo0Nzo0M1rOFsYsSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4NjIxOA==", "bodyText": "Have multiple Jobs each taking care of one master", "url": "https://github.com/Alluxio/alluxio/pull/10957#discussion_r382086218", "createdAt": "2020-02-20T15:47:43Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/job/format-journal-job.yaml", "diffHunk": "@@ -17,89 +18,82 @@\n {{- $isSingleUfsLocal := and $isUfsLocal $isSingleMaster }}\n {{- $needJournalVolume := or $isEmbedded $isUfsLocal }}\n {{- $release := .Release }}\n+{{- $name := include \"alluxio.name\" . }}\n+{{- $fullName := include \"alluxio.fullname\" . }}\n+{{- $chart := include \"alluxio.chart\" . }}\n+{{- range $i := until $masterCount }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c5398960649090574bf5ab7b78b36bbe99c3585"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTM1MTA0OnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/templates/job/format-journal-job.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTo0ODoxMFrOFsYtWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTo0ODoxMFrOFsYtWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4NjQ5MQ==", "bodyText": "This takes care of only local.", "url": "https://github.com/Alluxio/alluxio/pull/10957#discussion_r382086491", "createdAt": "2020-02-20T15:48:10Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/job/format-journal-job.yaml", "diffHunk": "@@ -17,89 +18,82 @@\n {{- $isSingleUfsLocal := and $isUfsLocal $isSingleMaster }}\n {{- $needJournalVolume := or $isEmbedded $isUfsLocal }}\n {{- $release := .Release }}\n+{{- $name := include \"alluxio.name\" . }}\n+{{- $fullName := include \"alluxio.fullname\" . }}\n+{{- $chart := include \"alluxio.chart\" . }}\n+{{- range $i := until $masterCount }}\n apiVersion: batch/v1\n kind: Job\n metadata:\n-  name: {{ template \"alluxio.fullname\" . }}-format-master\n+  name: {{ $fullName }}-format-master-{{ $i }}\n   labels:\n-    name: {{ template \"alluxio.fullname\" . }}-format-master\n-    app: {{ template \"alluxio.name\" . }}\n-    chart: {{ template \"alluxio.chart\" . }}\n+    name: {{ $fullName }}-format-master-{{ $i }}\n+    app: {{ $name }}\n+    chart: {{ $chart }}\n     release: {{ $release.Name }}\n     heritage: {{ $release.Service }}\n     role: alluxio-master\n spec:\n-  activeDeadlineSeconds: {{ .Values.journal.format.job.activeDeadlineSeconds }}\n-  ttlSecondsAfterFinished: {{ .Values.journal.format.job.ttlSecondsAfterFinished }}\n+  activeDeadlineSeconds: {{ $root.Values.journal.format.job.activeDeadlineSeconds }}\n+  ttlSecondsAfterFinished: {{ $root.Values.journal.format.job.ttlSecondsAfterFinished }}\n   template:\n     spec:\n       containers:\n         - name: alluxio-master\n-          image: {{ .Values.image }}:{{ .Values.imageTag }}\n-          imagePullPolicy: {{ .Values.imagePullPolicy }}\n-          {{- if .Values.master.resources  }}\n-          resources:\n-            {{- if .Values.master.resources.limits }}\n-            limits:\n-              cpu: {{ .Values.master.resources.limits.cpu }}\n-              memory: {{ .Values.master.resources.limits.memory }}\n-            {{- end }}\n-            {{- if .Values.master.resources.requests }}\n-            requests:\n-              cpu: {{ .Values.master.resources.requests.cpu }}\n-              memory: {{ .Values.master.resources.requests.memory }}\n-            {{- end }}\n+          image: {{ $root.Values.image }}:{{ $root.Values.imageTag }}\n+          imagePullPolicy: {{ $root.Values.imagePullPolicy }}\n+          securityContext:\n+            runAsUser: {{ $root.Values.user }}\n+            runAsGroup: {{ $root.Values.group }}\n+          {{- if $root.Values.journal.format.resources }}\n+{{ include \"alluxio.journal.format.resources\" $root | indent 10 }}\n           {{- end }}\n           command: [\"/opt/alluxio/bin/alluxio\"]\n-          args: [\"formatMasters\"]\n+          args: [\"formatJournal\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c5398960649090574bf5ab7b78b36bbe99c3585"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTM2NjIxOnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/templates/job/format-journal-job.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTo1MToyNVrOFsY2WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTo1MToyNVrOFsY2WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4ODc5Mg==", "bodyText": "This is required in HA, otherwise the following error will be thrown\n2020-02-20 15:50:19,510 ERROR Format - Failed to format\njava.lang.IllegalStateException: The cluster addresses ([alluxio-master-0:19200, alluxio-master-1:19200, alluxio-master-2:19200]) must contain the local master address (alluxio-format-master-0-2pm8w:19200)\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:823)\n\tat alluxio.master.journal.raft.RaftJournalConfiguration.validate(RaftJournalConfiguration.java:77)", "url": "https://github.com/Alluxio/alluxio/pull/10957#discussion_r382088792", "createdAt": "2020-02-20T15:51:25Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/job/format-journal-job.yaml", "diffHunk": "@@ -17,89 +18,82 @@\n {{- $isSingleUfsLocal := and $isUfsLocal $isSingleMaster }}\n {{- $needJournalVolume := or $isEmbedded $isUfsLocal }}\n {{- $release := .Release }}\n+{{- $name := include \"alluxio.name\" . }}\n+{{- $fullName := include \"alluxio.fullname\" . }}\n+{{- $chart := include \"alluxio.chart\" . }}\n+{{- range $i := until $masterCount }}\n apiVersion: batch/v1\n kind: Job\n metadata:\n-  name: {{ template \"alluxio.fullname\" . }}-format-master\n+  name: {{ $fullName }}-format-master-{{ $i }}\n   labels:\n-    name: {{ template \"alluxio.fullname\" . }}-format-master\n-    app: {{ template \"alluxio.name\" . }}\n-    chart: {{ template \"alluxio.chart\" . }}\n+    name: {{ $fullName }}-format-master-{{ $i }}\n+    app: {{ $name }}\n+    chart: {{ $chart }}\n     release: {{ $release.Name }}\n     heritage: {{ $release.Service }}\n     role: alluxio-master\n spec:\n-  activeDeadlineSeconds: {{ .Values.journal.format.job.activeDeadlineSeconds }}\n-  ttlSecondsAfterFinished: {{ .Values.journal.format.job.ttlSecondsAfterFinished }}\n+  activeDeadlineSeconds: {{ $root.Values.journal.format.job.activeDeadlineSeconds }}\n+  ttlSecondsAfterFinished: {{ $root.Values.journal.format.job.ttlSecondsAfterFinished }}\n   template:\n     spec:\n       containers:\n         - name: alluxio-master\n-          image: {{ .Values.image }}:{{ .Values.imageTag }}\n-          imagePullPolicy: {{ .Values.imagePullPolicy }}\n-          {{- if .Values.master.resources  }}\n-          resources:\n-            {{- if .Values.master.resources.limits }}\n-            limits:\n-              cpu: {{ .Values.master.resources.limits.cpu }}\n-              memory: {{ .Values.master.resources.limits.memory }}\n-            {{- end }}\n-            {{- if .Values.master.resources.requests }}\n-            requests:\n-              cpu: {{ .Values.master.resources.requests.cpu }}\n-              memory: {{ .Values.master.resources.requests.memory }}\n-            {{- end }}\n+          image: {{ $root.Values.image }}:{{ $root.Values.imageTag }}\n+          imagePullPolicy: {{ $root.Values.imagePullPolicy }}\n+          securityContext:\n+            runAsUser: {{ $root.Values.user }}\n+            runAsGroup: {{ $root.Values.group }}\n+          {{- if $root.Values.journal.format.resources }}\n+{{ include \"alluxio.journal.format.resources\" $root | indent 10 }}\n           {{- end }}\n           command: [\"/opt/alluxio/bin/alluxio\"]\n-          args: [\"formatMasters\"]\n+          args: [\"formatJournal\"]\n           envFrom:\n             - configMapRef:\n-                name: {{ template \"alluxio.fullname\" . }}-config\n+                name: {{ $fullName }}-config\n+          {{- if $isHaEmbedded }}\n+          env:\n+            - name: ALLUXIO_MASTER_HOSTNAME\n+              value: {{ printf \"%v-master-%v\" $fullName $i }}\n+          {{- end }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c5398960649090574bf5ab7b78b36bbe99c3585"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTM2Nzk4OnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/templates/job/format-journal-job.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTo1MTo1MFrOFsY3eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTo1MTo1MFrOFsY3eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA4OTA4MQ==", "bodyText": "I don't think it makes much sense to retry this format command.", "url": "https://github.com/Alluxio/alluxio/pull/10957#discussion_r382089081", "createdAt": "2020-02-20T15:51:50Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/templates/job/format-journal-job.yaml", "diffHunk": "@@ -17,89 +18,82 @@\n {{- $isSingleUfsLocal := and $isUfsLocal $isSingleMaster }}\n {{- $needJournalVolume := or $isEmbedded $isUfsLocal }}\n {{- $release := .Release }}\n+{{- $name := include \"alluxio.name\" . }}\n+{{- $fullName := include \"alluxio.fullname\" . }}\n+{{- $chart := include \"alluxio.chart\" . }}\n+{{- range $i := until $masterCount }}\n apiVersion: batch/v1\n kind: Job\n metadata:\n-  name: {{ template \"alluxio.fullname\" . }}-format-master\n+  name: {{ $fullName }}-format-master-{{ $i }}\n   labels:\n-    name: {{ template \"alluxio.fullname\" . }}-format-master\n-    app: {{ template \"alluxio.name\" . }}\n-    chart: {{ template \"alluxio.chart\" . }}\n+    name: {{ $fullName }}-format-master-{{ $i }}\n+    app: {{ $name }}\n+    chart: {{ $chart }}\n     release: {{ $release.Name }}\n     heritage: {{ $release.Service }}\n     role: alluxio-master\n spec:\n-  activeDeadlineSeconds: {{ .Values.journal.format.job.activeDeadlineSeconds }}\n-  ttlSecondsAfterFinished: {{ .Values.journal.format.job.ttlSecondsAfterFinished }}\n+  activeDeadlineSeconds: {{ $root.Values.journal.format.job.activeDeadlineSeconds }}\n+  ttlSecondsAfterFinished: {{ $root.Values.journal.format.job.ttlSecondsAfterFinished }}\n   template:\n     spec:\n       containers:\n         - name: alluxio-master\n-          image: {{ .Values.image }}:{{ .Values.imageTag }}\n-          imagePullPolicy: {{ .Values.imagePullPolicy }}\n-          {{- if .Values.master.resources  }}\n-          resources:\n-            {{- if .Values.master.resources.limits }}\n-            limits:\n-              cpu: {{ .Values.master.resources.limits.cpu }}\n-              memory: {{ .Values.master.resources.limits.memory }}\n-            {{- end }}\n-            {{- if .Values.master.resources.requests }}\n-            requests:\n-              cpu: {{ .Values.master.resources.requests.cpu }}\n-              memory: {{ .Values.master.resources.requests.memory }}\n-            {{- end }}\n+          image: {{ $root.Values.image }}:{{ $root.Values.imageTag }}\n+          imagePullPolicy: {{ $root.Values.imagePullPolicy }}\n+          securityContext:\n+            runAsUser: {{ $root.Values.user }}\n+            runAsGroup: {{ $root.Values.group }}\n+          {{- if $root.Values.journal.format.resources }}\n+{{ include \"alluxio.journal.format.resources\" $root | indent 10 }}\n           {{- end }}\n           command: [\"/opt/alluxio/bin/alluxio\"]\n-          args: [\"formatMasters\"]\n+          args: [\"formatJournal\"]\n           envFrom:\n             - configMapRef:\n-                name: {{ template \"alluxio.fullname\" . }}-config\n+                name: {{ $fullName }}-config\n+          {{- if $isHaEmbedded }}\n+          env:\n+            - name: ALLUXIO_MASTER_HOSTNAME\n+              value: {{ printf \"%v-master-%v\" $fullName $i }}\n+          {{- end }}\n           volumeMounts:\n           {{- if $needJournalVolume }}\n-          - name: alluxio-journal\n-            mountPath: {{ .Values.journal.folder }}\n+            - name: alluxio-journal\n+              mountPath: {{ $root.Values.journal.folder }}\n           {{- end }}\n-          {{- if .Values.secrets }}\n-            {{- if .Values.secrets.master }}\n-              {{- range $key, $val := .Values.secrets.master }}\n-          - name: secret-{{ $key }}-volume\n-            mountPath: /secrets/{{ $val }}\n-            readOnly: true\n+          {{- if $root.Values.secrets }}\n+            {{- if $root.Values.secrets.master }}\n+              {{- range $key, $val := $root.Values.secrets.master }}\n+            - name: secret-{{ $key }}-volume\n+              mountPath: /secrets/{{ $val }}\n+              readOnly: true\n               {{- end }}\n             {{- end }}\n           {{- end }}\n-          {{- if .Values.mounts }}\n-            {{- range .Values.mounts }}\n-          - name: \"{{ .name }}\"\n-            mountPath: \"{{ .path }}\"\n+          {{- if $root.Values.mounts }}\n+            {{- range $root.Values.mounts }}\n+            - name: \"{{ .name }}\"\n+              mountPath: \"{{ .path }}\"\n             {{- end }}\n           {{- end }}\n-      restartPolicy: OnFailure\n+      restartPolicy: Never", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c5398960649090574bf5ab7b78b36bbe99c3585"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTg1MDE1OnYy", "diffSide": "RIGHT", "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODowMzo1N1rOFsdlsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNjozMzo0OVrOFss6lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE2NjQ1MA==", "bodyText": "this might be a big limitation, is there a way to get rid of this requirement? we will not be able to use AWSElasticBlockStore or GCEPersistentDisk if this is the case", "url": "https://github.com/Alluxio/alluxio/pull/10957#discussion_r382166450", "createdAt": "2020-02-20T18:03:57Z", "author": {"login": "madanadit"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -106,9 +106,10 @@ jobMaster:\n #   type: \"EMBEDDED\"\n #   folder: \"/journal\"\n journal:\n-  pvcName: alluxio-pv-claim\n   storageClass: \"standard\"\n   size: 1Gi\n+  accessModes:\n+    - ReadWriteMany # Use ReadWriteMany as the format job will access it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c5398960649090574bf5ab7b78b36bbe99c3585"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQxNzU1Ng==", "bodyText": "Makes sense. In that case we should keep using ReadWriteOnce and the format job should be called only after the master pods are deleted first.\nThis has been changed back to ReadWriteOnce.", "url": "https://github.com/Alluxio/alluxio/pull/10957#discussion_r382417556", "createdAt": "2020-02-21T06:33:49Z", "author": {"login": "jiacheliu3"}, "path": "integration/kubernetes/helm-chart/alluxio/values.yaml", "diffHunk": "@@ -106,9 +106,10 @@ jobMaster:\n #   type: \"EMBEDDED\"\n #   folder: \"/journal\"\n journal:\n-  pvcName: alluxio-pv-claim\n   storageClass: \"standard\"\n   size: 1Gi\n+  accessModes:\n+    - ReadWriteMany # Use ReadWriteMany as the format job will access it", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE2NjQ1MA=="}, "originalCommit": {"oid": "1c5398960649090574bf5ab7b78b36bbe99c3585"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1958, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}