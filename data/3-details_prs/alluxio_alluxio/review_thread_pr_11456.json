{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMDI1MjQ4", "number": 11456, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMToyNDoyNFrOD-ZWsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMToyNDoyNFrOD-ZWsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzUzNzE1OnYy", "diffSide": "RIGHT", "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMToyNDoyNFrOGYeT2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMzowNjoyNVrOGYg1Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMxNTYxMQ==", "bodyText": "Consider putting this logic into a method?", "url": "https://github.com/Alluxio/alluxio/pull/11456#discussion_r428315611", "createdAt": "2020-05-20T21:24:24Z", "author": {"login": "calvinjia"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -343,6 +359,14 @@ public ReadableByteChannel get(PageId pageId, int pageOffset) {\n         return null;\n       }\n       ReadableByteChannel ret = getPage(pageId, pageOffset);\n+      if (ret == null) {\n+        // something is wrong to read this page, let's remove it from meta store\n+        try (LockResource r2 = new LockResource(mMetaLock.writeLock())) {\n+          mMetaStore.removePage(pageId);\n+        } catch (PageNotFoundException e) {\n+          // best effort to remove this page from meta store and ignore the exception\n+        }\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49fa5f002fab7a0d2fbc094c2be4b01a241b6a39"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM1MDUwOA==", "bodyText": "Yeah I would have thought of this an integral logic of getPage method.", "url": "https://github.com/Alluxio/alluxio/pull/11456#discussion_r428350508", "createdAt": "2020-05-20T22:47:30Z", "author": {"login": "jainxrohit"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -343,6 +359,14 @@ public ReadableByteChannel get(PageId pageId, int pageOffset) {\n         return null;\n       }\n       ReadableByteChannel ret = getPage(pageId, pageOffset);\n+      if (ret == null) {\n+        // something is wrong to read this page, let's remove it from meta store\n+        try (LockResource r2 = new LockResource(mMetaLock.writeLock())) {\n+          mMetaStore.removePage(pageId);\n+        } catch (PageNotFoundException e) {\n+          // best effort to remove this page from meta store and ignore the exception\n+        }\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMxNTYxMQ=="}, "originalCommit": {"oid": "49fa5f002fab7a0d2fbc094c2be4b01a241b6a39"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM1NjkxMQ==", "bodyText": "I considered that too initially. but one key reason I still leave this in get() is: to make all locking related code in one place --- in here we are acquiring mMetaLock to clean up. Keeping Locking hierarchy clean and easy to track is more important IMO", "url": "https://github.com/Alluxio/alluxio/pull/11456#discussion_r428356911", "createdAt": "2020-05-20T23:06:25Z", "author": {"login": "apc999"}, "path": "core/client/fs/src/main/java/alluxio/client/file/cache/LocalCacheManager.java", "diffHunk": "@@ -343,6 +359,14 @@ public ReadableByteChannel get(PageId pageId, int pageOffset) {\n         return null;\n       }\n       ReadableByteChannel ret = getPage(pageId, pageOffset);\n+      if (ret == null) {\n+        // something is wrong to read this page, let's remove it from meta store\n+        try (LockResource r2 = new LockResource(mMetaLock.writeLock())) {\n+          mMetaStore.removePage(pageId);\n+        } catch (PageNotFoundException e) {\n+          // best effort to remove this page from meta store and ignore the exception\n+        }\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMxNTYxMQ=="}, "originalCommit": {"oid": "49fa5f002fab7a0d2fbc094c2be4b01a241b6a39"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1771, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}