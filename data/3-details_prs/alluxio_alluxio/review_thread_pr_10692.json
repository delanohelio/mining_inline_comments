{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4ODM5NTQy", "number": 10692, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwMTowMzo0M1rODVk8mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwMzo0NDoxOFrODVlpYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTUyMDI2OnYy", "diffSide": "RIGHT", "path": "core/common/src/main/java/alluxio/util/CommonUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwMTowMzo0M1rOFZ4aVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QxNDo0NjowNlrOFaBmsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY4Mjk2NA==", "bodyText": "Will this be a problem if list.size is smaller than numLists + 1?", "url": "https://github.com/Alluxio/alluxio/pull/10692#discussion_r362682964", "createdAt": "2020-01-03T01:03:43Z", "author": {"login": "calvinjia"}, "path": "core/common/src/main/java/alluxio/util/CommonUtils.java", "diffHunk": "@@ -717,5 +717,27 @@ private synchronized T firstTime() {\n     };\n   }\n \n+  /**\n+   * Partitions a list into numLists many lists each with around list.size() / numLists elements.\n+   *\n+   * @param list the list to partition\n+   * @param numLists number of lists to return\n+   * @param <T> the object type\n+   * @return partitioned list\n+   */\n+  public static <T> List<List<T>> partition(List<T> list, int numLists) {\n+    ArrayList<List<T>> result = new ArrayList<>(numLists);\n+\n+    for (int i = 0; i < numLists; i++) {\n+      result.add(new ArrayList<>(list.size() / numLists + 1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd79fe28af1415dbae9d7a3fc8111a2503461f95"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjgzMzU4Ng==", "bodyText": "divide happens before + 1 so it's guaranteed to be at least 1 (as long as numLists is > 0).\nBut more importantly, new ArrayList<>(0) is fine because it's just initial capacity.", "url": "https://github.com/Alluxio/alluxio/pull/10692#discussion_r362833586", "createdAt": "2020-01-03T14:46:06Z", "author": {"login": "bradyoo"}, "path": "core/common/src/main/java/alluxio/util/CommonUtils.java", "diffHunk": "@@ -717,5 +717,27 @@ private synchronized T firstTime() {\n     };\n   }\n \n+  /**\n+   * Partitions a list into numLists many lists each with around list.size() / numLists elements.\n+   *\n+   * @param list the list to partition\n+   * @param numLists number of lists to return\n+   * @param <T> the object type\n+   * @return partitioned list\n+   */\n+  public static <T> List<List<T>> partition(List<T> list, int numLists) {\n+    ArrayList<List<T>> result = new ArrayList<>(numLists);\n+\n+    for (int i = 0; i < numLists; i++) {\n+      result.add(new ArrayList<>(list.size() / numLists + 1));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY4Mjk2NA=="}, "originalCommit": {"oid": "fd79fe28af1415dbae9d7a3fc8111a2503461f95"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTUyMjM1OnYy", "diffSide": "LEFT", "path": "shell/src/main/java/alluxio/cli/fs/command/DistributedLoadCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwMTowNjoyOVrOFZ4bng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwMzozNToxMVrOFZ5Y2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY4MzI5NA==", "bodyText": "Should the replication options be removed?", "url": "https://github.com/Alluxio/alluxio/pull/10692#discussion_r362683294", "createdAt": "2020-01-03T01:06:29Z", "author": {"login": "calvinjia"}, "path": "shell/src/main/java/alluxio/cli/fs/command/DistributedLoadCommand.java", "diffHunk": "@@ -148,11 +138,6 @@ public String getCommandName() {\n     return \"distributedLoad\";\n   }\n \n-  @Override\n-  public Options getOptions() {\n-    return new Options().addOption(REPLICATION_OPTION).addOption(ACTIVE_JOBS_OPTION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd79fe28af1415dbae9d7a3fc8111a2503461f95"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY5ODk2OQ==", "bodyText": "please also update getUsage ()", "url": "https://github.com/Alluxio/alluxio/pull/10692#discussion_r362698969", "createdAt": "2020-01-03T03:35:11Z", "author": {"login": "apc999"}, "path": "shell/src/main/java/alluxio/cli/fs/command/DistributedLoadCommand.java", "diffHunk": "@@ -148,11 +138,6 @@ public String getCommandName() {\n     return \"distributedLoad\";\n   }\n \n-  @Override\n-  public Options getOptions() {\n-    return new Options().addOption(REPLICATION_OPTION).addOption(ACTIVE_JOBS_OPTION);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY4MzI5NA=="}, "originalCommit": {"oid": "fd79fe28af1415dbae9d7a3fc8111a2503461f95"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTYzNDkxOnYy", "diffSide": "RIGHT", "path": "job/server/src/main/java/alluxio/job/plan/load/LoadDefinition.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwMzo0NDoxOFrOFZ5cFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QwMzo0NDoxOFrOFZ5cFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY5OTc5OA==", "bodyText": "nit: I would remove the empty line 57. We try to keep the src code concise and compact", "url": "https://github.com/Alluxio/alluxio/pull/10692#discussion_r362699798", "createdAt": "2020-01-03T03:44:18Z", "author": {"login": "apc999"}, "path": "job/server/src/main/java/alluxio/job/plan/load/LoadDefinition.java", "diffHunk": "@@ -54,6 +55,8 @@\n   private static final Logger LOG = LoggerFactory.getLogger(LoadDefinition.class);\n   private static final int MAX_BUFFER_SIZE = 500 * Constants.MB;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd79fe28af1415dbae9d7a3fc8111a2503461f95"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2188, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}