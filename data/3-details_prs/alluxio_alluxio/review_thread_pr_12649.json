{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNzMxOTk1", "number": 12649, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMDozMjoyNVrOFF367g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDoxOToyM1rOFGYTag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNzAzNDA2OnYy", "diffSide": "RIGHT", "path": "core/server/common/src/main/java/alluxio/master/journal/AsyncJournalWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMDozMjoyNVrOIGmNPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDoxNjowNlrOIHXYkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4ODM1MQ==", "bodyText": "(nit) consider using SamplingLogger if the error happens too frequently.", "url": "https://github.com/Alluxio/alluxio/pull/12649#discussion_r543788351", "createdAt": "2020-12-16T00:32:25Z", "author": {"login": "bf8086"}, "path": "core/server/common/src/main/java/alluxio/master/journal/AsyncJournalWriter.java", "diffHunk": "@@ -308,6 +312,10 @@ private void doFlush() {\n           }\n         }\n       } catch (IOException | JournalClosedException exc) {\n+        // Add the error logging here since the actual flush error may be overwritten\n+        // by the future meaningless ratis.protocol.AlreadyClosedException\n+        // use debug level logging because the exception may be annoying in some cases\n+        LOG.debug(\"Failed to flush journal entry\", exc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f4ea64c084ee3147592ed87119b380e4fd025e3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU5NDA2NQ==", "bodyText": "Good advice! I don't know we have that convenient logging way!", "url": "https://github.com/Alluxio/alluxio/pull/12649#discussion_r544594065", "createdAt": "2020-12-16T20:16:06Z", "author": {"login": "LuQQiu"}, "path": "core/server/common/src/main/java/alluxio/master/journal/AsyncJournalWriter.java", "diffHunk": "@@ -308,6 +312,10 @@ private void doFlush() {\n           }\n         }\n       } catch (IOException | JournalClosedException exc) {\n+        // Add the error logging here since the actual flush error may be overwritten\n+        // by the future meaningless ratis.protocol.AlreadyClosedException\n+        // use debug level logging because the exception may be annoying in some cases\n+        LOG.debug(\"Failed to flush journal entry\", exc);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc4ODM1MQ=="}, "originalCommit": {"oid": "2f4ea64c084ee3147592ed87119b380e4fd025e3"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjMzOTYyOnYy", "diffSide": "RIGHT", "path": "core/server/common/src/main/java/alluxio/master/journal/AsyncJournalWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDoxOToyM1rOIHXgZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMToyMTo1NFrOIHZr4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU5NjA2OQ==", "bodyText": "NIT: the sampling logger works by treating every log template as a separate error. I don't know if this will be useful, but if we use the template SAMPLING_LOG.warn(\"Failed to flush journal entry: \" + exc.getMessage(), exc); , we would get to see the warning log of each cause, once every 30s. This may help if there are potentially different causes of journal flush errors, and we would still not miss any cause.", "url": "https://github.com/Alluxio/alluxio/pull/12649#discussion_r544596069", "createdAt": "2020-12-16T20:19:23Z", "author": {"login": "gpang"}, "path": "core/server/common/src/main/java/alluxio/master/journal/AsyncJournalWriter.java", "diffHunk": "@@ -308,6 +316,9 @@ private void doFlush() {\n           }\n         }\n       } catch (IOException | JournalClosedException exc) {\n+        // Add the error logging here since the actual flush error may be overwritten\n+        // by the future meaningless ratis.protocol.AlreadyClosedException\n+        SAMPLING_LOG.warn(\"Failed to flush journal entry\", exc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "628c223132014441ca93b64348bce77fd9b2a84f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzMTc3OQ==", "bodyText": "Good catch! in the previous way, the different error messages may still be ignored.", "url": "https://github.com/Alluxio/alluxio/pull/12649#discussion_r544631779", "createdAt": "2020-12-16T21:21:54Z", "author": {"login": "LuQQiu"}, "path": "core/server/common/src/main/java/alluxio/master/journal/AsyncJournalWriter.java", "diffHunk": "@@ -308,6 +316,9 @@ private void doFlush() {\n           }\n         }\n       } catch (IOException | JournalClosedException exc) {\n+        // Add the error logging here since the actual flush error may be overwritten\n+        // by the future meaningless ratis.protocol.AlreadyClosedException\n+        SAMPLING_LOG.warn(\"Failed to flush journal entry\", exc);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU5NjA2OQ=="}, "originalCommit": {"oid": "628c223132014441ca93b64348bce77fd9b2a84f"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 962, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}